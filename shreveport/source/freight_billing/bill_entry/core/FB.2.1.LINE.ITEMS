*     SUBROUTINE FB.2.1.LINE.ITEMS(LI.CODES,QI,LINE.ITEMS,CARRIER.CHG,OPT,F.PCIN,F.PCOUT,VIN,VOUT)   ; * JMK02
      SUBROUTINE FB.2.1.LINE.ITEMS(LI.CODES,QI,LINE.ITEMS,CARRIER.CHG,OPT,F.PCIN,F.PCOUT,F.TABLES,VIN,VOUT)    ; * JMK02
*
* SUBROUTINE TO ENTER BILL LINE ITEMS
*
* FREIGHT BILLING PACKAGE
*
* AUTHOR: OWEN HOLMAN
* DATE: FEBRUARY 16, 1995
*
* THIS PROGRAM IS A PROPRIETARY PRODUCT OF AUTOMATED FREIGHT SYSTEMS
* AND MAY NOT BE USED, COPIED OR MODIFIED WITHOUT THE EXPRESS
* WRITTEN CONSENT OF SAME.
*
********************************************************************
* 080803 - JMK01 - CORRECT DISCOUNT PERCENT CALCULATION
* 091009 - JMK02 - T091133 - Unable to key bills in a traffic survey
* 110413 - JMK03 - Add call to RWXL
* 110413 - JMK04 - SysAid#7601 - Traffic Survey - Accessorials
*
*
$INCLUDE PROG.ADMIN INC_OPTIONS
$INCLUDE FILE.DEFS INC_CLIENTS
      COMMON PROG.PARAMS(24)
      EQU CH.NUM TO PROG.PARAMS(1)
      EQU USER TO PROG.PARAMS(2)
      EQU SERVER.NAME TO PROG.PARAMS(3)
*
* Initialize variables
*
      VALID.CLASSES=50:@VM:55:@VM:60:@VM:65:@VM:70:@VM:77:@VM:85:@VM:92:@VM:100:@VM:110:@VM:125:@VM:150:@VM:175:@VM:200:@VM:250:@VM:300:@VM:400:@VM:500
      PROMPT''
      TASKMAN=VIN<1>
      READ.WAD.FLAG=0
      ORIG.ZIP=VIN<2>
      DEST.ZIP=VIN<3>
      COMP.WITH.CZAR=VIN<4>
      CH.NUM=VIN<5>
      ORIG.INFO=VIN<6>[1,40]
      DEST.INFO=VIN<7>[1,40]
      BREAK.OUT.OF.LOOP=0
      TARIFF.ACT.NAME=VIN<8>
      TARIFF.EFF.DATE=VIN<9>
      TARIFF.FACTOR=VIN<10>
      TARIFF.DRIVER=VIN<11>
      ZIP.COUNT=VIN<13>
      MILEAGE=VIN<14>                    ; * JMB
      TOTAL.TL.CHARGE=0                  ; * JMB sum of all TL* codes in the list. When this is not zero, display COST.PER.MILE
      COST.PER.MILE=0                    ; * JMB cost per mile calculated as TOTAL.TL.CHARGE / MILEAGE
      OLD.ZIP.COUNT=0
      IF COMP.WITH.CZAR THEN TASKMAN=0   ; ** Don't Go to CZAR if "N"
      PROG.NAME='FB.2.1.LINE.ITEMS'
      TOTAL.CAR.CHARGES=0
      TOTAL.FRT.CHARGES=0                ; * JMK01
      TOTAL.DEF.CHARGES=0
      TOTAL.AFS.CHARGES=0
      TOTAL.NOFACTOR=0
      TOTAL.WEIGHT=0
      TOTAL.PIECES=00
      MAX.DISC.WEIGHT=20000
*      USER=OCONV(SYSTEM(19),'MCU')
      CALL GET.USER(USER)
      CDN.ROUTE=0                        ; * JMK02
      IF NOT(NUM(ORIG.ZIP)) THEN CDN.ROUTE=1       ; * JMK02
      IF NOT(NUM(DEST.ZIP)) THEN CDN.ROUTE=1       ; * JMK02
      IF TARIFF.ACT.NAME='AFS500' AND CDN.ROUTE=1 THEN       ; * JMK02
         TARIFF.ACT.NAME='AFS525'        ; * JMK02
      END                                ; * JMK02
*
* Open files
*
      BEGIN CASE
         CASE OPT='I'
            MODE='EDIT'
            INQUIRE=1
         CASE OPT='E'
            MODE='INPUT'
            INQUIRE=0
         CASE OPT='V'
            MODE='INPUT'
            INQUIRE=0
      END CASE
      LN=0
*
*DISPLAY SCREEN HEADINGS
*
      GOSUB 8900
*
* Start input
*
      GOSUB 9000
*
* Enter Line Number
*
100:  IF MODE='INPUT' THEN
         IF BREAK.OUT.OF.LOOP THEN
            BREAK.OUT.OF.LOOP=0
            GOSUB 9200
            HELP="Enter Line Number, <RETURN>=Done, 'X'=Back to 1st Screen, 'EX'=Exit."
            CALL GEN.IN(0,22,'Enter line number. ##','',Q,0,2,'','',0,-2,22,0,QI,HELP,0,23)
            GO 110
         END
         LN=LN+1
         QI=LN
*       IF QI='2' AND LINE.ITEMS<1,1>='MIN' THEN
*         MODE='EDIT'
*         GO 100
*       END
         IF LN GT 14 THEN
            MODE='EDIT'
            GO 100
         END
      END ELSE
         GOSUB 9200
         HELP="Enter Line Number, <RETURN>=Done, 'X'=Back to 1st Screen, 'EX'=Exit."
         CALL GEN.IN(0,22,'Enter line number. ##','',Q,0,2,'','',
            0 ,-2,22,0,QI,HELP,0,23)
      END
110:  QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            GOTO 7900
         CASE QI='X'
            GO 9980
         CASE QI='EX'
            GO 9990
         CASE NUM(QI)
            IF INQUIRE THEN
               CALL ELINE('Can not access detail in inquiry!')
            END ELSE
               IF QI > 1 THEN
                  IF LINE.ITEMS<1,QI-1>='' THEN
                     IF LINE.ITEMS<14> > 99 THEN
                        GO 800
                     END ELSE
                        CALL ELINE("Cannot Skip a line.  You must select the next blank line")
                     END
                     GO 100
                  END
*OH           IF LINE.ITEMS<1,1>='MIN' THEN
*OH             CALL ELINE("Cannot Add line if line 1 is a MIN(imum) Charge")
*OH             GO 100
*OH           END
               END
               SEL=QI
               GOSUB 8000
*           IF LINE.ITEMS<1,QI>='' THEN MODE='INPUT'
               IF QI='X' AND SEL=1 THEN GO 9980
               IF OPT='V' & QI='' THEN GOTO 7900
            END
      END CASE
      GOTO 100
*
* End of program
*
7900: * Get Discount
*    Take this opportunity to send bill data to CZAR
      TIMES=DCOUNT(LINE.ITEMS<1>,@VM)
      TRUCKLOAD=0
      FOR X = 1 TO TIMES UNTIL TRUCKLOAD=1
         CODE=LINE.ITEMS<1,X>
         IF CODE[1,2]='TL' THEN TRUCKLOAD=1
      NEXT X
************************************************************************
      IF NOT(TRUCKLOAD) AND TASKMAN THEN           ; * Send Bills to CZAR
         LINE.IN=''
*DF        IF NOT(NUM(ORIG.ZIP)) OR NOT(NUM(DEST.ZIP)) THEN
*DF          LINE.IN<1,7>='AFS525'
*DF        END ELSE
*DF          LINE.IN<1,7>='AFS500'
*DF        END
         LINE.IN<1,7>=TARIFF.ACT.NAME
         LINE.IN<1,2>=ORIG.ZIP
         LINE.IN<1,3>=DEST.ZIP
         NUM.DETAILS=DCOUNT(LINE.ITEMS<1>,CHAR(253))
         CZAR.DET=0
         FOR X = 1 TO NUM.DETAILS
            CODE=LINE.ITEMS<1,X>
            CLASS=LINE.ITEMS<5,X>
            WEIGHT=LINE.ITEMS<6,X>
            IF (CODE='FRT' OR CODE='TMIN') & CLASS#'' & WEIGHT#'' THEN
               LINE.IN<1,4,-1>=CLASS
               LINE.IN<1,5,-1>=WEIGHT
               LINE.IN<1,6,-1>=X
               CZAR.DET=CZAR.DET+1
            END
         NEXT X
         IF CZAR.DET=0 THEN              ; * CZAR has nothing to do
            TRUCKLOAD=1                  ; * Simulate Truckload
            GO 7905
         END
         LINE.IN<1,8>=TARIFF.EFF.DATE
         LINE.IN<1,9>=TARIFF.FACTOR
         DIN=LINE.IN
***Send Information to Taskman
*KD
*        VIN='SEND'                      ; * JMK02
         VIN='BOTH'                      ; * JMK02

         VIN<2>=MAX.DISC.WEIGHT
*DF          CALL MWB(VIN,VOUT,DIN,DOUT,F.PCIN,F.PCOUT)
*       CALL @TARIFF.DRIVER(VIN,VOUT,DIN,TDIN,DOUT,F.PCIN,F.PCOUT)
         IF TARIFF.DRIVER='MWB' THEN

            IF CDN.ROUTE THEN AFS.TARIFF.NAME='AFS525' ELSE AFS.TARIFF.NAME='AFS500'       ; * JMK02
            DINNATT=DCOUNT(DIN,@AM)      ; * JMK02
            FOR DINATT=1 TO DINNATT      ; * JMK02
               DIN<DINATT,7>=AFS.TARIFF.NAME       ; * JMK02
            NEXT DINATT                  ; * JMK02

            VIN='BOTH'
            CALL RWS(VIN,VOUT,DIN,TDIN,DOUT,F.PCIN,F.PCOUT,F.TABLES)   ; * JMK02
*           CALL AFS500(VIN,VOUT,DIN,TDIN,DOUT,F.PCIN,F.PCOUT)         ; * JMK02
         END ELSE
            IF USER='OWEN' THEN CALL ELINE('OWEN PRESS BREAK')
*           CALL RWS(VIN,VOUT,DIN,TDIN,DOUT,F.PCIN,F.PCOUT,F.TABLES)   ; * JMK02
*           CALL @TARIFF.DRIVER(VIN,VOUT,DIN,TDIN,DOUT,F.PCIN,F.PCOUT) ; * JMK02
            CALL @TARIFF.DRIVER(VIN,VOUT,DIN,TDIN,DOUT,F.PCIN,F.PCOUT,F.TABLES)  ; * JMK03
         END
*DAVID        IF CANADIAN THEN
*DAVID          CALL AFSC95(VIN,VOUT,DIN,DOUT,F.PCIN,F.PCOUT)
*DAVID        END ELSE
*DAVID          CALL AFS95(VIN,VOUT,DIN,DOUT,F.PCIN,F.PCOUT)
*DAVID        END
         READ.WAD.FLAG=0
      END
************************************************************************
7905: ***
      LINE=18
      HELP="Enter the Carrier Discount ''=ACCEPT 'X'=Back 'EX'=Exit"
      IF OPT='V' THEN MASK=SPACE(8) ELSE MASK=LINE.ITEMS<14>'R26#8'
      CALL GEN.IN(55,LINE,MASK,'AMT2',Q,0,8,'','',2,-8,LINE,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='' & OPT NE 'V'
            Q=LINE.ITEMS<14>+0
            IF Q+0 < 0 THEN
               CALL ELINE("Must be a number Zero or greater")
               GO 7900
            END
         CASE QI='X'
            CRT @(55,LINE):LINE.ITEMS<14>'R26Z#8'
            GO 100
         CASE QI='EX'
            GO 9990
         CASE NOT(NUM(QI))
            CALL ELINE('Must be a Number')
            GO 7900
         CASE NUM(QI)
            IF QI < 0 THEN
               CALL ELINE('Must be a number greater than 0')
               GO 7900
            END
      END CASE
      LOCATE 'MIN' IN LINE.ITEMS<1> SETTING POS THEN
         IF Q > 0 THEN
            CALL ELINE('You cannot Enter a Discount on a MIN Shipment!')
            GO 7905
         END
      END
      LINE.ITEMS<14>=Q
      PRINT @(55,LINE):Q'R26#8'
7910: *  Calculate All you can and ask if OK?
************************************************************************
      IF NOT(TRUCKLOAD) AND TASKMAN THEN           ; * Get Bills from CZAR
         IF READ.WAD.FLAG=1 THEN
            VIN='READ'
            VIN<2>=MAX.DISC.WEIGHT
*DF            CALL MWB(VIN,VOUT,DIN,DOUT,F.PCIN,F.PCOUT)
*         CALL @TARIFF.DRIVER(VIN,VOUT,DIN,TDIN,DOUT,F.PCIN,F.PCOUT)
*KD
*IF USER='KEITH' THEN
*
            IF TARIFF.DRIVER='0-MWB' ELSE
*              CALL RWS(VIN,VOUT,DIN,TDIN,DOUT,F.PCIN,F.PCOUT,F.TABLES)   ; * JMK02
*              CALL @TARIFF.DRIVER(VIN,VOUT,DIN,TDIN,DOUT,F.PCIN,F.PCOUT) ; * JMK02
               CALL @TARIFF.DRIVER(VIN,VOUT,DIN,TDIN,DOUT,F.PCIN,F.PCOUT,F.TABLES)         ; * JMK03
            END
         END                             ; * JMK02
*
*
*END ELSE
*       IF TARIFF.DRIVER='0-MWB' THEN
*         CALL AFS500(VIN,VOUT,DIN,TDIN,DOUT,F.PCIN,F.PCOUT)
*       END ELSE
*         CALL @TARIFF.DRIVER(VIN,VOUT,DIN,TDIN,DOUT,F.PCIN,F.PCOUT)
*       END
*END
*DAVID          IF CANADIAN THEN
*DAVID            CALL AFSC95(VIN,VOUT,DIN,DOUT,F.PCIN,F.PCOUT)
*DAVID          END ELSE
*DAVID            CALL AFS95(VIN,VOUT,DIN,DOUT,F.PCIN,F.PCOUT)
*DAVID          END
         MAX.TIMES=DCOUNT(DIN,@AM)
         CNTR=0
         ERRCODE=''
705:     ***
         CNTR=CNTR+1
         IF CNTR > MAX.TIMES THEN GO 800
         OUT.LINE=DOUT<1>
         IN.LINE=DIN<1>
         DEL DOUT<1>
         DEL DIN<1>
         ERRLINE=''
         ERRCODE=TRIM(OUT.LINE<1,10>)
         IF ERRCODE#'' THEN
            ERRLINE='CZAR Error!  Error Code ':ERRCODE+0
            CALL ELINE(ERRLINE)
            GO 705
         END
         TOTAL.CHARGE=OUT.LINE<1,5>
         BILL.TYPE=OUT.LINE<1,3>
         NUMB.DETAILS=DCOUNT(IN.LINE<1,4>,@SVM)
         FOR X = 1 TO NUMB.DETAILS
            BEGIN CASE
               CASE BILL.TYPE='MINIMUM'
               CASE BILL.TYPE='ACTUAL' OR BILL.TYPE='DEFICIT'
                  VAL=IN.LINE<1,6,X>
                  LINE.ITEMS<9,VAL>=OUT.LINE<1,1,X>
                  LINE.ITEMS<10,VAL>=OUT.LINE<1,2,X>
               CASE 1
**              ERRLINE='Bill was not rated!! Notify Owen'
                  ERRLINE='Bill was not rated!! Rate manually on PC to find problem'
                  CALL ELINE(ERRLINE)
**            GOTO 705
                  GOTO 7900
            END CASE
         NEXT X
         BEGIN CASE
            CASE BILL.TYPE='MINIMUM'
               LOCATE 'TMIN' IN LINE.ITEMS<1> SETTING VAL ELSE
                  VAL=DCOUNT(LINE.ITEMS<1>,@VM)+1
                  LINE.ITEMS<1,VAL>='TMIN'
               END
               LINE.ITEMS<10,VAL>=TOTAL.CHARGE
            CASE BILL.TYPE='DEFICIT'
               LOCATE 'DEF' IN LINE.ITEMS<1> SETTING VAL ELSE
                  VAL=DCOUNT(LINE.ITEMS<1>,@VM)+1
                  LINE.ITEMS<1,VAL>='DEF'
               END
               LINE.ITEMS<5,VAL>=OUT.LINE<1,6>     ; * DEFICIT CLASS
               LINE.ITEMS<6,VAL>=OUT.LINE<1,7>     ; * DEFICIT WEIGHT
               LINE.ITEMS<9,VAL>=OUT.LINE<1,8>     ; * DEFICIT RATE
               LINE.ITEMS<10,VAL>=OUT.LINE<1,9>    ; * DEFICIT CHARGE
         END CASE
* Verify that all of CZAR's Charges were added to the Freight Bill
800:     *** Finished Processing
         GOSUB 9000
*        END                             ; * JMK02
      END
************************************************************************
      TOTAL.BILL=TOTAL.CAR.CHARGES-LINE.ITEMS<14>
      CRT @(55,20):TOTAL.BILL'R26,#8':
      IF ABS(TOTAL.BILL-CARRIER.CHG)>10 THEN
         CALL ELINE("Bill total on 1st page is ":CARRIER.CHG/100:"   Freight Bill Total must match 1st Page Total")
         GO 7900
      END
*     IF TOTAL.CAR.CHARGES # 0 AND LINE.ITEMS<14> # 0 AND OPT # 'V' THEN         ; * JMK01
*        DISC.PER = LINE.ITEMS<14>*10000/TOTAL.CAR.CHARGES ; * JMK01
      IF TOTAL.FRT.CHARGES # 0 AND LINE.ITEMS<14> # 0 AND OPT # 'V' THEN         ; * JMK01
         DISC.PER = LINE.ITEMS<14>*10000/(TOTAL.FRT.CHARGES+TOTAL.DEF.CHARGES)   ; * JMK01
         CRT @(64,18):DISC.PER'R26#5':'%'
      END ELSE
         CRT @(64,18):SPACE(6)
      END
      IF TOTAL.AFS.CHARGES>0 THEN
         VIN=''
         TEMP.HIST.REC=''
         FOR X = 1 TO 14
            TEMP.HIST.REC<X+69>=LINE.ITEMS<X>
         NEXT X
         TEMP.HIST.REC<87>=COMP.WITH.CZAR
         CALL FB.TRAF.SURV(VIN,VOUT,LINE.ITEMS,LI.CODES,TEMP.HIST.REC)
         CAR.FRT=VOUT<3>
         CAR.NOT=VOUT<4>
         AFS.FRT=VOUT<8>
         CAR.DIS=LINE.ITEMS<14>
*         TRUE.DISC=10000-OCONV((ADJ.TTL/TOTAL.AFS.CHARGES)*10000,'MR0')
         CRT @(10,21):CAR.FRT'L26,#8':
         CRT @(29,21):CAR.NOT'R26,Z#8':
*         ADJ.TTL=TOTAL.BILL-TOTAL.NOFACTOR
         CRT @(49,21):(CAR.FRT+CAR.NOT-CAR.DIS)'L26,#8':
         IF AFS.FRT+0=0 THEN
            TRUE.DISC=0
         END ELSE
            TRUE.DISC=1-(CAR.FRT+CAR.NOT-CAR.DIS)/(AFS.FRT)
         END
         LINE.ITEMS<15>=TRUE.DISC
         PRINT @(71,21):TRUE.DISC'L22':"%"
      END
      GO 9980                            ; * Return to Calling Program
*-----------------------------------------------------------------------
*
* INTERNAL SUBROUTINES
*
*-----------------------------------------------------------------------
*
* Enter Line Item Code
*
8000: IF SEL LT 1 ! SEL GT 14 THEN
         CALL ELINE('Invalid entry.')
         RETURN
      END
      LINE=SEL+1
*
8010: HELP="[ ]=Done [D]el [E]dit [X]=Back [EX]it [1]=Min TL[V] TL[F] TL[R] TL[P] TL[T]"
*8010  HELP="[ ]=Done [D]el [E]dit [X]=Back [EX]it [L]ist Codes"
      IF OPT='V' THEN MASK=SPACE(4) ELSE
         IF LINE.ITEMS<1,SEL>='' THEN
            IF 0 AND SEL>1 AND LINE.ITEMS<1,1>='MIN' THEN
*           MASK='----'
               FOR X = 1 TO 13
                  DEL LINE.ITEMS<X,SEL>
               NEXT X
               IF MODE='INPUT' THEN MODE='EDIT'
               GOSUB 9000
               RETURN
            END ELSE
               IF SEL >1 AND VIN<12>='Y' AND ZIP.COUNT>2 THEN
                  OLD.ZIP.COUNT=ZIP.COUNT
                  ZIP.COUNT=ZIP.COUNT-1
                  MASK='SIT''L#4'
               END ELSE
                  IF SEL>1 AND VIN<12>='Y' THEN
                     OLD.ZIP.COUNT=ZIP.COUNT
                     ZIP.COUNT=ZIP.COUNT-1
                  END
                  MASK='FRT''L#4'
               END
            END
         END ELSE
            MASK=LINE.ITEMS<1,SEL>'L#4'
         END
      END
      CRT @(0,22):@(-4):"[+]=FSC [*]=BOL [-]=DEF [L]ist Codes":
      CALL GEN.IN(3,LINE,MASK,'',Q,0,6,'','',2,-4,LINE,0,QI,
         HELP,0,23)
      CRT @(0,22):@(-4):
      QI=OCONV(QI,'MCU')
      IF QI='+' THEN QI='FSC'
      IF QI='*' THEN QI='BOL'
      IF QI='-' THEN QI='DEF'
      IF QI='V' THEN QI='TLV'
      IF QI='F' THEN QI='TLF'
      IF QI='R' THEN QI='TLR'
      IF QI='P' THEN QI='TLP'
      IF QI='T' THEN QI='TLT'
      IF QI=1 THEN QI='MIN' ; PRINT @(3,LINE):'MIN'
      BEGIN CASE
         CASE QI='' & OPT NE 'V'
            Q=LINE.ITEMS<1,SEL>
            IF Q='' THEN
               IF SEL>1 AND LINE.ITEMS<1,1>='MIN' ELSE
                  IF SEL >1 AND VIN<12>='Y' AND OLD.ZIP.COUNT > 2 THEN
                     Q='SIT'
                  END ELSE
                     Q='FRT'
                  END
               END
            END
            IF Q='' & MODE='INPUT' THEN MODE='EDIT'
         CASE QI='' & OPT EQ 'V'
            RETURN
         CASE QI='EX'
            GO 9990
         CASE QI[1,2]='TL' AND QI[(LEN(QI)),1]='M'
            CALL ELINE('Minimums are not allowed in TL Traffic Survey, please try again')
            GO 8010
         CASE QI='MIN' AND SEL>1
            CALL ELINE('Only Line 1 can be a MIN(inum) charge')
            GO 8010
         CASE QI='MIN'AND LINE.ITEMS<1,SEL+1>#''
            CALL ELINE('Cannot change to MIN if there is more than 1 line')
            GO 8010
         CASE QI='SS' AND LINE.ITEMS<1,1>='MIN'
            CALL ELINE('No SS allowed on LTL MIN Shipments')
            GO 8010
         CASE QI='NOA' AND LINE.ITEMS<1,1>='MIN'
            CALL ELINE('No NOA allowed on LTL MIN Shipments')
            GO 8010
         CASE QI='WT' AND LINE.ITEMS<1,1>='MIN'
            CALL ELINE('No WT allowed on LTL MIN Shipments')
            GO 8010
         CASE QI='L'
            CALL LIST.LI.CODES('',CODE.RETURNED)
            Q=CODE.RETURNED<1>
            LINE.ITEMS<1,SEL>=Q
            GOSUB 8900
            GOSUB 9000
         CASE QI='X'OR QI=' '
            IF LINE.ITEMS<1,SEL> # '' THEN
               CODE=LINE.ITEMS<1,SEL>
*OH         IF CODE#'FRT' AND CODE#'MIN' AND CODE#'TMIN' THEN
*OH           IF LINE.ITEMS<8,SEL>='' THEN
*OH             CALL ELINE('Must Complete (or Delete) entire line')
*OH             GO 8010
*OH           END
*OH         END ELSE
*OH           IF LINE.ITEMS<5,SEL>='' OR LINE.ITEMS<6,SEL>='' OR LINE.ITEMS<7,SEL>='' THEN
*OH             CALL ELINE('Must Complete (or Delete) entire line')
*OH             GO 8010
*OH           END
*OH         END
               BEGIN CASE
                  CASE CODE='FRT'
                     IF LINE.ITEMS<5,SEL>='' OR LINE.ITEMS<6,SEL>='' OR LINE.ITEMS<7,SEL>='' THEN
                        CALL ELINE('Must Complete (or Delete) entire line')
                     END
                  CASE CODE='MIN' OR CODE='TMIN'
                     IF LINE.ITEMS<5,SEL>='' OR LINE.ITEMS<6,SEL>='' THEN
                        CALL ELINE('Must Complete (or Delete) entire line')
                     END
                  CASE 1
                     IF LINE.ITEMS<8,SEL>='' THEN
                        CALL ELINE('Must Complete (or Delete) entire line')
                     END
               END CASE
            END
            IF QI='X' AND SEL=1 THEN RETURN
            CRT @(3,LINE):LINE.ITEMS<1,SEL>'L#4':
            MODE='EDIT'
            RETURN
         CASE QI='D' & OPT NE 'V'
            FOR X = 1 TO 13
               DEL LINE.ITEMS<X,SEL>
            NEXT X
            IF MODE='INPUT' THEN MODE='EDIT'
            GOSUB 9000
            RETURN
         CASE QI='E'
            CRT @(3,LINE):LINE.ITEMS<1,SEL>
            MODE='EDIT'
            RETURN
         CASE 1
            IF NUM(QI) THEN
               IF INT(QI)#QI THEN
                  CALL ELINE("No decimals numbers allowed here")
                  GO 8010
               END
               IF QI>999 THEN
                  CALL ELINE("No code numbers greater than 999 allowed")
                  GO 8010
               END
*           IF QI>99 THEN
** The following three lines were allowing the program to exit w/o going to AFS500
*             LINE.ITEMS<14>=Q
*             GO 800
*             RETURN
*           END
               NUMB=QI
               QI=LI.CODES<1,QI>
               IF QI='' THEN
                  CALL ELINE("NO CODE ASSOCIATED WITH NUMBER ":NUMB)
                  GO 8010
               END
               IF QI[1,2]='TL' AND QI[(LEN(QI)),1]='M' THEN
                  CALL ELINE('Minimums are not allowed in TL Traffic Survey, please try again')
                  GO 8010
               END
            END
            Q=QI
      END CASE
      LOCATE Q IN LI.CODES<1> SETTING POS THEN
         IF SEL > 1 & Q = 'FRT' & LINE.ITEMS<1,1>='MIN' THEN
            CALL ELINE('Cannot enter a freight line after a MIN line')
            GO 8010
         END
         DESC=LI.CODES<2,POS>
         LINE.ITEMS<1,SEL>=Q
         CRT @(3,LINE):Q'L#4'
         CRT @(7,LINE):POS'R#3':
         CRT @(11,LINE):DESC'L#16'
      END ELSE
         CALL ELINE('Code not on file!  You must enter a valid line item code!')
         GO 8010
      END

*     IF Q#'FRT' AND Q#'MIN' AND Q#'TMIN' AND Q[1,2]#'TL' THEN GO 8070 ; * JMK04
      ACC.CODE=0                         ; * JMK04
      IF Q#'FRT' AND Q#'MIN' AND Q#'TMIN' AND Q[1,2]#'TL' THEN         ; * JMK04
         ACC.CODE=1                      ; * JMK04
         GO 8070                         ; * JMK04
      END                                ; * JMK04
*
* Enter Pieces
*
8020: HELP="Enter the number of pieces ''=ACCEPT 'X'=Back 'EX'=Exit <RETURN>=Done"
      IF OPT='V' THEN MASK=SPACE(4) ELSE MASK=LINE.ITEMS<2,SEL>'R#4'
      CALL GEN.IN(28,LINE,MASK,'',Q,0,4,'','',2,-4,LINE,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='' & OPT NE 'V'
            Q=LINE.ITEMS<2,SEL>
            IF Q='' THEN
               IF SEL = 1 THEN
                  CALL ELINE('Entry is required')
                  GO 8020
               END ELSE
                  FOR X = 1 TO 13
                     DEL LINE.ITEMS<X,SEL>
                  NEXT X
                  IF MODE='INPUT' THEN MODE='EDIT'
                  GOSUB 9000
                  RETURN
               END
            END
         CASE QI='X'
            CRT @(28,LINE):LINE.ITEMS<2,SEL>'R#4'
            GO 8010
         CASE QI='EX'
            GO 9990
         CASE NUM(QI)
            IF INT(QI)#QI OR QI < 0 THEN
               CALL ELINE('Must be a positive whole number')
               GO 8020
            END
            IF INT(QI) GT 50 THEN
               CALL ELINE('Pieces are greater than 50')
            END
            IF QI = 0 AND SEL=1 THEN
               CALL ELINE('Must be a whole number greater than 0')
               GO 8020
            END
            Q=QI
         CASE NOT(NUM(QI))
            CALL ELINE('Must be a whole number greater than 0')
            GO 8020
      END CASE
      LINE.ITEMS<2,SEL>=Q
      PRINT @(28,LINE):Q'R#4'
*
* Enter HM Flag
*
      GO 8040
8030: HELP="Is this item hazardous Y/N ''=ACCEPT 'X'=Back 'EX'=Exit"
      IF OPT='V' THEN MASK=SPACE(1) ELSE MASK=LINE.ITEMS<3,SEL>'R#1'
      CALL GEN.IN(33,LINE,MASK,'',Q,0,1,'','',2,-1,LINE,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='1' THEN QI='Y'
      IF QI='0' THEN QI='N'
      BEGIN CASE
         CASE QI='' & OPT NE 'V'
            Q=LINE.ITEMS<3,SEL>
         CASE QI='X'
            CRT @(33,LINE):LINE.ITEMS<3,SEL>'R#1'
            GO 8020
         CASE QI='EX'
            GO 9990
         CASE QI=' '
            Q=''
         CASE QI='Y' OR QI='N'
            Q=QI
         CASE 1
            CALL ELINE("Must be 'Y', 'N', 'X', or 'EX'")
            GO 8030
      END CASE
      LINE.ITEMS<3,SEL>=Q
      PRINT @(33,LINE):Q'R#1'
*
* Enter Class
*
8040: HELP="Enter the Class ''=ACCEPT 'X'=Back 'EX'=Exit"
      CODE=LINE.ITEMS<1,SEL>
      IF QI='X' AND CODE[1,2]='TL' THEN GO 8030    ; ** Skip Class
      IF CODE[1,2]='TL' THEN GO 8050     ; ** Skip Class
      IF OPT='V' THEN MASK=SPACE(5) ELSE MASK=LINE.ITEMS<5,SEL>'R#5'
      CALL GEN.IN(35,LINE,MASK,'',Q,0,5,'','',2,-5,LINE,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='' & OPT NE 'V'
            Q=LINE.ITEMS<5,SEL>
            IF Q = '' THEN
               CALL ELINE("Entry is required")
               GO 8040
            END
         CASE QI='X'
            CRT @(35,LINE):LINE.ITEMS<5,SEL>'R#5'
            GO 8030
         CASE QI='EX'
            GO 9990
         CASE NUM(QI)
            IF QI LE 0 THEN
               CALL ELINE('Must be a number greater than 0')
               GO 8040
            END
         CASE QI MATCHES "2N" OR QI MATCHES "2N.1N" OR QI MATCHES "3N"
            Q=QI
         CASE 1
            CALL ELINE("Must be NN or NNN or NN.N")
            GO 8040
      END CASE
      IF Q=77.5 THEN Q=77
      IF Q=92.5 THEN Q=92
*         IF Q=100 OR Q=92.5 OR Q=85 OR Q=77.5 OR Q=70 OR Q=65 OR Q=60 OR Q=55 OR Q=50 OR Q=500 OR Q=400 OR Q=300 OR Q=250 OR Q=200 OR Q=175 OR Q=150 OR Q=125 OR Q=110 ELSE
      LOCATE Q IN VALID.CLASSES<1> SETTING POS ELSE
         CALL ELINE("Invalid Class")
         GO 8040
      END
      LINE.ITEMS<5,SEL>=Q
      PRINT @(35,LINE):Q'R#5'
*
* Enter Weight
*
8050: HELP="Enter the Weight ''=ACCEPT 'X'=Back 'EX'=Exit"
      IF OPT='V' THEN MASK=SPACE(6) ELSE MASK=LINE.ITEMS<6,SEL>'R#6'
      CALL GEN.IN(41,LINE,MASK,'',Q,0,6,'','',2,-6,LINE,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='' & OPT NE 'V'
            Q=LINE.ITEMS<6,SEL>
            IF Q='' THEN
               CALL ELINE("Entry is required")
               GO 8050
            END
         CASE QI='X'
            CRT @(41,LINE):LINE.ITEMS<6,SEL>'R#6'
            GO 8040
         CASE QI='EX'
            GO 9990
         CASE NUM(QI)
            IF QI LE 0 THEN
               IF LINE.ITEMS<1,SEL>#'TLV' THEN
*04-16-04 Per Brian P Barker, he needs to be able to enter 0 weights on TL bills that the weight is not listed
                  CALL ELINE('Must be a number greater than 0')
                  GO 8050
               END
            END
         CASE QI MATCHES "0N"
            Q=QI
         CASE 1
            CALL ELINE("Must be a positive number")
            GO 8050
      END CASE
      LINE.ITEMS<6,SEL>=Q
      PRINT @(41,LINE):Q'R#6'
      CODE=LINE.ITEMS<1,SEL>
      IF CODE='MIN' THEN GO 8070
      IF CODE='TMIN' THEN GO 8070
      IF CODE[1,2]='TL' THEN GO 8070
*
* Enter Rate
*
8060: HELP="Enter the Rate ''=ACCEPT 'X'=Back 'EX'=Exit 'M'=Tariff Minimum"
      IF OPT='V' THEN MASK=SPACE(6) ELSE MASK=LINE.ITEMS<7,SEL>'R26Z#6'
      CALL GEN.IN(48,LINE,MASK,'AMT2',Q,0,6,'','',2,-6,LINE,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='' & OPT NE 'V'
            Q=LINE.ITEMS<7,SEL>
            IF Q='' THEN
               CALL ELINE('Entry Required')
               GO 8060
            END
         CASE QI='X'
            CRT @(48,LINE):LINE.ITEMS<7,SEL>'R26#6'
            GO 8050
         CASE QI='EX'
            GO 9990
         CASE QI='M' OR QI=1
            IF LINE.ITEMS<1,SEL>#'FRT' THEN
               CALL ELINE('Cannot Change a Non-FRT line to Tariff Minimum')
               GO 8060
            END
            LINE.ITEMS<1,SEL>='TMIN'
            PRINT @(3,LINE):'TMIN':
            GO 8070
         CASE NUM(QI)
            IF QI LE 0 THEN
               CALL ELINE('Must be a number greater than 0')
               GO 8060
            END
      END CASE
      LINE.ITEMS<7,SEL>=Q
      PRINT @(48,LINE):Q'R26#6'
*
* Calculate & Store Charges
*
      CAR.CHARGES=OCONV(Q*LINE.ITEMS<6,SEL>/100,'MR0')
      LINE.ITEMS<8,SEL>=CAR.CHARGES
      IF SUM(LINE.ITEMS<8>)=CARRIER.CHG THEN BREAK.OUT.OF.LOOP=1
*CRT @(0,23):"LINE ITEMS<8> : ":LINE.ITEMS<8> ; INPUT NUL
      CRT @(55,LINE):CAR.CHARGES'R26#8':
      RETURN
*
8070: * Enter Carrier Charge
*
      HELP="Enter the Carrier Charge ''=ACCEPT 'X'=Back 'EX'=Exit"
      IF OPT='V' THEN MASK=SPACE(8) ELSE MASK=LINE.ITEMS<8,SEL>'R26Z#8'
      CALL GEN.IN(55,LINE,MASK,'AMT2',Q,0,8,'','',2,-8,LINE,0,QI,HELP,0,23)
      QI=TRIM(OCONV(QI,'MCU'))
      BEGIN CASE
         CASE QI='' & OPT NE 'V'
            Q=LINE.ITEMS<8,SEL>
            IF (LINE.ITEMS<1,SEL>='DEF' OR LINE.ITEMS<1,SEL>='SS') AND LINE.ITEMS<10,SEL> > 0 ELSE
*              IF Q+0 LE 0 THEN          ; * JMK04
               IF Q+0 LE 0 AND ACC.CODE=0 THEN     ; * JMK04
                  CALL ELINE("Must be a number greater than Zero")
                  GO 8070
               END
            END
         CASE QI='X'
            CRT @(55,LINE):LINE.ITEMS<8,SEL>'R26Z#8'
            CODE=LINE.ITEMS<1,SEL>
            IF CODE='MIN' OR CODE='TMIN' THEN GO 8050
            IF CODE[1,2]='TL' THEN GO 8050
            GO 8010
         CASE QI='EX'
            GO 9990
         CASE NOT(NUM(QI))               ; * JMB
            CALL ELINE('Must be numeric')
            GOTO 8070
         CASE NUM(QI)
*           IF QI LE 0 THEN              ; * JMK04
            IF QI LE 0 AND ACC.CODE=0 THEN         ; * JMK04
               CALL ELINE('Must be a number greater than 0')
               GO 8070
            END
         CASE 1                          ; * JMB
            CALL ELINE('Invalid entry')
            GOTO 8070
      END CASE
      LINE.ITEMS<8,SEL>=Q
      PRINT @(55,LINE):Q'R26#8'
      IF SUM(LINE.ITEMS<8>)=CARRIER.CHG THEN BREAK.OUT.OF.LOOP=1
      RETURN
*
* Print page
*

8900: *
*
* Display screen headings
*
      CRT @(-1):@(33,0):"H":@(49,0):"----Carrier--- ------AFS------":
      CRT @(0,1):"Ln Code  # Description":@(29,1):"PCS M Class Weight":
      CRT @(49,1):"Rate   Charge   Rate   Charge"
      FOR X = 1 TO 14
         PRINT @(00,X+1):X'R%2'
      NEXT X
      PRINT @(28,16):"----":@(41,16):"------":@(55,16):"--------":
      PRINT @(71,16):"--------":
      PRINT @(0,17):"TOTALS":
      PRINT @(0,18):"Orig: ":ORIG.INFO
      PRINT @(0,19):"Dest: ":DEST.INFO
      PRINT @(46,18):"-Discount":
      PRINT @(55,19):"========":
      PRINT @(0,20):"Freight Bill Total":
      PRINT @(0,21):" Freight:":@(20,21):"  Notig:":@(40,21):"  Total:":
* JMB
      IF (TOTAL.TL.CHARGE = 0) THEN
         PRINT @(55,21):"     AFS Disc:":@(-4)
      END ELSE
         PRINT @(55,21):"Cost Per Mile:":@(-4)
      END
* JMB
      RETURN

9000: *
*
* Display Data
*
      GOSUB 9200
      FOR SEL.1=1 TO 14 UNTIL LINE.ITEMS<1,SEL.1>=''
         LINE=SEL.1+1
         IF LINE.ITEMS<1,SEL.1>='' OR OPT='V' THEN
            IF OPT='V' THEN
               PRINT @(0,LINE):@(-4):
            END ELSE
               PRINT @(0,LINE):SEL.1'R%2':@(-4):
            END
         END ELSE
            PRINT @(0,LINE):@(-4):       ; * Clear Line
            PRINT @(0,LINE):SEL.1'R%2':  ; * Selection
            PRINT @(3,LINE):LINE.ITEMS<1,SEL.1>'L#4':        ; * Code
            LOCATE LINE.ITEMS<1,SEL.1> IN LI.CODES<1> SETTING POS THEN
               DESC=LI.CODES<2,POS>
            END ELSE
               DESC='** Not On File **'
            END
            PRINT @(7,LINE):POS'R#3':    ; * Code Number Per Brian
            PRINT @(11,LINE):DESC'L#16':           ; * Code Description
            CODE=LINE.ITEMS<1,SEL.1>
            IF CODE='DEF'! CODE='FRT'! CODE='MIN'! CODE='TMIN'! CODE[1,2]='TL' THEN
               PRINT @(28,LINE):LINE.ITEMS<2,SEL.1>'R#4':    ; * Pieces
               PRINT @(33,LINE):LINE.ITEMS<3,SEL.1>'R#1':    ; * HM Flag
               PRINT @(35,LINE):LINE.ITEMS<5,SEL.1>'R#5':    ; * Class
               PRINT @(41,LINE):LINE.ITEMS<6,SEL.1>'R#6':    ; * Weight
               IF CODE='FRT' THEN
                  PRINT @(48,LINE):LINE.ITEMS<7,SEL.1>'R26#6':         ; * Carrier Rate
               END
            END
            PRINT @(55,LINE):LINE.ITEMS<8,SEL.1>'R26#8':     ; * Carrier Charge
            PRINT @(64,LINE):LINE.ITEMS<9,SEL.1>'R26Z#6':    ; * AFS Rate
            PRINT @(71,LINE):LINE.ITEMS<10,SEL.1>'R26Z#8':   ; * AFS Charge
         END
      NEXT SEL.1
      FOR X = SEL.1 TO 14
         PRINT @(2,SEL.1+1):@(-4)
      NEXT X
      RETURN
*
* Calculate line
*
*
9200: * Recalculate & display totals
*
      TOTAL.PIECES=0
      TOTAL.WEIGHT=0
      TOTAL.CAR.CHARGES=0
      TOTAL.FRT.CHARGES=0                ; * JMK01
      TOTAL.DEF.CHARGES=0
      TOTAL.AFS.CHARGES=0
      TOTAL.NOFACTOR=0
      TOTAL.TL.CHARGE=0                  ; * JMB
      FOR X=1 TO 14 UNTIL LINE.ITEMS<1,X>=''
         LOCATE LINE.ITEMS<1,X> IN LI.CODES<1> SETTING POS THEN
            NOFACTOR=LI.CODES<3,POS>
         END ELSE
            NOFACTOR='Y'                 ; * Default to Y All No Factor
         END
         TOTAL.PIECES+= LINE.ITEMS<2,X>
         TOTAL.WEIGHT+= LINE.ITEMS<6,X>
         IF LINE.ITEMS<1,X>='FRT' THEN
            CAR.CHARGES=OCONV(LINE.ITEMS<6,X>*LINE.ITEMS<7,X>/100,'MR0')
            TOTAL.FRT.CHARGES+= CAR.CHARGES        ; * JMK01
            LINE.ITEMS<8,X>=CAR.CHARGES
            AFS.CHARGES=OCONV(LINE.ITEMS<6,X>*LINE.ITEMS<9,X>/100,'MR0')
            LINE.ITEMS<10,X>=AFS.CHARGES
         END ELSE
            CAR.CHARGES=LINE.ITEMS<8,X>
            IF LINE.ITEMS<1,X>='DEF' THEN TOTAL.DEF.CHARGES+= CAR.CHARGES        ; * OH
            AFS.CHARGES=LINE.ITEMS<10,X>
         END
         TOTAL.CAR.CHARGES+= CAR.CHARGES
         IF NOFACTOR='Y' THEN
            LINE.ITEMS<11,X>=CAR.CHARGES
            TOTAL.NOFACTOR+= CAR.CHARGES
         END ELSE
            LINE.ITEMS<11,X>=''
         END
         TOTAL.AFS.CHARGES+= AFS.CHARGES
         IF (LINE.ITEMS<1,X>[1,2] = 'TL') THEN TOTAL.TL.CHARGE += LINE.ITEMS<8,X>          ; * JMB
      NEXT X
      CRT @(28,17):TOTAL.PIECES'R#4':
      CRT @(41,17):TOTAL.WEIGHT'R#6':
      CRT @(55,17):TOTAL.CAR.CHARGES'R26Z#8':
      CRT @(71,17):TOTAL.AFS.CHARGES'R26Z#8':
      CRT @(55,18):LINE.ITEMS<14>'R26Z#8':         ; * Car Discount (Entered)
* JMB
      IF (TOTAL.TL.CHARGE = 0) THEN
         CRT @(55,21):"     AFS Disc:":@(-4)
      END ELSE
         IF (MILEAGE = 0) THEN
            CRT @(55,21):'Cost Per Mile:       N/A':@(-4)
         END ELSE
            COST.PER.MILE = TOTAL.TL.CHARGE / MILEAGE
            CRT @(55,21):'Cost Per Mile:  ':COST.PER.MILE'R26,$#8':@(-4)
         END
      END
* JMB
      RETURN
*----
9980: * Exit program
      RETURN
9990: * Exit program with Stop
*     FOR X = 1 TO 15
*       BILL<X+69>=LINE.ITEMS<X>
*     NEXT X
*        WRITE BILL ON TEMP,'BILL'
*     BILL=''
      STOP
