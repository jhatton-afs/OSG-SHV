********************************************************************************
*  Program : FB.CARRIER.ACH
*  Author  : Jeff Walton
*  Date    : December 27, 2006
********************************************************************************
*
*      COPYRIGHT (C) 2002 by AFS LOGISTICS, LLC. - ALL RIGHTS RESERVED
*
*  This program is the sole property of AFS Logistics, LLC (AUTOMATED FREIGHT
*  SYSTEMS) and may not be used, copied, or modified without the express
*  written consent of Brian Barker of AFS Logistics, LLC.
********************************************************************************
*
*  030907  JTW01  Change to allow for ACH Name
* 092707 - JMK01 - T070655 - ACH for Rude Transportation
* 050913 - SWB01 - SysAid 5706 - Allow MC payments
* 040714 - DRF01 - SysAid 9293 - Added KSHELTON access as she is Dina's
*                  back up.
* 081314 - JMK02 - SysAid#11359 - Mary Ann Rose access 
* 022316 - DRF02 - Updated the list of new/change carrier to go to SAGE
*
* Includes
$INCLUDE FILE.DEFS INC_ADDS60.CODES; * These require specific PROCOMM settings

      OPEN '','CARRIERS' TO F.CARRIERS ELSE
         CALL OPEN.ABORT('CARRIERS')
      END
      OPEN '','&SAVEDLISTS&' TO F.SL ELSE          ; * DRF02
         CALL OPEN.ABORT('&SAVEDLISTS&')
      END
* Equates
      EQU REVERSE.BLINK.ON TO TERM.ESC.SEQ:CHAR(TERM.REV+TERM.BLINK)   ; * Reverse Blinking text ON
      EQU REVERSE.ON TO TERM.ESC.SEQ:CHAR(TERM.REV)          ; * Reverse text ON
      EQU REVERSE.OFF TO TERM.ESC.SEQ:CHAR(TERM.NORMAL)      ; * Reverse text OFF
      EQU TRUE TO 1
      EQU FALSE TO 0
      CARRIER.REC=''
      OLD.CARRIER.REC=''
      CARRIER.ID=''

* Initialize general program variables
      PROMPT''
      PORT.NUM=SYSTEM(19)
      CALL GET.USER(USER.NAME)
      PROG.NAME='FB.CARRIER.ACH'
      PROG.DESC='Carrier ACH Setup'
      PACK.NAME='USER : ':USER.NAME
      CO.NAME='AFS Logistics, LLC'
      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'FB.CARRIER.ACH' ; UPL.VOUT = ''           ; * NPR_UPL 04/23/2010
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)       ; * NPR_UPL 04/23/2010
      EDIT.MASK.CHAR='-'
      PLACE.HOLDER='~~ PLACE*HOLDER ~~'
      AFN.MSG=''
      AFN.MIN=''
      AFN.MAX=''
      AFN.MASK=''

* Initialize operating variables
      PAGE.SIZE=11                       ; * Number of lines per page
      START.Y=9                          ; * Starting y-position on the screen minus one
      LAST.EDIT.MASK=1                   ; * Last item edited or deleted
      WIDTH=80                           ; * Print width for printing table of includes/excludes
      CTR=INT(WIDTH/2)                   ; * Center of the table width

      CARRIER.NAME=''
      CARRIER.CITY=''
      CARRIER.STATE=''



      BEGIN.DATE=''

      END.DATE=''

      CONTROL.REC=''
      OLD.CONTROL.REC=''

* Display initial screen
      GOSUB DISPLAY.SCREEN

* Restrict access
      BEGIN CASE
         CASE USER.NAME='OWEN'
         CASE USER.NAME='PBASS'
         CASE USER.NAME='SBARBEE'
         CASE USER.NAME='KAREN'
         CASE USER.NAME='RWHITT'
         CASE USER.NAME='DGARRETT'       ; * Ticket 082407 DRF 10/29/08
         CASE USER.NAME='MKERBOW'        ; * JMK01
         CASE USER.NAME='JWALTON'        ; * JTW01
         CASE USER.NAME='DEBBIE'         ; * Ticket 808920 DRF 04/01/08
         CASE USER.NAME='DAVID'
         CASE USER.NAME='KSHELTON'       ; * DRF01
         CASE USER.NAME='CBLEWER'       ; * DRF01
         CASE USER.NAME='MROSE'          ; * JMK02
         CASE 1
            CALL FB.PRINT.CENT(1,80,12,'! Restricted Access Application !')
            CALL FB.PRINT.CENT(1,80,14,'Access Denied')
            CALL ELINE('')
            GOTO THE.END
      END CASE

      LOOP
1000:
         CARRIER.REC=''
         OLD.CARRIER.REC=''
         CARRIER.ID=''
         CARRIER.NAME=''
         CARRIER.CITY=''
         CARRIER.STATE=''
         BEGIN.DATE=''
         END.DATE=''
         GOSUB DISPLAY.SCREEN
         HELP="Enter carrier number, 'name' for search, [L]ist, [EX]it."
         CALL GEN.IN(17,3,'#####','',Q,0,20,'','',3,-5,3,0,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI='X' OR QI='EX' OR QI=''
               EXIT.IT = TRUE

            CASE QI EQ 'L'
               EXECUTE 'SORT CARRIERS BY 1 1'
               CALL ELINE('')

            CASE NUM(QI)
               CARRIER.ID=Q'R%5'
               CRT @(20,2):CARRIER.ID
               READU CARRIER.REC FROM F.CARRIERS,CARRIER.ID LOCKED
                  FIND.LOCKED.NAME = CARRIER.ID
                  GOSUB FIND.LOCKED
                  GOTO 1000
               END THEN
                  OLD.CARRIER.REC=CARRIER.REC
                  GOSUB PROCESS.SCREEN
                  RELEASE F.CARRIERS,CARRIER.ID
                  GOTO 1000
               END ELSE
                  CALL ELINE('Carrier not on file !!!')
                  GOTO 1000
               END

            CASE 1
               CALL SOUNDEX.DISPLAY(Q,'CARRIERS','SDX.CARRIER,NAME','1,3,4',QX)
               CT=DCOUNT(QX<1>,@VM)
               IF CT=1 THEN
                  DATA QX<1,1>
               END
*         CASE 1
*           CALL ELINE('Invalid Entry.')
         END CASE

      UNTIL (EXIT.IT = TRUE) DO
      REPEAT
      STOP

PROCESS.SCREEN:
      CARRIER.NAME=CARRIER.REC<1>
      CARRIER.CITY=CARRIER.REC<3>
      CARRIER.STATE=CARRIER.REC<4>
*   Calculate number of items and number of pages and set page number
      NUM.RULES=DCOUNT(CARRIER.REC<103>,@VM)
      IF NUM.RULES=0 THEN
         NUM.PAGES=0
         PAGE.NUMBER=0
      END ELSE
         NUM.PAGES=INT(NUM.RULES/PAGE.SIZE)
         IF REM(NUM.RULES,PAGE.SIZE) THEN NUM.PAGES+=1
         PAGE.NUMBER=1
      END
      GOSUB DISPLAY.SCREEN
      GOSUB DISPLAY.PAGE
      IF CARRIER.REC<122>='' THEN        ; * JTW01
         GOSUB GET.NAME                  ; * JTW01
         GOSUB GET.EMAIL                 ; * JTW01
      END                                ; * JTW01

MAIN.START:***
      CRT @(0,22):'Enter Option : --             [B]ack Page [F]orward Page [T]op Page [L]ast Page'
      EDIT.MASK=STR(EDIT.MASK.CHAR,2)
!     HELP='[A]dd [E]dit E[M]ail [S]tatus  [U]pdate [X]=Back [EX]it' ; * JTW01
      HELP='[A]dd [E]dit [N]ame E[M]ail [S]tatus  [U]pdate [X]=Back [EX]it'      ; * JTW01
      CALL GEN.IN(15,22,EDIT.MASK,'',Q,0,2,'','',2,15,22,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'                    ; * Exit
            GOTO LAST.CHANCE.TO.SAVE
         CASE QI='X'                     ; * Back to client
            IF CARRIER.REC#OLD.CARRIER.REC THEN
               YN.MSG='You have unsaved changes. Save before entering new client?'
               YN.MASK=''
               GOSUB ASK.Y.OR.N
               IF YN.ANSWER='Y' THEN
                  GOSUB FAILSAFE.CHECK
                  IF FAILSAFE.OK THEN
                     GOSUB SAVE.CONTROL.REC
                     RETURN
                  END ELSE
                     RETURN
                  END
               END
            END
            RETURN
         CASE QI='U'                     ; * Update (and exit)
            IF CARRIER.REC#OLD.CARRIER.REC THEN
               GOSUB FAILSAFE.CHECK
               IF FAILSAFE.OK THEN
                  GOSUB SAVE.CONTROL.REC
                  RETURN
               END ELSE
                  RETURN
               END
            END ELSE
               CRT @(0,22):'No changes to save.':@(-3)
               SLEEP 1
            END
            RETURN
         CASE QI='L' OR QI='LP'          ; * Last Page
            IF NUM.PAGES#0 AND PAGE.NUMBER#NUM.PAGES THEN
               PAGE.NUMBER=NUM.PAGES
               GOSUB DISPLAY.PAGE
            END ELSE
               CALL ELINE('** LAST PAGE **')
            END
            GOTO MAIN.START
         CASE QI='T' OR QI='TP'          ; * Top Page
            IF NUM.PAGES#0 AND PAGE.NUMBER#1 THEN
               PAGE.NUMBER=1
               GOSUB DISPLAY.PAGE
            END ELSE
               CALL ELINE('** FIRST PAGE **')
            END
            GOTO MAIN.START
         CASE QI='F' OR QI='FP'          ; * Forward a page
            IF NUM.PAGES#0 AND PAGE.NUMBER<NUM.PAGES THEN
               PAGE.NUMBER+=1
               GOSUB DISPLAY.PAGE
            END ELSE
               CALL ELINE('** LAST PAGE **')
            END
            GOTO MAIN.START
         CASE QI='B' OR QI='BP'          ; * Backward a page
            IF NUM.PAGES#0 AND PAGE.NUMBER>1 THEN
               PAGE.NUMBER-=1
               GOSUB DISPLAY.PAGE
            END ELSE
               CALL ELINE('** FIRST PAGE **')
            END
            GOTO MAIN.START
         CASE QI='E'                     ; * Edit a IED rule
            IF NUM.RULES<1 THEN
               CALL ELINE('No ACH Accounts to EDIT.')
            END ELSE
               EDIT.ENTRY=''
               GOSUB EDIT.CARRIER.RULE
               GOSUB DISPLAY.PAGE
            END
            GOTO MAIN.START
         CASE QI='A'                     ; * Add an IED rule
            GOSUB ADD.CARRIER.RULE
            GOSUB DISPLAY.PAGE
            GOTO MAIN.START
         CASE QI='S'
            GOSUB CHG.STATUS
            GOSUB DISPLAY.SCREEN
            GOSUB DISPLAY.PAGE
            GOTO MAIN.START
         CASE QI='N'                     ; * JTW01
            GOSUB GET.NAME               ; * JTW01
            GOTO MAIN.START              ; * JTW01
         CASE QI='M'
            GOSUB GET.EMAIL
            GOTO MAIN.START
         CASE QI='*'                     ; * Show contents of CONTROL.REC for debugging purposes
            CRT @(-1)
            CRT @(0,0):CARRIER.REC
            CALL ELINE('Viewing DEBUG Screen.')
            GOSUB DISPLAY.SCREEN
            GOSUB DISPLAY.PAGE
            GOTO MAIN.START
         CASE 1
            GOTO MAIN.START
      END CASE

********************************************************************************
* Start of internal subroutines
********************************************************************************

DISPLAY.SCREEN:***
      CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      CRT @(0,2):STR('=',79):            ; * JTW01
!     CRT @(0,2):REVERSE.ON:SPACE(79):REVERSE.OFF ; * JTW01
      CRT @(0,3):'Carrier#/Name  : '
      CRT @(0,4):'Status         : '
!     CRT @(0,5):'ACH Email      : ' ; * JTW01
      CRT @(0,5):'ACH Name       : '     ; * JTW01
      CRT @(0,6):'ACH Email      : '     ; * JTW01
      CRT @(0,7):REVERSE.ON:SPACE(79):REVERSE.OFF  ; * JTW01
      CRT @(0,21):REVERSE.ON:SPACE(79):REVERSE.OFF
      IF CARRIER.ID='' THEN NULL ELSE
         CRT @(17,3):CARRIER.ID'R%5':', ':CARRIER.NAME:' (':CARRIER.CITY:', ':CARRIER.STATE:')'
         BEGIN CASE
            CASE CARRIER.REC<102>='' ; STATUS.DESC = ''
            CASE CARRIER.REC<102>='A' ; STATUS.DESC = 'A - Active'
            CASE CARRIER.REC<102>='P' ; STATUS.DESC = 'P - Pending Approval'
            CASE CARRIER.REC<102>='I' ; STATUS.DESC = 'I - Inactive'
            CASE CARRIER.REC<102>='C' ; STATUS.DESC = 'C - Cancelled'
         END CASE
         CRT @(17,4):STATUS.DESC
         CRT @(17,5):CARRIER.REC<122>    ; * JTW01
         EMAIL=CARRIER.REC<121>
         CONVERT @VM TO ';' IN EMAIL
         IF EMAIL[60,99]='' THEN ETC='' ELSE ETC='...'
!        CRT @(17,5):EMAIL[1,59]:ETC ; * JTW01
         CRT @(17,6):EMAIL[1,59]:ETC     ; * JTW01
      END
      CRT @(0,8):'##  Routing#  Account#          Type Beg/Date End/Date     Conf/Sent  Conf/Rcvd'
      CRT @(0,9):'--  --------- ----------------- ---- -------- --------     ---------  ---------'
      RETURN

********************************************************************************

DISPLAY.PAGE:***
*   This routine displays a given page.
*   Input:  PAGE.NUMBER

      STR.OUT='Page ':PAGE.NUMBER:' of ':NUM.PAGES:' '
      STR.OUT=SPACE(79-LEN(STR.OUT)):STR.OUT
      CRT @(0,7):REVERSE.ON:STR.OUT:REVERSE.OFF
      Y=1                                ; * Screen position
      IF PAGE.NUMBER=0 THEN
         LINE.NUM=1
      END ELSE
         LINE.NUM=(PAGE.NUMBER-1)*PAGE.SIZE+1
      END
      LOOP WHILE Y<=PAGE.SIZE
         BEGIN CASE
            CASE LINE.NUM>NUM.RULES
               * Print nothing - actually clears line
               SCREEN.LINE=LINE.NUM'R%2'
            CASE CARRIER.REC<103,LINE.NUM>=''
               SCREEN.LINE=LINE.NUM'R%2'
            CASE 1
               GOSUB FORMAT.LINE
               SCREEN.LINE=FORMATTED.LINE
         END CASE
         CRT @(0,START.Y+Y):SCREEN.LINE:@(-4)      ; * Draw screen line
         Y+=1                            ; * Inc screen position
         LINE.NUM+=1
      REPEAT
      RETURN

********************************************************************************

FORMAT.LINE:***
      FORMATTED.LINE =LINE.NUM'R%2':SPACE(2)       ; * JMK01
      FORMATTED.LINE:=CARRIER.REC<103,LINE.NUM>'L#9':' '
      FORMATTED.LINE:=CARRIER.REC<104,LINE.NUM>'L#17':' '
      FORMATTED.LINE:=CARRIER.REC<105,LINE.NUM>'R#2':'   '
      IF CARRIER.REC<106,LINE.NUM> THEN
         FORMATTED.LINE:=CARRIER.REC<106,LINE.NUM>'D2-':' '
      END ELSE
         FORMATTED.LINE:=SPACE(8):' '
      END
      IF CARRIER.REC<107,LINE.NUM> THEN
         FORMATTED.LINE:=CARRIER.REC<107,LINE.NUM>'D2-':' '
      END ELSE
         FORMATTED.LINE:=' {OPEN} ':' '
      END
      FORMATTED.LINE:=SPACE(5)
      IF CARRIER.REC<111,LINE.NUM,1> THEN
         FORMATTED.LINE:=CARRIER.REC<111,LINE.NUM,1>'D2-':'  '
      END ELSE
         FORMATTED.LINE:=SPACE(8):'  '
      END
      IF CARRIER.REC<112,LINE.NUM,1> THEN
         FORMATTED.LINE:=CARRIER.REC<112,LINE.NUM,1>'D2-'
      END ELSE
         FORMATTED.LINE:=SPACE(8)
      END
      RETURN

********************************************************************************

ADD.CARRIER.RULE:***
      * Make sure last page is being displayed
      NP1=FALSE
      NP2=FALSE
      IF PAGE.NUMBER#1 THEN
         PAGE.NUMBER=1
         NP1=TRUE
      END
      IF CARRIER.REC<103,1>#'' THEN
         FOR M=103 TO 116
            INS '' BEFORE CARRIER.REC<M,1>
         NEXT M
      END
      NUM.RULES=DCOUNT(CARRIER.REC<103>,@VM)
      IF NUM.RULES=0 THEN
         NUM.PAGES=1
         PAGE.NUMBER=1
      END ELSE
         NUM.PAGES=INT(NUM.RULES/PAGE.SIZE)
         IF REM(NUM.RULES,PAGE.SIZE) THEN NUM.PAGES+=1
         PAGE.NUMBER=1
      END
      GOSUB DISPLAY.PAGE

      EDIT.NUMBER=1
      IF REM(EDIT.NUMBER,PAGE.SIZE)=0 THEN
         Y.POS=START.Y+PAGE.SIZE
      END ELSE
         Y.POS=START.Y+REM(EDIT.NUMBER,PAGE.SIZE)
      END

      GOSUB PROCESS.DATA

      IF BACK.FLAG THEN
         FOR M=103 TO 116
            DEL CARRIER.REC<M,1>
         NEXT M
      END ELSE
         CARRIER.REC<102>='P'            ; * SET TO PENDING APPROVAL
         STATUS.DESC='P - Pending Approval'
         CRT @(17,4):STATUS.DESC 'L#50'
         XX=0
         LOOP XX+=1 UNTIL CARRIER.REC<108,1,XX>='' DO REPEAT
         CARRIER.REC<108,1,XX>=DATE()
         CARRIER.REC<109,1,XX>=TIME()
         CARRIER.REC<110,1,XX>=USER.NAME
      END
      RETURN

********************************************************************************

EDIT.CARRIER.RULE:***
      EDIT.NUMBER=1
      LAST.EDIT.MASK=1

      PAGE.NUMBER=INT(EDIT.NUMBER/PAGE.SIZE)
      IF PAGE.NUMBER*PAGE.SIZE<EDIT.NUMBER THEN PAGE.NUMBER+=1
      EDIT.Y=EDIT.NUMBER-(PAGE.NUMBER*PAGE.SIZE)+PAGE.SIZE
      GOSUB DISPLAY.PAGE
      Y.POS=START.Y+EDIT.Y

      GOSUB PROCESS.DATA

      IF CARRIER.REC<103,1>=OLD.CARRIER.REC<103,1> AND CARRIER.REC<104,1>=OLD.CARRIER.REC<104,1> AND CARRIER.REC<105,1>=OLD.CARRIER.REC<105,1> AND CARRIER.REC<106,1>=OLD.CARRIER.REC<106,1> THEN NULL ELSE
         XX=0
         LOOP XX+=1 UNTIL CARRIER.REC<108,1,XX>='' DO REPEAT
         CARRIER.REC<108,1,XX>=DATE()
         CARRIER.REC<109,1,XX>=TIME()
         CARRIER.REC<110,1,XX>=USER.NAME
      END
      IF CARRIER.REC<103,1>=OLD.CARRIER.REC<103,1> AND CARRIER.REC<104,1>=OLD.CARRIER.REC<104,1> AND CARRIER.REC<105,1>=OLD.CARRIER.REC<105,1> THEN NULL ELSE
         FOR M=111 TO 116
            INS '' BEFORE CARRIER.REC<M,1,1>
         NEXT M
         CARRIER.REC<102>='P'
         STATUS.DESC='P - Pending Approval'
         CRT @(17,4):STATUS.DESC 'L#50'
         RETURN

********************************************************************************



PROCESS.DATA:***
         DONE=FALSE
         FIELD.POS=1
         LOOP WHILE NOT(DONE)
            BEGIN CASE
               CASE FIELD.POS=0          ; * Done
                  DONE=TRUE
               CASE FIELD.POS=1          ; * Routing#
                  GOSUB GET.ROUTING
                  IF BACK.FLAG THEN DONE=TRUE
               CASE FIELD.POS=2          ; * Account#
                  GOSUB GET.ACCOUNT
               CASE FIELD.POS=3          ; * Type
                  GOSUB GET.TYPE
               CASE FIELD.POS=4          ; * Beg Date
                  GOSUB GET.BEGIN.DATE
               CASE FIELD.POS=5          ; * Done  ; * JMK01
                  DONE=TRUE              ; * JMK01
            END CASE
            IF BACK.FLAG THEN
               FIELD.POS-=1
            END ELSE
               FIELD.POS+=1
            END
         REPEAT
         NUM.RULES=DCOUNT(CARRIER.REC<103>,@VM)
         IF NUM.RULES=0 THEN
            NUM.PAGES=1
            PAGE.NUMBER=1
         END ELSE
            NUM.PAGES=INT(NUM.RULES/PAGE.SIZE)
            IF REM(NUM.RULES,PAGE.SIZE) THEN NUM.PAGES+=1
            PAGE.NUMBER=1
         END
         RETURN

********************************************************************************

GET.ROUTING:***
         BACK.FLAG=FALSE
         X.POS=4
         CRT @(0,22):'Enter Bank Routing Number.':@(-4)
         IF CARRIER.REC<103,1>='' THEN
            SAVE.ROUTING=SPACE(9)
            EDIT.MASK=STR(EDIT.MASK.CHAR,9)
         END ELSE
*           SAVE.ROUTING=CARRIER.REC<103,1>        ; * JMK01
            SAVE.ROUTING=CARRIER.REC<103,1>'R%9'   ; * JMK01
            EDIT.MASK=SAVE.ROUTING
         END
!     HELP='Enter Bank Routing Number'
         HELP=''
         CALL GEN.IN(X.POS,Y.POS,EDIT.MASK,'',Q,0,9,'','',2,X.POS,Y.POS,0,QI,HELP,0,23)
         IF QI='' AND SAVE.ROUTING THEN QI=SAVE.ROUTING
         BEGIN CASE
            CASE QI='EX'
               GOTO THE.END
            CASE QI='X'
               BACK.FLAG=TRUE
               CRT @(X.POS,Y.POS):SAVE.ROUTING
               RETURN
            CASE NUM(QI) AND QI#''
               GOSUB VERIFY.ROUTING
               IF FAIL=1 THEN
                  YN.MSG='WARNING --- Please verify Bank Routing Number, accept (Y/N) : '
                  YN.MASK=''
                  OLD.QI=QI
                  GOSUB ASK.Y.OR.N
                  QI=OLD.QI
                  IF YN.ANSWER='Y' THEN NULL ELSE
                     GOTO GET.ROUTING
                  END
               END
*              ROUTING.NO=QI             ; * JMK01
               ROUTING.NO=QI'R%9'        ; * JMK01
               CARRIER.REC<103,EDIT.NUMBER>=ROUTING.NO
               CRT @(X.POS,Y.POS):ROUTING.NO
               RETURN
            CASE 1
               GOTO GET.ROUTING
         END CASE

***********************************************************************************

VERIFY.ROUTING:*

         CHK.NO=QI[1,8]
         DIG=QI[9,1]
         STRING=''
         STRING<1>=3:@VM:7:@VM:1:@VM:3:@VM:7:@VM:1:@VM:3:@VM:7
         SUMM=0
         FOR M=1 TO 8
            SUMM+=(CHK.NO[M,1]*STRING<1,M>)
         NEXT M
         IF INT(SUMM/10)=SUMM/10 THEN TAMT=INT(SUMM/10) ELSE TAMT=INT(SUMM/10)+1
         TAMT=TAMT*10
         CHK=TAMT-SUMM
         IF DIG=CHK THEN FAIL=FALSE ELSE FAIL=TRUE
         RETURN
********************************************************************************

GET.ACCOUNT:***

         BACK.FLAG=FALSE
         X.POS=14
         CRT @(0,22):'Enter Bank Account Number.':@(-4)
         IF CARRIER.REC<104,1>='' THEN
            SAVE.ACCOUNT=SPACE(17)
            EDIT.MASK=STR(EDIT.MASK.CHAR,17)
         END ELSE
            SAVE.ACCOUNT=CARRIER.REC<104,1>
            EDIT.MASK=SAVE.ACCOUNT
         END
         HELP='Enter Bank Account Number'
         CALL GEN.IN(X.POS,Y.POS,EDIT.MASK,'',Q,0,17,'','',2,X.POS,Y.POS,0,QI,HELP,0,23)
         IF QI='' AND SAVE.ACCOUNT THEN QI=SAVE.ACCOUNT
         BEGIN CASE
            CASE QI='EX'
               GOTO THE.END
            CASE QI='X'
               BACK.FLAG=TRUE
               CRT @(X.POS,Y.POS):SAVE.ACCOUNT
               RETURN
            CASE NUM(QI) AND QI#''
               ACCOUNT.NO=QI
               CARRIER.REC<104,EDIT.NUMBER>=ACCOUNT.NO
               CRT @(X.POS,Y.POS):ACCOUNT.NO
               RETURN
            CASE 1
               GOTO GET.ACCOUNT
         END CASE

***********************************************************************************

GET.TYPE:***

         BACK.FLAG=FALSE
         X.POS=33
         CRT @(0,22):'Enter Account Type (C)hecking or (S)avings.':@(-4)
         IF CARRIER.REC<105,1>='' THEN
            SAVE.TYPE=SPACE(1)
            EDIT.MASK=STR(EDIT.MASK.CHAR,1)
         END ELSE
            SAVE.TYPE=CARRIER.REC<105,1>
            EDIT.MASK=SAVE.TYPE 'L#2'
         END
         HELP=''
         CALL GEN.IN(X.POS,Y.POS,EDIT.MASK,'',Q,0,2,'','',2,X.POS,Y.POS,0,QI,HELP,0,23)
         IF QI='' AND SAVE.TYPE#'' THEN QI=SAVE.TYPE
         BEGIN CASE
            CASE QI='EX'
               GOTO THE.END
            CASE QI='X'
               BACK.FLAG=TRUE
               CRT @(X.POS,Y.POS):SAVE.TYPE
               RETURN
            CASE QI='S' OR QI='C'
               TYPE=QI
               CARRIER.REC<105,EDIT.NUMBER>=TYPE
               CRT @(X.POS,Y.POS):TYPE
               RETURN
            CASE 1
               GOTO GET.TYPE
         END CASE

***********************************************************************************
GET.BEGIN.DATE:***
         BACK.FLAG=FALSE
         X.POS=37
         CRT @(0,22):'Enter a beginning date.':@(-4)
         IF CARRIER.REC<106,EDIT.NUMBER> THEN
            SAVE.BEGIN.DATE=CARRIER.REC<106,EDIT.NUMBER>'D2-'
            EDIT.MASK=CARRIER.REC<106,EDIT.NUMBER>'D2-'
         END ELSE
            SAVE.BEGIN.DATE=SPACE(8)
            EDIT.MASK='MM/DD/YY'
         END
         HELP='OPTIONS: [T]oday [X]=Back [EX]it'
         CALL GEN.IN(X.POS,Y.POS,EDIT.MASK,'DATE',Q,0,8,'','',2,X.POS,Y.POS,0,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         IF BEGIN.DATE AND QI='' THEN QI=BEGIN.DATE
         BEGIN CASE
            CASE QI='EX'
               GOTO LAST.CHANCE.TO.SAVE
            CASE QI='X'
               BACK.FLAG=TRUE
               CRT @(X.POS,Y.POS):SAVE.BEGIN.DATE
               RETURN
            CASE QI='T'
               BEGIN.DATE=DATE()
               CRT @(X.POS,Y.POS):BEGIN.DATE'D2-'
               CARRIER.REC<106,EDIT.NUMBER>=BEGIN.DATE
               RETURN
            CASE NUM(Q) AND QI#''
               IF Q<DATE() THEN
                  CALL ELINE('Warning: This date is in the past.')
               END
               BEGIN.DATE=Q
               CRT @(X.POS,Y.POS):BEGIN.DATE'D2-'
               CARRIER.REC<106,EDIT.NUMBER>=BEGIN.DATE
               RETURN
            CASE 1
               CALL ELINE('Invalid date. Try again.')
               GOTO GET.BEGIN.DATE
         END CASE

********************************************************************************

GET.END.DATE:***
         BACK.FLAG=FALSE
*     X.POS=71 ; * JMK01
         X.POS=64                        ; * JMK01
         CRT @(0,22):'Enter an ending date.':@(-4)
         IF END.DATE THEN
            SAVE.END.DATE=END.DATE'D2-'
            EDIT.MASK=END.DATE'D2-'
         END ELSE
            SAVE.END.DATE=SPACE(8)
            EDIT.MASK='MM/DD/YY'
         END
         HELP='OPTIONS: [T]oday [O]pen Ended [X]=Back [EX]it'
         CALL GEN.IN(X.POS,Y.POS,EDIT.MASK,'DATE',Q,0,8,'','',2,X.POS,Y.POS,0,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         IF END.DATE AND QI='' THEN QI=END.DATE
         IF NOT(END.DATE) AND QI='' THEN QI='O'
         BEGIN CASE
            CASE QI='EX'
               GOTO LAST.CHANCE.TO.SAVE
            CASE QI='X'
               BACK.FLAG=TRUE
               CRT @(X.POS,Y.POS):SAVE.END.DATE
               RETURN
            CASE QI='O'
               END.DATE=''
               CRT @(X.POS,Y.POS):' {OPEN} '
               RETURN
            CASE QI='T'
               END.DATE=DATE()
               CRT @(X.POS,Y.POS):END.DATE'D2-'
               RETURN
            CASE NUM(Q) AND QI#''
               IF Q<BEGIN.DATE THEN
                  CALL ELINE('The closing date ':Q'D2-':' is before ':BEGIN.DATE'D2-':'. Try again.')
                  GOTO GET.END.DATE
               END
               IF Q<DATE() THEN
                  CALL ELINE('Warning: This date is in the past.')
               END
               END.DATE=Q
               CRT @(X.POS,Y.POS):END.DATE'D2-'
               RETURN
            CASE 1
               CALL ELINE('Invalid date. Try again.')
               GOTO GET.END.DATE
         END CASE

********************************************************************************

GET.NOTES:***
         BACK.FLAG=FALSE
         TXT.COL=0
         TXT.ROW=6
         TXT.LENGTH=80
         TXT.LINES=PAGE.SIZE+2
*     TXT.TEXT=CHANGE(NOTES,@SVM,@AM) ; * JMK02
         TXT.TEXT=CHANGE(NOTES,@SVM,CHAR(10))      ; * JMK02
         CRT @(0,5):REVERSE.ON:SPACE(79)
         CRT @(28,5):'Carrier Notes':REVERSE.OFF
         CRT @(0,22):'Enter any notes for this carrier.':@(-4)
         CALL LINE.EDIT(TXT.COL,TXT.ROW,TXT.LENGTH,TXT.LINES,TXT.TEXT)
*     NOTES=CHANGE(TXT.TEXT,@AM,@SVM) ; * JMK02
         NOTES=CHANGE(TXT.TEXT,CHAR(10),@SVM)      ; * JMK02
         GOSUB DISPLAY.SCREEN
         GOSUB DISPLAY.PAGE

********************************************************************************

CHG.STATUS:***
         X.POS=17
         Y.POS=4
         CRT @(0,22):'Enter ACH Status Code.':@(-4)
         IF CARRIER.REC<102>='' THEN
            SAVE.STATUS=SPACE(2)
            EDIT.MASK=STR(EDIT.MASK.CHAR,2):SPACE(48)
         END ELSE
            SAVE.STATUS=CARRIER.REC<102>
            EDIT.MASK=SAVE.STATUS:SPACE(48)
         END
!     HELP='Enter Bank Routing Number'
         BEGIN CASE
            CASE CARRIER.REC<102>='A' OR CARRIER.REC<102>='P'
               HELP='Enter [I]nactive, [C]ancel or <Return> for unchanged'
               VALID.ENTRIES = 'I':@VM:'C':@VM:CARRIER.REC<102>
            CASE CARRIER.REC<102>='I'
               IF CARRIER.REC<111,1,1>#'' AND CARRIER.REC<112,1,1>#'' AND CARRIER.REC<103,1>#'' AND CARRIER.REC<104,1>#'' AND CARRIER.REC<105,1>#'' THEN
                  HELP='Enter [A]ctive, [C]ancel, [P]ending (Resend Test) or <Return> for unchanged'
                  VALID.ENTRIES = 'A':@VM:'C':@VM:'P':@VM:CARRIER.REC<102>
               END ELSE
                  HELP='Enter [C]ancel, [P]ending (Resend Test) or <Return> for unchanged'
                  VALID.ENTRIES = 'C':@VM:'P':@VM:CARRIER.REC<102>
               END
         END CASE
         CALL GEN.IN(X.POS,Y.POS,EDIT.MASK,'',Q,0,2,'','',2,X.POS,Y.POS,0,QI,HELP,0,23)
         IF QI='' AND CARRIER.REC<102>#'' THEN QI=CARRIER.REC<102>
         BEGIN CASE
            CASE QI=''
               BEGIN CASE
                  CASE CARRIER.REC<102>='' ; STATUS.DESC = ''
                  CASE CARRIER.REC<102>='A' ; STATUS.DESC = 'A - Active'
                  CASE CARRIER.REC<102>='P' ; STATUS.DESC = 'P - Pending Approval'
                  CASE CARRIER.REC<102>='I' ; STATUS.DESC = 'I - Inactive'
                  CASE CARRIER.REC<102>='C' ; STATUS.DESC = 'C - Cancelled'
               END CASE
               CRT @(17,4):STATUS.DESC 'L#50'
               RETURN
            CASE QI='EX'
               GOTO THE.END
            CASE QI='I' OR QI='C' OR QI='A' OR QI='P'
               LOCATE QI IN VALID.ENTRIES<1>,1 SETTING QQQ ELSE
                  CALL ELINE('INVALID ENTRY')
                  GOTO CHG.STATUS
               END
               IF QI='A' AND CARRIER.REC<124>='A' THEN
                  CALL ELINE('American Express is turned on. You must turn off American Express first')
                  GOTO CHG.STATUS
               END
               IF QI='A' AND CARRIER.REC<127>='A' THEN       ; * SWB01
                  CALL ELINE('MasterCard is turned on. You must turn off MasterCard first')          ; * SWB01
                  GOTO CHG.STATUS        ; * SWB01
               END                       ; * SWB01
               STATUS=QI
               IF STATUS='P' AND CARRIER.REC<102>#'P' THEN
                  FOR M=111 TO 116
                     INS '' BEFORE CARRIER.REC<M,1,1>
                  NEXT M
                  CARRIER.REC<102>=STATUS
                  GOSUB DISPLAY.SCREEN
                  GOSUB DISPLAY.PAGE
               END
               CARRIER.REC<102>=STATUS
               BEGIN CASE
                  CASE CARRIER.REC<102>='' ; STATUS.DESC = ''
                  CASE CARRIER.REC<102>='A' ; STATUS.DESC = 'A - Active'
                  CASE CARRIER.REC<102>='P' ; STATUS.DESC = 'P - Pending Approval'
                  CASE CARRIER.REC<102>='I' ; STATUS.DESC = 'I - Inactive'
                  CASE CARRIER.REC<102>='C' ; STATUS.DESC = 'C - Cancelled'
               END CASE
               CRT @(17,4):STATUS.DESC 'L#50'
               RETURN
            CASE 1
               GOTO CHG.STATUS
         END CASE

***********************************************************************************

GET.NAME:***

         X.POS=17
         Y.POS=5
         CRT @(0,22):@(-3):'Enter ACH Name for this Carrier or [EX]it.':
         IF CARRIER.REC<122>='' THEN
            SAVE.NAME=''
            EDIT.MASK=STR(EDIT.MASK.CHAR,40)
         END ELSE
            SAVE.NAME=CARRIER.REC<122>
            EDIT.MASK=SAVE.NAME 'L#40'
         END
         HELP=''
         CALL GEN.IN(X.POS,Y.POS,EDIT.MASK,'',Q,0,40,'','',40,X.POS,Y.POS,0,QI,HELP,0,23)
         IF QI='' AND SAVE.NAME#'' THEN QI=SAVE.NAME
         BEGIN CASE
            CASE QI='EX'
               GOTO THE.END
            CASE QI='X'
               BACK.FLAG=TRUE
               CRT @(X.POS,Y.POS):SAVE.NAME
               RETURN
            CASE QI=''
               GOTO GET.NAME
            CASE 1
               NAME=QI
               CARRIER.REC<122>=NAME
               CRT @(X.POS,Y.POS):NAME
               RETURN
         END CASE

***********************************************************************************

GET.EMAIL:***
         VIN='' ; VOUT=''
         HDG.TXT='ACH Remit Email Address'
         VOUT=CARRIER.REC<121>
         VIN<1>=PROG.DESC
         VIN<2>=PACK.NAME
         VIN<3>=HDG.TXT
         VIN<4>=0                        ; * DISPLAY MODE
         VIN<5>=1                        ; * PROC LVL 1=TO 2=CC 3=BCC
         CALL FB.EMAIL(VIN,VOUT)
         CARRIER.REC<121>=VOUT<1>
         GOSUB DISPLAY.SCREEN
         GOSUB DISPLAY.PAGE
         RETURN

***********************************************************************************
FAILSAFE.CHECK:***
* There are no failsafe conditions to check currently.
         FAILSAFE.OK=TRUE                ; * Assume no problems and try to find problems
         RETURN

********************************************************************************

SAVE.CONTROL.REC:***

         WRITE CARRIER.REC ON F.CARRIERS,CARRIER.ID
         SAGE.VIN=''     ; * DRF02
         SAGE.VIN<1>='NEW.SAGE.CARRIER'     ; * DRF02
         SAGE.VIN<2>=CARRIER.ID     ; * DRF02
         SAGE.VOUT=''     ; * DRF02
         CALL UPD.SAGE.CHANGE.REC(SAGE.VIN,SAGE.VOUT,F.SL)     ; * DRF02

         RETURN

********************************************************************************

FIND.LOCKED:

         STMT = 'LIST.READU EVERY'
         EXECUTE STMT CAPTURING OUTPUT
         FL.LEN = DCOUNT(OUTPUT,@AM)
         FL.USER = 'Someone'
         FOUND = FALSE

         FOR X = 1 TO FL.LEN UNTIL FOUND
            T.USER = OCONV(TRIM(OUTPUT<X>[44,9]),'MCU')
            T.FILE = TRIM(OUTPUT<X>[53,17])
            IF T.FILE = FIND.LOCKED.NAME THEN
               FL.USER = T.USER
               FOUND = TRUE
            END
         NEXT

         CALL ELINE(FL.USER:" is in Carrier ":FIND.LOCKED.NAME:". Find them and tell them to get out of that carrier!")

         RETURN

********************************************************************************

DISPLAY.CONTROL.RECORDS:***
         CRT @(0,0):@(-1)
         EXECUTE 'SORT FB.CAR.CTRL 1 2 3 4'
         CALL ELINE('')
         RETURN

********************************************************************************

ASK.FOR.NUM:***
* A general number prompt routine
* Inputs:
*    AFN.MSG  - message to display
*    AFN.MASK - default value
*    AFN.MIN  - min value allowed
*    AFN.MAX  - max value allowed
* Outputs:
*    AFN.ANSWER

         AFN.ANSWER=''

AFN.1:
         CRT @(0,22):AFN.MSG:@(-4)
         HELP='Entry Options: [':AFN.MIN:'-':AFN.MAX:'] [X]=Back'
         EDIT.MASK=AFN.MASK:' '
         CALL GEN.IN(LEN(AFN.MSG)+1,22,EDIT.MASK,'',Q,0,LEN(AFN.MAX),'','',2,LEN(AFN.MSG)+1,22,0,QI,HELP,0,23)
         QI=TRIM(OCONV(QI,'MCU'))
         IF QI='' THEN QI=TRIM(EDIT.MASK)
         BEGIN CASE
            CASE QI='X'
            CASE QI>=AFN.MIN AND QI<=AFN.MAX
            CASE 1
               CALL ELINE('Invalid entry. Try again.')
               GOTO AFN.1
         END CASE
         AFN.ANSWER=QI
         CRT @(0,22):@(-4):
         CRT @(0,23):@(-4):
         RETURN

********************************************************************************

ASK.Y.OR.N:***
* This is a general Yes/No prompt routine.
* Inputs:
*    YN.MSG, YN.MASK
* Outputs:
*    YN.ANSWER

         YN.ANSWER=''

Y.OR.N:
         CRT @(0,22):YN.MSG:@(-4)
         HELP='Entry Options: [Y]es [N]o'
         EDIT.MASK=YN.MASK'L#1'
         CALL GEN.IN(LEN(YN.MSG)+1,22,EDIT.MASK,'',Q,0,1,'','',2,LEN(YN.MSG)+1,22,0,QI,HELP,0,23)
         QI=TRIM(OCONV(QI,'MCU'))
         IF QI='' THEN QI=TRIM(EDIT.MASK)
         BEGIN CASE
            CASE QI='Y'
            CASE QI='N'
            CASE 1
               CALL ELINE('Invalid entry. Try again.')
               GOTO Y.OR.N
         END CASE
         CRT @(0,22):@(-4):
         CRT @(0,23):@(-4):
         YN.ANSWER=QI
         RETURN

********************************************************************************



LAST.CHANCE.TO.SAVE:***
         IF CARRIER.REC#OLD.CARRIER.REC THEN
            YN.MSG='You have unsaved changes. Save before exiting?'
            YN.MASK=''
            GOSUB ASK.Y.OR.N
            IF YN.ANSWER='Y' THEN
               GOSUB FAILSAFE.CHECK
               IF FAILSAFE.OK THEN
                  GOSUB SAVE.CONTROL.REC
                  RETURN
               END ELSE
                  RETURN
               END
            END
            RETURN
         END

********************************************************************************

THE.END:***
         CRT @(0,22):@(-3):
         RETURN
      END
