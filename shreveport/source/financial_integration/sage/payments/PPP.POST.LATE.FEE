****************************************
* Program name : PPP.POST.LATE.FEE
* Author       : Greg Bino
* Date written : March 25 2021
* Library      : FBBP
* COPYRIGHT (c) : AFS, LLC 2021, All Rights Reserved.
*
* Charge Late Fee for unpaid Pre Paid ParceL Bills
* Last updated by afs (AFSLOGISTICS\gbino) at 09:02:57 on 06/01/2021.
*
* Start modification history
* Mod nn  mm/dd/yy, init, req #, description

* End modification history
*
*******************************************
$INCLUDE UNIVERSE.INCLUDE ODBC.H

      BEG.DATE = DATE()
      END.DATE = DATE()

      GO 10
      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'PPP.POST.LATE.FEE' ; UPL.VOUT = ''
      CALL GET.USER.NEW(USER,CH.NUM)
      UPL.VIN<3> = USER
      UPL.VIN<4> = CH.NUM
      ***     CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)

      BEGIN CASE
         CASE USER='DAVID'
         CASE USER = "GBINO"
         CASE USER = "NMEDDAUGH"
         CASE USER='SV.UVAUTO'
         CASE USER='UVTASKS'
         CASE 1
            CRT "YOU ARE NOT AUTHORIZED TO USE THIS PROGRAM"
            STOP
      END CASE

      VIN1=""
      VIN1<1> = "PPP.POST.LATE.FEE"
      VIN1<2> = USER
      VIN1<3> = SYSTEM(18)
      VIN1<4> = "S"
      ***    CALL PROGTRACK(VIN1,VOUT1)

      GET (ARG.,1) OBEG.DATE THEN
         BEG.DATE=ICONV(OBEG.DATE,'D')
      END ELSE
         BEG.DATE=DATE()
      END
      GET (ARG.,2) OEND.DATE THEN
         END.DATE=ICONV(OEND.DATE,'D')
      END ELSE
         END.DATE=DATE()
      END
      GET (ARG.,3) CLIENT.LIST.NAME ELSE CLIENT.LIST.NAME=''
      GET (ARG.,4) OPT.LIST ELSE OPT.LIST=''
      GET (ARG.,5) START.TIME ELSE START.TIME=''
      IF @TTY = "phantom" THEN
      END ELSE
         CRT @(0,0):@(-1):@(0,3):'PPP.POST.LATE.FEE - Processing Clients from ':BEG.DATE'D2/':' to ':END.DATE'D2/':'...'
      END

      IF CLIENT.LIST.NAME#'' AND CLIENT.LIST.NAME#'ALL' THEN
         STMT='GET-LIST ':CLIENT.LIST.NAME
      END ELSE
         STMT='SSELECT PPP.CLIENT '
      END
      EXECUTE STMT RTNLIST CLIENT.LIST CAPTURING RESULTS
      NUM.CLIENTS=@SELECTED

      DEBUG
10:
      EXPECT = ""
      NULL=""
      TOT.NUM.BILLS=0
      TOT.AMT.01075 = 0
      TOT.AMT.00015 = 0
      TOT.AMT.00041 = 0
      ERROR.CNT=0
      ERRORS=''
      GOSUB OPEN.FILES
      CLIENT.EOF=0
      CLIENT.CNT=0
      DEBUG
      LOOP
         READNEXT CLIENT.ID FROM CLIENT.LIST ELSE CLIENT.EOF=1
      UNTIL CLIENT.EOF DO
         CLIENT.CNT+=1

         READV CLIENT.NAME FROM F.CLIENT,CLIENT.ID,2 ELSE
            CLIENT.NAME = "NOF"
         END
         READ PPP.CLIENT FROM F.CLIENT.PPP,CLIENT.ID THEN
            EFF.DT = PPP.CLIENT<1>
            IF EFF.DT GT DATE() THEN
               ***CONTINUE
               RETURN
            END
            LATE.DAYS = PPP.CLIENT<14>
            LATE.FEE.TYP = PPP.CLIENT<15>
            LATE.FEE.AMT = PPP.CLIENT<16>
            LATE.WINDOW = DATE() - LATE.DAYS

            IF @TTY = "phantom" THEN
               DISPLAY CLIENT.ID'R#5'
            END ELSE
               CRT @(0,5):@(-4):CLIENT.ID:' - ':CLIENT.NAME
            END

            OPEN 'PPP.CLIENT.XREF,':CLIENT.ID TO F.XREF ELSE
               STMT = 'CREATE-FILE DATA PPP.CLIENT.XREF,':CLIENT.ID:' ':1001:".":1
               EXECUTE STMT CAPTURING STUFF RETURNING JUNK
               OPEN 'PPP.CLIENT.XREF,':CLIENT.ID TO F.PPP ELSE
                  CALL ELINE('UNABLE TO CREATE PPP.CLIENT.XREF FILE')
                  OPN.FLG = 0
               END
            END
            OPEN 'PPP.CLIENT.BILLS,':CLIENT.ID TO F.PPP ELSE
               STMT = 'CREATE-FILE DATA PPP.CLIENT.BILLS,':CLIENT.ID:' ':1001:".":1
               EXECUTE STMT CAPTURING STUFF RETURNING JUNK
               OPEN 'PPP.CLIENT.BILLS,':CLIENT.ID TO F.PPP ELSE
                  CALL ELINE('UNABLE TO CREATE FILE')
                  OPN.FLG = 0
               END
            END

            STMT = 'SELECT PPP.CLIENT.BILLS,':CLIENT.ID
            STMT:=' WITH PAID.DT'
            STMT:=' AND WITH NO CLIENT.PAID.US'    ; * select bills we have pre paid and the client has NOT reembursed us
            EXECUTE STMT RTNLIST BILL.LIST CAPTURING OUTPUT

            BILL.CNT=0
            BILL.PER=0
            BILL.EOF=0
            LOOP
               READNEXT BILL.ID FROM BILL.LIST ELSE BILL.EOF=1
            UNTIL BILL.EOF DO
               BILL.CNT+=1
               ***  BILL.PCT=ICONV(BILL.CNT/NUM.BILLS*100,'MR2')
               IF NOT(REM(BILL.CNT,10)) AND @TTY # "phantom" THEN
                  CRT @(0,10):@(-3):' #Bills - ':' - ':BILL.CNT'R#15'
               END
               READ BILL.REC FROM F.PPP,BILL.ID THEN
                  DUE.DT = BILL.REC<2>
                  CARRIER.ID=FIELD(BILL.ID,'*',1)
                  PRO=FIELD(BILL.ID,'*',2)
                  SEQ=FIELD(BILL.ID,'*',3)
                  PROC.DT = BILL.REC<2>
                  READ LATE.FEES FROM F.LATE.FEES,CLIENT.ID:"*":PROC.DT ELSE LATE.FEES = ""
                  LOCATE(PROC.DT,PAID.ARRY,1;CPOS) ELSE
                     PAID.ARRY<1,CPOS> = PROC.DT
                     IF SEQ#0 THEN CONTINUE
                     AFS.PAID.DT = BILL.REC<4>
                     IF AFS.PAID.DT LT LATE.WINDOW THEN      ; * client has not reembursed us in time allowed. hit with late fee
                        READV BILL.TOT.00015 FROM F.XREF,PROC.DT:"*00015",1 ELSE BILL.TOT.00015 = 0
                        READV BILL.TOT.00041 FROM F.XREF,PROC.DT:"*00041",1 ELSE BILL.TOT.00041 = 0
                        READV BILL.TOT.01075 FROM F.XREF,PROC.DT:"*01075",1 ELSE BILL.TOT.01075 = 0
                        IF LATE.FEES # "" THEN
                           PREV.LATE.FEES = SUM(LATE.FEES<2>)
                        END ELSE
                           PREV.LATE.FEES = 0
                        END
                        BILL.TOT = BILL.TOT.00015 + BILL.TOT.00041 + BILL.TOT.01075 + PREV.LATE.FEES

                        BILL.FEE = (BILL.TOT * OCONV(LATE.FEE.AMT,"MR2"))
                        FEE.ID = DATE()+1:"*":CLIENT.ID:"*":CARRIER.ID
                        FEE.REC=''
                        FEE.REC<1> = DATE()+1
                        FEE.REC<2> = BILL.FEE
                        FEE.REC<3> = 0
                        FEE.REC<4> = 0
                        FEE.REC<5> = DUE.DT
                        FEE.REC<6> = "PRE.PAID.LATE.FEE"
                        WRITE FEE.REC ON F.FEE,FEE.ID
                        LATE.FEES<1,-1> = DATE()
                        LATE.FEES<2,-1> = BILL.FEE
                        WRITE LATE.FEES ON F.LATE.FEES,CLIENT.ID:"*":PROC.DT
                        IF MOD(BILL.CNT,10)=0 THEN
                           ** CRT @(0,22):@(-4):
                        END
                     END
                  END
               END
SKIP.BILL:     *
            REPEAT

            IF TOT.NUM.BILLS+0#0 THEN
               ** CRT @(0,22):@(-3):
            END
            **END
         END
SKIP.CLIENT:*
      REPEAT
      *** END
***END
      GO THE.END

*****************************************************************
THE.END:***
****************************************************************

      IF ERRORS#'' THEN
         ERROR.CNT+=1
         IF ERROR.CNT>3 THEN
            MVIN=''
            MVIN<1>='nmeddaugh@afs.net'
            MVIN<4>='AFS@AFS.NET'
            MVIN<5>='PPP  Update Errors'
            TEXT='On ':DATE()'D2/':' ':OCONV(TIME(),'MTHS'):', ':USER:' updated '
            TEXT<1,-1>=ERRORS
            TEXT<1,-1>=' '
            TEXT<1,-1>=ERRORS
            MVIN<6>=TEXT
            MVIN<7>=1
            CALL SENDMAIL(MVIN,MVOUT)
         END ELSE
            **         WRITE ERRORS ON F.ERR,"SQL.FBHIST":TIMEDATE()
****            GO 10
         END
      END

      VIN1=''
      VIN1<1> = "UPD.SQL.FBHIST.T"
      VIN1<2> = USER
      VIN1<3> = SYSTEM(18)
      VIN1<4> = "E"
**   CALL PROGTRACK(VIN1,VOUT1)

      STOP
******************************************************
OPEN.FILES:
********************************************************

      OPEN 'FB.TABLES' TO F.TABLES ELSE
         CALL OPEN.ABORT("FB.TABLES",PROG.NAME)
      END
      OPEN 'CLIENTS' TO F.CLIENT ELSE
         CALL OPEN.ABORT("CLIENTS",PROG.NAME)
      END
      OPEN 'PPP.CLIENT' TO F.CLIENT.PPP ELSE
         CALL OPEN.ABORT("PPP.CLIENT",PROG.NAME)
      END
      OPEN 'ERRORS.LOG' TO F.ERR ELSE
         CALL OPEN.ABORT("ERRORS.LOG",PROG.NAME)
      END
      OPEN 'FB.PROG.FEE' TO F.FEE ELSE
         CALL OPEN.ABORT("FB.PROG.FEE",PROG.NAME)
      END
      OPEN 'PPP.LATE.FEE' TO F.LATE.FEE ELSE
         CALL OPEN.ABORT("PPP.LATE.FEE",PROG.NAME)
      END

      READ LI.CODE.REC FROM F.TABLES,'LI.CODES' ELSE LI.CODE.REC=''

      RETURN
   END
