      SUBROUTINE GET.IMG.SCAN.DATE(VIN,VOUT)
***********************************************************************
* Program name :  GET.IMG.SCAN.DATE
* Author       :  Nicole Hennick
* Date written :  10/14/2021
* Library      :  FBBP
$* COPYRIGHT (C) 2016 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED.
*
* Get the image scan date from the image database
*
* Last updated by afs (AFSLOGISTICS\nmeddaugh) at 09:23:01 on 10/14/2021
*
* Start modification history
* 10/14/21 : NKH00 : ACCU-1419 New program
* End modification history
***********************************************************************
$INCLUDE PROG.ADMIN INC_OPTIONS
$INCLUDE UNIVERSE.INCLUDE UDO.H

      * Initialize variables      
      PROMPT''
      CALL GET.USER.NEW(USER.NAME,CH.NUM)
      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'OLD.IMAGE.RPT' ; UPL.VOUT = ''
      UPL.VIN<3> = USER.NAME
      UPL.VIN<4> = CH.NUM
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)
      STATUS = 0
*      CALL GET.SERVER.INFO(SVR.VIN,SVR.VOUT)     
*      SERVER.NAME=SVR.VOUT<1>                    

      RESP.CNT=1
      RESP = ''
      VOUT=''
      PROMPT ''
      TIMEOUT = 30000
      PROG.NAME='GET.IMG.SCAN.DATE'

      * Get parameters
      CLIENT.ID = VIN<1>
      IMAGE.NO = VIN<2>
      
      IF IMAGE.NO = '' THEN 
         VOUT = ''
         RETURN
      END

*      IF SERVER.NAME = 'AFS' THEN  
         URL = 'http://imagingws.afs.net/images/list?clientFolder=':CLIENT.ID:'&imageKey=':IMAGE.NO                                                
*      END ELSE                     
*         URL = 'http://imagingws.qa.afs.net/images/list?clientFolder=':CLIENT.ID:'&imageKey=':IMAGE.NO  
*      END                          

      * Main Logic
      GOSUB SEND.REST.REQUEST  
      IF RESTDATA # "[]" THEN   
         GOSUB PARSE.RESULTS  
         VOUT<1> = IMAGE.DT
      END ELSE
         VOUT<1> = ''
      END
      
      GOTO 9999

***********************************************************************
SEND.REST.REQUEST:
***********************************************************************
      METHOD="GET"
      STAT = SETHTTPDEFAULT("VERSION", "1.1")
      STAT = CREATEREQUEST(URL, METHOD, RESTGET)
      STAT = SETREQUESTHEADER(RESTGET, "Content-Type", "application/json;charset=utf-8")
      STAT = SUBMITREQUEST(RESTGET, 30000, "", HEADER, RESTDATA, HTTPSTATUS)

      RETURN

************************************************************************
PARSE.RESULTS:
************************************************************************
      UDOHANDLE = ""
      RESP = ''
      STATUS =UDORead(RESTDATA, UDOFORMAT_JSON, UDOHANDLE )
      ST = UDOArrayGetSize(UDOHANDLE, ITEM_SIZE) ; IF ST NE UDO_SUCCESS THEN
         ITEM_SIZE = 0
      END
      FOR II = 1 TO ITEM_SIZE
         ST = UDOArrayGetItem(UDOHANDLE, II, result_udo, UDOTYPE) ; IF ST NE UDO_SUCCESS THEN GOSUB ERR.HANDLER
         ST = UDOGetProperty(result_udo, "imageKey", IMAGE.NO, UDOTYPE) ; IF ST NE UDO_SUCCESS THEN GOSUB ERR.HANDLER
         IF UDOTYPE = UDO_NULL THEN IMAGE.NO = ""
         ST = UDOGetProperty(result_udo, "imagePath", IMAGE.PATH, UDOTYPE) ; IF ST NE UDO_SUCCESS THEN GOSUB ERR.HANDLER
         IF UDOTYPE = UDO_NULL THEN IMAGE.PATH = ""
         ST = UDOGetProperty(result_udo, "carrierName",CARRIERNAME, UDOTYPE) ; IF ST NE UDO_SUCCESS THEN GOSUB ERR.HANDLER
         IF UDOTYPE = UDO_NULL THEN CARRIERNAME = ""
         ST = UDOGetProperty(result_udo, "scanDate",IMAGE.DT, UDOTYPE) ; IF ST NE UDO_SUCCESS THEN GOSUB ERR.HANDLER
         IF UDOTYPE = UDO_NULL THEN IMAGE.DT = ""  
         IF IMAGE.DT = '' THEN
            FILE.NAME = FIELD(IMAGE.PATH,'\',9)
            FILE.NAME = FIELD(FILE.NAME,"_",1)
            FILE.LEN = LEN(FILE.NAME)
            BEGIN CASE
               CASE FILE.LEN = 14 
                  IMAGE.DT = FILE.NAME[7,8]
               CASE FILE.LEN = 15
                  IMAGE.DT = FILE.NAME[8,8]
               CASE 1
                  IMAGE.DT = ''
            END CASE
            IF IMAGE.DT > '' THEN IMAGE.DT = ICONV(IMAGE.DT,"D")            
         END ELSE                  
            YY=IMAGE.DT[3,2]
            MM=IMAGE.DT[6,2]
            DD=IMAGE.DT[9,2]
            IMG.DT = MM:'\':DD:'\':YY
            IMAGE.DT = ICONV(IMG.DT,"D")                
         END
      NEXT II
      
      RETURN

************************************************************************
ERR.HANDLER:
************************************************************************
      ERRCODE = "" ; ERRMSG = ""
      S = UDOGetLastError(ERRCODE, ERRMSG)
      ERROR = "UDO ERROR: (":ERRCODE:") ":ERRMSG
*      VOUT<1> =ERROR

      RETURN
         
************************************************************************
9999:* Program End
************************************************************************
*      CRT 'VOUT = ':VOUT
      RETURN
        

