*
* Change the client number of an Rejected bill.
*  Copyright (C) 2001 by AFS Logistics, LLC.
*  Author: David Friend
********************************************************************************
* 050212 - SWB01 - PROJ 182 - Track Freight Bills from Mail Room to Processing
* 052814 - JMK01 - SysAid#9788 - SENDMAIL.NEW needs to be removed from active programs
* 030719 - NKH01 - ACCU-316 Modified CREATE-FILE file sizes
********************************************************************************
*
*     Company and Program variables
*
      CO.NAME='AFS Logistics, LLC'
      PROG.NAME='Move Rejections to a Different Client'
      PROG.DESC='Change Client Rejections'
      PACK.NAME='Freight Payment'
      CALL GET.USER(USER.NAME)
      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'CHANGE.CLIENT.REJECTIONS' ; UPL.VOUT = ''           ; * NPR_UPL 04/22/2010
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)       ; * NPR_UPL 04/22/2010
      USER.NAME=OCONV(USER.NAME,'MCU')
      MASK.CHAR='-'

*
*     Open files to start
*
      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         CALL OPEN.ABORT('CLIENTS',PROG.NAME)
      END
      OPEN '','CARRIERS' TO F.CARRIERS ELSE
         CALL OPEN.ABORT('CARRIERS',PROG.NAME)
      END
      OPEN '','FB.BILLS.CRX' TO F.CRX ELSE
         CALL OPEN.ABORT("FB.BILLS.CRX",PROG.NAME)
      END
      OPEN '','FB.TIMELINE.SUMMARY' TO F.TIMELINE.SUMMARY ELSE         ; * SWB01
         CALL OPEN.ABORT('FB.TIMELINE.SUMMARY',PROG.NAME)    ; * SWB01
      END                                ; * SWB01
      OPEN '','BCTRL' TO F.BCTRL ELSE    ; * SWB01
         CALL OPEN.ABORT("BCTRL",PROG.NAME)        ; * SWB01
      END                                ; * SWB01
      OPEN '','FB.TABLES' TO F.TABLES ELSE         ; * SWB01
         CALL OPEN.ABORT('FB.TABLES',PROG.NAME)    ; * SWB01
      END                                ; * SWB01
      READ DBCTRL FROM F.BCTRL, USER.NAME THEN     ; * SWB01
         USER.TYPE = DBCTRL<14>          ; * SWB01
         IF USER.TYPE # 'A' THEN USER.TYPE = ''    ; * SWB01
         USER.DPT = DBCTRL<15>           ; * SWB01
      END ELSE                           ; * SWB01
         CALL ELINE('User not setup properly. Notify I.T.')  ; * SWB01
         STOP
      END                                ; * SWB01

*
*     List of input variables.  Defaults are assigned.
*
90:****
      FROM.CLIENT.ID=''
      FROM.CLIENT.REC=''
      FROM.CLIENT.NAME=''
      FROM.CLIENT.ADDR=''
      FROM.CLIENT.CITY=''
      FROM.CLIENT.STATE=''
      FROM.CLIENT.ZIP=''

      TO.CLIENT.ID=''
      TO.CLIENT.REC=''
      TO.CLIENT.NAME=''
      TO.CLIENT.ADDR=''
      TO.CLIENT.CITY=''
      TO.CLIENT.STATE=''
      TO.CLIENT.ZIP=''

      CARRIER.ID=''
      CARRIER.REC=''
      CARRIER.NAME=''
      CARRIER.ADDR=''
      CARRIER.CITY=''
      CARRIER.STATE=''
      CARRIER.ZIP=''

      PRO.NUMBER=''
      TR.ERROR.MAX = 50                  ; * SWB01


      GOSUB GET.SCREEN.DISPLAY

*
*     Display heading and prompts
*
      CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      CRT @(0,2):STR('=',79)
      CRT SCREEN.DISPLAY

*
*     Get Client ID
*
100:***
      CRT @(23,4):@(-4):@(17,5):@(-4):@(17,6):@(-4):
      MASK=FROM.CLIENT.ID:STR(MASK.CHAR,5-LEN(FROM.CLIENT.ID))
      HELP='Enter from Client ID Number or Name for Search. [X]=Exit [EX]=Exit'
      CALL GEN.IN(23,4,MASK,'',Q,0,20,'','',2,23,4,0,QI,HELP,0,23)
      QI=TRIM(OCONV(QI,'MCU'))
      BEGIN CASE
         CASE QI='EX' OR QI='X'
            GOTO 9999
         CASE NOT(QI MATCHES '0N') AND QI#''
            CALL SOUNDEX.DISPLAY(QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            CRT @(0,2):STR('=',79)
            CRT SCREEN.DISPLAY
            BEGIN CASE
               CASE ITEM.LIST=''
                  CALL ELINE('No matches found.')
                  GOTO 100
               CASE DCOUNT(ITEM.LIST,@AM) GT 1
                  GOTO 100
               CASE 1
                  DATA ITEM.LIST
                  GOTO 100
            END CASE
         CASE QI=''
            IF FROM.CLIENT.ID='' THEN
               GOTO 100
            END ELSE
               QI= FROM.CLIENT.ID
            END
         CASE NOT(NUM(QI))
            CALL ELINE('Invalid Client ID.')
            GOTO 100
      END CASE
      FROM.CLIENT.ID=QI'R%5'

*
*     Read client record
*
      READ CLIENT.REC FROM F.CLIENTS,FROM.CLIENT.ID ELSE
         CALL ELINE('Client ':FROM.CLIENT.ID:' was not found.')
         FROM.CLIENT.ID=''
         GOTO 100
      END

*
*     Make assignments from client rec and display data
*
      FROM.CLIENT.NAME= CLIENT.REC<2>
      FROM.CLIENT.ADDR= CLIENT.REC<3>
      FROM.CLIENT.CITY= CLIENT.REC<4>
      FROM.CLIENT.STATE= CLIENT.REC<5>
      FROM.CLIENT.ZIP= CLIENT.REC<6>
      GOSUB DATA.DISPLAY
*
*     Get Client ID
*
150:***
      CRT @(23,8):@(-4):@(23,9):@(-4):@(23,10):@(-4):
      MASK=TO.CLIENT.ID:STR(MASK.CHAR,5-LEN(TO.CLIENT.ID))
      HELP='Enter to Client ID Number or Name for Search. [X]=Exit [EX]=Exit'
      CALL GEN.IN(23,8,MASK,'',Q,0,20,'','',2,23,8,0,QI,HELP,0,23)
      QI=TRIM(OCONV(QI,'MCU'))
      BEGIN CASE
         CASE QI='EX'
            GOTO 9999
         CASE QI='X'
            GOTO 100
         CASE NOT(QI MATCHES '0N') AND QI#''
            CALL SOUNDEX.DISPLAY(QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            CRT @(0,2):STR('=',79)
            CRT SCREEN.DISPLAY
            BEGIN CASE
               CASE ITEM.LIST=''
                  CALL ELINE('No matches found.')
                  GOTO 150
               CASE DCOUNT(ITEM.LIST,@AM) GT 1
                  GOTO 150
               CASE 1
                  DATA ITEM.LIST
                  GOTO 150
            END CASE
         CASE QI=''
            IF TO.CLIENT.ID='' THEN
               GOTO 100
            END ELSE
               QI=TO.CLIENT.ID
            END
         CASE NOT(NUM(QI))
            CALL ELINE('Invalid Client ID.')
            GOTO 100
      END CASE
      TO.CLIENT.ID=QI'R%5'
      IF TO.CLIENT.ID=FROM.CLIENT.ID THEN
         CALL ELINE('From client:':FROM.CLIENT.ID:' cannot be the same as the To client: ':TO.CLIENT.ID)
         GOTO 100
      END

*
*     Read client record
*
125:***
      READ CLIENT.REC FROM F.CLIENTS,TO.CLIENT.ID ELSE
         CALL ELINE('Client ': TO.CLIENT.ID:' was not found.')
         CLIENT.ID=''
         GOTO 100
      END
      IF CLIENT.REC<30>='I' THEN
         CALL ELINE('Client ':TO.CLIENT.ID:' is inactive.')
         CLIENT.ID=''
         GOTO 100
      END

*
*     Make assignments from client rec and display data
*
      TO.CLIENT.NAME= CLIENT.REC<2>
      TO.CLIENT.ADDR= CLIENT.REC<3>
      TO.CLIENT.CITY= CLIENT.REC<4>
      TO.CLIENT.STATE= CLIENT.REC<5>
      TO.CLIENT.ZIP= CLIENT.REC<6>
      GOSUB DATA.DISPLAY
*
*     Open BILLS files based on CLIENT.ID
*

      OPEN '','FB.BILLS.HIST,':FROM.CLIENT.ID TO F.FROM.FB.BILLS.HIST ELSE
         CALL ELINE('Cannot open FB.BILLS.HIST,':FROM.CLIENT.ID:'. Check Client Number.')
         GOTO 100
      END
      OPEN '','FB.BILLS,':FROM.CLIENT.ID TO F.FROM.FB.BILLS ELSE
         CALL ELINE('Cannot open FB.BILLS,':FROM.CLIENT.ID:'. Check Client Number.')
         GOTO 100
      END
      OPEN '','FB.BILLS.ACCESS,':FROM.CLIENT.ID TO F.FROM.FB.ACCESS ELSE         ; * SWB01
         CALL ELINE('Cannot open FB.BILLS.ACCESS,':FROM.CLIENT.ID:'. Check Client Number.')          ; * SWB01
         GOTO 100                        ; * SWB01
      END                                ; * SWB01
      OPEN '','FB.BILLS.HIST,':TO.CLIENT.ID TO F.TO.FB.BILLS.HIST ELSE
         CALL ELINE('Cannot open FB.BILLS.HIST,':TO.CLIENT.ID:'. Check Client Number.')
         GOTO 100
      END
      OPEN '','FB.BILLS,':TO.CLIENT.ID TO F.TO.FB.BILLS ELSE
         CALL ELINE('Cannot open FB.BILLS,':TO.CLIENT.ID:'. Check Client Number.')
         GOTO 100
      END
      OPEN '','FB.BILLS.ACCESS,':TO.CLIENT.ID TO F.TO.FB.ACCESS ELSE   ; * SWB01
         CALL ELINE('Cannot open FB.BILLS.ACCESS,':TO.CLIENT.ID:'. Check Client Number.')  ; * SWB01
         GOTO 100                        ; * SWB01
      END                                ; * SWB01

*
*     Get Carrier ID
*
200:***
      CRT @(17,12):@(-4):@(17,13):@(-4):@(17,14):@(-4):
      MASK= CARRIER.ID:STR(MASK.CHAR,5-LEN( CARRIER.ID))
      HELP='Enter Carrier ID Number or Name for Search.[X]=Back [EX]=Exit'
      CALL GEN.IN(17,12,MASK,'',Q,0,20,'','',2,17,12,0,QI,HELP,0,23)
      QI=TRIM(OCONV(QI,'MCU'))
      BEGIN CASE
         CASE QI='EX'
            GOTO 9999
         CASE QI='X'
            GOTO 150
         CASE NOT(QI MATCHES '0N') AND QI#''
            CALL SOUNDEX.DISPLAY(QI,'CARRIERS','SDX.CARRIER,NAME','1,3,4',ITEM.LIST)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            CRT @(0,2):STR('=',79)
            CRT SCREEN.DISPLAY
            GOSUB DATA.DISPLAY
            BEGIN CASE
               CASE ITEM.LIST=''
                  CALL ELINE('No matches found.')
                  GOTO 200
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                  GOTO 200
               CASE ITEM.LIST#''
                  IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
                  GOTO 200
            END CASE
         CASE QI=''
            IF CARRIER.ID='' THEN
               GOTO 200
            END ELSE
               QI= CARRIER.ID
            END
         CASE NOT(NUM(QI))
            CALL ELINE('Invalid Carrier ID.')
            GOTO 200
      END CASE
      CARRIER.ID=QI'R%5'
*
*     Read carrier record
*
      READ CARRIER.REC FROM F.CARRIERS,CARRIER.ID ELSE
         CALL ELINE('"':CARRIER.ID:'" was not found.')
         CARRIER.ID=''
         GOTO 200
      END

*
*     Make assignments from carrier rec and display data
*
      CARRIER.NAME= CARRIER.REC<1>
      CARRIER.ADDR= CARRIER.REC<2>
      CARRIER.CITY= CARRIER.REC<3>
      CARRIER.STATE= CARRIER.REC<4>
      CARRIER.ZIP= CARRIER.REC<5>
      GOSUB DATA.DISPLAY

*
*     Get PRO.NUMBER
*
300:***
      MASK= PRO.NUMBER:STR(MASK.CHAR,20-LEN( PRO.NUMBER)):@(-4)
      HELP='Enter the Bill Pro Number. [X]=Back [EX]=Exit'
      CALL GEN.IN(17,16,MASK,'',Q,0,20,'','',2,17,16,0,QI,HELP,0,23)
      QI=TRIM(OCONV(QI,'MCU'))
      BEGIN CASE
         CASE QI='EX'
            GOTO 9999
         CASE QI='X'
            GOTO 200
         CASE QI=''
            IF PRO.NUMBER='' THEN
               GOTO 300
            END ELSE
               QI= PRO.NUMBER
            END
      END CASE
      PRO.NUMBER=OCONV(QI,'MCU')
      PRO.NUMBER.ERROR=0
      GOSUB PRO.NUMBER.KEYBOARD.SHORTCUTS
      IF PRO.NUMBER.ERROR THEN
         CALL ELINE('Error. Pro Number cannot contain a "+" character.')
         PRO.NUMBER=''
         GOTO 300
      END
      GOSUB DATA.DISPLAY
      PRO.ID= CARRIER.ID:'*': PRO.NUMBER:'*':'0'

*
*     Read FB.BILLS.HIST file
*
      READU PRO.REC FROM F.FROM.FB.BILLS.HIST, PRO.ID ELSE
         CALL ELINE('"Bill ': PRO.ID:'" was not found.')
         PRO.NUMBER=''
         GOTO 300
      END
      IF PRO.REC<39>#'R' THEN
         CALL ELINE('"Bill ':PRO.ID:'" is not rejected. The bill must be rejected.')
         PRO.NUMBER=''
         GOTO 300
      END
      IF PRO.REC<66>#'E' THEN
         CALL ELINE('"Bill ':PRO.ID:'" is not marked as an eventually pay rejections.')
         PRO.NUMBER=''
         GOTO 300
      END



*
*     Confirm file update
*
400:***
      MASK='Update Files   : N':MASK.CHAR:@(-4)
      HELP='[Y]=Yes [N]=No [X]=Back [EX]=Exit'
      CALL GEN.IN(0,21,MASK,'',Q,0,2,'','',2,17,21,2,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI='N'
      BEGIN CASE
         CASE QI='EX'
            GOTO 9999
         CASE QI='X'
            GOTO 300
         CASE QI='N' OR QI='0'
            GOSUB DATA.DISPLAY
            GOTO 300
         CASE QI='Y' OR QI='1'
            READ DFB.BILLS.HIST FROM F.FROM.FB.BILLS.HIST,PRO.ID ELSE
               CALL ELINE('Pro is no longer in FB.BILLS.HIST')
               GO 300
            END
            DFB.BILLS.HIST<5>=''
            DFB.BILLS.HIST<9>=''
            DFB.BILLS.HIST<17>=''
            DFB.BILLS.HIST<31>=''
            DFB.BILLS.HIST<33>=''
            TR.ERROR.CNT = 0             ; * SWB01
            TR.ERRORS = ''               ; * SWB01
            IF DFB.BILLS.HIST<88>#'' THEN
               DFB.BILLS.HIST<88>=TO.CLIENT.ID:DFB.BILLS.HIST<88>[6,999]
               OPEN '','EDI.BILLS.HIST,':FROM.CLIENT.ID TO F.FROM.EDI.BILLS.HIST ELSE
                  CALL ELINE('Cannot open EDI.BILLS.HIST,':FROM.CLIENT.ID:'. Check Client Number.')
                  GOTO 100
               END
               OPEN '','EDI.BILLS.HIST,':TO.CLIENT.ID TO F.TO.EDI.BILLS.HIST ELSE
                  GOSUB SEND.MAIL
                  STMT = 'CREATE-FILE DATA EDI.BILLS.HIST,':TO.CLIENT.ID:' 1009,2'     ; * NKH01
                  EXECUTE STMT CAPTURING MSG
                  OPEN '','EDI.BILLS.HIST,':TO.CLIENT.ID TO F.TO.EDI.BILLS.HIST ELSE
                     CALL ELINE('Cannot open EDI.BILLS.HIST,':TO.CLIENT.ID:'. Check Client Number.')
                     GOTO 150
                  END
               END
               READ DEDI.REC FROM F.FROM.EDI.BILLS.HIST, PRO.ID ELSE
                  CALL ELINE('"EDI Bill ': PRO.ID:'" was not found.')
                  PRO.NUMBER=''
                  GOTO 300
               END
               WRITE DEDI.REC TO F.TO.EDI.BILLS.HIST,PRO.ID ELSE
                  CALL ELINE('Error writing to EDI.BILLS.HIST file. Call IS Department.')
                  GOTO 400
               END
               DELETE F.FROM.EDI.BILLS.HIST,PRO.ID
            END
            WRITE DFB.BILLS.HIST TO F.TO.FB.BILLS.HIST,PRO.ID ELSE
               CALL ELINE('Error writing to FB.BILLS.HIST file. Call IS Department.')
               GOTO 400
            END
            READ DFB.BILLS FROM F.FROM.FB.BILLS,PRO.ID ELSE
               CALL ELINE('Pro is no longer in FB.BILLS')
               GO 300
            END
            DFB.BILLS<5>=''
            DFB.BILLS<9>=''
            DFB.BILLS<17>=''
            DFB.BILLS<31>=''
            DFB.BILLS<33>=''
            IF DFB.BILLS<88>#'' THEN DFB.BILLS<88>=TO.CLIENT.ID:DFB.BILLS<88>[6,999]
            WRITE DFB.BILLS TO F.TO.FB.BILLS,PRO.ID ELSE
               CALL ELINE('Error writing to FB.BILLS file. Call IS Department.')
               GOTO 400
            END
            VERSION = FIELD(PRO.ID, '*', 3)        ; * SWB01
            CLIENT.ID = TO.CLIENT.ID     ; * SWB01
            TIMELINE.TRANS.TYPE = 'FN'   ; * SWB01
            GOSUB UPDATE.TIMELINE.SUMMARY          ; * SWB01
            READ DFB.CRX FROM F.CRX,PRO.ID ELSE
               CALL ELINE('Pro is no longer in FB.CRX')
               GO 300
            END
            DFB.CRX<1>=TO.CLIENT.ID
            WRITE DFB.CRX TO F.CRX,PRO.ID ELSE
               CALL ELINE('Error writing to FB.CRX file. Call IS Department.')
               GOTO 400
            END
            DELETE F.FROM.FB.BILLS,PRO.ID
            DELETE F.FROM.FB.BILLS.HIST,PRO.ID
READ.LOCK.1:                             ; * SWB01
            READU DFROM.ACCESS FROM F.FROM.FB.ACCESS, PRO.ID LOCKED    ; * SWB01
               WL.VIN = STATUS()         ; * SWB01
               WL.VOUT = ''              ; * SWB01
               CALL WHOS.LOCKING(WL.VIN, WL.VOUT)  ; * SWB01
               READ TDBCTRL FROM F.BCTRL, WL.VOUT<1> ELSE TDBCTRL = ''           ; * SWB01
               CALL ELINE(TDBCTRL<13>:' has ':PRO.ID:' locked in FB.BILLS.ACCESS,':FROM.CLIENT.ID)   ; * SWB01
               EXECUTE 'SLEEP 2'         ; * SWB01
               GOTO READ.LOCK.1          ; * SWB01
            END THEN                     ; * SWB01
READ.LOCK.2:                             ; * SWB01
               READU DTO.ACCESS FROM F.TO.FB.ACCESS, PRO.ID LOCKED     ; * SWB01
                  WL.VIN = STATUS()      ; * SWB01
                  WL.VOUT = ''           ; * SWB01
                  CALL WHOS.LOCKING(WL.VIN, WL.VOUT)         ; * SWB01
                  READ TDBCTRL FROM F.BCTRL, WL.VOUT<1> ELSE TDBCTRL = ''        ; * SWB01
                  CALL ELINE(TDBCTRL<13>:' has ':PRO.ID:' locked in FB.BILLS.ACCESS,':TO.CLIENT.ID)  ; * SWB01
                  EXECUTE 'SLEEP 2'      ; * SWB01
                  GOTO READ.LOCK.2       ; * SWB01
               END ELSE                  ; * SWB01
                  WRITE DFROM.ACCESS TO F.TO.FB.ACCESS,PRO.ID ELSE     ; * SWB01
                     CALL ELINE('Error writing to FB.BILLS.ACCESS file. Call IS Department.')        ; * SWB01
                     GOTO 400            ; * SWB01
                  END                    ; * SWB01
                  DELETE F.FROM.FB.ACCESS,PRO.ID   ; * SWB01
               END                       ; * SWB01
            END                          ; * SWB01

            ACCESS.REASON = 'CLI.CHG.':FROM.CLIENT.ID        ; * SWB01
            GOSUB UPDATE.TOUCHES         ; * SWB01
            CLIENT.ID = FROM.CLIENT.ID   ; * SWB01
            TIMELINE.TRANS.TYPE = 'DEL'  ; * SWB01
            GOSUB UPDATE.TIMELINE.SUMMARY          ; * SWB01
            IF TR.ERRORS # '' THEN       ; * SWB01
               GOSUB SEND.TIMELINE.EMAIL           ; * SWB01
            END                          ; * SWB01
            CALL ELINE('Files have been updated.')
            PRO.NUMBER=''
            GOSUB DATA.DISPLAY
            GOTO 300
         CASE 1
            GOTO 400
      END CASE

      GOTO 9999                          ; * End program
*
*
*
********************************************************************************
*
*     Internal Subroutines
*
GET.SCREEN.DISPLAY:
* Build display screen

      SCREEN.DISPLAY =@(0, 4):'FROM Client Number  :'
      SCREEN.DISPLAY:=@(0, 8):'TO Client Number  :'
      SCREEN.DISPLAY:=@(0, 12):'Carrier Number :'
      SCREEN.DISPLAY:=@(0,16):'Pro Number     :'
      SCREEN.DISPLAY:=@(-3)
      RETURN


DATA.DISPLAY:
*     Display data

      CRT @(23,4):FROM.CLIENT.ID:SPACE(3):FROM.CLIENT.NAME:@(-4)
      CRT @(25,5):FROM.CLIENT.ADDR:@(-4)
      CRT @(25,6):FROM.CLIENT.CITY:' ':FROM.CLIENT.STATE:' ':FROM.CLIENT.ZIP:@(-4)
      CRT @(23,8):TO.CLIENT.ID:SPACE(3): TO.CLIENT.NAME:@(-4)
      CRT @(25,9):TO.CLIENT.ADDR:@(-4)
      CRT @(25,10):TO.CLIENT.CITY:' ':TO.CLIENT.STATE:' ':TO.CLIENT.ZIP:@(-4)
      CRT @(17,12): CARRIER.ID:SPACE(3): CARRIER.NAME:@(-4)
      CRT @(25,13): CARRIER.ADDR:@(-4)
      CRT @(25,14): CARRIER.CITY:' ': CARRIER.STATE:' ': CARRIER.ZIP:@(-4)
      CRT @(17,16): PRO.NUMBER:@(-4)
      RETURN


PRO.NUMBER.KEYBOARD.SHORTCUTS:
*     Use keyboard shortcuts for entering Pro Number

      PLUS.POS=INDEX( PRO.NUMBER,'+',1)
      IF PLUS.POS THEN
         PRO.NUMBER=CHANGE( PRO.NUMBER,'+','-')
      END
      IF PRO.NUMBER[LEN( PRO.NUMBER),1]='-' AND ( CARRIER.ID='00093' OR CARRIER.ID='00017') THEN
         PRO.NUMBER= PRO.NUMBER[1,LEN( PRO.NUMBER)-1]:'X'
      END
      IF INDEX( PRO.NUMBER,'+',1) THEN
         PRO.NUMBER.ERROR=1
      END
      RETURN

SEND.MAIL:
      *** SEND EMAIL REGARDING NEW EDI CLIENT
      EMAIL.OUT=''
      READV CLIENT.NAME FROM F.CLIENTS, TO.CLIENT.ID, 2 ELSE
         CLIENT.NAME = 'Name Not Found'
      END
      READV CARRIER.NAME FROM F.CARRIERS, CARRIER.ID, 1 ELSE
         CARRIER.NAME = 'Name Not Found'
      END
      EMAIL.OUT<1>='DFriend@AFSLogistics.Com'
      EMAIL.OUT<2>='OHolman@AFSLogistics.Com'
      EMAIL.OUT<3>=''
      EMAIL.OUT<4>='DataProc@AFSLogistics.Com'
      EMAIL.OUT<5>='New EDI Client Encountered'
      EMAIL.OUT<6,-1>='An EDI record has been processed that contains a client ID that has not been properly setup for EDI.'
      EMAIL.OUT<6,-1>='Specifically, this program had to create a subfile for the client under EDI.BILLS.HIST.'
      EMAIL.OUT<6,-1>=''
      EMAIL.OUT<6,-1>='Program Name: ':PROG.NAME
      EMAIL.OUT<6,-1>='Client Number: ':TO.CLIENT.ID:'-':CLIENT.NAME
      EMAIL.OUT<6,-1>='Carrier Number: ':CARRIER.ID:'-':CARRIER.NAME
      EMAIL.OUT<6,-1>='Pro Number: ':PRO.NUMBER
      VIN=EMAIL.OUT
      VOUT=''
*     CALL SENDMAIL.NEW(VIN,VOUT)        ; * JMK01
      CALL SENDMAIL(VIN,VOUT)            ; * JMK01
      RETURN

************************
UPDATE.TIMELINE.SUMMARY:                 ; * SWB01
************************

      IF VERSION = 0 THEN                ; * SWB01
         IF DFB.BILLS.HIST<246> # '' AND DFB.BILLS.HIST<247> # '' AND DFB.BILLS.HIST<37> = '' AND DFB.BILLS.HIST<249> = '' THEN    ; * SWB01
            TR.VIN = DFB.BILLS.HIST<53>  ; * SWB01
            TR.VIN<2> = CLIENT.ID        ; * SWB01
            TR.VIN<3> = CARRIER.ID       ; * SWB01
            TR.VIN<4> = DFB.BILLS.HIST<246>        ; * SWB01
            TR.VIN<5> = DFB.BILLS.HIST<247>        ; * SWB01
            TR.VIN<6> = DFB.BILLS.HIST<248>        ; * SWB01
            TR.VIN<7> = DFB.BILLS.HIST<37>         ; * SWB01
            TR.VIN<8> = DFB.BILLS.HIST<249>        ; * SWB01
            TR.VIN<9> = PRO.ID           ; * SWB01
            TR.VIN<10> = TIMELINE.TRANS.TYPE       ; * SWB01

            CALL FB.UPD.TIMELINE.SUMMARY(TR.VIN, TR.VOUT, F.TIMELINE.SUMMARY)    ; * SWB01
            BEGIN CASE                   ; * SWB01
               CASE TR.VOUT[1, 11] = 'TRANS.TYPE='           ; * SWB01
*Invalid Trans Type was passed

                  TR.ERROR.CNT += 1      ; * SWB01
                  TR.ERRORS<1, -1>='Invalid TRANS.TYPE of ':FIELD(TR.VOUT, '=', 2):' passed. Frt Bill # ':PRO.ID:'. Parameters passed were: '          ; * SWB01

                  TR.ERRORS<1,-1>=TR.VIN           ; * SWB01

               CASE TR.VOUT # ''         ; * SWB01
*This transaction caused the FB Counter in one or more of the Summmary
*records to 'go negative'. This transaction is not necessarily the one
*that CAUSED the miscount.'

                  TR.ERROR.CNT += 1      ; * SWB01
                  IF TR.ERROR.CNT <= TR.ERROR.MAX THEN       ; * SWB01
                     TR.ERRORS<1, -1> ='Frt Bill ':PRO.ID:' TRANS.TYPE of ':FIELD(TR.VOUT, '=', 2):' passed. One or more Summary records have a Count of less than zero '  ; * SWB01
                     TR.ERRORS<1, -1> = 'with the following parmaters:':TR.VIN   ; * SWB01
                     TR.ERRORS<1, -1> = 'The following parameters were passed back from FB.UPD.TIMELINE.SUMMARY: ':TR.VOUT         ; * SWB01
                  END                    ; * SWB01

               CASE 1                    ; * SWB01
* No errors passed back.

            END CASE                     ; * SWB01

         END                             ; * SWB01
      END                                ; * SWB01

      RETURN                             ; * SWB01


********************
SEND.TIMELINE.EMAIL:
********************

      TR.EMAIL.OUT<1,1>='nmeddaugh@afs.net'          ; * SWB01
      TR.EMAIL.OUT<1,2>='mkerbow@afs.net'          ; * SWB01
      TR.EMAIL.OUT<3>=''                 ; * SWB01
      TR.EMAIL.OUT<4>='UNPROCESS@afs.net'          ; * SWB01
      TR.EMAIL.OUT<5>='Freight Bill Timeline Tracking errors'          ; * SWB01
      TR.EMAIL.OUT<6> = 'Program ':PROG.NAME:' generated the following errors during UnProcessing of Freight Bills for Client ':CLIENT.ID    ; * SWB01
      TR.EMAIL.OUT<6, -1> = ' during calling of FB.UPD.TIMELINE.SUMMARY.'        ; * SWB01
      TR.EMAIL.OUT <6, -1> = ' ':@VM     ; * SWB01
      TR.EMAIL.OUT<6> := TR.ERRORS       ; * SWB01

      TR.EMAIL.OUT<6, -1> = ''           ; * SWB01
      TR.EMAIL.OUT<6, -1> = ''           ; * SWB01
      TR.EMAIL.OUT<6, -1> = 'A maximum of ':TR.ERROR.MAX:' will be reported.'    ; * SWB01
      TR.EMAIL.OUT<6, -1> = TR.ERROR.CNT:' errors were found.'         ; * SWB01

      CALL SENDMAIL(TR.EMAIL.OUT,TR.EMAIL.VOUT)    ; * SWB01
      RETURN                             ; * SWB01

***************
UPDATE.TOUCHES:
***************

      ACC.VIN=''                         ; * SWB01
      ACC.VOUT=''                        ; * SWB01
      ACC.VIN<1>=TO.CLIENT.ID            ; * SWB01
      ACC.VIN<2>=PRO.ID                  ; * SWB01
      ACC.VIN<3>=USER.NAME               ; * SWB01
      ACC.VIN<4>=USER.DPT                ; * SWB01
      ACC.VIN<5>=DATE()                  ; * SWB01
      ACC.VIN<6>=TIME()                  ; * SWB01
      ACC.VIN<7>='1'                     ; * SWB01
      ACC.VIN<8>=PROG.NAME               ; * SWB01
      ACC.VIN<9>=PROG.DESC               ; * SWB01
      ACC.VIN<10>=PACK.NAME              ; * SWB01
      ACC.VIN<11>=CO.NAME                ; * SWB01
      ACC.VIN<12> = ACCESS.REASON        ; * SWB01

      CALL UPD.FB.BILLS.ACCESS(ACC.VIN,ACC.VOUT,CLIENT.REC,CARRIER.REC,DFB.BILLS.HIST,F.TO.FB.ACCESS,F.TABLES)           ; * SWB01

      RETURN

*
* End of program
*
9999:**
      CRT @(0,0):@(-3):@(0,21):PROG.NAME:@(0,22):CO.NAME
      STOP                               ; * SWB01


   END
