      SUBROUTINE CALC.CARRIER.RATE(VIN,VOUT,SERVICE.LVL.ARRAY,ERRORS)
*
      UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'CALC.CARRIER.RATE' ; UPL.VOUT = ''                    ;* NPR_UPL 04/22/2010
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/22/2010
**Calculate rate base on data entered  -  Originally for FedEx

      CALL GET.USER(USER)


      OPEN '','FB.CARR.RATES,ZONES' TO F.FEDEX.ZONES ELSE ERRORS = 'CANT OPEN NP.FEDEX.ZONES' ; RETURN
      OPEN '','FB.CARR.RATES,INDEX' TO F.FEDEX.ZONES.IDX ELSE ERRORS = 'CANT OPEN NP.FEDEX.ZONES,INDEX' ; RETURN
      OPEN '','FB.CARR.RATES' TO F.FEDEX.ZONES.RATES ELSE ERRORS = 'CANT OPEN NP.FEDEX.ZONES,RATES' ; RETURN

*QQ OPEN '','NP.FEDEX.ZONES' TO F.FEDEX.ZONES ELSE ERRORS = 'CANT OPEN NP.FEDEX.ZONES' ; RETURN
*QQ OPEN '','NP.FEDEX.ZONES,INDEX' TO F.FEDEX.ZONES.IDX ELSE ERRORS = 'CANT OPEN NP.FEDEX.ZONES,INDEX' ; RETURN
*QQ OPEN '','NP.FEDEX.ZONES,RATES' TO F.FEDEX.ZONES.RATES ELSE ERRORS = 'CANT OPEN NP.FEDEX.ZONES,RATES' ; RETURN
*QQ OPEN '','FEDEX.ZONES' TO F.FEDEX.ZONES ELSE ERRORS = 'CANT OPEN FEDEX.ZONES' ; RETURN
*QQ OPEN '','FEDEX.RATES' TO F.FEDEX.RATES ELSE ERRORS = 'CANT OPEN FEDEX.RATES' ; RETURN

      OPEN '','ZIPS.CODES' TO F.ZIPS ELSE ERRORS = 'CANT OPEN ZIPS.CODES' ; RETURN
      OPEN '','FB.TABLES' TO F.TABLES ELSE ERRORS = 'CANT OPEN FB.TABLES' ; RETURN


      ORIG.ZIP         = VIN<1>
      DEST.ZIP         = VIN<2>
      I.EFF.DATE       = VIN<3>
      WEIGHT           = VIN<4>
* RATE.EFF.DATE   = VIN<5>
      SERVICE.LVL      = VIN<6>
      ID.CARRIER       = VIN<7>
      RESIDENTIAL.FLAG = VIN<8>
      LET.PARCEL       = VIN<9>
      ID.IDX = ID.CARRIER

      ADD.CHARGE = 0

* DEBUG

*** Start Changes 09/03/09   Don't allow Letter weight GT 0.5
*
      IF LET.PARCEL = "L" THEN
         IF WEIGHT GT "0.5" THEN
            ERRORS = "Recommended weight for FedEx Envelope/Letter should not exceed .5 lbs "
            RETURN
         END
      END

** Round weight up to nearest integer if over 0.5 lbs and Package

      IF LET.PARCEL = "P" THEN
         IF FIELD(WEIGHT,".",2) NE "0" THEN
            WEIGHT = INT(WEIGHT) + 1   ;* Round weight up to next Integer e.g 1.3 to 2
            WEIGHT = OCONV(WEIGHT*100,"MR2")
         END
      END
*
*** End Changes 09/03/09

*IF WEIGHT LE "0.5" THEN
*   NULL
*END ELSE
*   IF LET.PARCEL = "L" THEN
*      ERRORS = "Recommended weight for FedEx Envelope/Letter should not exceed .5 lbs "
*      RETURN
*   END
*   IF FIELD(WEIGHT,".",2) NE "0" THEN
*      WEIGHT = INT(WEIGHT) + 1   ;* Round weight up to next Integer e.g 1.3 to 2
*      WEIGHT = OCONV(WEIGHT*100,"MR2")
*   END
*END

      VOUT   = ""
      ERRORS = ""

      READ ORIG.REC FROM F.ZIPS , ORIG.ZIP THEN
         ORIG.CITY = ORIG.REC<1>
         ORIG.STATE = ORIG.REC<2>
      END ELSE
         ORIG.CITY = "Not Available"
         ORIG.STATE = "??"
         ERRORS = "Invalid Origination ZIP ":ORIG.ZIP
         RETURN
      END

      READ DEST.REC FROM F.ZIPS , DEST.ZIP THEN
         DEST.CITY = DEST.REC<1>
         DEST.STATE = DEST.REC<2>
      END ELSE
         DEST.CITY = "Not Available"
         DEST.STATE = "??"
         ERRORS = "Invalid Destination ZIP ":DEST.ZIP
         RETURN
      END

*
      SRVC.CNT = ""

      N.SL = DCOUNT(SERVICE.LVL.ARRAY,@AM)

      FOR SS = 1 TO N.SL
         W.SRVC.LVL = SERVICE.LVL.ARRAY<SS,2>
         IF SERVICE.LVL = W.SRVC.LVL THEN
            SRVC.CNT = SS
            SS = N.SL
         END
      NEXT SS

      IF SRVC.CNT = "" THEN
         ERRORS<-1> = "Service Level  could not be determined"
         RETURN
      END
*
*
      SERVICE.LVL = SERVICE.LVL.ARRAY<SRVC.CNT,2>

      IF SERVICE.LVL = "HOME_DEL" AND RESIDENTIAL.FLAG = "N"  THEN RETURN   ;* Home Delivery not calculated if Residentila flag ne "Y"

      ID.CARRIER = "00015"  ;* Federal Express Corporation

      IF USER = "NPRATT" AND SERVICE.LVL = "HOME_DEL" THEN DEBUG

      IF SERVICE.LVL = "GR_COMM" OR SERVICE.LVL = "HOME_DEL" THEN
         ID.CARRIER = "01075"
         IF SERVICE.LVL = "HOME_DEL" AND RESIDENTIAL.FLAG = "Y" THEN ADD.CHARGE = "205"   ;* Probably need to add to a TABLE??
         IF SERVICE.LVL = "GR_COMM" THEN
            IF WEIGHT GT "150" THEN
               ERRORS<-1> = "No rates available for Ground Commercial over 150 lbs"
               RETURN
            END
         END
         IF SERVICE.LVL = "GR_COMM" THEN
            IF WEIGHT lT "1" THEN
               ERRORS<-1> = "No rates available for Ground Commercial under 1 lb"
               RETURN
            END
         END
         IF SERVICE.LVL = "HOME_DEL" THEN
            IF WEIGHT GT "70" THEN
*ZZ         ERRORS<-1> = "No rates available for Home Delivery over 70 lbs"
               RETURN
            END
            IF WEIGHT LT "1" THEN
*ZZ         ERRORS<-1> = "No rates available for Home Delivery under 1 lb"
               RETURN
            END
         END

      END

      IF RESIDENTIAL.FLAG = "Y" THEN
         IF SERVICE.LVL NE "HOME_DEL" THEN ADD.CHARGE = "240"                              ;* Probably need to add to a TABLE??
      END

      ID.IDX = ID.CARRIER

      READ IDX.REC FROM F.FEDEX.ZONES.IDX , ID.IDX ELSE IDX.REC = ""

      DPOS = ""
      W.EFF.DATE = ''

      N.DTS = DCOUNT(IDX.REC<1>,@VM)
      FOR IDT = 1 TO N.DTS
         TST.DT = IDX.REC<1,IDT>
         IF I.EFF.DATE GE TST.DT THEN
            DPOS = IDT
            IDT = N.DTS
            W.EFF.DATE = TST.DT
         END
      NEXT IDR

*** IF USER = "NPRATT" THEN  CRT "W.EFF.DATE ": W.EFF.DATE  ; DEBUG

      RATE.EFF.DATE = W.EFF.DATE
      IF DPOS = "" OR W.EFF.DATE = '' THEN
         ERRORS<-1> = "Effective date ":OCONV(I.EFF.DATE,"D2/"): " not found"
         RETURN
      END

      ZIP.RANGE.FROM.STR = IDX.REC<2,DPOS>
      CONVERT @SVM TO @VM IN ZIP.RANGE.FROM.STR
      ZIP.RANGE.TO.STR = IDX.REC<3,DPOS>
      CONVERT @SVM TO @VM IN ZIP.RANGE.TO.STR

      ZPOS = ''
      LOCATE ORIG.ZIP IN ZIP.RANGE.FROM.STR<1> BY 'AR' SETTING ZPOS ELSE
         ZPOS = ZPOS - 1
         IF ZPOS LE "0" THEN
            ERRORS<-1> = "Origination ZIP ": ORIG.ZIP : " not found"
            RETURN
         END
      END

**RR CRT " ZIP ST  ":ZIP.RANGE.FROM.STR<1,ZPOS>

      W.ORIG.ZIP.FROM = ZIP.RANGE.FROM.STR<1,ZPOS>

      ID.EXPR = ID.CARRIER:"*":W.ORIG.ZIP.FROM:"*":W.EFF.DATE
      READ EXPR.REC FROM F.FEDEX.ZONES , ID.EXPR ELSE
         ERRORS<-1> = "Could not determine Zone"
         RETURN
      END
*
      DZPOS = ''
      LOCATE DEST.ZIP IN EXPR.REC<1> BY 'AR' SETTING DZPOS ELSE
         DZPOS = DZPOS - 1
         IF DZPOS LE "0" THEN
            ERRORS<-1> = "Destination ZIP ": DEST.ZIP : " not found unable to determine Zone"
            RETURN
         END
      END

**RR CRT "DEST ZIP FROM ":EXPR.REC<1,DZPOS>
**RR CRT "DEST ZIP TO   ":EXPR.REC<2,DZPOS>
**RR CRT "ZONE ........ ":EXPR.REC<3,DZPOS>
*
      ZONE = EXPR.REC<3,DZPOS>

      IF ZONE = "NA" THEN
         ERRORS<-1> = "Zone set to Not Applicable "
         RETURN
      END

      ID.RATES = ID.CARRIER:"*":SERVICE.LVL:"*":ZONE:"*":RATE.EFF.DATE    ;* Are there 2 Effective Dates - One for Zip and One for Rate

*CRT ; CRT "W.EFF.DATE = " : OCONV(W.EFF.DATE,"D2/")
*CRT ; CRT "ID.RATES   = " : ID.RATES
*DEBUG

      READ RATE.REC FROM F.FEDEX.ZONES.RATES, ID.RATES ELSE
         ERRORS<-1> = "Rates not found "
         RETURN
      END
*

      WTPOS = ''
      SEARCH.WT = WEIGHT * 100

* IF USER = "NPRATT" THEN DEBUG

      LOCATE SEARCH.WT IN RATE.REC<1> BY 'AR' SETTING WTPOS ELSE
*   WTPOS = WTPOS - 1
*   IF SEARCH.WT LE "0.5" THEN
         IF SEARCH.WT LE "50" THEN                      ;* Actually 0.5 lbs
            WTPOS = 1
         END ELSE
            IF SEARCH.WT NE RATE.REC<1,WTPOS> THEN
               WTPOS = WTPOS - 1
            END
         END
         IF WTPOS LE "0" THEN
            ERRORS<-1> = "Rates not found "
            RETURN
         END
      END
*
      RATE = RATE.REC<2,WTPOS>
*
*** IF USER = "NPRATT" THEN DEBUG
*QQQ  IF WEIGHT GT "150" AND ID.CARRIER NE "01075" THEN RATE = RATE * WEIGHT   ;* Use Hundred weight info
      IF WEIGHT GT "150" AND ID.CARRIER NE "01075" THEN RATE = (RATE/100) * WEIGHT   ;* Use Hundred weight info
*

*RR CRT @(0,16):" ZONE IS : ":ZONE
*RR CRT @(0,18):" RATE IS : ":OCONV(RATE,"MR2") "R#8"

**** Calculate Fuel Surcharge

      ID.TAB = "FSC_CARRIER*":ID.CARRIER

      READ TAB.REC FROM F.TABLES, ID.TAB ELSE
         ERRORS<-1> = "No FSC Table found  -- ":ID.TAB
         RETURN
      END

      FSC.PERC = 0
      FSC.AMT  = 0
      FSC.FND  = 0

*IF USER = "NPRATT" THEN DEBUG
*
      N.DTS = DCOUNT(TAB.REC<1>,@VM)
      FOR IDT = 1 TO N.DTS
         TST.DT.FROM = TAB.REC<1,IDT>
         TST.DT.TO   = TAB.REC<2,IDT>
         IF I.EFF.DATE GE TST.DT.FROM AND I.EFF.DATE LT TST.DT.TO THEN
            DPOS = IDT
            FSC.PERC = TAB.REC<3,IDT>
            IDT = N.DTS
            FSC.FND = 1
         END
      NEXT IDR

      IF NOT(FSC.FND) THEN
         ERRORS<-1> = "No FSC Not available for effective date  -- ":OCONV(I.EFF.DATE,"D2/")
         RETURN
      END
*
*** FSC.AMT = FSC.PERC/10000 * RATE

      FSC.AMT = FSC.PERC/10000 * (RATE + ADD.CHARGE)  ;* Fuel Surcharge charged on Base Rate + Any Additional Charges


*RR CRT @(0,16)  :" ZONE IS    : ":ZONE
*RR CRT @(0,18)  :" RATE IS    : ":OCONV(RATE,"MR2") "R#8"
*RR CRT @(30,19) :" FSC % IS  : ":OCONV((FSC.PERC),"MR2") "R#8"
*RR CRT @(0,19)  :" FSC AMT IS : ":OCONV(FSC.AMT,"MR2") "R#8"

*TOT.AMT = RATE + FSC.AMT
      TOT.AMT = RATE + FSC.AMT + ADD.CHARGE
*RR CRT @(0,20):" TOT AMT IS : ":OCONV(TOT.AMT,"MR2") "R#8"

      VOUT = ZONE
      VOUT<2> = RATE
      VOUT<3> = FSC.PERC
      VOUT<4> = FSC.AMT
      VOUT<5> = TOT.AMT

      VOUT<6> = ORIG.CITY
      VOUT<7> = ORIG.STATE

      VOUT<8> = DEST.CITY
      VOUT<9> = DEST.STATE
      VOUT<10> = ADD.CHARGE

*
      RETURN
