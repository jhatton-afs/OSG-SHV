*******************************************************
* Program name : FB.7.4.3.OH
* Author       : Tami Seago
* Date written : April 18, 2000
* Library      : FBBP
* COPYRIGHT (C) 2016 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED.
*
* Program to Copy Hist Record to Traffic Survey Records
*
* Last updated by afs (AFSLOGISTICS\nmeddaugh) at 09:22:51 on 03/26/2019.
*
* Start modification history
* 032619 - NKH01 - ACCU-316 Modified CREATE-FILE file sizes
* End modification history
*
*******************************************************
      $INCLUDE PROG.ADMIN INC_OPTIONS
      $INCLUDE FILE.DEFS INC_DIVISION.CODES
*
* Initialize variables
*
*CH   COPIES=1
*
      PROMPT''
      VALID.CLASSES=50:@VM:55:@VM:60:@VM:65:@VM:70:@VM:77:@VM:85:@VM:92:@VM:100:@VM:110:@VM:125:@VM:150:@VM:175:@VM:200:@VM:250:@VM:300:@VM:400:@VM:500
      CALL CHANNEL(CH.NUM)
      CALL GET.USER(USER.NAME)
      STATUS=''
      CALL CHANNEL(CH.NUM)
      OPEN 'CLIENTS' TO F.CLIENTS ELSE ABORT
      TAB=CHAR(9)
      PROMPT''
      ERRMSG=''
      PROG.NAME='FB.7.4.3.OH'
      PROG.DESC="Build Traffic Survey File from Freight Bill by Client"
      PACK.NAME="Freight Billing"
      CLIENT = ""
       UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.7.4.3.OH' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
       CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
      TS.CLIENT = ""
      BEG.DATE = ""
      END.DATE = ""
      AVERAGE.CLASS = ""

      OPEN '','CARRIERS' TO F.CARRIERS ELSE
         CALL OPEN.ABORT("CARRIERS",PROG.NAME)
      END
      OPEN '','FB.TABLES' TO F.TABLES ELSE
         CALL OPEN.ABORT("FB.TABLES",PROG.NAME)
      END
*
*
* Enter client number.
*
ENTER.CLIENT: ***
      CALL AFS.SCR.HEAD(CO.ID, FILE.ID, '', PROG.NAME, PROG.DESC, PACK.NAME, CO.NAME, TIME.DATE, 1)
      HELP="Enter client number. Word of name for search. X=Exit. EX=Exit."
      IF CLIENT='' THEN
         MASK='#####'
      END ELSE
         MASK=CLIENT'R%5'
      END
      CALL GEN.IN(0,3,'Enter Client Number       : ':MASK,'',Q,0,20,'','',2,-5,3,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX' ! QI='X'
            STOP
         CASE QI = ''
            CALL ELINE('ENTRY REQUIRED')
            GO ENTER.CLIENT
         CASE NOT(QI MATCHES "0N")
            CALL SOUNDEX.DISPLAY(QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            BEGIN CASE
               CASE ITEM.LIST=''
                  GOTO ENTER.CLIENT
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                  GOTO ENTER.CLIENT
               CASE ITEM.LIST NE ''
                  IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
                  GOTO ENTER.CLIENT
            END CASE
         CASE NUM(QI)
            Q=QI'R%5'
         CASE 1
            GOTO ENTER.CLIENT
      END CASE
      CLIENT=Q
      READ CLIENT.REC FROM F.CLIENTS,Q ELSE
         CALL ELINE('ERROR - Client ':CLIENT:' not on file.')
         GOTO ENTER.CLIENT
      END
      CLIENT.NAME=CLIENT.REC<2>
      CRT @(0,3):'Enter Client Number       : ':CLIENT'R%5':
      CRT ' ':CLIENT.NAME:@(-4):


*
* Open client's files.
*
OPEN.CLIENTS.FILES:
      OPEN '','FB.BILLS.HIST,':CLIENT TO F.HIST ELSE
         CALL OPEN.ABORT("FB.BILLS.HIST,":CLIENT,PROG.NAME)
      END
      DIV.CODE='Y'
      OPEN '','DIVISION.CODES,':CLIENT TO F.DIV ELSE
         DIV.CODE='N'
      END


*
*
* Enter tsclient number.
*
ENTER.TS.CLIENT: ***
      HELP="Enter traffic survey client number to transfer to. X=Exit. EX=Exit."
      IF TS.CLIENT='' THEN
         MASK='#####'
      END ELSE
         MASK=TS.CLIENT'R%5'
      END
      CALL GEN.IN(0,5,'Enter Traffic Survey Client Number       : ':MASK,'',Q,0,20,'','',2,-5,5,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI=' ' THEN QI=''; TS.CLIENT=''
      IF QI='' THEN QI=CLIENT; Q=TS.CLIENT
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            GO ENTER.CLIENT
         CASE QI = ''
            CALL ELINE('ENTRY REQUIRED')
            GO ENTER.TS.CLIENT
         CASE NOT(QI MATCHES "0N")
            CALL SOUNDEX.DISPLAY(QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            BEGIN CASE
               CASE ITEM.LIST=''
                  GOTO ENTER.TS.CLIENT
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                  GOTO ENTER.TS.CLIENT
               CASE ITEM.LIST NE ''
                  IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
                  GOTO ENTER.TS.CLIENT
            END CASE
         CASE NUM(QI)
            Q=QI'R%5'
         CASE 1
            GOTO ENTER.TS.CLIENT
      END CASE
      TS.CLIENT=Q
      IF TS.CLIENT[1,2] # '99' THEN
         CALL ELINE('MUST BE A TRAFFIC SURVEY ACCOUNT, PLEASE REENTER THE TS CLIENT NUMBER')
         GO ENTER.TS.CLIENT
      END
      READ CLIENT.REC FROM F.CLIENTS,Q ELSE
         CALL ELINE('ERROR - Client ':CLIENT:' not on file.')
         GOTO ENTER.TS.CLIENT
      END
      TS.CLIENT.NAME=CLIENT.REC<2>
      CRT @(0,5):'Enter Traffic Survey Client Number       : ':TS.CLIENT'R%5':
      CRT ' ':TS.CLIENT.NAME:@(-4):

*
* Open client's files.
*
OPEN.TS.CLIENTS.FILES:
      OPEN '','FB.BILLS.HIST,':TS.CLIENT TO TS.HIST ELSE
         CALL OPEN.ABORT("FB.BILLS.HIST,":CLIENT,PROG.NAME)
      END
      OPEN '','FB.BILLS,':TS.CLIENT TO TS.BILLS ELSE
         CALL OPEN.ABORT("FB.BILLS,":CLIENT,PROG.NAME)
      END
      IF DIV.CODE='Y' THEN
         OPEN '','DIVISION.CODES,':TS.CLIENT TO TS.DIV ELSE
            EXECUTE 'CREATE-FILE DATA DIVISION.CODES,':TS.CLIENT:' 23,1'      ; * NKH01
            OPEN '','DIVISION.CODES,':TS.CLIENT TO TS.DIV ELSE
               CALL OPEN.ABORT("DIVISION.CODES,":TS.CLIENT,PROG.NAME)
            END
         END
      END
*
* Enter beginning date.
*
ENTER.BEGIN.DATE: ***
      HELP="Enter beginning date. nn=Day. nn/nn=Month & Day. X=Back to file. EX=Exit."
      IF BEG.DATE='' THEN BEG.DATE=DATE()
      LN='Enter the Beginning date  : ':BEG.DATE'D2/'
      CALL GEN.IN(0,7,LN,'DATE',Q,0,8,'','',0,-8,7,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            CRT @(0,7):@(-3):
            GOTO ENTER.CLIENT
         CASE QI='EX'
            STOP
      END CASE
      BEG.DATE=Q
      CRT @(28,7):BEG.DATE'D2/'
*
* Enter ending date.
*
ENTER.END.DATE: ***
      HELP="Enter ending date. nn=Day. nn/nn=Month & Day. X=Back to Beg Date. EX=Exit."
      IF END.DATE='' THEN END.DATE=DATE()
      LN='Enter the Ending Date     : ':END.DATE'D2/'
      CALL GEN.IN(0,9,LN,'DATE',Q,0,9,'','',0,-8,9,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            CRT @(0,9):@(-3):
            GOTO ENTER.BEGIN.DATE
         CASE QI='EX'
            STOP
      END CASE
      END.DATE=Q
      IF BEG.DATE GT END.DATE THEN
         CALL ELINE('Beginning date cannot exceed ending date.')
         GOTO ENTER.END.DATE
      END
      DAYS=END.DATE-BEG.DATE+1
      CRT @(28,9):END.DATE'D2/'

*
* Enter average class.
*
ENTER.AVERAGE.CLASS: ***
      HELP="Enter the Average Class or null for only bills that already contain a class"
      LN='Enter the Average Class   : ':AVERAGE.CLASS'L#5'
      CALL GEN.IN(0,11,LN,'',Q,0,11,'','',0,-5,11,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            CRT @(0,11):@(-3):
            GOTO ENTER.END.DATE
         CASE QI='EX'
            STOP
      END CASE
      IF Q#' ' AND Q#'' THEN
         IF Q=77.5 THEN Q=77
         IF Q=92.5 THEN Q=92
         LOCATE Q IN VALID.CLASSES<1> SETTING POS ELSE
            CALL ELINE("Invalid Class")
            GO ENTER.AVERAGE.CLASS
         END
      END
      Q=TRIM(Q)
      AVERAGE.CLASS=Q
      CRT @(28,11):AVERAGE.CLASS'L#5'

*
* Verify selection criteria is correct.
*
VERIFY.SELECTION: ***
      HELP="X=Change. EX=Exit. RETURN=Continue."
      CALL GEN.IN(0,22,'Enter selection please. --','',Q,0,2,'','',0,-2,22,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            CRT @(0,22):@(-3):
            BACK.FLAG = 1
            GOTO ENTER.AVERAGE.CLASS
         CASE QI='EX'
            STOP
         CASE QI=''
            NULL
         CASE 1
            CALL ELINE('Invalid entry. Must be X, EX, or RETURN.')
            GOTO VERIFY.SELECTION
      END CASE


      CLIENT.LIST = CLIENT

******************************************************************
* Select of First List
******************************************************************

      COUNTER.1=0
      PER=0
      ERRORS = ''

      STMT='SSELECT FB.BILLS.HIST,':CLIENT:' WITH 30 GE "':OCONV(BEG.DATE,'D2/')
      STMT=STMT:'" AND WITH 30 LE "':OCONV(END.DATE,'D2/'):'"'
*IF USER.NAME#'OWEN' THEN
      IF 1 THEN
         IF CLIENT[1,2]='99' ELSE
*DF           STMT=STMT:' AND WITH VERSION = "0" AND WITH 39 # "R" AND WITH 70 AND WITH 21 = "1"'
*DF           STMT=STMT:' AND WITH VERSION = "0" AND WITH 39 # "R"  AND WITH 21 = "1"'
            IF AVERAGE.CLASS = '' THEN
               STMT=STMT:' AND WITH 70'
            END
         END
      END ELSE
*        STMT=STMT:' AND WITH 39 # "R" AND WITH 21 = "1"'
*        STMT=STMT:' AND WITH CARRIER# = "02653"'
         STMT='GET-LIST OWEN'
         CRT @(0,20):STMT
      END

*STMT="SELECT FB.BILLS.HIST,00981 '00787*0030244333*0'"
      EXECUTE STMT RTNLIST BILLS.LIST CAPTURING OUTPUT
      BILLS.ITEMS = @SELECTED
      CRT @(0,17):CLIENT:" ":CLIENT.NAME:" - Now processing ":BILLS.ITEMS:" Freight Bills":@(-4):
      I.WEIGHT=0
      COUNTER.2=0
      LOOP
         DONE=0
         READNEXT PRO.ID FROM BILLS.LIST ELSE DONE=1
      UNTIL DONE=1 DO
         COUNTER.2=COUNTER.2+1
         PRINT @(0,23):COUNTER.2'L%6':PRO.ID:
         PRO.NUM=FIELD(PRO.ID,"*",2)
         LEN.PRO=LEN(PRO.NUM)
         LAST.TWO=PRO.NUM[LEN.PRO-1,2]
         IF LAST.TWO='BD' THEN GO SKIP.BILL
         IF LAST.TWO='AD' THEN GO SKIP.BILL
         READ PRO.REC FROM F.HIST,PRO.ID THEN
            IF CLIENT[1,2]='99' THEN GO FROM.TS.CLIENT
            PRO.REC<30> = DATE()
            IF AVERAGE.CLASS#'' THEN
               IF PRO.REC<74>='' THEN PRO.REC<74>=AVERAGE.CLASS
               IF PRO.REC<70>='' THEN PRO.REC<70>='FRT'
               IF PRO.REC<75>='' THEN PRO.REC<75>=PRO.REC<6>
            END
            LINE.HAUL.CHARGE = PRO.REC<157>
            PRO.REC<77> = LINE.HAUL.CHARGE
            IF USER.NAME='OWEN' THEN

            END

** Load all Freight Bill Details and Amounts into 70 **
            TIMES=DCOUNT(PRO.REC<159>,@VM)
            FOR X = 1 TO TIMES
              PRO.REC<70,X+1>=PRO.REC<159,X>
              PRO.REC<77,X+1>=PRO.REC<163,X>
            NEXT X


            TIMES=DCOUNT(PRO.REC<70>,CHAR(253))
            COUNT.POS=1
            TEMP=''
            FOR X = 1 TO TIMES
               IF PRO.REC<70,X>='' AND PRO.REC<71,X>='' AND PRO.REC<72,X>='' AND PRO.REC<74,X>='' AND PRO.REC<75,X>='' AND PRO.REC<78,X>='' AND PRO.REC<79,X>='' ELSE
                  TEMP<70,COUNT.POS>=PRO.REC<70,X>
                  TEMP<71,COUNT.POS>=PRO.REC<71,X>
                  TEMP<72,COUNT.POS>=PRO.REC<72,X>
                  TEMP<74,COUNT.POS>=PRO.REC<74,X>
                  TEMP<75,COUNT.POS>=PRO.REC<75,X>
                  TEMP<78,COUNT.POS>=PRO.REC<78,X>
                  TEMP<79,COUNT.POS>=PRO.REC<79,X>
                  COUNT.POS=COUNT.POS+1
               END
            NEXT X
            PRO.REC<70>=TEMP<70>
            PRO.REC<71>=TEMP<71>
            PRO.REC<72>=TEMP<72>
            PRO.REC<74>=TEMP<74>
            PRO.REC<75>=TEMP<75>
            PRO.REC<78>=TEMP<78>
            PRO.REC<79>=TEMP<79>
            PRO.REC<84,-1> = 'FROM ':CLIENT
            PRO.REC<85,-1> = TIME()
FROM.TS.CLIENT: *** Don't Tinker with the Bill Leave it alone
            WRITE PRO.REC ON TS.HIST,PRO.ID
            WRITE PRO.REC ON TS.BILLS,PRO.ID
            IF DIV.CODE='Y' THEN
               IF PRO.REC<9>#'' THEN
                  DIV.NUM=PRO.REC<9>
                  DIVISION.REC=''
                  READ DIVISION.REC FROM F.DIV,DIV.NUM ELSE
                     DIVISION.REC=''
                  END
                  IF DIVISION.REC#'' THEN
                     WRITE DIVISION.REC ON TS.DIV,DIV.NUM
                  END
               END
            END
         END
SKIP.BILL: ***
      REPEAT
      END
