********************************************************************************
*  Program : FB.PROCESS.NOTIFY
*  Author  : Jeff Walton
*  Date    : August 20, 2007
********************************************************************************
*
*      COPYRIGHT (C) 2002 by AFS LOGISTICS, LLC. - ALL RIGHTS RESERVED
*
*  This program is the sole property of AFS Logistics, LLC (AUTOMATED FREIGHT
*  SYSTEMS) and may not be used, copied, or modified without the express
*  written consent of Brian Barker of AFS Logistics, LLC.
********************************************************************************
* 032609 - JMK01 - C090422 - Grant ability to run SS reports
* 101309 - JMK02 - Shane Oneal SS Access
*
*
* Includes
$INCLUDE FILE.DEFS INC_ADDS60.CODES; * These require specific PROCOMM settings

      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         CALL OPEN.ABORT('CLIENTS')
      END
      OPEN '','PROCESS.NOTIFY' TO F.PROCESS.NOTIFY ELSE
         CALL OPEN.ABORT('PROCESS.NOTIFY')
      END
* Equates
      EQU REVERSE.BLINK.ON TO TERM.ESC.SEQ:CHAR(TERM.REV+TERM.BLINK)   ; * Reverse Blinking text ON
      EQU REVERSE.ON TO TERM.ESC.SEQ:CHAR(TERM.REV)          ; * Reverse text ON
      EQU REVERSE.OFF TO TERM.ESC.SEQ:CHAR(TERM.NORMAL)      ; * Reverse text OFF
      EQU TRUE TO 1
      EQU FALSE TO 0
      C.REC=''
      CARRIER.ID=''

* Initialize general program variables
      PROMPT''
      PORT.NUM=SYSTEM(19)
      CALL GET.USER(USER.NAME)
      PROG.NAME='FB.PROCESS.NOTIFY'
      PROG.DESC='Process Notify Maintenance'
      PACK.NAME='USER : ':USER.NAME
      CO.NAME='AFS Logistics, LLC'
       UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.PROCESS.NOTIFY' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
       CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
      EDIT.MASK.CHAR='-'
      PLACE.HOLDER='~~ PLACE*HOLDER ~~'
      AFN.MSG=''
      AFN.MIN=''
      AFN.MAX=''
      AFN.MASK=''

* Initialize operating variables
      PAGE.SIZE=7                        ; * Number of lines per page
      START.Y=6                          ; * Starting y-position on the screen minus one
      LAST.EDIT.MASK=1                   ; * Last item edited or deleted
      WIDTH=80                           ; * Print width for printing table of includes/excludes
      CTR=INT(WIDTH/2)                   ; * Center of the table width

      CLIENT.NAME=''
      CLIENT.CITY=''
      CLIENT.STATE=''



      BEGIN.DATE=''

      END.DATE=''

      CONTROL.REC=''
      OLD.CONTROL.REC=''

* Display initial screen
      GOSUB DISPLAY.SCREEN

* Restrict access
      BEGIN CASE
         CASE USER.NAME='GBINO'
         CASE USER.NAME='MKERBOW'        ; * JMK01
         CASE USER.NAME='JWALTON'        ; * JTW01
         CASE USER.NAME='BJEPPSON'       ; * Matt 9/5/07
         CASE USER.NAME='JDARWIN'        ; * Matt 9/5/07
         CASE USER.NAME='MARY'           ; * Matt 9/5/07
         CASE USER.NAME='MYRA'           ; * Matt 9/5/07
         CASE USER.NAME='KRISTY'         ; * Matt 9/5/07
*        CASE USER.NAME='KATHYJ'         ; * Matt 9/5/07 ; * JMK01
*        CASE USER.NAME='LRUSSELL'       ; * Matt 9/5/07 ; * JMK01 ; * JMK02
         CASE USER.NAME='SONEAL'         ; * Matt 9/5/07 ; * JMK01 ; * JMK02
         CASE USER.NAME='SMATTHEWS'      ; * Matt 9/5/07



         CASE 1
            CALL FB.PRINT.CENT(1,80,12,'! Restricted Access Application !')
            CALL FB.PRINT.CENT(1,80,14,'Access Denied')
            CALL ELINE('')
            GOTO THE.END
      END CASE

      LOOP
1000:
         C.REC=''
         CLIENT.ID=''
         REC=''
         OLD.REC=''
         CLIENT.NAME=''
         CLIENT.CITY=''
         CLIENT.STATE=''
         BEGIN.DATE=''
         END.DATE=''
         GOSUB DISPLAY.SCREEN
         HELP="Enter client number, 'name' for search, [L]ist, [EX]it."
         CALL GEN.IN(17,3,'#####','',Q,0,20,'','',3,-5,3,0,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI='X' OR QI='EX' OR QI=''
               EXIT.IT = TRUE

            CASE QI EQ 'L'
               EXECUTE 'SORT CLIENTS BY 2 2'
               CALL ELINE('')

            CASE NUM(QI)
               CLIENT.ID=Q'R%5'
               IF CLIENT.ID[1,2]='99' THEN
                  CALL ELINE('Cannot use Traffic Survey Client !!!')
                  GOTO 1000
               END
               CRT @(17,3):CLIENT.ID
               READ C.REC FROM F.CLIENTS,CLIENT.ID THEN
                  CRT @(17,3):CLIENT.ID:' ':C.REC<1>
                  READU REC FROM F.PROCESS.NOTIFY,CLIENT.ID LOCKED
                     FIND.LOCKED.NAME=CLIENT.ID
                     GOSUB FIND.LOCKED
                     GOTO 1000
                  END ELSE REC=''
                  OLD.REC=REC
                  GOSUB PROCESS.SCREEN
                  RELEASE F.PROCESS.NOTIFY,CLIENT.ID
                  GOTO 1000
               END ELSE
                  CALL ELINE('Carrier not on file !!!')
                  GOTO 1000
               END

            CASE 1
               CALL SOUNDEX.DISPLAY(Q,'CLIENTS','SDX.CLIENTS,NAME','2,4,5',QX)
               CT=DCOUNT(QX<1>,@VM)
               IF CT=1 THEN
                  DATA QX<1,1>
               END
*         CASE 1
*           CALL ELINE('Invalid Entry.')
         END CASE

      UNTIL (EXIT.IT = TRUE) DO
      REPEAT
      STOP

PROCESS.SCREEN:
      CLIENT.NAME=C.REC<2>
*   Calculate number of items and number of pages and set page number
      NUM.RULES=DCOUNT(REC<1>,@VM)
      IF NUM.RULES=0 THEN
         NUM.PAGES=0
         PAGE.NUMBER=0
      END ELSE
         NUM.PAGES=INT(NUM.RULES/PAGE.SIZE)
         IF REM(NUM.RULES,PAGE.SIZE) THEN NUM.PAGES+=1
         PAGE.NUMBER=1
      END
      GOSUB DISPLAY.SCREEN
      GOSUB DISPLAY.PAGE

MAIN.START:***
      CRT @(0,22):'Enter Option : --             [B]ack Page [F]orward Page [T]op Page [L]ast Page'
      EDIT.MASK=STR(EDIT.MASK.CHAR,2)
!     HELP='[A]dd [E]dit E[M]ail [S]tatus  [U]pdate [X]=Back [EX]it' ; * JTW01
      HELP='Line# to Change [A]dd line [U]pdate [X]=Back [EX]it'       ; * JTW01
      CALL GEN.IN(15,22,EDIT.MASK,'',Q,0,2,'','',2,15,22,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'                    ; * Exit
            GOTO LAST.CHANCE.TO.SAVE
         CASE QI='X'                     ; * Back to client
            IF REC#OLD.REC THEN
               YN.MSG='You have unsaved changes. Save before entering new client?'
               YN.MASK=''
               GOSUB ASK.Y.OR.N
               IF YN.ANSWER='Y' THEN
                  GOSUB FAILSAFE.CHECK
                  IF FAILSAFE.OK THEN
                     GOSUB SAVE.CONTROL.REC
                     RETURN
                  END ELSE
                     RETURN
                  END
               END
            END
            RETURN
         CASE QI='U'                     ; * Update (and exit)
            IF REC#OLD.REC THEN
               GOSUB FAILSAFE.CHECK
               IF FAILSAFE.OK THEN
                  GOSUB SAVE.CONTROL.REC
                  RETURN
               END ELSE
                  RETURN
               END
            END ELSE
               CRT @(0,22):'No changes to save.':@(-3)
               SLEEP 1
            END
            RETURN
         CASE QI='L' OR QI='LP'          ; * Last Page
            IF NUM.PAGES#0 AND PAGE.NUMBER#NUM.PAGES THEN
               PAGE.NUMBER=NUM.PAGES
               GOSUB DISPLAY.PAGE
            END ELSE
               CALL ELINE('** LAST PAGE **')
            END
            GOTO MAIN.START
         CASE QI='T' OR QI='TP'          ; * Top Page
            IF NUM.PAGES#0 AND PAGE.NUMBER#1 THEN
               PAGE.NUMBER=1
               GOSUB DISPLAY.PAGE
            END ELSE
               CALL ELINE('** FIRST PAGE **')
            END
            GOTO MAIN.START
         CASE QI='F' OR QI='FP'          ; * Forward a page
            IF NUM.PAGES#0 AND PAGE.NUMBER<NUM.PAGES THEN
               PAGE.NUMBER+=1
               GOSUB DISPLAY.PAGE
            END ELSE
               CALL ELINE('** LAST PAGE **')
            END
            GOTO MAIN.START
         CASE QI='B' OR QI='BP'          ; * Backward a page
            IF NUM.PAGES#0 AND PAGE.NUMBER>1 THEN
               PAGE.NUMBER-=1
               GOSUB DISPLAY.PAGE
            END ELSE
               CALL ELINE('** FIRST PAGE **')
            END
            GOTO MAIN.START
         CASE QI='A'                     ; * Add an IED rule
            ITEM=''
            CALL FB.PROCESS.NOTIFY.SUB(CLIENT.ID,CLIENT.NAME,ITEM)
            IF ITEM<2>#'' THEN
               ITEM<1>=ITEM<2>:"*":ITEM<3>
               LOCATE ITEM<1> IN REC<1>,1 BY 'AR' SETTING QQQ ELSE NULL
               FOR M=1 TO 11
                  REC=INSERT(REC,M,QQQ,0,ITEM<M>)
               NEXT M
            END
            NUM.RULES=DCOUNT(REC<1>,@VM)
            IF NUM.RULES=0 THEN
               NUM.PAGES=0
               PAGE.NUMBER=0
            END ELSE
               NUM.PAGES=INT(NUM.RULES/PAGE.SIZE)
               IF REM(NUM.RULES,PAGE.SIZE) THEN NUM.PAGES+=1
               PAGE.NUMBER=1
            END
            GOSUB DISPLAY.SCREEN
            GOSUB DISPLAY.PAGE
            GOTO MAIN.START
         CASE QI MATCHES '0N'
            IF QI+0=0 THEN GOTO MAIN.START
            IF REC<1,QI>='' THEN GOTO MAIN.START
            I=QI
            ITEM=''
            FOR M=1 TO 8
               ITEM<M>=REC<M,I>
            NEXT M
            SV=DCOUNT(REC<9,I>,@SVM)
            ITEM<9>=REC<9,I,SV>
            ITEM<10>=REC<10,I,SV>
            ITEM<11>=REC<11,I,SV>
            OLD.ITEM=ITEM
            CALL FB.PROCESS.NOTIFY.SUB(CLIENT.ID,CLIENT.NAME,ITEM)
            IF ITEM<2>#'' THEN ITEM<1>=ITEM<2>:"*":ITEM<3>
            BEGIN CASE
               CASE ITEM<1>=REC<1,I>
                  DIFF=0
                  FOR M=1 TO 8
                     IF ITEM<M>=OLD.ITEM<M> THEN NULL ELSE DIFF=1
                  NEXT M
                  IF DIFF THEN
                     FOR M=1 TO 8
                        REC<M,I>=ITEM<M>
                     NEXT M
                     SV+=1
                     REC<9,I,SV>=ITEM<9>
                     REC<10,I,SV>=ITEM<10>
                     REC<11,I,SV>=ITEM<11>
                  END
               CASE ITEM<2>=''
                  FOR M=1 TO 11
                     REC=DELETE(REC,M,I,0)
                  NEXT M
               CASE 1
*                 FIRST LET'S SAVE ALL THE USER/CHANGE DATA
                  SV+=1
                  REC<9,I,SV>=ITEM<9>
                  REC<10,I,SV>=ITEM<10>
                  REC<11,I,SV>=ITEM<11>
                  ITEM<9>=REC<9,I>
                  ITEM<10>=REC<10,I>
                  ITEM<11>=REC<11,I>
*                 NOW LET'S REMOVE THE PRIOR DATA BEFORE REINSERTING
                  FOR M=1 TO 11
                     REC=DELETE(REC,M,I,0)
                  NEXT M
                  LOCATE ITEM<1> IN REC<1>,1 BY 'AR' SETTING QQQ ELSE NULL
                  FOR M=1 TO 11
                     REC=INSERT(REC,M,QQQ,0,ITEM<M>)
                  NEXT M
            END CASE
            NUM.RULES=DCOUNT(REC<1>,@VM)
            IF NUM.RULES=0 THEN
               NUM.PAGES=0
               PAGE.NUMBER=0
            END ELSE
               NUM.PAGES=INT(NUM.RULES/PAGE.SIZE)
               IF REM(NUM.RULES,PAGE.SIZE) THEN NUM.PAGES+=1
               PAGE.NUMBER=1
            END
            GOSUB DISPLAY.SCREEN
            GOSUB DISPLAY.PAGE
            GOTO MAIN.START
         CASE QI='*'                     ; * Show contents of CONTROL.REC for debugging purposes
            CRT @(-1)
            CRT @(0,0):REC
            CALL ELINE('Viewing DEBUG Screen.')
            GOSUB DISPLAY.SCREEN
            GOSUB DISPLAY.PAGE
            GOTO MAIN.START
         CASE 1
            GOTO MAIN.START
      END CASE

********************************************************************************
* Start of internal subroutines
********************************************************************************

DISPLAY.SCREEN:***
      CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      CRT @(0,2):STR('=',79):            ; * JTW01
      CRT @(0,3):'Client#/Name   : ':CLIENT.ID:' ':C.REC<2>
      CRT @(0,4):REVERSE.ON:SPACE(79):REVERSE.OFF  ; * JTW01
      CRT @(0,5):'##  Beg/Date  End/Date  Active  Notify  Wkly/Email  Email/Address              '
      CRT @(0,6):'--  --------  --------  ------  ------  ----------  ---------------------------'
      CRT @(0,21):REVERSE.ON:SPACE(79):REVERSE.OFF           ; * JTW01
      RETURN

********************************************************************************

DISPLAY.PAGE:***
*   This routine displays a given page.
*   Input:  PAGE.NUMBER

      STR.OUT='Page ':PAGE.NUMBER:' of ':NUM.PAGES:' '
      STR.OUT=SPACE(79-LEN(STR.OUT)):STR.OUT
      CRT @(0,4):REVERSE.ON:STR.OUT:REVERSE.OFF
      Y=1                                ; * Screen position
      IF PAGE.NUMBER=0 THEN
         LINE.NUM=1
      END ELSE
         LINE.NUM=(PAGE.NUMBER-1)*PAGE.SIZE+1
      END
      LOOP WHILE Y<=14
         BEGIN CASE
            CASE LINE.NUM>NUM.RULES
               * Print nothing - actually clears line
!              SCREEN.LINE=LINE.NUM'R%2'
               SCREEN.LINE=''
               SCREEN.LINE2=''
            CASE REC<1,LINE.NUM>=''
!              SCREEN.LINE=LINE.NUM'R%2'
               SCREEN.LINE=''
               SCREEN.LINE2=''
            CASE 1
               GOSUB FORMAT.LINE
               SCREEN.LINE=FORMATTED.LINE
               SCREEN.LINE2=FORMATTED.LINE2
         END CASE
         CRT @(0,START.Y+Y):SCREEN.LINE:@(-4)      ; * Draw screen line
         CRT @(0,START.Y+Y+1):SCREEN.LINE2:@(-4)   ; * Draw screen line 2
         Y+=2                            ; * Inc screen position
         LINE.NUM+=1
      REPEAT
      RETURN

********************************************************************************

FORMAT.LINE:***
      FORMATTED.LINE =LINE.NUM'R%2':SPACE(2)       ; * JMK01
      FORMATTED.LINE:=OCONV(REC<2,LINE.NUM>,'D2-')'L#9':' '
      FORMATTED.LINE:=OCONV(REC<3,LINE.NUM>,'D2-')'L#9':' '
      FORMATTED.LINE:=REC<4,LINE.NUM>'R#4':'  ':'  '
      FORMATTED.LINE:=REC<5,LINE.NUM>'R#4':'  ':'  '
      FORMATTED.LINE:=REC<6,LINE.NUM>'R#5':SPACE(5):'  '
      EMAIL.DESC=REC<7,LINE.NUM,1>
      IF REC<7,LINE.NUM,2>='' THEN NULL ELSE EMAIL.DESC=EMAIL.DESC:'...'
      FORMATTED.LINE:=EMAIL.DESC'L#27'
      FORMATTED.LINE2=SPACE(4):REC<8,LINE.NUM>'L#75'
      RETURN

********************************************************************************


***********************************************************************************
FAILSAFE.CHECK:***
* There are no failsafe conditions to check currently.
      FAILSAFE.OK=TRUE                   ; * Assume no problems and try to find problems
      RETURN

********************************************************************************

SAVE.CONTROL.REC:***

      WRITE REC ON F.PROCESS.NOTIFY,CLIENT.ID

      RETURN

********************************************************************************

FIND.LOCKED:

      STMT = 'LIST.READU EVERY'
      EXECUTE STMT CAPTURING OUTPUT
      FL.LEN = DCOUNT(OUTPUT,@AM)
      FL.USER = 'Someone'
      FOUND = FALSE

      FOR X = 1 TO FL.LEN UNTIL FOUND
         T.USER = OCONV(TRIM(OUTPUT<X>[44,9]),'MCU')
         T.FILE = TRIM(OUTPUT<X>[53,17])
         IF T.FILE = FIND.LOCKED.NAME THEN
            FL.USER = T.USER
            FOUND = TRUE
         END
      NEXT

      CALL ELINE(FL.USER:" is in Carrier ":FIND.LOCKED.NAME:". Find them and tell them to get out of that carrier!")

      RETURN

********************************************************************************

DISPLAY.CONTROL.RECORDS:***
      CRT @(0,0):@(-1)
      EXECUTE 'SORT FB.CAR.CTRL 1 2 3 4'
      CALL ELINE('')
      RETURN

********************************************************************************

ASK.FOR.NUM:***
* A general number prompt routine
* Inputs:
*    AFN.MSG  - message to display
*    AFN.MASK - default value
*    AFN.MIN  - min value allowed
*    AFN.MAX  - max value allowed
* Outputs:
*    AFN.ANSWER

      AFN.ANSWER=''

AFN.1:
      CRT @(0,22):AFN.MSG:@(-4)
      HELP='Entry Options: [':AFN.MIN:'-':AFN.MAX:'] [X]=Back'
      EDIT.MASK=AFN.MASK:' '
      CALL GEN.IN(LEN(AFN.MSG)+1,22,EDIT.MASK,'',Q,0,LEN(AFN.MAX),'','',2,LEN(AFN.MSG)+1,22,0,QI,HELP,0,23)
      QI=TRIM(OCONV(QI,'MCU'))
      IF QI='' THEN QI=TRIM(EDIT.MASK)
      BEGIN CASE
         CASE QI='X'
         CASE QI>=AFN.MIN AND QI<=AFN.MAX
         CASE 1
            CALL ELINE('Invalid entry. Try again.')
            GOTO AFN.1
      END CASE
      AFN.ANSWER=QI
      CRT @(0,22):@(-4):
      CRT @(0,23):@(-4):
      RETURN

********************************************************************************

ASK.Y.OR.N:***
* This is a general Yes/No prompt routine.
* Inputs:
*    YN.MSG, YN.MASK
* Outputs:
*    YN.ANSWER

      YN.ANSWER=''

Y.OR.N:
      CRT @(0,22):YN.MSG:@(-4)
      HELP='Entry Options: [Y]es [N]o'
      EDIT.MASK=YN.MASK'L#1'
      CALL GEN.IN(LEN(YN.MSG)+1,22,EDIT.MASK,'',Q,0,1,'','',2,LEN(YN.MSG)+1,22,0,QI,HELP,0,23)
      QI=TRIM(OCONV(QI,'MCU'))
      IF QI='' THEN QI=TRIM(EDIT.MASK)
      BEGIN CASE
         CASE QI='Y'
         CASE QI='N'
         CASE 1
            CALL ELINE('Invalid entry. Try again.')
            GOTO Y.OR.N
      END CASE
      CRT @(0,22):@(-4):
      CRT @(0,23):@(-4):
      YN.ANSWER=QI
      RETURN

********************************************************************************



LAST.CHANCE.TO.SAVE:***
      IF REC#OLD.REC THEN
         YN.MSG='You have unsaved changes. Save before exiting?'
         YN.MASK=''
         GOSUB ASK.Y.OR.N
         IF YN.ANSWER='Y' THEN
            GOSUB FAILSAFE.CHECK
            IF FAILSAFE.OK THEN
               GOSUB SAVE.CONTROL.REC
               RETURN
            END ELSE
               RETURN
            END
         END
         RETURN
      END

********************************************************************************

THE.END:***
      CRT @(0,22):@(-3):
      RETURN
   END
