*********************************************************************
* Program name : FB.11.17.2
* Author       : OWEN HOLMAN
* Date written : FEB 13, 1995
* Library      : FBBP
* COPYRIGHT (c) : AFS, LLC 2016, All Rights Reserved.
*
* modify freight bill line item codes
* Last updated by afs (gbino) at 14:36:11 on 03/09/2017.

* Start modification history
* 111308 - JMK01 - T082416 - No Inbound Joint Line Pricing for this carrier (not Joint Line!)
* 083112 - RLM01 - Sysaid #3073 - Replace former employees' email addresses with those of current employees
* 022515 - JMK02 - SysAid#15482 - NON- SMC Carrier Service 1,1,11,17
* 031715 - JMK03 - SysAid#16064 - SEFL Service days and Serivce Type
* End modification history
*********************************************************************** 
      $OPTIONS HEADER.EJECT
      $OPTIONS EXEC.EQ.PERF
      $OPTIONS INFO.ABORT
      ERRMSG=''
*
* Initialize variables
*
      PROMPT''
      PROG.NAME='FB.11.17.2'
      PROG.DESC='CARRIER SERVICE MAINTENANCE'
      PACK.NAME='FREIGHT BILLING'
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'FB.11.17.2' ; UPL.VOUT = ''     ; * NPR_UPL 04/23/2010
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)       ; * NPR_UPL 04/23/2010

      CALL GET.USER(USER.NAME)
      LAST.ORIG.ZIP=''
      LAST.ORIG.CITY=''
      LAST.ORIG.STATE=''
      LAST.DEST.ZIP=''
      LAST.DEST.CITY=''
      LAST.DEST.STATE=''
      CARRIER.ID=''
      ORIG.ZIP=''
      ZIP.LEN=5
      CDN.ZIP.ARRAY=''                   ; * JMK04

      CDN.ZIP.ARRAY<1,-1>='AB'           ; * JMK04
      CDN.ZIP.ARRAY<2,-1>='T0A'          ; * JMK04
      CDN.ZIP.ARRAY<3,-1>='T9Z'          ; * JMK04

      CDN.ZIP.ARRAY<1,-1>='BC'           ; * JMK04
      CDN.ZIP.ARRAY<2,-1>='V0A'          ; * JMK04
      CDN.ZIP.ARRAY<3,-1>='V9Z'          ; * JMK04

      CDN.ZIP.ARRAY<1,-1>='MB'           ; * JMK04
      CDN.ZIP.ARRAY<2,-1>='R0A'          ; * JMK04
      CDN.ZIP.ARRAY<3,-1>='R9Z'          ; * JMK04

      CDN.ZIP.ARRAY<1,-1>='NB'           ; * JMK04
      CDN.ZIP.ARRAY<2,-1>='E0A'          ; * JMK04
      CDN.ZIP.ARRAY<3,-1>='E9Z'          ; * JMK04

      CDN.ZIP.ARRAY<1,-1>='NF'           ; * JMK04
      CDN.ZIP.ARRAY<2,-1>='A0A'          ; * JMK04
      CDN.ZIP.ARRAY<3,-1>='A9Z'          ; * JMK04

      CDN.ZIP.ARRAY<1,-1>='NS'           ; * JMK04
      CDN.ZIP.ARRAY<2,-1>='B0A'          ; * JMK04
      CDN.ZIP.ARRAY<3,-1>='B9Z'          ; * JMK04

      CDN.ZIP.ARRAY<1,-1>='NT'           ; * JMK04
      CDN.ZIP.ARRAY<2,-1>='X0E'          ; * JMK04
      CDN.ZIP.ARRAY<3,-1>='X1A'          ; * JMK04

      CDN.ZIP.ARRAY<1,-1>='NU'           ; * JMK04
      CDN.ZIP.ARRAY<2,-1>='X0A'          ; * JMK04
      CDN.ZIP.ARRAY<3,-1>='X0C'          ; * JMK04

      CDN.ZIP.ARRAY<1,-1>='ON'           ; * JMK04
      CDN.ZIP.ARRAY<2,-1>='K0A'          ; * JMK04
      CDN.ZIP.ARRAY<3,-1>='P9Z'          ; * JMK04

      CDN.ZIP.ARRAY<1,-1>='PE'           ; * JMK04
      CDN.ZIP.ARRAY<2,-1>='C0A'          ; * JMK04
      CDN.ZIP.ARRAY<3,-1>='C9Z'          ; * JMK04

      CDN.ZIP.ARRAY<1,-1>='QC'           ; * JMK04
      CDN.ZIP.ARRAY<2,-1>='G0A'          ; * JMK04
      CDN.ZIP.ARRAY<3,-1>='J9Z'          ; * JMK04

      CDN.ZIP.ARRAY<1,-1>='SK'           ; * JMK04
      CDN.ZIP.ARRAY<2,-1>='S0A'          ; * JMK04
      CDN.ZIP.ARRAY<3,-1>='S9Z'          ; * JMK04

      CDN.ZIP.ARRAY<1,-1>='YT'           ; * JMK04
      CDN.ZIP.ARRAY<2,-1>='Y0A'          ; * JMK04
      CDN.ZIP.ARRAY<3,-1>='Y9Z'          ; * JMK04

*
* Authorized users
*
 OPEN '','OPERATOR' TO F.OP ELSE CALL OPEN.ABORT("OPERATOR",PROG.NAME)      ; * GRB01
      READV OP.FLG FROM F.OP,USER.NAME,51 ELSE
         OP.FLG = "N"
      END
      IF OP.FLG = "Y" THEN
  **    BEGIN CASE
         ***** CASE USER.NAME = 'GBINO'
         ***** CASE USER.NAME = 'BRIAN'
         ***** CASE USER.NAME = 'DAVID'
         ***** CASE USER.NAME = 'SWINSTEAD'    ; * Added 05-13-2011 per Brian Jeppson ... BOH
         ***** CASE USER.NAME = 'SSELMAN'      ; * Added 05-13-2011 per Brian Jeppson ... BOH
         ***** CASE USER.NAME = 'RBOEHNLEIN'   ; * Ticket 5457 - DRF 03/18/13
*
* Restrict everyone else
*
   *****      CASE 1
 END ELSE
            SUBJ="Unauthorized Program Access by ":USER.NAME
            TEXT=''
            TEXT<1,-1>=USER.NAME:' ':DATE()'D2/':' ':OCONV(TIME(),'MTHS'):' ':PROG.NAME
            TEXT<1,-1>='User ':USER.NAME:' tried to access ':PROG.DESC
            TEXT<1,-1>="(This user's name was not included in the program to allow access)"
            MVIN=''

            MVIN<1>='SMatthews@afs.net'  ; * RLM01
            MVIN<2>=''
            MVIN<4>='AFS'
            MVIN<5>=SUBJ
            MVIN<6>=TEXT
            CALL SENDMAIL(MVIN,MVOUT)

            CALL FB.PRINT.CENT(1,80,12,'Restricted Access Application...')
            CALL FB.PRINT.CENT(1,80,14,'Access Denied! Contact the IS Help Desk for Access')
            CALL ELINE('')
            STOP
  **    END CASE
END

*
* Open files
*
      OPEN '','CARRIER.SVC' TO F.CARRIER.SVC ELSE CALL OPEN.ABORT('CARRIER.SVC',PROG.NAME)
      OPEN '','CARRIERS' TO F.CARRIERS ELSE CALL OPEN.ABORT('CARRIERS',PROG.NAME)
      OPEN '','FB.TABLES' TO F.TABLES ELSE CALL OPEN.ABORT('FB.TABLES',PROG.NAME)
      OPEN '','ZIPS.CODES' TO F.ZIPS THEN
         READ STATE.ZIP.REC FROM F.ZIPS,'3.DIGIT' THEN
*
* Remove any ZERO zip codes
*
            NUM.ZIPS = DCOUNT(STATE.ZIP.REC<1>, @VM)
            FOR X = 1 TO NUM.ZIPS
               IF STATE.ZIP.REC<2,X> = 0 THEN
                  DEL STATE.ZIP.REC<1,X>
                  DEL STATE.ZIP.REC<2,X>
                  DEL STATE.ZIP.REC<3,X>
                  X=X-1                  ; * JMK01
                  NUM.ZIPS=NUM.ZIPS-1    ; * JMK01
               END
            NEXT X
            INVALID.STATE=''
            INVALID.STATE<1>='AK'
            INVALID.STATE<2>='GV'
            INVALID.STATE<3>='HI'
            INVALID.STATE<4>='CD'
            INVALID.STATE<5>='MX'
            INVALID.STATE<6>='EX'
            INVALID.STATE<7>='IM'
            NUM.OF.INVALID.STATE=DCOUNT(INVALID.STATE,@AM)
            FOR I = 1 TO NUM.OF.INVALID.STATE
               LOCATE INVALID.STATE<I> IN STATE.ZIP.REC<1> SETTING X THEN
                  DEL STATE.ZIP.REC<1,X>
                  DEL STATE.ZIP.REC<2,X>
                  DEL STATE.ZIP.REC<3,X>
               END
            NEXT I
            STATE.ZIP.REC<1,-1>=CDN.ZIP.ARRAY<1>   ; * JMK04
            STATE.ZIP.REC<2,-1>=CDN.ZIP.ARRAY<2>   ; * JMK04
            STATE.ZIP.REC<3,-1>=CDN.ZIP.ARRAY<3>   ; * JMK04
*
* Count number of legit States (zip code ranges) avail.
*
            NUM.ZIPS = DCOUNT(STATE.ZIP.REC<1>, @VM)
         END ELSE
            CALL OPEN.ABORT("READ ZIPS.CODES",PROG.NAME)
         END
      END ELSE
         CALL OPEN.ABORT("ZIPS.CODES",PROG.NAME)
      END

      READU NSMC.LIST FROM F.TABLES,'NSMC.CARRIERS' ELSE NSMC.LIST=''
      NSMC.LIST.ORG=NSMC.LIST
*
***************************************************
50:* Get Carrier ID
**************************************************

      GOSUB GET.SCREEN.DSP
      CRT SCREEN.DSP
      CARRIER.ID=''
      ORIG.ZIP=''

      IF CARRIER.ID # '' THEN MASK = CARRIER.ID'R%5' ELSE MASK = '#####'
      HELP = "Enter the carrier number. [EX]=Exit"
      CALL GEN.IN(12,3,MASK,'',Q,0,20,'','',2,-5,3,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI = 'EX'
            STOP
         CASE NOT(QI MATCHES "0N")
            VIN=0                        ; * Starting Chars In
            VOUT=''
            CALL SOUNDEX.DISPLAY.NEW(VIN,VOUT,QI,'CARRIERS','SDX.CARRIER,NAME','1,2,3,4',ITEM.LIST)
            GOSUB 8100                   ; * Display screen
            GOSUB 8200
            BEGIN CASE
               CASE ITEM.LIST = ''
                  GOTO 50                ; * ENTER CARRIER
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                  GOTO 50                ; * ENTER CARRIER
               CASE ITEM.LIST # ''
                  IF NUM(ITEM.LIST<1,1>) THEN SND.DATA=ITEM.LIST<1,1> ; GOSUB SEND.DATA
                  GOTO 50                ; * ENTER CARRIER
            END CASE
         CASE QI = ''
            Q = CARRIER.ID
         CASE NUM(QI)
            Q = QI'R%5'
         CASE 1
            GOTO 50                      ; * ENTER CARRIER
      END CASE
      CARRIER.ID = Q
      CALL CLR.CONTROL(CARRIER.ID)

      READ CARRIER.REC FROM F.CARRIERS,CARRIER.ID ELSE
         CALL ELINE("ERROR - Carrier ":CARRIER.ID:" not on file.")
         GOTO 50                         ; * ENTER CARRIER
      END
      CRT @(12,3):CARRIER.ID 'R%5 ':CARRIER.REC<1>'L#35'
*
**************************************************
60:* Get Origin Zip
**************************************************
      HELP='Enter Zip/Postal/State Code for Origin.  [X]=Back [EX]=Exit'
      IF ORIG.ZIP#'' THEN                ; * JMK02
         IF NUM(ORIG.ZIP) THEN           ; * JMK02
            MASK=ORIG.ZIP'R%5'           ; * JMK02
         END ELSE                        ; * JMK02
            MASK=ORIG.ZIP'L#6'           ; * JMK02
         END                             ; * JMK02
      END ELSE                           ; * JMK02
         MASK=STR('#',6)                 ; * JMK02
      END                                ; * JMK02
      CALL GEN.IN(12,4,MASK,'',Q,0,6,'','',0,12,4,0,QI,HELP,0,23)      ; * JMK01
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
         CASE QI='EX'
            STOP
         CASE QI=''
            IF ORIG.ZIP#'' THEN          ; * JMK01
               QI=ORIG.ZIP
               CRT @(12,4):QI
            END ELSE
               GO 60
            END
         CASE QI MATCHES "5N" OR QI MATCHES "1A1N1A1N1A1N"
            ZIP=QI
            CALL FB.READ.ZIP(ZIP,CITY,STATE)
         CASE QI MATCHES "3N" OR QI MATCHES "1A1N1A"
            LOCATE QI IN STATE.ZIP.REC<2> SETTING Z3POS ELSE
               CALL ELINE('INVALID ENTRY. PLEASE TRY AGAIN.')
               GO 60
            END
            ZIP=QI
            CITY=''
            STATE=STATE.ZIP.REC<1,Z3POS>
         CASE QI MATCHES '2A'
            LOCATE QI IN STATE.ZIP.REC<1> SETTING SPOS ELSE
               CALL ELINE('INVALID ENTRY. PLEASE TRY AGAIN.')
               GO 60
            END
            ZIP=''
            CITY=''
            STATE=QI
         CASE 1
            CALL ELINE('INVALID ENTRY. PLEASE TRY AGAIN.')
            GO 60
      END CASE

      ORIG.ZIP=ZIP
      ORIG.CITY=CITY
      ORIG.STATE=STATE
      CRT @(12,4):ORIG.ZIP 'L#6 ':ORIG.CITY:' ':ORIG.STATE

*
* Read Code Table from File
*
      CARRIER.SVC.ID=CARRIER.ID:'*':ORIG.ZIP
      IF ORIG.ZIP='' AND ORIG.STATE#'' THEN
         CARRIER.SVC.ID=CARRIER.ID:'*':ORIG.STATE
      END
      READ CARRIER.SVC.REC FROM F.CARRIER.SVC,CARRIER.SVC.ID ELSE CARRIER.SVC.REC=''
      DISP.REC=''
      DISP.REC<1>=CARRIER.SVC.REC<1>
      DISP.REC<2>=CARRIER.SVC.REC<2>
      DISP.REC<3>=CARRIER.SVC.REC<3>
      NVAL=DCOUNT(DISP.REC<1>,@VM)
      FOR VAL=1 TO NVAL
         CALL FB.READ.ZIP(DISP.REC<1,VAL>,CITY,STATE)
         IF CITY NE '' THEN DESC=CITY:', ':STATE ELSE DESC=STATE
         DISP.REC<4,VAL>=DESC
         DISP.REC<5,VAL>=CITY
         DISP.REC<6,VAL>=STATE
      NEXT VAL
*
* First page of codes
*
      PAGE=1
      GOSUB 9000

********************************************************************
100: * Enter selection code
*******************************************************************
      HELP="Enter line number. 'B#'=Back{#pgs}. 'F#'=Fwd{#pgs}. 'T'=Top. 'E'=End. 'EX'=Exit."        ; * JMK02
      CALL GEN.IN(0,22,"Enter line number please. ######",'',Q,0,6,'','',1,-6,22,0,QI,HELP,0,23)     ; * JMK02
      QI=OCONV(QI,'MCU')

      BEGIN CASE
         CASE QI=''
            PAGE=PAGE+1
            GOSUB 9000
         CASE QI='B'
            PAGE=PAGE-1
            IF PAGE=0 THEN PAGE=1
            GOSUB 9000
         CASE QI[1,1]='B'                ; * JMK02
            PGS=TRIM(QI[2,9999])+0       ; * JMK02
            PAGE=PAGE-PGS                ; * JMK02
            IF PAGE=0 THEN PAGE=1        ; * JMK02
            GOSUB 9000                   ; * JMK02
         CASE QI='F'                     ; * JMK02
            PAGE=PAGE+1                  ; * JMK02
            GOSUB 9000                   ; * JMK02
         CASE QI[1,1]='F'                ; * JMK02
            PGS=TRIM(QI[2,9999])+0       ; * JMK02
            PAGE=PAGE+PGS                ; * JMK02
            GOSUB 9000                   ; * JMK02
         CASE QI='T'
            PAGE=1
            GOSUB 9000
         CASE QI='EX'
            STOP
         CASE NUM(QI)
            SEL=QI
            IF SEL LT START ! SEL GT STOP THEN
               CALL ELINE('Invalid selection.')
               GOTO 100
            END
            GOSUB 8000
         CASE QI='E'
            X=DCOUNT(DISP.REC<1>,CHAR(253))
            FOR I=X TO 1 STEP -1
               IF DISP.REC<1,I>='' THEN
                  DISP.REC=DELETE(DISP.REC,1,I)
                  DISP.REC=DELETE(DISP.REC,2,I)
                  DISP.REC=DELETE(DISP.REC,3,I)
                  DISP.REC=DELETE(DISP.REC,4,I)
                  DISP.REC=DELETE(DISP.REC,5,I)
                  DISP.REC=DELETE(DISP.REC,6,I)
               END
            NEXT I
*
            CARRIER.SVC.REC=''
            CARRIER.SVC.REC<1>=DISP.REC<1>
            CARRIER.SVC.REC<2>=DISP.REC<2>
            CARRIER.SVC.REC<3>=DISP.REC<3>
            IF CARRIER.SVC.REC<1>='' THEN          ; * JMK03
               DELETE F.CARRIER.SVC,CARRIER.SVC.ID ; * JMK03
               LOCATE CARRIER.ID IN NSMC.LIST BY 'AR' SETTING CPOS THEN          ; * JMK03
                  DEL NSMC.LIST<CPOS>    ; * JMK03
               END                       ; * JMK03
               IF NSMC.LIST#NSMC.LIST.ORG THEN     ; * JMK03
                  IF NSMC.LIST='' THEN   ; * JMK03
                     DELETE F.TABLES,'NSMC.CARRIERS'         ; * JMK03
                  END ELSE               ; * JMK03
                     WRITE NSMC.LIST ON F.TABLES,'NSMC.CARRIERS'
                  END                    ; * JMK03
               END
            END ELSE                     ; * JMK03
               WRITE CARRIER.SVC.REC ON F.CARRIER.SVC,CARRIER.SVC.ID
               LOCATE CARRIER.ID IN NSMC.LIST BY 'AR' SETTING CPOS ELSE
                  INS CARRIER.ID BEFORE NSMC.LIST<CPOS>
               END
               IF NSMC.LIST#NSMC.LIST.ORG THEN
                  WRITE NSMC.LIST ON F.TABLES,'NSMC.CARRIERS'
               END
            END                          ; * JMK03
            STOP
      END CASE
      GOSUB 9010                         ; * RESORT ARRAY
      GOSUB 9000
      GOTO 100

********************************************************************
8000:* Edit code
*******************************************************************
 ROW=6+REM(SEL,15)
      IF ROW=6 THEN ROW=21
      DEST.ZIP=DISP.REC<1,SEL>
      DIR=DISP.REC<2,SEL>
      DAYS=DISP.REC<3,SEL>
      DESC=DISP.REC<4,SEL>
      DEST.CITY=DISP.REC<5,SEL>
      DEST.STATE=DISP.REC<6,SEL>
*******************************************************************     
8010: * Enter Destination zip
*******************************************************************
      HELP='Enter Zip Code for Destination.  [D]elete [X]=Back [EX]=Exit'

      IF DEST.ZIP#'' THEN                ; * JMK02
         IF NUM(DEST.ZIP) THEN           ; * JMK02
            MASK=DEST.ZIP'R%5'           ; * JMK02
         END ELSE                        ; * JMK02
            MASK=DEST.ZIP'L#6'           ; * JMK02
         END                             ; * JMK02
      END ELSE                           ; * JMK02
         MASK=STR('#',6)                 ; * JMK02
      END                                ; * JMK02
      CALL GEN.IN(6,ROW,MASK,'',Q,0,6,'','',0,6,ROW,0,QI,HELP,0,23)    ; * JMK02
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            RETURN
         CASE QI='EX'
            STOP
         CASE QI=''
            IF DEST.ZIP#'' THEN
               QI=DEST.ZIP
               CRT @(6,ROW):QI           ; * JMK02
            END ELSE
               GO 8010
            END
         CASE QI='D'
            FOR DISP.ATT=1 TO 6
               DISP.REC=DELETE(DISP.REC,DISP.ATT,SEL)
            NEXT DISP.ATT
            RETURN
         CASE QI MATCHES "5N" OR QI MATCHES "1A1N1A1N1A1N"
            ZIP=QI
            CALL FB.READ.ZIP(ZIP,CITY,STATE)
         CASE QI MATCHES "3N" OR QI MATCHES "1A1N1A"
            LOCATE QI IN STATE.ZIP.REC<2> SETTING Z3POS ELSE
               CALL ELINE('INVALID ENTRY. PLEASE TRY AGAIN.')
               GO 60
            END
            ZIP=QI
            CITY=''
            STATE=STATE.ZIP.REC<1,Z3POS>
         CASE QI MATCHES '2A'
            LOCATE QI IN STATE.ZIP.REC<1> SETTING SPOS ELSE
               CALL ELINE('INVALID ENTRY. PLEASE TRY AGAIN.')
               GO 60
            END
            ZIP=''
            CITY=''
            STATE=QI
         CASE 1
            CALL ELINE('INVALID ENTRY. PLEASE TRY AGAIN.')
            GO 8010
      END CASE
*DFCALL ELINE('PRESS BREAK')
      LOCATE QI IN DISP.REC<1> SETTING TPOS THEN
         IF SEL=TPOS THEN
            ZIP=DISP.REC<1,SEL>
            DIR=DISP.REC<2,SEL>
            DAYS=DISP.REC<3,SEL>
            CITY=DISP.REC<5,SEL>
            STATE=DISP.REC<6,SEL>
         END ELSE
            CALL ELINE('ALREADY EXISTS IN LINE ':TPOS:'. PLEASE TRY AGAIN.')
            GO 8010
         END
      END

      IF ZIP='' AND STATE#'' THEN
         ZIP=STATE
      END
      DEST.ZIP=ZIP
      DEST.CITY=CITY
      DEST.STATE=STATE

      IF DEST.CITY # '' THEN
         DESC = DEST.CITY:', ':DEST.STATE
      END ELSE
         DESC = DEST.STATE
      END
      LAST.DEST.ZIP=DEST.ZIP
      LAST.DEST.CITY=DEST.CITY
      LAST.DEST.STATE=DEST.STATE

      CRT @(6,ROW):DEST.ZIP 'L#10':@(15,ROW):DESC'L#35'      ; * JMK02
********************************************************************
8020: HELP="Enter Direct/Indirect. '<'=Back to code. 'X'=Exit."
*******************************************************************
      CALL GEN.IN(51,ROW,DIR'L#1','',Q,0,1,'','',2,-1,ROW,0,QI,HELP,0,23)        ; * JMK02
      IF QI='' THEN
         QI=DIR
         Q=DIR
      END
      QI=OCONV(QI,'MCU')
      Q=OCONV(Q,'MCU')
      BEGIN CASE
         CASE QI='X'
            RETURN
         CASE QI='<'
            CRT @(51,ROW):DIR'L#1'       ; * JMK02
            GOTO 8010
         CASE QI='D'
         CASE QI='I'
         CASE 1
            CALL ELINE('Invalid Entry')
            GOTO 8020
      END CASE
      DIR=Q
      CRT @(51,ROW):DIR'L#1'             ; * JMK02
*******************************************************************      
8030: HELP="Enter Transit Days. '<'=Back to Direct/Indirect. 'X'=Exit."
*******************************************************************
      CALL GEN.IN(61,ROW,DAYS'L#1','',Q,0,1,'','',2,-1,ROW,0,QI,HELP,0,23)       ; * JMK02
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            RETURN
         CASE QI='<'
            CRT @(61,ROW):DAYS'L#1'      ; * JMK02
            GOTO 8020
         CASE QI='' AND (DAYS MATCHES '0N')
            Q=DAYS
         CASE QI MATCHES '0N'
            NULL
         CASE 1
            CALL ELINE("Must be numberic")
            GO 8030
      END CASE
      DAYS=Q

      CRT @(61,ROW):DAYS'L#1'            ; * JMK02
      DISP.REC<1,SEL>=DEST.ZIP
      DISP.REC<2,SEL>=DIR
      DISP.REC<3,SEL>=DAYS
      DISP.REC<4,SEL>=DESC
      DISP.REC<5,SEL>=DEST.CITY
      DISP.REC<6,SEL>=DEST.STATE
      RETURN

*******************************************************************
8100: ***Display screen to send to subroutine
*******************************************************************
      CALL AFS.SCR.REFRESH(PROG.NAME, PROG.DESC, PACK.NAME, CO.NAME,TIME.DATE, 1)
      CRT SCREEN.DSP
      RETURN
*******************************************************************
8200: 
*******************************************************************
DATA.DSP =@(12, 3):CARRIER.ID 'R%5 ':CARRIER.REC<1> 'L#35'
      DATA.DSP:=@(12, 4):ORIG.ZIP 'L#6 ':ORIG.CITY:' ':ORIG.STATE
      RETURN
*******************************************************************
GET.SCREEN.DSP: ***
*******************************************************************
      SCREEN.DSP =@(0, 3):'Carrier   : '
      SCREEN.DSP:=@(0, 4):'Origin Zip: '
      SCREEN.DSP:=@(0, 5):STR('-',79)
      RETURN
*******************************************************************
9000: 
*******************************************************************
      CRT @(0,6):@(-3):"   #":@(6,6):"Dest Zip":@(15,6):"City State":@(51,6):"Direct":@(61,6):"Days"           ; * JMK02
      START=(PAGE*15)-14
*DF      IF DISP.REC<1,START>='' THEN
*DF         START=1
*DF         PAGE=1
*DF      END
      STOP=START+14
      FOR I=START TO STOP STEP 1
         ROW=6+REM(I,15)
         IF ROW=6 THEN ROW=21
         DEST.ZIP=DISP.REC<1,I>
         DIR=DISP.REC<2,I>
         DAYS=DISP.REC<3,I>
         DESC=DISP.REC<4,I>

         CRT @(0,ROW):@(-4):I"R#4":@(6,ROW):DEST.ZIP"L#10":@(15,ROW):DESC'L#35':@(51,ROW):DIR:@(61,ROW):DAYS   ; * JMK02
      NEXT I
      RETURN
*******************************************************************      
9010: * restore destination zip array
*******************************************************************
      NEW.DISP.REC=''
      NVAL=DCOUNT(DISP.REC<1>,@VM)
      FOR VAL=1 TO NVAL
         DEST.ZIP=DISP.REC<1,VAL>
         DEST.DIR=DISP.REC<2,VAL>
         DEST.DAYS=DISP.REC<3,VAL>
         DEST.DESC=DISP.REC<4,VAL>
         DEST.CITY=DISP.REC<5,VAL>
         DEST.STATE=DISP.REC<6,VAL>
         LOCATE DEST.ZIP IN NEW.DISP.REC<1> BY 'AR' SETTING ZPOS ELSE
            INS DEST.ZIP BEFORE NEW.DISP.REC<1,ZPOS>
            INS DEST.DIR BEFORE NEW.DISP.REC<2,ZPOS>
            INS DEST.DAYS BEFORE NEW.DISP.REC<3,ZPOS>
            INS DEST.DESC BEFORE NEW.DISP.REC<4,ZPOS>
            INS DEST.CITY BEFORE NEW.DISP.REC<5,ZPOS>
            INS DEST.STATE BEFORE NEW.DISP.REC<6,ZPOS>
         END
      NEXT VAL
      DISP.REC=NEW.DISP.REC
      RETURN
      
*******************************************************************
SEND.DATA: ****Execute DATA stmt and reduce CC
*******************************************************************
      CC-=(LEN(SND.DATA)+1)
      DATA SND.DATA

