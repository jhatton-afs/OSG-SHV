      SUBROUTINE BUILD.GLOBAL.CUST.NOS(VIN,VOUT,F.CLIENTS,FB.CUST)
*
      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'BUILD.GLOBAL.CUST.NOS' ; UPL.VOUT = ''    ; * NPR_UPL 04/22/2010
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)       ; * NPR_UPL 04/22/2010
* PROGRAM: BUILD.GLOBAL.CUST.NOS
* PROGRAM TO BUILD PARENT CHILD STRUCTURE ACROSS FP, AF, INT & BR MODULES
*
* FREIGHT BROKERAGE PACKAGE
*
* AUTHOR : Neil Pratt
* DATE   : July 2008
*
* 031715 - DRF01 - SysAid 16042 - Added CBulger to get the same email as
*                  JDarnell
* Initialize variables
*
      PROMPT''
      PROG.NAME="BUILD.GLOBAL.CUST.NOS"
      PROG.DESC="BUILD.GLOBAL.CUST.NOS"
      PACK.NAME="Freight Brokerage"
      CALL GET.USER(USER)
*
      FILE.ID = "1000.1"
      CO.ID = "1000*1"
*      CALL SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
*
* Open Files
*
      OPEN 'VOC' TO F.VOC ELSE           ; * JMK02
*         CALL OPEN.ABORT('VOC',PROG.NAME)       ; * JMK02
         CALL ELINE("Unable to Open VOC in ":PROG.NAME) ; RETURN
      END                                ; * JMK02
*
*NPR01
      CALL CHANNEL(CH.NUM)
*
      FILE.ID = "1000.1"
*
      OPEN '','GLOBAL.CLIENT.XREF' TO F.GLOBAL.XREF ELSE
*         CALL OPEN.ABORT('GLOBAL.CLIENT.XREF',PROG.NAME)
         CALL ELINE("Unable to Open GLOBAL.CLIENT.XREF in ":PROG.NAME) ; RETURN
      END
*
*NPR01
*
* Open AR Related Files
*
      VOC.REC = "Q"
      VOC.REC<2> = "VCI-AR"
*
      OPEN '','GLOBAL.AR.CONTROL' TO F.AR.CONTROL ELSE
         VOC.REC<3> = "AR.CONTROL"
         WRITE VOC.REC ON F.VOC, "GLOBAL.AR.CONTROL"
*         OPEN '','GLOBAL.AR.CONTROL' TO F.AR.CONTROL ELSE CALL OPEN.ABORT("GLOBAL.AR.CONTROL",PROG.NAME)
         OPEN '','GLOBAL.AR.CONTROL' TO F.AR.CONTROL ELSE CALL ELINE("Unable to Open GLOBAL.AR.CONTROL in ":PROG.NAME) ; RETURN
      END
*
      OPEN '','GLOBAL.AR.CUST' TO F.AR.CUST ELSE
         VOC.REC<3> = 'AR.CUST.':FILE.ID
         WRITE VOC.REC ON F.VOC, "GLOBAL.AR.CUST"
*         OPEN '','GLOBAL.AR.CUST' TO F.AR.CUST ELSE CALL OPEN.ABORT("GLOBAL.AR.CUST",PROG.NAME)
         OPEN '','GLOBAL.AR.CUST' TO F.AR.CUST ELSE CALL ELINE("Unable to Open GLOBAL.AR.CUST in ":PROG.NAME) ; RETURN
      END
*
* Open BR Related Files
*
      VOC.REC = "Q"
      VOC.REC<2> = "VCI-BR"
*
      OPEN '','GLOBAL.BR.CUST' TO F.BR.CUST ELSE
         VOC.REC<3> = 'BR.CUST.':FILE.ID
         WRITE VOC.REC ON F.VOC, "GLOBAL.BR.CUST"
*         OPEN '','GLOBAL.BR.CUST' TO F.BR.CUST ELSE CALL OPEN.ABORT("GLOBAL.BR.CUST",PROG.NAME)
         OPEN '','GLOBAL.BR.CUST' TO F.BR.CUST ELSE CALL ELINE("Unable to Open GLOBAL.BR.CUST in ":PROG.NAME) ; RETURN
      END
*
* Open INT Related Files
*
      VOC.REC = "Q"
      VOC.REC<2> = "VCI-INT"
*
      OPEN '','GLOBAL.INT.CUST' TO F.INT.CUST ELSE
         VOC.REC<3> = 'INT.CUST.':FILE.ID
         WRITE VOC.REC ON F.VOC, "GLOBAL.INT.CUST"
*         OPEN '','GLOBAL.INT.CUST' TO F.INT.CUST ELSE CALL OPEN.ABORT("GLOBAL.INT.CUST",PROG.NAME)
         OPEN '','GLOBAL.INT.CUST' TO F.INT.CUST ELSE CALL ELINE("Unable to Open GLOBAL.INT.CUST in ":PROG.NAME) ; RETURN
      END
*
* Open AF Related Files
*
      VOC.REC = "Q"
      VOC.REC<2> = "VCI-AF"
*
      OPEN '','GLOBAL.AF.CUST' TO F.AF.CUST ELSE
         VOC.REC<3> = 'AF.CUST.':FILE.ID
         WRITE VOC.REC ON F.VOC, "GLOBAL.AF.CUST"
*         OPEN '','GLOBAL.AF.CUST' TO F.AF.CUST ELSE CALL OPEN.ABORT("GLOBAL.AF.CUST",PROG.NAME)
         OPEN '','GLOBAL.AF.CUST' TO F.AF.CUST ELSE CALL ELINE("Unable to Open GLOBAL.AF.CUST in ":PROG.NAME) ; RETURN
      END
*
* Initialize company information
*
      CO.ID = "1000*1"
*      READ CO.REC FROM F.AR.CONTROL,CO.ID ELSE CALL READ.ABORT("AR.CONTROL",CO.ID,PROG.NAME)
      READ CO.REC FROM F.AR.CONTROL,CO.ID ELSE CALL ELINE("Cant read AR.CONTROL record ":CO.ID: " in " :PROG.NAME) ; RETURN
      CO.NAME1=CO.REC<1>
      CO.NAME2=CO.REC<2>
*
      BEGIN.DATE = DATE()
      END.DATE = DATE()
*
      MODE = VIN<1>
      ID.TEST = VIN<2>
      USER.NAME = VIN<3>
      NEW.FP.CLIENT = VIN<4>
*
*     IF NOT(NEW.FP.CLIENT) THEN RETURN ; * JMK01
      IF NOT(NEW.FP.CLIENT) AND MODE # "U" THEN RETURN       ; * JMK01
*
      IF MODE = "S" THEN GOSUB 1000      ; * Search for next available no. Across all systems.
*
      IF MODE = "C" THEN GOSUB 5000      ; * Create customer Across all systems.
*
      IF MODE = "U" THEN GOSUB 5000      ; * Update customer Across all systems.
*
*
      RETURN                             ; * To calling program
*
1000: *  Search for next available no. Across all systems.
*
      USED.NO = "Y"
      NEXT.AVAIL.NO = ""
      IF ID.TEST EQ "" THEN ID.TEST = 1
      IF NUM(ID.TEST) AND LEN(ID.TEST) LE "5" THEN
         TEST.NO = ID.TEST
      END ELSE
         TEST.NO = 1
      END
*
      LOOP
      WHILE NEXT.AVAIL.NO = "" DO
*
         PREFIX = "AF"
         F.CUST = F.AF.CUST
         GOSUB 2000
         IF USED.NO = "Y" THEN GOTO SKIP.IT
*
         PREFIX = "AR"
         F.CUST = F.AR.CUST
         GOSUB 2000
         IF USED.NO = "Y" THEN GOTO SKIP.IT
*
         PREFIX = "BR"
         F.CUST = F.BR.CUST
         GOSUB 2000
         IF USED.NO = "Y" THEN GOTO SKIP.IT
*
         PREFIX = "INT"
         F.CUST = F.INT.CUST
         GOSUB 2000
         IF USED.NO = "Y" THEN GOTO SKIP.IT
*
         ID.TEST = TEST.NO "R%5"
*
         READ TEST.REC FROM F.CLIENTS, ID.TEST THEN
            USED.NO = "Y"
            NEXT.AVAIL.NO = ''
         END ELSE
            NEXT.AVAIL.NO = ID.TEST
            USED.NO = "N"
         END
*
SKIP.IT:
*
         IF USED.NO = "Y" THEN NEXT.AVAIL.NO = ''
*
         TEST.NO += 1
      REPEAT
*
      IF NEXT.AVAIL.NO NE "" THEN
         VOUT = NEXT.AVAIL.NO
      END
*
      RETURN
*
2000: *
*
      IF PREFIX = "AR" THEN
         ID.TEST = TEST.NO "R%12"
      END ELSE
         ID.TEST = TEST.NO "R%5"
      END
*
      READ TEST.REC FROM F.CUST, ID.TEST THEN
         USED.NO = "Y"
         NEXT.AVAIL.NO = ''
      END ELSE
         NEXT.AVAIL.NO = ID.TEST
         USED.NO = "N"
      END
*
      RETURN
*
5000: *
*
      ADDED.TO.LIST = ""
*
      ID.TEST = VIN<2>
*
      IF ID.TEST[1,2] = "99" THEN RETURN           ; * Don't create traffic survey Customers across all systems.
*
      ID.XREF = ID.TEST 'R%5'
*
      READ XREF.REC FROM F.GLOBAL.XREF, ID.XREF ELSE XREF.REC = ""
*
      HOLD.XREF.REC = XREF.REC
*
      PREFIX = "AR"
      F.CUST = F.AR.CUST
      ID.CUST = ID.TEST "R%12"
      GOSUB 6000
*
      PREFIX = "AF"
      F.CUST = F.AF.CUST
      ID.CUST = ID.TEST "R%5"
      GOSUB 6000
*
      PREFIX = "BR"
      F.CUST = F.BR.CUST
      ID.CUST = ID.TEST "R%5"
      GOSUB 6000
*
      PREFIX = "INT"
      F.CUST = F.INT.CUST
      ID.CUST = ID.TEST "R%5"
      GOSUB 6000
*
      IF XREF.REC NE HOLD.XREF.REC THEN
         WRITE XREF.REC ON F.GLOBAL.XREF, ID.XREF
      END
*
      IF ADDED.TO.LIST NE "" THEN
         GOSUB NOTIFY
      END
*
      RETURN
*
6000: *
*
      CUST.REC = ""
      IF PREFIX = "AR" THEN
         AR.ID.CUST = ID.CUST 'R%12'
         NEW.CUST = 0
         READU CUST.REC FROM F.CUST,AR.ID.CUST ELSE
            IF MODE='U' THEN             ; * JMK01
               RELEASE F.CUST,AR.ID.CUST           ; * JMK01
               GO 6999                   ; * JMK01
            END                          ; * JMK01
            CUST.REC=''
            NEW.CUST = 1
            READ DEFAULT.REC FROM F.CUST,'000000099999' THEN
               FOR X = 20 TO 24
                  CUST.REC<X>=DEFAULT.REC<X>
               NEXT X
            END
         END
*
         NAME.CHANGED = "N"
         IF CUST.REC<1> NE FB.CUST<2> THEN NAME.CHANGED = "Y"
*
         IF NEW.CUST THEN
            NAME.CHANGED = "Y"
            CUST.REC<1>=FB.CUST<2>
            CUST.REC<3>=FB.CUST<3,1>
            CUST.REC<4>=FB.CUST<3,2>
            CUST.REC<5>=FB.CUST<4>
            CUST.REC<6>=FB.CUST<5>
            CUST.REC<7>=FB.CUST<6>
            CUST.REC<8>=OCONV(FB.CUST<31>,'MCN')
            CUST.REC<9>=OCONV(FB.CUST<45>,'MCN')
            CUST.REC<10>=FB.CUST<44>
            CUST.REC<52> = ID.XREF "R%5"
            CUST.REC<54> = DATE()
            IF CUST.REC<20> = "" THEN CUST.REC<20> = "00099"
            FOR I=74 TO 80
               CUST.REC<I>=FB.CUST<I>
            NEXT I
         END ELSE                        ; * JMK01
            IF MODE='U' AND CUST.REC<52>=ID.XREF THEN        ; * JMK01
               NAME.CHANGED = "Y"        ; * JMK01
               CUST.REC<1>=FB.CUST<2>    ; * JMK01
               CUST.REC<3>=FB.CUST<3,1>  ; * JMK01
               CUST.REC<4>=FB.CUST<3,2>  ; * JMK01
               CUST.REC<5>=FB.CUST<4>    ; * JMK01
               CUST.REC<6>=FB.CUST<5>    ; * JMK01
               CUST.REC<7>=FB.CUST<6>    ; * JMK01
               CUST.REC<8>=OCONV(FB.CUST<31>,'MCN')          ; * JMK01
               CUST.REC<9>=OCONV(FB.CUST<45>,'MCN')          ; * JMK01
               CUST.REC<10>=FB.CUST<44>  ; * JMK01
            END                          ; * JMK01
         END
*
         IF NAME.CHANGED = "Y" THEN
            CALL SOUNDEX.EDIT(CUST.REC<1>,FB.CUST<2>,AR.ID.CUST,'SDX.CUST.':FILE.ID:',NAME')
            CUST.REC<1>=FB.CUST<2>
         END
*
         XREF.REC<1> = ID.XREF "R%5"     ; * Always the same ID in AR.
*
         WRITE CUST.REC ON F.CUST,AR.ID.CUST
*
         RELEASE F.CUST, AR.ID.CUST
         IF NEW.CUST THEN
            LOCATE PREFIX IN ADDED.TO.LIST<1> SETTING APOS ELSE
               ADDED.TO.LIST<1,-1> = PREFIX
            END
         END
         GOTO 6999
      END
*
      NEW.CUST = 0
      READU TST.REC FROM F.CUST,ID.CUST ELSE
         IF MODE='U' THEN                ; * JMK01
            RELEASE F.CUST,ID.CUST       ; * JMK01
            GO 6999                      ; * JMK01
         END                             ; * JMK01
         TST.REC = ""
         NEW.CUST = 1
      END
*
      CUST.REC = TST.REC
*
      NAME.CHANGED = "N"
      IF CUST.REC<1> NE FB.CUST<2> THEN NAME.CHANGED = "Y"

      IF NEW.CUST THEN
         NAME.CHANGED = "Y"
         CUST.REC<1>=FB.CUST<2>
         CUST.REC<3>=FB.CUST<3,1>
         CUST.REC<4>=FB.CUST<3,2>
         CUST.REC<5>=FB.CUST<4>
         CUST.REC<6>=FB.CUST<5>
         CUST.REC<7>=FB.CUST<6>
         CUST.REC<8>=OCONV(FB.CUST<31>,'MCN')
         CUST.REC<9>=OCONV(FB.CUST<45>,'MCN')
         CUST.REC<10>=FB.CUST<44>
         IF CUST.REC<20> = "" THEN CUST.REC<20> = "00099"
         CUST.REC<49>=FB.CUST<114>
         CUST.REC<50>=FB.CUST<115>
         CUST.REC<52>=ID.XREF "R%5"
         CUST.REC<54> = DATE()
      END ELSE                           ; * JMK01
         IF MODE='U' AND CUST.REC<52>=ID.XREF THEN           ; * JMK01
            NAME.CHANGED = "Y"           ; * JMK01
            CUST.REC<1>=FB.CUST<2>       ; * JMK01
            CUST.REC<3>=FB.CUST<3,1>     ; * JMK01
            CUST.REC<4>=FB.CUST<3,2>     ; * JMK01
            CUST.REC<5>=FB.CUST<4>       ; * JMK01
            CUST.REC<6>=FB.CUST<5>       ; * JMK01
            CUST.REC<7>=FB.CUST<6>       ; * JMK01
            CUST.REC<8>=OCONV(FB.CUST<31>,'MCN')   ; * JMK01
            CUST.REC<9>=OCONV(FB.CUST<45>,'MCN')   ; * JMK01
            CUST.REC<10>=FB.CUST<44>     ; * JMK01
         END                             ; * JMK01
      END
*
      IF NAME.CHANGED = "Y" THEN
         CALL SOUNDEX.EDIT(CUST.REC<1>,FB.CUST<2>,ID.CUST,PREFIX:'.SDX.CUST.':FILE.ID:',NAME')
         CUST.REC<1>=FB.CUST<2>
      END
*
      BEGIN CASE
         CASE PREFIX = "AR"
            GOTO 6999
         CASE PREFIX = "BR"
            LOCATE ID.CUST IN XREF.REC<2> SETTING CPOS ELSE
               XREF.REC<2,-1> = ID.CUST
            END
         CASE PREFIX = "AF"
            LOCATE ID.CUST IN XREF.REC<3> SETTING CPOS ELSE
               XREF.REC<3,-1> = ID.CUST
            END
         CASE PREFIX = "INT"
            LOCATE ID.CUST IN XREF.REC<4> SETTING CPOS ELSE
               XREF.REC<4,-1> = ID.CUST
            END
         CASE 1
*         CALL ELINE("SUBSYSTEM FOR ":PREFIX:" NOT FOUND ")
            ERR = "SUBSYSTEM FOR ":PREFIX:" NOT FOUND "
            VOUT<2> = ERR
            GOTO 6999
      END CASE
*
*
      WRITE CUST.REC ON F.CUST,ID.CUST
      RELEASE F.CUST, ID.CUST
*
      IF NEW.CUST THEN
         LOCATE PREFIX IN ADDED.TO.LIST<1> SETTING APOS ELSE
            ADDED.TO.LIST<1,-1> = PREFIX
         END
      END
*
*   CALL ELINE("CUSTOMER ":ID.CUST:" UPDATED IN ":PREFIX)
*
6999: *
*
      RETURN
*
NOTIFY:
*
      CONVERT @VM TO "," IN ADDED.TO.LIST
*
      EVIN = ''
      EVIN<1> = 'JDarnell@afs.net'
      EVIN<1,-1> = 'CBulger@afs.net'     ; * DRF01
      EVIN<3> = 'MKerbow@afs.net'
***      EVIN<1,-1> = 'npratt@afs.net'
      EVIN<4> = 'Notification@afs.net'
*      EVIN<4> = 'npratt@afs.net'
*      EVIN<5> = 'New Customer Added'
      IF NEW.FP.CLIENT THEN
         EVIN<5> = 'New Customer ':ID.CUST:' - ':CUST.REC<1>:' has been added in Freight Payment'
         EVIN<6> = 'A new customer has been added in Freight Payment'
         EVIN<6,-1> = 'and also in the following systems : ' : ADDED.TO.LIST
         EVIN<6,-1> = " Please Check/Add Salesman and Sales Codes where necessary"
      END ELSE
         EVIN<5> = 'Customer ':ID.CUST:' - ':CUST.REC<1>:' Added in the following systems ':ADDED.TO.LIST
         EVIN<6> = 'A customer has been added via Freight Payment'
         EVIN<6,-1> = 'to the following systems : ' : ADDED.TO.LIST
         EVIN<6,-1> = " Please Check/Add Salesman and Sales Codes where necessary"
      END

      EVIN<6,-1> = ' '
      EVIN<6,-1> = 'Date: ':OCONV(DATE(),'D2/')
      EVIN<6,-1> = 'Time: ':OCONV(TIME(),'MT')
      EVIN<6,-1> = 'User: ':USER.NAME
      EVIN<6,-1> = ' '
      EVIN<6,-1> = 'Customer Number: ':ID.CUST
      EVIN<6,-1> = 'Customer Name:   ':CUST.REC<1>
      EVIN<6,-1> = 'Address1:        ':CUST.REC<3>
      EVIN<6,-1> = 'Address2:        ':CUST.REC<4>
      EVIN<6,-1> = 'City:            ':CUST.REC<5>
      EVIN<6,-1> = 'State:           ':CUST.REC<6>
      EVIN<6,-1> = 'Zip:             ':CUST.REC<7>
      EVIN<6,-1> = ' '
      EVIN<6,-1> = SPACE(20):"REF : PROCOMM --- FBBP BUILD.GLOBAL.CUST.NOS"
      CALL SENDMAIL(EVIN,EVOUT)
*
      RETURN
