$OPTIONS HEADER.EJECT
      ERRMSG=''
*
$OPTIONS EXEC.EQ.PERF
$OPTIONS INFO.ABORT
*
* PROGRAM: FB.1.20
* PROGRAM TO CREATE OR MODIFY NOTES ON WHY CLIENT/CARRIER 
* DOES NOT QUALIFY TO USE EDI
*
* FREIGHT PAYMENT PACKAGE
*
* AUTHOR: Bob Markey
* DATE: August 29, 2011
***********************************************************************
*Modifications:
* 120111 - RLM001 - SysAid#692 - Warning message if 'ALL' carriers rec exists and added deletion capability of 'ALL' carriers records.
***********************************************************************
* Initialize variables
*
      PROMPT ''
      PROG.NAME="FB.1.20"
      PROG.DESC="Client EDI Non-qualification Notes Editor"
      PACK.NAME="Freight Payment"
*
      CALL GET.USER(USER)
*
* Open files
*
      OPEN '','CLIENTS' TO F.CLIENTS ELSE CALL OPEN.ABORT("CLIENTS",PROG.NAME)
      OPEN '','CARRIERS' TO F.CARRIERS ELSE CALL OPEN.ABORT("CARRIERS",PROG.NAME)
      OPEN '','FB.EDI.NOTES' TO F.NOTES ELSE CALL OPEN.ABORT('FB.EDI.NOTES',PROG.NAME)
*
* Enter client number.
*
100:  CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      HELP="Enter client number. Word of name for search. X=Exit. EX=Exit."
      CALL GEN.IN(0,3,'Enter client number #####','',Q,0,20,'','',2,-5,3,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='' ! QI='EX' ! QI='X'
            GOTO EXIT.PROGRAM
         CASE NOT(QI MATCHES "0N")
            CALL SOUNDEX.DISPLAY(QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            BEGIN CASE
               CASE ITEM.LIST=''
                  GOTO 100
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                  GOTO 100
               CASE ITEM.LIST NE ''
                  IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
                  GOTO 100
            END CASE
         CASE NUM(QI)
            Q=QI'R%5'
         CASE 1
            GOTO 100
      END CASE
*
      CLIENT.ID=Q
      READ CLIENT.REC FROM F.CLIENTS,Q ELSE
         CALL ELINE('ERROR - Client ':CLIENT.ID:' not on file.')
         GOTO 100
      END
      CLIENT.NAME=CLIENT.REC<2>
      CRT @(0,3):'Client.... ':CLIENT.ID:' ':CLIENT.NAME
*
200:
      CRT @(0,4):
      CRT @(-3):
      NOTES.REC = ''
      HELP="Enter carrier number. Word of name for search. A=ALL Carriers. X=Exit. EX=Exit."
      CALL GEN.IN(0,4,'Enter carrier number #####','',Q,0,20,'','',2,-5,4,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X' OR QI='EX'
            GOTO 100
         CASE QI='A'
            Q='ALL'
         CASE NOT(QI MATCHES "0N")
            CALL SOUNDEX.DISPLAY(Q,'CARRIERS','SDX.CARRIER,NAME','1,3,4',ITEM.LIST)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            BEGIN CASE
               CASE ITEM.LIST=''
                  CRT @(0,3):'Client.... ':CLIENT.ID:' ':CLIENT.NAME
                  GOTO 200
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                  GOTO 200
               CASE ITEM.LIST NE ''
                  IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
                  GOTO 200
            END CASE
         CASE NUM(QI)
            Q=QI'R%5'
         CASE 1
            GOTO 200
      END CASE
*
      CARRIER.ID=Q
      IF CARRIER.ID = 'ALL' THEN
         CARRIER.NAME = 'Carriers used by client'
      END ELSE
         READ CARRIER.REC FROM F.CARRIERS,CARRIER.ID ELSE
            CALL ELINE('ERROR - Carrier ':CARRIER.ID:' not on file.')
            GOTO 200
         END
         CARRIER.NAME=CARRIER.REC<1>
         READ ALL.REC FROM F.NOTES,CLIENT.ID:'*ALL' THEN  ; * RLM001
            CALL ELINE('WARNING: A notes record already exists for ALL carriers used by this client.')  ; * RLM001
         END  ; * RLM001
      END
      CRT @(0,3):'Client.... ':CLIENT.ID:' ':CLIENT.NAME
      CRT @(0,4):'Carrier... ':CARRIER.ID:' ':CARRIER.NAME
*
* Get notes record
*
      NOTES.ID = CLIENT.ID:'*':CARRIER.ID
      READ NOTES.REC FROM F.NOTES,NOTES.ID ELSE
         NOTES.REC=''
      END
*
* Display the most recently entered note date and note
*
      IF NOTES.REC NE '' THEN
         CRT @(0,6):'Most recently entered EDI Non-qualification Note'
         CRT @(0,7):'Note Date  Note Text'
         CRT @(0,8):OCONV(NOTES.REC<1,1>,'D2/'):'   ':NOTES.REC<2,1>
      END
*
300:
*
      IF CARRIER.ID='ALL' THEN  ; * RLM001
         HELP="Enter: N=New note. L=List Prior Notes. D=Delete. X=Exit Carrier. EX=Exit Carr."  ; * RLM001
      END ELSE  ; * RLM001
         HELP="Enter: N=New note entry. L=List Prior Notes. X=Exit Carrier. EX=Exit Carrier."
      END  ; * RLM001
      CALL GEN.IN(0,22,'Enter selection ##','',Q,0,2,'','',2,-2,22,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X' OR QI='EX'
            GOTO 200
         CASE QI='L'
            STMT = "LIST FB.EDI.NOTES '":NOTES.ID:"' 1 2 "
            STMT := "ID-SUPP COL-HDR-SUPP"
            EXECUTE STMT
            INPUT JUNK:
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            CRT @(0,3):'Client.... ':CLIENT.ID:' ':CLIENT.NAME
            CRT @(0,4):'Carrier... ':CARRIER.ID:' ':CARRIER.NAME
            IF NOTES.REC NE '' THEN
               CRT @(0,6):'Most recently entered EDI Non-qualification Note'
               CRT @(0,7):'Note Date  Note Text'
               CRT @(0,8):OCONV(NOTES.REC<1,1>,'D2/'):'   ':NOTES.REC<2,1>
            END
            GOTO 300
         CASE QI='N'
            GOTO 400
          CASE QI='D' AND CARRIER.ID='ALL'                    ; * RLM001
             DELETE F.NOTES,NOTES.ID                          ; * RLM001
             NOTES.REC=''                                     ; * RLM001
             CARRIER.ID=''                                    ; * RLM001
             GOTO 200                                         ; * RLM001
         CASE 1
            GOTO 300
      END CASE
*
400:
      HELP='Enter new note date. [space]=Clear [cr]=Accept'
      MASK='Enter new note date ':DATE()'D2/'
      CALL GEN.IN(0,10,MASK,'DATE',Q,0,8,'','',2,-8,10,0,QI,HELP,0,23)
      BEGIN CASE
         CASE QI=' '
            GOTO 400
         CASE QI=''
            Q=DATE()
         CASE QI NE ''
            NULL
         CASE 1
            GOTO 400
      END CASE
      NOTE.DATE=Q
      CRT @(0,10):@(-4):'Note date. ':NOTE.DATE'D2/'
*
500* Enter Note Text
*
      HELP='Enter new note text.'
      CALL GEN.IN(0,11,'Enter Note ##################################################################### ','',Q,0,70,'','',2,-70,11,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE 1
            NULL
      END CASE
      NOTE.TEXT=QI
      CRT @(0,11):@(-4):'Note Text. ':NOTE.TEXT
*
600* Save, Modiy or Exit
*
      HELP="Enter: N=New note entry. L=List Prior Notes. X=Exit Carrier. EX=Exit Carrier."
      HELP="Enter: M=Modify New Note. S=Save New Note. X=Exit Carrier. EX=Exit Carrier."
      CALL GEN.IN(0,22,'Enter selection ##','',Q,0,2,'','',2,-2,22,0,QI,HELP,0,23)
      BEGIN CASE
         CASE QI='X' OR QI='EX'
            GOTO 200
         CASE QI='M'
            GOTO 400
         CASE QI='S'
            IF NOTES.REC = '' THEN
               NOTES.REC<1>=NOTE.DATE
               NOTES.REC<2>=NOTE.TEXT
               NOTES.REC<3>=USER
               NOTES.REC<4>=DATE()
               NOTES.REC<5>=TIME()
            END ELSE
               NOTES.REC=INSERT(NOTES.REC,1,1;NOTE.DATE)
               NOTES.REC=INSERT(NOTES.REC,2,1;NOTE.TEXT)
               NOTES.REC=INSERT(NOTES.REC,3,1;USER)
               NOTES.REC=INSERT(NOTES.REC,4,1;DATE())
               NOTES.REC=INSERT(NOTES.REC,5,1;TIME())
            END
            WRITE NOTES.REC ON F.NOTES,NOTES.ID
            GOTO 200
         CASE 1
            GOTO 600
      END CASE
*
EXIT.PROGRAM:*
*
STOP
END
