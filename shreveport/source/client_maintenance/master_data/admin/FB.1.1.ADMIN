      SUBROUTINE FB.1.1.ADMIN(VIN,VOUT,CLIENT.ID,CLIENT.REC,DISPLAY.MODE,F.SLSMAN,F.BCTRL,F.TABLES)
***********************************************************************
* Program name : FB.1.1.ADMIN
* Author       : ROBERT MARKEY
* Date written : OCTOBER 20, 2011
* Library      : FBBP
* COPYRIGHT (C) 2019 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED.
*
*  Program to allow updates to all AFS employee-related data in the CLIENTS
*
* Last updated by afs (AFSLOGISTICS\nmeddaugh) at 07:27:20 on 05/13/2021.
*
* Start modification history
* Mod 00 03-06-19, grb, accu-118  New program
* 042712 - RLM01 - Project 141 - Added Accounts Receivable Representative to Client record.
* 050912 - SWB01 - Project 188 - Added EDI related fields.
* 072512 - JMK01 - SysAid#3330 - Little Tykes Auto EDI
* 022013 - SWB02 - SysAid#5286 - Change labels for Initial and Servicing Salesman
* 120313 - JMK02 - SysAid#7557 - Changes to Client Maintenance- adding Marketing fields
* 030917 - TAG01 - SysAid30369 - Add salesforce ID
* 042417 - TAG02 - SysAid32150 - Change Field Names
* 111519 - GRB01 - accu-667    - log and notify when established by change is made
* 052220 - GRB02 - ACCU- 882 change katie davis to elise hackney
* 071421 - GRB03 - ACCU- 882 add A thru D to keyer complexity
* 051321 - NKH01 - ACCU-1164 Add flag to exclude client locking

* End modification history
*
************************************************************************

$OPTIONS EXEC.EQ.PERF
$OPTIONS INFO.ABORT
$OPTIONS HEADER.EJECT
$INCLUDE FILE.DEFS INC_ADDS60.CODES
*
* Initialize general variables
*
      PROMPT''
      CALL GET.USER(USER)
      REV.NORMAL=TERM.ESC.SEQ:CHAR(TERM.REV+TERM.DIM)
      REV.HILITE=TERM.ESC.SEQ:CHAR(TERM.REV)
      REV.OFF=TERM.ESC.SEQ:CHAR(TERM.NORMAL)
      POSITION.HOLDER='* Holds Position in DA *'
      MASK.CHAR='-'
      CLIENT.SOURCE.NAME=''
      CLIENT.TITLE=CLIENT.ID:' ':CLIENT.REC<2>
      CALL CENTER(CLIENT.TITLE,80)
      REDSPLY=0
      SAVED.CLIENT.REC=CLIENT.REC
      ALREADY.ADDED=0
      ALREADY.DELETED=0
      SELECTION=''
      SALESMAN.LIST=''                   ; * Initially null, but loaded only once if needed
*
* Get company file information
*
      * Begin GRB01
      OPEN 'EST.BY.LOG' TO F.LOG ELSE
         CALL ELINE('UNABLE TO OPEN EST.BY.LOG FILE')
         RETURN
      END
      * End GRB01
      PROG.NAME='FB.1.1'
      PROG.DESC=VIN<1>
      PACK.NAME=VIN<2>
      TEXT=VIN<3>
      CALL CENTER(TEXT,80)
      DISPLAY.MODE=VIN<4>
      CO.NAME=VIN<5>
*
* Setup screen
      CRT @(0,2):@(-3):CLIENT.TITLE
200:  ***
      CRT @(0,3):@(-3)
      CRT @(0,3):STR('=',79)
      CRT @(0,21):STR('=',79)    ; * NKH01

205:  ***
*
      INIT.SALESMAN.ID=CLIENT.REC<114>
      IF INIT.SALESMAN.ID='' THEN
         INIT.SALESMAN.NUMBER.NAME=''
      END ELSE
         READ SALESMAN.REC FROM F.SLSMAN,INIT.SALESMAN.ID THEN
            INIT.SALESMAN.NUMBER.NAME=INIT.SALESMAN.ID:' ':SALESMAN.REC<1>'L#25'
         END ELSE
            INIT.SALESMAN.NUMBER.NAME=INIT.SALESMAN.ID:' Name Not Found'
         END
      END

      SERV.SALESMAN.ID=CLIENT.REC<115>
      IF SERV.SALESMAN.ID='' THEN
         SERV.SALESMAN.NUMBER.NAME=''
      END ELSE
         READ SALESMAN.REC FROM F.SLSMAN,SERV.SALESMAN.ID THEN
            SERV.SALESMAN.NUMBER.NAME=SERV.SALESMAN.ID:' ':SALESMAN.REC<1>'L#25'
         END ELSE
            SERV.SALESMAN.NUMBER.NAME=SERV.SALESMAN.ID:' Name Not Found'
         END
      END
*
      ACCT.OWNER.ID=CLIENT.REC<302>      ; * JMK02
      IF ACCT.OWNER.ID='' THEN           ; * JMK02
         ACCT.OWNER.NUMBER.NAME=''       ; * JMK02
      END ELSE                           ; * JMK02
         READ ACCT.OWNER.REC FROM F.SLSMAN,ACCT.OWNER.ID THEN          ; * JMK02
            ACCT.OWNER.NUMBER.NAME=ACCT.OWNER.ID:' ':ACCT.OWNER.REC<1>'L#25'     ; * JMK02
         END ELSE                        ; * JMK02
            ACCT.OWNER.NUMBER.NAME=ACCT.OWNER.ID:' Name Not Found'     ; * JMK02
         END                             ; * JMK02
      END                                ; * JMK02

      ACCT.MGR.ID=CLIENT.REC<264>
      IF ACCT.MGR.ID='' THEN
         ACCT.MGR.NUMBER.NAME=''
      END ELSE
         READ ACCT.MGR.REC FROM F.SLSMAN,ACCT.MGR.ID THEN
            ACCT.MGR.NUMBER.NAME=ACCT.MGR.ID:' ':ACCT.MGR.REC<1>'L#25'
         END ELSE
            ACCT.MGR.NUMBER.NAME=ACCT.MGR.ID:' Name Not Found'
         END
      END
*
      KEYER.ID=CLIENT.REC<265>
      IF KEYER.ID='' THEN
         KEYER.NAME=''
         KEYER.ID.NAME=''
      END ELSE
         READ KEYER.REC FROM F.BCTRL,KEYER.ID THEN
            KEYER.ID.NAME=KEYER.ID:' ':KEYER.REC<13>'L#25'
         END ELSE
            KEYER.ID.NAME=KEYER.ID:' Name Not Found'
         END
      END
* RLM01
      ARREP.ID=CLIENT.REC<269>           ; * RLM01
      IF ARREP.ID='' THEN                ; * RLM01
         ARREP.NAME=''                   ; * RLM01
         ARREP.ID.NAME=''                ; * RLM01
      END ELSE                           ; * RLM01
         READ ARREP.REC FROM F.BCTRL,ARREP.ID THEN           ; * RLM01
            ARREP.ID.NAME=ARREP.ID:' ':ARREP.REC<13>'L#25'   ; * RLM01
         END ELSE                        ; * RLM01
            ARREP.ID.NAME=ARREP.ID:' Name Not Found'         ; * RLM01
         END                             ; * RLM01
      END                                ; * RLM01
      ORIG.EDI.BILLING.APPROVED = CLIENT.REC<270>  ; * SWB01

      CRT @(0, 4):' 1 Salesperson                 ':INIT.SALESMAN.NUMBER.NAME:@(-4)        ; * TAG02
      CRT @(0, 5):' 2 Partnership Manager         ':SERV.SALESMAN.NUMBER.NAME:@(-4)        ; * SWB01
      CRT @(0, 6):' 3 Account Manager             ':ACCT.MGR.NUMBER.NAME:@(-4)
      CRT @(0, 7):' 4 Keyer                       ':KEYER.ID.NAME:@(-4)
      CRT @(0, 8):' 5 Keyer Complexity Factor     ':CLIENT.REC<266>'L#20':@(-4):
      CRT @(0, 9):' 6 Auditor                     ':CLIENT.REC< 71>'L#20':@(-4)
      CRT @(0,10):' 7 Auditor Complexity Factor   ':CLIENT.REC<267>'L#20':@(-4)
      CRT @(0,11):' 8 Accounts Receivable Rep     ':CLIENT.REC<269>'L#20':@(-4)  ; * RLM01
      CRT @(0,12):' 9 Electronic Billing Apprvd   ':CLIENT.REC<270> 'L#1'        ; * SWB01
      CRT @(0,13):'10 Electronic Billing Notes '   ; * SWB01
      CRT @(0,14):'11 EDI Start Date':SPACE(14):OCONV(CLIENT.REC<225>, 'D2/')    ; * SWB01
      CRT @(0,15):'12 EDI Auto Import             ':CLIENT.REC<272>    ; * JMK01
*     READ CLIENT.SOURCE.REC FROM F.TABLES,'FB.CLIENT.SOURCES' ELSE CLIENT.SOURCE.REC=''   ; * JMK02
      READ CLIENT.SOURCE.REC FROM F.TABLES,'FB.LEAD.SOURCES' ELSE CLIENT.SOURCE.REC=''     ; * JMK02
      LOCATE CLIENT.REC<261> IN CLIENT.SOURCE.REC<1> SETTING POS THEN
         CLIENT.SOURCE.NAME=CLIENT.SOURCE.REC<2,POS>
      END ELSE
         CLIENT.SOURCE.NAME=''
      END
*     CRT @(0,16):'13 Client Source               ':CLIENT.REC<261>'L#5':' ':CLIENT.SOURCE.NAME'L#25' ; * JMK02
      CRT @(0,16):'13 Lead Source                 ':CLIENT.REC<261>'L#5':' ':CLIENT.SOURCE.NAME'L#25'          ; * JMK02
      CRT @(0,17):'14 Source Agent                ':CLIENT.REC<301>'L#25'        ; * JMK02
      CRT @(0,18):'15 Established By               ':ACCT.OWNER.NUMBER.NAME:@(-4)          ; * TAG02
* Begin TAG01
      CRT @(0,19):'16 Salesforce ID:  ':CLIENT.REC<313>
      CRT @(0,20):'17 Exclude Edit Lock:          ':CLIENT.REC<324>     ; * NKH01    
* End TAG01
*
210:  ***
      IF DISPLAY.MODE THEN               ; * SWB01
         HELP='Enter number to edit. [EX]it'       ; * SWB01
      END ELSE                           ; * SWB01
         HELP='Enter number to edit. [U]pdate [EX]it'
      END                                ; * SWB01
      CALL GEN.IN(0,22,'Enter Selection: --','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'                    ; * Exit without changes (abandon all changes)
            CLIENT.REC=SAVED.CLIENT.REC
            GOTO EXIT.EXTERNAL.SUBROUTINE

         CASE QI='U' AND NOT(DISPLAY.MODE)         ; * Exit with changes   ; * SWB01
            GOTO EXIT.EXTERNAL.SUBROUTINE

         CASE QI=''
            CALL ELINE('Invalid entry - Command not recognized.')
            GOTO 210

         CASE NUM(QI)                    ; * Edit numbered item

            IF QI<1 OR QI>17 THEN        ; * NKH01

               CALL ELINE('Invalid entry - Number out of range.')
               GOTO 210
            END ELSE
               IF DISPLAY.MODE THEN
                  CALL ELINE('Invalid entry - You may view only.')
                  GOTO 210
               END ELSE

                  ON QI GOSUB 1000,2000,3000,4000,5000,6000,7000,8000,9000,10000,11000,12000,13000,14000,15000,16000,17000    ; * NKH01
* End TAG01
                  GOTO 205
               END
            END

         CASE 1
            CALL ELINE('Invalid entry - Command not recognized.')
            GOTO 210
      END CASE


* 1 Business Development salesman number and name on the account (used to be Initial Salesman)
1000: ***
      MASK=INIT.SALESMAN.NUMBER.NAME:STR(MASK.CHAR,30-LEN(INIT.SALESMAN.NUMBER.NAME))
*      HELP='Enter initial salesman (obtained account) number or name. [L]ist [X]=Back'    ; * SWB02
      HELP='Enter Salesperson (obtained account) number or name. [L]ist [X]=Back'          ; * TAG02
      CALL GEN.IN(31,4,MASK,'',Q,0,31,'','',2,31,4,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X' OR QI=''
            RETURN
         CASE QI='L'
            SALESMAN.ROLE='Initial'
            GOSUB POP.UP.LIST.OF.SALESMEN
            IF SELECTION='NO DATA' THEN GOTO 1000
            IF SELECTION='E' THEN
               DATA 1                    ; * return to internal subroutine 1000
               RETURN
            END
         CASE QI=' '
            SALESMAN.CODE=''
         CASE NUM(QI)
            QI=QI'R%5'
            READ SALESMAN.REC FROM F.SLSMAN,QI THEN
               SALESMAN.CODE=QI
            END ELSE
               CALL ELINE('Salesman number ':QI:' is not on file.')
               GOTO 1000
            END
         CASE ALPHA(QI)
            CALL SOUNDEX.DISPLAY(QI,'AR.SLSMAN.1000.1','AR.SLSMAN.1000.1,SDX.NAME','1',QX)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            CRT @(0,2):@(-3):CLIENT.TITLE
            CRT @(0,3):@(-3)
            CRT @(0,3):STR('=',79)
            CRT @(0,21):STR('=',79)    ; * NKH01
            CT=DCOUNT(QX<1>,@VM)
            IF CT=0 THEN                 ; * no selection chosen
               DATA 1                    ; * return to internal subroutine 1000
               RETURN
            END
            DATA 1,QX<1,1>               ; * return to subr 1000 with Salesman chosen
            RETURN
         CASE 1
            GOTO 1000
      END CASE
      CLIENT.REC<114>=SALESMAN.CODE
      RETURN

* 2 Partnership Manager number and name on the account (formerly Servicing salesman)
2000: ***
*
      MASK=SERV.SALESMAN.NUMBER.NAME:STR(MASK.CHAR,30-LEN(SERV.SALESMAN.NUMBER.NAME))
*      HELP='Enter servicing salesman (managing account) number or name. [L]ist [X]=Back'   ; * SWB02
      HELP='Enter Partnership Manager (managing account) number or name. [L]ist [X]=Back'  ; * SWB02
      CALL GEN.IN(31,5,MASK,'',Q,0,31,'','',2,31,5,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X' OR QI=''
            RETURN
         CASE QI='L'
            SALESMAN.ROLE='Servicing'
            GOSUB POP.UP.LIST.OF.SALESMEN
            IF SELECTION='NO DATA' THEN GOTO 2000
            IF SELECTION='E' THEN
               DATA 2                    ; * return to internal subroutine 2000
               RETURN
            END
         CASE QI=' '
            SALESMAN.CODE=''
         CASE NUM(QI)
            QI=QI'R%5'
            READ SALESMAN.REC FROM F.SLSMAN,QI THEN
               SALESMAN.CODE=QI
            END ELSE
               CALL ELINE('Salesman number ':QI:' is not on file.')
               GOTO 2000
            END
         CASE ALPHA(QI)
            CALL SOUNDEX.DISPLAY(QI,'AR.SLSMAN.1000.1','AR.SLSMAN.1000.1,SDX.NAME','1',QX)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            CRT @(0,2):@(-3):CLIENT.TITLE
            CRT @(0,3):STR('=',79)
            CRT @(0,21):STR('=',79)    ; * NKH01
            CT=DCOUNT(QX<1>,@VM)
            IF CT=0 THEN                 ; * no selection chosen
               DATA 2                    ; * return to internal subroutine 2000
               RETURN
            END
            DATA 2,QX<1,1>               ; * return to subr 2000 with salesman chosen
            RETURN
         CASE 1
            GOTO 2000
      END CASE
      CLIENT.REC<115>=SALESMAN.CODE
      RETURN

* 3 Account Manager Number
3000: ***
      MASK=ACCT.MGR.NUMBER.NAME:STR(MASK.CHAR,30-LEN(ACCT.MGR.NUMBER.NAME))
      HELP="Enter Account Manager's User ID or name. [L]ist [X]=Back"
      CALL GEN.IN(31,6,MASK,'',Q,0,31,'','',2,31,6,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X' OR QI=''
            RETURN
         CASE QI='L'
            ACCT.MGR.REC=''
            SALESMAN.ROLE='Account Manager'
            GOSUB POP.UP.LIST.OF.SALESMEN
            IF SELECTION='NO DATA' THEN GOTO 3000
            IF SELECTION='E' THEN
               DATA 3                    ; * return to internal subroutine 3000
               RETURN
            END
            DATA 3,ACCT.MGR.CODE         ; * return to sub 3000 with Acct Mgr chosen
         CASE QI=' '
            ACCT.MGR.CODE=''
         CASE NUM(QI)
            QI=QI'R%5'
            READ ACCT.MGR.REC FROM F.SLSMAN,QI THEN
               ACCT.MGR.CODE=QI
            END ELSE
               CALL ELINE('Account Manager number ':QI:' is not on file.')
               GOTO 3000
            END
         CASE ALPHA(QI)
            CALL SOUNDEX.DISPLAY(QI,'AR.SLSMAN.1000.1','AR.SLSMAN.1000.1,SDX.NAME','1',QX)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            CRT @(0,2):@(-3):CLIENT.TITLE
            CRT @(0,3):STR('=',79)
            CRT @(0,21):STR('=',79)    ; * NKH01
            CT=DCOUNT(QX<1>,@VM)
            IF CT=0 THEN                 ; * no selection chosen
               DATA 3                    ; * return to internal subroutine 3000
               RETURN
            END
            DATA 3,QX<1,1>               ; * return to subr 3000 with Acct Mgr chosen
            RETURN
         CASE 1
            GOTO 3000
      END CASE
      IF (ACCT.MGR.REC<16>='I' OR ACCT.MGR.REC<22> NE '') THEN
         CALL ELINE(QI:' is no longer an active employee.')
         GOTO 3000
      END ELSE
         CLIENT.REC<264>=ACCT.MGR.CODE
      END
      RETURN

* 4 Data Entry Keyer User ID
4000: ***
      MASK=KEYER.ID.NAME:STR(MASK.CHAR,30-LEN(KEYER.ID.NAME))
      HELP="Enter Data Entry Keyer's User ID or Last Name. [X]=Back"
      CALL GEN.IN(31,7,MASK,'',Q,0,31,'','',2,31,7,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X' OR QI=''
            RETURN
         CASE QI=' '
            KEYER.CODE=''
         CASE ALPHA(QI)
            READ KEYER.REC FROM F.BCTRL,QI THEN
               KEYER.CODE=QI
            END ELSE
               CALL SOUNDEX.DISPLAY(QI,'BCTRL','SDX.BCTRL','13',QX)
               CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
               CRT @(0,2):@(-3):CLIENT.TITLE
               CRT @(0,3):STR('=',79)
               CRT @(0,21):STR('=',79)    ; * NKH01
               CT=DCOUNT(QX<1>,@VM)
               IF CT=0 THEN              ; * no selection chosen
                  DATA 4                 ; * return to internal subroutine 4000
                  RETURN
               END
               DATA 4,QX<1,1>            ; * return to subr 4000 with Acct Mgr chosen
               RETURN
            END
         CASE 1
            GOTO 4000
      END CASE
*     IF (ACCT.MGR.REC<16>='I' OR ACCT.MGR.REC<22> NE '') THEN  ; * RLM01
      IF (KEYER.REC<16>='I' OR KEYER.REC<22> NE '') THEN
         CALL ELINE(QI:' is no longer an active employee.')
         GOTO 4000
      END ELSE
         CLIENT.REC<265>=KEYER.CODE
      END
      RETURN

* 5 Data Entry Keyer Complexity Factor
5000: ***
      MASK=CLIENT.REC<266>
      HELP="Enter the Keyer complexity factor - 1 (least) to 5 (most). [X]=Back"
      CALL GEN.IN(31,8,MASK,'',Q,0,1,'','',2,31,8,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X' OR QI=''
            RETURN

         CASE QI=' '
            NULL

         CASE NUM(QI)
            IF QI<1 OR QI>5 THEN
               CALL ELINE('Invalid entry - Number out of range (1-least to 5-most).')
               GOTO 5000
            END

         CASE ALPHA(QI)
            * Begin GRB03
            BEGIN CASE
               CASE QI = "A"
               CASE QI = "B"
               CASE QI = "C"
               CASE QI = "D"
               CASE 1
                  CALL ELINE('Invalid entry = must be a letter A thru D.')
            GOTO 5000
            END CASE
* End GRB03
         CASE 1
            GOTO 5000
      END CASE
      CLIENT.REC<266>=TRIM(QI)
      RETURN

* 6 Auditor's name
6000: ***
      MASK=CLIENT.REC<71>:STR(MASK.CHAR,20-LEN(CLIENT.REC<71>))
      HELP="Enter the auditor's name for this client. [X]=Back"
      CALL GEN.IN(31,9,MASK,'',Q,0,20,'','',2,31,9,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='X' THEN RETURN
      IF QI='' THEN QI=CLIENT.REC<71>
      CLIENT.REC<71>=TRIM(QI)
      RETURN

* 7 Auditor Complexity Factor
7000: ***
      MASK=CLIENT.REC<267>
      HELP="Enter the Auditor's complexity factor- 1 (least) to 5 (least). [X]=Back"
      CALL GEN.IN(31,10,MASK,'',Q,0,1,'','',2,31,10,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X' OR QI=''
            RETURN

         CASE QI= ' '
            NULL

         CASE NUM(QI)
            IF QI<1 OR QI>5 THEN
               CALL ELINE('Invalid entry - Number out of range (1-least to 5-most).')
               GOTO 7000
            END

         CASE ALPHA(QI)
            CALL ELINE('Invalid entry = must be a number from 1 (least) to 5 (most).')
            GOTO 7000

         CASE 1
            GOTO 7000
      END CASE
      CLIENT.REC<267>=TRIM(QI)
      RETURN
      
* RLM01
* 8 Accounts Receivable Representative User ID   ; * RLM01
8000: ***   ; * RLM01
      MASK=ARREP.ID.NAME:STR(MASK.CHAR,30-LEN(ARREP.ID.NAME))          ; * RLM01
      HELP="Enter Account Receivable Rep's User ID or Last Name. [X]=Back"       ; * RLM01
      CALL GEN.IN(31,11,MASK,'',Q,0,31,'','',2,31,11,0,QI,HELP,0,23)   ; * RLM01
      QI=OCONV(QI,'MCU')                 ; * RLM01
      BEGIN CASE                         ; * RLM01
         CASE QI='X' OR QI=''            ; * RLM01
            RETURN                       ; * RLM01
         CASE QI=' '                     ; * RLM01
            KEYER.CODE=''                ; * RLM01
         CASE ALPHA(QI)                  ; * RLM01
            READ ARREP.REC FROM F.BCTRL,QI THEN    ; * RLM01
               ARREP.CODE=QI             ; * RLM01
            END ELSE                     ; * RLM01
               CALL SOUNDEX.DISPLAY(QI,'BCTRL','SDX.BCTRL','13',QX)    ; * RLM01
               CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)     ; * RLM01
               CRT @(0,2):@(-3):CLIENT.TITLE       ; * RLM01
               CRT @(0,3):STR('=',79)    ; * RLM01
               CRT @(0,21):STR('=',79)    ; * NKH01   ; * RLM01
               CT=DCOUNT(QX<1>,@VM)      ; * RLM01
               IF CT=0 THEN              ; * no selection chosen   ; * RLM01
                  DATA 8                 ; * return to internal subroutine 4000   ; * RLM01
                  RETURN                 ; * RLM01
               END                       ; * RLM01
               DATA 8,QX<1,1>            ; * return to subr 8000 with Accounts Receivable Rep chosen   ; * RLM01
               RETURN                    ; * RLM01
            END                          ; * RLM01
         CASE 1                          ; * RLM01
            GOTO 8000                    ; * RLM01
      END CASE                           ; * RLM01
      IF (ARREP.REC<16>='I' OR ARREP.REC<22> NE '') THEN     ; * RLM01
         CALL ELINE(QI:' is no longer an active employee.')  ; * RLM01
         GOTO 8000                       ; * RLM01
      END ELSE                           ; * RLM01
         CLIENT.REC<269>=ARREP.CODE      ; * RLM01
      END                                ; * RLM01
      RETURN   
                                ; * RLM01
* 9 Electronic Billing Approval
9000: ***                                ; * SWB01

      CLIENT.REC.270 = CLIENT.REC<270>   ; * SWB01
      MASK='Electronic Billing Apprvd   ': CLIENT.REC.270:@(-4)        ; * SWB01
      HELP='[Y or 1]=Yes [N or 0]=No'    ; * SWB01
9010:

      CALL GEN.IN(3,12,MASK,'',Q,0,2,'','',2,31,12,2,QI,HELP,0,23)     ; * SWB01
      QI=OCONV(QI,'MCU')                 ; * SWB01
      IF QI='' THEN QI='N'               ; * SWB01
      BEGIN CASE                         ; * SWB01
         CASE QI='X' OR QI=''
            RETURN

         CASE QI='N' OR QI='0'           ; * SWB01
            CLIENT.REC<270> = 'N'        ; * SWB01
            GOTO EXIT.EXTERNAL.SUBROUTINE          ; * SWB01
         CASE QI='Y' OR QI='1'           ; * SWB01
            CLIENT.REC<270> = 'Y'        ; * SWB01
            CRT @(31, 12):QI             ; * SWB01
            IF ORIG.EDI.BILLING.APPROVED # 'Y' THEN          ; * SWB01
               IF CLIENT.REC<225> = '' THEN        ; * SWB01
                  CALL ELINE('EDI Start Date is now mandatory.')       ; * SWB01
               END ELSE                  ; * SWB01
                  CALL ELINE('Please verify EDI Start Date is correct.')         ; * SWB01
               END                       ; * SWB01
            END                          ; * SWB01
         CASE 1                          ; * SWB01
            CALL ELINE('Invalid response.')        ; * SWB01
            GOTO 9010                    ; * SWB01
      END CASE                           ; * SWB01

      CRT @(31, 12):CLIENT.REC<270>      ; * SWB01

      RETURN                             ; * SWB01
*
* 10 Electronic Billing Approved (EDI) notes
10000: ***                               ; * SWB01
*The following program was cloned from FB.1.1.NOTES.NEW to maintain
*consistency in Client Maintenance. Each program updates a specific
*field, field 48 in one case, 271 in this case.
      CALL FB.1.1.NOTES.EDI(CLIENT.REC,DISPLAY.MODE)         ; * SWB01
      CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)    ; * SWB01
*      CRT @(31,13):CLIENT.NUMBER.TEXT   ; * SWB01
*      CALL FB.1.1.DISPLAY(CLIENT.REC)   ; * SWB01

      RETURN                             ; * SWB01
*
* 11 EDI Start Date
11000: ***                               ; * SWB01
      HELP="Enter EDI Start date."       ; * SWB01
      IF CLIENT.REC<225>='' THEN         ; * SWB01
         MASK='MM/DD/YY'                 ; * SWB01
      END ELSE                           ; * SWB01
         MASK=CLIENT.REC<225>'D2/'       ; * SWB01
      END                                ; * SWB01
      CALL GEN.IN(31,14,MASK,'DATE',Q,0,11,'','',2,31,14,0,QI,HELP,0,23)         ; * SWB01
      QI=OCONV(QI,'MCU')                 ; * SWB01
      BEGIN CASE                         ; * SWB01
         CASE QI='X'                     ; * SWB01
            CRT @(31,14):OCONV(CLIENT.REC<225>,'D2/')'R#8 ':           ; * SWB01
            RETURN                       ; * SWB01
         CASE QI='EX'                    ; * SWB01
            STOP                         ; * SWB01
         CASE QI=' '                     ; * SWB01
            CLIENT.REC<225>=''           ; * SWB01
            Q=''                         ; * SWB01
         CASE QI=''                      ; * SWB01
            Q=CLIENT.REC<225>            ; * SWB01
      END CASE                           ; * SWB01
      IF Q # '' AND Q < DATE() THEN CALL ELINE('You have entered a date in the past.')
      CLIENT.REC<225>=Q                  ; * SWB01
      CRT @(31,14):OCONV(CLIENT.REC<225>,'D2/')'R#8 ':       ; * SWB01

      RETURN                             ; * SWB01

* 12 EDI Auto Import
12000: ***                               ; * JMK01
      MASK='Y/N'                         ; * SWB01
      IF CLIENT.REC<272>#'' THEN         ; * SWB01
         MASK=CLIENT.REC<272>            ; * SWB01
      END                                ; * SWB01
      HELP='[Y or 1]=Yes [N or 0]=No, X=Back, EX=Exit'       ; * JMK01
      CALL GEN.IN(31,15,MASK,'',Q,0,2,'','',2,31,15,2,QI,HELP,0,23)    ; * JMK01
      QI=OCONV(QI,'MCU')                 ; * JMK01
      IF QI='' THEN QI=CLIENT.REC<272>   ; * JMK01
      BEGIN CASE                         ; * JMK01
         CASE QI='EX'                    ; * JMK01
            RETURN                       ; * JMK01
         CASE QI='X'                     ; * JMK01
            GOTO 11000                   ; * JMK01
         CASE QI='N' OR QI='0'           ; * JMK01
            QI = 'N'                     ; * JMK01
         CASE QI='Y' OR QI='1'           ; * JMK01
            QI = 'Y'                     ; * JMK01
         CASE 1                          ; * JMK01
            CALL ELINE('Invalid response.')        ; * JMK01
            GOTO 12000                   ; * JMK01
      END CASE                           ; * JMK01
      CLIENT.REC<272> = QI               ; * JMK01
      CRT @(31, 15):CLIENT.REC<272>      ; * JMK01

      RETURN                             ; * JMK01

* 13 Lead Source
13000: ***
*     HELP='Client Source. EX=Exit X=Back " "=Clear'         ; * JMK02
      HELP='Lead Source. EX=Exit X=Back " "=Clear'           ; * JMK02
      IF CLIENT.REC<261> NE '' THEN MASK=CLIENT.REC<261> ELSE MASK=''
      CALL GEN.IN(31,16,MASK,'',Q,0,5,'','',2,31,16,0,QI,HELP,0,23)
      IF Q='X' THEN
         CRT @(31,16):CLIENT.REC<261>'L#5':
         GO 12000
      END
      IF Q='EX' THEN
         CRT @(31,16):CLIENT.REC<250>'L#5':
         RETURN
      END
      IF QI='' THEN Q=TRIM(MASK)
      IF QI=' ' THEN Q=''
      IF Q # '' THEN
*        READ CLIENT.SOURCE.REC FROM F.TABLES,'FB.CLIENT.SOURCES' ELSE          ; * JMK02
         READ CLIENT.SOURCE.REC FROM F.TABLES,'FB.LEAD.SOURCES' ELSE   ; * JMK02
            CALL ELINE('ERROR - Missing Lead Source Validation Table.')          ; * JMK02
            GOTO 13000
         END
         LOCATE Q IN CLIENT.SOURCE.REC<1> SETTING POS ELSE
*           CALL ELINE('ERROR - ':Q:' is not a valid Client Source')   ; * JMK02
            CALL ELINE('ERROR - ':Q:' is not a valid Lead Source')     ; * JMK02
            GOTO 13000
         END
         CLIENT.SOURCE.NAME=CLIENT.SOURCE.REC<2,POS>
      END
      CLIENT.REC<261>=Q
      CRT @(31,16):CLIENT.REC<261>'L#5':' ':CLIENT.SOURCE.NAME'L#25'

      RETURN                             ; * JMK01
      
* 14 Source Agent
14000: ***
      HELP='Source Agent. EX=Exit X=Back " "=Clear'          ; * JMK02
      IF CLIENT.REC<301> NE '' THEN MASK=CLIENT.REC<301> ELSE MASK=''  ; * JMK02
      CALL GEN.IN(31,17,MASK,'',Q,0,5,'','',2,31,17,0,QI,HELP,0,23)    ; * JMK02
      IF Q='X' THEN                      ; * JMK02
         CRT @(31,16):CLIENT.REC<301>'L#5':        ; * JMK02
         GO 13000                        ; * JMK02
      END                                ; * JMK02
      IF Q='EX' THEN                     ; * JMK02
         CRT @(31,16):CLIENT.REC<301>'L#5':        ; * JMK02
         RETURN                          ; * JMK02
      END                                ; * JMK02
      IF QI='' THEN Q=TRIM(MASK)         ; * JMK02
      IF QI=' ' THEN Q=''                ; * JMK02
      IF Q # '' THEN                     ; * JMK02
         READ CLIENT.SOURCE.REC FROM F.TABLES,'FB.LEAD.SOURCES' ELSE   ; * JMK02
            CALL ELINE('ERROR - Missing Lead Source Validation Table.')          ; * JMK02
            GOTO 13000                   ; * JMK02
         END                             ; * JMK02
         LOCATE CLIENT.REC<261> IN CLIENT.SOURCE.REC<1> SETTING POS ELSE         ; * JMK02
            CALL ELINE('ERROR - ':Q:' is not a valid Lead Source')     ; * JMK02
            GOTO 13000                   ; * JMK02
         END                             ; * JMK02
         LOCATE Q IN CLIENT.SOURCE.REC<3,POS> SETTING APOS ELSE        ; * JMK02
            CALL ELINE('ERROR - ':Q:' is not a valid Source Agent')    ; * JMK02
            GOTO 13000                   ; * JMK02
         END                             ; * JMK02
         Q=CLIENT.SOURCE.REC<3,POS,APOS>           ; * JMK02
      END                                ; * JMK02
      CLIENT.REC<301>=Q                  ; * JMK02
      CRT @(31,17):CLIENT.REC<301>'L#25'           ; * JMK02

      RETURN                             ; * JMK01

* 15 Account Owner salesman number and name on the account (used to be Initial Salesman)
15000: ***
      SPECIAL.PERM=0
      IF USER='CYNTHIA' AND CLIENT.REC<302>='' THEN SPECIAL.PERM=1
      IF USER='LCOOK' AND CLIENT.REC<302>='' THEN SPECIAL.PERM=1
      IF USER='BRIAN' THEN SPECIAL.PERM=1
      IF USER='MARY' THEN SPECIAL.PERM=1
      IF USER='KRISTY' THEN SPECIAL.PERM=1
      IF NOT(SPECIAL.PERM) THEN
         CALL ELINE('This field cannot be changed - Viewable only')
         RETURN
      END
      MASK=ACCT.OWNER.NUMBER.NAME:STR(MASK.CHAR,30-LEN(ACCT.OWNER.NUMBER.NAME))
      HELP='Enter Established By number or name. [L]ist [X]=Back'      ; * TAG02
      CALL GEN.IN(31,18,MASK,'',Q,0,31,'','',2,31,18,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X' OR QI=''
            RETURN
         CASE QI='L'
            SALESMAN.ROLE='Initial'
            GOSUB POP.UP.LIST.OF.SALESMEN
            IF SELECTION='NO DATA' THEN GOTO 15000
            IF SELECTION='E' THEN
               DATA 15                   ; * return to internal subroutine 15000
               RETURN
            END
         CASE QI=' '
            ACCT.OWNER.CODE=''
         CASE NUM(QI)
            QI=QI'R%5'
            READ SALESMAN.REC FROM F.SLSMAN,QI THEN
               ACCT.OWNER.CODE=QI
            END ELSE
               CALL ELINE('Salesman number ':QI:' is not on file.')
               GOTO 15000
            END
         CASE ALPHA(QI)
            CALL SOUNDEX.DISPLAY(QI,'AR.SLSMAN.1000.1','AR.SLSMAN.1000.1,SDX.NAME','1',QX)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            CRT @(0,2):@(-3):CLIENT.TITLE
            CRT @(0,3):@(-3)
            CRT @(0,3):STR('=',79)
            CRT @(0,21):STR('=',79)    ; * NKH01
            CT=DCOUNT(QX<1>,@VM)
            IF CT=0 THEN                 ; * no selection chosen
               DATA 15                   ; * return to internal subroutine 15000
               RETURN
            END
            DATA 15,QX<1,1>              ; * return to subr 15000 with Salesman chosen
            RETURN
         CASE 1
            GOTO 15000
      END CASE
      * Begin GRB01
      IF CLIENT.REC<302> # ACCT.OWNER.CODE THEN
         LOG.REC=""
         LOG.REC<1>= CLIENT.ID
         LOG.REC<2>= USER
         LOG.REC<3>=CLIENT.REC<302>
         LOG.REC<4>=ACCT.OWNER.CODE
         WRITE LOG.REC ON F.LOG,CLIENT.ID:"*":DATE()

         READ OLD.SALESMAN.REC FROM F.SLSMAN,CLIENT.REC<302> THEN
            OLD.SALESMAN.NUMBER.NAME=CLIENT.REC<302>:' ':OLD.SALESMAN.REC<1>'L#25'
         END
         READ NEW.SALESMAN.REC FROM F.SLSMAN,ACCT.OWNER.CODE THEN
            NEW.SALESMAN.NUMBER.NAME=ACCT.OWNER.CODE:' ':NEW.SALESMAN.REC<1>'L#25'
         END

         CLIENT.REC<302>=ACCT.OWNER.CODE

         PDFVIN =''
         PDFVIN<1> = 'BBARKER@afs.net'
         PDFVIN<1,-1> = 'ehackney@afs.net'         ; * GRB02
         PDFVIN<4> = 'reports@afs.net'
         PDFVIN<5> = 'Client Established by salesman has changed'
         BODY = ''
         BODY<1,-1> = ' '
         BODY<1,-1> = 'The established by field for ':CLIENT.ID:SPACE(5):CLIENT.REC<2>:' has been changed'
         BODY<1,-1> = ' '
         BODY<1,-1> = USER
         BODY<1,-1> = 'has changed the values from '
         BODY<1,-1> = OLD.SALESMAN.NUMBER.NAME
         BODY<1,-1> = 'to'
         BODY<1,-1> = NEW.SALESMAN.NUMBER.NAME
         PDFVIN<6> = BODY
         PDFVOUT=''
         CALL SENDMAIL(PDFVIN,PDFVOUT)

      END
      * End GRB01
      RETURN
* Begin TAG01

* 16 Salesforce ID
16000: ***
      HELP='Enter Salesforce ID'
      MASK=CLIENT.REC<313>'L#10'
      IF MASK='' THEN MASK=MASK'L#10'
      DONE=0
      LOOP UNTIL DONE DO
         CALL GEN.IN(18,19,MASK,'',Q,0,19,'','',10,-10,19,0,QI,HELP,0,23)
         BEGIN CASE
            CASE QI=' '
               CLIENT.REC<313>=""
               CRT @(18,19):CLIENT.REC<313>'L#10'
               DONE=1
            CASE QI=''
               DONE=1
            CASE QI # ''
               CLIENT.REC<313>=QI
               CRT @(18,19):CLIENT.REC<313>'L#10'
               DONE=1
            CASE 1
         END CASE
      REPEAT
      CRT @(19,19):CLIENT.REC<313>'L#10'
      RETURN
* End TAG01

* Begin NKH01
* 17 Exclude client from being locked for editing
17000: ***
      MASK = ''                        
      IF CLIENT.REC<324>#'' THEN         
         MASK=CLIENT.REC<324>            
      END                                
      HELP='[Y or 1]=Yes [N or 0]=No, X=Back'       
      CALL GEN.IN(31,20,MASK,'',Q,0,1,'','',2,31,20,2,QI,HELP,0,23)   
      QI=OCONV(QI,'MCU')                 
      IF QI='' THEN QI=CLIENT.REC<324>   
      BEGIN CASE                         
         CASE QI='X'                     
            GOTO 16000                   
         CASE QI='N' OR QI='0'           
            QI = 'N'                     
         CASE QI='Y' OR QI='1'           
            QI = 'Y'                     
         CASE 1                          
            CALL ELINE('Invalid response.')       
            GOTO 17000                 
      END CASE                         
      CLIENT.REC<324> = QI             
      CRT @(31, 20):CLIENT.REC<324>    

      RETURN                           

* End NKH01
*
POP.UP.LIST.OF.SALESMEN:***
*
      SALESMAN.CODE=''
      SALESMAN.LIST=''
      IF SALESMAN.ROLE = 'Account Manager' THEN
         EXECUTE 'SSELECT AR.SLSMAN.1000.1 BY NAME WITH 9 "" AND 10 "" AND 11 ""'
      END ELSE
         EXECUTE 'SSELECT AR.SLSMAN.1000.1 BY NAME' CAPTURING OUTPUT
      END
      NUM.SALESMAN=@SELECTED
      IF NUM.SALESMAN < 1 THEN
         IF SALESMAN.ROLE = 'Account Manager' THEN
            CALL ELINE('No account managers on file.')
         END ELSE
            CALL ELINE('No salesmen on file.')
         END
         SELECTION='NO DATA'
         RETURN
      END
      DONE=0
      LOOP
         READNEXT SALESMAN.ID ELSE DONE=1
      UNTIL DONE=1
         READ SALESMAN.REC FROM F.SLSMAN,SALESMAN.ID THEN
            SALESMAN.LIST<-1>=SPACE(11):SALESMAN.ID'R%5':SPACE(10):SALESMAN.REC<1>'L#50'
         END
      REPEAT
      FOR X=1 TO NUM.SALESMAN
         SALESMAN.LIST<X>:=SPACE(79-LEN(SALESMAN.LIST<X>))
      NEXT X
      IF SALESMAN.ROLE = 'Account Manager' THEN
         HEADING=' Account Mgr No.          Account Manager Name'
      END ELSE
         HEADING=' Salesman Number          Salesman Name'
      END
      HEADING:=SPACE(79-LEN(HEADING))
      SELECTION=''
      IF SALESMAN.ROLE = 'Account Manager' THEN
         CRT @(0,23):'Select ':SALESMAN.ROLE:' for this account.':@(-4):
      END ELSE
         CRT @(0,23):'Select ':SALESMAN.ROLE:' Salesman for this account.':@(-4):
      END
      CALL POP.UP.LIST(SALESMAN.LIST,HEADING,7,16,SELECTION)
      IF SELECTION#'E' THEN              ; * Exited POP.UP.LIST with no choice
         IF SALESMAN.ROLE = 'Account Manager' THEN
            ACCT.MGR.CODE=TRIM(SALESMAN.LIST<SELECTION>[12,5])
         END ELSE
            SALESMAN.CODE=TRIM(SALESMAN.LIST<SELECTION>[12,5])
         END
      END
      RETURN                             ; * from POP.UP.LIST.OF.SALESMAN internal subroutine

*
EXIT.EXTERNAL.SUBROUTINE:*
*
      RETURN                             ; * from external subroutine
