***********************************************************************
* Program name : FB.2.3.NW
* Author       : UNKNOWN
* Date written : 1994
* Library      : FBBP
* COPYRIGHT (C) 2019 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED.
*
* WEEKLY INVOICE PROCESSING
*
* Last updated by afs (AFSLOGISTICS\nmeddaugh) at 08:25:34 on 08/26/2022.
*
* Start modification history
* 120424 - GRB005 - ACCU-2808 Add alert to user on length of time between processing
* 052824 - DRF045 - INT-343 Have the BTPS EDI data show as PPr not EDI
* 041524 - DRF044 - ACCU-2643 Warn the user if there are audit review
*                   bills that have not been audited
* 030524 - DRF043 - ACCU-1941 do not add divisional fee if there are no
* 021324 - DRF042 - ACCU-2571 Added count for INTL and Non INTL to calculate special charges
* 011024 - DRF041 - ACCU-2544 Change the TEM email to use the Salesman
*                   attribute 114 instead of the regional VP attibute 115
*                   to send emails out to
* 083023 - DRF040 - ACCU-2414 Add 01499 ro get regional report
* 052023 - DRF039 - ACCU-2112 Special calucation for expense distribution
* 013023 - DRF038 - ACCU-2053 Gave Leigh Johnson access for the ONCE
* 011623 - DRF037 - ACCU-2022 Remove AD and BD from the calculation for
*                   Airgas
* 092321 - DRF036 - Added logic for Alert fees and pre funding fee
* 101520 - DRF035 - Disable E-Bill validation for 01474 - Ohio Grating on Fridays.
* 021820 - DRF034 - I initialize once so that it will not be used for the next
* 020720 - DRF033 - ACCU-773 Added count for LTL and Non LTL to calculate special charges
* 092319 - GRB005  - ACCU-540 Remove PENDING EDI BILLS checks
* 091019 - DRF032 - Ticket ACCU-480 If executing this program from PCL.PROCESS
*                   exit the program otherwise go back to the client prompt
*                   at the end of the program
* 071019 - DRF031 - Ticket ACCU-397 - Added Analytics fee
* 032619 - NKH01 - ACCU-316 Modified CREATE-FILE file sizes
* 032119 - DRF030 - Ticket ACCU-325 Remove EDI FedEx Air from EDI and add to Parcel EDI for clients 05654 06006 and 06007
* 100218 - DRF029 - Ticket ACCU-122 setup regions for 01485 Feintool CIN
* 092718 - DRF028 - Ticket ACCU-97 Send consulting commission to FB.PROCESS.CALC
*                   for special logistics minimum for client 01700 Notion
* 092418 - DRF027 - Ticket ACCU-124 Removed FedEx Air (00015) from EDI LTL to EDI Parcel
* 051618 - DRF026 - Ticket 6934 - Do not charge postage on voucher
*                   account or carriers that are voucher for a client
* 110217 - DRF025 - Ticket 8013 Pay by division for client 05234
* 040717 - GRB04 - SysAid 31654 - Added 05639 to get regions
* 040317 - GRB03 - SysAid 31539 - Added 02427 to get regions
* 101016 - DRF024 - SysAid 26541 - Add log time to the PROCESS.LOG file
* 060616 - GRB02 - SysAid 25054 - Add CDUNGAN as a ONCER
* 042016 - DRF023 - SysAid 23570 - Notification of the presents of AFS Advantage EDI Invoices
* 032116 - GRB01 - SysAid 23469 - Allow Christina Dungan access to process accts
* 031416 - DRF022 - SysAid 23323 - Allow Kristy access to process accts
* 030816 - DRF021 - SysAid 23240 - Added 01931 to get regions
* 083115 - DRF020 - SysAid 19625 - Added 01746 to get regions
* 082115 - DRF019 - SysAid 19532 - Added 01755 to get regions
* 063015 - DRF018 - SysAid 18409 - Removed UPS block for 01171 La Fish Fry
* 062615 - DRF017 - SysAid 18023 - Put all of the week fees under
*                   region SNRGY and division 02020
* 051415 - DRF016 - SysAid 17388 - Removed block that will pop up when
*                   trying to process bills with overcharge but no percentage
* 032315 - JMK179 - SysAid#16152 - Account with First Time Logistics Variance Email
* 031815 - DRF015 - SysAid 16105 - Gave the same email to AMParker as
*                   SLynch receives
* 031615 - JMK178 - SysAid#15989 - Remove Charnell from reports@afs.net
* 031315 - DRF014 - Removed the overcharge check for client 05233
*                   Flame Technologies per Myra
* 022515 - JMK177 - Weekly client email
* 013015 - JMK176 - Remove McElroy Mfg (00852) from zero % parcel blocks
* 012615 - JMK175 - SysAid#14916 - Add Universe access for Kealey Barnes
* 011515 - DRF13 - SysAid 13365 - Removed divisional charges for 30036
* 010715 - DRF12 - SysAid 14548 - Gave LaJuankya access to run the ONCE
*                  option
* 120314 - DRF11 - SysAid 14019 - Gave NTAYLOR the same access as DRABORN
* 112514 - JMK174 - SysAid#13912 - Remove FedEx Parcel Overcharge Alert
* 110514 - JMK173 - ADD CANADIAN UPS EBILL FOR AIRGAS
* 090814 - DRF10 - SysAid 11961 - Gave TGREEN the same access as DRABORN
* 081814 - JMK172 - Change the file structure for new FB.UNPROCESS files
* 081514 - DRF09 - SysAid 11416 - Gave KMCQUISTON the same access as DRABORN
* 070914 - DRF08 - SysAid 10031 - 01384 Divisional billing
* 070714 - JMK171 - Remove RJaganathan and AElggren from "Missing Ebill" notification per RJaganathan
* 070314 - JMK170 - Add Aaron Elggren (AELGGREN) to "Missing EBill" notification per RJaganathan
* 070114 - DRF07 - SysAid 10481 - Gave CPEOPLES the same access as DRABORN
* 061714 - DRF06 - SysAid 10243 - Gave PMOSLEY the same access as JATTAWAY
* 042214 - JMK169 - SysAid#9435 - The Tax ID form and W9 are going out on more than the first process
* 041714 - JMK168 - Adjustments per Myra for Good Friday
* 033114 - DRF05 - SysAid# 7998 Schafer Driveline (02172) - Divisional billing
* 033114 - DRF04 - SysAid# 9201 Speedling (01436) - Divisional billing
* 031314 - JMK167 - SysAid#8933 - Crystal Ward, LaJuanyka Johnson, Kayli Lagars
* 022714 - JMK166 - Project #406 - Airgas UPS Enhancements for GL Coding and SAP
* 022714 - JMK165 - Fanimation exempt from UPS Overcharge % Block
* 012714 - JMK164 - Resolve problems with FB.3.1.NEW data statements
* 012314 - DRF03 - SysAid 8388 - Added Sarah Lynch
* 111513 - JMK163 - Disable E-Bill validation for 01918 - Forum on Fridays.
* 111413 - JMK162 - Remove divisions and regions from UNPROCESS file due to better definitions
* 110513 - JMK161 - SysAid#7566 - Adding 2 regions to client
* 100813 - JMK160 - Add sales code adjustment for TrackBak aquisition
* 091713 - JMK159 - Remove 01670 from UPS overcharge block
* 091613 - JMK158 - SysAid#7019 - Email for new clients processed
* 080113 - JMK157 - SLC/SHV Integration
* 071913 - JMK156 - SysAid#6539 - 02102 add regions
* 070813 - JMK155 - SysAid#6436 - Employee Access
* 092412 - JMK154 - Project#205 - QlikView FBStatus update file
* 090612 - JMK153 - HelpDesk#3673 - 30036 Shepherd Distribution
* 083112 - RLM002 - HelpDesk@#3782 - Replaced former employees' email addresses with current employees' email addresses
* 070912 - JMK152 - HelpDesk#3113 - Setup Pay by Div for Bag Corp 02084
* 041212 - JMK151 - Project 187 - UV Side FB Source Status Change EDI vs PPR
* 040312 - SWB01  - Proj 182 - Update new FB.TRACKING.SUMMARY file
* 032612 - JMK150 - Project 192 - UFM Logistics acquisition / add company code
* 031512 - JMK149 - HelpDesk#2154 - Pay by Division flag Client 01949
* 022812 - JMK148 - HelpDesk#1618 - Pay by division flag Client 01682
* 013112 - pkb01 - HelpDesk #1621 - give Crystal Ward ability to process on troubleshoot
* 011012 - JMK147 - HelpDesk#955 - UCC problem
* 120211 - JMK146 - EXCLUDE ALCON FROM UPS 0.00 COMMISSION BLOCK
* 111711 - JMK145 - HelpDesk#349 - Consulting Commision cap
* 110911 - JMK144 - CLIENT 00944 - Freight Payment Processing Issues
* 110411 - JMK143 - HelpDesk#293 - Problem with processing 2045 and 1897
* 110211 - JMK142 - HelpDesk#269 - 1977 Processing unapproved FB 11-1-11
* 102511 - JMK141 - HelpDesk#79 - Wabtec SOC is not showing process and handling fee from Procomm Printout.
* 101211 - RLM001 - PROJECT 80 - Retrieve Account Manager ID from file CLIENTS instead of salesman file
* 070411 - JMK140 - Wabtec SQL Push check before processing
* 051811 - JMK139 - T110525 - Voucher accounts End Date is not working
* 051211 - JMK138 - ADD APPROVAL PUSH TO WEB FOR WABTEC CLIENTS (01977, 10979)
* 050511 - JMK137 - T110447 - Myra's extension is wrong in accrual reports for Dietrich
* 050311 - JMK136 - T999999 EXCLUDE ANY FB WITH STATUS OF "P" FOR PENDING FOR WABTEC 01979
* 032911 - JMK135 - T999999 EXCLUDE ANY FB WITH STATUS OF "P" FOR PENDING FOR WABTEC 01977
* 032411 - NPR020 - T110051 - Split weekly processing fee & postage across branches w/ shipments for Thorco 01035 - Myra indicated that this
*                            should be the default way.
* 032211 - JMK134 - T999999 ADD REGION PROCESSING TO WABTEC (01977)
* 012011 - JMK133 - T999999 ADD THE 'P' OPTION FOR DUE DATE PROCESSING
* 020411 - NPR019 - T999999 Recalculate LCC and Misroutes if changes made between bill creation and processing.
* 120710 - NPR018 - T101137 Add option for creating/re-instating "Logistics Fees" from FB.LOGISTICS items keyed.
* 113010 - NPR017 - Add ability to track first processing of client through to FB.3.1.NEW etc. - Process date did not work.
* 111810 - JMK132 - SETUP DIVISION PROCESS CALCULATION FOR 01939
* 111210 - NPR016 - T101123 - Added Andrea Stephens to first process email
* 111210 - JMK131 - REMOVE ACCRUAL FILTER FOR SCOTT TRAFFIC AND ADD DUE DATE FILTER FOR ACCRUAL REPORT
* 090310 - NPR015 - Allow Process Day to be NULL until first Process Day.
* 062110 - JMK130 - ADD UNITRANS SALES CODE PROCESSING
* 050710 - JMK129 - T100432 - Rawson needs to know weekly fees per location for this week
* 050410 - JMK128 - C100389 - Freight Payment Account Changeover
* 042710 - JMK127 - C100391 - Virbac 1633 Division changes
* 042610 - JMK126 - Limit OverCharge Adjustment to total originally taken
* 040610 - JMK125 - REMOVE OLD MISROUTE EMAIL SECTION OF CODE - REPLACED BY TEM EMAIL
* 033010 - JMK124 - C100294 - Regions turned on for Rawson 01830 and split fees
* 022410 - NPR014 - Commented out coding relating to updating SQL data that wasn't happening (Call to subr. commented out)
* 020810 - JMK123 - ADD EMAIL HOLDING SWITCH FOR EMAIL SERVER ISSUES
* 020110 - JMK122 - ADD EMAILS FOR FP PROCESS ATTEMPTS WHEN WAITING ON UPS EBILL CONV AND IMPORT
* 012210 - JMK121 - ADD DIVISIONS TO THE FB.UNPROCESS FILE FOR QUICKER DIVISIONAL REPORT SELECTION
* 011910 - NPR013 - T100039 - Added logging capability for tracking and performance monitoring purposes.
* 120809 - JMK120 - C091231 - Custom EBill report for Door Control
* 110509 - JMK119 - C091185 - All Rexel Branches received LCC report for entire company
* 102709 - NPR12  - Added Peter Marquardt and Shane O'neal to email for Accounts with First Time Logistics Variance
* 102709 - JMK118 - T091283 - Vendor is receiving Excessive Freight email for Client #01162
* 100709 - JMK117 - REMOVE AR BRIDGE RECORD IF PROCESSING DOES NOT COMPLETE
* 100509 - JMK116 - C091213 - Bell Micro processing adjustment
* 100209 - JMK115 - SETUP REGION MISROUTE PROCESSING FOR GREAT PLAINS 00866
* 091409 - NPR11  - Added FB.BILLS.YTD,HISTORY file for checking Commission Caps across years.
* 090809 - JMK114 - 01706 - SETUP MISROUTE FOR REGION LOCATIONS
* 083109 - JMK113 - 01773 - Airgas Safety-UPS Processing Issues
* 082509 - NPR10  - T090944 show for the past  few (8) weeks, the bill count, freight dollars, and average amount per bill. Notify of variances.
* 081409 - JMK112 - C091043 - Processing fees ; need to split up by division for #1763 Pipeline Seal
* 080509 - JMK111 - SETUP DIVISIONAL PROCESSING FOR REGAL PLASTICS 00666
* 060109 - NPR09  - Moved wrapping up of the FB.TABLES FP_PROCESS item to a subroutine
* 060109 - NPR08  - T090673 Check Preset 'Cap' aginst YTD values for a Sales Code - (Updates added to FB.BILLS.YTD per sales codes ).
* 060109 - NPR07  - blat was expecting an attachment that no longer gets sent (Douglas battery in particular - changes for others made previously)
* 053109 - NPR06  - Added Account Manager to recipients receiving weekly email containing reports
* 052909 - JMK110 - Correct Divisional Billing for Vermeer
* 051809 - JMK109 - CORRECT THE EXCEL MACRO NAME THAT IS USED FOR THE ACR REPORT
* 050709 - JMK108 - USE TRUE COST FOR OVERCHARGE CALCULATION INSTEAD OF ACTUAL FREIGHT
* 042309 - JMK107 - C090447 - Rexel Region Reporting Changes
* 032009 - JMK106 - C090371 - Need to add explanation note for accounts on troubleshoot mode
* 032009 - NPR05  - T090286 - Added provision for calculating Managed return Amounts
* 030409 - NPR04  - T090253 - Highlight Client name based on ranking
* 022709 - NPR03  - C090285 Initialize Benchmarking related variables which were not being set under some conditions
* 021009 - JMK105 - CLEANUP EMAIL.LOG FILE WHEN RETURNING FROM FB.3.1.NEW
* 020509 - JMK104 - COMBINE ALL COS TRANSACTIONS TO THEIR RESPECTIVE INCOME CODES
* 011309 - JMK103 - Perform EMAIL.LOG housekeeping to keep file at reasonable size.
* 111708 - NPR02  - Added FB.MISROUTES.HIST file updating - See FB.MISROUTE.EMAIL.HIST file
* 102208 - JMK102 - C082385 - Add uses to first time processing notification for new clients
* 101608 - JMK101 - C082280 - Least Cost Carriers Real Time ; Add ability to determine the least cost carrier at FB Entry
* 101608 - JMK100 - C082344 - Prevent running the AR Posting Process while FP Processing is active.
* 101508 - JMK99 - DO NOT PUT REJECT BILLS INTO THE FPX FILE
* 091108 - JMK98 - Turn on FB Details Capture Switch during FP Processing starting 9/15/08
* 090308 - JMK97 - C082057 - Add ability to take account off of troubelshoot temporarily for processing ; Post to AR program
* 082608 - JMK96 - T082019 - Freight Bills processed / unprocessed / reprocessed and still in AR twice
* 081408 - JMK95 - C081954 - Remove Rcason from Client processing emails
* 072808 - JMK94 - C081821 - Add what client was processed on notice: Potential AR Balancing and FP Processing Conflict!
* 072308 - JMK93 - FedEx per bill fee for 01148
* 071508 - JMK92 - FedEx per bill fee for 01478
* 071008 - JMK91 - FedEx per bill fee for 01539, 01148, 01371, 01398
* 060508 - JMK90 - C081315 - Mixing Voucher and Freight Payment in one account
* 051908 - JMK89 - T081351 - 01635 - Manar ; weekly fee not showing on report
* 040808 - JMK88 - T080964 - SOC for divisions of Southern Marketing Affiliates
* 040708 - JMK87 - C080879 - create a .csv file for client 01640 Elliott Electric
* 010908 - JMK86 - C080107 - Send an Alert if FP Processing happens on a non-business day
* 010908 - JMK85 - C080103 - Send Alert if FP Processing starts after 6:00 pm
* 121907 - JMK84 - C070443 - Create process to update SQL data tables from Universe
* 120307 - JMK83 - C071248 - Doskocil Bills need to be selected manually prior to check printing
* 101707 - JMK82 - CAPTURE BENCHMARK TIMING FOR EVALUATION PURPOSES
* 091207 - JMK81 - C070443 - Create process to update SQL data tables from Universe
* 091107 - JMK80 - T070127 - Need ProComm Alert For Unprocessed EDI Bills ADJUSTMENT
* 082307 - JMK79 - T070319 - integrate program into 'process notification'
* 082307 - JMK78 - T070127 - Need ProComm Alert For Unprocessed EDI Bills
* 061207 - JMK77 - C200706050004 / 6/11/07 / weekly fees split by division
* 051007 - JMK76 - C200705100012  / 5/10/07 /  move carriers from sales code 22 to 21
* 050907 - JMK75 - C200704250003  /   /  Leisure Arts Divisions - pass user to FB.PROCESS.CALC
* 040507 - JMK74 - ADD OVERRIDE TO REMOVE CLIENTS FROM EBILL CHECK
* 032807 - JMK73 - C200703260002 / ASAP /  Servicing Salesman & Manager Weekly Report Emails
* 022707 - DRF02 - REQUIRE VERIFICATION FOR INACTIVE CLIENTS
* 013007 - DRF01 - CHECK TO MAKE SURE EBILL HAS COME IN
* 013007 - JMK72 - ADD DARLING 00850,01433 TO BOL UPDATE PROCESS
* 101206 - JMK71 - ADD OPTION TO PRINT EDI LTL BILLS
* 100306 - JMK70 - ADD FB SUMMARY UPDATE INITIALLY FOR ALCON
* 092206 - JMK69 - FORCE AN ANSWER TO THE TROUBLESHOOTING NOTIFICATION
* 090806 - JMK68 - ADJUST THE BLANK EMAIL NOTIFICATIONS FROM JMK62
* 082806 - JMK67 - CORRECT THE ERROR OF STORING MISROUTE EMAIL ADDRESSES ON THE CLIENT RECORD
* 080806 - JMK66 - ADD DIVISIONAL PARAMETER PASSED TO FB.PROCESS.CALC FOR GARDNER GLASS (01003)
* 080806 - JMK65 - CHANGE HOW THE AR-BRIDGE RECORD IS HANDLED DURING TROUBLESHOOTING
* 080706 - JMK64 - MAKE SURE NO BLANK EMAIL ADDRESSES ARE USED IN MISROUTE EMAILS
* 080106 - JMK63 - CHANGE HOW SERVICING SALESMAN IS HANDLED FOR MISROUTE EMAILS
* 072706 - JMK62 - ALERT IF EMAILS FOR REPORTS DID NOT GO OUT
* 072506 - JMK61 - BREAK OUT MISROUTE EMAILS TO INDIVIDUAL EMAIL ADDRESSES
* 070506 - JMK60 - ADD COMMISSION ALLOWANCE FOR 0.01 AND -0.01 FOR UPS AND FEDEX
* 061306 - JMK59 - DO NOT UPDATE FB.OPEN.BILLS OF TROUBLESHOOTING IS ON
* 050106 - JMK58 - UPDATE DUE DATE PROCESSING VALIDATION
* 032306 - JMK57 - ADD LOGISTICS CALCULATION BY CARRIER
* 032306 - JMK56 - ALLOW GREAT PLAINS TO PROCESS WITHOUT UPS RATES
* 022806 - JMK55 - SETUP FEDEX GROUND OVERCHG NOTICE IF NO RATE IS SETUP
* 022106 - JMK54 - CHANGE BOL PROCESSING FOR 1344 TO INCLUDE INBOUND SHIPMENTS
* 010406 - JMK53 - DO NOT ADD REJECTS TO PROC.DATE.XREF INDEX FILE
* 122205 - JMK52 - CHANGE DIV BY ZERO ERROR CONDITION FOR PREV BILL COUNT
* 110705 - JMK51 - ADD FLAT FEE LOGISTICS ALLOCATION PROCESSING
* 110105 - JMK50 - CHANGE BRIAN MISROUTE EMAIL LIMIT TO $500.00
* 092105 - JMK49 - PROCESSING BILL VARIANCE ALERT
* 082405 - JMK48 - SETUP UPS OVERCHG NOTICE IF NO UPS RATE IS SETUP
* 072805 - JMK47 - ADD DIETRICH TO BOL PROCESSING
* 072805 - JMK46 - CHANGE MISROUTE EMAIL RECORD STRUCTURE AND ID
* 062405 - JMK45 - COUNT REJECT EDI BILLS AS PPR BILLS
* 051905 - JMK43 - MAKE FLAT FEE ADJUSTMENTS FOR 01148
* 042005 - JMK42 - ADJUST MISROUTE EMAIL ADDRESS PROCESSING
* 040705 - JMK41 - ADD SWITCH TO TRIGGER MACRO QUOTES FOR ACCRUAL REPORT
* 032205 - JMK40 - ENHANCE DUE DATE PROCESSING FOR CLIENT/CARRIERS
* 030305 - JMK39 - CAPTURE MISROUTE LOGISTICS AMOUNTS FOR REVIEW
* 020205 - JMK38 - ADJUST ACCRUAL REPORTS FOR STC CLIENTS
* 020205 - JMK37 - ADD SWEDISH MATCH TO BOL PROCESSING
* 020105 - JMK36 - CORRECT DIVISIONAL ISSUES WITH VESUVIUS
* 012705 - JMK35 - ADD STC LOGISTICS FEE SALES CODE
* 012605 - JMK34 - ADD FEDX AIR OVERCHARGE COMMISSION
* 012005 - JMK33 - TROUBLESHOOT OR TESTING ADJUSTMENTS
* 011805 - JMK32 - ADD DIVISIONAL INFORMATION FOR VESUVIUS MINIMUMS
* 011705 - JMK31 - ADD UPS TRACKING NUMBER CALCULATION FOR VESUVIUS
* 011405 - JMK30 - CHANGE PRO-RATED PROCESS CALCULATION FOR EXPENSE
* 011105 - JMK29 - SEPARATE PRO-RATED PROCESS FEES FOR AR POSTING
* 011105 - JMK28 - EXCLUDE EDI BILLS FROM STC POSTAGE CALC
* 010405 - JMK27 - PROCESS ONLY IF LIVE BILLS EXISTS
* 121504 - JMK26 - ADD ACCRUAL REPORT OPTION TO PRE-PROCESSING
* 121404 - JMK25 - EXPAND DUE DATE EVALUATION
* 120304 - JMK24 - ADD PR (/n) BILL CALCULATION
* 111504 - JMK23 - ADD WARNING WHEN TROUBLESHOOTING EMAILS ARE ACTIVE
* 111104 - JMK22 - ADD FEDEX GROUND OVERCHARGE COMMISSION
* 111004 - JMK21 - ADD DUE DATE FILTER TO BILL SELECTION
* 110904 - JMK20 - VERIFY FB DETAIL IS CORRECT PRIOR TO CONTINUE
* 110904 - JMK19 - BREAK OUT FEDEX GROUND CHARGES LIKE UPS
* 110204 - JMK18 - ADD SCOTT TRAFFIC SALES CODE PROCESSING
* 091704 - JMK17 - ADD ORIGIN AND DESTINATION TO MR EMAILS
* 052004 - JMK16 - ADJUST PREVIOUS BILL COUNT PROCESS
* 040604 - JMK15 - CHECK FOR BILL COUNT VARIANCE
* 022704 - DRF - Change 107 Weekly Postage to 102 Weekly Proc & Hndl
* 022404 - JMK14 - ADD YTD MISROUTE SAVINGS
* 012104 - JMK13 - SET MISSING MGMT CODE TO 149
* 011204 - JMK12 - ADD MGMT SVC FEE TO PROCESS
* 111003 - JMK11 - ADD BEGIN AND END DATES TO EMAIL ID
* 082603 - JMK10 - ADD DIVISION ID TO EMAIL ARRAY
* 080803 - JMK09 - ADD DIV TO EMAIL RECORD FOR REPORTING
* 060303 - JMK08 - FILTER DETAIL EMAILS FOR INBOUND SHIPMENTS ONLY
* 052903 - JMK07 - CAPTURE VENDOR/CUSTOMER NAME FOR SUMMARIES
* 052003 - JMK06 - CHANGE EMAIL RECORD ID TO SUMMARIZE FOR DIV AND CLIENT
* 050203 - JMK05 - CHANGE EMAIL.RECORD ID FOR CORRECT PROCESSING
* 040803 - JMK04 - CREATE AND UPDATE MISROUTE EMAIL FILE
* 112202 - JMK03 - PASS END DATE TO MISROUTE LETTERS FOR DM DELAY
* 112602 - JMK02 - DISREGARD THIRD PARTY BILLING FOR LCC
* 102502 - JMK01 - ADD FB.MISROUTE.CHECK FILE WRITE FOR LCC MISROUTE PROCESSING
* 050521 - GRB01 - Add call for pre paid parcel charges.
* 010722 - NKH02 - ACCU-1564 Replaced emails to emertin with jbuxton and ktaylor
* 082622 - NKH03 - ACCU-1881 Added Christina Dungan and Patricia Hayes to emails
* 020323 - NKH04 - ACCU-2060 Removed Joe Darwin from email distribution
* 051923 - NKH05 - ACCU-1299 Removed client 1328 from ebill - Removed 06/02/23
* 052523 - NKH06 - ACCU-2201 Removed client 1700 from ebill - Removed 06/02/23


* End modification history
*
* AR-BRIDGE DOCUMENTATION
* (Items created to pass to VCI-AR package)
*  1 Amount of Freight Bills paid
*  2 Processing Fees
*  3 Service Fees
*  4 Gross Overcharges
*  5 Gross Logistics
*  6 Discount Commissions
*  7 Postage
*  8 Date
*  9 Number of Freight Bills processed
* 10 Cost of Overcharges
* 11 Cost of Logistics
* 12 Logistic Fees  (ORIGINALLY FROM CLIENT MAINT, BUT NEVER FINISHED)
* 13 Manual Logistic Fees  (CHANGED TO 12)
* 102 Weekly Processing & Handling Fee  (Use to be 107 Weekly Postage)
* 105 AFSi Fee
* 107 Weekly Postage
*
$INCLUDE PROG.ADMIN INC_OPTIONS
$INCLUDE FILE.DEFS INC_DIVISION.CODES
$INCLUDE FILE.DEFS INC_REGIONS
$INCLUDE FILE.DEFS INC_REGION.CODES  ; * JMK107
      EQU TRUE TO 1                      ; * SWB01
      EQU FALSE TO 0                     ; * SWB01

* Initialize variables
*

      CALL GET.USER.NEW(USER,CH.NUM)
      PROG.NAME='FB.2.3.NW'
      PROG.DESC='PROCESS BILLS FOR PAYMENT '
      PACK.NAME='FREIGHT BILLING'

      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'FB.2.3.NW' ; UPL.VOUT = ''      ; * NPR_UPL 04/23/2010
      UPL.VIN<3> = USER
      UPL.VIN<4> = CH.NUM
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)       ; * NPR_UPL 04/23/2010

      TESTING=0                          ; * JMK33
      ONCE=0                             ; * JMK97
      GET (ARG.,1) CMD.CLIENT ELSE CMD.CLIENT=''   ; * JMK157
      GET (ARG.,2) CMD.BDATE ELSE CMD.BDATE=''     ; * JMK157
      GET (ARG.,3) CMD.EDATE ELSE CMD.EDATE=''     ; * JMK157
      CMD.PROCESS=0                      ; * JMK157
      SLC.PROCESS=0                      ; * DRF032
      IF CMD.CLIENT[1,4]='SLC-' THEN     ; * DRF032
         SLC.PROCESS=1                   ; * DRF032
         CMD.CLIENT=CMD.CLIENT[5,5]      ; * DRF032
      END                                ; * DRF032
      IF CMD.CLIENT#'' AND CMD.BDATE#'' AND CMD.EDATE#'' THEN          ; * JMK157
         CMD.PROCESS=1                   ; * JMK157
      END                                ; * JMK157
*
      AUTORUN = 0
      END.DATE = ""
      GOSUB INIT.VARS
      GOSUB OPEN.FILES
      *
      READ DBCTRL FROM F.BCTRL, USER ELSE          ; * SWB01
         CALL ELINE('Cannot read Users information. Call I.T.')        ; * SWB01
         STOP                            ; * SWB01
      END                                ; * SWB01
      USER.TYPE = DBCTRL<14>             ; * SWB01
      IF USER.TYPE # 'A' THEN USER.TYPE = ''       ; * SWB01
      USER.DPT = DBCTRL<15>              ; * SWB01
      IF OP.FLG = "Y" THEN
* Restrict the other MoFo's
*
      END ELSE
         CALL FB.PRINT.CENT(1,80,10,USER:' DOES NOT HAVE ACCESS TO PROCESS!')
         CALL FB.PRINT.CENT(1,80,12,'Restricted Access Application')
         CALL ELINE('Access Denied! - See Help Desk')
         STOP
      END

      READ AR.POST.REC FROM F.TABLES,'AR_POSTING' THEN       ; * JMK100
         CALL ELINE('AR is currently being posted by ':AR.POST.REC<1>:'. Please try again later.')   ; * JMK100
         STOP                            ; * JMK100
      END                                ; * JMK100

      CLEARFILE F.WORK
      AR.BRIDGE.FLAG=0
      BRIDGE.ID=''
      CLIENT = ''                        ; * NPR09
      ONCE = 0                           ; * DRF034
      USER.INPUT.FOR.ONCE = ''
      GOSUB BUILD.TRANS.ARRAY

*********************************************************
10:   * Display screen heading
***********************************************************
      IF CLIENT # "" THEN
         GOSUB UPDATE.PROGRESS.REC
      END
      CALL AFS.SCR.HEAD('','','',PROG.NAME,PROG.DESC,PACK.NAME,"AFS, LLC",TIME.DATE,1)
      LOCK 1 ELSE
         CALL ELINE('Process is locked by another terminal - Try Again in 15 minutes')
         STOP
      END
      UNLOCK 1
      IF CMD.CLIENT#'' AND CMD.PROCESS THEN        ; * JMK157
         QI=CMD.CLIENT 'R%5'             ; * JMK157
         CLIENT=CMD.CLIENT 'R%5'         ; * JMK157
         CRT @(0,3):'Enter Client Number     ':CLIENT        ; * JMK157
         GO 22                           ; * JMK157
      END                                ; * JMK157
***************************************************************
20:
****************************************************************
      IF AUTORUN THEN GO 21
      HELP='Enter number of client to process.'
      FPEND.STMT='SSELECT FP.PENDING BY CLIENT.NAME'
      EXECUTE FPEND.STMT RTNLIST PEND.LIST CAPTURING PEND.RESULTS
      PEND.TCNT=@SELECTED
      IF PEND.TCNT>0 THEN
         HELP='Enter number of client to process. [N]ext pending.'
      END
      IF AR.BRIDGE.FLAG THEN
         READ TBR.INFO FROM F.BRIDGE,CLIENT THEN
            IF TBR.INFO=BRIDGE.INFO THEN
               DELETE F.BRIDGE,CLIENT
               AR.BRIDGE.FLAG=0
            END
         END
      END
      CALL GEN.IN(0,3,'Enter Client Number  or EX   #####','',CLIENT,1,5,'R','0',1,-5,3,0,QI,HELP,0,23)
      IF QI='EX' OR QI='X' THEN GOTO 9999
      IF QI='' THEN GOTO 9999
      IF QI = "AUTO" OR QI = "auto" THEN AUTORUN = 1

      IF CLIENT='0000N' OR CLIENT='0000n' OR AUTORUN THEN

21:      READNEXT PEND.ID FROM PEND.LIST THEN
            PROCESS.TIME = TIME()
*DF            IF PROCESS.TIME GT "61200" THEN
*DF               CALL ELINE('PROCESSING NOT ALLOWED AFTER 5PM')
*DF               STOP
*DF            END



            READU TEST FROM F.FPPEND,PEND.ID THEN
               CLIENT=PEND.ID
               CRT @(0,3):'Enter Client Number          ':CLIENT
               DELETE F.FPPEND,PEND.ID
               RELEASE F.FPPEND,PEND.ID
            END ELSE
               RELEASE F.FPPEND,PEND.ID
               GO 10
               ***     GO 20   ;* GO 10 ?   STOP
            END
         END ELSE
            STOP
            GO 10
            ***       GO 20 ;* GO 10 ?
         END
      END


22:   *
      READ CLIENT.REC FROM F.CLIENTS,CLIENT ELSE
         CALL ELINE('Client ':CLIENT:' not on file!')
         GO 10
         ***  GOTO 20 ;* GO 10 ?
      END
      READ PPP.CLIENT.REC FROM F.PPP.CLIENT,CLIENT ELSE PPP.CLIENT.REC=''        ; * DRF036
      GOSUB INIT.VARS
      SCT.FLG=0                          ; * JMK18
      IF CLIENT.REC<92>='00002' THEN SCT.FLG=1     ; * JMK18
      UNI.FLG=0                          ; * JMK130
      IF CLIENT.REC<92>='00003' THEN UNI.FLG=1     ; * JMK130
      UFM.FLG=0                          ; * JMK150
      IF CLIENT.REC<92>='00004' THEN UFM.FLG=1     ; * JMK150
      LGI.FLG=0                          ; * JMK157
      IF CLIENT.REC<92>='00005' THEN LGI.FLG=1     ; * JMK157
      TBS.FLG=0                          ; * JMK158
      IF CLIENT.REC<92>='00009' THEN TBS.FLG=1     ; * JMK158
      DUE.DT.FLG=CLIENT.REC<186>         ; * JMK21
      IF CLIENT='05813' THEN DUE.DT.FLG=''
      IF DUE.DT.FLG='' THEN DUE.DT.FLG='N'
      TESTING=0                          ; * JMK33

      ACCT.MGR = ""                      ; * NPR06
      ACCT.MGR.EMAIL = ""                ; * NPR06
*DF      SERV.SLSMAN=CLIENT.REC<115>     ; * DRF041
      SERV.SLSMAN=CLIENT.REC<114>        ; * DRF041

      READ SERV.SLSMAN.REC FROM F.AR.SLSMAN,SERV.SLSMAN ELSE SERV.SLSMAN.REC = ""          ; * JMK61
      SERV.SLSMAN.NAME=SERV.SLSMAN.REC<1>          ; * JMK61
      SERV.SLSMAN.EMAIL=SERV.SLSMAN.REC<8>         ; * JMK61
      SERV.SLSMAN.MGR.EMAIL=SERV.SLSMAN.REC<9>     ; * JMK73
      SERV.SLSMAN.MGR.EMAIL=''           ; * DRF041
      IF SERV.SLSMAN.REC="" THEN         ; * JMK61
         SERV.SLSMAN.NAME = SERV.SLSMAN:" is not on file "   ; * JMK61
         SERV.SLSMAN.EMAIL = "NONE"      ; * JMK61
      END                                ; * JMK61

      ACCT.MGR = CLIENT.REC<264>         ; * NPR06      ; * RLM001
      ACCT.MGR.REC=''                    ; * JMK169

      IF ACCT.MGR # '' THEN
         READ ACCT.MGR.REC FROM F.AR.SLSMAN,ACCT.MGR THEN
            ACCT.MGR.NAME = ACCT.MGR.REC<1>        ; * JMK169
            ACCT.MGR.EMAIL = ACCT.MGR.REC<8>
         END
      END ELSE
         ACCT.MGR.EMAIL = ""
         ACCT.MGR.NAME = ''              ; * JMK169
      END

      IF CLIENT.REC<146>#'NW' THEN
         CALL ELINE('This client ':CLIENT:' is not a new way client')
         GO 10
         **   GOTO 20 ;* GO 10 ?
      END

      DAY.TO.PROCESS = CLIENT.REC<151>   ; * NPR015
      IF DAY.TO.PROCESS = '' OR DAY.TO.PROCESS = '0' OR DAY.TO.PROCESS = '6' THEN          ; * NPR015                                                    ;* NPR015
         CALL ELINE('Client does not have a Valid Process Day. Please enter one.')         ; * NPR015
                                         ; * NPR015
      END
                                         ; * NPR015
      READ NO.PROCESS FROM F.TABLES,'NO-PROCESS*':CLIENT THEN
         IF NO.PROCESS<2>='NEW' THEN
            FP.REC = 1
            WRITE FP.REC ON F.TABLES, "FIRST_PROCESS*":CLIENT          ; * To be used in FB.3.1.NEW to indicate first processing of client ;* NPR017

            FP.USER=0                    ; * JMK169

            IF USER='LCOOK' THEN FP.USER=1         ; * JMK169
            IF USER='MARY' THEN FP.USER=1          ; * JMK169
            IF USER='CDUNGAN' THEN FP.USER=1       ; *
            IF USER='KJACKSON' THEN FP.USER=1      ; *
            IF USER='WPARDUE' THEN FP.USER=1       ; *
            IF FP.USER THEN              ; * JMK169
               DELETE F.TABLES,'NO-PROCESS*':CLIENT
               SUBJ='New Account Processed'
               TEXT=USER:' has processed a NEW account for the 1st time!'
               TEXT<1,-1>='Client: ':CLIENT:'-':CLIENT.REC<2>

               IF SERV.SLSMAN.REC#'' THEN          ; * JMK169
                  TEXT<1,-1>='Partnership Manager - ':SERV.SLSMAN:'-':SERV.SLSMAN.NAME     ; * JMK169
               END                       ; * JMK169
               IF ACCT.MGR.REC#'' THEN   ; * JMK169
                  TEXT<1,-1>='Account Manager - ':ACCT.MGR:'-':ACCT.MGR.NAME     ; * JMK169
               END                       ; * JMK169

               TEXT<1,-1>='Accounting must See these reports'          ; * JMK169
               TEXT<1,-1>='Make SURE that the Account Manager goes over the reports with the client!'          ; * JMK169
            END ELSE
               SUBJ='New Account Process Attempt'
               TEXT=USER:' attempted to process the new account ':CLIENT:'-':CLIENT.REC<2>
               TEXT<1,-1>='Accounting must See these reports'          ; * JMK169
            END
            MVIN=''

            MVIN<1,-1>='DRaborn@afs.net'           ; * JMK158
            MVIN<1,-1>='NTaylor@afs.net'           ; * DRF11
            MVIN<1,-1>='SLynch@afs.net'  ; * DRF03
            MVIN<1,-1>='KBarnes@afs.net'           ; * JMK175
            MVIN<1,-1>='AMParker@afs.net'          ; * DRF015
            IF SERV.SLSMAN.EMAIL#'NONE' THEN       ; * JMK169
               MVIN<2,-1>=SERV.SLSMAN.EMAIL        ; * JMK169
            END                          ; * JMK169
            IF ACCT.MGR.EMAIL#'' THEN    ; * JMK169
               MVIN<2,-1>=ACCT.MGR.EMAIL           ; * JMK169
            END                          ; * JMK169

            MVIN<3,-1>='DFriend@afs.net'
            MVIN<4>='Reports@AFS.net'
            MVIN<5>=SUBJ
            MVIN<6>=TEXT
            CALL SENDMAIL(MVIN,MVOUT)
            IF CMD.PROCESS=0 THEN        ; * JMK153
               CALL ELINE(NO.PROCESS<1>)
            END                          ; * JMK153
         END ELSE
            BEGIN CASE                   ; * JMK122
               CASE NO.PROCESS<1>='PUSH TO SQL'    ; * JMK140
VERIFY.SQL.PUSH:  ***                     ; * JMK140
                  CRT @(0,20):"Client is waiting on FB push to SQL. [X] [EX] [YES]"        ; * JMK140
                  HELP="YES=Yes, X=Exit, EX=Exit."           ; * JMK140
                  CALL GEN.IN(0,22,'Enter selection please. ------------','',Q,0,12,'','',0,-12,22,1,QI,HELP,0,23)       ; * JMK140
                  QI=OCONV(QI,'MCU')     ; * JMK140
                  BEGIN CASE             ; * JMK140
                     CASE QI='X'         ; * JMK140
                        CRT @(0,19):@(-3):         ; * JMK140
                        GOSUB UPDATE.PROGRESS.REC  ; * JMK140
                        GOTO 10          ; * JMK140
                     CASE QI='EX'        ; * JMK140
                        STOP             ; * JMK140
                     CASE QI='YES'       ; * JMK140

                     CASE 1              ; * JMK140
                        CALL ELINE('Invalid entry. Must be [X], [EX], or [YES].')          ; * JMK140
                        GOTO VERIFY.SQL.PUSH       ; * JMK140
                  END CASE               ; * JMK140
                  CRT @(0,22)            ; * JMK140
               CASE NO.PROCESS<1>[1,19]='UPS Ebill Conv Proc'          ; * JMK122
*                  IF CLIENT # '01328' AND CLIENT # "01700" THEN           ; * NKH05   NKH06
                  BLOCK.SUBJ='Freight Payment Process Attempt'         ; * JMK122
                  BLOCK.TEXT=USER:' attempted to process the account ':CLIENT:'-':CLIENT.REC<2>      ; * JMK122
                  BLOCK.TEXT<1,-1>='Please expedite handling of UPS Ebills ':CHANGE(NO.PROCESS<2>,@VM,', ')    ; * JMK122
                  NO.PROCESS<3>=USER     ; * JMK122
                  WRITE NO.PROCESS ON F.TABLES,'NO-PROCESS*':CLIENT    ; * JMK122
*                  END ELSE                      ; * NKH05
*                     BLOCK.SUBJ=''              ; * NKH05
*                     BLOCK.TEST=''              ; * NKH05
*                  END                           ; * NKH05
               CASE NO.PROCESS<1>[1,21]='UPS Ebill Import Proc'        ; * JMK122
*                  IF CLIENT # '01328' AND CLIENT # "01700" THEN          ; * NKH05  NKH06
                  BLOCK.SUBJ='Freight Payment Process Attempt'         ; * JMK122
                  BLOCK.TEXT=USER:' attempted to process the account ':CLIENT:'-':CLIENT.REC<2>      ; * JMK122
                  BLOCK.TEXT<1,-1>='Please expedite handling of UPS Ebills ':CHANGE(NO.PROCESS<2>,@VM,', ')    ; * JMK122
                  NO.PROCESS<3>=USER     ; * JMK122
                  WRITE NO.PROCESS ON F.TABLES,'NO-PROCESS*':CLIENT    ; * JMK122
*                  END ELSE                      ; * NKH05
*                     BLOCK.SUBJ=''              ; * NKH05
*                     BLOCK.TEST=''              ; * NKH05
*                  END                           ; * NKH05
               CASE 1                    ; * JMK122
                  BLOCK.SUBJ=''          ; * JMK122
                  BLOCK.TEST=''          ; * JMK122
            END CASE                     ; * JMK122
            IF BLOCK.SUBJ#'' THEN        ; * JMK122
               MVIN=''                   ; * JMK122
               MVIN<1,-1>='nhennick@afs.net'       ; * JMK122
*               MVIN<1,-1>='emertin@afs.net'        ; * GRB01  NKH02
               MVIN<1,-1>='swalker@afs.net'        ; * NKH02   NKH07
               MVIN<1,-1>='ktaylor@afs.net'        ; * NKH02
*               MVIN<1,-1>='EMertin@afs.net'       ; * NKH02
               MVIN<2,-1>='DFriend@afs.net'        ; * JMK122
               MVIN<2,-1>='MMckay@afs.net'         ; * JMK122
               MVIN<2,-1>='LCook@afs.net'
*df               MVIN<2,-1>='CDungan@afs.net'        ; * NKH03
               MVIN<2,-1>='phayes@afs.net'         ; * NKH03
               MVIN<4> = 'Reports@AFS.net'
               MVIN<5>=BLOCK.SUBJ        ; * JMK122
               MVIN<6>=BLOCK.TEXT        ; * JMK122
               MVIN<8>='PRIO'
               CALL SENDMAIL(MVIN,MVOUT)           ; * JMK122
            END                          ; * JMK122
            CALL ELINE(NO.PROCESS<1>)
            GOSUB UPDATE.PROGRESS.REC    ; * NPR09
            GOTO 10
**********************************************************************
         END
      END

      READ NO.PROCESS FROM F.TABLES,'NO-PROCESS*FEDEX.GROUND' THEN
         IF MOD(DATE(),7) >4 THEN
            FEDEX.BLOCK=0                ; * JMK148
            IF CLIENT='00344' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='00614' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='00661' THEN FEDEX.BLOCK=1
            IF CLIENT='00724' THEN FEDEX.BLOCK=1
            IF CLIENT='00760' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='00761' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='00839' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='00841' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='00857' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='00850' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='00861' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='00866' THEN FEDEX.BLOCK=1
            IF CLIENT='00883' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='00888' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='00889' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='00895' THEN FEDEX.BLOCK=1
            IF CLIENT='00902' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='00913' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='00917' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='00918' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='00919' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='00928' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='00929' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='00933' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='00935' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='00938' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='00944' THEN FEDEX.BLOCK=1
            IF CLIENT='00946' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='00947' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='00978' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='00981' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='00982' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='00984' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='00986' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01015' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01020' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01024' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01026' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01028' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01029' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01032' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01038' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01043' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01044' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01045' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01057' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01058' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01066' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01056' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01063' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01085' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01087' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01088' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01095' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01102' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01114' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01127' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01132' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01148' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01152' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01161' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01164' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01166' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01179' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01182' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01190' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01223' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01241' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01251' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01255' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01256' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01258' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01264' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01270' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01271' THEN FEDEX.BLOCK=1
            IF CLIENT='01274' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01283' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01292' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01309' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01310' THEN FEDEX.BLOCK=1
            IF CLIENT='01326' THEN FEDEX.BLOCK=1
            IF CLIENT='01349' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01350' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01351' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01352' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01357' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01361' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01371' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01380' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01381' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01384' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01386' THEN FEDEX.BLOCK=1
            IF CLIENT='01394' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01385' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01392' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01396' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01398' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01401' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01408' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01433' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01436' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01441' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01442' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01443' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01448' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01456' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01458' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01472' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01474' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01475' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01478' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01479' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01480' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01481' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01485' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01487' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01491' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01493' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01505' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01511' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01515' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01522' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01525' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01529' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01532' THEN FEDEX.BLOCK=1
            IF CLIENT='01533' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01535' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01539' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01545' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01551' THEN FEDEX.BLOCK=1
            IF CLIENT='01554' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01567' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01574' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01576' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01577' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01581' THEN FEDEX.BLCOK=1
            IF CLIENT='01582' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01584' THEN FEDEX.BLCOK=1
            IF CLIENT='01600' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01610' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01614' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01627' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01628' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01633' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01638' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01642' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01644' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01651' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01656' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01661' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01671' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01677' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01697' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01700' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01703' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01704' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01706' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01719' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01730' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01733' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01747' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01753' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01759' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01766' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01777' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01782' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01785' THEN FEDEX.BLOCK=1
            IF CLIENT='01789' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01794' THEN FEDEX.BLOCK=1
            IF CLIENT='01823' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01858' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01891' THEN FEDEX.BLOCK=1
            IF CLIENT='01897' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01902' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01918' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01920' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01930' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01939' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01943' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01958' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01969' THEN FEDEX.BLOCK=1
            IF CLIENT='01971' THEN FEDEX.BLOCK=1
            IF CLIENT='01977' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='01985' THEN FEDEX.BLOCK=1
            IF CLIENT='02013' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='02016' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='02031' THEN FEDEX.BLOCK=1
            IF CLIENT='02038' THEN FEDEX.BLOCK=1
            IF CLIENT='02040' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='02053' THEN FEDEX.BLOCK=1
            IF CLIENT='02054' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='02071' THEN FEDEX.BLOCK=1
            IF CLIENT='02072' THEN FEDEX.BLOCK=1
            IF CLIENT='02095' THEN FEDEX.BLOCK=1
            IF CLIENT='02101' THEN FEDEX.BLOCK=1
            IF CLIENT='02112' THEN FEDEX.BLOCK=1
            IF CLIENT='02113' THEN FEDEX.BLOCK=1
            IF CLIENT='02116' THEN FEDEX.BLOCK=1
            IF CLIENT='02132' THEN FEDEX.BLOCK=1
            IF CLIENT='02138' THEN FEDEX.BLOCK=1
            IF CLIENT='02148' THEN FEDEX.BLOCK=1
            IF CLIENT='02150' THEN FEDEX.BLOCK=1
            IF CLIENT='02192' THEN FEDEX.BLOCK=1
            IF CLIENT='02193' THEN FEDEX.BLOCK=1
            IF CLIENT='02208' THEN FEDEX.BLOCK=1
            IF CLIENT='02216' THEN FEDEX.BLOCK=1
            IF CLIENT='02388' THEN FEDEX.BLOCK=1
            IF CLIENT='05049' THEN FEDEX.BLOCK=1
            IF CLIENT='05238' THEN FEDEX.BLOCK=1
            IF CLIENT='05359' THEN FEDEX.BLOCK=1
            IF CLIENT='10225' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='10272' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='10298' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='10356' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='30007' THEN FEDEX.BLOCK=1
            IF CLIENT='30028' THEN FEDEX.BLOCK=1   ; * JMK148
            IF CLIENT='30041' THEN FEDEX.BLOCK=1   ; * JMK148

            IF FEDEX.BLOCK THEN          ; * JMK148
               CALL ELINE(NO.PROCESS<1>)
               GOSUB UPDATE.PROGRESS.REC           ; * NPR09
*****************************************************************
               GO 10
               ***      STOP
            END
         END
      END

      ORIG.CLIENT.REC=CLIENT.REC

      HIN = CLIENT.REC<240> ; HOUT = ""  ; * NPR04  Highlight based on ranking
      CALL CLIENT.HL(HIN,HOUT) ; HLB = HOUT<1,1> ; HLA = HOUT<1,2>     ; * NPR04

      CRT @(35,3):HLB:CLIENT.REC<2>:HLA:@(-4):     ; * NPR04
      IF CLIENT.REC<82>=DATE() THEN
         CALL ELINE('This Client has already been processed for today.')
         GOSUB UPDATE.PROGRESS.REC       ; * NPR09

********************************************************************************
         GOTO 10
*DF          GOTO 9999
      END

      IF CLIENT.REC<30>='I' OR CLIENT.REC<30>='O' THEN

******************************************************************
VERIFY.CLIENT:**** Verify selection criteria is correct.
******************************************************************
         CRT @(0,20):"Client is not active. Type [I-UNDERSTAND] to process this inactive client"
         HELP="X=Change. EX=Exit. [I-UNDERSTAND]=Continue."
         CALL GEN.IN(0,22,'Enter selection please. ------------','',Q,0,12,'','',0,-12,22,1,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI='X'
               CRT @(0,19):@(-3):
               GOSUB UPDATE.PROGRESS.REC           ; * NPR09
               GOTO 10
            CASE QI='EX'
               STOP
            CASE QI='I-UNDERSTAND'
               NULL
            CASE 1
               CALL ELINE('Invalid entry. Must be [X], [EX], or [I-UNDERSTAND].')
               GOTO VERIFY.CLIENT
         END CASE
         CRT @(0,22)
      END

      INV.LVL=''

      IF CLIENT.REC<231>='Y' THEN INV.LVL='D'      ; * JMK88

      DIVISION=CLIENT.REC<12>
      EXPENSE=CLIENT.REC<13>
      VARIANCE=CLIENT.REC<7>
      LOGISTICS = CLIENT.REC<93>

      CLIENT.BANK=CLIENT.REC<81>         ; * JMK90
      CLIENT.REC<37>=0
      VEND.FLAG = CLIENT.REC<20>
      CUST.FLAG = CLIENT.REC<21>
      MR.LTRS = CLIENT.REC<139>
      MR.EMAIL = CLIENT.REC<171>         ; * JMK04
      CL.PRE.DATE = CLIENT.REC<27>
      READ BANK.CTRL.REC FROM F.BANK.CTRL,CLIENT ELSE BANK.CTRL.REC=''           ; * JMK90
      IF CLIENT.REC<179>#'' THEN         ; * JMK23
TROUBLESHOOT.PROMPT:                     ; * JMK69

         ONCE=0                          ; * DRF034
         HELP=CLIENT.REC<242>:" X=Back, EX=Stop [YES]=Continue."       ; * JMK69 ; * JMK106

         CALL GEN.IN(0,22,'Troubleshooting is currently active. Continue. ----','',Q,0,4,'','',0,-4,22,1,QI,HELP,0,23)   ; * JMK69 ; * JMK97 ; * JMK106
         QI=OCONV(QI,'MCU')              ; * JMK69
         USER.INPUT.FOR.ONCE=QI
         BEGIN CASE                      ; * JMK69
            CASE QI='X' OR QI=''         ; * JMK69
               GOSUB UPDATE.PROGRESS.REC           ; * NPR09
               GOTO 10                   ; * JMK69
               ******************************************************************
            CASE QI='EX'                 ; * JMK69
               STOP                      ; * JMK69
               *****************************************************************
            CASE QI='YES'                ; * JMK69
               TESTING=1                 ; * JMK33
            CASE QI='ONCE' AND USER='MARY'         ; * JMK97
               ONCE=1                    ; * JMK97
            CASE QI='ONCE' AND USER='GBINO'        ; * SWB01
               ONCE=1                    ; * SWB01
            CASE QI='ONCE' AND USER='CDUNGAN'      ; * GRB02
               ONCE=1                    ; * GRB02
            CASE QI='ONCE' AND USER='WPARDUE'
               ONCE=1
            CASE QI='ONCE' AND USER='KJACKSON'
               ONCE=1
            CASE QI='ONCE' AND USER='LCOOK'        ; * DRF12
               ONCE=1                    ; * DRF12
            CASE QI='ONCE' AND USER='LNJOHNSON'    ; * DRF38
               ONCE=1                    ; * DRF38
            CASE QI='ONCE' AND USER='DAVID'        ; * DRF12
               ONCE=1                    ; * DRF12
            CASE QI='ONCE' AND USER='CMCKEEVER'
               ONCE=1
            CASE QI='ONCE' AND USER='RSIMMONS'
               ONCE=1
            CASE QI='ONCE' AND USER='PHAYES'
               ONCE=1
            CASE QI='ONCE' AND USER='NMEDDAUGH'
               ONCE=1
            CASE 1                       ; * JMK69
               CALL ELINE('Invalid entry. Must be [X], [EX], or [YES].')         ; * JMK69
               GOTO TROUBLESHOOT.PROMPT  ; * JMK69
         END CASE                        ; * JMK69
      END                                ; * JMK23

      IF CLIENT.BANK='' THEN             ; * JMK90
         CALL ELINE("Cannot process, no bank code has been set.")
****************************************************************************************8
         GO 10
         ****  GOTO 9999
      END
*
* Check the A/R Bridge - If exists, "poke the user in the eye" and
* request client again.
*
      *****   OPEN '','AR-BRIDGE' TO F.BRIDGE THEN  ; * JMK97
      BRIDGE.ID=CLIENT                   ; * JMK97
      IF TESTING THEN BRIDGE.ID=CLIENT:'-TEST'     ; * JMK97

      READ DUMMY FROM F.BRIDGE,BRIDGE.ID ELSE DUMMY=''       ; * JMK97 ; * JMK134
      IF DCOUNT(DUMMY,@AM)='17' THEN     ; * JMK134
         IF DUMMY<1>='' AND DUMMY<15>=USER AND DUMMY<16>=DATE() THEN   ; * JMK134
            DUMMY=''                     ; * JMK134
         END                             ; * JMK134
      END                                ; * JMK134
      IF DUMMY#'' THEN                   ; * JMK134
         IF FIELD(BRIDGE.ID,'-',2)='TEST' THEN     ; * JMK97
            CALL ELINE('Error! Must unprocess first while in testing or troubleshooting mode!')      ; * JMK97
         END ELSE                        ; * JMK97
            CALL ELINE('Error! Can not process until A/R from client ':CLIENT:' is posted!')         ; * JMK97
         END                             ; * JMK97
         GOSUB UPDATE.PROGRESS.REC       ; * NPR09
         GOTO 10                         ; * JMK97
         *****************************************************************
      END ELSE                           ; * JMK97
         BRIDGE.INFO=''                  ; * JMK97
         BRIDGE.INFO<15>=USER            ; * JMK97
         BRIDGE.INFO<16>=DATE()          ; * JMK97
         BRIDGE.INFO<17>=TIME()          ; * JMK97
*
* This information is be put after the question about the troubleshooting
* question so if they X or EX this record is not sit out there. DRF 12/12/06
*
         AR.BRIDGE.FLAG=1                ; * JMK97
      END                                ; * JMK97
      *****    END                                ; * JMK97
      IF CLIENT[1,2] # '99' THEN
         WRITE BRIDGE.INFO ON F.BRIDGE,BRIDGE.ID   ; * JMK65
      END
      EBILL.CLIENT=0                     ; * DRF01
      READ DUMMY FROM F.UPS.BM,CLIENT THEN         ; * DRF01
         EBILL.CLIENT=1                  ; * DRF01
      END                                ; * DRF01
      READ DUMMY FROM F.UPS.BM,CLIENT:'-I' THEN    ; * DRF01
         EBILL.CLIENT=1                  ; * DRF01
      END                                ; * DRF01
      READ DUMMY FROM F.UPS.BM,CLIENT:'-O' THEN    ; * DRF01
         EBILL.CLIENT=1                  ; * DRF01
      END                                ; * DRF01
      IF CLIENT=00972 THEN EBILL.CLIENT=0
      IF CLIENT=01071 THEN EBILL.CLIENT=0          ; * JMK74
      IF CLIENT=01474 AND OCONV(DATE(),'DW') > 2 THEN EBILL.CLIENT=0   ; * DRF035
      IF CLIENT=01448 THEN EBILL.CLIENT=0
      IF CLIENT=01653 THEN EBILL.CLIENT=0
      IF CLIENT=01918 AND OCONV(DATE(),'DW') > 3 THEN EBILL.CLIENT=0   ; * JMK163
      IF CLIENT=05032 THEN EBILL.CLIENT=0          ; * JMK166
      IF CLIENT=05034 THEN EBILL.CLIENT=0          ; * JMK166
      IF CLIENT=05035 THEN EBILL.CLIENT=0          ; * JMK166
      IF CLIENT=05036 THEN EBILL.CLIENT=0          ; * JMK166
      IF CLIENT=05037 THEN EBILL.CLIENT=0          ; * JMK166
      IF CLIENT=05038 THEN EBILL.CLIENT=0          ; * JMK166
      IF CLIENT=05039 THEN EBILL.CLIENT=0          ; * JMK166
      IF CLIENT=05040 THEN EBILL.CLIENT=0          ; * JMK166
      IF CLIENT=05042 THEN EBILL.CLIENT=0          ; * JMK166
      IF CLIENT=05043 THEN EBILL.CLIENT=0          ; * JMK166
      IF CLIENT=05044 THEN EBILL.CLIENT=0          ; * JMK166
      IF CLIENT=05046 THEN EBILL.CLIENT=0          ; * JMK166
      IF CLIENT=05049 THEN EBILL.CLIENT=0          ; * JMK166
      IF CLIENT=05549 THEN EBILL.CLIENT=0          ; * DRFZZ
*      IF CLIENT=01328 THEN EBILL.CLIENT=0          ; * NKH05
*      IF CLIENT=01700 THEN EBILL.CLIENT=0          ; * NKH06

      IF CLIENT.REC<92>='00005' THEN EBILL.CLIENT=0          ; * JMK157
      IF CMD.PROCESS=1 THEN EBILL.CLIENT=0         ; * JMK157
      IF EBILL.CLIENT THEN               ; * DRF01
         EBILL.DATE=DATE()-(MOD(DATE(),7)+1)       ; * DRF01
         EBILL.DATE=OCONV(EBILL.DATE,'D2/')        ; * DRF01
         EBILL.DATE=EBILL.DATE[1,2]:EBILL.DATE[4,2]:EBILL.DATE[7,2]    ; * DRF01

         STMT = 'SSELECT FB.BILLS,':CLIENT:' BY 30'          ; * DRF01
         STMT:= ' WITH VERSION = "0" AND WITH 39 = "O"'      ; * DRF01
         STMT:=' AND WITH CARRIER# = "00041""12062"'         ; * DRF01 ; * JMK173
         STMT:=' AND WITH @ID = "[':EBILL.DATE:'-]" '        ; * DRF01
         STMT:= ' SAMPLE 1'              ; * DRF01
         EXECUTE STMT CAPTURING OUTPUT   ; * DRF01
         IF @SELECTED < 1 THEN           ; * DRF01
            BLOCK.SUBJ='Freight Payment Process Attempt with missing Ebill'      ; * JMK122
            BLOCK.TEXT=USER:' attempted to process the account ':CLIENT:'-':CLIENT.REC<2>  ; * JMK122
            BLOCK.TEXT<1,-1>='The Ebill Is Not On File For This Week'  ; * JMK122
            MVIN=''                      ; * JMK122
*            MVIN<1,-1>='emertin@afs.net'           ; * GRB01  NKH02
            MVIN<1,-1>='swalker@afs.net'           ; * NKH02   NKH07
            MVIN<1,-1>='ktaylor@afs.net'           ; * NKH02
            MVIN<2,-1>='DFriend@afs.net'           ; * JMK122
            MVIN<2,-1>='MMckay@afs.net'  ; * JMK122
            MVIN<2,-1>='LCook@afs.net'
*df            MVIN<2,-1>='CDungan@afs.net'
            MVIN<2,-1>='phayes@afs.net'  ; * NKH03
            MVIN<2,-1>='NHennick@afs.net'
*DF            MVIN<2,-1>='KJackson@afs.net'
            MVIN<2,-1> = ''

            MVIN<4> = 'Reports@AFS.net'
            MVIN<5>=BLOCK.SUBJ           ; * JMK122
            MVIN<6>=BLOCK.TEXT           ; * JMK122
            MVIN<8>='PRIO'
            CALL SENDMAIL(MVIN,MVOUT)    ; * JMK122
            CALL ELINE('The Ebill Is Not On File For This Week')       ; * DRF01
            GOSUB UPDATE.PROGRESS.REC    ; * NPR09
            GOTO 10                      ; * DRF01
            ************************************************************************8
         END                             ; * DRF01
         LOOP                            ; * DRF01
            READNEXT ID ELSE ID=""       ; * DRF01
         UNTIL ID="" DO                  ; * DRF01
         REPEAT                          ; * DRF01
      END                                ; * DRF01
      MAIL.CONS.CLIENT=0
      READ DUMMY FROM F.MAIL.CONS.BM,CLIENT THEN
         MAIL.CONS.CLIENT=1
      END
      IF MAIL.CONS.CLIENT THEN           ; * DRF01
         STMT = 'SSELECT FB.BILLS,':CLIENT:' BY 30'          ; * DRF01
         STMT:= ' WITH VERSION = "0" AND WITH 39 = "O"'      ; * DRF01
         STMT:=' AND WITH CARRIER# = "24446"'      ; * DRF01
         STMT:= ' SAMPLE 1'              ; * DRF01
         EXECUTE STMT CAPTURING OUTPUT   ; * DRF01
         IF @SELECTED < 1 THEN           ; * DRF01
            BLOCK.SUBJ='Freight Payment Process Attempt with missing Mail Cons'  ; * JMK122
            BLOCK.TEXT=USER:' attempted to process the account ':CLIENT:'-':CLIENT.REC<2>  ; * JMK122
            BLOCK.TEXT<1,-1>='The Mail Cons record Is Not On File '    ; * JMK122
            MVIN=''                      ; * JMK122
            MVIN<1,-1>='DFriend@afs.net'           ; * JMK122
*            MVIN<1,-1>='emertin@afs.net'           ; * GRB01  NKH02
            MVIN<1,-1>='swalkerafs.net'  ; * NKH02    NKH07
            MVIN<1,-1>='ktaylor@afs.net'           ; * NKH02
            MVIN<2,-1>='MMckay@afs.net'  ; * JMK122
            MVIN<4> = 'Reports@AFS.NET'
            MVIN<5>=BLOCK.SUBJ           ; * JMK122
            MVIN<6>=BLOCK.TEXT           ; * JMK122
            MVIN<8>='PRIO'
            CALL SENDMAIL(MVIN,MVOUT)    ; * JMK122
            CALL ELINE('The Mail Cons Record Is Not On File')          ; * DRF01
            GOSUB UPDATE.PROGRESS.REC    ; * NPR09
            GOTO 10                      ; * DRF01
            *****************************************************************8
         END                             ; * DRF01
         LOOP                            ; * DRF01
            READNEXT ID ELSE ID=""       ; * DRF01
         UNTIL ID="" DO                  ; * DRF01
         REPEAT                          ; * DRF01
      END                                ; * DRF01
*
* Added the above 38 line as part of project 85. DRF 1/20/12
*
      IF CLIENT='00900' OR CLIENT='00801' OR CLIENT='00862' OR CLIENT='00892' OR CLIENT='00853' OR CLIENT='00961' OR CLIENT='00952' THEN
         VP.CLIENT='Y'
      END ELSE
         VP.CLIENT='N'
      END
      GOSUB OPEN.CLIENT.FILES

      READ CLIENT.YTD FROM F.BILLS.YTD,CLIENT THEN
         ORIG.CLIENT.YTD=CLIENT.YTD
      END ELSE
         CLIENT.YTD=''
         ORIG.CLIENT.YTD='*NEW*'
      END
*
* Enter beginning date
*
      IF CMD.BDATE#'' THEN               ; * JMK157
         BEG.DATE=ICONV(CMD.BDATE,'D')   ; * JMK157
         QI=''                           ; * JMK157
         CRT @(0,5):'Enter Beginning Date    ':    ; * JMK157
         GO 32                           ; * JMK157
      END                                ; * JMK157
30:   BEG.DATE=CLIENT.REC<82>+1
      IF BEG.DATE=1 THEN BEG.DATE=DATE()
      HELP='Enter beginning date of process period.'
      IF NOT(AUTORUN) THEN
         CALL GEN.IN(0,5,'Enter Beginning Date    ':BEG.DATE'D2/','DATE',Q,0,8,'','',1,-8,5,0,QI,HELP,0,23)
32:      *
         QI=OCONV(QI,'MCU')
         IF QI='X' THEN
            CRT @(0,5):@(-4):
            GO 10
            ****  GOTO 20 ;* GO 10 ?
            *****************************************************************
         END
         ****  IF QI='EX' THEN
         ****     GOTO 9999

         ****  END
         IF QI='' THEN Q=BEG.DATE
         BEG.DATE=Q
      END
      CRT @(0,5):'Enter Beginning Date    ':BEG.DATE'D2/'

*
* Enter ending date
*
      IF NOT(AUTORUN) OR END.DATE = "" THEN
         IF CMD.EDATE#'' THEN            ; * JMK157
            END.DATE=ICONV(CMD.EDATE,'D')          ; * JMK157
            QI=''                        ; * JMK157
            CRT @(0,7):'Enter Ending Date       ':           ; * JMK157
            GO 42                        ; * JMK157
         END                             ; * JMK157
40:      END.DATE=BEG.DATE+CLIENT.REC<38>-1

         IF END.DATE#DATE() AND CMD.PROCESS=0 THEN           ; * JMK157
            ***     CALL ELINE("The calculated ending date and todays date don't match using todays date") ;* GRB05
            END.DATE=DATE()
         END
         HELP='Enter ending date of process period.'
         CALL GEN.IN(0,7,'Enter Ending Date       ':END.DATE'D2/','DATE',Q,0,8,'','',0,-8,7,0,QI,HELP,0,23)
42:      *
         QI=OCONV(QI,'MCU')
         IF QI='X' THEN
            CRT @(0,7):@(-4):
            GOTO 30
         END
         ****    IF QI='EX' THEN
         ****      GOTO 9999
         ****   END
         IF QI='' THEN Q=END.DATE
         END.DATE=Q
         PROC.DATE=END.DATE              ; * JMK157
      END
      CRT @(0,7):'Enter Ending Date       ':END.DATE'D2/'
      IF DATE() # ICONV('11/06/97','D') AND END.DATE > DATE() THEN
         CALL ELINE("Date cannot be greater than today's date.")
         GOTO 40
      END
      IF END.DATE-1 > DATE() THEN
         CALL ELINE("Date cannot be greater than tomorrow's date.")
         GOTO 40
      END
      * Begin GRB05
      IF END.DATE - BEG.DATE GT 7 THEN
         CALL ELINE("It has been more than 7 days since last processing.")
         CRT @(0,22):@(-4)
         ******      HELP='Enter Y  to reenter data. X=Exit.'
         CALL GEN.IN(0,23,'Do you want to continue (Y)es or (N)o','',ACK,0,2,'','',1,40,23,0,QI,HELP,0,23)
         IF QI # "Y" THEN
            GOTO 40
         END
      END
      * End GRB05
      DAYS=END.DATE-BEG.DATE+1
      IF DAYS LT 1 ! DAYS GT 366 THEN
         CALL ELINE('Invalid processing period!')
         GOTO 40
      END

      IF DUE.DT.FLG='Y' OR NUM(DUE.DT.FLG) OR DUE.DT.FLG='C' OR DUE.DT.FLG='P' THEN        ; * NPR999 ; * JMK133
         CRT @(35,7):">>> Due Date Client <<<"     ; * NPR999
      END                                ; * NPR999
*
* Verify input data is correct
*
      IF CMD.PROCESS=1 THEN              ; * JMK157
         ACK='Y'                         ; * JMK157
         GO 52                           ; * JMK157
      END                                ; * JMK157

      *****************************************************************

50:   HELP='Enter N to reenter data. X=Exit.'
      CALL GEN.IN(0,22,'Is the information correct? Y ','',ACK,0,2,'','',1,-2,22,0,QI,HELP,0,23)

      *****************************************************************


52:   *
      ACK=OCONV(ACK,'MCU')

      IF ACK='N' THEN                    ; * NPR09
         GOSUB UPDATE.PROGRESS.REC       ; * NPR09
         GOTO 10                         ; * NPR09
         *****************************************************************
      END                                ; * NPR09
      *****     IF ACK='EX' THEN GOTO 9999
      IF ACK='' ! ACK='Y' ELSE GOTO 50

      TIMEX = TIME()

* Make sure there is data to be processed
*
      CRT @(0,22):@(-4):"Processing"
      STMT = 'SSELECT FB.BILLS,':CLIENT:' BY 30'
      STMT:= ' WITH VERSION = "0" AND WITH 39 # "R"'

      IF DUE.DT.FLG='Y' OR NUM(DUE.DT.FLG) OR DUE.DT.FLG='C' OR DUE.DT.FLG='P' THEN        ; * JMK21 ; * JMK25; * JMK40 ; * JMK133
         STMT:=' AND WITH 38 <= "':OCONV(END.DATE,'D2/'):'"'           ; * JMK21 ; * JMK58
      END                                ; * JMK21
*
* Include Rejected bills that were not yet 'processed'
* BUT exclude the 'old' reject bills that do not have
* carrier charges or bill dates...
*

      STMT:= ' SAMPLE 1'
      EXECUTE STMT CAPTURING OUTPUT

      IF SYSTEM(11) THEN                 ; * JMK157
         BILLING.REC=1                   ; * JMK157
      END                                ; * JMK157

      STMT='SELECT PCL.BILLING WITH INV.DATE GE "':BEG.DATE'D2/'       ; * JMK157
      STMT=STMT:'" AND WITH INV.DATE LE "':END.DATE'D2/'     ; * JMK157
      STMT=STMT:'" AND WITH BILL.CLIENT# EQ "':CLIENT:'"'    ; * JMK157
      STMT:= ' SAMPLE 1'                 ; * JMK157
      EXECUTE STMT CAPTURING OUTPUT      ; * JMK157
      IF @SELECTED>0 THEN BILLING.REC=1  ; * JMK157

      IF BILLING.REC=0 THEN              ; * JMK157
         IF CLIENT#'01899' THEN
            CALL ELINE('There Are No Bills in the file to Process!')
            GOSUB UPDATE.PROGRESS.REC    ; * NPR09
            GOTO 10
            *****************************************************************
         END
      END
      IF CLIENT='01305' OR CLIENT='01309' OR CLIENT='01317' OR CLIENT='01328' OR CLIENT='01320' OR CLIENT='01321' OR CLIENT='01352' THEN
         SUBJ='Account Processed for Client ':CLIENT:'-':CLIENT.REC<2>
         TEXT=USER:' has processed account '
         TEXT=TEXT:'Client: ':CLIENT:'-':CLIENT.REC<2>
         MVIN=''
         MVIN<1>='DCurtis@afs.net'

         MVIN<4>='Reports@AFS.Net'
         MVIN<5>=SUBJ
         MVIN<6>=TEXT
         CALL SENDMAIL(MVIN,MVOUT)
      END


      PRV.PROC.DT=CLIENT.REC<82>         ; * JMK49
      CUR.PROC.DT=END.DATE               ; * JMK49

      PRV.BILL.CNT = 0                   ; * NPR10
      PRV.BILL.TOT.AMT = ' '             ; * NPR10
      DPOS = ''
      LOCATE PRV.PROC.DT IN CLIENT.YTD<40> SETTING DPOS THEN           ; * NPR10
         PRV.BILL.CNT = CLIENT.YTD<82,DPOS>        ; * NPR10
         PRV.BILL.TOT.AMT = CLIENT.YTD<83,DPOS>    ; * NPR10
      END ELSE                           ; * NPR10
         PRV.STMT = 'SELECT FB.UNPROCESS,':CLIENT  ; * JMK15
         PRV.STMT:= ' WITH FILE.NAME = "FB.BILLS,':CLIENT:'"'          ; * JMK15
         EXECUTE PRV.STMT CAPTURING OUTPUT         ; * JMK15
         PRV.BILL.CNT=@SELECTED          ; * JMK15
      END                                ; * NPR10

      CUR.STMT = 'SELECT FB.BILLS,':CLIENT         ; * JMK15

      CUR.STMT.SELECT = ' WITH 39 = "O"'

*
      IF DUE.DT.FLG='Y' OR NUM(DUE.DT.FLG) OR DUE.DT.FLG='C' OR DUE.DT.FLG='P' THEN        ; * JMK21 ; * JMK25; * JMK40 ; * JMK133
         CUR.STMT.SELECT :=' AND WITH 38 <= "':OCONV(END.DATE,'D2/'):'"'         ; * JMK21 ; * JMK58
      END                                ; * JMK21
      IF OCONV(END.DATE,'D2/') = '11/11/04' THEN
         CUR.STMT.SELECT :=' AND WITH 30 LE "':OCONV(END.DATE,'D2/'):'" '
      END
      CUR.STMT.SELECT := ' OR WITH 30 GE "':OCONV(BEG.DATE,'D2/'):'" AND WITH 30 LE "':OCONV(END.DATE,'D2/'):'"'         ; * JMK15
      CUR.STMT.SELECT := ' AND WITH 39 = "R" AND WITH 67 = ""'         ; * JMK15
      CUR.STMT.SELECT := ' AND WITH 7 # "" AND WITH 1 # ""'  ; * JMK15

      IF DUE.DT.FLG='Y' OR NUM(DUE.DT.FLG) OR DUE.DT.FLG='C' OR DUE.DT.FLG='P' THEN        ; * JMK21 ; * JMK25; * JMK40 ; * JMK133
         CUR.STMT.SELECT :=' AND WITH 38 <= "':OCONV(END.DATE,'D2/'):'"'         ; * JMK21 ; * JMK58
      END                                ; * JMK21

      CUR.STMT = 'SELECT FB.BILLS,':CLIENT:' ':CUR.STMT.SELECT         ; * NPR10

      CUR.STMT.SUM = 'SUM FB.BILLS,':CLIENT:' ':CUR.STMT.SELECT        ; * NPR10  ** Determine total 'Actual Charge'
      CUR.STMT.SUM :=' BIG.8'            ; * NPR10

      EXECUTE CUR.STMT.SUM CAPTURING OUTPUT        ; * NPR10
      CUR.BILL.CNT=@SELECTED             ; * NPR10

      CUR.BILL.TOT.AMT = 0

      FOR II = 1 TO 10
         W.LINE = TRIM(OUTPUT<II>)
         IF INDEX(W.LINE,"TOTALS",1) THEN
            CUR.BILL.TOT.AMT = FIELD(W.LINE," ",2)
            CONVERT "," TO "" IN CUR.BILL.TOT.AMT
            CONVERT "." TO "" IN CUR.BILL.TOT.AMT
         END
      NEXT II

      EXECUTE CUR.STMT CAPTURING OUTPUT  ; * NPR10   ;*09/15/09 This may be redundant if the select is only to determine the number of records to be processed

      BILL.VAR=ABS(PRV.BILL.CNT-CUR.BILL.CNT)      ; * JMK15
      IF PRV.BILL.CNT+0=0 THEN           ; * JMK52
         VAR.PCT=0                       ; * JMK52
      END ELSE                           ; * JMK52
         VAR.PCT=BILL.VAR/PRV.BILL.CNT*100         ; * JMK15
      END                                ; * JMK52

      VARIANCE.FLAG = 0
      PRV.BILL.CNT = 0
      PRV.BILL.TOT.AMT = 0
      CNT.VAR.PCT = 0
      BILL.TOT.AMT.VAR.PCT = 0
      CNT.VAR.PCT.AVE = 0
      BILL.TOT.AMT.VAR.PCT.AVE = 0

      IF ORIG.CLIENT.YTD NE '*NEW*' THEN
         VVIN = CLIENT.YTD<40>           ; * Multi value of prior Process dates for the year so far
         VVIN<2> = CLIENT.YTD<82>        ; * Multi value of bill count per Process date for the year so far
         VVIN<3> = CLIENT.YTD<83>        ; * Multi value of total bill charges per Process dates for the year so far
         VVIN<4> = CUR.BILL.CNT
         VVIN<5> = CUR.BILL.TOT.AMT
         VVIN<6> = CLIENT:" - ":CLIENT.REC<2>
         VVIN<7> = MAX.BILL.VAR.PCT
         VVOUT = ""

         CALL BILL.VARIANCE.NOTIFY(VVIN,VVOUT)
         VARIANCE.FLAG = VVOUT<1>

         PRV.BILL.CNT = VVOUT<2>
         PRV.BILL.TOT.AMT = VVOUT<3>
         CNT.VAR.PCT = VVOUT<4>
         BILL.TOT.AMT.VAR.PCT = VVOUT<5>
         CNT.VAR.PCT.AVE = VVOUT<6>
         BILL.TOT.AMT.VAR.PCT.AVE = VVOUT<7>
      END

      VAR.PCT= CNT.VAR.PCT

      ************************************************************************
      *****     IF VAR.PCT > MAX.BILL.VAR.PCT AND CMD.PROCESS=0 THEN   ; * JMK15 ; * JMK157
VERIFY.SELECTION:***; * JMK15
      *****       CRT @(0,21):"Bill count. Prev=":PRV.BILL.CNT:". Curr=":CUR.BILL.CNT:"."           ; * JMK15
      *****       HELP="Are you sure you wish to Continue? X=Change Client.  [YES]=Continue."         ; * NPR10
      *******       CALL GEN.IN(0,22,'Possible missing bills. ---','',Q,0,3,'','',0,-3,22,1,QI,HELP,0,23)       ; * JMK15
      *****         CRT @(0,15):@(-3)               ; * NPR10
      *****         QI=OCONV(QI,'MCU')              ; * JMK15
      *****         BEGIN CASE                      ; * JMK15
      *****           CASE QI='X' OR QI=''         ; * JMK15
      *****               CRT @(0,21):@(-3):        ; * JMK15
      *****              GOSUB UPDATE.PROGRESS.REC           ; * NPR09
      *****               GOTO 10                   ; * JMK15
      *****************************************************************
      ***     CASE QI='EX'                 ; * JMK15
      ***      GOTO 9999                 ; * NPR09
      *****************************************************************
      *****           CASE QI='YES'                ; * JMK15
      *****              NULL                      ; * JMK15
      *****             SUBJ='FB Period Processing Variance Alert'    ; * JMK49
      *****               TEXT=USER:' ran the process program on ':DATE()'D2/':' at ':OCONV(TIME(),'MTHS'):' for client '
      *****               TEXT:=CLIENT:' - ':CLIENT.REC<2>:', which contained a bill variance exceeding ':MAX.BILL.VAR.PCT:'%.'     ; * JMK49
      *****             TEXT<1,-1>=' '            ; * JMK49
      *****              TEXT<1,-1>='Process on ':PRV.PROC.DT'D2/':' ':PRV.BILL.CNT'R,#7':' Bills.'  ; * JMK49
      *****             TEXT<1,-1>='Process on ':CUR.PROC.DT'D2/':' ':CUR.BILL.CNT'R,#7':' Bills.'  ; * JMK49
      *****             TEXT<1,-1>=' '            ; * JMK49
      *****             TEXT<1,-1>='Difference of        '  ; * JMK49
      *****              IF CUR.BILL.CNT > PRV.BILL.CNT THEN           ; * JMK49
      *****               TEXT:='+':VAR.PCT'R24':'%'       ; * JMK49
      *****            END ELSE                  ; * JMK49
      *****                 TEXT:='-':VAR.PCT'R24':'%'       ; * JMK49
      *****             END                       ; * JMK49
      *****              MVIN=''                   ; * JMK49
      *****             MVIN<1,-1>='MMcKay@afs.net'         ; * JMK49
      *****            MVIN<4>='Reports@AFS.net'
      *****             MVIN<5>=SUBJ              ; * JMK49
      *****              MVIN<6>=TEXT              ; * JMK49
      *****             CALL SENDMAIL(MVIN,MVOUT)           ; * JMK49
      *****            CASE 1                       ; * JMK15
      *****             CALL ELINE('Invalid entry. Must be [X], [EX], or [YES].')         ; * JMK15
      *****             GOTO VERIFY.SELECTION     ; * JMK15
      *****       END CASE                        ; * JMK15
      *****       CRT @(0,21):@(-3):              ; * JMK15
      *****    END                                ; * JMK15

      *****           CASE 1                       ; * JMK15
      *****               CALL ELINE('Invalid entry. Must be [X], [EX], or [YES].')         ; * JMK15
      *****               GOTO VERIFY.SELECTION     ; * JMK15
      *****         END CASE                        ; * JMK15
      *****         CRT @(0,21):@(-3):              ; * JMK15
      *****      END                                ; * JMK15
* Begin GRB005
* Start EDI Count for process warning    ; * JMK78

*****    EDI.STMT='QSELECT EDI.XREF "':CLIENT:'"'     ; * JMK78 ; * JMK80
*****    EXECUTE EDI.STMT RTNLIST EDI.NDX CAPTURING RESULTS     ; * JMK80
*****    EDI.NDX.CNT=@SELECTED              ; * JMK80
*****    IF EDI.NDX.CNT+0>0 THEN            ; * JMK80
*****       EDI.STMT='SELECT EDI.BILLS WITH CLIENT# = "':CLIENT:'" AND WITH ENTRY.DT < "':OCONV(END.DATE,'D'):'" AND WITH CARRIER# # "00365"'   ; * JMK78 ; * JMK80
*****       EXECUTE EDI.STMT PASSLIST EDI.NDX RTNLIST EDI.LIST CAPTURING RESULTS    ; * JMK78 ; * JMK80
*****       EDI.BILL.CNT=@SELECTED          ; * JMK78
*****       IF EDI.BILL.CNT+0>0 THEN        ; * JMK78
*****          CRT@(0,22):@(-4):            ; * JMK78
*****          VERIFY.EDI.SELECTION:***; * JMK78
*****          HELP="Action? X=Change Client.  [YES]=Continue."           ; * JMK78
*****          CALL GEN.IN(0,22,EDI.BILL.CNT:' Pending EDI bills. ---','',Q,0,3,'','',0,-3,22,1,QI,HELP,0,23)     ; * JMK78
*****          QI=OCONV(QI,'MCU')           ; * JMK78
*****          BEGIN CASE                   ; * JMK78
*****             CASE QI='X' OR QI=''      ; * JMK78
*****                GOSUB UPDATE.PROGRESS.REC        ; * NPR09
*****                GOTO 10                ; * JMK78
*****                *****************************************************************
*****                ***     CASE QI='EX'              ; * JMK78
*****                ****       GO 9999                ; * JMK78

*****             CASE QI='YES'             ; * JMK78
*****      EDI.NOTIFICATION.EMAIL:*                 ; * JMK78
*****                NULL                   ; * JMK78
*****                SUBJ='FB Pending EDI Bills Alert'          ; * JMK78
*****                TEXT=USER:' ran the process program on ':DATE()'D2/':' at ':OCONV(TIME(),'MTHS'):' for client '        ; * JMK78
*****                TEXT:=CLIENT:' - ':CLIENT.REC<2>:', which contained a pending EDI bill count of ':EDI.BILL.CNT:'.'     ; * JMK78
*****                TEXT<1,-1>=' '         ; * JMK78
*****                TEXT<1,-1>='Program FB.2.3.NW, Label EDI.NOTIFICATION.EMAIL'   ; * JMK78
*****                TEXT<1,-1>=' '         ; * JMK78
*****                MVIN=''                ; * JMK78

*****                MVIN<1,-1>='MMcKay@afs.net'      ; * JMK78
*****                MVIN<4>='Reports@AFS.net'
*****                MVIN<5>=SUBJ           ; * JMK78
*****                MVIN<6>=TEXT           ; * JMK78
*****                CALL SENDMAIL(MVIN,MVOUT)        ; * JMK78
*****             CASE 1                    ; * JMK78
*****                CALL ELINE('Invalid entry. Must be [X], [EX], or [YES].')      ; * JMK78
*****                GOTO VERIFY.EDI.SELECTION        ; * JMK78
*****          END CASE                     ; * JMK78
*****       END                             ; * JMK78
*****    END                                ; * JMK80
* End GRB005
* Start EDI Count for Brokerage  warning    ; * DRF023

      EDI.STMT='QSELECT EDI.XREF "':CLIENT:'"'     ; * DRF023
      EXECUTE EDI.STMT RTNLIST EDI.NDX CAPTURING RESULTS     ; * DRF023
      EDI.NDX.CNT=@SELECTED              ; * DRF023
      IF EDI.NDX.CNT+0>0 THEN            ; * DRF023
         EDI.STMT='SELECT EDI.BILLS WITH CLIENT# = "':CLIENT:'" AND WITH CARRIER# = "23288" AND WITH 130 < "':OCONV(END.DATE-1,'D'):'"'      ; * JMK78 ; * DRF023
         EXECUTE EDI.STMT PASSLIST EDI.NDX RTNLIST EDI.LIST CAPTURING RESULTS    ; * JMK78 ; * DRF023
         EDI.BILL.CNT=@SELECTED          ; * DRF023
         IF EDI.BILL.CNT+0>0 THEN        ; * DRF023
            CRT@(0,22):@(-4):            ; * DRF023
VERIFY.EDI.BROKERAGE.SELECTION:***; * DRF023
            HELP="Action? X=Change Client.  [YES]=Continue."           ; * DRF023
            CALL GEN.IN(0,22,EDI.BILL.CNT:' Pending Brokerage EDI bills. ---','',Q,0,3,'','',0,-3,22,1,QI,HELP,0,23)     ; * DRF023
            QI=OCONV(QI,'MCU')           ; * DRF023
            BEGIN CASE                   ; * DRF023
               CASE QI='X' OR QI=''      ; * DRF023
                  GOSUB UPDATE.PROGRESS.REC        ; * DRF023
                  GOTO 10                ; * DRF023
                  *****************************************************************
                  ***     CASE QI='EX'              ; * DRF023
                  ***       GO 9999                ; * DRF023

               CASE QI='YES'             ; * DRF023
EDI.BROKERAGE.NOTIFICATION.EMAIL:*                 ; * DRF023
                  NULL                   ; * DRF023
                  SUBJ='FB Pending Brokerage EDI Bills Alert'          ; * DRF023
                  TEXT=USER:' ran the process program on ':DATE()'D2/':' at ':OCONV(TIME(),'MTHS'):' for client '        ; * DRF023
                  TEXT:=CLIENT:' - ':CLIENT.REC<2>:', which contained a pending Brokerage EDI bill count of ':EDI.BILL.CNT:'.'     ; * DRF023
                  TEXT<1,-1>=' '         ; * DRF023
                  TEXT<1,-1>='Program FB.2.3.NW, Label EDI.BROKERAGE.NOTIFICATION.EMAIL'   ; * DRF023
                  TEXT<1,-1>=' '         ; * DRF023
                  MVIN=''                ; * DRF023
                  MVIN<1,-1>='MMcKay@afs.net'      ; * DRF023
                  MVIN<1,-1>='DFriend@afs.net'     ; * DRF023
                  MVIN<1,-1>='THood@afs.net'       ; * DRF023
                  MVIN<4>='Reports@AFS.net'        ; * DRF023
                  MVIN<5>=SUBJ           ; * DRF023
                  MVIN<6>=TEXT           ; * DRF023
                  CALL SENDMAIL(MVIN,MVOUT)        ; * DRF023
               CASE 1                    ; * DRF023
                  CALL ELINE('Invalid entry. Must be [X], [EX], or [YES].')      ; * DRF023
                  GOTO VERIFY.EDI.BROKERAGE.SELECTION        ; * DRF023
            END CASE                     ; * DRF023
         END                             ; * DRF023
      END                                ; * DRF023
* Start Audit Review   warning    ; * DRF044

      FB.STMT='SELECT FB.BILLS,':CLIENT:' WITH STATUS = "R" AND WITH 66 = "A" AND WITH VERSION = "0"'          ; * DRF044
      EXECUTE FB.STMT CAPTURING OUTPUT   ; * DRF044
      FB.BILL.CNT=@SELECTED              ; * DRF044
      IF FB.BILL.CNT+0>0 THEN            ; * DRF044
         CRT@(0,22):@(-4):               ; * DRF044
VERIFY.FB.AUDIT.REVIEW.SELECTION:***; * DRF044
         HELP="Action? X=Change Client.  [YES]=Continue."    ; * DRF044
         CALL GEN.IN(0,22,FB.BILL.CNT:' Pending Audit Review bills. ---','',Q,0,3,'','',0,-3,22,1,QI,HELP,0,23)          ; * DRF044
         QI=OCONV(QI,'MCU')              ; * DRF044
         BEGIN CASE                      ; * DRF044
            CASE QI='X' OR QI=''         ; * DRF044
               GOSUB UPDATE.PROGRESS.REC           ; * DRF044
               GOTO 10                   ; * DRF044
               *****************************************************************
               ***     CASE QI='EX'              ; * DRF044
               ***       GO 9999                ; * DRF044

            CASE QI='YES'                ; * DRF044
*DFEDI.BROKERAGE.NOTIFICATION.EMAIL:*                 ; * DRF044
               NULL                      ; * DRF044
               SUBJ='FB Pending Brokerage EDI Bills Alert'   ; * DRF044
               TEXT=USER:' ran the process program on ':DATE()'D2/':' at ':OCONV(TIME(),'MTHS'):' for client '           ; * DRF044
               TEXT:=CLIENT:' - ':CLIENT.REC<2>:', which contained a pending Brokerage EDI bill count of ':EDI.BILL.CNT:'.'        ; * DRF044
               TEXT<1,-1>=' '            ; * DRF044
               TEXT<1,-1>='Program FB.2.3.NW, Label EDI.BROKERAGE.NOTIFICATION.EMAIL'      ; * DRF044
               TEXT<1,-1>=' '            ; * DRF044
               MVIN=''                   ; * DRF044
               MVIN<1,-1>='MMcKay@afs.net'         ; * DRF044
               MVIN<1,-1>='DFriend@afs.net'        ; * DRF044
               MVIN<1,-1>='THood@afs.net'          ; * DRF044
               MVIN<4>='Reports@AFS.net'           ; * DRF044
               MVIN<5>=SUBJ              ; * DRF044
               MVIN<6>=TEXT              ; * DRF044
*DF               CALL SENDMAIL(MVIN,MVOUT)        ; * DRF044
            CASE 1                       ; * DRF044
               CALL ELINE('Invalid entry. Must be [X], [EX], or [YES].')         ; * DRF044
               GOTO VERIFY.FB.AUDIT.REVIEW.SELECTION         ; * DRF044
         END CASE                        ; * DRF044
      END                                ; * DRF044

* PROCESS NOTIFY SECTION                 ; * JMK79
      PN.VIN=''                          ; * JMK79
      PN.VIN<1>='FB.2.3.NW'              ; * JMK79
      PN.VIN<2>=CLIENT                   ; * JMK79
      PN.VIN<3>=CLIENT.REC<2>            ; * JMK79
      PN.VIN<4>=END.DATE                 ; * JMK79
      PN.VIN<5>=USER                     ; * JMK79
      PN.VOUT=''                         ; * JMK79
      CALL FB.NOTIFY.SUB(PN.VIN,PN.VOUT,F.PN,F.PN.HIST)      ; * JMK79
      IF PN.VOUT<1>='X' THEN             ; * JMK79
         GOSUB UPDATE.PROGRESS.REC       ; * NPR09
         GOTO 10                         ; * JMK79
         *****************************************************************
      END                                ; * JMK79
      IF PN.VOUT<1>='EX' THEN            ; * JMK79
         GO 10
         ****    GO 9999                         ; * JMK79
         *****************************************************************
      END                                ; * JMK79

      DONE=0
      LOOP UNTIL DONE=1 DO
         READNEXT ID ELSE DONE=1
      REPEAT

*
* Check for verification flags
*

      VERIFIED=1
      VERIFIED=0                         ; * GRB
      IF VERIFIED THEN
100:     PREC='SSELECT FB.BILLS,':CLIENT:' BY PRO '

         PREC=PREC:' AND WITH 39 NE "O" AND WITH VERSION EQ "0"'
         PREC=PREC:' AND WITH 39 NE "R"'
         PREC=PREC:' AND WITH 39 NE "2" AND WITH 39 NE "3" AND WITH 39 NE "4" '

         IF DUE.DT.FLG='Y' OR NUM(DUE.DT.FLG) OR DUE.DT.FLG='C' OR DUE.DT.FLG='P' THEN     ; * JMK21 ; * JMK25; * JMK40 ; * JMK133
            PREC:=' AND WITH 38 <= "':OCONV(END.DATE,'D2/'):'"'        ; * JMK21 ; * JMK58
         END                             ; * JMK21
         EXECUTE PREC PASSLIST CAPTURING OUTPUT
         DISP.REC=''
         IF SYSTEM(11) THEN
            LOOP
               READNEXT ID ELSE ID=''
            UNTIL ID='' DO
               READ PRO FROM F.BILLS,ID THEN
                  DISP.REC<1,-1>=FIELD(ID,'*',1)
                  DISP.REC<2,-1>=FIELD(ID,'*',2)
                  DISP.REC<3,-1>=FIELD(ID,'*',3)
               END
            REPEAT
            BEG.LOC=1
            LOC=0
            MAX=DCOUNT(DISP.REC<1>,CHAR(253))
110:        TEXT="U N V E R I F I E D   P R O ' S"
            CALL CENTER(TEXT,80)
            CRT @(0,2):TEXT
            CRT @(0,3):' Line  Carrier  Pro Number           Version':@(-3)
            END.LOC=BEG.LOC+17
            LINE=3
            FOR LOC=BEG.LOC TO END.LOC UNTIL DISP.REC<1,LOC>=''
               LINE=LINE+1
               CRT @(0,LINE):LOC'R#5':' ':DISP.REC<1,LOC>'R#8':'  ':DISP.REC<2,LOC>'L#20':' ':DISP.REC<3,LOC>'R#7'
            NEXT LOC
            CALL ELINE('Press Return to Continue')
            GOTO 9999
            HELP="Enter line number of Pro to verify. ''=Next page. 'B'=Back. 'X'=Exit."
120:        CALL GEN.IN(0,22,"Enter line number of Pro ####",'',Q,0,4,'','',2,-4,22,1,QI,HELP,0,23)
            QI=OCONV(QI,'MCU')
            BEGIN CASE
               CASE QI=''
                  BEG.LOC=BEG.LOC+18
                  IF BEG.LOC GT MAX THEN BEG.LOC=1
                  GOTO 110
               CASE QI='X'
                  GO 10
                  ****   GOTO 9999
                  *****************************************************************
               CASE QI='B'
                  BEG.LOC=BEG.LOC-18
                  IF BEG.LOC LE 1 THEN BEG.LOC=1
                  GOTO 110
               CASE QI='T'
                  BEG.LOC=1
                  GOTO 110
               CASE Q GE BEG.LOC & Q LE END.LOC
                  SEL=Q
                  HELP="Enter V to verify or E to edit.'"
130:              CALL GEN.IN(0,22,"Enter verify or edit option. E",'',Q,0,1,'','',2,-1,22,1,QI,HELP,0,23)
                  QI=OCONV(QI,'MCU')
                  BEGIN CASE
                     CASE QI='V'
                        CLEARDATA        ; * JMK164
                        DATA CLIENT,DISP.REC<1,SEL>,DISP.REC<2,SEL>
                        EXECUTE 'FB.2.2'
                     CASE QI='E'
                        CLEARDATA        ; * JMK164
                        DATA CLIENT,DISP.REC<1,SEL>,DISP.REC<2,SEL>,'C'
                        EXECUTE 'FB.2.1.MR'
                     CASE 1
                        GOTO 130
                  END CASE
                  GOTO 100
            END CASE
            GOTO 120
            CALL AFS.SCR.HEAD('','','',PROG.NAME,PROG.DESC,PACK.NAME,"AFS Logistics, LLC",TIME.DATE,1)
         END
      END

*
* START CAPTURE OF TIMING INFORMATION ; * JMK82

      LOGGING.FLAG = 1
      LOG.HDR.ID = PROG.NAME:"*":CLIENT:"*":DATE()           ; * Set this once for each running of this program
      LOG.SEQ.NO = 0                     ; * Set to zero for creation of log header record
      BENCH.PGM=PROG.NAME                ; * JMK82
      BENCH.GRP=CLIENT                   ; * JMK82
      BENCH.BDATE=DATE()                 ; * JMK82
      BENCH.BTIME=TIME()                 ; * JMK82
      BENCH.USER=USER                    ; * JMK82

      READU FP.PROC.REC FROM F.TABLES,'FP_PROCESS' ELSE FP.PROC.REC=''           ; * JMK100
      LOCATE CLIENT IN FP.PROC.REC<1> BY 'AR' SETTING FPPOS THEN       ; * JMK100
         CALL ELINE(CLIENT:' is being processed by ':FP.PROC.REC<4,FPPOS>:' as of ':OCONV(FP.PROC.REC<3,FPPOS>,'MTHS'):' on ':FP.PROC.REC<2,FPPOS>'D2/':'.')     ; * JMK100

         GO 10
*DF         ****   GO 9999              ;;;;*10            ; * JMK100
         *****************************************************************
      END ELSE                           ; * JMK100
         INS CLIENT BEFORE FP.PROC.REC<1,FPPOS>    ; * JMK100
         INS DATE() BEFORE FP.PROC.REC<2,FPPOS>    ; * JMK100
         INS TIME() BEFORE FP.PROC.REC<3,FPPOS>    ; * JMK100
         INS USER BEFORE FP.PROC.REC<4,FPPOS>      ; * JMK100
         WRITE FP.PROC.REC ON F.TABLES,'FP_PROCESS'          ; * JMK100
      END                                ; * JMK100
      RELEASE F.TABLES,'FP_PROCESS'      ; * JMK100
      PROC.LOG.ID=CLIENT:'*':DATE()      ; * DRF024
      READ D.PROCESS.LOG FROM F.PROCESS.LOG,PROC.LOG.ID ELSE D.PROCESS.LOG=''    ; * DRF024
      D.PROCESS.LOG<1,-1>='Proc'         ; * DRF024
      D.PROCESS.LOG<2,-1>='Beg'          ; * DRF024
      D.PROCESS.LOG<3,-1>=TIME()         ; * DRF024
      D.PROCESS.LOG<4,-1>=USER           ; * DRF024
      D.PROCESS.LOG<5,-1>=ONCE:'-':USER.INPUT.FOR.ONCE
      WRITE D.PROCESS.LOG ON F.PROCESS.LOG,PROC.LOG.ID       ; * DRF024
*
* START CLEANUP SECTION FOR EMAIL.LOG FILE
*
      ELOG.STMT='SELECT EMAIL.LOG WITH CLIENT# = "':CLIENT:'" AND WITH DATE < "':BEG.DATE'D2/':'"'   ; * JMK103

      EXECUTE ELOG.STMT RTNLIST ELOG.LIST CAPTURING ELOG.RESULTS       ; * JMK103

      ELOG.TCNT=@SELECTED                ; * JMK103
      IF ELOG.TCNT > 0 THEN              ; * JMK103
         ELOG.EOF=0                      ; * JMK103
         ELOG.CNT=0                      ; * JMK103
         LOOP                            ; * JMK103
            READNEXT ELOG.ID FROM ELOG.LIST ELSE ELOG.EOF=1  ; * JMK103
         UNTIL ELOG.EOF DO               ; * JMK103
            ELOG.CNT+=1                  ; * JMK103
            DELETE F.EMAIL.LOG,ELOG.ID   ; * JMK103
         REPEAT                          ; * JMK103
      END                                ; * JMK103

      IF TIME()>=64800 THEN              ; * JMK85
         MVIN=''                         ; * JMK85
         SUBJ='Potential AR Balancing and FP Processing Conflict!!!'   ; * JMK85
         TEXT=USER:' ran the process program at ':OCONV(TIME(),'MTHS'):' .  '    ; * JMK85
         TEXT<1,-1>='This may have been done after the AR Balancing Review for ':OCONV(DATE(),'D2/')           ; * JMK85

         TEXT<1,-1>=' was completed and may need to be applied to the AR Balancing Review for ':OCONV(DATE(),'D2/'):'.  '          ; * JMK85 ; * JMK94
         TEXT<1,-1>='This was done for ':CLIENT:' - ':CLIENT.REC<2>:'.'          ; * JMK94
         MVIN=''                         ; * JMK85
         MVIN<1>='Accounting@afs.net'    ; * JMK85
         MVIN<2>='HelpDesk@afs.net'      ; * JMK85
         MVIN<4> = 'Reports@AFS.net'
         MVIN<5>=SUBJ                    ; * JMK85
         MVIN<6>=TEXT                    ; * JMK85
         MVIN<7>=1                       ; * JMK85
         CALL SENDMAIL(MVIN,MVOUT)       ; * JMK85
      END                                ; * JMK85

      DVIN=''                            ; * JMK86
      DVOUT=''                           ; * JMK86
      DVIN<1>=DATE()-1                   ; * JMK86
      TEST.BEG.DATE=''                   ; * JMK86
      CALL NEXT.BUSINESS.DAY(TEST.BEG.DATE,TEST.NEXT.BUS.DATE,DSTATUS,DVIN,DVOUT)          ; * JMK86
      IF DATE()#DVOUT<1> THEN            ; * JMK86
         MVIN=''                         ; * JMK85
         SUBJ='Potential AR Balancing and FP Processing Conflict!!!'   ; * JMK86
         TEXT=USER:' ran the process program on ':DATE()'D2/':' at ':OCONV(TIME(),'MTHS'):'.  '      ; * JMK86
         TEXT<1,-1>='This may have been done after the AR Balancing Review for the last business day'          ; * JMK86

         TEXT<1,-1>=' was completed and may need to be applied to the last AR Balancing Review.  '   ; * JMK86 ; * JMK94
         TEXT<1,-1>='This was done for ':CLIENT:' - ':CLIENT.REC<2>:'.'          ; * JMK94
         MVIN=''                         ; * JMK86
         MVIN<1>='Accounting@afs.net'    ; * JMK86
         MVIN<2>='HelpDesk@afs.net'      ; * JMK86
         MVIN<4> = 'Reports@AFS.net'
         MVIN<5>=SUBJ                    ; * JMK86
         MVIN<6>=TEXT                    ; * JMK86
         MVIN<7>=1                       ; * JMK86
         CALL SENDMAIL(MVIN,MVOUT)       ; * JMK86
      END                                ; * JMK86

*
* Check for beginning of year and clear year to date totals
*
      IF CLIENT.REC<82>+1=1 THEN
         CLEAR.BEG.DATE=BEG.DATE
      END ELSE
         CLEAR.BEG.DATE=CLIENT.REC<82>+1
      END
*
* Calculate fiscal year beginning date
*
      BEG.MONTH=OCONV(CLEAR.BEG.DATE,'DM')
      BEG.DAY=OCONV(CLEAR.BEG.DATE,'DD')
      BEG.YEAR=OCONV(CLEAR.BEG.DATE,'DY')
      FISC.MONTH=FIELD(CLIENT.REC<29>,'.',1)
      FISC.DAY=FIELD(CLIENT.REC<29>,'.',2)
      IF FISC.MONTH < 1 OR FISC.MONTH > 12 OR FISC.DAY < 1 OR FISC.DAY > 31 THEN
         CALL ELINE('Invalid Fisc Date :':CLIENT.REC<29>:' - Please setup in client maintenance')
         GO 10
         ****   STOP
         *****************************************************************  ????????
      END
      IF BEG.MONTH:BEG.DAY > FISC.MONTH:FISC.DAY THEN
         FISC.YEAR=(BEG.YEAR+1)'R%2'
      END ELSE
         FISC.YEAR=BEG.YEAR
      END

      FYR.DATE=FISC.MONTH:'.':FISC.DAY:'.':FISC.YEAR
      FYR.DATE=ICONV(FYR.DATE,'D2.')

      IF CLEAR.BEG.DATE LE FYR.DATE AND END.DATE GE FYR.DATE THEN
         CALL FB.YTD.CLEAR(CLIENT,ERROR)
         CLIENT.YTD=''
*
         IF ERROR THEN                   ; * NPR09
            GOSUB UPDATE.PROGRESS.REC    ; * NPR09
            GOTO 10
            *****************************************************************
         END                             ; * NPR09
      END
      CLIENT.REC<82>=END.DATE
      CLIENT.REC<325>=TIME()

*                                        ; * JMK32
* SETUP DIVISION LIST                    ; * JMK32
*                                        ; * JMK32

      STMT='SSELECT DIVISION.CODES,':CLIENT:' WITH 7 # "I"'  ; * JMK32 ; * JMK75
      EXECUTE STMT CAPTURING RESULT      ; * JMK32
      EOF=0                              ; * JMK32
      LOOP                               ; * JMK32
         READNEXT DIV.ID ELSE EOF=1      ; * JMK32
      UNTIL EOF DO                       ; * JMK32
         DIV.LIST<1,-1>=DIV.ID           ; * JMK32
      REPEAT                             ; * JMK32

*
* Select bills to pay
*

      DOPEN.LIST=''
      DPROC.LIST=''
      CLEARFILE F.UP
      IF CLIENT='01825' THEN             ; * DRF039
*DF         CAV.STMT= "CAVENDERS.SPECIAL ":OCONV(BEG.DATE,'D2/'):" ":OCONV(END.DATE,'D2/')   ; * DRF039
         CAV.STMT = "CAVENDERS.SPECIAL"  ; * DRF039
         EXECUTE CAV.STMT                ; * DRF039
      END                                ; * DRF039
      UP.ARRAY=ORIG.CLIENT.REC
      UP.ID='CLIENTS*':CLIENT ; GOSUB UPDATE.UP.FILE
*
      UP.ARRAY=BEG.DATE:@AM:END.DATE
      UP.ID='PROCESS.DATES' ; GOSUB UPDATE.UP.FILE
*
      UP.ARRAY=ORIG.CLIENT.YTD
      UP.ID='FB.BILLS.YTD*':CLIENT ; GOSUB UPDATE.UP.FILE
*
      ****    STMT='SELECT UPSDATA WITH CLI.NUM = "':CLIENT:'" '
      STMT='SELECT UPSDATA.INDX WITH CLI.NUM = "':CLIENT:'" '

      EXECUTE STMT CAPTURING OUTPUT

      NUM.EBILL=@SELECTED
      IF NUM.EBILL#0 THEN
         DONE=0
         LOOP
            READNEXT EBILL.ID ELSE DONE=1
         UNTIL DONE
            READ UP.ARRAY FROM F.UPSDATA,EBILL.ID THEN
               UP.ID='UPSDATA*':EBILL.ID ; GOSUB UPDATE.UP.FILE
            END
         REPEAT
      END
      STMT='SELECT MAIL.CONS.DATA WITH CLI.NUM = "':CLIENT:'" '

      EXECUTE STMT CAPTURING OUTPUT

      NUM.MAIL.CONS=@SELECTED
      IF NUM.MAIL.CONS#0 THEN
         DONE=0
         LOOP
            READNEXT MAIL.CONS.ID ELSE DONE=1
         UNTIL DONE
            READ UP.ARRAY FROM F.MAIL.CONS.DATA,MAIL.CONS.ID THEN
               UP.ID='MAIL.CONS.DATA*':MAIL.CONS.ID ; GOSUB UPDATE.UP.FILE
            END
         REPEAT
      END
      CRT @(0,22):'Now selecting FB.BILLS file.':@(-4):
      OLD.CARRIER='*****'
      PREV.CARRIER='*****'
      PREC ='SSELECT FB.BILLS,':CLIENT
*
* Select payable bills

      PREC:=' WITH 39 = "O"'

      IF DUE.DT.FLG='Y' OR NUM(DUE.DT.FLG) OR DUE.DT.FLG='C' OR DUE.DT.FLG='P' THEN        ; * JMK21 ; * JMK25; * JMK40 ; * JMK133
         PREC:=' AND WITH 38 <= "':OCONV(END.DATE,'D2/'):'"'           ; * JMK21 ; * JMK58
      END                                ; * JMK21
      IF OCONV(END.DATE,'D2/') = '11/11/04' THEN
         PREC:=' AND WITH 30 LE "':OCONV(END.DATE,'D2/'):'" '
      END
      IF VP.CLIENT='Y' THEN
***********************************************************************
**                                                                   **
**  If day of week is Tuesday (2) or Wednesday (3) then only process  **
**  bills with a ship date greater than or equal to 12/29/00         **
**  If day of week is Thursday (4) then only process bills with a    **
**  ship date less than or equal to 12/28/00                         **
**  If day of week is not Tuesday (2), Wednesday (3) or Thursday (4)  **
**  then give an error and go back up to client                      **
**                                                                   **
***********************************************************************

         DAY.OF.WEEK=MOD(TODAY,7)
         BEGIN CASE
            CASE DAY.OF.WEEK=2 OR DAY.OF.WEEK=3
               PREC := ' AND WITH 1 GE "12/29/00" '
            CASE DAY.OF.WEEK=4
               PREC := ' AND WITH 1 LE "12/28/00" '
            CASE 1
               CALL ELINE('Today is not a Tuesday or Thursday. Cannot process a VP Client')
               GO 10
               ****  GOTO 20 ;* GO 10 ?
               ************************************************
         END CASE
      END

***********************************************************************
**                                                                   **
**  If day of week is Wednesday (3) or Thursday (4)) then process    **
**  everything except (00015) FedEx and (00041) UPS. If day of week  **
**  is Friday (5) or Monday (1) then process only FedEx (00015) and  **
**  UPS (00041)                                                      **
**                                                                   **
***********************************************************************
*
* Include Rejected bills that were not yet processed
* BUT exclude the old bills that do not have DATEs or AMOUNTs
*

      PREC:=' OR WITH 30 LE "':OCONV(END.DATE,'D2/'):'"'
      PREC:=' AND WITH 39 = "R" AND WITH 67 = ""'
      PREC:=' AND WITH 7 # "" AND WITH 1 # ""'

      IF OCONV(END.DATE,'D2/') = '11/11/04' THEN
         PREC:=' AND WITH 30 LE "':OCONV(END.DATE,'D2/'):'" '
      END

      PREC:=' BY CARRIER#'

      EXECUTE PREC PASSLIST CAPTURING OUTPUT

      NUM.ITMS = @SELECTED
      BENCH.NUM.REC=NUM.ITMS             ; * JMK82

      IF BILLING.REC=0 THEN
         GO 10
         ****   GOTO 9999
         **********************************************************8
      END
      IF USER#'DAVID' & USER#'GBINO' THEN BREAK OFF          ; ** Disable Break Key; * JMK04

      EXECUTE "AUTOLOGOUT 0"

*
* Init CURRENT counters..
*
      COUNTER=0
      EDI.COUNT=''
      EDI.COUNT.ARRAY=''
      EDI.COUNT.PARCEL.NON.FEDEX.AIR=''
      EDI.MD.FEDEX.GROUND.COUNT=''
      MIS.EMAIL.ARRAY=''                 ; * JMK04
      DUP.COUNT=0
      NEVERPAY.COUNT=0                   ; * Number of bills that will never be paid.
      HOLD.COUNT=0                       ; * Number of bills with payment on-hold.
      AUDIT.REVIEW.COUNT=0
      RELEASED.COUNT=0                   ; * Number of bills that were rejected by later paid.
      ANY.VOUCHER=0

* Start Looping through bills to process

* Get next bill item
*
      FIRST.TIME.MES=1
*****************************************************************
1000:
*****************************************************************
      READNEXT BILL.ID ELSE GOTO 2000

      COUNTER=COUNTER+1
      CALL PROG.BAR(22,COUNTER,NUM.ITMS,PER)
      READ BILL.REC FROM F.BILLS,BILL.ID ELSE GOTO 1000

      ORIG.BILL.REC=BILL.REC             ; * JMK20

      ACTUAL.CHG=BILL.REC<8>             ; * JMK20
      ACTUAL.CHG.TOTAL += ACTUAL.CHG     ; * NPR10
      TRUE.COST=BILL.REC<8>+BILL.REC<44>           ; * JMK108
      SUM.DTL.CHG=SUM(BILL.REC<152>)     ; * JMK20
      IF ACTUAL.CHG=SUM.DTL.CHG THEN     ; * JMK20
         DTL.OUT=''                      ; * JMK20
         FRT.ARRAY=''                    ; * JMK20
         MIS.ARRAY=''                    ; * JMK20
         DTL.OUT<40>=BILL.REC<151>       ; * JMK20
         DTL.OUT<41>=BILL.REC<74>        ; * JMK20
         DTL.OUT<42>=BILL.REC<75>        ; * JMK20
         DTL.OUT<43>=BILL.REC<76>        ; * JMK20
         DTL.OUT<44>=BILL.REC<152>       ; * JMK20
         DTL.OUT<45>=BILL.REC<83>        ; * JMK20
         NVAL=DCOUNT(DTL.OUT<40>,@VM)    ; * JMK20
         FOR VAL=1 TO NVAL               ; * JMK20
            TRAN.TYPE=DTL.OUT<40,VAL>    ; * JMK20
            BEGIN CASE                   ; * JMK20
               CASE TRAN.TYPE='FRT'      ; * JMK20
                  NXT.VAL=DCOUNT(FRT.ARRAY<1>,@VM)+1         ; * JMK20
                  FOR ATT=1 TO 6         ; * JMK20
                     FRT.ARRAY<ATT,NXT.VAL>=DTL.OUT<39+ATT,VAL>        ; * JMK20
                  NEXT ATT               ; * JMK20
               CASE TRAN.TYPE='MIN'      ; * JMK20
                  NXT.VAL=DCOUNT(FRT.ARRAY<1>,@VM)+1         ; * JMK20
                  FOR ATT=1 TO 6         ; * JMK20
                     FRT.ARRAY<ATT,NXT.VAL>=DTL.OUT<39+ATT,VAL>        ; * JMK20
                  NEXT ATT               ; * JMK20
               CASE TRAN.TYPE='DEF'      ; * JMK20
                  NXT.VAL=DCOUNT(FRT.ARRAY<1>,@VM)+1         ; * JMK20
                  FOR ATT=1 TO 6         ; * JMK20
                     FRT.ARRAY<ATT,NXT.VAL>=DTL.OUT<39+ATT,VAL>        ; * JMK20
                  NEXT ATT               ; * JMK20
               CASE 1                    ; * JMK20
                  LOCATE(TRAN.TYPE,MIS.ARRAY,1;MPOS) THEN    ; * JMK20
                     FOR ATT=5 TO 6      ; * JMK20
                        IF NUM(DTL.OUT<39+ATT,VAL>) THEN     ; * JMK20
                           MIS.ARRAY<ATT,MPOS>+=DTL.OUT<39+ATT,VAL>+0  ; * JMK20
                        END              ; * JMK20
                     NEXT ATT            ; * JMK20
                  END ELSE               ; * JMK20
                     NXT.VAL=DCOUNT(MIS.ARRAY<1>,@VM)+1      ; * JMK20
                     FOR ATT=1 TO 4      ; * JMK20
                        MIS.ARRAY<ATT,NXT.VAL>=DTL.OUT<39+ATT,VAL>     ; * JMK20
                     NEXT ATT            ; * JMK20
                     FOR ATT=5 TO 6      ; * JMK20
                        IF NUM(DTL.OUT<39+ATT,VAL>) THEN     ; * JMK20
                           MIS.ARRAY<ATT,MPOS>+=DTL.OUT<39+ATT,VAL>+0  ; * JMK20
                        END              ; * JMK20
                     NEXT ATT            ; * JMK20
                  END                    ; * JMK20
            END CASE                     ; * JMK20
         NEXT VAL                        ; * JMK20
         FOR ATT=1 TO 6                  ; * JMK20
            BILL.REC<152+ATT>=FRT.ARRAY<ATT>       ; * JMK20
            BILL.REC<158+ATT>=MIS.ARRAY<ATT>       ; * JMK20
         NEXT ATT                        ; * JMK20
         IF BILL.REC#ORIG.BILL.REC THEN  ; * JMK20
            WRITE BILL.REC ON F.BILLS,BILL.ID      ; * JMK20
            WRITE BILL.REC ON F.HIST,BILL.ID       ; * JMK20
            CALL UPD.FB.STATUS.UPDATE(CLIENT,BILL.ID,F.STATUS.UPDATE)  ; * JMK154
         END                             ; * JMK20
      END                                ; * JMK20
      UP.ARRAY=''                        ; ** Just Store the Key (The record is not needed)

      UP.ID='FB.BILLS,':CLIENT:'*':BILL.ID ; GOSUB UPDATE.UP.FILE

      WRITE '' ON F.WORK,BILL.ID
      CARRIER=FIELD(BILL.ID,'*',1)
      READV CARRIER.NAME FROM F.CARRIERS,CARRIER,1 ELSE CARRIER.NAME='**Uknown**'          ; * JMK04
      BANK=CLIENT.BANK                   ; * JMK90
      LOCATE CARRIER IN BANK.CTRL.REC<1> SETTING CPOS THEN   ; * JMK90
         BANK.OVERRIDE=1                 ; * JMK139
         BANK.BEG.DATE=BANK.CTRL.REC<2,CPOS>       ; * JMK139
         BANK.END.DATE=BANK.CTRL.REC<3,CPOS>       ; * JMK139
         IF BANK.BEG.DATE#'' THEN        ; * JMK139
            IF END.DATE < BANK.BEG.DATE THEN       ; * JMK139
               BANK.OVERRIDE=0           ; * JMK139
            END                          ; * JMK139
         END                             ; * JMK139
         IF BANK.END.DATE#'' THEN        ; * JMK139
            IF END.DATE > BANK.END.DATE THEN       ; * JMK139
               BANK.OVERRIDE=0           ; * JMK139
            END                          ; * JMK139
         END                             ; * JMK139
         IF BANK.OVERRIDE THEN           ; * JMK139
            BANK=BANK.CTRL.REC<10,CPOS>  ; * JMK90
         END                             ; * JMK139
      END                                ; * JMK90
      BANK.ID='BANK*':BANK               ; * JMK128
      READ BANK.REC FROM F.FB.BANKS,BANK.ID ELSE BANK.REC=''           ; * JMK128
      BANK.FB.TYPE=BANK.REC<6>           ; * JMK128

      IF BANK.FB.TYPE='V' THEN ANY.VOUCHER=1       ; * JMK128
      PRO.NO=FIELD(BILL.ID,'*',2)
      PRO.LENGTH=LEN(PRO.NO)
      DUP=FIELD(BILL.ID,'*',3)

      IF BILL.REC<39>='R' AND BILL.REC<66>='' THEN
         LINE.OUT=''
         LINE.OUT<1,10>=123
         MVIN=''
         SUBJ='Rejected bill did not have a pay status'
         TEXT=USER:' ran the process program which contained a bill with'
         TEXT<1,-1>='a pay code of ':BILL.REC<39>:' and a pay status code of ':BILL.REC<66>
         TEXT<1,-1>='for bill ':BILL.ID:' for client ':CLIENT:' ':CLIENT.REC<2>
         MVIN=''
         MVIN<2>='DFriend@afs.net'
         MVIN<4>='Reports@AFS.net'
         MVIN<5>=SUBJ
         MVIN<6>=TEXT
         CALL SENDMAIL(MVIN,MVOUT)
         BILL.REC<66>='E'
         WRITE BILL.REC ON F.BILLS,BILL.ID
      END
      NEVERPAY.FLAG = (BILL.REC<66>='N' AND BILL.REC<39>='R')
      HOLD.FLAG = (BILL.REC<66>#'N' AND BILL.REC<66>#'A' AND BILL.REC<39>='R')
      RELEASED.FLAG = (BILL.REC<66>#'' AND BILL.REC<39>#'R' AND BILL.REC<39>#'')
      AUDIT.REVIEW.FLAG = (BILL.REC<66>='A' AND BILL.REC<39>='R')

      IF PRO.NO[PRO.LENGTH-1,2] = 'BD' THEN BAL.DUE = 1 ELSE BAL.DUE = 0
      IF PRO.NO[PRO.LENGTH-1,2] = 'AD' THEN ADD.DUE = 1 ELSE ADD.DUE = 0
      IF PRO.NO[PRO.LENGTH-1,2] = 'CM' THEN CR.MEMO = 1 ELSE CR.MEMO = 0

      IF NOT(HOLD.FLAG OR NEVERPAY.FLAG OR DUP OR AUDIT.REVIEW.FLAG) THEN

         CAR.DIV.FLAG=0                  ; * JMK148

         IF CLIENT='00379' THEN CAR.DIV.FLAG=1     ; * JMK148
         IF CLIENT='00731' THEN CAR.DIV.FLAG=1     ; * JMK148
         IF CLIENT='00761' THEN CAR.DIV.FLAG=1     ; * JMK148
         IF CLIENT='00883' THEN CAR.DIV.FLAG=1     ; * JMK148
         IF CLIENT='00950' THEN CAR.DIV.FLAG=1     ; * JMK148
         IF CLIENT='00951' THEN CAR.DIV.FLAG=1     ; * JMK148
         IF CLIENT='00973' THEN CAR.DIV.FLAG=1     ; * JMK148
         IF CLIENT='01003' THEN CAR.DIV.FLAG=1     ; * JMK148
         IF CLIENT='01019' THEN CAR.DIV.FLAG=1     ; * JMK148
         IF CLIENT='01035' THEN CAR.DIV.FLAG=1     ; * JMK148
         IF CLIENT='01039' THEN CAR.DIV.FLAG=1     ; * JMK148
         IF CLIENT='01067' THEN CAR.DIV.FLAG=1     ; * JMK148
         IF CLIENT='01156' THEN CAR.DIV.FLAG=1     ; * JMK148
         IF CLIENT='01256' THEN CAR.DIV.FLAG=1     ; * DRF017
         IF CLIENT='01283' THEN CAR.DIV.FLAG=1     ; * DRF017
         IF CLIENT='01384' THEN CAR.DIV.FLAG=1     ; * DRF08
         IF CLIENT='01401' THEN CAR.DIV.FLAG=1     ; * JMK161
         IF CLIENT='01436' THEN CAR.DIV.FLAG=1     ; * DRF04
         IF CLIENT='01468' THEN CAR.DIV.FLAG=1     ; * DRF04
         IF CLIENT='01485' THEN CAR.DIV.FLAG=1     ; * DRF029
         IF CLIENT='01499' THEN CAR.DIV.FLAG=1     ; * JMK148
         IF CLIENT='01563' THEN CAR.DIV.FLAG=1
         IF CLIENT='01633' THEN CAR.DIV.FLAG=1     ; * JMK148
         IF CLIENT='01682' THEN CAR.DIV.FLAG=1     ; * JMK148
         IF CLIENT='01760' THEN CAR.DIV.FLAG=1
         IF CLIENT='01830' THEN CAR.DIV.FLAG=1     ; * JMK148
         IF CLIENT='01932' THEN CAR.DIV.FLAG=1
         IF CLIENT='01939' THEN CAR.DIV.FLAG=1     ; * JMK148
         IF CLIENT='01949' THEN CAR.DIV.FLAG=1     ; * JMK149
         IF CLIENT='02084' THEN CAR.DIV.FLAG=1     ; * JMK152
         IF CLIENT='02172' THEN CAR.DIV.FLAG=1     ; * DRF05
         IF CLIENT='05234' THEN CAR.DIV.FLAG=1     ; * DRF025
         IF CLIENT='06024' THEN CAR.DIV.FLAG=1
         IF CLIENT='10171' THEN CAR.DIV.FLAG=1     ; * JMK148

         DIV.PROC.FLAG=0                 ; * JMK148

         IF CLIENT='00379' THEN DIV.PROC.FLAG=1    ; * JMK148
         IF CLIENT='00666' THEN DIV.PROC.FLAG=1    ; * JMK148
         IF CLIENT='00761' THEN DIV.PROC.FLAG=1    ; * JMK148
         IF CLIENT='00869' THEN DIV.PROC.FLAG=1    ; * JMK148
         IF CLIENT='00973' THEN DIV.PROC.FLAG=1    ; * JMK148
         IF CLIENT='01003' THEN DIV.PROC.FLAG=1    ; * JMK148
         IF CLIENT="01035" THEN DIV.PROC.FLAG=1    ; * JMK148
         IF CLIENT='01039' THEN DIV.PROC.FLAG=1    ; * JMK148
         IF CLIENT='01067' THEN DIV.PROC.FLAG=1    ; * JMK148
         IF CLIENT='01156' THEN DIV.PROC.FLAG=1    ; * JMK148
         IF CLIENT='01283' THEN DIV.PROC.FLAG=1    ; * DRF017
         IF CLIENT='01256' THEN DIV.PROC.FLAG=1    ; * DRF017
         IF CLIENT='01384' THEN DIV.PROC.FLAG=1    ; * DRF08
         IF CLIENT='01401' THEN DIV.PROC.FLAG=1    ; * JMK161
         IF CLIENT='01436' THEN DIV.PROC.FLAG=1    ; * DRF04
         IF CLIENT='01468' THEN DIV.PROC.FLAG=1    ; * DRF04
         IF CLIENT='01470' THEN DIV.PROC.FLAG=1    ; * JMK148
         IF CLIENT='01485' THEN DIV.PROC.FLAG=1    ; * DRF029
         IF CLIENT='01499' THEN DIV.PROC.FLAG=1    ; * JMK148
         IF CLIENT='01529' THEN DIV.PROC.FLAG=1    ; * JMK148
         IF CLIENT='01563' THEN DIV.PROC.FLAG=1
         IF CLIENT='01592' THEN DIV.PROC.FLAG=1    ; * JMK148
         IF CLIENT='01633' THEN DIV.PROC.FLAG=1    ; * JMK148
         IF CLIENT='01635' THEN DIV.PROC.FLAG=1    ; * JMK148
         IF CLIENT='01682' THEN DIV.PROC.FLAG=1    ; * JMK148
         IF CLIENT='01760' THEN DIV.PROC.FLAG=1
         IF CLIENT='01763' THEN DIV.PROC.FLAG=1    ; * JMK148
         IF CLIENT='01830' THEN DIV.PROC.FLAG=1    ; * JMK148
         IF CLIENT='01932' THEN DIV.PROC.FLAG=1
         IF CLIENT='01939' THEN DIV.PROC.FLAG=1    ; * JMK148
         IF CLIENT='01949' THEN DIV.PROC.FLAG=1    ; * JMK149
         IF CLIENT='02084' THEN DIV.PROC.FLAG=1    ; * JMK152
         IF CLIENT='02102' THEN DIV.PROC.FLAG=1    ; * JMK156
         IF CLIENT='02172' THEN DIV.PROC.FLAG=1    ; * DRF05
         IF CLIENT='05234' THEN DIV.PROC.FLAG=1    ; * DRF025
         IF CLIENT='06024' THEN DIV.PROC.FLAG=1

         IF BANK#'V' THEN                ; * DRF026
            IF CAR.DIV.FLAG THEN         ; * JMK148
               CHECK.ID=CARRIER:"*":BILL.REC<9>
            END ELSE
               CHECK.ID=CARRIER
            END
            LOCATE CHECK.ID IN CARRIERS BY "AR" SETTING X ELSE
               CARRIERS=INSERT(CARRIERS,X;CHECK.ID)
            END

            IF DIV.PROC.FLAG THEN        ; * JMK148
               DIV.CODE.CHECK=BILL.REC<9>:BILL.REC<37>
               LOCATE DIV.CODE.CHECK IN DIV.CODE BY "AR" SETTING Z ELSE
                  DIV.CODE=INSERT(DIV.CODE,Z;DIV.CODE.CHECK)
               END
            END
         END                             ; * DRF021
      END
      IF OLD.CARRIER#CARRIER THEN
         READV TRANS.MODE FROM F.CARRIERS,CARRIER,44 ELSE TRANS.MODE = 'NULL'
         IF TRANS.MODE='' THEN TRANS.MODE='NULL'
         OLD.CARRIER=CARRIER
         READ DCLI.CAR.XREF FROM F.CLI.CAR.XREF,CLIENT THEN
            UP.ARRAY=DCLI.CAR.XREF
         END ELSE
            UP.ARRAY="*NEW*"
            DCLI.CAR.XREF=''
         END
         UP.ID='CLIENT.CARRIER.XREF*':CLIENT
         LOCATE CARRIER IN DCLI.CAR.XREF BY 'AR' SETTING POS ELSE
            INS CARRIER BEFORE DCLI.CAR.XREF<POS>
            WRITE DCLI.CAR.XREF ON F.CLI.CAR.XREF,CLIENT
            GOSUB UPDATE.UP.FILE         ; *  Only Need to Update UP if you Write
         END
      END

      BILL.DATE=BILL.REC<1>
      IOT=BILL.REC<2>
      ORIG.ZIP=BILL.REC<3>               ; * JMK17
      DEST.ZIP=BILL.REC<4>               ; * JMK17
      WEIGHT=BILL.REC<6>
      IF WEIGHT='LX' THEN WEIGHT = 1
      CARRIER.CHG=BILL.REC<7>
      ACTUAL.CHG=BILL.REC<8>
      TRUE.COST=BILL.REC<8>+BILL.REC<44>           ; * JMK108
      DIV=BILL.REC<9>
      IF DIV='' THEN                     ; * JMK32
         DIV.POS=1                       ; * JMK32
      END ELSE                           ; * JMK32
         LOCATE(DIV,DIV.LIST,1;DIV.POS;'AL') ELSE  ; * JMK32
            DIV.POS=1                    ; * JMK36
         END                             ; * JMK32
      END
      IF BANK#'V' THEN                   ; * DRF026
         IF NOT(HOLD.FLAG OR NEVERPAY.FLAG OR DUP OR AUDIT.REVIEW.FLAG) THEN     ; * JMK32
            LOCATE(CARRIER,DIV.LIST,2,DIV.POS;CPOS) ELSE     ; * JMK32
               DIV.LIST<2,DIV.POS,-1>=CARRIER      ; * JMK32
            END                          ; * JMK32
         END                             ; * JMK32
      END                                ; * DRF021
      DISC.VAR=BILL.REC<10>
      OVRCHG.VAR=BILL.REC<11>
      CONSLT.VAR=BILL.REC<12>
      PO.BOL=BILL.REC<16>                ; * JMK04
      ORIG.ST=BILL.REC<25>               ; * JMK17
      DEST.ST=BILL.REC<26>               ; * JMK17
      ORIG.CITY=BILL.REC<27>             ; * JMK17
      DEST.CITY=BILL.REC<28>             ; * JMK17
      BD.DISC=BILL.REC<34>
      BD.OVRCHG=BILL.REC<35>
      BD.CONSLT=BILL.REC<36>
      MISROUTE.AMT = BILL.REC<63>
      APRV.CARRIER=BILL.REC<69>          ; * JMK04
      READV APRV.CARRIER.NAME FROM F.CARRIERS,APRV.CARRIER,1 ELSE APRV.CARRIER.NAME='**Unknown**'    ; * JMK04
      LCC.AMT = BILL.REC<143>            ; * JMK119
      LCC.CARRIER=BILL.REC<147>          ; * JMK119
      READV LCC.CARRIER.NAME FROM F.CARRIERS,LCC.CARRIER,1 ELSE LCC.CARRIER.NAME='**Unknown**'       ; * JMK119
      VC.ID = BILL.REC<17>
      IF BILL.REC<21> # '' THEN
         IF CARRIER#'00015' THEN TRANS.MODE = BILL.REC<21>
      END

*
* Update year to date items
*
      YTD.ID=CLIENT'R%5':'*':CARRIER'R%5'
      PROCESS.BILL = 1

*
* NEVER PAY BILLS
*
      IF NEVERPAY.FLAG THEN
         IF BILL.REC<67>='' THEN
            CLIENT.YTD<48>+=1            ; * Never Pay count
            CLIENT.YTD<49>+=CARRIER.CHG  ; * Amount Not Paid
            BILL.REC<67>=END.DATE        ; * Stamp bill as "rejected" processed
            NEVERPAY.COUNT+=1            ; * Inc Current NEVERPAY COUNT
            DIV.COUNTS<1,DIV.POS>+=1     ; * JMK32
         END
         PROCESS.BILL = 0
      END

*
* DUPLICATE BILLS
*
      IF DUP THEN
         CLIENT.YTD<13>+=1
         CLIENT.YTD<14>+=CARRIER.CHG
         DUP.COUNT=DUP.COUNT+1
         DIV.COUNTS<2,DIV.POS>+=1        ; * JMK32
         PROCESS.BILL = 0
      END

*
* RELEASED FOR PAYMENT BILLS
*
      IF RELEASED.FLAG THEN
         IF BILL.REC<67>='' THEN
*
* Do not include bills that were rejected then
* later approved but were never processed
* per owen request.
*
         END ELSE
*
* Bill was rejected and processed...
*
            RELEASED.COUNT+=1            ; * Current Released Count
            DIV.COUNTS<3,DIV.POS>+=1     ; * JMK32
         END
         BILL.REC<67>=END.DATE           ; * Stamp bill as 'reject' processed
      END

*
* HOLD FOR PAYMENT BILLS
*
      IF HOLD.FLAG THEN
         IF BILL.REC<67>='' THEN
            CLIENT.YTD<44>+=1            ; * Hold Bill Count
            CLIENT.YTD<45>+=CARRIER.CHG  ; * Amount Hold for Payment
            BILL.REC<67>=END.DATE        ; * Stamp bill as 'reject' processed
            HOLD.COUNT +=1               ; * Current Hold Count
            DIV.COUNTS<4,DIV.POS>+=1     ; * JMK32
         END
         PROCESS.BILL = 0
      END
      IF AUDIT.REVIEW.FLAG THEN
         AUDIT.REVIEW.COUNT +=1
         PROCESS.BILL = 0
      END

*
* PROCESS BILL FOR PAYMENT
*
      IF PROCESS.BILL THEN
         IF CLIENT='00850' THEN          ; * Darling ; * JMK72
            BOL=BILL.REC<16,1>           ; * JMK72
            IF BOL#'' AND BILL.REC<2>='O' THEN     ; * JMK72
               READ BOL.DA FROM F.BOL,BOL ELSE BOL.DA=''     ; * JMK72

               UP.ID='FB.BOL.CRX,00850*':BOL       ; * JMK72
               IF BOL.DA='' THEN UP.ARRAY='*NEW*' ELSE UP.ARRAY=BOL.DA           ; * JMK72
               GOSUB UPDATE.UP.FILE      ; * JMK72

               TRUE.COST=BILL.REC<8>+BILL.REC<44>  ; * JMK72
               UPDATE.DATE=CLIENT.REC<82>+1        ; * Last processed + 1 day ; * JMK72
               IF UPDATE.DATE<DATE() THEN          ; * JMK72
                  UPDATE.DATE=DATE()     ; * JMK72
               END                       ; * JMK72
               BOL.DA<3>+=BILL.REC<8>    ; * flat total amount ; * JMK72
               BOL.DA<4>=UPDATE.DATE     ; * flat last date updated ; * JMK72
               BOL.DA<5,-1>=BILL.REC<8>  ; * mv amount by pro ; * JMK72
               BOL.DA<6,-1>=PRO.NO       ; * mv pro ; * JMK72
               BOL.DA<7,-1>=BILL.REC<1>  ; * mv date of pro ; * JMK72
               WRITE BOL.DA ON F.BOL,BOL           ; * JMK72
            END                          ; * JMK72
         END                             ; * JMK72
         IF CLIENT='01057' THEN          ; * H & K Dallas
            BOL=BILL.REC<16,1>
            IF BOL#'' AND BILL.REC<2>='O' THEN
               IF BOL[LEN(BOL)-2,1]#'-' THEN BOL:='-00'
               READ BOL.DA FROM F.BOL,BOL ELSE BOL.DA=''

               UP.ID='FB.BOL.CRX,01057*':BOL
               IF BOL.DA='' THEN UP.ARRAY='*NEW*' ELSE UP.ARRAY=BOL.DA
               GOSUB UPDATE.UP.FILE

               TRUE.COST=BILL.REC<8>+BILL.REC<44>
               UPDATE.DATE=CLIENT.REC<82>+1        ; * Last processed + 1 day
               IF UPDATE.DATE<DATE() THEN
                  UPDATE.DATE=DATE()
               END
               BOL.DA<3>+=TRUE.COST      ; * flat total amount
               BOL.DA<4>=UPDATE.DATE     ; * flat last date updated
               BOL.DA<5,-1>=TRUE.COST    ; * mv amount by pro
               BOL.DA<6,-1>=PRO.NO       ; * mv pro
               BOL.DA<7,-1>=BILL.REC<1>  ; * mv date of pro
               WRITE BOL.DA ON F.BOL,BOL
            END
         END
         IF CLIENT='01344' THEN          ; * Swedish Match ; * JMK37
            BOL=BILL.REC<16,1>           ; * JMK37

            IF BOL#'' THEN               ; * JMK37 ; * JMK54
               READ BOL.DA FROM F.BOL,BOL ELSE BOL.DA=''     ; * JMK37

               UP.ID='FB.BOL.CRX,01344*':BOL       ; * JMK37
               IF BOL.DA='' THEN UP.ARRAY='*NEW*' ELSE UP.ARRAY=BOL.DA           ; * JMK37
               GOSUB UPDATE.UP.FILE      ; * JMK37

               TRUE.COST=BILL.REC<8>+BILL.REC<44>  ; * JMK37
               UPDATE.DATE=CLIENT.REC<82>+1        ; * Last processed + 1 day ; * JMK37
               IF UPDATE.DATE<DATE() THEN          ; * JMK37
                  UPDATE.DATE=DATE()     ; * JMK37
               END                       ; * JMK37
               BOL.DA<3>+=TRUE.COST      ; * flat total amount ; * JMK37
               BOL.DA<4>=UPDATE.DATE     ; * flat last date updated ; * JMK37
               BOL.DA<5,-1>=TRUE.COST    ; * mv amount by pro ; * JMK37
               BOL.DA<6,-1>=PRO.NO       ; * mv pro ; * JMK37
               BOL.DA<7,-1>=BILL.REC<1>  ; * mv date of pro ; * JMK37
               WRITE BOL.DA ON F.BOL,BOL           ; * JMK37
            END                          ; * JMK37
         END                             ; * JMK37
         IF CLIENT='01311' THEN          ; * Dietrich Industries ; * JMK47
            BOL=BILL.REC<16,1>           ; * JMK47
            IF BOL#'' AND BILL.REC<2>='O' THEN     ; * JMK47
               READ BOL.DA FROM F.BOL,BOL ELSE BOL.DA=''     ; * JMK47

               UP.ID='FB.BOL.CRX,01311*':BOL       ; * JMK47
               IF BOL.DA='' THEN UP.ARRAY='*NEW*' ELSE UP.ARRAY=BOL.DA           ; * JMK47
               GOSUB UPDATE.UP.FILE      ; * JMK47

               TRUE.COST=BILL.REC<8>+BILL.REC<44>  ; * JMK47
               UPDATE.DATE=CLIENT.REC<82>+1        ; * Last processed + 1 day ; * JMK47
               IF UPDATE.DATE<DATE() THEN          ; * JMK47
                  UPDATE.DATE=DATE()     ; * JMK47
               END                       ; * JMK47
               BOL.DA<3>+=TRUE.COST      ; * flat total amount ; * JMK47
               BOL.DA<4>=UPDATE.DATE     ; * flat last date updated ; * JMK47
               BOL.DA<5,-1>=TRUE.COST    ; * mv amount by pro ; * JMK47
               BOL.DA<6,-1>=PRO.NO       ; * mv pro ; * JMK47
               BOL.DA<7,-1>=BILL.REC<1>  ; * mv date of pro ; * JMK47
               WRITE BOL.DA ON F.BOL,BOL           ; * JMK47
            END                          ; * JMK47
         END                             ; * JMK47
         IF CLIENT='01433' THEN          ; * Darling ; * JMK72
            BOL=BILL.REC<16,1>           ; * JMK72
            IF BOL#'' AND BILL.REC<2>='O' THEN     ; * JMK72
               READ BOL.DA FROM F.BOL,BOL ELSE BOL.DA=''     ; * JMK72

               UP.ID='FB.BOL.CRX,01433*':BOL       ; * JMK72
               IF BOL.DA='' THEN UP.ARRAY='*NEW*' ELSE UP.ARRAY=BOL.DA           ; * JMK72
               GOSUB UPDATE.UP.FILE      ; * JMK72

               TRUE.COST=BILL.REC<8>+BILL.REC<44>  ; * JMK72
               UPDATE.DATE=CLIENT.REC<82>+1        ; * Last processed + 1 day ; * JMK72
               IF UPDATE.DATE<DATE() THEN          ; * JMK72
                  UPDATE.DATE=DATE()     ; * JMK72
               END                       ; * JMK72
               BOL.DA<3>+=BILL.REC<8>    ; * flat total amount ; * JMK72
               BOL.DA<4>=UPDATE.DATE     ; * flat last date updated ; * JMK72
               BOL.DA<5,-1>=BILL.REC<8>  ; * mv amount by pro ; * JMK72
               BOL.DA<6,-1>=PRO.NO       ; * mv pro ; * JMK72
               BOL.DA<7,-1>=BILL.REC<1>  ; * mv date of pro ; * JMK72
               WRITE BOL.DA ON F.BOL,BOL           ; * JMK72
            END                          ; * JMK72
         END                             ; * JMK72
         IF BAL.DUE THEN                 ; * JMK126
            IF PRO.NO[LEN(PRO.NO)-5,2] = 'BD' THEN           ; * JMK126
               LOOKUP.DATE=DATE()        ; * JMK126
               LOCATE LOOKUP.DATE IN CLIENT.REC(84)<1> BY 'AR' SETTING DATE.POS ELSE DATE.POS=DATE.POS-1       ; * JMK126
               IF DATE.POS=0 THEN DATE.POS=1       ; * JMK126

               BD.ID = CARRIER:'*':PRO.NO[1,LEN(PRO.NO)-6]:"*":DUP     ; * JMK126
               READ OLD.OVC.REC FROM F.HIST,BD.ID ELSE OLD.OVC.REC=''  ; * JMK126
               OLD.OVC.COM=ABS(OLD.OVC.REC<43>)    ; * JMK126

               BD.ID = CARRIER:'*':PRO.NO[1,LEN(PRO.NO)-4]:"*":DUP     ; * JMK126
               READ OLD.OVC.REC FROM F.HIST,BD.ID ELSE OLD.OVC.REC=''  ; * JMK126
               OLD.OVC.COM-=ABS(OLD.OVC.REC<43>)   ; * JMK126

               BD.ID = CARRIER:'*':PRO.NO[1,LEN(PRO.NO)-2]:"*":DUP     ; * JMK126
               READ OLD.OVC.REC FROM F.HIST,BD.ID ELSE OLD.OVC.REC=''  ; * JMK126
               OLD.OVC.COM-=ABS(OLD.OVC.REC<43>)   ; * JMK126
            END ELSE                     ; * JMK126
               IF PRO.NO[LEN(PRO.NO)-3,2] = 'BD' THEN        ; * JMK126
                  LOOKUP.DATE=DATE()     ; * JMK126
                  LOCATE LOOKUP.DATE IN CLIENT.REC(84)<1> BY 'AR' SETTING DATE.POS ELSE DATE.POS=DATE.POS-1    ; * JMK126
                  IF DATE.POS=0 THEN DATE.POS=1    ; * JMK126

                  BD.ID = CARRIER:'*':PRO.NO[1,LEN(PRO.NO)-4]:"*":DUP  ; * JMK126
                  READ OLD.OVC.REC FROM F.HIST,BD.ID ELSE OLD.OVC.REC=''         ; * JMK126
                  OLD.OVC.COM=ABS(OLD.OVC.REC<43>)           ; * JMK126

                  BD.ID = CARRIER:'*':PRO.NO[1,LEN(PRO.NO)-2]:"*":DUP  ; * JMK126
                  READ OLD.OVC.REC FROM F.HIST,BD.ID ELSE OLD.OVC.REC=''         ; * JMK126
                  OLD.OVC.COM-=ABS(OLD.OVC.REC<43>)          ; * JMK126

               END ELSE                  ; * JMK126
                  BD.ID = CARRIER:'*':PRO.NO[1,LEN(PRO.NO)-2]:"*":DUP  ; * JMK126
                  READ OLD.OVC.REC FROM F.HIST,BD.ID ELSE OLD.OVC.REC=''         ; * JMK126
                  OLD.OVC.COM=ABS(OLD.OVC.REC<43>)           ; * JMK126

               END                       ; * JMK126
            END                          ; * JMK126
         END                             ; * JMK126
         VIN=BILL.ID
         VIN<2>=CLIENT.REC<84>
         VIN<3>=CLIENT.REC<34>
         VIN<4>=CLIENT.REC<33>
         VIN<5>=CLIENT.REC<85>
         VIN<6>=CLIENT.REC<88>
         VIN<7>=CARRIER
         VIN<8>=CLIENT
         VIN<9>=USER
         VIN<10>=CLIENT.REC<131>
         VIN<11>=CLIENT.REC<177>         ; * JMK12
         VIN<12>=CLIENT.REC<178>         ; * JMK12
         VIN<13>=CLIENT.REC<187>         ; * JMK22
         VIN<14>=CLIENT.REC<200>         ; * JMK34
         VIN<15>=CLIENT.REC<208>         ; * JMK51
         VIN<16>=CLIENT.REC<209>         ; * JMK51
         VIN<17>=CLIENT.REC<210>         ; * JMK51
         VIN<18>=CLIENT.REC<211>         ; * JMK51
         VIN<19>=CLIENT.REC<212>         ; * JMK51
         VIN<20>=CLIENT.REC<213>         ; * JMK51
         VIN<21>=CLIENT.REC<214>         ; * JMK57
         VIN<22>=CLIENT.REC<215>         ; * JMK57
         VIN<23>=CLIENT.REC<216>         ; * JMK57
         VIN<24>=CLIENT.REC<217>         ; * JMK57
         VIN<25>=CLIENT.REC<218>         ; * JMK57
         VIN<26>=CLIENT.REC<219>         ; * JMK57
         IF BAL.DUE THEN                 ; * JMK126
            VIN<27>=OLD.OVC.COM          ; * JMK126
         END                             ; * JMK126
         VIN<28>=CLIENT.REC<268>         ; * JMK145
         BILL.REC<37>=END.DATE           ; * To fool Date selection for Charges
         CALL CALC.COMMISSION(BILL.REC,VIN,VOUT)
         DISCOUNT.COMM=VOUT<1>
         OVERCHG.COMM=VOUT<2>
         CONSULTING.COMM=VOUT<3>
         EXPENSE.DIST.COMM=VOUT<4>
         MGMT.SVC.COMM=VOUT<5>           ; * JMK12
         MISR.CONS.COMM=VOUT<6>          ; * JMK39
         OVERCHG.PERC=VOUT<7>            ; * JMK113
         LOG.COMM.PERC = VOUT<8>         ; * NPR019
         IF CLIENT # "01825" THEN
            BILL.REC<32>=EXPENSE.DIST.COMM
         END ELSE
*DF            IF CARRIER # "00041" THEN
            BILL.REC<32>=EXPENSE.DIST.COMM
*DF            END
         END
         BILL.REC<42>=DISCOUNT.COMM
         BILL.REC<43>=OVERCHG.COMM
         BILL.REC<44>=CONSULTING.COMM
         BILL.REC<165>=MGMT.SVC.COMM     ; * JMK12
         BILL.REC<203>=MISR.CONS.COMM    ; * JMK39 - MISR COMM FOR MISR VARIANCES
         COMMISSION=DISCOUNT.COMM+OVERCHG.COMM+CONSULTING.COMM+MGMT.SVC.COMM
         TRUE.COST=BILL.REC<8>+BILL.REC<44>        ; * JMK108

         L.BILL.DATE = ORIG.BILL.REC<1>
         MISROUTE.AMOUNT = ORIG.BILL.REC<63>
         BL.CONSULTING.COMM = ORIG.BILL.REC<239,1>           ; * New field added to keep track of Logistics/Consulting comm changes since bill was created

         LCC.CAPTURE=1
         PRO.NO=FIELD(BILL.ID,'*',2)
         PRO.LENGTH=LEN(PRO.NO)
         DUP=FIELD(BILL.ID,'*',3)
         IF PRO.NO[PRO.LENGTH-1,2] = 'BD' THEN BAL.DUE = 1 ELSE BAL.DUE = 0
         IF PRO.NO[PRO.LENGTH-1,2] = 'AD' THEN ADD.DUE = 1 ELSE ADD.DUE = 0
         IF PRO.NO[PRO.LENGTH-1,2] = 'CM' THEN CR.MEMO = 1 ELSE CR.MEMO = 0
         NEVERPAY.FLAG = (ORIG.BILL.REC<66>='N' AND ORIG.BILL.REC<39>='R')
         HOLD.FLAG = (ORIG.BILL.REC<66>#'N' AND ORIG.BILL.REC<66>#'A' AND ORIG.BILL.REC<39>='R')
         AUDIT.REVIEW.FLAG = (ORIG.BILL.REC<66>='A' AND ORIG.BILL.REC<39>='R')
         IF MISROUTE.AMOUNT+0#0 THEN LCC.CAPTURE=0
         IF DUP THEN LCC.CAPTURE=0
         IF HOLD.FLAG THEN LCC.CAPTURE=0
         IF NEVERPAY.FLAG THEN LCC.CAPTURE=0
         IF AUDIT.REVIEW.FLAG THEN LCC.CAPTURE=0
         IF CLIENT[1,2]='99' THEN LCC.CAPTURE=0
         IF ORIG.BILL.REC<63>+0#0 THEN LCC.CAPTURE=0
         IF ORIG.BILL.REC<21>#1 THEN LCC.CAPTURE=0
         IF CLIENT.REC<93>#'Y' THEN LCC.CAPTURE=0

         IF CLIENT.REC<93>="Y" THEN
            IF CLIENT.REC<149>#'' THEN
               IF BILL.DATE<CLIENT.REC<149> THEN LCC.CAPTURE=0
            END
         END

         IF CLIENT.REC<94>#'Y' THEN LCC.CAPTURE=0
         IF ORIG.BILL.REC<2>='T' THEN LCC.CAPTURE=0
         IF ADD.DUE OR BAL.DUE THEN LCC.CAPTURE=0

         IF BL.CONSULTING.COMM = "" THEN LCC.CAPTURE = 0

         LCC.CAPTURE = 0                 ; *NPR  Set switch to off  - 04/26/11.

         IF LCC.CAPTURE AND BL.CONSULTING.COMM NE LOG.COMM.PERC AND AUDIT.FILES.OPEN THEN
            ID.NP.TEST = BILL.ID:"_BEFORE_LCC"     ; * NPR Testing
            GET.LCC=1
            IF ORIG.BILL.REC<21>#'1' THEN GET.LCC=0
            IF ORIG.BILL.REC<74>='' THEN GET.LCC=0
            IF ORIG.BILL.REC<75>='' THEN GET.LCC=0
            IF ORIG.BILL.REC<119>='1' THEN GET.LCC=0

            IF GET.LCC THEN
               GCVIN=''
               GCVIN<1>=CLIENT
               GCVIN<2>=BILL.ID
               GCVIN<3>=CLIENT
               GCVOUT=''
               CARRIER.ARRAY=''
               CALL FIND.GOOD.CARRIERS.SUB.V2(GCVIN,GCVOUT,ORIG.BILL.REC,CARRIER.ARRAY,F.CLIENTS,F.CARRIERS,F.NFSC,F.PCIN,F.PCOUT,F.TABLES,F.AUDIT,F.AUDIT.TABLES,F.AUDIT.ZIPS,F.ZIP.LINE.ITEM)
               LCC.AMOUNT=CARRIER.ARRAY<1,1>
               LCC.CARRIER=CARRIER.ARRAY<2,1>
               TRUE.COST=ORIG.BILL.REC<8>+ORIG.BILL.REC<44>
               LOCATE CARRIER IN CARRIER.ARRAY<2> SETTING LPOS THEN
                  IF LCC.AMOUNT GE TRUE.COST OR LCC.CARRIER=CARRIER THEN
                     LCC.AMOUNT=''
                     LCC.CARRIER=''
                  END
                  LCC.ARRAY=CARRIER.ARRAY
               END ELSE
                  LCC.AMOUNT=''
                  LCC.CARRIER=''
                  LCC.ARRAY=''
               END
               IF LCC.AMOUNT+0=0 ELSE
                  READV LCC.NAME FROM F.CARRIERS,LCC.CARRIER,1 ELSE LCC.NAME='Unknown Carrier'
               END
            END ELSE
               LCC.AMOUNT=''
               LCC.CARRIER=''
               LCC.ARRAY=''
            END
            LCC.OVR.AMOUNT=LCC.AMOUNT
            LCC.OVR.CARRIER=LCC.CARRIER
            IF CLIENT='01457' OR CLIENT='01529' THEN

               VC.ID = ORIG.BILL.REC<17>
               VC.OVERRIDE = ''
               IF VC.ID #'' THEN
                  READ VC.REC FROM F.VEND.CUST,VC.ID ELSE VC.REC = ''
                  VC.OVERRIDE=VC.REC<10>
               END

               IF LCC.AMOUNT+0#0 AND VC.OVERRIDE='Y' THEN
                  LCC.AMOUNT=''
                  LCC.CARRIER=''
                  LCC.NAME=''
               END
            END

            LCC.BILL.REC = BILL.REC      ; * NPR Remove LCC.BILL.REC and update BILL.REC

            LCC.BILL.REC<143>=LCC.AMOUNT
            LCC.BILL.REC<145>=LCC.ARRAY<1>
            LCC.BILL.REC<146>=LCC.ARRAY<2>
            LCC.BILL.REC<147>=LCC.CARRIER
            LCC.BILL.REC<143>=LCC.AMOUNT
            LCC.BILL.REC<145>=LCC.ARRAY<1>
            LCC.BILL.REC<146>=LCC.ARRAY<2>
            LCC.BILL.REC<147>=LCC.CARRIER
            IF LCC.ARRAY<24>#'' THEN
               LCC.BILL.REC<221>=LCC.ARRAY<24>
            END
            LCC.BILL.REC<224>=LCC.ARRAY<7>
            ID.NP.TEST = BILL.ID:"_AFTER_LCC"      ; * NPR Testing
         END
*
* Update invoice transaction
*
         LOCATE TRANS.MODE IN DARRAY<1> BY 'AR' SETTING TRANS.POS ELSE
            INS TRANS.MODE BEFORE DARRAY<1,TRANS.POS>
            FOR J = 2 TO 24              ; * JMK12 ; * JMK19 ; * JMK34 ; * JMK90
               INS 0 BEFORE DARRAY<J,TRANS.POS>
            NEXT J

         END
         IF DIV.DARRAY<1,DIV.POS,TRANS.POS> NE TRANS.MODE THEN         ; * RLM002
            INS TRANS.MODE BEFORE DIV.DARRAY<1,DIV.POS,TRANS.POS>      ; * JMK32 ; * JMKXXX
            FOR J = 2 TO 24              ; * RLM002
               INS 0 BEFORE DIV.DARRAY<J,DIV.POS,TRANS.POS>  ; * RLM002
            NEXT J                       ; * RLM002
         END                             ; * RLM002
         INVOICE<1>=INVOICE<1>+ACTUAL.CHG
         DIV.INVOICE<1,DIV.POS>+=ACTUAL.CHG        ; * JMK32
         EDI.PPR='PPR'                   ; * JMK45
         IF BILL.REC<88>#'' OR BILL.REC<53>[1,12]='EBILL.IMPORT' THEN  ; * JMK45
            IF BILL.REC<295>='' THEN     ; * DRF045
               EDI.PPR='EDI'             ; * JMK45
            END                          ; * DRF045
         END                             ; * JMK45

         IF EDI.PPR='EDI' THEN           ; * JMK45
            BEGIN CASE                   ; * JMK91
               CASE CLIENT='01148' OR CLIENT='01371' OR CLIENT='01398' OR CLIENT='01478' OR CLIENT='01539'     ; * JMK91 ; * JMK92
                  IF CARRIER='00015' OR CARRIER='01075' THEN           ; * JMK91
                     DARRAY<12,TRANS.POS>=DARRAY<12,TRANS.POS>+ACTUAL.CHG        ; * JMK91
                     DIV.DARRAY<12,DIV.POS,TRANS.POS>+=ACTUAL.CHG      ; * JMK91

                     IF BANK.FB.TYPE#'F' THEN      ; * JMK91 ; * JMK128
                        DARRAY<23,TRANS.POS>+=1    ; * JMK91
                        DARRAY<24,TRANS.POS>+=ACTUAL.CHG     ; * JMK91
                        DIV.DARRAY<23,DIV.POS,TRANS.POS>+=1  ; * JMK91
                        DIV.DARRAY<24,DIV.POS,TRANS.POS>+=ACTUAL.CHG   ; * JMK91
                     END                 ; * JMK91
                  END ELSE               ; * JMK91
                     DARRAY<6,TRANS.POS>=DARRAY<6,TRANS.POS>+ACTUAL.CHG          ; * JMK91
                     DIV.DARRAY<6,DIV.POS,TRANS.POS>+=ACTUAL.CHG       ; * JMK91

                     IF BANK.FB.TYPE#'F' THEN      ; * JMK91 ; * JMK128
                        DARRAY<21,TRANS.POS>+=1    ; * JMK91
                        DARRAY<22,TRANS.POS>+=ACTUAL.CHG     ; * JMK91
                        DIV.DARRAY<21,DIV.POS,TRANS.POS>+=1  ; * JMK91
                        DIV.DARRAY<22,DIV.POS,TRANS.POS>+=ACTUAL.CHG   ; * JMK91
                     END                 ; * JMK91
                  END                    ; * JMK91
               CASE CLIENT='01342' OR CLIENT='05654' OR CLIENT='06006' OR CLIENT='06007'   ; * DRF027    ; * DRF030
                  IF CARRIER='00015' OR CARRIER='01075' OR CARRIER='00041' THEN  ; * JMK91     ; * DRF027
                     DARRAY<12,TRANS.POS>=DARRAY<12,TRANS.POS>+ACTUAL.CHG        ; * JMK91     ; * DRF027
                     DIV.DARRAY<12,DIV.POS,TRANS.POS>+=ACTUAL.CHG      ; * JMK91     ; * DRF027

                     IF BANK.FB.TYPE#'F' THEN      ; * JMK91 ; * JMK128     ; * DRF027
                        DARRAY<23,TRANS.POS>+=1    ; * JMK91     ; * DRF027
                        DARRAY<24,TRANS.POS>+=ACTUAL.CHG     ; * JMK91     ; * DRF027
                        DIV.DARRAY<23,DIV.POS,TRANS.POS>+=1  ; * JMK91     ; * DRF027
                        DIV.DARRAY<24,DIV.POS,TRANS.POS>+=ACTUAL.CHG   ; * JMK91     ; * DRF027
                     END                 ; * JMK91     ; * DRF027
                  END ELSE               ; * JMK91     ; * DRF027
                     DARRAY<6,TRANS.POS>=DARRAY<6,TRANS.POS>+ACTUAL.CHG          ; * JMK91     ; * DRF027
                     DIV.DARRAY<6,DIV.POS,TRANS.POS>+=ACTUAL.CHG       ; * JMK91     ; * DRF027

                     IF BANK.FB.TYPE#'F' THEN      ; * JMK91 ; * JMK128     ; * DRF027
                        DARRAY<21,TRANS.POS>+=1    ; * JMK91     ; * DRF027
                        DARRAY<22,TRANS.POS>+=ACTUAL.CHG     ; * JMK91     ; * DRF027
                        DIV.DARRAY<21,DIV.POS,TRANS.POS>+=1  ; * JMK91     ; * DRF027
                        DIV.DARRAY<22,DIV.POS,TRANS.POS>+=ACTUAL.CHG   ; * JMK91     ; * DRF027
                     END                 ; * JMK91     ; * DRF027
                  END                    ; * JMK91     ; * DRF027
               CASE CLIENT='10356' OR CLIENT='05484'         ; * JMK91
                  IF CARRIER='00015' OR CARRIER='00365' OR CARRIER='01075' OR CARRIER='00041' OR CARRIER='00143' OR CARRIER='00044' THEN     ; * JMK76
                     DARRAY<12,TRANS.POS>=DARRAY<12,TRANS.POS>+ACTUAL.CHG
                     DIV.DARRAY<12,DIV.POS,TRANS.POS>+=ACTUAL.CHG      ; * JMK32

                     IF BANK.FB.TYPE#'F' THEN      ; * JMK91 ; * JMK128
                        DARRAY<23,TRANS.POS>+=1    ; * JMK90
                        DARRAY<24,TRANS.POS>+=ACTUAL.CHG     ; * JMK90
                        DIV.DARRAY<23,DIV.POS,TRANS.POS>+=1  ; * JMK90
                        DIV.DARRAY<24,DIV.POS,TRANS.POS>+=ACTUAL.CHG   ; * JMK90
                     END                 ; * JMK90
                  END ELSE
                     DARRAY<6,TRANS.POS>=DARRAY<6,TRANS.POS>+ACTUAL.CHG
                     DIV.DARRAY<6,DIV.POS,TRANS.POS>+=ACTUAL.CHG       ; * JMK32

                     IF BANK.FB.TYPE#'F' THEN      ; * JMK91 ; * JMK128
                        DARRAY<21,TRANS.POS>+=1    ; * JMK90
                        DARRAY<22,TRANS.POS>+=ACTUAL.CHG     ; * JMK90
                        DIV.DARRAY<21,DIV.POS,TRANS.POS>+=1  ; * JMK90
                        DIV.DARRAY<22,DIV.POS,TRANS.POS>+=ACTUAL.CHG   ; * JMK90
                     END                 ; * JMK90
                  END
               CASE 1                    ; * JMK91
                  IF CARRIER='01075' OR CARRIER='00041' THEN           ; * JMK76
                     DARRAY<12,TRANS.POS>=DARRAY<12,TRANS.POS>+ACTUAL.CHG
                     DIV.DARRAY<12,DIV.POS,TRANS.POS>+=ACTUAL.CHG      ; * JMK32

                     IF BANK.FB.TYPE#'F' THEN      ; * JMK91 ; * JMK128
                        DARRAY<23,TRANS.POS>+=1    ; * JMK90
                        DARRAY<24,TRANS.POS>+=ACTUAL.CHG     ; * JMK90
                        DIV.DARRAY<23,DIV.POS,TRANS.POS>+=1  ; * JMK90
                        DIV.DARRAY<224,DIV.POS,TRANS.POS>+=ACTUAL.CHG  ; * JMK90
                     END                 ; * JMK90
                  END ELSE
                     DARRAY<6,TRANS.POS>=DARRAY<6,TRANS.POS>+ACTUAL.CHG
                     DIV.DARRAY<6,DIV.POS,TRANS.POS>+=ACTUAL.CHG       ; * JMK32

                     IF BANK.FB.TYPE#'F' THEN      ; * JMK91 ; * JMK128
                        DARRAY<21,TRANS.POS>+=1    ; * JMK90
                        DARRAY<22,TRANS.POS>+=ACTUAL.CHG     ; * JMK90
                        DIV.DARRAY<21,DIV.POS,TRANS.POS>+=1  ; * JMK90
                        DIV.DARRAY<22,DIV.POS,TRANS.POS>+=ACTUAL.CHG   ; * JMK90
                     END                 ; * JMK90
                  END
            END CASE                     ; * JMK91
         END ELSE
            DARRAY<2,TRANS.POS>=DARRAY<2,TRANS.POS>+ACTUAL.CHG
            DIV.DARRAY<2,DIV.POS,TRANS.POS>+=ACTUAL.CHG      ; * JMK32
            IF BANK.FB.TYPE#'F' THEN     ; * JMK91 ; * JMK128
               DARRAY<19,TRANS.POS>+=1   ; * JMK90
               DARRAY<20,TRANS.POS>+=ACTUAL.CHG    ; * JMK90
               DIV.DARRAY<19,DIV.POS,TRANS.POS>+=1           ; * JMK90
               DIV.DARRAY<20,DIV.POS,TRANS.POS>+=ACTUAL.CHG  ; * JMK90
            END                          ; * JMK90
         END
         BEGIN CASE                      ; * JMK19
            CASE CARRIER='00041'         ; * JMK19
*
* Seperate UPS from Regular Overcharges
*
               IF NOT(BAL.DUE) THEN
                  DARRAY<10,TRANS.POS>=DARRAY<10,TRANS.POS>+OVRCHG.VAR
                  DIV.DARRAY<10,DIV.POS,TRANS.POS>+=OVRCHG.VAR         ; * JMK32
               END ELSE
                  DARRAY<10,TRANS.POS>=DARRAY<10,TRANS.POS>+ACTUAL.CHG+OVRCHG.VAR
                  DIV.DARRAY<10,DIV.POS,TRANS.POS>+=OVRCHG.VAR         ; * JMK32
               END
               INVOICE<9>=INVOICE<9>+OVERCHG.COMM
               DIV.INVOICE<9,DIV.POS>+=OVERCHG.COMM          ; * JMK32
               DARRAY<11,TRANS.POS>=DARRAY<11,TRANS.POS>+OVERCHG.COMM
               DIV.DARRAY<11,DIV.POS,TRANS.POS>+=OVERCHG.COMM          ; * JMK32

               IF ABS(OVRCHG.VAR+0)>1 AND OVERCHG.PERC+0=0 THEN        ; * JMK159

                  UPS.BLOCK=1            ; * JMK159

                  IF CLIENT='00852' THEN UPS.BLOCK=0         ; * JMK176
                  IF CLIENT='00726' THEN UPS.BLOCK=0
                  IF CLIENT='00866' THEN UPS.BLOCK=0         ; * JMK159
                  IF CLIENT='01015' THEN UPS.BLOCK=0
                  IF CLIENT='01057' THEN UPS.BLOCK=0
                  IF CLIENT='01078' THEN UPS.BLOCK=0         ; * JMK159
                  IF CLIENT='01171' THEN UPS.BLOCK=0         ; * DRF017
                  IF CLIENT='01194' THEN UPS.BLOCK=0         ; * JMK@@@
                  IF CLIENT='01241' THEN UPS.BLOCK=0         ; * JMK165
                  IF CLIENT='01339' THEN UPS.BLOCK=0
                  IF CLIENT='01352' THEN UPS.BLOCK=0         ; * JMK159
                  IF CLIENT='01567' THEN UPS.BLOCK=0         ; * DRF 09/01/17 per email from Cynthia
                  IF CLIENT='01633' THEN UPS.BLOCK=0
                  IF CLIENT='01670' THEN UPS.BLOCK=0         ; * JMK159
                  IF CLIENT='01729' THEN UPS.BLOCK=0
                  IF CLIENT='01785' THEN UPS.BLOCK=0         ; * New contract per Mary added 05/10/17
                  IF CLIENT='01820' THEN UPS.BLOCK=0
                  IF CLIENT='01825' THEN UPS.BLOCK=0         ; * per Mary added 05/04/20
                  IF CLIENT='01987' THEN UPS.BLOCK=0         ; * New contract per Cynthia added 09/11/17 - DRF
                  IF CLIENT='02038' THEN UPS.BLOCK=0
                  IF CLIENT='02050' THEN UPS.BLOCK=0
                  IF CLIENT='02053' THEN UPS.BLOCK=0
                  IF CLIENT='02069' THEN UPS.BLOCK=0         ; * JMK159
                  IF CLIENT='02070' THEN UPS.BLOCK=0
                  IF CLIENT='02094' THEN UPS.BLOCK=0
                  IF CLIENT='02134' THEN UPS.BLOCK=0         ; * DRF016
                  IF CLIENT='02135' THEN UPS.BLOCK=0
                  IF CLIENT='05016' THEN UPS.BLOCK=0         ; * JMK166
                  IF CLIENT='05026' THEN UPS.BLOCK=0         ; * JMK166
                  IF CLIENT='05027' THEN UPS.BLOCK=0         ; * JMK166
                  IF CLIENT='05028' THEN UPS.BLOCK=0         ; * JMK166
                  IF CLIENT='05029' THEN UPS.BLOCK=0         ; * JMK166
                  IF CLIENT='05030' THEN UPS.BLOCK=0         ; * JMK166
                  IF CLIENT='05031' THEN UPS.BLOCK=0         ; * JMK166
                  IF CLIENT='05032' THEN UPS.BLOCK=0         ; * JMK166
                  IF CLIENT='05033' THEN UPS.BLOCK=0         ; * JMK166
                  IF CLIENT='05034' THEN UPS.BLOCK=0         ; * JMK166
                  IF CLIENT='05035' THEN UPS.BLOCK=0         ; * JMK166
                  IF CLIENT='05036' THEN UPS.BLOCK=0         ; * JMK166
                  IF CLIENT='05037' THEN UPS.BLOCK=0         ; * JMK166
                  IF CLIENT='05038' THEN UPS.BLOCK=0         ; * JMK166
                  IF CLIENT='05039' THEN UPS.BLOCK=0         ; * JMK166
                  IF CLIENT='05040' THEN UPS.BLOCK=0         ; * JMK166
                  IF CLIENT='05041' THEN UPS.BLOCK=0         ; * JMK166
                  IF CLIENT='05042' THEN UPS.BLOCK=0         ; * JMK166
                  IF CLIENT='05043' THEN UPS.BLOCK=0         ; * JMK166
                  IF CLIENT='05044' THEN UPS.BLOCK=0         ; * JMK166
                  IF CLIENT='05045' THEN UPS.BLOCK=0
                  IF CLIENT='05046' THEN UPS.BLOCK=0         ; * JMK166
                  IF CLIENT='05047' THEN UPS.BLOCK=0         ; * JMK166
                  IF CLIENT='05048' THEN UPS.BLOCK=0         ; * JMK166
                  IF CLIENT='05049' THEN UPS.BLOCK=0         ; * JMK166
                  IF CLIENT='05233' THEN UPS.BLOCK=0         ; * DRF014
                  IF CLIENT='05352' THEN UPS.BLOCK=0
                  IF CLIENT='05353' THEN UPS.BLOCK=0
                  IF CLIENT='05354' THEN UPS.BLOCK=0
                  IF CLIENT='05452' THEN UPS.BLOCK=0
                  IF CLIENT='05469' THEN UPS.BLOCK=0
                  IF CLIENT='05500' THEN UPS.BLOCK=0
                  IF CLIENT='05549' THEN UPS.BLOCK=0
                  IF CLIENT='05660' THEN UPS.BLOCK=0
                  IF CLIENT='05788' THEN UPS.BLOCK=0
                  IF CLIENT='10356' THEN UPS.BLOCK=0         ; * JMK159
                  IF CLIENT='30034' THEN UPS.BLOCK=0

                  IF USER#'MARY' AND USER#'WPARDUE' AND USER#'LCOOK' AND USER#'CDUNGAN' AND USER#'DAVID' AND USER#'CMCKEEVER' AND USER#'RSIMMONS' AND USER#'PHAYES' AND USER#'KJACKSON' AND USER#'LNJOHNSON' THEN UPS.BLOCK=1          ; * JMK56 Added Shannon 1/21/11 DRF ; * JMK159 ; * DRF12

                  IF UPS.BLOCK AND CMD.PROCESS=0 THEN        ; * JMK56 ; * JMK157
                     CALL ELINE('Client ':CLIENT:'-':CLIENT.REC<2>:' has UPS overcharge amount of ':OVRCHG.VAR'R26,$':' with UPS rate set to 0.00 for bill ':BILL.ID)      ; * JMK48
                     CALL ELINE('Unprocess this client and change charge page.')           ; * JMK48
                     GO 10
                     ***    STOP                ; * JMK48
                     *********************************************************************   10 ?????????
                  END                    ; * JMK56
               END                       ; * JMK48
            CASE CARRIER='01075'         ; * JMK19
*
* Seperate FedEx Ground from Regular Overcharges
*
               IF NOT(BAL.DUE) THEN
                  DARRAY<15,TRANS.POS>=DARRAY<15,TRANS.POS>+OVRCHG.VAR
                  DIV.DARRAY<15,DIV.POS,TRANS.POS>+=OVRCHG.VAR         ; * JMK32
               END ELSE
                  DARRAY<15,TRANS.POS>=DARRAY<15,TRANS.POS>+ACTUAL.CHG+OVRCHG.VAR
                  DIV.DARRAY<15,DIV.POS,TRANS.POS>+=ACTUAL.CHG+OVRCHG.VAR        ; * JMK32
               END
               INVOICE<11>=INVOICE<11>+OVERCHG.COMM
               DIV.INVOICE<11,DIV.POS>+=OVERCHG.COMM         ; * JMK32
               DARRAY<16,TRANS.POS>=DARRAY<16,TRANS.POS>+OVERCHG.COMM
               DIV.DARRAY<16,DIV.POS,TRANS.POS>+=OVERCHG.COMM          ; * JMK32

               IF ABS(OVRCHG.VAR+0)>1 AND OVERCHG.PERC+0=0 AND CLIENT#'00852' AND CLIENT#'01352' AND CLIENT#'00839' AND CLIENT#'01697' AND CLIENT#'00883' AND CLIENT#'01015' AND CLIENT#'02016' AND CLIENT#'02053' AND CLIENT#'01258' AND CLIENT#'02038' AND BILL.REC<53>#'LOGICA' AND CLIENT#'01057' AND CLIENT#'06797' THEN    ; * JMK55 ; * JMK60 ; * JMK113; * Added  Alcon per Brian P Barker - Ticket 5979 - DRF 05/22/13 ; * JMK@@ ; * JMK174 ; * JMK176 ; * Added 00883 per Mary on 08/15/16 ; * Added 01015 on 06/02/17 per Cythinia ; * Added 01258 on 09/11/17 per Cynthia; * Added 02038 on 02/27/18 per Cynthia ; * Added 01057 on 09/11/19 per Mary
                  CALL ELINE('Client ':CLIENT:'-':CLIENT.REC<2>:' has FedEx Ground overcharge amount of ':OVRCHG.VAR'R26,$':' with Fedex Ground rate set to 0.00 for bill ':BILL.ID)           ; * JMK55
                  CALL ELINE('Unprocess this client and change charge page.')    ; * JMK55
                  STOP                   ; * 10    ????????????
                  *******************************************************************************8
               END                       ; * JMK55
*
* Next block is for future separation    ; * JMK34
            CASE CARRIER='00015'         ; * JMK34
*
* Seperate FedEx Air from Regular Overcharges
*
               IF NOT(BAL.DUE) THEN      ; * JMK34
                  DARRAY<17,TRANS.POS>+=OVRCHG.VAR           ; * JMK34
                  DIV.DARRAY<17,DIV.POS,TRANS.POS>+=OVRCHG.VAR         ; * JMK34
               END ELSE                  ; * JMK34
                  DARRAY<17,TRANS.POS>+=ACTUAL.CHG+OVRCHG.VAR          ; * JMK34
                  DIV.DARRAY<17,DIV.POS,TRANS.POS>+=ACTUAL.CHG+OVRCHG.VAR        ; * JMK34
               END                       ; * JMK34
               INVOICE<12>+=OVERCHG.COMM           ; * JMK34
               DIV.INVOICE<12,DIV.POS>+=OVERCHG.COMM         ; * JMK34
               DARRAY<18,TRANS.POS>+=+OVERCHG.COMM           ; * JMK34
               DIV.DARRAY<18,DIV.POS,TRANS.POS>+=OVERCHG.COMM          ; * JMK34
* End of block for future separation     ; * JMK34
*
            CASE 1                       ; * JMK19
               IF NOT(BAL.DUE) THEN
                  DARRAY<3,TRANS.POS>=DARRAY<3,TRANS.POS>+OVRCHG.VAR
                  DIV.DARRAY<3,DIV.POS,TRANS.POS>+=OVRCHG.VAR          ; * JMK32
               END ELSE
                  DARRAY<3,TRANS.POS>=DARRAY<3,TRANS.POS>+ACTUAL.CHG+OVRCHG.VAR
                  DIV.DARRAY<3,DIV.POS,TRANS.POS>+=ACTUAL.CHG+OVRCHG.VAR         ; * JMK32
               END
               INVOICE<4>=INVOICE<4>+OVERCHG.COMM
               DIV.INVOICE<4,DIV.POS>+=OVERCHG.COMM          ; * JMK32
               DARRAY<7,TRANS.POS>=DARRAY<7,TRANS.POS>+OVERCHG.COMM
               DIV.DARRAY<7,DIV.POS,TRANS.POS>+=OVERCHG.COMM           ; * JMK32
         END CASE                        ; * JMK19

         INVOICE<5>=INVOICE<5>+CONSULTING.COMM
         DARRAY<4,TRANS.POS>=DARRAY<4,TRANS.POS>+CONSLT.VAR+BD.CONSLT
         INVOICE<6>=INVOICE<6>+DISCOUNT.COMM
         DARRAY<5,TRANS.POS>=DARRAY<5,TRANS.POS>+DISC.VAR+BD.DISC
         DARRAY<8,TRANS.POS>=DARRAY<8,TRANS.POS>+CONSULTING.COMM
         DARRAY<9,TRANS.POS>=DARRAY<9,TRANS.POS>+DISCOUNT.COMM
         DARRAY<13,TRANS.POS>=DARRAY<13,TRANS.POS>+MGMT.SVC.COMM       ; * JMK12
         DARRAY<14,TRANS.POS>=DARRAY<14,TRANS.POS>+1
         DIV.INVOICE<5,DIV.POS>+=CONSULTING.COMM   ; * JMK32
         DIV.DARRAY<4,DIV.POS,TRANS.POS>+=CONSLT.VAR+BD.CONSLT         ; * JMK32
         DIV.INVOICE<6,DIV.POS>+=DISCOUNT.COMM     ; * JMK32
         DIV.DARRAY<5,DIV.POS,TRANS.POS>+=DISC.VAR+BD.DISC   ; * JMK32
         DIV.DARRAY<8,DIV.POS,TRANS.POS>+=CONSULTING.COMM    ; * JMK32
         DIV.DARRAY<9,DIV.POS,TRANS.POS>+=DISCOUNT.COMM      ; * JMK32
         DIV.DARRAY<13,DIV.POS,TRANS.POS>+=MGMT.SVC.COMM     ; * JMK32
         DIV.DARRAY<14,DIV.POS,TRANS.POS>+=1       ; * JMK32
*
* Update client YTD history
*
         CLIENT.YTD<6>=CLIENT.YTD<6>+WEIGHT
         CLIENT.YTD<7>=CLIENT.YTD<7>+CARRIER.CHG
         CLIENT.YTD<8>=CLIENT.YTD<8>+ACTUAL.CHG
         CLIENT.YTD<10>=CLIENT.YTD<10>+DISC.VAR
         IF CARRIER # '00041' THEN
            CLIENT.YTD<11>=CLIENT.YTD<11>+OVRCHG.VAR
         END ELSE
            CLIENT.YTD<51>=CLIENT.YTD<51>+OVRCHG.VAR
         END
         CLIENT.YTD<12>=CLIENT.YTD<12>+CONSLT.VAR
         CLIENT.YTD<34>=CLIENT.YTD<34>+BD.DISC
         IF CARRIER # '00041' THEN
            CLIENT.YTD<35>=CLIENT.YTD<35>+BD.OVRCHG
         END ELSE
            CLIENT.YTD<52>=CLIENT.YTD<52>+BD.OVRCHG
         END
         CLIENT.YTD<36>=CLIENT.YTD<36>+BD.CONSLT
         IF BAL.DUE THEN CLIENT.YTD<38>=CLIENT.YTD<38>+ACTUAL.CHG
         IF ADD.DUE THEN CLIENT.YTD<39>=CLIENT.YTD<39>+ACTUAL.CHG

         OVER.CHG=ACTUAL.CHG-MISROUTE.AMT          ; * JMK14
         IF OVER.CHG < 0 THEN OVER.CHG = 0         ; * JMK14
         IF MISROUTE.AMT+0 <= 0 THEN OVER.CHG = 0
         IF DUP#'0' THEN OVER.CHG=0      ; * JMK14
         BEGIN CASE                      ; * JMK14
            CASE IOT='O'                 ; * JMK14
               CLIENT.YTD<71>=CLIENT.YTD<71>+OVER.CHG        ; * JMK14
            CASE IOT='I'                 ; * JMK14
               CLIENT.YTD<72>=CLIENT.YTD<72>+OVER.CHG        ; * JMK14
            CASE IOT='T'                 ; * JMK14
               CLIENT.YTD<73>=CLIENT.YTD<73>+OVER.CHG        ; * JMK14
         END CASE                        ; * JMK14
*
         BILLS.COUNT=BILLS.COUNT+1
         IF CLIENT='06891' OR CLIENT='06898' THEN
            IF CARRIER='00453' OR CARRIER='00212' OR CARRIER='00171' OR CARRIER='00014' THEN
               LTL.COUNT=LTL.COUNT+1
            END ELSE
               NON.LTL.COUNT=NON.LTL.COUNT+1
            END
         END ELSE
            IF CLIENT.REC<316> THEN      ; * DRF037
               IF BILL.REC<21>='1' THEN  ; * DRF037
                  IF NOT(ADD.DUE) AND NOT(BAL.DUE) THEN      ; * DRF037
                     LTL.COUNT=LTL.COUNT+1         ; * DRF037
                  END                    ; * DRF037
               END ELSE                  ; * DRF037
                  IF NOT(ADD.DUE) AND NOT(BAL.DUE) THEN      ; * DRF037
                     NON.LTL.COUNT=NON.LTL.COUNT+1           ; * DRF037
                  END                    ; * DRF037
               END                       ; * DRF037
            END ELSE                     ; * DRF037
               IF BILL.REC<21>='1' THEN  ; * DRF033
                  LTL.COUNT=LTL.COUNT+1  ; * DRF033
               END ELSE                  ; * DRF033
                  NON.LTL.COUNT=NON.LTL.COUNT+1    ; * DRF033
               END                       ; * DRF033
            END
         END
         IF CLIENT='06902' OR CLIENT='06903' OR CLIENT='06904' OR CLIENT='06905' OR CLIENT='06906' OR CLIENT='06908' THEN          ; *DRF042
            IF BILL.REC<21>='8' THEN     ; * DRF042
               INTL.COUNT=INTL.COUNT+1   ; * DRF042
            END ELSE                     ; * DRF042
               NON.INTL.COUNT=NON.INTL.COUNT+1     ; * DRF042
            END                          ; * DRF042
         END                             ; * DRF042
         DIV.COUNTS<5,DIV.POS>+=1        ; * JMK32

         NEXP=DCOUNT(BILL.REC<31>,@VM)-1           ; * JMK30
         IF NEXP<0 THEN NEXP=0           ; * JMK30
         PR.BILLS.COUNT+=NEXP            ; * JMK30
         DIV.COUNTS<6,DIV.POS>+=NEXP     ; * JMK32
         BEGIN CASE
            CASE IOT='O'
               CLIENT.YTD<68>+=COMMISSION          ; * outbound ytd commission
               EDI.PPR='PPR'             ; * JMK45
               IF BILL.REC<88>#'' OR BILL.REC<53>[1,12]='EBILL.IMPORT' THEN      ; * JMK45
                  IF BILL.REC<295>='' THEN         ; * DRF045
                     EDI.PPR='EDI'       ; * JMK45
                  END                    ; * DRF045
               END                       ; * JMK45

               IF EDI.PPR='EDI' THEN     ; * JMK45
                  CLIENT.YTD<42>=CLIENT.YTD<42>+1

                  BEGIN CASE             ; * JMK91
                     CASE CLIENT='01148' AND END.DATE GT ICONV('07/10/08','D')   ; * JMK91 ; * JMK92 ; * JMK93
                        IF CARRIER='00015' OR CARRIER='01075' THEN     ; * JMK91
                           EDI.COUNT<1,2>=EDI.COUNT<1,2>+1   ; * JMK91
                           DIV.COUNTS<8,DIV.POS>+=1          ; * JMK91
                           IF CARRIER='00015' THEN           ; * JMK93
                              IF CLIENT='01148' THEN         ; * JMK93
                                 LOCATE BILL.REC<94> IN EDI.COUNT.ARRAY<1> BY 'AR' SETTING EDI.COUNT.POS ELSE  ; * JMK93
                                    INS BILL.REC<94> BEFORE EDI.COUNT.ARRAY<1,EDI.COUNT.POS>         ; * JMK93
                                 END     ; * JMK93
                                 LOCATE BILL.REC<94> IN DIV.COUNTS<11,DIV.POS> BY 'AR' SETTING DIV.EDI.COUNT.POS ELSE    ; * JMK93
                                    INS BILL.REC<94> BEFORE DIV.COUNTS<11,DIV.POS,DIV.EDI.COUNT.POS>           ; * JMK93
                                 END     ; * JMK93
                              END ELSE   ; * JMK93
                                 EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1     ; * JMK93
                                 DIV.COUNTS<13,DIV.POS>+=1   ; * JMK93
                              END        ; * JMK93
                           END ELSE      ; * JMK93
                              EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1        ; * JMK93
                              DIV.COUNTS<13,DIV.POS>+=1      ; * JMK93
                           END           ; * JMK93
                        END ELSE         ; * JMK91
                           EDI.COUNT<1,1>=EDI.COUNT<1,1>+1   ; * JMK91
                           DIV.COUNTS<7,DIV.POS>+=1          ; * JMK91
                        END              ; * JMK91

                     CASE CLIENT='01478' OR CLIENT='01371' OR CLIENT='01398' OR CLIENT='01539'       ; * JMK91 ; * JMK92 ; * JMK93
                        IF CARRIER='00015' OR CARRIER='01075' THEN     ; * JMK91
                           EDI.COUNT<1,2>=EDI.COUNT<1,2>+1   ; * JMK91
                           DIV.COUNTS<8,DIV.POS>+=1          ; * JMK91

                           IF CARRIER='00015' THEN           ; * JMK93
                              IF CLIENT='01148' THEN         ; * JMK93
                                 LOCATE BILL.REC<94> IN EDI.COUNT.ARRAY<1> BY 'AR' SETTING EDI.COUNT.POS ELSE  ; * JMK93
                                    INS BILL.REC<94> BEFORE EDI.COUNT.ARRAY<1,EDI.COUNT.POS>         ; * JMK93
                                 END     ; * JMK93
                                 LOCATE BILL.REC<94> IN DIV.COUNTS<11,DIV.POS> BY 'AR' SETTING DIV.EDI.COUNT.POS ELSE    ; * JMK93
                                    INS BILL.REC<94> BEFORE DIV.COUNTS<11,DIV.POS,DIV.EDI.COUNT.POS>           ; * JMK93
                                 END     ; * JMK93
                              END ELSE   ; * JMK93
                                 EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1     ; * JMK93
                                 DIV.COUNTS<13,DIV.POS>+=1   ; * JMK93
                              END        ; * JMK93
                           END ELSE      ; * JMK93
                              EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1        ; * JMK93
                              DIV.COUNTS<13,DIV.POS>+=1      ; * JMK93
                           END           ; * JMK93
                        END ELSE         ; * JMK91
                           EDI.COUNT<1,1>=EDI.COUNT<1,1>+1   ; * JMK91
                           DIV.COUNTS<7,DIV.POS>+=1          ; * JMK91
                        END              ; * JMK91
                     CASE CLIENT='01342' OR CLIENT='05654' OR CLIENT='06006' OR CLIENT='06007'       ; * DRF027    ; * DRF030
                        IF CARRIER='00015' OR CARRIER='01075' OR CARRIER='00041' THEN      ; * JMK91     ; * DRF027
                           EDI.COUNT<1,2>=EDI.COUNT<1,2>+1   ; * JMK91     ; * DRF027
                           DIV.COUNTS<8,DIV.POS>+=1          ; * JMK91     ; * DRF027

                           IF CARRIER='00015' THEN           ; * JMK93
                              IF CLIENT='01148' THEN         ; * JMK93     ; * DRF027
                                 LOCATE BILL.REC<94> IN EDI.COUNT.ARRAY<1> BY 'AR' SETTING EDI.COUNT.POS ELSE  ; * JMK93     ; * DRF027
                                    INS BILL.REC<94> BEFORE EDI.COUNT.ARRAY<1,EDI.COUNT.POS>         ; * JMK93     ; * DRF027
                                 END     ; * JMK93     ; * DRF027
                                 LOCATE BILL.REC<94> IN DIV.COUNTS<11,DIV.POS> BY 'AR' SETTING DIV.EDI.COUNT.POS ELSE    ; * JMK93     ; * DRF027
                                    INS BILL.REC<94> BEFORE DIV.COUNTS<11,DIV.POS,DIV.EDI.COUNT.POS>           ; * JMK93     ; * DRF027
                                 END     ; * JMK93     ; * DRF027
                              END ELSE   ; * JMK93     ; * DRF027
                                 EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1     ; * JMK93     ; * DRF027
                                 DIV.COUNTS<13,DIV.POS>+=1   ; * JMK93     ; * DRF027
                              END        ; * JMK93     ; * DRF027
                           END ELSE      ; * JMK93     ; * DRF027
                              EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1        ; * JMK93     ; * DRF027
                              DIV.COUNTS<13,DIV.POS>+=1      ; * JMK93     ; * DRF027
                           END           ; * JMK93     ; * DRF027
                        END ELSE         ; * JMK91     ; * DRF027
                           EDI.COUNT<1,1>=EDI.COUNT<1,1>+1   ; * JMK91     ; * DRF027
                           DIV.COUNTS<7,DIV.POS>+=1          ; * JMK91     ; * DRF027
                        END              ; * JMK91     ; * DRF027
                     CASE CLIENT='10356' OR CLIENT='05484'   ; * JMK91
                        IF CARRIER='00015' OR CARRIER='00365' OR CARRIER='01075' OR CARRIER='00041' OR CARRIER='00143' OR CARRIER='00044' THEN         ; * JMK76
                           EDI.COUNT<1,2>=EDI.COUNT<1,2>+1
                           DIV.COUNTS<8,DIV.POS>+=1          ; * JMK32
                           IF CLIENT='10356' AND CARRIER='00041' THEN  ; * JMK31
                              UPS.BILLS.COUNT+=1   ; * JMK31
                              UPS.TRACK.COUNT+=BILL.REC<198>+0         ; * JMK31
                              DIV.COUNTS<9,DIV.POS>+=1       ; * JMK32
                              DIV.COUNTS<10,DIV.POS>+=BILL.REC<198>+0  ; * JMK32
                           END           ; * JMK31
                           IF CARRIER='00015' THEN
                              IF CLIENT='10356' OR CLIENT='01078' OR CLIENT='01148' THEN
                                 LOCATE BILL.REC<94> IN EDI.COUNT.ARRAY<1> BY 'AR' SETTING EDI.COUNT.POS ELSE
                                    INS BILL.REC<94> BEFORE EDI.COUNT.ARRAY<1,EDI.COUNT.POS>
                                 END
                                 LOCATE BILL.REC<94> IN DIV.COUNTS<11,DIV.POS> BY 'AR' SETTING DIV.EDI.COUNT.POS ELSE    ; * JMK32
                                    INS BILL.REC<94> BEFORE DIV.COUNTS<11,DIV.POS,DIV.EDI.COUNT.POS>           ; * JMK32
                                 END     ; * JMK32
                              END
                           END ELSE
                              EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1
                              DIV.COUNTS<13,DIV.POS>+=1      ; * JMK32
                           END
                        END ELSE
                           EDI.COUNT<1,1>=EDI.COUNT<1,1>+1
                           DIV.COUNTS<7,DIV.POS>+=1          ; * JMK32
                        END

                     CASE 1              ; * JMK91
                        IF CARRIER='01075' OR CARRIER='00041' THEN     ; * JMK76
                           EDI.COUNT<1,2>=EDI.COUNT<1,2>+1
                           DIV.COUNTS<8,DIV.POS>+=1          ; * JMK32
                           IF CLIENT='01163' AND CARRIER='01075' THEN
                              EDI.MD.FEDEX.GROUND.COUNT=EDI.MD.FEDEX.GROUND.COUNT+1
                              DIV.COUNTS<12,DIV.POS>+=1      ; * JMK32
                           END
                           IF CLIENT='01292' AND CARRIER='00041' THEN  ; * JMK31
                              UPS.BILLS.COUNT+=1   ; * JMK31
                              UPS.TRACK.COUNT+=BILL.REC<198>+0         ; * JMK31
                              DIV.COUNTS<9,DIV.POS>+=1       ; * JMK32
                              DIV.COUNTS<10,DIV.POS>+=BILL.REC<198>+0  ; * JMK32
                           END           ; * JMK31
                           IF CLIENT='01747' AND CARRIER='00041' THEN  ; * JMK116
                              UPS.BILLS.COUNT+=1   ; * JMK116
                              UPS.TRACK.COUNT+=BILL.REC<198>+0         ; * JMK116
                              DIV.COUNTS<9,DIV.POS>+=1       ; * JMK116
                              DIV.COUNTS<10,DIV.POS>+=BILL.REC<198>+0  ; * JMK116
                           END           ; * JMK116
                           IF CLIENT='10356' AND CARRIER='00041' THEN  ; * JMK31
                              UPS.BILLS.COUNT+=1   ; * JMK31
                              UPS.TRACK.COUNT+=BILL.REC<198>+0         ; * JMK31
                              DIV.COUNTS<9,DIV.POS>+=1       ; * JMK32
                              DIV.COUNTS<10,DIV.POS>+=BILL.REC<198>+0  ; * JMK32
                           END           ; * JMK31
                           IF CARRIER='00015' THEN
                              IF CLIENT='10356' OR CLIENT='01078' OR CLIENT='01148' THEN
                                 LOCATE BILL.REC<94> IN EDI.COUNT.ARRAY<1> BY 'AR' SETTING EDI.COUNT.POS ELSE
                                    INS BILL.REC<94> BEFORE EDI.COUNT.ARRAY<1,EDI.COUNT.POS>
                                 END
                                 LOCATE BILL.REC<94> IN DIV.COUNTS<11,DIV.POS> BY 'AR' SETTING DIV.EDI.COUNT.POS ELSE    ; * JMK32
                                    INS BILL.REC<94> BEFORE DIV.COUNTS<11,DIV.POS,DIV.EDI.COUNT.POS>           ; * JMK32
                                 END     ; * JMK32
                              END
                           END ELSE
                              EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1
                              DIV.COUNTS<13,DIV.POS>+=1      ; * JMK32
                           END
                        END ELSE
                           EDI.COUNT<1,1>=EDI.COUNT<1,1>+1
                           DIV.COUNTS<7,DIV.POS>+=1          ; * JMK32
                        END

                  END CASE               ; * JMK91

               END ELSE
                  IF NOT(CR.MEMO) THEN CLIENT.YTD<15>=CLIENT.YTD<15>+1
               END
               CLIENT.YTD<20>=CLIENT.YTD<20>+ACTUAL.CHG
            CASE IOT = 'I'
               CLIENT.YTD<67>+=COMMISSION          ; * inbound ytd commission
               EDI.PPR='PPR'             ; * JMK45
               IF BILL.REC<88>#'' OR BILL.REC<53>[1,12]='EBILL.IMPORT' THEN      ; * JMK45
                  IF BILL.REC<295>='' THEN         ; * DRF045
                     EDI.PPR='EDI'       ; * JMK45
                  END                    ; * DRF045
               END                       ; * JMK45

               IF EDI.PPR='EDI' THEN     ; * JMK45
                  CLIENT.YTD<43>=CLIENT.YTD<43>+1

                  BEGIN CASE             ; * JMK91
                     CASE CLIENT='01148' AND END.DATE GT ICONV('07/10/08','D')   ; * JMK93
                        IF CARRIER='00015' OR CARRIER='01075' THEN     ; * JMK93
                           EDI.COUNT<1,2>=EDI.COUNT<1,2>+1   ; * JMK93
                           DIV.COUNTS<8,DIV.POS>+=1          ; * JMK93
                           IF CARRIER='00015' THEN           ; * JMK93
                              IF CLIENT='01148' THEN         ; * JMK93
                                 LOCATE BILL.REC<94> IN EDI.COUNT.ARRAY<1> BY 'AR' SETTING EDI.COUNT.POS ELSE  ; * JMK93
                                    INS BILL.REC<94> BEFORE EDI.COUNT.ARRAY<1,EDI.COUNT.POS>         ; * JMK93
                                 END     ; * JMK93
                                 LOCATE BILL.REC<94> IN DIV.COUNTS<11,DIV.POS> BY 'AR' SETTING DIV.EDI.COUNT.POS ELSE    ; * JMK93
                                    INS BILL.REC<94> BEFORE DIV.COUNTS<11,DIV.POS,DIV.EDI.COUNT.POS>           ; * JMK93
                                 END     ; * JMK93
                              END ELSE   ; * JMK93
                                 EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1     ; * JMK93
                                 DIV.COUNTS<13,DIV.POS>+=1   ; * JMK93
                              END        ; * JMK93
                           END ELSE      ; * JMK93
                              EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1        ; * JMK93
                              DIV.COUNTS<13,DIV.POS>+=1      ; * JMK93
                           END           ; * JMK93
                        END ELSE         ; * JMK93
                           EDI.COUNT<1,1>=EDI.COUNT<1,1>+1   ; * JMK91
                           DIV.COUNTS<7,DIV.POS>+=1          ; * JMK91
                        END              ; * JMK93

                     CASE CLIENT='01478' OR CLIENT='01371' OR CLIENT='01398' OR CLIENT='01539'       ; * JMK91 ; * JMK92 ; * JMK93
                        IF CARRIER='00015' OR CARRIER='01075' THEN     ; * JMK91
                           EDI.COUNT<1,2>=EDI.COUNT<1,2>+1   ; * JMK91
                           DIV.COUNTS<8,DIV.POS>+=1          ; * JMK91

                           IF CARRIER='00015' THEN           ; * JMK93
                              IF CLIENT='01148' THEN         ; * JMK93
                                 LOCATE BILL.REC<94> IN EDI.COUNT.ARRAY<1> BY 'AR' SETTING EDI.COUNT.POS ELSE  ; * JMK93
                                    INS BILL.REC<94> BEFORE EDI.COUNT.ARRAY<1,EDI.COUNT.POS>         ; * JMK93
                                 END     ; * JMK93
                                 LOCATE BILL.REC<94> IN DIV.COUNTS<11,DIV.POS> BY 'AR' SETTING DIV.EDI.COUNT.POS ELSE    ; * JMK93
                                    INS BILL.REC<94> BEFORE DIV.COUNTS<11,DIV.POS,DIV.EDI.COUNT.POS>           ; * JMK93
                                 END     ; * JMK93
                              END ELSE   ; * JMK93
                                 EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1     ; * JMK93
                                 DIV.COUNTS<13,DIV.POS>+=1   ; * JMK93
                              END        ; * JMK93
                           END ELSE      ; * JMK93
                              EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1        ; * JMK93
                              DIV.COUNTS<13,DIV.POS>+=1      ; * JMK93
                           END           ; * JMK93
                        END ELSE         ; * JMK91
                           EDI.COUNT<1,1>=EDI.COUNT<1,1>+1   ; * JMK91
                           DIV.COUNTS<7,DIV.POS>+=1          ; * JMK91
                        END              ; * JMK91
                     CASE CLIENT='01342' OR CLIENT='05654' OR CLIENT='06006' OR CLIENT='06007'       ; * DRF027    ; * DRF030
                        IF CARRIER='00015' OR CARRIER='01075' OR CARRIER='00041' THEN      ; * JMK91     ; * DRF027
                           EDI.COUNT<1,2>=EDI.COUNT<1,2>+1   ; * JMK91     ; * DRF027
                           DIV.COUNTS<8,DIV.POS>+=1          ; * JMK91     ; * DRF027

                           IF CARRIER='00015' THEN           ; * JMK93     ; * DRF027
                              IF CLIENT='01148' THEN         ; * JMK93     ; * DRF027
                                 LOCATE BILL.REC<94> IN EDI.COUNT.ARRAY<1> BY 'AR' SETTING EDI.COUNT.POS ELSE  ; * JMK93     ; * DRF027
                                    INS BILL.REC<94> BEFORE EDI.COUNT.ARRAY<1,EDI.COUNT.POS>         ; * JMK93     ; * DRF027
                                 END     ; * JMK93     ; * DRF027
                                 LOCATE BILL.REC<94> IN DIV.COUNTS<11,DIV.POS> BY 'AR' SETTING DIV.EDI.COUNT.POS ELSE    ; * JMK93     ; * DRF027
                                    INS BILL.REC<94> BEFORE DIV.COUNTS<11,DIV.POS,DIV.EDI.COUNT.POS>           ; * JMK93     ; * DRF027
                                 END     ; * JMK93     ; * DRF027
                              END ELSE   ; * JMK93     ; * DRF027
                                 EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1     ; * JMK93     ; * DRF027
                                 DIV.COUNTS<13,DIV.POS>+=1   ; * JMK93     ; * DRF027
                              END        ; * JMK93     ; * DRF027
                           END ELSE      ; * JMK93     ; * DRF027
                              EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1        ; * JMK93     ; * DRF027
                              DIV.COUNTS<13,DIV.POS>+=1      ; * JMK93     ; * DRF027
                           END           ; * JMK93     ; * DRF027
                        END ELSE         ; * JMK91     ; * DRF027
                           EDI.COUNT<1,1>=EDI.COUNT<1,1>+1   ; * JMK91     ; * DRF027
                           DIV.COUNTS<7,DIV.POS>+=1          ; * JMK91     ; * DRF027
                        END              ; * JMK91     ; * DRF027
                     CASE CLIENT='10356' OR CLIENT='05484'   ; * JMK91
                        IF CARRIER='00015' OR CARRIER='00365' OR CARRIER='01075' OR CARRIER='00041' OR CARRIER='00143' OR CARRIER='00044' THEN         ; * JMK76
                           EDI.COUNT<1,2>=EDI.COUNT<1,2>+1
                           DIV.COUNTS<8,DIV.POS>+=1          ; * JMK32
                           IF CLIENT='10356' AND CARRIER='00041' THEN  ; * JMK31
                              UPS.BILLS.COUNT+=1   ; * JMK31
                              UPS.TRACK.COUNT+=BILL.REC<198>+0         ; * JMK31
                              DIV.COUNTS<9,DIV.POS>+=1       ; * JMK32
                              DIV.COUNTS<10,DIV.POS>+=BILL.REC<198>+0  ; * JMK32
                           END           ; * JMK31
                           IF CARRIER='00015' THEN
                              IF CLIENT='10356' OR CLIENT='01078' OR CLIENT='01148' THEN
                                 LOCATE BILL.REC<94> IN EDI.COUNT.ARRAY<1> BY 'AR' SETTING EDI.COUNT.POS ELSE
                                    INS BILL.REC<94> BEFORE EDI.COUNT.ARRAY<1,EDI.COUNT.POS>
                                 END
                                 LOCATE BILL.REC<94> IN DIV.COUNTS<11,DIV.POS> BY 'AR' SETTING DIV.EDI.COUNT.POS ELSE    ; * JMK32
                                    INS BILL.REC<94> BEFORE DIV.COUNTS<11,DIV.POS,DIV.EDI.COUNT.POS>           ; * JMK32
                                 END     ; * JMK32
                              END
                           END ELSE
                              EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1
                              DIV.COUNTS<13,DIV.POS>+=1      ; * JMK32
                           END
                        END ELSE
                           EDI.COUNT<1,1>=EDI.COUNT<1,1>+1
                           DIV.COUNTS<7,DIV.POS>+=1          ; * JMK32
                        END

                     CASE 1              ; * JMK91
                        IF CARRIER='01075' OR CARRIER='00041' THEN     ; * JMK76
                           EDI.COUNT<1,2>=EDI.COUNT<1,2>+1
                           DIV.COUNTS<8,DIV.POS>+=1          ; * JMK32
                           IF CLIENT='01163' AND CARRIER='01075' THEN
                              EDI.MD.FEDEX.GROUND.COUNT=EDI.MD.FEDEX.GROUND.COUNT+1
                              DIV.COUNTS<12,DIV.POS>+=1      ; * JMK32
                           END
                           IF CLIENT='01292' AND CARRIER='00041' THEN  ; * JMK31
                              UPS.BILLS.COUNT+=1   ; * JMK31
                              UPS.TRACK.COUNT+=BILL.REC<198>+0         ; * JMK31
                              DIV.COUNTS<9,DIV.POS>+=1       ; * JMK32
                              DIV.COUNTS<10,DIV.POS>+=BILL.REC<198>+0  ; * JMK32
                           END           ; * JMK31
                           IF CLIENT='01747' AND CARRIER='00041' THEN  ; * JMK116
                              UPS.BILLS.COUNT+=1   ; * JMK116
                              UPS.TRACK.COUNT+=BILL.REC<198>+0         ; * JMK116
                              DIV.COUNTS<9,DIV.POS>+=1       ; * JMK116
                              DIV.COUNTS<10,DIV.POS>+=BILL.REC<198>+0  ; * JMK116
                           END           ; * JMK116
                           IF CLIENT='10356' AND CARRIER='00041' THEN  ; * JMK31
                              UPS.BILLS.COUNT+=1   ; * JMK31
                              UPS.TRACK.COUNT+=BILL.REC<198>+0         ; * JMK31
                              DIV.COUNTS<9,DIV.POS>+=1       ; * JMK32
                              DIV.COUNTS<10,DIV.POS>+=BILL.REC<198>+0  ; * JMK32
                           END           ; * JMK31
                           IF CARRIER='00015' THEN
                              IF CLIENT='10356' OR CLIENT='01078' OR CLIENT='01148' THEN
                                 LOCATE BILL.REC<94> IN EDI.COUNT.ARRAY<1> BY 'AR' SETTING EDI.COUNT.POS ELSE
                                    INS BILL.REC<94> BEFORE EDI.COUNT.ARRAY<1,EDI.COUNT.POS>
                                 END
                                 LOCATE BILL.REC<94> IN DIV.COUNTS<11,DIV.POS> BY 'AR' SETTING DIV.EDI.COUNT.POS ELSE    ; * JMK32
                                    INS BILL.REC<94> BEFORE DIV.COUNTS<11,DIV.POS,DIV.EDI.COUNT.POS>           ; * JMK32
                                 END     ; * JMK32
                              END
                           END ELSE
                              EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1
                              DIV.COUNTS<13,DIV.POS>+=1      ; * JMK32
                           END
                        END ELSE
                           EDI.COUNT<1,1>=EDI.COUNT<1,1>+1
                           DIV.COUNTS<7,DIV.POS>+=1          ; * JMK32
                        END
                  END CASE               ; * JMK91
               END ELSE
                  IF NOT(CR.MEMO) THEN CLIENT.YTD<17>=CLIENT.YTD<17>+1
               END
               CLIENT.YTD<21>=CLIENT.YTD<21>+ACTUAL.CHG
            CASE 1
               CLIENT.YTD<69>+=COMMISSION          ; * third party ytd commision
               EDI.PPR='PPR'             ; * JMK45
               IF BILL.REC<88>#'' OR BILL.REC<53>[1,12]='EBILL.IMPORT' THEN      ; * JMK45
                  IF BILL.REC<295>='' THEN         ; * DRF045
                     EDI.PPR='EDI'       ; * JMK45
                  END                    ; * DRF045
               END                       ; * JMK45

               IF EDI.PPR='EDI' THEN     ; * JMK45
                  CLIENT.YTD<65>=CLIENT.YTD<65>+1
                  BEGIN CASE             ; * JMK91
                     CASE CLIENT='01148' AND END.DATE GT ICONV('07/10/08','D')   ; * JMK91 ; * JMK92 ; * JMK93
                        IF CARRIER='00015' OR CARRIER='01075' THEN     ; * JMK91
                           EDI.COUNT<1,2>=EDI.COUNT<1,2>+1   ; * JMK91
                           DIV.COUNTS<8,DIV.POS>+=1          ; * JMK91
                           IF CLIENT='10356' AND CARRIER='00041' THEN  ; * JMK91
                              UPS.BILLS.COUNT+=1   ; * JMK91
                              UPS.TRACK.COUNT+=BILL.REC<198>+0         ; * JMK91
                              DIV.COUNTS<9,DIV.POS>+=1       ; * JMK91
                              DIV.COUNTS<10,DIV.POS>+=BILL.REC<198>+0  ; * JMK91
                           END           ; * JMK91
                           IF CARRIER='00015' THEN           ; * JMK93
                              IF CLIENT='01148' THEN         ; * JMK93
                                 LOCATE BILL.REC<94> IN EDI.COUNT.ARRAY<1> BY 'AR' SETTING EDI.COUNT.POS ELSE  ; * JMK93
                                    INS BILL.REC<94> BEFORE EDI.COUNT.ARRAY<1,EDI.COUNT.POS>         ; * JMK93
                                 END     ; * JMK93
                                 LOCATE BILL.REC<94> IN DIV.COUNTS<11,DIV.POS> BY 'AR' SETTING DIV.EDI.COUNT.POS ELSE    ; * JMK93
                                    INS BILL.REC<94> BEFORE DIV.COUNTS<11,DIV.POS,DIV.EDI.COUNT.POS>           ; * JMK93
                                 END     ; * JMK93
                              END ELSE   ; * JMK93
                                 EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1     ; * JMK93
                                 DIV.COUNTS<13,DIV.POS>+=1   ; * JMK93
                              END        ; * JMK93
                           END ELSE      ; * JMK93
                              EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1        ; * JMK93
                              DIV.COUNTS<13,DIV.POS>+=1      ; * JMK93
                           END           ; * JMK93
                        END ELSE         ; *JMK91
                           EDI.COUNT<1,1>=EDI.COUNT<1,1>+1   ; * JMK91
                           DIV.COUNTS<7,DIV.POS>+=1          ; * JMK91
                        END              ; * JMK91
                     CASE CLIENT='01478' OR CLIENT='01371' OR CLIENT='01398' OR CLIENT='01539'       ; * JMK91 ; * JMK92 ; * JMK93
                        IF CARRIER='00015' OR CARRIER='01075' THEN     ; * JMK91
                           EDI.COUNT<1,2>=EDI.COUNT<1,2>+1   ; * JMK91
                           DIV.COUNTS<8,DIV.POS>+=1          ; * JMK91
                           IF CLIENT='10356' AND CARRIER='00041' THEN  ; * JMK91
                              UPS.BILLS.COUNT+=1   ; * JMK91
                              UPS.TRACK.COUNT+=BILL.REC<198>+0         ; * JMK91
                              DIV.COUNTS<9,DIV.POS>+=1       ; * JMK91
                              DIV.COUNTS<10,DIV.POS>+=BILL.REC<198>+0  ; * JMK91
                           END           ; * JMK91
                           IF CARRIER='00015' THEN           ; * JMK93
                              IF CLIENT='01148' THEN         ; * JMK93
                                 LOCATE BILL.REC<94> IN EDI.COUNT.ARRAY<1> BY 'AR' SETTING EDI.COUNT.POS ELSE  ; * JMK93
                                    INS BILL.REC<94> BEFORE EDI.COUNT.ARRAY<1,EDI.COUNT.POS>         ; * JMK93
                                 END     ; * JMK93
                                 LOCATE BILL.REC<94> IN DIV.COUNTS<11,DIV.POS> BY 'AR' SETTING DIV.EDI.COUNT.POS ELSE    ; * JMK93
                                    INS BILL.REC<94> BEFORE DIV.COUNTS<11,DIV.POS,DIV.EDI.COUNT.POS>           ; * JMK93
                                 END     ; * JMK93
                              END ELSE   ; * JMK93
                                 EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1     ; * JMK93
                                 DIV.COUNTS<13,DIV.POS>+=1   ; * JMK93
                              END        ; * JMK93
                           END ELSE      ; * JMK93
                              EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1        ; * JMK93
                              DIV.COUNTS<13,DIV.POS>+=1      ; * JMK93
                           END           ; * JMK93
                        END ELSE         ; *JMK91
                           EDI.COUNT<1,1>=EDI.COUNT<1,1>+1   ; * JMK91
                           DIV.COUNTS<7,DIV.POS>+=1          ; * JMK91
                        END              ; * JMK91
                     CASE CLIENT='01342' OR CLIENT='05654' OR CLIENT='06006' OR CLIENT='06007'       ; * DRF027    ; * DRF030
                        IF CARRIER='00015' OR CARRIER='01075' OR CARRIER='00041' THEN      ; * JMK91     ; * DRF027
                           EDI.COUNT<1,2>=EDI.COUNT<1,2>+1   ; * JMK91     ; * DRF027
                           DIV.COUNTS<8,DIV.POS>+=1          ; * JMK91     ; * DRF027
                           IF CARRIER='00015' THEN           ; * JMK93     ; * DRF027
                              IF CLIENT='01148' THEN         ; * JMK93     ; * DRF027
                                 LOCATE BILL.REC<94> IN EDI.COUNT.ARRAY<1> BY 'AR' SETTING EDI.COUNT.POS ELSE  ; * JMK93     ; * DRF027
                                    INS BILL.REC<94> BEFORE EDI.COUNT.ARRAY<1,EDI.COUNT.POS>         ; * JMK93     ; * DRF027
                                 END     ; * JMK93     ; * DRF027
                                 LOCATE BILL.REC<94> IN DIV.COUNTS<11,DIV.POS> BY 'AR' SETTING DIV.EDI.COUNT.POS ELSE    ; * JMK93     ; * DRF027
                                    INS BILL.REC<94> BEFORE DIV.COUNTS<11,DIV.POS,DIV.EDI.COUNT.POS>           ; * JMK93     ; * DRF027
                                 END     ; * JMK93     ; * DRF027
                              END ELSE   ; * JMK93     ; * DRF027
                                 EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1     ; * JMK93     ; * DRF027
                                 DIV.COUNTS<13,DIV.POS>+=1   ; * JMK93     ; * DRF027
                              END        ; * JMK93     ; * DRF027
                           END ELSE      ; * JMK93     ; * DRF027
                              EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1        ; * JMK93     ; * DRF027
                              DIV.COUNTS<13,DIV.POS>+=1      ; * JMK93     ; * DRF027
                           END           ; * JMK93     ; * DRF027
                        END ELSE         ; *JMK91     ; * DRF027
                           EDI.COUNT<1,1>=EDI.COUNT<1,1>+1   ; * JMK91     ; * DRF027
                           DIV.COUNTS<7,DIV.POS>+=1          ; * JMK91     ; * DRF027
                        END              ; * JMK91     ; * DRF027
                     CASE CLIENT='10356' OR CLIENT='05484'   ; * JMK91
                        IF CARRIER='00015' OR CARRIER='00365' OR CARRIER='01075' OR CARRIER='00041' OR CARRIER='00143' OR CARRIER='00044' THEN         ; * JMK76
                           EDI.COUNT<1,2>=EDI.COUNT<1,2>+1
                           DIV.COUNTS<8,DIV.POS>+=1          ; * JMK32
                           IF CLIENT='10356' AND CARRIER='00041' THEN  ; * JMK31
                              UPS.BILLS.COUNT+=1   ; * JMK31
                              UPS.TRACK.COUNT+=BILL.REC<198>+0         ; * JMK31
                              DIV.COUNTS<9,DIV.POS>+=1       ; * JMK32
                              DIV.COUNTS<10,DIV.POS>+=BILL.REC<198>+0  ; * JMK32
                           END           ; * JMK31
                           IF CARRIER='00015' THEN
                              IF CLIENT='10356' OR CLIENT='01078' OR CLIENT='01148' THEN
                                 LOCATE BILL.REC<94> IN EDI.COUNT.ARRAY<1> BY 'AR' SETTING EDI.COUNT.POS ELSE
                                    INS BILL.REC<94> BEFORE EDI.COUNT.ARRAY<1,EDI.COUNT.POS>
                                 END
                                 LOCATE BILL.REC<94> IN DIV.COUNTS<11,DIV.POS> BY 'AR' SETTING DIV.EDI.COUNT.POS ELSE    ; * JMK32
                                    INS BILL.REC<94> BEFORE DIV.COUNTS<11,DIV.POS,DIV.EDI.COUNT.POS>           ; * JMK32
                                 END     ; * JMK32
                              END
                           END ELSE
                              EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1
                              DIV.COUNTS<13,DIV.POS>+=1      ; * JMK32
                           END
                        END ELSE
                           EDI.COUNT<1,1>=EDI.COUNT<1,1>+1
                           DIV.COUNTS<7,DIV.POS>+=1          ; * JMK32
                        END
                     CASE 1              ; * JMK91
                        IF CARRIER='01075' OR CARRIER='00041' THEN     ; * JMK76
                           EDI.COUNT<1,2>=EDI.COUNT<1,2>+1
                           DIV.COUNTS<8,DIV.POS>+=1          ; * JMK32
                           IF CLIENT='01163' AND CARRIER='01075' THEN
                              EDI.MD.FEDEX.GROUND.COUNT=EDI.MD.FEDEX.GROUND.COUNT+1
                              DIV.COUNTS<12,DIV.POS>+=1      ; * JMK32
                           END
                           IF CLIENT='01292' AND CARRIER='00041' THEN  ; * JMK31
                              UPS.BILLS.COUNT+=1   ; * JMK31
                              UPS.TRACK.COUNT+=BILL.REC<198>+0         ; * JMK31
                              DIV.COUNTS<9,DIV.POS>+=1       ; * JMK32
                              DIV.COUNTS<10,DIV.POS>+=BILL.REC<198>+0  ; * JMK32
                           END           ; * JMK31
                           IF CLIENT='01747' AND CARRIER='00041' THEN  ; * JMK116
                              UPS.BILLS.COUNT+=1   ; * JMK116
                              UPS.TRACK.COUNT+=BILL.REC<198>+0         ; * JMK116
                              DIV.COUNTS<9,DIV.POS>+=1       ; * JMK116
                              DIV.COUNTS<10,DIV.POS>+=BILL.REC<198>+0  ; * JMK116
                           END           ; * JMK116
                           IF CLIENT='10356' AND CARRIER='00041' THEN  ; * JMK31
                              UPS.BILLS.COUNT+=1   ; * JMK31
                              UPS.TRACK.COUNT+=BILL.REC<198>+0         ; * JMK31
                              DIV.COUNTS<9,DIV.POS>+=1       ; * JMK32
                              DIV.COUNTS<10,DIV.POS>+=BILL.REC<198>+0  ; * JMK32
                           END           ; * JMK31
                           IF CARRIER='00015' THEN
                              IF CLIENT='10356' OR CLIENT='01078' OR CLIENT='01148' THEN
                                 LOCATE BILL.REC<94> IN EDI.COUNT.ARRAY<1> BY 'AR' SETTING EDI.COUNT.POS ELSE
                                    INS BILL.REC<94> BEFORE EDI.COUNT.ARRAY<1,EDI.COUNT.POS>
                                 END
                                 LOCATE BILL.REC<94> IN DIV.COUNTS<11,DIV.POS> BY 'AR' SETTING DIV.EDI.COUNT.POS ELSE    ; * JMK32
                                    INS BILL.REC<94> BEFORE DIV.COUNTS<11,DIV.POS,DIV.EDI.COUNT.POS>           ; * JMK32
                                 END     ; * JMK32
                              END
                           END ELSE
                              EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1
                              DIV.COUNTS<13,DIV.POS>+=1      ; * JMK32
                           END
                        END ELSE
                           EDI.COUNT<1,1>=EDI.COUNT<1,1>+1
                           DIV.COUNTS<7,DIV.POS>+=1          ; * JMK32
                        END
                  END CASE               ; * JMK91

               END ELSE
                  IF NOT(CR.MEMO) THEN CLIENT.YTD<60>=CLIENT.YTD<60>+1
               END
               CLIENT.YTD<62>=CLIENT.YTD<62>+ACTUAL.CHG
         END CASE
         CLIENT.YTD<25>=CLIENT.YTD<25>+(CARRIER.CHG-ACTUAL.CHG)

         IF BANK.FB.TYPE#'F' THEN        ; * JMK90 ; * JMK128
            CLIENT.YTD<76>+=1            ; * JMK90
            CLIENT.YTD<77>+=ACTUAL.CHG   ; * JMK90
         END                             ; * JMK90

*
** Update variance totals
*

         IF BILL.REC<21> NE '' THEN
            VAR.CODE=BILL.REC<21>
            VAR.AMT=0-BILL.REC<12>
            IF VARIANCE='Y' OR VARIANCE='A' THEN
               READU VAR.REC FROM F.VAR,VAR.CODE THEN
                  UP.ARRAY=VAR.REC
               END ELSE
                  VAR.REC=''
                  IF VARIANCE='A' THEN
                     READV DESC FROM F.TRANSPORT,VAR.CODE,1 ELSE
                        CALL ELINE("Carrier: ":CARRIER:" has an invalid transportation code of '":TRANS.MODE:"'")
                        DESC=''
                     END
                     VAR.REC<1>=DESC
                  END
                  UP.ARRAY='*NEW*'
               END
               UP.ID='VARIANCE.CODES,':CLIENT:'*':VAR.CODE ; GOSUB UPDATE.UP.FILE
               VAR.REC<2>=VAR.REC<2>+VAR.AMT
               WRITE VAR.REC ON F.VAR,VAR.CODE
            END
         END
*
** Update expense totals
*
         IF BILL.REC<31> NE '' AND EXPENSE = 'Y' THEN
            EXP.COUNT=DCOUNT(BILL.REC<31>,CHAR(253))
            FOR I=1 TO EXP.COUNT STEP 1
               EXPENSE.CODE=BILL.REC<31,I>
               EXPENSE.AMT=BILL.REC<33,I>+EXPENSE.DIST.COMM<1,I>
*
               READU EXP.REC FROM F.EXP,EXPENSE.CODE THEN
                  UP.ARRAY=EXP.REC
               END ELSE
                  EXP.REC=EXPENSE.CODE
                  UP.ARRAY='*NEW*'
               END
               UP.ID='EXPENSE.CODES,':CLIENT:'*':EXPENSE.CODE ; GOSUB UPDATE.UP.FILE
*
               BEGIN CASE
                  CASE IOT='O'
                     EXP.REC<2>=EXP.REC<2>+EXPENSE.AMT
                  CASE IOT ='I'
                     EXP.REC<3>=EXP.REC<3>+EXPENSE.AMT
                  CASE 1
                     EXP.REC<4>=EXP.REC<4>+EXPENSE.AMT
               END CASE
               WRITE EXP.REC ON F.EXP,EXPENSE.CODE
            NEXT I
         END
*
** Update division totals
*
         IF DIV NE '' AND DIVISION = 'Y' THEN
            MATREADU DIV.REC FROM F.DIV,DIV THEN
               UP.ID='DIVISION.CODES,':CLIENT:'*':DIV
               READV DUMMY FROM F.UP,UP.ID,1 ELSE
                  MATWRITE DIV.REC ON F.UP,UP.ID
               END
            END ELSE
               MAT DIV.REC=''
               UP.ARRAY='*NEW*'
               UP.ID='DIVISION.CODES,':CLIENT:'*':DIV ; GOSUB UPDATE.UP.FILE
            END
*
            BEGIN CASE
               CASE IOT='O'
                  DIV.O.YTD += ACTUAL.CHG+DISCOUNT.COMM+OVERCHG.COMM+CONSULTING.COMM+MGMT.SVC.COMM
               CASE IOT='I'
                  DIV.I.YTD += ACTUAL.CHG+DISCOUNT.COMM+OVERCHG.COMM+CONSULTING.COMM+MGMT.SVC.COMM
               CASE 1
                  DIV.T.YTD += ACTUAL.CHG+DISCOUNT.COMM+OVERCHG.COMM+CONSULTING.COMM+MGMT.SVC.COMM
            END CASE
            MATWRITE DIV.REC ON F.DIV,DIV

            IF REG.FLAG THEN             ; * JMK161
               REG=DIV.REC(45)           ; * JMK107
               IF REG NE '' THEN         ; * JMK107
                  MATREADU REG.CODE.REC FROM F.REG,REG THEN  ; * JMK107
                     UP.ID='REGION.CODES,':CLIENT:'*':REG    ; * JMK107
                     READV DUMMY FROM F.UP,UP.ID,1 ELSE      ; * JMK107
                        MATWRITE REG.CODE.REC ON F.UP,UP.ID  ; * JMK107
                     END                 ; * JMK107
                  END ELSE               ; * JMK107
                     MAT REG.CODE.REC=''           ; * JMK107
                     UP.ARRAY='*NEW*'    ; * JMK107
                     UP.ID='REGION.CODES,':CLIENT:'*':REG ; GOSUB UPDATE.UP.FILE           ; * JMK107
                  END                    ; * JMK107
*
                  BEGIN CASE             ; * JMK107
                     CASE IOT='O'        ; * JMK107
                        REG.O.YTD += ACTUAL.CHG+DISCOUNT.COMM+OVERCHG.COMM+CONSULTING.COMM+MGMT.SVC.COMM       ; * JMK107
                     CASE IOT='I'        ; * JMK107
                        REG.I.YTD += ACTUAL.CHG+DISCOUNT.COMM+OVERCHG.COMM+CONSULTING.COMM+MGMT.SVC.COMM       ; * JMK107
                     CASE 1              ; * JMK107
                        REG.T.YTD += ACTUAL.CHG+DISCOUNT.COMM+OVERCHG.COMM+CONSULTING.COMM+MGMT.SVC.COMM       ; * JMK107
                  END CASE               ; * JMK107
                  MATWRITE REG.CODE.REC ON F.REG,REG         ; * JMK107
               END                       ; * JMK107
            END                          ; * JMK107
         END
      END

*
* Update History File
*
      BILL.HIST.REC=BILL.REC
      PROC.DATE=END.DATE

      IF NOT(HOLD.FLAG OR AUDIT.REVIEW.FLAG) THEN
         BILL.HIST.REC<40>=BANK
         BILL.HIST.REC<37>=PROC.DATE

         IF BANK='N' THEN
* Set Check Date, Amount, and Number for NO Voucher Bills
            BILL.HIST.REC<13>=BILL.HIST.REC<8>
            BILL.HIST.REC<14>='999999'
            BILL.HIST.REC<15>=PROC.DATE
         END
         IF PREV.CARRIER#CARRIER THEN
            WRITEV END.DATE ON F.CARRIERS,CARRIER,25
            PREV.CARRIER=CARRIER
         END
      END

*Keep track of what is being written to detect a possible change in
*BILL.HIST.REC later in the program.
      BILL.HIST.REC.TEMP = BILL.HIST.REC           ; * SWB08
      WRITE BILL.HIST.REC ON F.HIST,BILL.ID
      CALL UPD.FB.STATUS.UPDATE(CLIENT,BILL.ID,F.STATUS.UPDATE)        ; * JMK154

      IF BILL.HIST.REC<37>#'' THEN       ; * JMK53
         IF BILL.HIST.REC<39>#'R' THEN   ; * JMK99
            DPROC.LIST<-1>=BILL.ID
         END                             ; * JMK99
                                         ; * JMK999
         IF NOT(TESTING) AND (CLIENT.REC<179>='' OR ONCE=1) THEN       ; * SWB01
            MR.DATE=''
            IF MR.DATE # '' THEN         ; * SWB01
               GOSUB CALC.ELAPSED.DAYS   ; * SWB01
               IF BILL.HIST.REC.TEMP # BILL.HIST.REC THEN    ; * SWB08
                  WRITE BILL.HIST.REC ON F.HIST,BILL.ID      ; * SWB08
                  CALL UPD.FB.STATUS.UPDATE(CLIENT,BILL.ID,F.STATUS.UPDATE)      ; * JMK154
               END                       ; * SWB08
            END                          ; * SWB01
            TIMELINE.TRANS.TYPE = "PN"   ; * SWB01
            GOSUB UPDATE.TIMELINE.SUMMARY          ; * SWB01
            ACC.VIN=''                   ; * SWB01
            ACC.VOUT=''                  ; * SWB01
            ACC.VIN<1>=CLIENT            ; * SWB01
            ACC.VIN<2>=BILL.ID           ; * SWB01
            ACC.VIN<3>=USER              ; * SWB01
            ACC.VIN<4>=USER.DPT          ; * SWB01
            ACC.VIN<5>=DATE()            ; * SWB01
            ACC.VIN<6>=TIME()            ; * SWB01
            ACC.VIN<7>='1'               ; * SWB01
            ACC.VIN<8>=PROG.NAME         ; * SWB01
            ACC.VIN<9>=PROG.DESC         ; * SWB01
            ACC.VIN<10>=PACK.NAME        ; * SWB01
            ACC.VIN<11>=CO.NAME          ; * SWB01
            W.REASON = ACCESS.REASON     ; * SWB01
            ACC.VIN<12> = W.REASON       ; * SWB01

            READ TEMP.CARRIER.REC FROM F.CARRIERS, CARRIER ELSE TEMP.CARRIER.REC = ''      ; * SWB08
            CALL UPD.FB.BILLS.ACCESS(ACC.VIN,ACC.VOUT,CLIENT.REC,TEMP.CARRIER.REC,ORIG.BILL.REC,F.ACCESS,F.TABLES)       ; * SWB01
         END                             ; * SWB01
      END                                ; * JMK53
      READ D.CRX FROM F.CRX,BILL.ID THEN
*
*       Don't Update UP File with CRX Record.... CRX is Handled with FB.BILLS
*       records

         IF BANK='N' THEN
* Set Check Date, Amount, and Number for NO Voucher Bills
            D.CRX<13>=BILL.HIST.REC<8>
            D.CRX<14>='999999'
            D.CRX<15>=PROC.DATE
         END
         D.CRX<37>=PROC.DATE
         WRITE D.CRX ON F.CRX,BILL.ID
      END

      ENTERED.BY=BILL.HIST.REC<53>
      VERIFIED.BY=BILL.HIST.REC<54>
      IF ENTERED.BY#'' THEN
         ENT.ID=PROC.DATE:"*":CLIENT:"*":ENTERED.BY
*
         READ DENT.BY FROM F.EMP.PERF,ENT.ID THEN
            UP.ARRAY=DENT.BY
         END ELSE
            DENT.BY=''
            UP.ARRAY='*NEW*'
         END
         UP.ID='EMP.PERF*':ENT.ID ; GOSUB UPDATE.UP.FILE
*
         DENT.BY<1>+=1
         WRITE DENT.BY ON F.EMP.PERF,ENT.ID
      END

      IF VERIFIED.BY#'' THEN
         VER.ID=PROC.DATE:"*":CLIENT:"*":VERIFIED.BY
         READ DVER.BY FROM F.EMP.PERF,VER.ID THEN
            UP.ARRAY=DVER.BY
         END ELSE
            DVER.BY=''
            UP.ARRAY='*NEW*'
         END
         UP.ID='EMP.PERF*':VER.ID ; GOSUB UPDATE.UP.FILE
         DVER.BY<2>+=1
         WRITE DVER.BY ON F.EMP.PERF,VER.ID
      END

      IF PROC.DATE#'' THEN
         READ DCLIENT.SUM FROM F.CLIENT.SUM,CLIENT THEN
            UP.ARRAY=DCLIENT.SUM
            IF PROC.DATE < DCLIENT.SUM<1> THEN DCLIENT.SUM<1>=PROC.DATE
            IF PROC.DATE > DCLIENT.SUM<2> THEN DCLIENT.SUM<2>=PROC.DATE
            DCLIENT.SUM<3>=+1
         END ELSE
            UP.ARRAY='*NEW*'
            DCLIENT.SUM=PROC.DATE
            DCLIENT.SUM<2>=PROC.DATE
            DCLIENT.SUM<3>=1
         END
         UP.ID='CLIENT.SUM*':CLIENT ; GOSUB UPDATE.UP.FILE
         WRITE DCLIENT.SUM ON F.CLIENT.SUM,CLIENT
      END

*
* Do not update the OPEN BILLS if the bill is....
* REJECTED(HOLD), NEVERPAY, etc....
*

      IF HOLD.FLAG OR NEVERPAY.FLAG OR DUP OR AUDIT.REVIEW.FLAG OR BANK.FB.TYPE = 'N' OR CLIENT[1,2]='99' OR (CLIENT.REC<179>#'' AND ONCE=0) ELSE      ; * JMK59 ; * JMK97 ; * JMK128
         OPEN.ID=CLIENT:'*':BILL.ID

         READ TEST FROM F.OPEN,OPEN.ID THEN        ; * JMK96
            SUBJ='Possible Duplicate Freight Bill Processing!'         ; * JMK96
            TEXT=USER:' processed the account ':CLIENT:'-':CLIENT.REC<2>:' with a bill'    ; * JMK96
            TEXT<1,-1>='that has been previously processed. Please check now.'   ; * JMK96
            TEXT<1,-1>='The pro number is : ':BILL.ID        ; * JMK96
            MVIN=''                      ; * JMK96
            MVIN<1>='HelpDesk@afs.net'   ; * JMK96
            MVIN<2,-1>='DFriend@afs.net'           ; * JMK96
            MVIN<2,-1>='nhennick@afs.net'

            MVIN<4>='AFS_FB.2.3.NW'      ; * JMK96
            MVIN<5>=SUBJ                 ; * JMK96
            MVIN<6>=TEXT                 ; * JMK96
            CALL SENDMAIL(MVIN,MVOUT)    ; * JMK96
            CALL ELINE('Client ':CLIENT:'-':CLIENT.REC<2>:', freight bill ':BILL.ID:' has already been processed and is in Open Bills.')     ; * JMK96
            CALL ELINE('Do not process this freight bill again or duplicate payments will occur.')   ; * JMK96
            CALL ELINE('Unprocess this client and notify Help Desk!')  ; * JMK96
            GO 10
            ***  STOP                         ; * 10    ????????????
            ****************************************************************************
         END                             ; * JMK96
         READ TEST FROM F.PAY,OPEN.ID THEN         ; * JMK96
            SUBJ='Possible Duplicate Freight Bill Processing!'         ; * JMK96
            TEXT=USER:' processed the account ':CLIENT:'-':CLIENT.REC<2>:' with a bill'    ; * JMK96
            TEXT<1,-1>='that has been previously processed. Please check now.'   ; * JMK96
            TEXT<1,-1>='The pro number is : ':BILL.ID        ; * JMK96
            MVIN=''                      ; * JMK96
            MVIN<1>='HelpDesk@afs.net'   ; * JMK96
            MVIN<2,-1>='DFriend@afs.net'           ; * JMK96
            MVIN<2,-1>='nhennick@afs.net'          ; * JMK96
            MVIN<4>='AFS_FB.2.3.NW'      ; * JMK96
            MVIN<5>=SUBJ                 ; * JMK96
            MVIN<6>=TEXT                 ; * JMK96
            CALL SENDMAIL(MVIN,MVOUT)    ; * JMK96
            CALL ELINE('Client ':CLIENT:'-':CLIENT.REC<2>:', freight bill ':BILL.ID:' has already been processed and is in Accruals.')       ; * JMK96
            CALL ELINE('Do not process this freight bill again or duplicate payments will occur.')   ; * JMK96
            CALL ELINE('Unprocess this client and notify Help Desk!')  ; * JMK96
            GO 10
            ***   STOP                         ; *  10   ??????????
            *************************************************************************
         END                             ; * JMK96

         IF BANK.FB.TYPE#'F' THEN        ; * JMK83 ; * JMK90 ; * JMK128
            PAY.REC = BILL.HIST.REC
            PAY.REC<133> = TODAY
            PAY.REC<134> = TODAY
            PAY.REC<135> = TODAY
            WRITE PAY.REC ON F.PAY,OPEN.ID         ; *NPR01 - Bypass FB.5.1
            UP.ARRAY='*NEW*'             ; * JMK141
            UP.ID='FB.PAY*':OPEN.ID ; GOSUB UPDATE.UP.FILE
         END ELSE
            WRITE BILL.HIST.REC ON F.PRE.OPEN,OPEN.ID        ; *NPR01
            DOPEN.LIST<-1>=OPEN.ID
         END
*
*      Don't Send FB.OPEN.BILLS Records to FU... They are handled by FB.BILLS
*      routine. (Deletes CLIENT*BILL.ID records from FB.OPEN
*
      END

*
* Delete the bill from FB.BILLS if
* it is NOT a REJECT (HOLD) Bill
*
      IF NOT(HOLD.FLAG OR AUDIT.REVIEW.FLAG) THEN
         DELETE F.BILLS,BILL.ID
      END ELSE
         READ TEMP.BILL.REC FROM F.BILLS,BILL.ID THEN
            IF TEMP.BILL.REC # BILL.REC THEN
               WRITE BILL.REC ON F.BILLS,BILL.ID
            END
         END
      END

*
* Do not update In/Out if it is a rejected bill
* (IOT is not been entered on a rejected bill....)
*
      IF NOT(HOLD.FLAG OR NEVERPAY.FLAG OR AUDIT.REVIEW.FLAG) THEN
*
* Update Client Inbound/Outbound Totals
*
         BEGIN CASE
            CASE IOT='O'
               CLIENT.YTD<16>=CLIENT.YTD<16>+CARRIER.CHG
               CLIENT.YTD<27>=CLIENT.YTD<27>+WEIGHT
            CASE IOT='I'
               CLIENT.YTD<18>=CLIENT.YTD<18>+CARRIER.CHG
               CLIENT.YTD<26>=CLIENT.YTD<26>+WEIGHT
            CASE 1
               CLIENT.YTD<61>=CLIENT.YTD<61>+CARRIER.CHG
               CLIENT.YTD<64>=CLIENT.YTD<64>+WEIGHT
         END CASE
      END

*
* Update Misroutes File
*
      TOADDS='' ; CCADDS='' ; BCCADDS=''           ; * JMK42
      TONAMES='' ; CCNAMES='' ; BCCNAMES=''        ; * JMK42
      TOTITLES='' ; CCTITLES='' ; BCCTITLES=''     ; * JMK42

      IF MR.LTRS = 'Y' AND MISROUTE.AMT > 0 AND VC.ID #'' AND IOT = 'I' AND TRANS.MODE = '1' THEN
**OR CLIENT = "06916" AND MISROUTE.AMT GT "0"
         IF BILL.REC<39>='O' AND NOT(DUP) AND NOT(BAL.DUE) AND NOT(ADD.DUE) AND NOT(CR.MEMO) THEN
            UP.ARRAY<1>='*NEW*'
            IF MISROUTE.AMT LE TRUE.COST THEN      ; * JMK108
               UP.ID='FB.MISROUTES,':CLIENT:'*':BILL.ID ; GOSUB UPDATE.UP.FILE
               WRITE BILL.REC ON F.MISROUTES,BILL.ID
               HBILL.ID = CLIENT:'*':BILL.ID       ; * NPR02
               WRITE BILL.REC ON F.MISR.HIST,HBILL.ID        ; * NPR02
            END
         END
      END

* NOTE - REMOVED MISROUTE EMAIL SECTION AND REPLACED WITH TEM EMAIL SECTION ; * JMK125
*****IF USER = "GBINO" THEN DEBUG
      TEM.FLG=0                          ; * JMK119
      IF BILL.REC<39>='O' AND NOT(DUP) AND NOT(BAL.DUE) AND NOT(ADD.DUE) AND NOT(CR.MEMO) THEN       ; * JMK119
         IF MISROUTE.AMT > 0 AND MR.EMAIL = 'Y' AND TRANS.MODE = '1' THEN TEM.FLG=1        ; * JMK119
         *****    IF CLIENT = "06916" AND MISROUTE.AMT GT "0" AND MR.EMAIL = "Y" THEN TEM.FLG = 1
         IF LCC.AMT > 0 AND MR.EMAIL = 'Y' AND TRANS.MODE = '1' THEN TEM.FLG=1   ; * JMK119
         *****     IF CLIENT = "06916" AND LCC.AMT GT "0" AND MR.EMAIL = "Y" THEN TEM.FLG = 1
      END                                ; * JMK119
      IF TEM.FLG THEN                    ; * JMK119
         TEM.REC=''                      ; * JMK119
         TEM.REC<2>=0                    ; * JMK119
         TEM.REC<3>=0                    ; * JMK119
         TEM.REC<4>=BILL.REC<2>          ; * JMK119
         TEM.REC<5>=BILL.REC<37>         ; * JMK119
         TEM.REC<6>=TRUE.COST            ; * JMK119
         TEM.REC<7>=MISROUTE.AMT         ; * JMK119
         TEM.REC<8>=LCC.AMT              ; * JMK119
         TEM.REC<9>=BEG.DATE             ; * JMK119
         TEM.REC<10>=END.DATE            ; * JMK119
         IF MISROUTE.AMT LT TRUE.COST OR LCC.AMT LT TRUE.COST THEN     ; * JMK119
            MIS.VAR=0                    ; * JMK119
            LCC.VAR=0                    ; * JMK119
            IF MISROUTE.AMT+0#0 THEN     ; * JMK119
               MIS.VAR=TRUE.COST-MISROUTE.AMT      ; * JMK119
            END                          ; * JMK119
            IF LCC.AMT+0#0 THEN          ; * JMK119
               LCC.VAR=TRUE.COST-LCC.AMT           ; * JMK119
            END                          ; * JMK119
            TEM.REC<2>=MIS.VAR           ; * JMK119
            TEM.REC<3>=LCC.VAR           ; * JMK119
            IF CLIENT='01529' THEN       ; * JMKXXX
               IF LCC.VAR+0#0 AND LCC.VAR<=500 THEN          ; * JMKXXX
                  GO TEM.END             ; * JMKXXX
               END                       ; * JMKXXX
            END                          ; * JMKXXX
            IF DIV.REC(27)#'' THEN       ; * JMK119
               NVAL=DCOUNT(DIV.REC(27),@VM)        ; * JMK119
               FOR VAL=1 TO NVAL         ; * JMK119
                  TOADD=OCONV(DIV.REC(27)<1,VAL>,'MCL')      ; * JMK119
                  TOAMT=DIV.REC(32)<1,VAL>         ; * JMK119
                  IF TOAMT = '' THEN TOAMT = 0     ; * NPR122010
                  IF OCONV(TOADD,'MCU')='BBARKER@AFS.NET' THEN         ; * JMK119
                     TOAMT=50000         ; * JMK119
                  END                    ; * JMK119
                  TODIR=OCONV(DIV.REC(33)<1,VAL>,'MCU')      ; * JMK119
                  IF MIS.VAR >= TOAMT OR LCC.VAR > 0 THEN    ; * JMK119
                     IF INDEX(TODIR,IOT,1) THEN    ; * JMK119
                        IF TRIM(TOADD)#'' THEN     ; * JMK119
                           LOCATE TOADD IN TEM.REC<1> BY 'AL' SETTING EPOS ELSE  ; * JMK119
                              INS TOADD BEFORE TEM.REC<1,EPOS>         ; * JMK119
                           END           ; * JMK119
                        END              ; * JMK119
                     END                 ; * JMK119
                  END                    ; * JMK119
               NEXT VAL                  ; * JMK119
            END                          ; * JMK119
            IF DIV.REC(28)#'' THEN       ; * JMK119
               NVAL=DCOUNT(DIV.REC(28),@VM)        ; * JMK119
               FOR VAL=1 TO NVAL         ; * JMK119
                  CCADD=OCONV(DIV.REC(28)<1,VAL>,'MCL')      ; * JMK119
                  CCAMT=DIV.REC(37)<1,VAL>         ; * JMK119
                  IF CCAMT = '' THEN CCAMT = 0     ; * NPR122010
                  IF OCONV(CCADD,'MCU')='BBARKER@AFS.NET' THEN         ; * JMK119
                     CCAMT=50000         ; * JMK119
                  END                    ; * JMK119
                  CCDIR=OCONV(DIV.REC(38)<1,VAL>,'MCU')      ; * JMK119
                  IF MIS.VAR >= CCAMT OR LCC.VAR > 0 THEN    ; * JMK119
                     IF INDEX(CCDIR,IOT,1) THEN    ; * JMK119
                        IF TRIM(CCADD)#'' THEN     ; * JMK119
                           LOCATE CCADD IN TEM.REC<1> BY 'AL' SETTING EPOS ELSE  ; * JMK119
                              INS CCADD BEFORE TEM.REC<1,EPOS>         ; * JMK119
                           END           ; * JMK119
                        END              ; * JMK119
                     END                 ; * JMK119
                  END                    ; * JMK119
               NEXT VAL                  ; * JMK119
            END                          ; * JMK119
            IF DIV.REC(29)#'' THEN       ; * JMK119
               NVAL=DCOUNT(DIV.REC(29),@VM)        ; * JMK119
               FOR VAL=1 TO NVAL         ; * JMK119
                  BCCADD=OCONV(DIV.REC(29)<1,VAL>,'MCL')     ; * JMK119
                  BCCAMT=DIV.REC(42)<1,VAL>        ; * JMK119
                  IF BCCAMT = '' THEN BCCAMT = 0   ; * NPR122010
                  IF OCONV(BCCADD,'MCU')='BBARKER@AFS.NET' THEN        ; * JMK119
                     BCCAMT=50000        ; * JMK119
                  END                    ; * JMK119
                  BCCDIR=OCONV(DIV.REC(43)<1,VAL>,'MCU')     ; * JMK119
                  IF MIS.VAR >= BCCAMT OR LCC.VAR > 0 THEN   ; * JMK119
                     IF INDEX(BCCDIR,IOT,1) THEN   ; * JMK119
                        IF TRIM(BCCADD)#'' THEN    ; * JMK119
                           LOCATE BCCADD IN TEM.REC<1> BY 'AL' SETTING EPOS ELSE           ; * JMK119
                              INS BCCADD BEFORE TEM.REC<1,EPOS>        ; * JMK119
                           END           ; * JMK119
                        END              ; * JMK119
                     END                 ; * JMK119
                  END                    ; * JMK119
               NEXT VAL                  ; * JMK119
            END                          ; * JMK119

            IF REG.FLAG THEN             ; * JMK161
               REG=DIV.REC(45)           ; * JMK119
               IF REG NE '' THEN         ; * JMK119
                  MATREAD REG.CODE.REC FROM F.REG,REG ELSE   ; * JMK119
                     MAT REG.CODE.REC=''           ; * JMK119
                  END                    ; * JMK119
                  IF REG.CODE.REC(27)#'' THEN      ; * JMK119
                     NVAL=DCOUNT(REG.CODE.REC(27),@VM)       ; * JMK119
                     FOR VAL=1 TO NVAL   ; * JMK119
                        TOADD=OCONV(REG.CODE.REC(27)<1,VAL>,'MCL')     ; * JMK119
                        TOAMT=REG.CODE.REC(32)<1,VAL>        ; * JMK119
                        IF TOAMT = '' THEN TOAMT = 0         ; * NPR122010
                        IF OCONV(TOADD,'MCU')='BBARKER@AFS.NET' THEN   ; * JMK119
                           TOAMT=50000   ; * JMK119
                        END              ; * JMK119
                        TODIR=OCONV(REG.CODE.REC(33)<1,VAL>,'MCU')     ; * JMK119
                        IF MIS.VAR >= TOAMT OR LCC.VAR > 0 THEN        ; * JMK119
                           IF INDEX(TODIR,IOT,1) THEN        ; * JMK119
                              IF TRIM(TOADD)#'' THEN         ; * JMK119
                                 LOCATE TOADD IN TEM.REC<1> BY 'AL' SETTING EPOS ELSE      ; * JMK119
                                    INS TOADD BEFORE TEM.REC<1,EPOS>   ; * JMK119
                                 END     ; * JMK119
                              END        ; * JMK119
                           END           ; * JMK119
                        END              ; * JMK119
                     NEXT VAL            ; * JMK119
                  END                    ; * JMK119
                  IF REG.CODE.REC(28)#'' THEN      ; * JMK119
                     NVAL=DCOUNT(REG.CODE.REC(28),@VM)       ; * JMK119
                     FOR VAL=1 TO NVAL   ; * JMK119
                        CCADD=OCONV(REG.CODE.REC(28)<1,VAL>,'MCL')     ; * JMK119
                        CCAMT=REG.CODE.REC(37)<1,VAL>        ; * JMK119
                        IF CCAMT = '' THEN CCAMT = 0         ; * NPR122010
                        IF OCONV(CCADD,'MCU')='BBARKER@AFS.NET' THEN   ; * JMK119
                           CCAMT=50000   ; * JMK119
                        END              ; * JMK119
                        CCDIR=OCONV(REG.CODE.REC(38)<1,VAL>,'MCU')     ; * JMK119
                        IF MIS.VAR >= CCAMT OR LCC.VAR > 0 THEN        ; * JMK119
                           IF INDEX(CCDIR,IOT,1) THEN        ; * JMK119
                              IF TRIM(CCADD)#'' THEN         ; * JMK119
                                 LOCATE CCADD IN TEM.REC<1> BY 'AL' SETTING EPOS ELSE      ; * JMK119
                                    INS CCADD BEFORE TEM.REC<1,EPOS>   ; * JMK119
                                 END     ; * JMK119
                              END        ; * JMK119
                           END           ; * JMK119
                        END              ; * JMK119
                     NEXT VAL            ; * JMK119
                  END                    ; * JMK119
                  IF REG.CODE.REC(29)#'' THEN      ; * JMK119
                     NVAL=DCOUNT(REG.CODE.REC(29),@VM)       ; * JMK119
                     FOR VAL=1 TO NVAL   ; * JMK119
                        BCCADD=OCONV(REG.CODE.REC(29)<1,VAL>,'MCL')    ; * JMK119
                        BCCAMT=REG.CODE.REC(42)<1,VAL>       ; * JMK119
                        IF BCCAMT = '' THEN BCCAMT = 0       ; * NPR122010
                        IF OCONV(BCCADD,'MCU')='BBARKER@AFS.NET' THEN  ; * JMK119
                           BCCAMT=50000  ; * JMK119
                        END              ; * JMK119
                        BCCDIR=OCONV(REG.CODE.REC(43)<1,VAL>,'MCU')    ; * JMK119
                        IF MIS.VAR >= BCCAMT OR LCC.VAR > 0 THEN       ; * JMK119
                           IF INDEX(BCCDIR,IOT,1) THEN       ; * JMK119
                              IF TRIM(BCCADD)#'' THEN        ; * JMK119
                                 LOCATE BCCADD IN TEM.REC<1> BY 'AL' SETTING EPOS ELSE     ; * JMK119
                                    INS BCCADD BEFORE TEM.REC<1,EPOS>  ; * JMK119
                                 END     ; * JMK119
                              END        ; * JMK119
                           END           ; * JMK119
                        END              ; * JMK119
                     NEXT VAL            ; * JMK119
                  END                    ; * JMK119
               END                       ; * JMK119
            END                          ; * JMK119

            IF CLIENT.REC<153>#'' THEN   ; * JMK119
               ****      IF USER = "GBINO" THEN DEBUG
               NVAL=DCOUNT(CLIENT.REC<153>,@VM)    ; * JMK119
               FOR VAL=1 TO NVAL         ; * JMK119
                  TOADD=OCONV(CLIENT.REC<153,VAL>,'MCL')     ; * JMK119
                  TOAMT=CLIENT.REC<158,VAL>        ; * JMK119
                  IF TOAMT = "" THEN TOAMT = 0     ; * NPR121610
                  TODIR=OCONV(CLIENT.REC<159,VAL>,'MCU')     ; * JMK119
                  IF MIS.VAR >= TOAMT OR LCC.VAR > 0 THEN    ; * JMK119
                     IF INDEX(TODIR,IOT,1) THEN    ; * JMK119
                        IF TRIM(TOADD)#'' THEN     ; * JMK119
                           LOCATE TOADD IN TEM.REC<1> BY 'AL' SETTING EPOS ELSE  ; * JMK119
                              INS TOADD BEFORE TEM.REC<1,EPOS>         ; * JMK119
                           END           ; * JMK119
                        END              ; * JMK119
                     END                 ; * JMK119
                  END                    ; * JMK119
               NEXT VAL                  ; * JMK119
            END                          ; * JMK119
            IF CLIENT.REC<154>#'' THEN   ; * JMK119
               NVAL=DCOUNT(CLIENT.REC<154>,@VM)    ; * JMK119
               FOR VAL=1 TO NVAL         ; * JMK119
                  CCADD=OCONV(CLIENT.REC<154,VAL>,'MCL')     ; * JMK119
                  CCNAME=CLIENT.REC<161,VAL>       ; * JMK119
                  CCTITLE=CLIENT.REC<162,VAL>      ; * JMK119
                  CCAMT=CLIENT.REC<163,VAL>        ; * JMK119
                  IF CCAMT = '' THEN CCAMT = 0     ; * NPR122010
                  CCDIR=OCONV(CLIENT.REC<164,VAL>,'MCU')     ; * JMK119
                  CCSEP=CLIENT.REC<165,VAL>        ; * JMK119
                  IF MIS.VAR >= CCAMT OR LCC.VAR > 0 THEN    ; * JMK119
                     IF INDEX(CCDIR,IOT,1) THEN    ; * JMK119
                        IF TRIM(CCADD)#'' THEN     ; * JMK119
                           LOCATE CCADD IN TEM.REC<1> BY 'AL' SETTING EPOS ELSE  ; * JMK119
                              INS CCADD BEFORE TEM.REC<1,EPOS>         ; * JMK119
                           END           ; * JMK119
                        END              ; * JMK119
                     END                 ; * JMK119
                  END                    ; * JMK119
               NEXT VAL                  ; * JMK119
            END                          ; * JMK119
            IF CLIENT.REC<155>#'' THEN   ; * JMK119
               NVAL=DCOUNT(CLIENT.REC<155>,@VM)    ; * JMK119
               FOR VAL=1 TO NVAL         ; * JMK119
                  BCCADD=OCONV(CLIENT.REC<155,VAL>,'MCL')    ; * JMK119
                  BCCNAME=CLIENT.REC<166,VAL>      ; * JMK119
                  BCCTITLE=CLIENT.REC<167,VAL>     ; * JMK119
                  BCCAMT=CLIENT.REC<168,VAL>       ; * JMK119
                  IF BCCAMT = '' THEN BCCAMT = 0   ; * NPR122010
                  BCCDIR=OCONV(CLIENT.REC<169,VAL>,'MCU')    ; * JMK119
                  BCCSEP=CLIENT.REC<170,VAL>       ; * JMK119
                  IF MIS.VAR >= BCCAMT OR LCC.VAR > 0 THEN   ; * JMK119
                     IF INDEX(BCCDIR,IOT,1) THEN   ; * JMK119
                        IF TRIM(BCCADD)#'' THEN    ; * JMK119
                           LOCATE BCCADD IN TEM.REC<1> BY 'AL' SETTING EPOS ELSE           ; * JMK119
                              INS BCCADD BEFORE TEM.REC<1,EPOS>        ; * JMK119
                           END           ; * JMK119
                        END              ; * JMK119
                     END                 ; * JMK119
                  END                    ; * JMK119
               NEXT VAL                  ; * JMK119
            END                          ; * JMK119
            IF TEM.REC<1>#'' THEN        ; * JMK119
               AFS.ADD='bbarker@afs.net'           ; * JMK119
               LOCATE AFS.ADD IN TEM.REC<1> BY 'AL' SETTING EPOS ELSE  ; * JMK119
                  INS AFS.ADD BEFORE TEM.REC<1,EPOS>         ; * JMK119
               END                       ; * JMK119

               LOCATE AFS.ADD IN TEM.REC<1> BY 'AL' SETTING EPOS ELSE  ; * JMK119
                  INS AFS.ADD BEFORE TEM.REC<1,EPOS>         ; * JMK119
               END                       ; * JMK119
               IF SERV.SLSMAN.EMAIL#'' THEN        ; * JMK119
                  SLS.ADD=OCONV(SERV.SLSMAN.EMAIL,'MCL')     ; * JMK119
                  LOCATE SLS.ADD IN TEM.REC<1> BY 'AL' SETTING EPOS ELSE         ; * JMK119
                     INS SLS.ADD BEFORE TEM.REC<1,EPOS>      ; * JMK119
                  END                    ; * JMK119
               END                       ; * JMK119
               IF SERV.SLSMAN.MGR.EMAIL#'' THEN    ; * JMK119
                  MGR.ADD=SERV.SLSMAN.MGR.EMAIL    ; * JMK119
                  LOCATE MGR.ADD IN TEM.REC<1> BY 'AL' SETTING EPOS ELSE         ; * JMK119
                     INS MGR.ADD BEFORE TEM.REC<1,EPOS>      ; * JMK119
                  END                    ; * JMK119
               END                       ; * JMK119
               TEM.REC<1>=CHANGE(TEM.REC<1>,@VM,'|')         ; * JMK119
               IF NOT(CLIENT.REC<316>) THEN        ; * Remove TEM report for Airgas
                  WRITE TEM.REC ON F.TEM,BILL.ID   ; * JMK119
                  UP.ID='FB.TEM,':CLIENT:'*':BILL.ID
                  UP.ARRAY='*NEW*'
                  GOSUB UPDATE.UP.FILE
               END
               WRITE TEM.REC ON F.TEM.HIST,BILL.ID           ; * JMK119
               UP.ID='FB.TEM.HIST,':CLIENT:'*':BILL.ID
               UP.ARRAY='*NEW*'
               GOSUB UPDATE.UP.FILE
            END                          ; * JMK119
TEM.END:    * ; * JMKXXX
         END                             ; * JMK119
      END                                ; * JMK119D

*
* Update Truckload File
*
**********************************************************************
*                                                                    *
*    This has not be added to the unprocess process                  *
*                                                                    *
**********************************************************************
      IF TRANS.MODE = "6" THEN           ; * Carrier is Truckload ***
         IF NOT(NEVERPAY.FLAG) AND NOT(DUP) AND NOT(BAL.DUE) AND NOT(ADD.DUE) AND NOT(CR.MEMO) THEN
            IF BILL.REC<3>#'' AND BILL.REC<4>#'' THEN
*
* Make sure there is an orgin and dest zip ***
*
               TL.ID=BILL.REC<3>[1,5]:"*":BILL.REC<4>[1,5]
               READ TL.REC FROM F.TL.HIST,TL.ID ELSE TL.REC=''
               INS CLIENT BEFORE TL.REC<1,1>
               INS CARRIER BEFORE TL.REC<2,1>
               INS BILL.DATE BEFORE TL.REC<3,1>
               INS WEIGHT+0 BEFORE TL.REC<4,1>
               INS BILL.REC<19>+0 BEFORE TL.REC<5,1>
               INS ACTUAL.CHG+0 BEFORE TL.REC<6,1>
               INS IOT BEFORE TL.REC<7,1>
               WRITE TL.REC ON F.TL.HIST,TL.ID
            END
         END
      END

      GOTO 1000

***********************************************************************
2000:* Update Client Incidental Charges and Update File
***********************************************************************
      LOCATE PROC.DATE IN CLIENT.REC<84> BY 'AR' SETTING POS ELSE POS=POS-1

*Done Looping through bills to process

      IF POS=0 THEN POS=1

      CARRIER.COUNT=DCOUNT(CARRIERS,CHAR(254))

      REG.DIV.XREF.ID=CLIENT:'*':END.DATE          ; * JMK141
      READ TEST FROM F.REG.DIV.XREF,REG.DIV.XREF.ID THEN     ; * JMK141
         REG.DIV.ARRAY=TEST              ; * JMK141
      END ELSE                           ; * JMK141
         REG.DIV.ARRAY=''                ; * JMK141
         NVAL=DCOUNT(DIV.LIST<1>,@VM)    ; * JMK141
         FOR VAL=1 TO NVAL               ; * JMK141
            IF DIV.LIST<2,VAL>#'' THEN   ; * JMK141
               DIV.KEY=DIV.LIST<1,VAL>   ; * JMK141
               DIV.CARR.CNT=DIV.LIST<2,VAL>        ; * JMK141
               LOCATE DIV.KEY IN REG.DIV.ARRAY<1> BY 'AL' SETTING DPOS ELSE      ; * JMK141
                  INS DIV.KEY BEFORE REG.DIV.ARRAY<1,DPOS>   ; * JMK141
                  INS DIV.CARR.CNT BEFORE REG.DIV.ARRAY<2,DPOS>        ; * JMK141
               END                       ; * JMK141
               IF CLIENT='01706' OR CLIENT='00949' OR CLIENT='00866' OR CLIENT='01633' OR CLIENT='01977' OR CLIENT='01282' OR CLIENT='01468' OR CLIENT='01485' THEN        ; * JMK141   ; * DRF029
                  READ DIV.ITM FROM F.DIV,DIV.LIST<1,VAL> ELSE DIV.ITM=''        ; * JMK141
                  REG.KEY=DIV.ITM<45>    ; * JMK141
                  IF REG.KEY#'' THEN     ; * JMK141
                     LOCATE REG.KEY IN REG.DIV.ARRAY<3> BY 'AL' SETTING RPOS ELSE          ; * JMK141
                        INS REG.KEY BEFORE REG.DIV.ARRAY<3,RPOS>       ; * JMK141
                        INS '' BEFORE REG.DIV.ARRAY<4,RPOS>  ; * JMK141
                        INS '' BEFORE REG.DIV.ARRAY<5,RPOS>  ; * JMK141
                     END                 ; * JMK141
                     REG.DIV.ARRAY<4,RPOS,-1>=DIV.CARR.CNT   ; * JMK141
                     LOCATE DIV.KEY IN REG.DIV.ARRAY<5,RPOS> BY 'AL' SETTING RDPOS ELSE    ; * JMK141
                        REG.DIV.ARRAY<5,RPOS,-1>=DIV.KEY     ; * JMK141
                     END                 ; * JMK141
                  END                    ; * JMK141
               END                       ; * JMK141
            END                          ; * JMK141
         NEXT VAL                        ; * JMK141
         WRITE REG.DIV.ARRAY ON F.REG.DIV.XREF,REG.DIV.XREF.ID         ; * JMK141
         UP.ARRAY='*NEW*'                ; * JMK141
         UP.ID='FB.REG.DIV.XREF*':CLIENT:"*":END.DATE ; GOSUB UPDATE.UP.FILE     ; * JMK141
      END                                ; * JMK141
***************************************************************
* read if client paticipating
* if participating then
* call ppp.build.trans
* do bill have a process.dt yet . need it for select
* Begin GRB001
      READ PPP FROM F.PPP,CLIENT THEN

         VIN<1> = CLIENT
         VIN<2>=BEG.DATE
         VIN<3>=END.DATE
         CALL PPP.BUILD.TRANS(VIN,VOUT)
         PPP.FEDEX1 = VOUT<1>
         PPP.FEDEX2 = VOUT<2>
         PPP.UPS1 = VOUT<3>
      END ELSE
         PPP.FEDEX1=0
         PPP.FEDEX2=0
         PPP.UPS1 =0
      END
* End GRB01
* MAKE CALL TO EXTERNAL PROCESSING SUBROUTINE ; * JMK32

      PVIN=''                            ; * JMK32
      PVOUT=''                           ; * JMK32
      PVIN<1>=BEG.DATE                   ; * JMK32
      PVIN<2>=END.DATE                   ; * JMK32
      PVIN<3>=PROC.DATE                  ; * JMK32
      PVIN<4>=DAYS                       ; * JMK32
      PVIN<5>=BILLS.COUNT                ; * JMK32
      PVIN<6>=CARRIER.COUNT              ; * JMK32
      PVIN<7>=DUP.COUNT                  ; * JMK32
      PVIN<8>=EDI.COUNT.ARRAY            ; * JMK32
      PVIN<9>=EDI.COUNT<1,1>             ; * JMK32
      PVIN<10>=EDI.MD.FEDEX.GROUND.COUNT           ; * JMK32
      PVIN<11>=EDI.COUNT.PARCEL.NON.FEDEX.AIR      ; * JMK32
      PVIN<12>=EDI.COUNT<1,2>            ; * JMK32
      PVIN<13>=HOLD.COUNT                ; * JMK32
      PVIN<14>=NEVERPAY.COUNT            ; * JMK32
      PVIN<15>=PR.BILLS.COUNT            ; * JMK32
      PVIN<16>=RELEASED.COUNT            ; * JMK32
      PVIN<17>=UPS.BILLS.COUNT           ; * JMK32
      PVIN<18>=UPS.TRACK.COUNT           ; * JMK32
      PVIN<19>=CHANGE(DIV.CODE,@AM,@VM)  ; * JMK32
      PVIN<20>=0                         ; * JMK66
      PVIN<21>=USER                      ; * JMK75
      PVIN<22>=DIV.LIST<1>               ; * JMK89
      PVIN<23>=DIV.LIST<2>               ; * JMK89
      PVIN<24>='C'                       ; * JMK124
      PVIN<25>=REG.DIV.ARRAY<1>          ; * JMK141
      PVIN<26>=REG.DIV.ARRAY<2>          ; * JMK141
      PVIN<27>=REG.DIV.ARRAY<3>          ; * JMK141
      PVIN<28>=REG.DIV.ARRAY<4>          ; * JMK141
      PVIN<29>=REG.DIV.ARRAY<5>          ; * JMK141
      PVIN<31>=INVOICE<5>                ; * DRF028
      PVIN<32>=LTL.COUNT                 ; * DRF033
      PVIN<33>=NON.LTL.COUNT             ; * DRF033
      PVIN<34>=INTL.COUNT                ; * DRF042
      PVIN<35>=NON.INTL.COUNT            ; * DRF042
      CALL FB.PROCESS.CALC(PVIN,PVOUT,CLIENT,CLIENT.REC)     ; * JMK32

      CORP.FEES=PVOUT                    ; * JMK32
      POSTAGE=CORP.FEES<4>               ; * JMK32
      PR.PROCESS.FEE=CORP.FEES<10>       ; * JMK32
      PROCESS.FEE=CORP.FEES<14>          ; * JMK32
      PRE.AUDIT.FEE=CORP.FEES<15>        ; * JMK32
      WEEKLY.FLAT=CORP.FEES<17>          ; * JMK32
      WKLY.POSTAGE.FEE=CORP.FEES<18>     ; * JMK32
      AFSI.FEE=CORP.FEES<19>             ; * JMK32
      UPS.FEE=CORP.FEES<20>              ; * JMK32
      SERVICE.FEE=CORP.FEES<21>          ; * JMK32
      LOGISTICS.FEE=CORP.FEES<22>        ; * JMK32
      TRN.ALLOC.CODE=CORP.FEES<23>       ; * JMK51
      TRN.ALLOC.FEES=CORP.FEES<24>       ; * JMK51
      PULSE.TMS.FEE=CORP.FEES<43>        ; * JMK32
      ANALYTICS.FEE=CORP.FEES<45>        ; * DRF031
      IF INV.LVL='D' THEN                ; * JMK32
         DIV.FEES=''                     ; * JMK32
         DVAL=DCOUNT(DIV.LIST<1>,@VM)    ; * JMK32
         FOR VAL=1 TO DVAL               ; * JMK32
            DIV.CARRIER.COUNT=DCOUNT(DIV.LIST<2,VAL>,@SVM)   ; * JMK32
            DIV.NEVERPAY.COUNT=DIV.COUNTS<1,VAL>   ; * JMK32
            DIV.DUP.COUNT=DIV.COUNTS<2,VAL>        ; * JMK32
            DIV.RELEASED.COUNT=DIV.COUNTS<3,VAL>   ; * JMK32
            DIV.HOLD.COUNT=DIV.COUNTS<4,VAL>       ; * JMK32
            DIV.BILLS.COUNT=DIV.COUNTS<5,VAL>      ; * JMK32
            DIV.PR.BILLS.COUNT=DIV.COUNTS<6,VAL>   ; * JMK32
            DIV.EDI.COUNT=''             ; * JMK32
            DIV.EDI.COUNT<1,1>=DIV.COUNTS<7,VAL>   ; * JMK32
            DIV.EDI.COUNT<1,2>=DIV.COUNTS<8,VAL>   ; * JMK32
            DIV.UPS.BILLS.COUNT=DIV.COUNTS<9,VAL>  ; * JMK32
            DIV.UPS.TRACK.COUNT=DIV.COUNTS<10,VAL>           ; * JMK32
            DIV.EDI.COUNT.ARRAY=DIV.COUNTS<11,VAL>           ; * JMK32
            DIV.EDI.MD.FEDEX.GROUND.COUNT=DIV.COUNTS<12,VAL>           ; * JMK32
            DIV.EDI.COUNT.PARCEL.NON.FEDEX.AIR=DIV.COUNTS<13,VAL>      ; * JMK32
            IF CLIENT = '01468' AND DIV.BILLS.COUNT+0=0 THEN GO SKIP.DIV         ; * DRF043
            PVIN=''                      ; * JMK32
            PVOUT=''                     ; * JMK32
            PVIN<1>=BEG.DATE             ; * JMK32
            PVIN<2>=END.DATE             ; * JMK32
            PVIN<3>=PROC.DATE            ; * JMK32
            PVIN<4>=DAYS                 ; * JMK32
            PVIN<5>=DIV.BILLS.COUNT      ; * JMK32
            PVIN<6>=DIV.CARRIER.COUNT    ; * JMK32
            PVIN<7>=DIV.DUP.COUNT        ; * JMK32
            PVIN<8>=DIV.EDI.COUNT.ARRAY  ; * JMK32
            PVIN<9>=DIV.EDI.COUNT<1,1>   ; * JMK32
            PVIN<10>=DIV.EDI.MD.FEDEX.GROUND.COUNT           ; * JMK32
            PVIN<11>=DIV.EDI.COUNT.PARCEL.NON.FEDEX.AIR      ; * JMK32
            PVIN<12>=DIV.EDI.COUNT<1,2>  ; * JMK32
            PVIN<13>=DIV.HOLD.COUNT      ; * JMK32
            PVIN<14>=DIV.NEVERPAY.COUNT  ; * JMK32
            PVIN<15>=DIV.PR.BILLS.COUNT  ; * JMK32
            PVIN<16>=DIV.RELEASED.COUNT  ; * JMK32
            PVIN<17>=DIV.UPS.BILLS.COUNT           ; * JMK32
            PVIN<18>=DIV.UPS.TRACK.COUNT           ; * JMK32
            PVIN<19>=DIV.LIST<1,VAL>     ; * JMK66 ; * JMK75
            PVIN<20>=1                   ; * JMK66
            PVIN<21>=USER                ; * JMK75
            PVIN<22>=DIV.LIST<1,VAL>     ; * JMK89
            PVIN<23>=DIV.LIST<2,VAL>     ; * JMK89
            PVIN<24>='D'                 ; * JMK124
            PVIN<25>=REG.DIV.ARRAY<1>    ; * JMK141
            PVIN<26>=REG.DIV.ARRAY<2>    ; * JMK141
            PVIN<27>=REG.DIV.ARRAY<3>    ; * JMK141
            PVIN<28>=REG.DIV.ARRAY<4>    ; * JMK141
            PVIN<29>=REG.DIV.ARRAY<5>    ; * JMK141
            CALL FB.PROCESS.CALC(PVIN,PVOUT,CLIENT,CLIENT.REC)         ; * JMK32

            DATT=DCOUNT(PVOUT,@AM)       ; * JMK75
            FOR ATT=1 TO DATT            ; * JMK75
               DIV.FEES<ATT,-1>=PVOUT<ATT>         ; * JMK32
            NEXT ATT                     ; * JMK32
         NEXT VAL                        ; * JMK32
SKIP.DIV:***
         POSTAGE=SUM(DIV.FEES<4>)        ; * JMK32
         PR.PROCESS.FEE=SUM(DIV.FEES<10>)          ; * JMK32
         PROCESS.FEE=SUM(DIV.FEES<14>)   ; * JMK32
         PRE.AUDIT.FEE=SUM(DIV.FEES<15>)           ; * JMK32
         WEEKLY.FLAT=SUM(DIV.FEES<17>)   ; * JMK32
         WKLY.POSTAGE.FEE=SUM(DIV.FEES<18>)        ; * JMK32
         AFSI.FEE=SUM(DIV.FEES<19>)      ; * JMK32
         UPS.FEE=SUM(DIV.FEES<20>)       ; * JMK32
         SERVICE.FEE=SUM(DIV.FEES<21>)   ; * JMK32
         LOGISTICS.FEE=SUM(DIV.FEES<22>)           ; * JMK32
         TRN.ALLOC.CODE=DIV.FEES<23>     ; * JMK51
         TRN.ALLOC.FEES=DIV.FEES<24>     ; * JMK51
         PULSE.TMS.FEE=SUM(DIV.FEES<43>)           ; * JMK32
         ANALYTICS.FEE=SUM(DIV.FEES<45>)           ; * DRF031

      END                                ; * JMK32

      CLIENT.YTD<31>=CLIENT.YTD<31>+POSTAGE
*
      CLIENT.YTD<32>=CLIENT.YTD<32>+PROCESS.FEE+AFSI.FEE+PULSE.TMS.FEE
*
      CLIENT.YTD<75>=CLIENT.YTD<75>+PRE.AUDIT.FEE  ; * JMK18

      CLIENT.YTD<33>=CLIENT.YTD<33>+SERVICE.FEE
      CLIENT.YTD<37>=CLIENT.YTD<37>+LOGISTICS.FEE
      CLIENT.YTD<53>=CLIENT.YTD<53>+UPS.FEE
      CLIENT.YTD<85>=CLIENT.YTD<85>+ANALYTICS.FEE  ; * DRF031

      CLIENT.YTD<50>=CLIENT.YTD<50>+WKLY.POSTAGE.FEE

*
* Update year to date commissions

      DISC.COMM=INVOICE<6>
      OVR.CHG.COMM=INVOICE<4>
      UPS.OVR.CHG.COMM = INVOICE<9>
      CONSULT.COMM=INVOICE<5>
      CLIENT.YTD<28>=CLIENT.YTD<28>+DISC.COMM
      CLIENT.YTD<29>=CLIENT.YTD<29>+OVR.CHG.COMM
      CLIENT.YTD<30>=CLIENT.YTD<30>+CONSULT.COMM
      CLIENT.YTD<54>=CLIENT.YTD<54>+UPS.OVR.CHG.COMM
      CLIENT.YTD<74>=CLIENT.YTD<74>+MGMT.SVC.COMM  ; * JMK12
      CLIENT.YTD<40,-1>=PROC.DATE

      DT.POS = DCOUNT(CLIENT.YTD<40>,@VM)          ; * NPR10
      CLIENT.YTD<82,DT.POS> = BILLS.COUNT          ; * NPR10
      CLIENT.YTD<83,DT.POS> = ACTUAL.CHG.TOTAL     ; * NPR10

      IF END.DATE >= ICONV('09/15/08','D') THEN    ; * JMK98
         BEGIN CASE                      ; * JMK98
            CASE CLIENT='01078'          ; * JMK98
            CASE CLIENT='10356'          ; * JMK98
            CASE 1                       ; * JMK98
               IF CLIENT.REC<70,10>#'Y' THEN       ; * JMK98
                  CLIENT.REC<70,10>='Y'  ; * JMK98
                  ADJUST.CLIENT=CLIENT:'*':DATE():'*':TIME():'*FB.2.3.NW'        ; * JMK98
                  WRITE CLIENT.REC ON F.ADJUST.CLIENT,ADJUST.CLIENT    ; * JMK98
               END                       ; * JMK98
         END CASE                        ; * JMK98
      END                                ; * JMK98
      WRITE CLIENT.REC ON F.CLIENTS,CLIENT         ; * LOCK IT
*
* Update Date XREF Files
*
      IF DOPEN.LIST#'' THEN
         IF CLIENT[1,2] # '99' THEN
            UP.ARRAY='*NEW*'
            UP.ID='FB.OPEN.DATE.XREF,':CLIENT:'*':PROC.DATE ; GOSUB UPDATE.UP.FILE
         END
      END
      IF DPROC.LIST#'' THEN
         UP.ARRAY='*NEW*'
         UP.ID='FB.PROC.DATE.XREF,':CLIENT:'*':PROC.DATE ; GOSUB UPDATE.UP.FILE
         WRITE DPROC.LIST ON F.PROC.DATE.XREF,PROC.DATE
      END

      IF NOT(TESTING) OR CLIENT = "06916" THEN     ; * JMK33
*
* Run Misroute Letters
*
         IF NOT(CLIENT.REC<316>) THEN    ; * Remove report Airgas
            IF MR.LTRS THEN
               CLEARDATA                 ; * JMK164
               IF ONCE=1 THEN            ; * JMK97
                  DATA 'ONCE-FROM.PROCESS-':END.DATE,CLIENT  ; * JMK97
               END ELSE                  ; * JMK97
                  DATA 'STD-FROM.PROCESS-':END.DATE,CLIENT   ; * JMK03; * JMK04
               END                       ; * JMK97
               EXECUTE 'FB.MR.LTRS'
            END
            IF MR.EMAIL='Y' THEN         ; * JMK04
               ****          IF USER = "GBINO" THEN DEBUG
               CLEARDATA                 ; * JMK164
               IF ONCE=1 THEN            ; * JMK119
                  DATA 'ONCE-FROM.PROCESS-':END.DATE,CLIENT  ; * JMK119
               END ELSE                  ; * JMK119
                  DATA 'STD-FROM.PROCESS-':END.DATE,CLIENT   ; * JMK119
               END                       ; * JMK119
               EXECUTE 'FB.TEM.EMAILS'   ; * JMK119
            END                          ; * JMK04
         END
      END                                ; * JMK31

*
* Calculate current manual logistics fees
*
      PREC='SELECT FB.LOGISTICS WITH 1 GE "':BEG.DATE'D2/'
      PREC=PREC:'" AND WITH 1 LE "':END.DATE'D2/'
      PREC=PREC:'" AND WITH CLIENT# = "':CLIENT:'"'
      EXECUTE PREC PASSLIST CAPTURING OUTPUT
      NUM.ITMS = @SELECTED
      IF SYSTEM(11) THEN
         LOG.DONE = 0
         CLAIMS.DONE = 0
         LOOP
            READNEXT LOG.ID ELSE LOG.DONE = 1
         UNTIL LOG.DONE = 1 DO
            READ LOG.REC FROM F.LOGS, LOG.ID THEN

***              INVOICE<8>  (Goes to sales Code 12 - generated via Misroutes) and new
***                           Sales code 13 amounts currently generated via FB.PROCESS.CALC
***              INVOICE<14> (intent is to add this manually generated fee (See FB.2.4) to sales Code 96 .

               ID.VC = FIELD(LOG.ID,"*",3)         ; * NPR018  - Manualy entered Logistics fees do not have a VEND.CUST No. only DATE*CLIENT
               IF ID.VC = "" THEN        ; * NPR018
                  INVOICE<14>=INVOICE<14>+LOG.REC<2>         ; * NPR018  - (To sales code 96)
               END ELSE
                  INVOICE<8>=INVOICE<8>+LOG.REC<2>           ; * NPR018  - (To sales code 12 OR 13 ???)
               END                       ; * NPR018
            END
         REPEAT
      END
      CLIENT.YTD<41,-1> = INVOICE<8>
      CLIENT.YTD<84,-1> = INVOICE<14>    ; * NPR018  - Manualy entered Logistics fees Sales code 96

*
* Calculate current manual programming fees
*
      PREC='SELECT FB.PROG.FEE WITH 1 GE "':BEG.DATE'D2/'
      PREC=PREC:'" AND WITH 1 LE "':END.DATE'D2/'
      PREC=PREC:'" AND WITH CLIENT# = "':CLIENT:'"'
      EXECUTE PREC PASSLIST CAPTURING OUTPUT
      NUM.ITMS = @SELECTED
      IF SYSTEM(11) THEN
         PROG.DONE = 0
         LOOP
            READNEXT PROG.ID ELSE PROG.DONE = 1
         UNTIL PROG.DONE = 1 DO
            READ PROG.REC FROM F.PROG.FEE, PROG.ID THEN
               LOCATE END.DATE IN PPP.CLIENT.REC<1> BY 'AR' SETTING PPP.POS ELSE PPP.POS=PPP.POS-1   ; * DRF036

               IF PPP.POS=0 THEN PPP.CLIENT.REC=''           ; * DRF036
               PROG.CARRIER=FIELD(PROG.ID,'*',3)   ; * DRF036
               IF PROG.CARRIER='00015' OR PROG.CARRIER='01075' THEN    ; * DRF036
                  IF PPP.CLIENT.REC<5,PPP.POS>='Y' THEN
                     IF PPP.CLIENT.REC<6,PPP.POS>='P' THEN   ; * DRF036
                        INVOICE<10>=INVOICE<10>+(PROG.REC<2>*PPP.CLIENT.REC<7,PPP.POS>)/100000       ; * DRF036
                        INVOICE<10>=INVOICE<10>'R0'          ; * DRF036
                     END                 ; * DRF036
                  END
               END                       ; * DRF036
               IF PROG.CARRIER='00041' THEN        ; * DRF036
                  IF PPP.CLIENT.REC<2,PPP.POS>='Y' THEN
                     IF PPP.CLIENT.REC<3,PPP.POS>='P' THEN   ; * DRF036
                        INVOICE<10>=INVOICE<10>+(PROG.REC<2>*PPP.CLIENT.REC<4,PPP.POS>)/100000
                        INVOICE<10>=INVOICE<10>'R0'
                     END
                  END
               END
            END
         REPEAT
      END
      CLIENT.YTD<70,-1> = INVOICE<10>
*
*
* Calculate Managed Returns Amounts   -  NPR05 - Start Changes
*
      STMT.MR='SELECT FB.MANG.RTRNS WITH 1 GE "':BEG.DATE'D2/'
      STMT.MR=STMT.MR:'" AND WITH 1 LE "':END.DATE'D2/'
      STMT.MR=STMT.MR:'" AND WITH CLIENT# = "':CLIENT:'"'
      EXECUTE STMT.MR PASSLIST CAPTURING OUTPUT
      NUM.ITMS = @SELECTED
      IF SYSTEM(11) THEN
         DONE.MR = 0
         LOOP
            READNEXT PROG.ID ELSE DONE.MR = 1
         UNTIL DONE.MR = 1 DO
            READ MAN.RTNS.REC FROM F.MANG.RTRNS, PROG.ID THEN
               INVOICE<13>=INVOICE<13>+MAN.RTNS.REC<2>
            END
         REPEAT
      END
      CLIENT.YTD<78,-1> = INVOICE<13>

*
* Calculate current manual claims fees
*
      PREC='SELECT FB.CLAIMS WITH 1 GE "':BEG.DATE'D2/'
      PREC=PREC:'" AND WITH 1 LE "':END.DATE'D2/'
      PREC=PREC:'" AND WITH CLIENT# = "':CLIENT:'"'
      EXECUTE PREC PASSLIST CAPTURING OUTPUT
      NUM.ITMS = @SELECTED
      IF SYSTEM(11) THEN
         CLAIMS.DONE = 0
         LOOP
            READNEXT CLAIMS.ID ELSE CLAIMS.DONE = 1
         UNTIL CLAIMS.DONE = 1 DO
            READ CLAIMS.REC FROM F.CLAIMS, CLAIMS.ID THEN
               CLAIMS.FEES=CLAIMS.FEES+CLAIMS.REC<2>
            END
         REPEAT
      END
      CLIENT.YTD<66,-1> = CLAIMS.FEES

*
* Calculate Parcel Billing Records from SLC        ; * JMK157
*
      PREC='SELECT PCL.BILLING WITH INV.DATE GE "':BEG.DATE'D2/'       ; * JMK157
      PREC=PREC:'" AND WITH INV.DATE LE "':END.DATE'D2/'     ; * JMK157
      PREC=PREC:'" AND WITH BILL.CLIENT# EQ "':CLIENT:'"'    ; * JMK157
      EXECUTE PREC CAPTURING OUTPUT      ; * JMK157
      NUM.ITMS = @SELECTED               ; * JMK157
      IF SYSTEM(11) THEN                 ; * JMK157
         PCL.DONE = 0                    ; * JMK157
         LOOP                            ; * JMK157
            READNEXT PCL.ID ELSE PCL.DONE = 1      ; * JMK157
         UNTIL PCL.DONE = 1 DO           ; * JMK157
            READ PCL.REC FROM F.PCL.BILL, PCL.ID THEN        ; * JMK157
               PCL.SLS.CD=PCL.REC<24>    ; * JMK157
               PCL.SLS.AMT=PCL.REC<17>+0           ; * JMK157
               IF PCL.SLS.AMT#0 THEN     ; * JMK157
                  LOCATE PCL.SLS.CD IN PCL.SLS.ARRAY<1> BY 'AR' SETTING PCL.POS ELSE       ; * JMK157
                     INS PCL.SLS.CD BEFORE PCL.SLS.ARRAY<1,PCL.POS>    ; * JMK157
                     INS 0 BEFORE PCL.SLS.ARRAY<2,PCL.POS>   ; * JMK157
                  END                    ; * JMK157
                  PCL.SLS.ARRAY<2,PCL.POS>+=PCL.SLS.AMT      ; * JMK157
               END                       ; * JMK157
            END                          ; * JMK157
         REPEAT                          ; * JMK157
      END                                ; * JMK157

      WRITE CLIENT.YTD ON F.BILLS.YTD,CLIENT       ; * NPR08 See additional writes after AR-BRIDGE record created.
*
* Calculate current adjustments
*

*
* Post AFS charges to invoice
*
      ****** OPEN '','AR-BRIDGE' TO F.BRIDGE THEN

      BRIDGE.ID=CLIENT                   ; * JMK65
      IF TESTING THEN BRIDGE.ID=CLIENT:'-TEST'     ; * JMK65
      READ AR.REC FROM F.BRIDGE,BRIDGE.ID THEN     ; * JMK65
         IF AR.REC=BRIDGE.INFO THEN
            AR.REC=''
            UP.ARRAY='*NEW*'
         END ELSE
            UP.ARRAY=AR.REC
         END
      END ELSE
         AR.REC=''
         UP.ARRAY='*NEW*'
      END
      IF CLIENT[1,2] # '99' THEN
         UP.ID='AR-BRIDGE*':BRIDGE.ID ; GOSUB UPDATE.UP.FILE           ; * JMK65
      END

      DISC.COMM=INVOICE<6>
      OVR.CHG.COMM=INVOICE<4>
      CONSULT.COMM=INVOICE<5>
      UPS.COMM = INVOICE<9>
      FDXG.COMM = INVOICE<11>            ; * JMK19
      FDXA.COMM = INVOICE<12>            ; * JMK34
      AR.REC=''
      NUM.ITEMS=DCOUNT(DARRAY<1>,@VM)

      FOR I = 1 TO NUM.ITEMS
         TRANS.MODE=DARRAY<1,I>
         LOCATE TRANS.MODE IN TRANS.ARRAY<1> BY "AR" SETTING POS THEN  ; * JMK12
            SALES.CODE = TRANS.ARRAY<3,POS>        ; * JMK12
            OVRCG.CODE = TRANS.ARRAY<4,POS>        ; * JMK12
            MGMT.CODE = TRANS.ARRAY<5,POS>         ; * JMK12
            IF MGMT.CODE='' THEN MGMT.CODE=149     ; * JMK13
         END ELSE                        ; * JMK12
            SALES.CODE = 50              ; * JMK12
            OVRCG.CODE = 30              ; * JMK12
            MGMT.CODE = 149              ; * JMK13
            SUBJ='Invalid Transport Mode'          ; * JMK12
            TEXT=USER:' processed the account ':CLIENT:'-':CLIENT.REC<2>:' with a bill'    ; * JMK12
            TEXT<1,-1>='that has an invalid Transport Mode. Please check now.'   ; * JMK12
            TEXT<1,-1>='The pro number is : ':BILL.ID        ; * JMK12
            MVIN=''                      ; * JMK12

            MVIN<4>='Reports@AFS.net'
            MVIN<5>=SUBJ                 ; * JMK12
            MVIN<6>=TEXT                 ; * JMK12
            CALL SENDMAIL(MVIN,MVOUT)    ; * JMK12
         END                             ; * JMK12
         IF DARRAY<2,I>+0#0 OR DARRAY<14,I>+0#0 THEN         ; * jmk144
            CODE=1
            QUANITY=COUNTER-DUP.COUNT-EDI.COUNT<1,1>-EDI.COUNT<1,2>-NEVERPAY.COUNT-HOLD.COUNT-AUDIT.REVIEW.COUNT
            AMOUNT=DARRAY<2,I>
            GOSUB INSERT.IN.ARRAY
         END
         IF DARRAY<6,I>+0#0 OR EDI.COUNT<1,1>+0#0 THEN
            CODE=21
            QUANITY=EDI.COUNT<1,1>
            AMOUNT=DARRAY<6,I>
            GOSUB INSERT.IN.ARRAY
         END
         IF DARRAY<12,I>+0#0 OR EDI.COUNT<1,2>+0#0 THEN
            CODE=22
            QUANITY=EDI.COUNT<1,2>
            AMOUNT=DARRAY<12,I>
            GOSUB INSERT.IN.ARRAY
         END
         IF DARRAY<3,I>+0#0 THEN
            BEGIN CASE
               CASE 1
                  CODE=OVRCG.CODE        ; * JMK12
            END CASE
            QUANITY=1
            AMOUNT=0-DARRAY<3,I>
            GOSUB INSERT.IN.ARRAY
            CODE=OVRCG.CODE              ; * JMK12 ; * JMK104 - COMBINE COS CODES
            QUANITY=1
            AMOUNT=DARRAY<7,I>+DARRAY<3,I>
            GOSUB INSERT.IN.ARRAY
         END
         IF DARRAY<4,I>+0#0 OR DARRAY<8,I>+0#0 THEN
            CODE = SALES.CODE
            QUANITY=1
            AMOUNT=0-DARRAY<4,I>
            GOSUB INSERT.IN.ARRAY
            CODE = SALES.CODE            ; * JMK104 - COMBINE COS CODES
            QUANITY=1
            AMOUNT=DARRAY<8,I>+DARRAY<4,I>
            GOSUB INSERT.IN.ARRAY
         END
         IF DARRAY<10,I>+0#0 THEN
            CODE = 32
            QUANITY=1
            AMOUNT=0-DARRAY<10,I>
            GOSUB INSERT.IN.ARRAY
            CODE = 32                    ; * JMK104 - COMBINE COS CODES
            QUANITY=1
            AMOUNT=DARRAY<11,I>+DARRAY<10,I>
            GOSUB INSERT.IN.ARRAY
         END
         IF DARRAY<13,I>+0#0 THEN        ; * JMK12
            CODE=MGMT.CODE               ; * JMK12
            QUANITY=DARRAY<14,I>
            AMOUNT=DARRAY<13,I>          ; * JMK12
            GOSUB INSERT.IN.ARRAY        ; * JMK12
         END                             ; * JMK12
         IF DARRAY<15,I>+0#0 THEN        ; * JMK19
            CODE = 34                    ; * JMK19
            QUANITY=1                    ; * JMK19
            AMOUNT=0-DARRAY<15,I>        ; * JMK19
            GOSUB INSERT.IN.ARRAY        ; * JMK19
            CODE = 34                    ; * JMK19 ; * JMK104 - COMBINE COS CODES
            QUANITY=1                    ; * JMK19
            AMOUNT=DARRAY<16,I>+DARRAY<15,I>       ; * JMK19
            GOSUB INSERT.IN.ARRAY        ; * JMK19
         END
*
* Next block for future separation       ; * JMK34
*
         IF DARRAY<17,I>+0#0 THEN        ; * JMK34
            CODE = 36                    ; * JMK34
            QUANITY=1                    ; * JMK34
            AMOUNT=0-DARRAY<17,I>        ; * JMK34
            GOSUB INSERT.IN.ARRAY        ; * JMK34
            CODE = 36                    ; * JMK34 ; * JMK104 - COMBINE COS CODES
            QUANITY=1                    ; * JMK34
            AMOUNT=DARRAY<18,I>+DARRAY<17,I>       ; * JMK34
            GOSUB INSERT.IN.ARRAY        ; * JMK34
         END                             ; * JMK34
*
* End of block for future separation     ; * JMK34
*
         IF DARRAY<19,I>+0#0 THEN        ; * JMK90
            CODE=201                     ; * JMK90
            QUANITY=0-DARRAY<19,I>       ; * JMK90
            AMOUNT=0-DARRAY<20,I>        ; * JMK90
            GOSUB INSERT.IN.ARRAY        ; * JMK90
         END                             ; * JMK90
         IF DARRAY<21,I>+0#0 THEN        ; * JMK90
            CODE=221                     ; * JMK90
            QUANITY=0-DARRAY<21,I>       ; * JMK90
            AMOUNT=0-DARRAY<22,I>        ; * JMK90
            GOSUB INSERT.IN.ARRAY        ; * JMK90
         END                             ; * JMK90
         IF DARRAY<23,I>+0#0 THEN        ; * JMK90
            CODE=222                     ; * JMK90
            QUANITY=0-DARRAY<23,I>       ; * JMK90
            AMOUNT=0-DARRAY<24,I>        ; * JMK90
            GOSUB INSERT.IN.ARRAY        ; * JMK90
         END                             ; * JMK90
      NEXT I

      IF PROCESS.FEE+0#0 THEN            ; * JMK29
         CODE=2
         QUANITY=1
         AMOUNT=PROCESS.FEE-PR.PROCESS.FEE         ; * JMK29
         GOSUB INSERT.IN.ARRAY
      END
      IF PR.PROCESS.FEE+0#0 THEN         ; * JMK29
         CODE=150                        ; * JMK29
         QUANITY=1                       ; * JMK29
         AMOUNT=PR.PROCESS.FEE           ; * JMK29
         GOSUB INSERT.IN.ARRAY           ; * JMK29
      END                                ; * JMK29
      IF PRE.AUDIT.FEE+0#0 THEN
         CODE=121
         QUANITY=1
         AMOUNT=PRE.AUDIT.FEE
         GOSUB INSERT.IN.ARRAY
      END
      IF SERVICE.FEE+0#0 THEN
         CODE=3
         QUANITY=1
         AMOUNT=SERVICE.FEE
         GOSUB INSERT.IN.ARRAY
      END
      IF LOGISTICS.FEE+0#0 THEN
         BEGIN CASE
            CASE TRN.ALLOC.CODE#''       ; * JMK51
               QUANITY=1                 ; * JMK51
               NVAL=DCOUNT(TRN.ALLOC.CODE,@VM)     ; * JMK51
               FOR VAL=1 TO NVAL         ; * JMK51
                  TRN.CODE=TRN.ALLOC.CODE<1,VAL>   ; * JMK51
                  IF TRN.CODE#'' THEN    ; * JMK75
                     READ TRN.REC FROM F.TRANSPORT,TRN.CODE THEN       ; * JMK51
                        CODE=TRN.REC<2>:'-13'      ; * JMK51
                     END ELSE            ; * JMK51
                        CODE=TRN.CODE:'-UNK'       ; * JMK51
                     END                 ; * JMK15
                     AMOUNT=TRN.ALLOC.FEES<1,VAL>  ; * JMK51
                     GOSUB INSERT.IN.ARRAY         ; * JMK51
                  END                    ; * JMK75
               NEXT VAL                  ; * JMK51
            CASE 1                       ; * JMK43
               BEGIN CASE                ; * JMK35
                  CASE UNI.FLG=1         ; * JMK35
                     IF LOGISTICS='Y' THEN         ; * JMK35
                        CODE=13          ; * JMK35
                     END ELSE            ; * JMK35
                        CODE=151         ; * JMK35
                     END                 ; * JMK35
                  CASE SCT.FLG=1         ; * JMK35
                     IF LOGISTICS='Y' THEN         ; * JMK35
                        CODE=13          ; * JMK35
                     END ELSE            ; * JMK35
                        CODE=151         ; * JMK35
                     END                 ; * JMK35
                  CASE 1                 ; * JMK35
                     CODE=13
               END CASE                  ; * JMK35

               QUANITY=1
               AMOUNT=LOGISTICS.FEE
               GOSUB INSERT.IN.ARRAY
         END CASE                        ; * JMK43
      END

      IF AFSI.FEE+0#0 THEN
         CODE=105
         QUANITY=1
         AMOUNT=AFSI.FEE
         GOSUB INSERT.IN.ARRAY
      END
      IF PULSE.TMS.FEE+0#0 THEN
         CODE=42
         QUANITY=1
         AMOUNT=PULSE.TMS.FEE
         GOSUB INSERT.IN.ARRAY
      END
      IF UPS.FEE+0#0 THEN
         CODE=103
         QUANITY=1
         AMOUNT=UPS.FEE
         GOSUB INSERT.IN.ARRAY
      END
      IF ANALYTICS.FEE+0#0 THEN          ; * DRF031
         CODE=103                        ; * DRF031
         QUANITY=1                       ; * DRF031
         AMOUNT=ANALYTICS.FEE            ; * DRF031
         GOSUB INSERT.IN.ARRAY           ; * DRF031
      END                                ; * DRF031
      IF WKLY.POSTAGE.FEE+0#0 THEN
         CODE=102
         QUANITY=1
         AMOUNT=WKLY.POSTAGE.FEE
         GOSUB INSERT.IN.ARRAY
      END
      IF DISC.COMM+0#0 THEN
         CODE=6
         QUANITY=1
         AMOUNT=DISC.COMM
         GOSUB INSERT.IN.ARRAY
      END
      IF POSTAGE+0#0 THEN
         CODE=7
         QUANITY=1
         AMOUNT=POSTAGE
         GOSUB INSERT.IN.ARRAY
      END
      IF INVOICE<8>+0#0 THEN
         CODE=12
         QUANITY=1
         AMOUNT=INVOICE<8>
         GOSUB INSERT.IN.ARRAY
      END
      IF INVOICE<10>+0#0 THEN
         CODE=27
         QUANITY=1
         AMOUNT=INVOICE<10>
         GOSUB INSERT.IN.ARRAY
      END
      PPP.ALERT.FEE=0                    ; * DRF036
      LOCATE END.DATE IN PPP.CLIENT.REC<1> BY 'AR' SETTING PPP.POS ELSE PPP.POS=PPP.POS-1  ; * DRF036
      IF PPP.POS=0 THEN PPP.CLIENT.REC=''          ; * DRF036
      IF PPP.CLIENT.REC<12,PPP.POS>='P' THEN       ; * DRF036
         PPP.ALERT.FEE=((PPP.FEDEX1*PPP.CLIENT.REC<13,PPP.POS>)+(PPP.FEDEX2*PPP.CLIENT.REC<13,PPP.POS>)+(PPP.UPS1*PPP.CLIENT.REC<13,PPP.POS>))/100000  ; * DRF036
         PPP.ALERT.FEE=PPP.ALERT.FEE'R0'           ; * DRF036
         IF PPP.ALERT.FEE#0 THEN         ; * DRF036
            CODE=28                      ; * DRF036
            QUANITY=1                    ; * DRF036
            AMOUNT=PPP.ALERT.FEE         ; * DRF036
            GOSUB INSERT.IN.ARRAY        ; * DRF036
         END                             ; * DRF036
      END                                ; * DRF036
      IF PPP.CLIENT.REC<12,PPP.POS>='F' THEN       ; * DRF036
         PPP.ALERT.FEE=PPP.CLIENT.REC<13,PPP.POS>/10         ; * DRF036
         PPP.ALERT.FEE=PPP.ALERT.FEE'R0'           ; * DRF036
         IF PPP.ALERT.FEE#0 THEN         ; * DRF036
            CODE=28                      ; * DRF036
            QUANITY=1                    ; * DRF036
            AMOUNT=PPP.ALERT.FEE         ; * DRF036
            GOSUB INSERT.IN.ARRAY        ; * DRF036
         END                             ; * DRF036
      END                                ; * DRF036
      CLIENT.YTD<32>=CLIENT.YTD<32>+PPP.ALERT.FEE  ; * DRF036
      IF INVOICE<13>+0#0 THEN            ; *NPR05
         CODE=133                        ; *NPR05
         QUANITY=1                       ; *NPR05
         AMOUNT=INVOICE<13>              ; *NPR05
         GOSUB INSERT.IN.ARRAY           ; *NPR05
      END                                ; *NPR05
      IF INVOICE<14>+0#0 THEN            ; *NPR018
         CODE=96                         ; *NPR018
         QUANITY=1                       ; *NPR018
         AMOUNT=INVOICE<14>              ; *NPR018
         GOSUB INSERT.IN.ARRAY           ; *NPR018
      END                                ; *NPR018
      IF CLAIMS.FEES+0#0 THEN
         CODE=131
         QUANITY=1
         AMOUNT=CLAIMS.FEES
         GOSUB INSERT.IN.ARRAY
      END
      IF PCL.SLS.ARRAY#"" THEN           ; * JMK157
         NPVAL=DCOUNT(PCL.SLS.ARRAY<1>,@VM)        ; * JMK157
         FOR PVAL=1 TO NPVAL             ; * JMK157
            CODE=PCL.SLS.ARRAY<1,PVAL>   ; * JMK157
            QUANITY=1                    ; * JMK157
            AMOUNT=PCL.SLS.ARRAY<2,PVAL>           ; * JMK157
            GOSUB INSERT.IN.ARRAY        ; * JMK157
         NEXT PVAL                       ; * JMK157
      END                                ; * JMK157

      AR.REC<4>=END.DATE
      AR.REC<5>=COUNTER-DUP.COUNT-NEVERPAY.COUNT
      IF CLIENT[1,2] # '99' THEN
** Verify that the Total Invoice amount is NOT Less than Zero
         INV.TIMES=DCOUNT(AR.REC<3>,@VM)
         INV.TOTAL=0
         FOR X = 1 TO INV.TIMES
            INV.TOTAL+=AR.REC<3,X>
         NEXT X
         IF INV.TOTAL < 0 THEN
            SUBJ='Account Processed with Negative Charges'
            TEXT=USER:' processed the account ':CLIENT:'-':CLIENT.REC<2>
            TEXT<1,-1>='The total charges were ':INV.TOTAL'R26,'
            TEXT<1,-1>='The charges were NOT written to A/R'
            TEXT<1,-1>='The account MUST be unprocessed and held until'
            TEXT<1,-1>='the charges exceed zero.'
            MVIN=''

            *****MVIN<1,-1>='DCurtis@afs.net'
            MVIN<1,-1>='MMcKay@afs.net'
            MVIN<2>='DFriend@afs.net'
            MVIN<4>='Reports@AFS.net'
            MVIN<5>=SUBJ
            MVIN<6>=TEXT
            CALL SENDMAIL(MVIN,MVOUT)

            WRITE AR.REC ON F.TEMP,BRIDGE.ID       ; * JMK65
            WRITE CLIENT.YTD ON F.BILLS.YTD,CLIENT           ; *NPR08 - Added additional write here

            ID.TAB = "COMM_CAP*":CLIENT ; CAP.REC = ''       ; * JMK147

            UP.ID='FB.TABLES*':ID.TAB ; GOSUB UPDATE.UP.FILE           ; * JMK147

            READ CAP.REC FROM F.TABLES, ID.TAB THEN          ; * JMK147
               UCC.VIN = '' ; UCC.VOUT = ''        ; * JMK147
               UCC.VIN<1> = "U"          ; * [U]pdate Commission Caps ; * JMK147
               UCC.VIN<2> = CLIENT       ; * JMK147
               UCC.VIN<3> = AR.REC<4>    ; * Process date ; * JMK147
               UCC.VIN<4> = ID.TAB       ; * JMK147
               CALL UPD.COMMISSION.CAP.SUB(UCC.VIN,UCC.VOUT,AR.REC,CAP.REC,F.TABLES,F.BRIDGE.LAST,F.SALES.CODE)          ; * JMK147
            END                          ; * JMK147

            GOSUB MONITOR.YTD.VALUES     ; *NPR08
            CALL ELINE('Negative Invoice Total of ':INV.TOTAL'R26,')
            READ D.PROCESS.LOG FROM F.PROCESS.LOG,PROC.LOG.ID ELSE D.PROCESS.LOG=''        ; * DRF024
            D.PROCESS.LOG<1,-1>='Unproc'           ; * DRF024
            D.PROCESS.LOG<2,-1>='End'    ; * DRF024
            D.PROCESS.LOG<3,-1>=TIME()   ; * DRF024
            D.PROCESS.LOG<4,-1>=USER     ; * DRF024
            D.PROCESS.LOG<5,-1>=ONCE:'-':USER.INPUT.FOR.ONCE
            WRITE D.PROCESS.LOG ON F.PROCESS.LOG,PROC.LOG.ID           ; * DRF024
            GO 10
            ****   GOTO 9999   ;*   10
            ********************************************************************************
         END ELSE
            WRITE AR.REC ON F.BRIDGE,BRIDGE.ID     ; * JMK65
            WRITE CLIENT.YTD ON F.BILLS.YTD,CLIENT           ; *NPR08 - Added additional write here

            ID.TAB = "COMM_CAP*":CLIENT ; CAP.REC = ''       ; * JMK147

            UP.ID='FB.TABLES*':ID.TAB ; GOSUB UPDATE.UP.FILE           ; * JMK147

            READ CAP.REC FROM F.TABLES, ID.TAB THEN          ; * JMK147
               UCC.VIN = '' ; UCC.VOUT = ''        ; * JMK147
               UCC.VIN<1> = "U"          ; * [U]pdate Commission Caps ; * JMK147
               UCC.VIN<2> = CLIENT       ; * JMK147
               UCC.VIN<3> = AR.REC<4>    ; * Process date ; * JMK147
               UCC.VIN<4> = ID.TAB       ; * JMK147
               CALL UPD.COMMISSION.CAP.SUB(UCC.VIN,UCC.VOUT,AR.REC,CAP.REC,F.TABLES,F.BRIDGE.LAST,F.SALES.CODE)          ; * JMK147
            END                          ; * JMK147

            GOSUB MONITOR.YTD.VALUES     ; *NPR08
         END
      END ELSE
         WRITE AR.REC ON F.TEMP,BRIDGE.ID          ; * JMK65
      END

      IF CLIENT#'10356' THEN             ; * JMK999
         SQLVIN=''                       ; * JMK84
         SQLVIN<1>=USER                  ; * JMK84
         SQLVIN<2>=CLIENT                ; * JMK84
         SQLVIN<3>='BRIDGE'              ; * JMK84
         SQLVOUT=''                      ; * JMK84
      END                                ; * JMK999
      *****  END

      BREAK ON                           ; * Turn Break Key back on
*
* Clear temporary bills file
*
*     CLEARFILE F.BILLS
*

*
* Check to see if a client with new variance
*
*
      YTD.DISCOUNT.VARIANCE= ORIG.CLIENT.YTD<10> + 0
      YTD.OVERCHARGE.VARIANCE= ORIG.CLIENT.YTD<11> + 0
      YTD.CONSULTING.VARIANCE= ORIG.CLIENT.YTD<12> + 0

      NEW.DISCOUNT.VARIANCE = CLIENT.YTD<10>+0
      NEW.OVERCHARGE.VARIANCE = CLIENT.YTD<11>+0
      NEW.CONSULTING.VARIANCE = CLIENT.YTD<12>+0

      NEW.DISCOUNTS = (YTD.DISCOUNT.VARIANCE = 0 AND NEW.DISCOUNT.VARIANCE # 0)
      NEW.OVERCHARGES = (YTD.OVERCHARGE.VARIANCE = 0 AND NEW.OVERCHARGE.VARIANCE # 0)
      NEW.CONSULTING = (YTD.CONSULTING.VARIANCE = 0 AND NEW.CONSULTING.VARIANCE # 0)
      NEW.VARIANCES = NEW.DISCOUNTS + NEW.OVERCHARGES + NEW.CONSULTING

      IF NEW.VARIANCES AND LOGISTICS = 'Y' AND DATE() LE CL.PRE.DATE+365 THEN
         SUBJ='Account with First Time Logistics Variance'
*DF         SERV.SLSMAN=CLIENT.REC<115>   ; * DRF041
         SERV.SLSMAN=CLIENT.REC<114>     ; * DRF041

         READ SERV.SLSMAN.REC FROM F.AR.SLSMAN,SERV.SLSMAN ELSE SER.SLSMAN.REC = ""        ; * JMK61
         SERV.SLSMAN.NAME=SERV.SLSMAN.REC<1>       ; * JMK61
         SERV.SLSMAN.EMAIL=SERV.SLSMAN.REC<8>      ; * JMK61
         IF SERV.SLSMAN.REC="" THEN      ; * JMK61
            SERV.SLSMAN.NAME = SERV.SLSMAN:" is not on file "          ; * JMK61
            SERV.SLSMAN.EMAIL = "NONE"   ; * JMK61
         END                             ; * JMK61
         ACCT.MGR = CLIENT.REC<264>      ; * JMK179
         ACCT.MGR.REC=''                 ; * JMK179
         IF ACCT.MGR # '' THEN           ; * JMK179
            READ ACCT.MGR.REC FROM F.AR.SLSMAN,ACCT.MGR THEN           ; * JMK179
               ACCT.MGR.NAME = ACCT.MGR.REC<1>     ; * JMK179
               ACCT.MGR.EMAIL = ACCT.MGR.REC<8>    ; * JMK179
            END                          ; * JMK179
         END ELSE                        ; * JMK179
            ACCT.MGR.EMAIL = ""          ; * JMK179
            ACCT.MGR.NAME = ''           ; * JMK179
         END                             ; *JMK179

         TEXT=USER:' processed an account with first time variance amounts '
         TEXT<1,-1>='Client: ':CLIENT:'-':CLIENT.REC<2>
         TEXT<1,-1>='Salesman - ':SERV.SLSMAN:'-':SERV.SLSMAN.NAME

         TEXT<1,-1>=ACCT.MGR.NAME:' must review these reports!!!'      ; * JMK179
         TEXT<1,-1>="Client's Pre-Audit Date was ":CL.PRE.DATE'D2/'
         TEXT<1,-1>='Make SURE that the salesman EXPLAINS the New Variance in the reports to the client!'
         TEXT<1,-1>=' '
         IF CLIENT.YTD<10> # 0 AND NEW.DISCOUNTS THEN
            TEXT<1,-1>='Discount Variances = ':NEW.DISCOUNT.VARIANCE'R26#8'
            TEXT<1,-1>=' '
         END
         IF CLIENT.YTD<11> # 0 AND NEW.OVERCHARGES THEN
            TEXT<1,-1>='Overcharge Variances = ':NEW.OVERCHARGE.VARIANCE'R26#8'
            TEXT<1,-1>=' '
         END
         IF CLIENT.YTD<12> # 0 AND NEW.CONSULTING THEN
            TEXT<1,-1>='Consulting Variances = ':NEW.CONSULTING.VARIANCE'R26#8'
            TEXT<1,-1>=' '
         END
         MVIN=''
*
* TO: Email addresses
*
         MVIN<1,-1>='MMcKay@afs.net'
*         MVIN<1,-1>='JDarwin@afs.net'    ; * JMK102  NKH04

         IF ACCT.MGR.EMAIL#'' THEN       ; * JMK179
            MVIN<1,-1>=ACCT.MGR.EMAIL    ; * JMK179
         END                             ; * JMK179
*
* CC: Email addresses
*
         MVIN<2,-1>='KRivet@afs.net'     ; * JMK102
         MVIN<2,-1>='AGrubbs@afs.net'    ; * JMK179
         *
* BCC: Email addresses
*
         MVIN<3>='DFriend@afs.net'
         MVIN<4>='Reports@AFS.net'
         MVIN<5>=SUBJ
         MVIN<6>=TEXT
         CALL SENDMAIL(MVIN,MVOUT)
         CALL ELINE('New Logistics Variances!! Have Karen, Scott, Debbie & Owen check!')
      END

*
* Process weekly report
*
3000: CRT @(0,3):@(-3)
      ****   HELP="[Y]=Yes. [N]=No."

      QI='Y'
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='Y' OR QI=''
            CLEARDATA                    ; * JMK164
            LOOP
               *****        HELP="[O]=Old. [N]=New."

               FORMAT='N'
               IF FORMAT='' THEN FORMAT='N'
               FORMAT=OCONV(FORMAT,'MCU')
            UNTIL FORMAT='O' ! FORMAT='N' DO
            REPEAT
            B.DATE=BEG.DATE'D2/'
            E.DATE=END.DATE'D2/'
            IF FORMAT='O' THEN
               DATA 'STD.USE.BILLS.IN.WORK.FILE',CLIENT,'2',B.DATE,E.DATE,'','N',''
            END ELSE

               BEGIN CASE                ; * JMK97
                  CASE ONCE=1            ; * JMK97
                     DATA 'ONCE-FROM.PROCESS',CLIENT,'3','R','N','N','N','N',''  ; * JMK97
                  CASE TESTING=1         ; * JMK97
                     DATA 'TST-FROM.PROCESS',CLIENT,'3','R','N','N','N','N',''   ; * JMK97
                  CASE 1                 ; * JMK97
                     DATA 'STD-FROM.PROCESS',CLIENT,'3','R','N','N','N','N',''   ; * JMK97
               END CASE                  ; * JMK97
            END

            IF FORMAT='O' THEN EXECUTE 'FB.3.1' ELSE EXECUTE 'FB.3.1.NEW'

            IF REG.FLAG THEN             ; * JMK161
               CLEARDATA                 ; * JMK164
               BEGIN CASE                ; * JMK107
                  CASE ONCE=1            ; * JMK107
                     DATA 'ONCE-FROM.PROCESS',CLIENT,'3','R','N','N','N','Y','',''         ; * JMK107
                  CASE TESTING=1         ; * JMK107
                     DATA 'TST-FROM.PROCESS',CLIENT,'3','R','N','N','N','Y','',''          ; * JMK107
                  CASE 1                 ; * JMK107
                     DATA 'STD-FROM.PROCESS',CLIENT,'3','R','N','N','N','Y','',''          ; * JMK107
               END CASE                  ; * JMK107
               EXECUTE 'FB.3.1.REG'      ; * JMK107
            END                          ; * JMK107

         CASE QI='N' ! QI=''
            NULL
         CASE 1
            CALL ELINE('Invalid entry.')
            GOTO 3000
      END CASE

      IF CLIENT.REC<125>#'' OR CLIENT.REC<126>#'' OR CLIENT.REC<127>#'' THEN     ; * JMK62
         EMAIL.LOG.ID=CLIENT:'_':END.DATE:'_1'     ; * JMK62

         READ EMAIL.TEST FROM F.EMAIL.LOG,EMAIL.LOG.ID THEN  ; * JMK62 ; * JMK105
            LOG.SEQ=0                    ; * JMK105
            LOOP                         ; * JMK105
               LOG.SEQ+=1                ; * JMK105
               LOG.ID=CLIENT:'_':END.DATE:'_':LOG.SEQ        ; * JMK105
               READ TEST FROM F.EMAIL.LOG,LOG.ID ELSE TEST=''          ; * JMK105
            UNTIL TEST='' DO             ; * JMK105
               DELETE F.EMAIL.LOG,LOG.ID           ; * JMK105
            REPEAT                       ; * JMK105
         END ELSE                        ; * JMK105

            EMAIL.ERROR.OUT=''           ; * JMK68
            EMAIL.ERROR.OUT<1,-1>='U2Errors@afs.net'         ; * JMK68
            EMAIL.ERROR.OUT<4>='Reports@afs.net'   ; * From Email address ; * JMK68
            EMAIL.ERROR.OUT<4>='Reports@afs.net'   ; * From Email address ; * JMK68
            EMAIL.ERROR.OUT<5,1>='** ERROR ** ':CLIENT:'- ':CLIENT.REC<2>:' - Weekly Email Reports have failed in FB Processing!!!'          ; * JMK62 ; * JMK68
            EMAIL.ERROR.OUT<6,1>='***********************************************************************************'   ; * JMK68
            EMAIL.ERROR.OUT<6,-1>=USER:' processed this client and the weekly report emails have not have been sent!'    ; * JMK68
            EMAIL.ERROR.OUT<6,-1>='**********************************************************************************'   ; * JMK68
            EMAIL.ERROR.OUT<6,-1>='The Weekly Report email can not be verified at this time.  This is due to either'     ; * JMK68
            EMAIL.ERROR.OUT<6,-1>=' a server failure with the "E:\Ardent\Accounts\afs\EMAIL.LOG" folder or an'           ; * JMK68
            EMAIL.ERROR.OUT<6,-1>=' unrecognized failure with the email program "blat.exe".'         ; * JMK68
            EMAIL.ERROR.OUT<6,-1>=' '    ; * JMK68
            EMAIL.ERROR.OUT<6,-1>='Additional IT Review is needed to resolve this incident prior to continuing!'         ; * JMK68
            EMAIL.ERROR.OUT<6,-1>='******************************************************************************'       ; * JMK68
            EMAIL.ERROR.OUT<7>=1         ; * Auto format (add carriage returns to end of text)                                                     ; * JMK68
            VIN=EMAIL.ERROR.OUT          ; * JMK68
            VOUT=''                      ; * JMK68
            CALL SENDMAIL(VIN,VOUT)      ; * JMK68
VERIFY.EMAIL:*         ; * JMK62

            CRT @(0,18):@(-3):CLIENT:' - ':CLIENT.REC<2>:' the weekly email reports might not have been sent.'           ; * JMK62
            CRT @(0,19):'You will need to verify receipt of email in AFS folder and either re-process'         ; * JMK62
            CRT @(0,20):'or send the weekly reports manually.'         ; * JMK62
                                         ; * NPR
            CRT @(0,21):"[YES] I verify that I was notified of missing reports email."     ; * JMK62
            HELP="[YES]=Continue."       ; * JMK62
            CALL GEN.IN(0,22,'Enter selection please. ---','',Q,0,3,'','',0,-3,22,1,QI,HELP,0,23)    ; * JMK62

            QI=OCONV(QI,'MCU')           ; * JMK62
            BEGIN CASE                   ; * JMK62
               CASE QI='YES'             ; * JMK62
                  NULL                   ; * JMK62
               CASE 1                    ; * JMK62
                  CALL ELINE('Invalid entry. Must be [YES].')          ; * JMK62
                  GOTO VERIFY.EMAIL      ; * JMK62
            END CASE                     ; * JMK62
            CRT @(0,21):@(-3):           ; * JMK62
         END                             ; * JMK62
      END                                ; * JMK62

      IF NOT(TESTING) THEN               ; * JMK33
**********************************************************************
* Send Data to AFSi system
**********************************************************************
         OBEG.DATE=BEG.DATE'D4-'
         BEG.YEAR=FIELD(OBEG.DATE,'-',3)'R%4'
         BEG.MONTH=FIELD(OBEG.DATE,'-',1)'R%2'
         BEG.DAY=FIELD(OBEG.DATE,'-',2)'R%2'

         OEND.DATE=END.DATE'D4-'
         END.YEAR=FIELD(OEND.DATE,'-',3)'R%4'
         END.MONTH=FIELD(OEND.DATE,'-',1)'R%2'
         END.DAY=FIELD(OEND.DATE,'-',2)'R%2'

         COGNOS.ID=CLIENT:"-":BEG.YEAR:BEG.MONTH:BEG.DAY:"-":END.YEAR:END.MONTH:END.DAY:"-10"
         UP.ARRAY='*NEW*'
         UP.ID='COGNOS.ADD':'*':COGNOS.ID ; GOSUB UPDATE.UP.FILE

* Update the -20 item currently its set for 50,000 records per file that will "Protect us to 100,000 bills a week
         COGNOS.ID=CLIENT:"-":BEG.YEAR:BEG.MONTH:BEG.DAY:"-":END.YEAR:END.MONTH:END.DAY:"-20"
         UP.ARRAY='*NEW*'
         UP.ID='COGNOS.ADD':'*':COGNOS.ID ; GOSUB UPDATE.UP.FILE

         CLIENT.INFO='OLEDBAFS ':CLIENT:' ':BEG.DATE'D2/':' ':END.DATE'D2/'

         EXECUTE 'COGNOS ':CLIENT.INFO

**********************************************************************
         IF ANY.VOUCHER THEN
            CLEARDATA                    ; * JMK164
            DATA 'V-':CLIENT,'P','','','Y'
            EXECUTE 'FB.5.4'
         END
         IF CLIENT='00816' THEN
            CLEARDATA                    ; * JMK164
            DATA CLIENT,'2',B.DATE,E.DATE,''
            EXECUTE 'FB.6.4.2'
         END
         IF CLIENT='00729' THEN
            CLEARDATA                    ; * JMK164
            DATA CLIENT,B.DATE,E.DATE
            EXECUTE 'FB.6.1'
         END
         IF CLIENT='01640' THEN          ; * JMK87
            EXECUTE 'UPS.UPDATE.01640'   ; * JMK87
         END                             ; * JMK87
         IF CLIENT='01762' THEN          ; * JMK120
            EXECUTE 'UPS.UPDATE.01762'   ; * JMK120
         END                             ; * JMK120

         IF CLIENT.REC<198>='Y' THEN     ; * JMK38 ; * JMK131

            IF DUE.DT.FLG='Y' OR DUE.DT.FLG='C' OR NUM(DUE.DT.FLG) OR DUE.DT.FLG='P' THEN  ; * JMK131 ; * JMK133

* Start Processing Accrual report for some Scott Traffic clients

               INFO=''                   ; * JMK38
               INFO<1>=CLIENT ; INFO<2>='N'        ; * JMK38
               INFO<3>='ALL' ; INFO<4>='ALL'       ; * JMK38
               INFO<5>='1' ; INFO<6>=BEG.DATE      ; * JMK38
               INFO<7>=END.DATE ; INFO<8>=''       ; * JMK38
               INFO<9>='N' ; INFO<10>='N'          ; * JMK38
               INFO<11>='N' ; INFO<12>='N'         ; * JMK38
               INFO<13>=CLIENT.REC<134> ; INFO<14>='EMAIL'   ; * JMK38
               INFO<15>=0 ; INFO<16>='ALL'         ; * JMK38
               INFO<17>=CLIENT.REC<135> ; INFO<18>=1         ; * JMK38
               INFO<19>=CLIENT.REC<125> ; INFO<20>=''        ; * JMK38
               INFO<21>=USER ; INFO<22>=CH.NUM     ; * JMK38
               INFO<23>=0 ; INFO<24>=''  ; * JMK38
               INFO<25>='FROM FB.2.3.NW'           ; * JMK38
               INFO<26>=1                ; * JMK41
               INFOOUT=''                ; * JMK38
               CALL BUILD.DF.ACC(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.EMAILDATA,INFO,INFOOUT)           ; * JMK38
               THERE.ARE.ATTACHMENTS=(INFOOUT#'')  ; * JMK38
               IF THERE.ARE.ATTACHMENTS THEN       ; * JMK38
                  EMAIL.OUT=''           ; * JMK38

                  EMAIL.OUT<1>=TRIM(CLIENT.REC<125>)         ; * To: Email addresses ; * JMK38
                  EMAIL.OUT<2>=TRIM(CLIENT.REC<126>)         ; * CC: Email addresses ; * JMK38
                  EMAIL.OUT<3,-1>='WeeklyClientEmails@afs.net'         ; *CC

                  IF ACCT.MGR.EMAIL NE "" THEN
                     EMAIL.OUT<2,-1> = ACCT.MGR.EMAIL
                  END
                  EMAIL.OUT<3>=TRIM(CLIENT.REC<127>)         ; * BCC: Email addresses ; * JMK38
                  IF CLIENT.REC<179>#'' AND ONCE=0 THEN      ; * JMK32 ; * JMK38 ; * JMK97
                     EMAIL.OUT<1>=TRIM(CLIENT.REC<179>)      ; * JMK32 ; * JMK38
                     EMAIL.OUT<2>=''     ; * JMK32 ; * JMK38
                     EMAIL.OUT<3>=''     ; * JMK32 ; * JMK38
                  END                    ; * JMK32 ; * JMK38

                  EMAIL.OUT<4>='Reports@afs.net'   ; * From Email address ; * JMK38
                  EMAIL.OUT<5,1>=CLIENT'R%5':' - ':CLIENT.REC<2>       ; * Subject of Email ; * JMK38
                  EMAIL.OUT<5,1>:=' Accrual Spreadsheet'     ; * JMK38
                  EMAIL.OUT<5,1>:=' ':BEG.DATE'D2/':' - ':END.DATE'D2/'          ; * JMK38

                  EMAIL.OUT<6,-1>='AFS, LLC.                                                  Phone: 318.798.2111'       ; * JMK38 ; * JMK173
                  EMAIL.OUT<6,-1>='PO BOX 18170                                               FAX: 318.797.3628'         ; * JMK38
                  EMAIL.OUT<6,-1>='Shreveport, LA 71138                                               WWW.AFS.NET'       ; * JMK38 ; * JMK173
                  EMAIL.OUT<6,-1>=' '    ; * JMK38
                  EMAIL.OUT<6,-1>=' '    ; * JMK38
                  EMAIL.OUT<6,-1>='------------------------------------------------------------------------------'       ; * JMK38
                  EMAIL.PATH='E:\ARDENT\PUBLIC\EMAILDATA\'   ; * JMK38

* Bills to be processed (Weekly Report or Body) created in BUILD.DF.SUB (attachment 1) ; * JMK38
                  EMAIL.FILENAME=INFOOUT<1>        ; * JMK38
                  EMAIL.OUT<6,-1>='   Accrual Spreadsheet - All remaining bills keyed':SPACE(30-LEN(EMAIL.FILENAME)):EMAIL.FILENAME          ; * JMK38
                  EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME           ; * JMK38

* Excel Macro to format and print bills (Weekly Report) (attachment 2) ; * JMK38

                  EMAIL.OUT<6,-1>=' '    ; * JMK38
                  EMAIL.OUT<6,-1>='If you have any questions, please call Customer Services at 318.798.2111, opt. 2.'    ; * JMK137 ; JMK177
                  EMAIL.OUT<6,-1>=' '    ; * JMK38
                  EMAIL.OUT<6,-1>=' '    ; * JMK38
                  EMAIL.OUT<6,-1>='                         Thank You For Your Business'   ; * JMK38
                  EMAIL.OUT<7>=1         ; * Auto format (add carriage returns to end of text) ; * JMK38

                  IF CLIENT.REC<179>='' OR ONCE=1 THEN       ; * JMK32 ; * JMK38
                     EMAIL.OUT<2,-1>='MMcKay@afs.net'        ; * CC: Email addresses ; * JMK38
                  END                    ; * JMK32 ; * JMK38

* For testing and debugging only: Replace all email addresses with our email addresses ; * JMK38

                  VIN=EMAIL.OUT          ; * JMK38
                  VIN<8,-1>=EMAIL.SEND   ; * JMK123
                  CALL SENDMAIL(VIN,VOUT)          ; * JMK38
                  IF VOUT<1>='ERROR' THEN          ; * JMK38
                     GOSUB EMAIL.SENDING.FAILURE   ; * JMK38
                  END                    ; * JMK38
               END                       ; * IF THERE.ARE.ATTACHMENTS ; * JMK38

* End Processing Accrual report for some Scott Traffic clients
            END                          ; * JMK131
         END                             ; * IF CLIENT.REC<198>='Y' AND CLIENT.REC<92>='00002' ; * JMK38
         EDI.OPT=CLIENT.REC<70,13>       ; * JMK71
         IF EDI.OPT='A' OR EDI.OPT='L' OR EDI.OPT='B' THEN   ; * JMK71
            EDI.PB.VIN=''                ; * JMK71
            EDI.PB.VIN<1>=CLIENT         ; * JMK71
            EDI.PB.VIN<2>=EDI.OPT        ; * JMK71
            CALL PRINT.EDI.BILLS(EDI.PB.VIN,EDI.PB.VOUT,F.CLIENTS,F.CARRIERS)    ; * JMK71
         END                             ; * JMK71
      END                                ; * JMK33 - NOT(TESTING)

      READ D.PROCESS.LOG FROM F.PROCESS.LOG,PROC.LOG.ID ELSE D.PROCESS.LOG=''    ; * DRF024
      D.PROCESS.LOG<1,-1>='Proc'         ; * DRF024
      D.PROCESS.LOG<2,-1>='End'          ; * DRF024
      D.PROCESS.LOG<3,-1>=TIME()         ; * DRF024
      D.PROCESS.LOG<4,-1>=USER           ; * DRF024
      WRITE D.PROCESS.LOG ON F.PROCESS.LOG,PROC.LOG.ID       ; * DRF024
      IF SLC.PROCESS THEN                ; * DRF032
         GO 9999                         ; * DRF032
      END ELSE                           ; * DRF032
         GO 10                           ; * DRF032
      END                                ; * DRF032
*DF      GO 10
*DF        GOTO 9999   ; *  END OF PROCESS *****
      **********************************************************************8

*
********************************************************************
UPDATE.PROGRESS.REC:* UPDATE THE FB.TABLES,'FP_PROCESS' Item
*********************************************************************
      IF CLIENT = '' THEN RETURN         ; * NPR09

      READU FP.PROC.REC FROM F.TABLES,'FP_PROCESS' THEN      ; * JMK100
         LOCATE CLIENT IN FP.PROC.REC<1> BY 'AR' SETTING FPPOS THEN    ; * JMK100
            DEL FP.PROC.REC<1,FPPOS>     ; * JMK100
            DEL FP.PROC.REC<2,FPPOS>     ; * JMK100
            DEL FP.PROC.REC<3,FPPOS>     ; * JMK100
            DEL FP.PROC.REC<4,FPPOS>     ; * JMK100
         END                             ; * JMK100
         IF FP.PROC.REC<1>='' THEN       ; * JMK100
            DELETE F.TABLES,'FP_PROCESS'           ; * JMK100
         END ELSE                        ; * JMK100
            WRITE FP.PROC.REC ON F.TABLES,'FP_PROCESS'       ; * JMK100
         END                             ; * JMK100
      END                                ; * JMK100
      RELEASE F.TABLES,'FP_PROCESS'      ; * JMK100
*
      IF AR.BRIDGE.FLAG THEN             ; * JMK117
         READ TBR.INFO FROM F.BRIDGE,BRIDGE.ID THEN          ; * JMK117
            IF TBR.INFO=BRIDGE.INFO THEN           ; * JMK117
               DELETE F.BRIDGE,BRIDGE.ID           ; * JMK117
               AR.BRIDGE.FLAG=0          ; * JMK117
            END                          ; * JMK117
         END                             ; * JMK117
      END                                ; * JMK117
      EXECUTE "AUTOLOGOUT 120"
      RETURN
********************************************************************
UPDATE.UP.FILE:* UPDATE THE UNPROCESS FILE
*********************************************************************
      UP.FNAME=FIELD(UP.ID,'*',1)
      BEGIN CASE
         CASE 1
            READV DUMMY FROM F.UP,UP.ID,1 ELSE
               *****       IF USER = 'GBINO' THEN
               CRT UP.ID
****                  DEBUG
               **** END
               WRITE UP.ARRAY ON F.UP,UP.ID ELSE
*****IF USER = 'GBINO' THEN DEBUG
               END
            END
      END CASE

      RETURN
**********************************************************************
INSERT.IN.ARRAY:
**********************************************************************
      IF CODE<1000 THEN                  ; * JMK157
         IF SCT.FLG THEN                 ; * JMK18
            CODE+=1000                   ; * JMK18
         END                             ; * JMK18
         IF UNI.FLG THEN                 ; * JMK130
            CODE+=3000                   ; * JMK130
         END                             ; * JMK130
         IF UFM.FLG THEN                 ; * JMK150
            CODE+=6000                   ; * JMK150
         END                             ; * JMK150
         IF LGI.FLG THEN                 ; * JMK157
            CODE+=7000                   ; * JMK157
         END                             ; * JMK157
      END                                ; * JMK157
      LOCATE CODE IN AR.REC<1> BY 'AR' SETTING REC.POS THEN
         AR.REC<3,REC.POS>=AR.REC<3,REC.POS>+AMOUNT
      END ELSE
         INS CODE BEFORE AR.REC<1,REC.POS>
         INS QUANITY BEFORE AR.REC<2,REC.POS>
         INS AMOUNT BEFORE AR.REC<3,REC.POS>
      END

      LOCATE CODE IN CLIENT.YTD<79> BY 'AR' SETTING YTDPOS THEN
         CLIENT.YTD<80,YTDPOS>=CLIENT.YTD<80,YTDPOS> + QUANITY
         CLIENT.YTD<81,YTDPOS>=CLIENT.YTD<81,YTDPOS> + AMOUNT
      END ELSE
         INS CODE BEFORE CLIENT.YTD<79,YTDPOS>
         INS QUANITY BEFORE CLIENT.YTD<80,YTDPOS>
         INS AMOUNT BEFORE CLIENT.YTD<81,YTDPOS>
      END
*      END

*DF      IF USER='DAVID' THEN CALL ELINE('PARTIAL PENNY - PRESS BREAK')
      IF INDEX(AMOUNT,'.',1) THEN
         AR.REC=''
         SUBJ='Account processed with partial penny'
         TEXT=USER:' processed the account ':CLIENT:'-':CLIENT.REC<2>
         TEXT<1,-1>='This will need to be corrected before the data is pulled into AR'
         MVIN=''

         MVIN<1,-1>='MMcKay@afs.net'
         MVIN<1,-1>='DCurtis@afs.net'
         MVIN<2>='DFriend@afs.net'
         MVIN<4>='Reports@AFS.net'
         MVIN<5>=SUBJ
         MVIN<6>=TEXT
         CALL SENDMAIL(MVIN,MVOUT)
      END
      RETURN
**********************************************************************
EMAIL.SENDING.FAILURE:***
********************************************************************
*   This subroutine is called when an email to be sent to a client fails
*   for some reason, most probably a misspelling of the TO:, CC:, or BCC:
*   addresses.  In the case of an email failure, send a warning email to
*    David, MARY, GREG saying that this email failed to go out.

      EMAIL.TO=CHANGE(EMAIL.OUT<1>,@VM,' ')
      EMAIL.CC=CHANGE(EMAIL.OUT<2>,@VM,' ')
      EMAIL.BC=CHANGE(EMAIL.OUT<3>,@VM,' ')
      EMAIL.ERROR.OUT=''
*       EMAIL.ERROR.OUT<1,1> = 'gbino@afs.net'
      EMAIL.ERROR.OUT<1,2>='DFriend@afs.net'
      EMAIL.ERROR.OUT<1,3>='MMcKay@afs.net'

      EMAIL.ERROR.OUT<3>=''              ; * BCC Email addresses
      EMAIL.ERROR.OUT<4>='Reports@afs.net'         ; * From Email address
      EMAIL.ERROR.OUT<5,1>='** ERROR ** ':EMAIL.OUT<5,1>     ; * Subject
      EMAIL.ERROR.OUT<6,1>='******************************************************************************'
      EMAIL.ERROR.OUT<6,2>='This email is NOT BEING SENT due to a failure of the email program blat.'
      EMAIL.ERROR.OUT<6,3>=' '
      EMAIL.ERROR.OUT<6,4>='It is NOT being sent to the following people at client ':CLIENT:' ':CLIENT.REC<2>:':'
      EMAIL.ERROR.OUT<6,5>=' '
      EMAIL.ERROR.OUT<6,6>=' TO: Addresses: ':EMAIL.TO
      EMAIL.ERROR.OUT<6,7>=' CC: Addresses: ':EMAIL.CC
      EMAIL.ERROR.OUT<6,8>='BCC: Addresses: ':EMAIL.BC
      EMAIL.ERROR.OUT<6,9>='******************************************************************************'
      NUM.EMAIL.LINES=DCOUNT(EMAIL.OUT<6>,@VM)
      FOR X=1 TO NUM.EMAIL.LINES
         EMAIL.ERROR.OUT<6,-1>=EMAIL.OUT<6,X>
      NEXT X
      EMAIL.ERROR.OUT<7>=1               ; * Auto format (add carriage returns to end of text)
      VIN=EMAIL.ERROR.OUT
      VOUT=''
      CALL SENDMAIL(VIN,VOUT)
      RETURN

**********************************************************************
MONITOR.YTD.VALUES:***
*********************************************************************
*   This subroutine is called when YTD Value for a Sale Code goes above a previously specified 'cap'

      ID.TAB = "COMM_CAP*":CLIENT
      READ CAP.REC FROM F.TABLES, ID.TAB THEN
         MVIN = CLIENT
         MVIN<2> = CLIENT.REC<2>         ; * Client Name
         MVIN<3> = SERV.SLSMAN.EMAIL
         MVIN<4> = ACCT.MGR.EMAIL
         MVIN<5> = CLIENT.REC<29>        ; * Fiscal Year
         MVIN<6> = BEG.DATE              ; * Process from date
         MVIN<7> = END.DATE              ; * Process TO date
         ID.CLIENT2 = CAP.REC<5>
         IF ID.CLIENT2 NE "" THEN
            READV CLIENT2.DESC FROM F.CLIENTS, ID.CLIENT2, 2 ELSE CLIENT2.DESC = "Name not on file"
            MVIN<8> = ID.CLIENT2         ; * Additional Client
            MVIN<9> = CLIENT2.DESC       ; * Additional Client Name
         END
         MVOUT = ''
         CALL FB.MONITOR.YTD.VALUES(MVIN,MVOUT,CLIENT.YTD,F.TABLES,F.BILLS.YTD)
      END

      RETURN

**********************************************************************
9999:* EXIT PROGRAM
************************************************************************
      GOSUB UPDATE.PROGRESS.REC          ; * NPR09

*
* FINISH CAPTURE OF TIMING INFORMATION   ; * JMK82
*
      BENCH.ETIME=TIME()                 ; * JMK82
      BVIN=''                            ; * JMK82
      BVOUT=''                           ; * JMK82
      BVIN<1>=BENCH.PGM                  ; * JMK82
      BVIN<2>=BENCH.GRP                  ; * JMK82
      BVIN<3>=BENCH.BDATE                ; * JMK82
      BVIN<4>=BENCH.BTIME                ; * JMK82
      BVIN<5>=BENCH.USER                 ; * JMK82
      BVIN<6>=BENCH.ETIME                ; * JMK82
      BVIN<7>=BENCH.NUM.REC              ; * JMK82
      CALL UPD.TIMING.BENCH(BVIN,BVOUT)  ; * JMK82

      IF TR.ERRORS # '' THEN             ; * SWB01
*          TR.EMAIL.OUT<1,1>='gbino@afs.net'         ; * SWB01

         TR.EMAIL.OUT<3>=''              ; * SWB01
         TR.EMAIL.OUT<4>='FB.2.3.Nw@afs.net'       ; * SWB01
         TR.EMAIL.OUT<5>='Freight Bill Timeline Tracking errors'       ; * SWB01
         TR.EMAIL.OUT<6> = 'Program ':PROG.NAME:' generated the following errors during Processing of Freight Bills for Client ':CLIENT      ; * SWB01
         TR.EMAIL.OUT<6, -1> = ' during calling of FB.UPD.TIMELINE.SUMMARY.'     ; * SWB01
         TR.EMAIL.OUT <6, -1> = ' ':@VM  ; * SWB01
         TR.EMAIL.OUT<6> := TR.ERRORS    ; * SWB01

         TR.EMAIL.OUT<6, -1> = ''        ; * SWB01
         TR.EMAIL.OUT<6, -1> = ''        ; * SWB01
         TR.EMAIL.OUT<6, -1> = 'A maximum of ':TR.ERROR.MAX:' will be reported.'           ; * SWB01
         TR.EMAIL.OUT<6, -1> = TR.ERROR.CNT:' errors were found.'      ; * SWB01

         CALL SENDMAIL(TR.EMAIL.OUT,TR.EMAIL.VOUT)           ; * SWB01
      END                                ; * SWB01
************************************************************************

      STOP

*******************************************************************
UPDATE.TIMELINE.SUMMARY:
******************************************************************

      IF FIELD(BILL.ID, '*', 3) = 0 THEN           ; * SWB01
         IF BILL.HIST.REC<246> # '' AND BILL.HIST.REC<247> # '' AND BILL.HIST.REC<37> # '' THEN      ; * SWB01
            TR.VIN = BILL.HIST.REC<53>   ; * SWB01
            TR.VIN<2> = CLIENT           ; * SWB01
            TR.VIN<3> = CARRIER          ; * SWB01
            TR.VIN<4> = BILL.HIST.REC<246>         ; * SWB01
            TR.VIN<5> = BILL.HIST.REC<247>         ; * SWB01
            TR.VIN<6> = BILL.HIST.REC<248>         ; * SWB01
            TR.VIN<7> = BILL.HIST.REC<37>          ; * SWB01
            TR.VIN<8> = BILL.HIST.REC<249>         ; * SWB01
            TR.VIN<9> = BILL.ID          ; * SWB01
            TR.VIN<10> = TIMELINE.TRANS.TYPE       ; * SWB01

            CALL FB.UPD.TIMELINE.SUMMARY(TR.VIN, TR.VOUT, F.TIMELINE.SUMMARY)    ; * SWB01
            BEGIN CASE                   ; * SWB01
               CASE TR.VOUT[1, 11] = 'TRANS.TYPE='           ; * SWB01
*Invalid Trans Type was passed

                  TR.ERROR.CNT += 1      ; * SWB01
                  TR.ERRORS<1, -1>='Invalid TRANS.TYPE of ':FIELD(TR.VOUT, '=', 2):' passed. Frt Bill # ':BILL.ID:'. Parameters passed were: '         ; * SWB01
                  TR.ERRORS<1,-1>=TR.VIN           ; * SWB01

               CASE TR.VOUT # ''         ; * SWB01
*This transaction caused the FB Counter in one or more of the Summmary
*records to 'go negative'. This transaction is not necessarily the one
*that CAUSED the miscount.'

                  TR.ERROR.CNT += 1      ; * SWB01
                  IF TR.ERROR.CNT <= TR.ERROR.MAX THEN       ; * SWB01
                     TR.ERRORS<1, -1> ='Frt Bill ':BILL.ID:' TRANS.TYPE of ':FIELD(TR.VOUT, '=', 2):' passed. One or more Summary records have a Count of less than zero '           ; * SWB01
                     TR.ERRORS<1, -1> = 'with the following parmaters:':TR.VIN   ; * SWB01
                     TR.ERRORS<1, -1> = 'The following parameters were passed back from FB.UPD.TIMELINE.SUMMARY: ':TR.VOUT         ; * SWB01
                  END
               CASE 1                    ; * SWB01
*No Error, no problem

            END CASE                     ; * SWB01
         END                             ; * SWB01
      END                                ; * SWB01

      RETURN                             ; * SWB01

************************************************************
CALC.ELAPSED.DAYS:
************************************************************

*Determine the number of Elapsed Business Days between the Mail Room
*Received Date and Today.

      ELAPSED.BIZ.DAYS.DETERMINED = FALSE          ; * SWB01
      ELAPSED.BIZ.DAYS = 0               ; * SWB01
      ELAPSED.BIZ.DAYS.TEST = DATE() - MR.DATE     ; * SWB01
      IF ELAPSED.BIZ.DAYS.TEST = 0 THEN  ; * SWB01
*The Bill was Received, Entered and Processed on the same day
         IF BILL.HIST.REC<249> = '' THEN           ; * SWB01
            BILL.HIST.REC<249> = 0       ; * SWB01
         END                             ; * SWB01
      END ELSE                           ; * SWB01
         BDT = ELAPSED.BIZ.DAYS.TEST + 1           ; * SWB01
         LOOP                            ; * SWB01
            BDT -= 1                     ; * SWB01
         UNTIL BDT = 0 OR ELAPSED.BIZ.DAYS.DETERMINED DO     ; * SWB01
            VIN = MR.DATE                ; * SWB01
            VIN<2> = BDT                 ; * SWB01
            CALL CALC.DATE(VIN, VOUT, F.TC.HOLIDAYS)         ; * SWB01
            DATE.RETURNED = VOUT<1>      ; * SWB01
            BEGIN CASE                   ; * SWB01
               CASE DATE.RETURNED > INT.TODAY      ; * SWB01
*Nothing to do except keep looking.
               CASE DATE.RETURNED = INT.TODAY      ; * SWB01
                  ELAPSED.BIZ.DAYS.DETERMINED = TRUE         ; * SWB01
                  ELAPSED.BIZ.DAYS = BDT           ; * SWB01
                  BILL.HIST.REC<249> = ELAPSED.BIZ.DAYS      ; * SWB01
               CASE 1                    ; * SWB01
                  ERR.MSG = 'M.R. to Processing Elapsed Days could not be determined for FB ':BILL.ID:'. MR.DATE=':MR.DATE
                  ELAPSED.DAYS.ERROR.CNT += 1      ; * SWB01
                  ELAPSED.DAYS.ERRORS<ELAPSED.DAYS.ERROR.CNT> = ERR.MSG          ; * SWB01
                  EXIT                   ; * SWB01
            END CASE                     ; * SWB01
         REPEAT                          ; * SWB01
      END                                ; * SWB01

      RETURN
****************************************************************
OPEN.FILES:
****************************************************************
      OPEN 'PPP.CLIENT' TO F.PPP ELSE    ; * GRB01
         CALL ELINE("Cannot open PPP.CLIENT file!")
      END
      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         CALL OPEN.ABORT('CLIENTS',PROG.NAME)
      END
      OPEN '','PPP.CLIENT' TO F.PPP.CLIENT ELSE    ; * DRF036
         CALL OPEN.ABORT('PPP.CLIENT',PROG.NAME)   ; * DRF036
      END                                ; * DRF036
      OPEN '','AR.SLSMAN.1000.1' TO F.AR.SLSMAN ELSE
         CALL OPEN.ABORT('AR.SLSMAN.1000.1',PROG.NAME)
      END
      OPEN '','CARRIERS' TO F.CARRIERS ELSE
         CALL OPEN.ABORT('CARRIERS',PROG.NAME)
      END
      OPEN '','EMP.PERF' TO F.EMP.PERF ELSE CALL OPEN.ABORT("EMP.PERF",PROG.NAME)
      OPEN '','CLIENT.SUM' TO F.CLIENT.SUM ELSE CALL OPEN.ABORT("CLIENT.SUM",PROG.NAME)
      OPEN '','FB.BILLS.CRX' TO F.CRX ELSE
         CALL OPEN.ABORT('FB.BILLS.CRX',PROG.NAME)
      END
      OPEN '','FB.OPEN.BILLS' TO F.OPEN ELSE
         CALL OPEN.ABORT('FB.OPEN.BILLS',PROG.NAME)
      END
      OPEN '','FB.PRE.OPEN.BILLS' TO F.PRE.OPEN ELSE
         CALL OPEN.ABORT('FB.PRE.OPEN.BILLS',PROG.NAME)
      END
      OPEN '','FB.PAY' TO F.PAY ELSE
         CALL OPEN.ABORT("FB.PAY",PROG.NAME)
      END
      OPEN '','FB.LOGISTICS' TO F.LOGS ELSE
         CALL OPEN.ABORT("FB.LOGISTICS",PROG.NAME)
      END
      OPEN '','FB.CLAIMS' TO F.CLAIMS ELSE
         CALL OPEN.ABORT("FB.CLAIMS",PROG.NAME)
      END
      OPEN '','FB.PROG.FEE' TO F.PROG.FEE ELSE
         CALL OPEN.ABORT("FB.PROG.FEE",PROG.NAME)
      END
      OPEN '','FB.MANG.RTRNS' TO F.MANG.RTRNS ELSE           ; *NPR05
         CALL OPEN.ABORT("FB.MANG.RTRNS",PROG.NAME)          ; *NPR05
      END                                ; *NPR05
      OPEN '','FB.ADJUSTS' TO F.ADJUSTS ELSE
         CALL OPEN.ABORT("FB.ADJUSTS",PROG.NAME)
      END
      OPEN '', 'REGIONS' TO REGIONS ELSE
         CALL OPEN.ABORT( 'REGIONS', PROG.NAME )
      END
      OPEN '','FBWORK':CH.NUM TO F.WORK ELSE
         EXECUTE 'CREATE-FILE FBWORK':CH.NUM:' 1 1001' PASSLIST CAPTURING OUTPUT
         OPEN '','FBWORK':CH.NUM TO F.WORK ELSE
            CALL OPEN.ABORT('FBWORK':CH.NUM,PROG.NAME)
         END
      END
      OPEN'','TEMP' TO F.TEMP ELSE
         CALL OPEN.ABORT('TEMP',PROG.NAME)
      END
      OPEN '','TL.HIST' TO F.TL.HIST ELSE
         CALL OPEN.ABORT('TL.HIST',PROG.NAME)
      END
      OPEN '','FB.TRANSPORT' TO F.TRANSPORT ELSE
         CALL OPEN.ABORT("FB.TRANSPORT",PROG.NAME)
      END
      OPEN '','FB.TABLES' TO F.TABLES ELSE
         CALL OPEN.ABORT("FB.TABLES",PROG.NAME)
      END
      OPEN '','EMAILDATA' TO F.EMAILDATA ELSE
         CALL OPEN.ABORT('EMAILDATA',PROG.NAME)
      END
      OPEN '','CLIENT.CARRIER.XREF' TO F.CLI.CAR.XREF ELSE
         CALL OPEN.ABORT('CLIENT.CARRIER.XREF',PROG.NAME)
      END
      OPEN '','FB.MISROUTES.HIST' TO F.MISR.HIST ELSE        ; * NPR02
         CALL OPEN.ABORT('FB.MISROUTE.HIST',PROG.NAME)       ; * NPR02
      END                                ; * JMK04                     ; * NPR02
      OPEN '','UPSDATA' TO F.UPSDATA ELSE
         CALL OPEN.ABORT('UPSDATA',PROG.NAME)
      END
      OPEN '','MAIL.CONS.DATA' TO F.MAIL.CONS.DATA ELSE
         CALL OPEN.ABORT('MAIL.CONS.DATA',PROG.NAME)
      END
      OPEN '','MAIL.CONS.BM' TO F.MAIL.CONS.BM ELSE
         CALL OPEN.ABORT('MAIL.CONS.LOGISTICS.BM',PROG.NAME)
      END
      OPEN '','EMAIL.LOG' TO F.EMAIL.LOG ELSE      ; * JMK62
         CALL OPEN.ABORT('EMAIL.LOG',PROG.NAME)    ; * JMK62
      END                                ; * JMK62
      OPEN '','UPS.BM' TO F.UPS.BM ELSE  ; * DRF01
         CALL OPEN.ABORT('UPS.BM',PROG.NAME)       ; * DRF01
      END                                ; * DRF01
      OPEN '','PROCESS.NOTIFY' TO F.PN ELSE        ; * JMK79
         CALL OPEN.ABORT('PROCESS.NOTIFY',PROG.NAME)         ; * JMK79
      END                                ; * JMK79
      OPEN '','PROCESS.NOTIFY.HIST' TO F.PN.HIST ELSE        ; * JMK79
         CALL OPEN.ABORT('PROCESS.NOTIFY.HIST',PROG.NAME)    ; * JMK79
      END                                ; * JMK79
      OPEN '','FB.BANK.CTRL' TO F.BANK.CTRL ELSE   ; * JMK90
         CALL OPEN.ABORT('FB.BANK.CTRL',PROG.NAME)           ; * JMK90
      END                                ; * JMK90
      OPEN '','FB.ADJUST.CLIENT' TO F.ADJUST.CLIENT ELSE     ; * JMK98
         CALL OPEN.ABORT("FB.ADJUST.CLIENT",PROG.NAME)       ; * JMK98
      END                                ; * JMK98
      OPEN '','FB.BANKS' TO F.FB.BANKS ELSE        ; * JMK128
         CALL OPEN.ABORT('FB.BANKS',PROG.NAME)     ; * JMK128
      END                                ; * JMK128
      OPEN '','ZIP.LINE.ITEM' TO F.ZIP.LINE.ITEM ELSE        ; *DRF03
         CALL OPEN.ABORT('ZIP.LINE.ITEM',PROG.NAME)          ; *DRF03
      END                                ; *DRF03
      OPEN '','FB.REG.DIV.XREF' TO F.REG.DIV.XREF ELSE       ; * JMK141
         CALL OPEN.ABORT('FB.REG.DIV.XREF',PROG.NAME)        ; * JMK141
      END                                ; * JMK141
      OPEN '','AR.BRIDGE.LAST' TO F.BRIDGE.LAST ELSE         ; * JMK147
         CALL OPEN.ABORT('AR.BRIDGE.LAST',PROG.NAME)         ; * JMK147
      END                                ; * JMK147
      OPEN '','PROCESS.LOG' TO F.PROCESS.LOG ELSE  ; * DRF024
         CALL OPEN.ABORT('PROCESS.LOG',PROG.NAME)  ; * DRF024
      END                                ; * DRF024
      OPEN '','AR.SALES.CODE.1000.1' TO F.SALES.CODE ELSE    ; * JMK147
         CALL OPEN.ABORT('AR.SALES.CODE.1000.1',PROG.NAME)   ; * JMK147
      END                                ; * JMK147
      OPEN '','FB.TIMELINE.SUMMARY' TO F.TIMELINE.SUMMARY ELSE         ; * SWB01
         CALL OPEN.ABORT('FB.TIMELINE.SUMMARY',PROG.NAME)    ; * SWB01
      END                                ; * SWB01
      OPEN '','TC.HOLIDAYS' TO F.TC.HOLIDAYS ELSE  ; * SWB01
         CALL OPEN.ABORT('TC.HOLIDAYS',PROG.NAME)  ; * SWB01
      END                                ; * SWB01
      OPEN '','BCTRL' TO F.BCTRL ELSE    ; * SWB01
         CALL OPEN.ABORT('BCTRL',PROG.NAME)        ; * SWB01
      END                                ; * SWB01
      OPEN '','FB.STATUS.UPDATE' TO F.STATUS.UPDATE ELSE     ; * JMK154
         CALL OPEN.ABORT('FB.STATUS.UPDATE',PROG.NAME)       ; * JMK154
      END                                ; * JMK154
      OPEN '','PCL.BILLING' TO F.PCL.BILL ELSE     ; * JMK157
         CALL OPEN.ABORT('PCL.BILLING',PROG.NAME)  ; * JMK157
      END                                ; * JMK157
      OPEN '','FP.PENDING' TO F.FPPEND ELSE        ; * JMK157
         CALL OPEN.ABORT('FP.PENDING',PROG.NAME)   ; * JMK157
      END                                ; * JMK157
      OPEN '','AR-BRIDGE' TO F.BRIDGE ELSE         ; * JMK97
         CALL OPEN.ABORT('AR-BRIDGE',PROG.NAME)    ; * JMK157
      END
      * Begin GRB01
      OPEN '','OPERATOR' TO F.OP ELSE CALL OPEN.ABORT("OPERATOR",PROG.NAME)      ; * GRB01
      READV OP.FLG FROM F.OP,USER,63 ELSE
         OP.FLG = "N"
      END

      RETURN
****************************************************************
INIT.VARS:
****************************************************************

      DIV=''                             ; * JMK09
      MAX.BILL.VAR.PCT=25                ; * JMK15

      ACTUAL.CHG.TOTAL = 0               ; * NPR10
      FB.OZ=.6333                        ; * JMK18
      PROMPT''
      TODAY=DATE()
      CARRIERS=''
      DIV.CODE=''
      CARRIER.COUNT=0
      DIV.CODE.COUNT=0
      BILLS.COUNT=0
      LTL.COUNT=0                        ; * DRF033
      NON.LTL.COUNT=0                    ; * DRF033
      INTL.COUNT=0                       ; * DRF042
      NON.INTL.COUNT=0                   ; * DRF042
      PR.BILLS.COUNT=0                   ; * JMK24
      UPS.BILLS.COUNT=0                  ; * JMK31
      UPS.TRACK.COUNT=0                  ; * JMK31
      DISC.VAR=0
      OVRCHG.VAR=0
      CONSLT.VAR=0
      BD.DISC=0
      BD.OVRCHG=0
      BD.CONSLT=0
      INVOICE=''
      DIV.INVOICE=''                     ; * JMK32
      CLAIMS.FEES=''
      PCL.SLS.ARRAY=''                   ; * JMK157
      BILLING.REC=0                      ; * JMK157
      DISCOUNT.COMM=0                    ; * JMK157
      OVERCHG.COMM=0                     ; * JMK157
      CONSULTING.COMM=0                  ; * JMK157
      EXPENSE.DIST.COMM=0                ; * JMK157
      MGMT.SVC.COMM=0                    ; * JMK157
      MISR.CONS.COMM=0                   ; * JMK157
      OVERCHG.PERC=0                     ; * JMK157
      LOG.COMM.PERC=0                    ; * JMK157
      DIV.LIST=''                        ; * JMK32
      DIV.COUNTS=''                      ; * JMK32
      DARRAY=''
      DIV.DARRAY=''                      ; * JMK32
      ERRMSG=''
      CHG.WARN=''                        ; * JMK48
      VC.REC = ''                        ; * NPR014
      MAT DIV.REC = ''
      MAT REG.CODE.REC = ''
      DIM SAVE.DIV.REC(DIV.REC.SIZE)
      MAT SAVE.DIV.REC = ''

      FOR I=1 TO 14                      ; * JMK19 ; * JMK34 ; * JMK144
         INVOICE<I>=0
      NEXT I

      BENCH.PGM = PROG.NAME              ; * NPR03
      BENCH.GRP = ''                     ; * NPR03
      BENCH.BDATE = ''                   ; * NPR03
      BENCH.BTIME = ''                   ; * NPR03
      BENCH.USER = ''                    ; * NPR03
      BENCH.ETIME = ''                   ; * NPR03
      BENCH.NUM.REC = ''                 ; * NPR03

      LOGGING.FLAG = 0                   ; * No logging initially
      LOG.HDR.ID = "99999"
      LOG.SEQ.NO = ""
      PROC.DESC = ""
      PROC.EMAIL = ""
      EMAIL.SEND='HOLD'                  ; * JMK123
      INT.TODAY = DATE()                 ; * SWB01
      ELAPSED.DAYS.ERRORS = ''           ; * SWB01
      ELAPSED.DAYS.ERROR.CNT = 0         ; * SWB01

      CO.NAME = 'AFS Logistics, LLC'     ; * SWB01
      ACCESS.REASON = 'PROCESS'          ; * SWB01
      TR.ERROR.CNT = 0                   ; * SWB01
      TR.ERRORS = ''                     ; * SWB01
      TR.EMAIL.OUT = ''                  ; * SWB01
      TR.ERROR.MAX = 50                  ; * SWB01
      RETURN
**********************************************************************
BUILD.TRANS.ARRAY:
**********************************************************************

*
* Select trans codes and build transportation array
*
      TRANS.ARRAY=""
      SELECT F.TRANSPORT
      LOOP
         READNEXT ID ELSE ID=""
      UNTIL ID="" DO
         READ TRANS.REC FROM F.TRANSPORT,ID ELSE TRANS.REC = ''
         IF TRANS.ARRAY="" THEN
            TRANS.ARRAY<1>=ID
            TRANS.ARRAY<2>=TRANS.REC<1>
            TRANS.ARRAY<3>=TRANS.REC<2>
            TRANS.ARRAY<4>=TRANS.REC<3>  ; * JMK12
            TRANS.ARRAY<5>=TRANS.REC<4>  ; * JMK12
         END ELSE
            LOCATE(ID,TRANS.ARRAY,1;POS;"AR") ELSE
               TRANS.ARRAY=INSERT(TRANS.ARRAY,1,POS,0,ID)
               TRANS.ARRAY=INSERT(TRANS.ARRAY,2,POS,0,TRANS.REC<1>)
               TRANS.ARRAY=INSERT(TRANS.ARRAY,3,POS,0,TRANS.REC<2>)
               TRANS.ARRAY=INSERT(TRANS.ARRAY,4,POS,0,TRANS.REC<3>)    ; * JMK12
               TRANS.ARRAY=INSERT(TRANS.ARRAY,5,POS,0,TRANS.REC<4>)    ; * JMK12
            END
         END
      REPEAT

      RETURN
*****************************************************************
OPEN.CLIENT.FILES:
*****************************************************************

      OPEN 'FB.BILLS.HIST,':CLIENT TO F.HIST ELSE
         CALL ELINE("Cannot open FB.BILLS.HIST,":CLIENT:" file!")
         GOTO 20
      END
      OPEN 'FB.BILLS,':CLIENT TO F.BILLS ELSE
         CALL ELINE("Cannot open FB.BILLS,":CLIENT:" file!")
         GOTO 20
      END
      OPEN 'FB.BILLS.ACCESS,':CLIENT TO F.ACCESS ELSE
         CALL ELINE("Cannot open FB.BILLS.ACCESS,":CLIENT:" file!")
         GOTO 20
      END
      OPEN '','FB.OPEN.DATE.XREF,':CLIENT TO F.OPEN.DATE.XREF ELSE
         EXECUTE 'CREATE-FILE DATA FB.OPEN.DATE.XREF,':CLIENT:' 23,1' CAPTURING OUTPUT     ; * NKH01
         OPEN '','FB.OPEN.DATE.XREF,':CLIENT TO F.OPEN.DATE.XREF ELSE
            CALL ELINE("Cannot Create FB.OPEN.DATE.XREF,":CLIENT)
            GOTO 10
         END
      END
      OPEN '','FB.PROC.DATE.XREF,':CLIENT TO F.PROC.DATE.XREF ELSE
         EXECUTE 'CREATE-FILE DATA FB.PROC.DATE.XREF,':CLIENT:' 503,1' CAPTURING OUTPUT    ; * NKH01
         OPEN '','FB.PROC.DATE.XREF,':CLIENT TO F.PROC.DATE.XREF ELSE
            CALL ELINE("Cannot Create FB.PROC.DATE.XREF,":CLIENT)
            GOTO 10
         END
      END
      IF CLIENT='00850' THEN             ; * Darling ; * JMK72
         OPEN '','FB.BOL.CRX,00850' TO F.BOL ELSE  ; * JMK72
            CALL OPEN.ABORT('FB.BOL.CRX,00850',PROG.NAME)    ; * JMK72
         END                             ; * JMK72
      END                                ; * JMK72
      IF CLIENT='01057' THEN             ; * H & K Dallas
         OPEN '','FB.BOL.CRX,01057' TO F.BOL ELSE
            CALL OPEN.ABORT('FB.BOL.CRX,01057',PROG.NAME)
         END
      END
      IF CLIENT='01344' THEN             ; * Swedish Match ; * JMK37
         OPEN '','FB.BOL.CRX,01344' TO F.BOL ELSE  ; * JMK37
            CALL OPEN.ABORT('FB.BOL.CRX,01344',PROG.NAME)    ; * JMK37
         END                             ; * JMK37
      END                                ; * JMK37
      IF CLIENT='01311' THEN             ; * Dietrich Industries ; * JMK47
         OPEN '','FB.BOL.CRX,01311' TO F.BOL ELSE  ; * JMK47
            CALL OPEN.ABORT('FB.BOL.CRX,01311',PROG.NAME)    ; * JMK47
         END                             ; * JMK47
      END                                ; * JMK47
      IF CLIENT='01433' THEN             ; * Darling ; * JMK72
         OPEN '','FB.BOL.CRX,01433' TO F.BOL ELSE  ; * JMK72
            CALL OPEN.ABORT('FB.BOL.CRX,01433',PROG.NAME)    ; * JMK72
         END                             ; * JMK72
      END                                ; * JMK72
      OPEN '','FB.BILLS.YTD' TO F.BILLS.YTD ELSE
         CALL ELINE("Cannot open FB.BILLS.YTD file!")
         GOTO 20
      END
      OPEN '','FB.BILLS.YTD,HISTORY' TO F.BILLS.YTD.HIST ELSE          ; * NPR11
         CALL ELINE("Cannot open FB.BILLS.YTD,HISTORY file!")          ; * NPR11
         GOTO 20                         ; * NPR11
      END                                ; * NPR11
      REG.FLAG=0                         ; * JMK161
      IF DIVISION='Y' THEN
         OPEN 'DIVISION.CODES,':CLIENT TO F.DIV ELSE
            CALL ELINE("Cannot open DIVISION.CODES,":CLIENT:" file!")
            GOTO 20
         END

         IF CLIENT='00866' THEN REG.FLAG=1         ; * JMK161
         IF CLIENT='00949' THEN REG.FLAG=1
         IF CLIENT='01282' THEN REG.FLAG=1         ; * JMK161
         IF CLIENT='01283' THEN REG.FLAG=1         ; * DRF017
         IF CLIENT='01401' THEN REG.FLAG=1         ; * JMK161
         IF CLIENT='01468' THEN REG.FLAG=1         ; * JMK161
         IF CLIENT='01485' THEN REG.FLAG=1         ; * DRF029
         IF CLIENT='01499' THEN REG.FLAG=1         ; * DRF040
         IF CLIENT='01633' THEN REG.FLAG=1         ; * JMK161
         IF CLIENT='01706' THEN REG.FLAG=1         ; * JMK161
         IF CLIENT='01746' THEN REG.FLAG=1         ; * DRF020
         IF CLIENT='01931' THEN REG.FLAG=1         ; * DRF021
         IF CLIENT='01977' THEN REG.FLAG=1         ; * JMK161
         IF CLIENT='02102' THEN REG.FLAG=1         ; * JMK161
         IF CLIENT='02427' THEN REG.FLAG=1         ; * GRB03
         IF CLIENT='04866' THEN REG.FLAG=1
         IF CLIENT='05639' THEN REG.FLAG=1         ; * GRB04
         IF CLIENT='05702' THEN REG.FLAG=1
         IF CLIENT='05904' THEN REG.FLAG=1
         IF CLIENT='06021' THEN REG.FLAG=1
         IF CLIENT='07437' THEN REG.FLAG=1
         IF CLIENT='30041' THEN REG.FLAG=1
         IF REG.FLAG THEN                ; * JMK161
            OPEN 'REGION.CODES,':CLIENT TO F.REG ELSE        ; * JMK107
               CALL ELINE("Cannot open REGION.CODES,":CLIENT:" file!")           ; * JMK107
               GOTO 20                   ; * JMK107
            END                          ; * JMK107
         END                             ; * JMK107
      END
      IF EXPENSE='Y' THEN
         OPEN '','EXPENSE.CODES,':CLIENT TO F.EXP ELSE
            CALL ELINE("Cannot open EXPENSE.CODES,":CLIENT:" file!")
            GOTO 20
         END
      END
      IF VARIANCE='Y' OR VARIANCE='A' THEN
         OPEN '','VARIANCE.CODES,':CLIENT TO F.VAR ELSE
            EXECUTE 'CREATE-FILE DATA VARIANCE.CODES,':CLIENT:' 7,1' CAPTURING OUTPUT      ; * JMK157  NKH01
            OPEN 'VARIANCE.CODES,':CLIENT TO F.VAR ELSE      ; * JMK157
               CALL ELINE("Cannot open VARIANCE.CODES,":CLIENT:" file!")
               GOTO 20
            END                          ; * JMK157
         END
      END

      IF MR.LTRS='Y' OR MR.EMAIL='Y' THEN          ; * JMK04
         OPEN 'VEND.CUST,':CLIENT TO F.VC ELSE
            CALL ELINE("Cannot open VEND.CUST,":CLIENT:" file!")
            GOTO 20
         END
         OPEN 'FB.MISROUTES,':CLIENT TO F.MISROUTES ELSE
            EXECUTE 'CREATE-FILE DATA FB.MISROUTES,':CLIENT:' 7,1' CAPTURING OUTPUT        ; * NKH01
            OPEN 'FB.MISROUTES,':CLIENT TO F.MISROUTES ELSE
               CALL ELINE("Cannot open FB.MISROUTES,":CLIENT:" file!")
               GOTO 20
            END
         END
         OPEN 'FB.TEM,':CLIENT TO F.TEM ELSE       ; * JMK119
            EXECUTE 'CREATE-FILE DATA FB.TEM,':CLIENT:' 101,1' CAPTURING OUTPUT  ; * JMK119   NKH01
            OPEN 'FB.TEM,':CLIENT TO F.TEM ELSE    ; * JMK119
               CALL ELINE("Cannot open FB.TEM,":CLIENT:" file!")       ; * JMK119
               GOTO 20                   ; * JMK119
            END                          ; * JMK119
         END                             ; * JMK119
         OPEN 'FB.TEM.HIST,':CLIENT TO F.TEM.HIST ELSE       ; * JMK119
            EXECUTE 'CREATE-FILE DATA FB.TEM.HIST,':CLIENT:' 101,1' CAPTURING OUTPUT       ; * JMK119     NKH01
            OPEN 'FB.TEM.HIST,':CLIENT TO F.TEM.HIST ELSE    ; * JMK119
               CALL ELINE("Cannot open FB.TEM.HIST,":CLIENT:" file!")  ; * JMK119
               GOTO 20                   ; * JMK119
            END                          ; * JMK119
         END                             ; * JMK119
      END

      OPEN '','VEND.CUST,':CLIENT TO F.VEND.CUST ELSE        ; *NPR019
         CALL ELINE("Cannot open VEND.CUST,":CLIENT:" file!")          ; *NPR019
         GOTO 20                         ; *NPR019
      END                                ; *NPR019

      OPEN '','FB.BC.FSC' TO F.NFSC ELSE           ; *NPR019
         CALL ELINE("Cannot open FB.BC.FSC file!")           ; *NPR019
         GOTO 20                         ; *NPR019
      END                                ; *NPR019
      OPEN '','PCIN' TO F.PCIN ELSE      ; *NPR019
         CALL ELINE("Cannot open PCIN file!")      ; *NPR019
         GOTO 20                         ; *NPR019
      END
      OPEN '','PCOUT' TO F.PCOUT ELSE    ; *NPR019
         CALL ELINE("Cannot open PCOUT file!")     ; *NPR019
         GOTO 20                         ; *NPR019
      END
      OPEN '','FB.UNPROCESS,':CLIENT TO F.UP ELSE
         EXECUTE 'CREATE-FILE DATA FB.UNPROCESS,':CLIENT:' 1009,2' CAPTURING OUTPUT        ; * JMK172    NKH01
         OPEN '','FB.UNPROCESS,':CLIENT TO F.UP ELSE
            CALL OPEN.ABORT('FB.UNPROCESS,':CLIENT,PROG.NAME)
         END
      END
      AUDIT.FILES.OPEN = 1               ; *NPR019
      OPEN '','FB.AUDIT,':CLIENT TO F.AUDIT ELSE   ; *NPR019
         AUDIT.FILES.OPEN = 0            ; *NPR019
      END                                ; *NPR019
      OPEN '','FB.AUDIT.TABLES,':CLIENT TO F.AUDIT.TABLES ELSE         ; *NPR019
         AUDIT.FILES.OPEN = 0            ; *NPR019
      END                                ; *NPR019
      OPEN '','FB.AUDIT.ZIPS,':CLIENT TO F.AUDIT.ZIPS ELSE   ; *NPR019
         AUDIT.FILES.OPEN = 0            ; *NPR019
      END                                ; *NPR019                                                     ; *NPR019
      RETURN


   END
