***********************************************************************
* Program : VENDOR
*           Create a client vendor spreadsheet containing all information
*           available about vendors.
* Author  : James Barberousse (User Interface)
*           Owen Holman (Business Logic)
* Date    : May 24, 2002
*
* Copyright (c) 2002 by AFS Logistics, LLC. - All Rights Reserved
***********************************************************************
* 102505 - JMK01 - ADD PROSPECTS FOR ALL STATES FILE WHEN ALL IS CHOSEN
* 042606 - JCW01 - Make corrections to use of FB.PROC.DATA.XREF
* 012508 - NPR01 - Added Lead & Servicing Salesman columns.
* 031208 - JMK02 - T080799 - Remove duplicates in FB History Reporting
* 110909 - JMK03 - C091367 - Customer Vender reports ; restrict access
* 031212 - PKB01 - SysAid #
* 021714 - JMK04 - SysAid#8619 - Josh Clark Position Change
* 082114 - DRF01 - SysAid 11286 - Gave access to Lynda and Jennifer
* 070115 - DRF02 - SysAid 18393 - Gave Robbie Jester access
* 081115 - DRF03 - SysAid 19293 - Gave Cynthia access

      $INCLUDE PROG.ADMIN INC_OPTIONS

* Initialize general variables

      PROMPT''
      CALL GET.USER(USER.NAME)
      CALL CHANNEL(CH.NUM)
      PROG.NAME='VENDOR'
      PROG.DESC='Logistics Client Vendor Details'
      PACK.NAME='Accounting'
      TAB=CHAR(9)
      UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'VENDOR' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
      ESC=CHAR(27)
      MASK.CHAR='-'

* Initialize input variables and screen save variables

      CLIENT.ID=''
      CLIENT.SAVE=''
      ACTIVE.CLIENT=''
      ACTIVE.SAVE=''
      BEG.DATE=''
      BEG.SAVE=''
      END.DATE=''
      END.SAVE=''
      TRANS.MODE=''
      TRANS.SAVE=''
      SELECT.STATES='ALL'
      SELECT.PILOT='E'                   ; * JMK03

* Initialize other variables

      SS.FILENAME='CLIENT_VENDORS.XLS'   ; * Name of file written to

* Setup the screen

      GOSUB DISPLAY.SCREEN

* Restrict program usage

      VALID.USER=1
      BEGIN CASE
         CASE USER.NAME='BRIAN'
         CASE USER.NAME='BRIANP'
*        CASE USER.NAME='KAREN'          ; * JMK04
*        CASE USER.NAME='OWEN'           ; * JMK04
         CASE USER.NAME='BROSE'          ; * JMK04
         CASE USER.NAME='LJUNEAU'        ; * JMK04
         CASE USER.NAME='SMATTHEWS'      ; * Matt 06/27/07

         CASE USER.NAME='DAVID'
*        CASE USER.NAME='JAMES'          ; * JMK03
         CASE USER.NAME='MKERBOW'        ; * JMK01
*        CASE USER.NAME='NPRATT'         ; * JMK04

*        CASE USER.NAME='AJFISHER'
         CASE USER.NAME='AMY'            ; * PKB01
         CASE USER.NAME='BSMITH'         ; * PKB01
         CASE USER.NAME='CYNTHIA'         ; * DRF03
         CASE USER.NAME='DONNA'          ; * PKB01
*        CASE USER.NAME='JBENNETT'       ; * JCW01 ; * JMK03
         CASE USER.NAME='JCLARK'         ; * JMK04
         CASE USER.NAME='JPETERS'         ; * DRF01
         CASE USER.NAME='KRISTY'
         CASE USER.NAME='LGARCIA'      ; * DRF01
*        CASE USER.NAME='LNUGENT'        ; * PKB01 ; * JMK04
*        CASE USER.NAME='MRICE'          ; * JMK03
         CASE USER.NAME='RJESTER'      ; * DRF02
         CASE USER.NAME='SCHUTAI'        ; * PKB01
*        CASE USER.NAME='TSOUTHAM'       ; * JMK03
         CASE USER.NAME='WPETTIGREW'     ; * PKB01
         CASE 1
            VALID.USER=0
      END CASE

      IF NOT(VALID.USER) THEN
         CALL FB.PRINT.CENT(1,80,12,'! Restricted Access Application !')
         CALL FB.PRINT.CENT(1,80,14,'Access Denied')
         CALL ELINE('')
         GOTO THE.END
      END
      CALL CHANNEL(CH.NUM)

* Open files

      OPEN '','FB.TRANSPORT' TO F.TRANSPORT ELSE
         CALL OPEN.ABORT('FB.TRANSPORT',PROG.NAME)
      END
      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         CALL OPEN.ABORT('CLIENTS',PROG.NAME)
      END
      OPEN '','BILLDATA.':USER.NAME TO F.BILLDATA ELSE
         CALL OPEN.ABORT('BILLDATA.':USER.NAME,PROG.NAME)
      END
      OPEN 'TABLES' TO F.TABLES ELSE
         CALL OPEN.ABORT('TABLES',PROG.NAME)
      END
      OPEN '','FBWORK':CH.NUM TO F.WORK ELSE
         EXECUTE 'CREATE-FILE FBWORK':CH.NUM:' 1 1001' PASSLIST CAPTURING OUTPUT
         OPEN '','FBWORK':CH.NUM TO F.WORK ELSE
            CALL OPEN.ABORT('FBWORK':CH.NUM,PROG.NAME)
         END
      END
      OPEN 'DICT','FBWORK':CH.NUM TO F.DICT.WORK ELSE
         CALL OPEN.ABORT('DICT FBWORK':CH.NUM,PROG.NAME)
      END
*
      OPEN '','ZIPS.CODES' TO F.ZIPS ELSE
         CALL OPEN.ABORT("ZIPS",PROG.NAME)
      END
*
      OPEN '','AR.SLSMAN.1000.1' TO F.SLSMAN ELSE
         CALL OPEN.ABORT("AR.SLSMAN.1000.1",PROG.NAME)
      END
*
      DICT=''
      DICT< 1>='A'
      DICT< 2>='10'
      DICT< 3>='State'
      DICT< 9>='L'
      DICT<10>='2'
      WRITE DICT ON F.DICT.WORK,'STATE'
      DICT=''
      DICT< 1>='A'
      DICT< 2>='7'
      DICT< 3>='Name'
      DICT< 9>='L'
      DICT<10>='30'
      WRITE DICT ON F.DICT.WORK,'VC.NAME'

* Read in transportation modes

      TRANSPORT.MODE.LIST=''
      EXECUTE "SSELECT FB.TRANSPORT" CAPTURING OUTPUT
      LOOP
         READNEXT TRANSPORT.ID ELSE TRANSPORT.ID='MODE.ENTRY.IS.FINISHED'
      UNTIL TRANSPORT.ID='MODE.ENTRY.IS.FINISHED'
         READ TRANSPORT.REC FROM F.TRANSPORT,TRANSPORT.ID THEN
            TRANSPORT.MODE.LIST<1,-1>=TRANSPORT.ID
            TRANSPORT.MODE.LIST<2,-1>=TRANSPORT.REC<1>
         END
      REPEAT
      MODE.COUNT=DCOUNT(TRANSPORT.MODE.LIST<1>,@VM)

      READ LEGAL.STATES FROM F.TABLES,'LEGAL.STATES' ELSE
         CALL ELINE("Unable to read LEGAL.STATES from file TABLES")
         ABORT
      END

* Get client ID

100: ***
      MASK=CLIENT.ID:STR(MASK.CHAR,5-LEN(CLIENT.ID)):@(-4)
      HELP='Enter client ID or letters for search. [ALL]-Logistics Clients [EX]it'
      CALL GEN.IN(22,4,MASK,'',Q,0,20,'','',2,22,4,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI=''
            IF CLIENT.ID#'' THEN QI=CLIENT.ID ELSE GOTO 100
         CASE QI='ALL'
            NULL
         CASE NOT(QI MATCHES '0N')
            CALL SOUNDEX.DISPLAY(QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            GOSUB DISPLAY.SCREEN
            BEGIN CASE
               CASE ITEM.LIST=''
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
               CASE ITEM.LIST NE ''
                  IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
            END CASE
            GOTO 100
         CASE NUM(QI)
            QI=QI'R%5'
         CASE 1
            GOTO 100
      END CASE
      CLIENT.ID=QI
      IF CLIENT.ID='ALL' THEN
         CLIENT.SAVE='ALL CLIENTS'
      END ELSE
         READ CLIENT.REC FROM F.CLIENTS,CLIENT.ID THEN
            IF CLIENT.ID='00000' THEN
               CALL ELINE('This is not a valid account.')
               CLIENT.ID=''
               GOTO 100
            END
            IF CLIENT.ID[1,2]='99' THEN
               CALL ELINE('Traffic Survey accounts are not allowed.')
               CLIENT.ID=''
               GOTO 100
            END
            IF CLIENT.REC<93>#'Y' THEN
               CALL ELINE('Only Logistics Accounts are allowed.')
               CLIENT.ID=''
               GOTO 100
            END
            ACTIVE.CLIENT=CLIENT.REC<30>
            IF ACTIVE.CLIENT#'A' THEN
               CALL ELINE('Only Active Accounts are allowed.')
               CLIENT.ID=''
               GOTO 100
            END
            BEGIN CASE
               CASE ACTIVE.CLIENT='A'
                  ACTIVE.SAVE='A - Active'
               CASE ACTIVE.CLIENT='I'
                  ACTIVE.SAVE='I - Inactive'
               CASE ACTIVE.CLIENT='O'
                  ACTIVE.SAVE='O - Out of Business'
               CASE 1
                  ACTIVE.SAVE=''
            END CASE
            CLIENT.SAVE=CLIENT.ID:' ':CLIENT.REC<2>
*
*NPR01
            LEAD.SLSMAN = CLIENT.REC<114>
            READV LEAD.SLSMAN.NAME FROM F.SLSMAN,LEAD.SLSMAN,1 ELSE LEAD.SLSMAN.NAME=''
            SECOND.SLSMAN = CLIENT.REC<115>
            READV SECOND.SLSMAN.NAME FROM F.SLSMAN,SECOND.SLSMAN,1 ELSE SECOND.SLSMAN.NAME=''
*NPR01
*
         END ELSE
            CRT @(22,4):CLIENT.ID:@(-4)
            CALL ELINE('Client ':CLIENT.ID:' not on file.')
            CLIENT.ID=''
            GOTO 100
         END
      END
      CRT @(22,4):CLIENT.SAVE:@(-4)

      IF CLIENT.ID#'ALL' THEN
         GOSUB DISPLAY.SCREEN
         GOTO 300
      END
*
**Get active/inactive/out of business/all client switch
*
*200:***
*     MASK=ACTIVE.CLIENT:STR(MASK.CHAR,3-LEN(ACTIVE.CLIENT)):@(-4)
*     HELP='[A]ctive [I]nactive [O]ut of Business [ALL] [X]=Back [EX]it'
*     CALL GEN.IN(22,6,MASK,'',Q,0,3,'','',2,22,6,0,QI,HELP,0,23)
*     QI=OCONV(QI,'MCU')
*     BEGIN CASE
*        CASE QI='EX'
*           GOTO THE.END
*        CASE QI='X'
*           GOSUB DISPLAY.SCREEN
*           GOTO 100
*        CASE QI='ALL'
*           ACTIVE.CLIENT='ALL'
*           ACTIVE.SAVE='ALL - Active or Inactive or Other'
*        CASE QI='O'
*           ACTIVE.CLIENT='O'
*           ACTIVE.SAVE='O - Out of Business'
*        CASE QI='I'
*           ACTIVE.CLIENT='I'
*           ACTIVE.SAVE='I - Inactive'
*        CASE QI='A'
*           ACTIVE.CLIENT='A'
*           ACTIVE.SAVE='A - Active'
*        CASE QI=''
*           IF ACTIVE.CLIENT#'' THEN QI=ACTIVE.CLIENT ELSE GOTO 200
*        CASE 1
*           GOTO 200
*     END CASE
*     CRT @(22,6):ACTIVE.SAVE:@(-4)

* Get begin date

300: ***
      MASK=BEG.DATE'D4-':STR(MASK.CHAR,10-LEN(BEG.DATE'D4-')):@(-4)
      HELP='Enter beginning date (Formats: MMDD, MMDDYY, MMDDYYYY). [T]oday [X]=Back [EX]it'
      CALL GEN.IN(22,8,MASK,'',Q,0,10,'','',2,22,8,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            GOSUB DISPLAY.SCREEN
*           IF CLIENT.ID='ALL' THEN GOTO 200 ELSE GOTO 100
            GOTO 100
         CASE QI=''
            IF BEG.DATE#'' THEN QI=BEG.DATE'D4-' ELSE GOTO 300
         CASE QI='T'
            QI=DATE()'D4-'
         CASE QI MATCHES '0N'
            BEGIN CASE
               CASE LEN(QI)=4
                  QI=QI[1,2]:'.':QI[3,2]:'.':(DATE()'D4-')[7,4]
               CASE LEN(QI)=6
                  IF QI[5,2]<50 THEN
                     QI=QI[1,2]:'.':QI[3,2]:'.':(DATE()'D4-')[7,2]:QI[5,2]
                  END ELSE
                     QI=QI[1,2]:'.':QI[3,2]:'.':'19':QI[5,2]           ; * ((DATE()-365)'D4-')[7,2]:QI[5,2]
                  END
               CASE LEN(QI)=8
                  QI=QI[1,2]:'.':QI[3,2]:'.':QI[5,4]
               CASE 1
                  CALL ELINE('Use one of the following formats: MMDD or MMDDYY or MMDDYYYY.')
                  GOTO 300
            END CASE
      END CASE
      BEG.DATE=ICONV(QI,'D')
      IF BEG.DATE='' THEN
         CALL ELINE('Invalid date.')
         GOTO 300
      END
      BEG.SAVE=BEG.DATE'D4-'
      CRT @(22,8):BEG.SAVE:@(-4)

* Get end date

400: ***
      MASK=END.DATE'D4-':STR(MASK.CHAR,10-LEN(END.DATE'D4-')):@(-4)
      HELP='Enter ending date (Formats: MMDD, MMDDYY, MMDDYYYY). [T]oday [X]=Back [EX]it'
      CALL GEN.IN(22,10,MASK,'',Q,0,10,'','',2,22,10,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            GOSUB DISPLAY.SCREEN
            GOTO 300
         CASE QI=''
            IF END.DATE#'' THEN QI=END.DATE'D4-' ELSE GOTO 400
         CASE QI='T'
            QI=DATE()'D4-'
         CASE QI MATCHES '0N'
            BEGIN CASE
               CASE LEN(QI)=4
                  QI=QI[1,2]:'.':QI[3,2]:'.':(DATE()'D4-')[7,4]
               CASE LEN(QI)=6
                  IF QI[5,2]<50 THEN
                     QI=QI[1,2]:'.':QI[3,2]:'.':(DATE()'D4-')[7,2]:QI[5,2]
                  END ELSE
                     QI=QI[1,2]:'.':QI[3,2]:'.':'19':QI[5,2]           ; * ((DATE()-365)'D4-')[7,2]:QI[5,2]
                  END
               CASE LEN(QI)=8
                  QI=QI[1,2]:'.':QI[3,2]:'.':QI[5,4]
               CASE 1
                  CALL ELINE('Use one of the following formats: MMDD or MMDDYY or MMDDYYYY.')
                  GOTO 400
            END CASE
      END CASE
      END.DATE=ICONV(QI,'D')
      IF END.DATE='' THEN
         CALL ELINE('Invalid date.')
         GOTO 400
      END
      END.SAVE=END.DATE'D4-'
      CRT @(22,10):END.SAVE:@(-4)

      IF BEG.DATE>END.DATE THEN
         CALL ELINE('Ending date is before beginning date. Please correct.')
         GOTO 400
      END

* Get transportation mode

500:  MASK=TRANS.MODE:STR(MASK.CHAR,4-LEN(TRANS.MODE)):@(-4)
      HELP='Enter Transportation Mode. [L]ist Modes [ALL] [X]=Back [EX]it'
      CALL GEN.IN(22,12,MASK,'',Q,0,4,'','',2,22,12,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            GOSUB DISPLAY.SCREEN
            GOTO 400
         CASE QI=''
            IF TRANS.MODE#'' THEN QI=TRANS.MODE ELSE GOTO 500
         CASE QI='ALL'
            NULL
         CASE QI='L'
            HED=CO.NAME:' Transportation Modes':"'L'"
            HED:=STR(MASK.CHAR,40)
            EXECUTE 'SORT FB.TRANSPORT 1 2 HEADING "':HED:'" (H'
            CALL ELINE('')
            GOSUB DISPLAY.SCREEN
            GOTO 500
      END CASE
      TRANS.MODE=QI
      IF TRANS.MODE='ALL' THEN
         TRANS.DESCRIPTION='ALL MODES'
      END ELSE
         READ TRANSPORT.REC FROM F.TRANSPORT,TRANS.MODE THEN
            TRANS.DESCRIPTION=TRANSPORT.REC<1>
         END ELSE
            CALL ELINE('Transportation Mode ':TRANS.MODE:' not on file.')
            GOTO 500
         END
      END
      TRANS.SAVE=TRANS.MODE:' ':TRANS.DESCRIPTION
      CRT @(22,12):TRANS.SAVE:@(-4)

550: *** Include/Exclude Pilot Freight (01727)

      MASK=SELECT.PILOT:STR(MASK.CHAR,4-LEN(SELECT.PILOT)):@(-4)
      HELP='Include Pilot Freight Services [I/E] [X]=Back [EX]it'
      CALL GEN.IN(22,14,MASK,'',Q,0,4,'','',2,22,14,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            GOSUB DISPLAY.SCREEN
            GOTO 500
         CASE QI=''
            IF SELECT.PILOT#'' THEN QI=SELECT.PILOT ELSE GOTO 550
         CASE QI='I'
         CASE QI='E'
         CASE 1
            GOTO 550
      END CASE
      SELECT.PILOT=QI
      CRT @(22,14):SELECT.PILOT:@(-4)

600: *** Get States or ALL

      MASK=SELECT.STATES:STR(MASK.CHAR,79-LEN(SELECT.STATES)):@(-4)
      HELP='Enter the States you want separated by a space, [ALL] [X]=Back [EX]it'
      CALL GEN.IN(0,18,MASK,'',Q,0,79,'','',2,0,18,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            GOSUB DISPLAY.SCREEN
*           GOTO 500                     ; * JMK03
            GOTO 550                     ; * JMK03
         CASE QI='ALL'
            SELECT.STATES='ALL'
         CASE QI=''
            IF SELECT.STATES#'' THEN QI=SELECT.STATES ELSE GOTO 600
         CASE QI#''
            QI=TRIM(QI)
            CHECK.STATE=CHANGE(QI,' ',@VM)
            NUM.OF.ITEMS=DCOUNT(CHECK.STATE<1>,@VM)
            FOR I = 1 TO NUM.OF.ITEMS
               LOCATE CHECK.STATE<1,I> IN LEGAL.STATES<1> SETTING POS ELSE
                  CALL ELINE(CHECK.STATE<1,I>:' is not a valid state')
                  SELECT.STATES=QI
                  GOTO 600
               END
            NEXT I
         CASE 1
            GOTO 600
      END CASE
      SELECT.STATES=QI
      CRT @(0,18):SELECT.STATES:@(-4)


* Get final confirmation
1000: ***
      MASK=STR(MASK.CHAR,2)
      HELP='[Y]es [N]o [X]=Back [EX]it'
      CALL GEN.IN(0,20,'Is this information correct? ':MASK,'',Q,0,2,'','',2,29,20,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X' OR QI='N'
            GOSUB DISPLAY.SCREEN
            GOTO 600
         CASE QI='Y'
            NULL
         CASE 1
            GOTO 1000
      END CASE

***********************************************************************************************************************
**GOTO OWEN
*
***   Clear work file
*
      CLEARFILE F.WORK
      FILE.LIST=''
*
***   Select data and start processing
*
      IF CLIENT.ID#'ALL' THEN
         NUM.CLIENTS=1
         COUNTER.1=0 ; PER.1=0
         CLIENT=CLIENT.ID
         GOTO SELECT.BILLS
      END
      CRT @(0,12):@(-3):                 ; * JMK03
      TEXT='Selecting Clients...'
      CRT @(0,12):TEXT
*     EXECUTE "SELECT VOC 'FB.BILLS.HIST' *A7" RTNLIST CLIENT.LIST CAPTURING OUTPUT
      IF USER.NAME='OWEN' AND DATE()=16018 THEN
         STMT='SSELECT CLIENTS WITH 30 = "A" AND WITH 93 = "Y" AND WITH 0 # "99]" AND WITH 115 = "00080""00103"'
      END ELSE
         STMT='SSELECT CLIENTS WITH 30 = "A" AND WITH 93 = "Y" AND WITH 0 # "99]"'
      END

      EXECUTE STMT RTNLIST CLIENT.LIST CAPTURING OUTPUT
      NUM.CLIENTS=@SELECTED
      TEXT:=NUM.CLIENTS:' Selected'
      CRT @(0,12):TEXT
      IF NUM.CLIENTS=0 THEN
         CALL ELINE('No clients on file with these criteria.')
         GOTO THE.END
      END
      COUNTER.1=0 ; PER.1=0
      TAB=CHAR(9)
      BAD.STATES='State':TAB:'Client':TAB:'PRO ID'
      LOOP
         READNEXT CLIENT FROM CLIENT.LIST ELSE CLIENT='DATA.ENTRY.IS.FINISHED'
      UNTIL CLIENT='DATA.ENTRY.IS.FINISHED' DO
SELECT.BILLS:
         COUNTER.1=COUNTER.1+1
         IF SELECT.PILOT#'I' AND CLIENT='01727' THEN GO SKIP.CLIENT    ; * JMK03
         READ DCLIENTS FROM F.CLIENTS,CLIENT ELSE GO SKIP.CLIENT
         CLIENT.NAME=DCLIENTS<2>
         CLIENT.ADDR=DCLIENTS<3,1>
         IF DCLIENTS<3,2>#'' THEN CLIENT.ADDR:=" ":DCLIENTS<3,2>
         CLIENT.CITY=DCLIENTS<4>
         CLIENT.STATE=DCLIENTS<5>
         CLIENT.ZIP=DCLIENTS<6>
IF @TTY # 'phantom' THEN    ;* GRB06
         CRT @(0,15):CLIENT:' ':CLIENT.NAME:' #':COUNTER.1:' - Selecting Freight Bills':@(-4):
END
         CALL PROG.BAR(17,COUNTER.1,NUM.CLIENTS,PER.1)
         IF CLIENT.ID='ALL' THEN
            IF CLIENT='FB.BILLS.HIST' OR CLIENT[1,2]='99' OR CLIENT='00000' THEN
               GOTO SKIP.CLIENT
            END
         END
         IF CLIENT[1,2]='99' THEN GO SKIP.CLIENT
         IF DCLIENTS<30>#'A' THEN GO SKIP.CLIENT
         IF DCLIENTS<82>='' THEN GO SKIP.CLIENT    ; * JMK01
         IF DCLIENTS<82> < BEG.DATE THEN GO SKIP.CLIENT      ; * JMK01
         OPEN '','FB.BILLS.HIST,':CLIENT TO F.BILLS ELSE GO SKIP.CLIENT
         OPEN '','VEND.CUST,':CLIENT TO F.VC ELSE GO SKIP.CLIENT
         DIVS=1
         OPEN '','DIVISION.CODES,':CLIENT TO F.DIV ELSE DIVS=0

         STMT='SSELECT FB.PROC.DATE.XREF,':CLIENT:' WITH DATE >= "':OCONV(BEG.DATE,'D2/'):'" AND WITH DATE <= "':OCONV(END.DATE,'D2/'):'"'   ; * JMK01
         EXECUTE STMT RTNLIST CAPTURING MSG ; * JCW01
         IF @SELECTED > 0 THEN ; * JCW01
            STMT='QSELECT FB.PROC.DATE.XREF,':CLIENT         ; * JMK01
            EXECUTE STMT PASSLIST RTNLIST CAPTURING RESULTS  ; * JMK01
         END ELSE ; * JCW01
            GOTO SKIP.CLIENT ; * JCW01
         END ; * JCW01

         STMT='SELECT FB.BILLS.HIST,':CLIENT
         STMT:=' WITH VERSION = "0"'     ; * Exclude duplicates
         STMT:=' AND WITH 2 = "I"'       ; * Inbound Only
         STMT:=' AND WITH 39 # "R"'      ; * Exclude rejects
         IF TRANS.MODE#'ALL' THEN
            STMT:=' AND WITH 21 = "':TRANS.MODE:'"'          ; * Use Transportation mode
         END
*        STMT:=' SAVING UNIQUE @ID'      ; * JMK02
         EXECUTE STMT PASSLIST RTNLIST BILLS.LIST CAPTURING OUTPUT
         NUM.BILLS=@SELECTED
         IF NUM.BILLS=0 THEN
            IF CLIENT.ID='ALL' THEN
               GOTO SKIP.CLIENT
            END ELSE
               CALL ELINE('No bills on file with these criteria.')
               GOTO THE.END
            END
         END
         CRT @(0,18):CLIENT:' ':CLIENT.NAME:' - Processing ':NUM.BILLS:' Freight Bills':@(-4):
         COUNTER.2=0 ; PER.2=0
         LOOP
            READNEXT PRO.ID FROM BILLS.LIST ELSE PRO.ID='DATA.ENTRY.IS.FINISHED'
         UNTIL PRO.ID='DATA.ENTRY.IS.FINISHED' DO
            COUNTER.2=COUNTER.2+1
            CALL PROG.BAR(20,COUNTER.2,NUM.BILLS,PER.2)
            PRO=FIELD(PRO.ID,'*',2)
            LPRO=LEN(PRO)
            LAST.TWO=PRO[LPRO-1,2]
            READ BILL.REC FROM F.BILLS,PRO.ID THEN
               IOT=BILL.REC<2>
               DIV=BILL.REC<9>
               IF DIV='' THEN
                  DIV='NODIV'
                  DIV.CITY=''
                  DIV.STATE=''
                  DIV.ZIP=''
               END ELSE
                  IF DIVS THEN
                     READ DDIV FROM F.DIV,DIV ELSE DDIV=''
                  END ELSE DDIV=''
                  DIV.ZIP=DDIV<1>
                  IF DIV.ZIP='' OR DIV.ZIP='99999' THEN
                     DIV.CITY=''
                     DIV.STATE=''
                  END ELSE
                     READ CITY.STATE FROM F.ZIPS,DIV.ZIP ELSE CITY.STATE=''
                     DIV.CITY=CITY.STATE<1>
                     DIV.STATE=CITY.STATE<2>
                  END
               END
               VC.ID=BILL.REC<17>
               IF VC.ID MATCHES '5N' THEN
                  READ DVC FROM F.VC,VC.ID ELSE DVC=''
                  VC.NAME=DVC<1>
                  VC.ADD=DVC<4,1>
                  IF DVC<3,2>#'' THEN VC.ADD:=" ":DVC<3,2>
                  VC.CITY=DVC<5>
                  VC.STATE=DVC<6>
                  VC.ZIP=DVC<7>
               END ELSE
                  VC.NAME=VC.ID
                  VC.ADD=''
                  BEGIN CASE
                     CASE IOT = 'I' OR IOT = 'T'
                        VC.ZIP =BILL.REC< 3>       ; * Orig Zip
                        VC.CITY =BILL.REC<27>      ; * Orig City
                        VC.STATE=BILL.REC<25>      ; * Orig State
                     CASE IOT = 'O'
                        VC.ZIP =BILL.REC< 4>       ; * Dest Zip
                        VC.CITY =BILL.REC<28>      ; * Dest City
                        VC.STATE=BILL.REC<26>      ; * Dest State
                  END CASE
               END
               VC.NAME=TRIM(VC.NAME)
               IF VC.NAME='' THEN GO SKIP.BILL     ; * No need to keep not a valid record
               IF DATE()=12699 AND USER.NAME='OWEN' AND OCONV(VC.NAME,'MCU')[1,1]#'W' THEN GO SKIP.BILL
               VC.STATE=TRIM(OCONV(VC.STATE,'MCU'))
               IF SELECT.STATES#'ALL' THEN
                  LOCATE VC.STATE IN CHECK.STATE<1> SETTING POS ELSE
                     GO SKIP.BILL
                  END
               END ELSE
*DF                IF LEN(VC.STATE)#'2' THEN
                  LOCATE VC.STATE IN LEGAL.STATES<1> SETTING POS ELSE
                     BAD.STATES<-1>=VC.STATE:TAB:CLIENT:TAB:PRO.ID
                     GO SKIP.BILL        ; * Invalid State
                  END
               END
               OFFSET=0
               OFFSET=INDEX('IOT',IOT,1)

** Update Work records
*
*NPR01
               LEAD.SLSMAN = DCLIENTS<114>
               READV LEAD.SLSMAN.NAME FROM F.SLSMAN,LEAD.SLSMAN,1 ELSE LEAD.SLSMAN.NAME=''
               SECOND.SLSMAN = DCLIENTS<115>
               READV SECOND.SLSMAN.NAME FROM F.SLSMAN,SECOND.SLSMAN,1 ELSE SECOND.SLSMAN.NAME=''
*NPR01
*
               WORK.ID=CLIENT:"*":DIV:"*":VC.ID
               READ DWORK FROM F.WORK,WORK.ID ELSE DWORK=''
               DWORK<1>=CLIENT
               DWORK<2>=CLIENT.NAME
               DWORK<3>=DIV
               DWORK<4>=TRIM(DIV.CITY)
               DWORK<5>=TRIM(DIV.STATE)
               DWORK<6>=TRIM(DIV.ZIP)
               DWORK<7>=TRIM(VC.NAME)
               DWORK<8>=TRIM(VC.ADD)
               DWORK<9>=TRIM(VC.CITY)
               DWORK<10>=VC.STATE
               DWORK<11>=VC.ZIP
               DWORK<36>=LEAD.SLSMAN          ;*NPR01
               DWORK<37>=LEAD.SLSMAN.NAME     ;*NPR01
               DWORK<38>=SECOND.SLSMAN        ;*NPR01
               DWORK<39>=SECOND.SLSMAN.NAME   ;*NPR01
*
               START.ATT=12 ; GOSUB UPDATE.WORK.REC
*               START.ATT=12+(OFFSET*6) ; GOSUB UPDATE.WORK.REC
               WRITE DWORK ON F.WORK,WORK.ID


            END                          ; * READ BILL.REC FROM F.BILLS,PRO.ID
SKIP.BILL: ***
         REPEAT

         IF CLIENT.ID#'ALL' THEN GOTO READ.WORK.FILE
SKIP.CLIENT: ***
      REPEAT
      IF USER.NAME='DAVID' THEN CALL ELINE('PRESS BREAK')
      IF BAD.STATES<2>#'' THEN
         FILE.NAME = 'BAD-STATES.XLS'
         FILE.LIST<-1>=TEXT
         WRITE BAD.STATES ON F.BILLDATA,FILE.NAME ELSE
         END
      END

*
***   Read work file and print data to an output file
*
OWEN: ***
READ.WORK.FILE:
*CRT @(0,23):"PRESS BREAK" ; INPUT NUL
      IF SELECT.STATES='ALL' THEN        ; * JMK01
         STATE='ALL'                     ; * JMK01
         GOSUB SETUP.HEADINGS            ; * JMK01
         ALL.STATES=DA                   ; * JMK01
      END                                ; * JMK01

      OLD.STATE='FIRST.STATE'
      NUM.BILLS=0
      STMT='SSELECT FBWORK':CH.NUM:' BY STATE BY VC.NAME'
      EXECUTE STMT PASSLIST CAPTURING OUTPUT
      LOOP
         READNEXT WORK.ID ELSE WORK.ID='DATA.ENTRY.IS.FINISHED'
      UNTIL WORK.ID='DATA.ENTRY.IS.FINISHED' DO
         READ WORK.REC FROM F.WORK,WORK.ID THEN
            STATE=WORK.REC<10>
            IF USER.NAME='OWEN' AND DATE()=16018 THEN STATE='ALL'
            IF STATE='' THEN STATE='BLANK'
            IF STATE#OLD.STATE THEN
               IF OLD.STATE='FIRST.STATE' THEN
                  GOSUB SETUP.HEADINGS   ; * Just setup Don't Write
                  OLD.STATE=STATE
               END ELSE
                  IF DA#'' THEN
                     DA=CHANGE(DA,@VM,TAB)
                     FILE.NAME='PROSPECTS-':OLD.STATE:'.XLS'
                     WRITE DA ON F.BILLDATA,FILE.NAME ELSE
                        CALL ELINE("Close ":FILE.NAME:" then press [ENTER]")
                        WRITE DA ON F.BILLDATA,FILE.NAME ELSE
                           CALL ELINE('File NOT Written because it is open in excel....Aborting')
                           ABORT
                        END
                     END
                     TEXT=FILE.NAME:' written to BILLDATA/':USER.NAME:' folder.'
                     FILE.LIST<-1>=TEXT
                     CRT @(0,23):TEXT:
                     OLD.STATE=STATE
                     GOSUB SETUP.HEADINGS
                  END
               END
            END
            LINE=''
** Client Information ***
            LINE<1, 1>=WORK.REC< 1>      ; *CLIENT
            LINE<1, 2>=WORK.REC< 2>      ; *CLIENT.NAME
            LINE<1, 3>=WORK.REC<36>      ; * LEAD.SLSMAN          ;*NPR01
            LINE<1, 4>=WORK.REC<37>      ; * LEAD.SLSMAN.NAME     ;*NPR01
            LINE<1, 5>=WORK.REC<38>      ; * SECOND.SLSMAN        ;*NPR01
            LINE<1, 6>=WORK.REC<39>      ; * SECOND.SLSMAN.NAME   ;*NPR01
            LINE<1, 7>=WORK.REC< 3>      ; *CLIENT.DIVISION
            LINE<1, 8>=WORK.REC< 4>      ; *DIVISION City
            LINE<1, 9>=WORK.REC< 5>      ; *DIVISION State
            LINE<1,10>=WORK.REC< 6>      ; *DIVISION Zip
** Customer/Vendor Information ***
            LINE<1,11>=WORK.REC< 7>      ; *Vend Name
            LINE<1,12>=WORK.REC< 8>      ; *Vend Add
            LINE<1,13>=WORK.REC< 9>      ; *Vend City
            LINE<1,14>=WORK.REC<10>      ; *Vend State
            LINE<1,15>=WORK.REC<11>      ; *Vend Zip
** Freight Bill Information ***
            LINE<1,16>=WORK.REC<12>'D2/'           ; * Total Most Recent Ship Date
            LINE<1,17>=WORK.REC<13>'D2/'           ; * Total Oldest Ship Date
            LINE<1,18>=WORK.REC<14>      ; * Total Qty of Bills
            LINE<1,19>=WORK.REC<15>      ; * Total Total Weight Shipped
            LINE<1,20>=WORK.REC<16>'R26'           ; * Total Total Freight Amount
            LINE<1,21>=WORK.REC<17>'R26'           ; * Total Total Overcharges

*         LINE<1,18>=WORK.REC<18>'D2/' ; * Inbound Most Recent Ship Date
*         LINE<1,19>=WORK.REC<19>'D2/' ; * Inbound Oldest Ship Date
*         LINE<1,20>=WORK.REC<20>      ; * Inbound Qty of Bills
*         LINE<1,21>=WORK.REC<21>      ; * Inbound Total Weight Shipped
*         LINE<1,22>=WORK.REC<22>'R26' ; * Inbound Total Freight Amount
*         LINE<1,23>=WORK.REC<23>'R26' ; * Inbound Total Overcharges

*         LINE<1,24>=WORK.REC<24>'D2/' ; * Outbound Most Recent Ship Date
*         LINE<1,25>=WORK.REC<25>'D2/' ; * Outbound Oldest Ship Date
*         LINE<1,26>=WORK.REC<26>      ; * Outbound Qty of Bills
*         LINE<1,27>=WORK.REC<27>      ; * Outbound Total Weight Shipped
*         LINE<1,28>=WORK.REC<28>'R26' ; * Outbound Total Freight Amount
*         LINE<1,29>=WORK.REC<29>'R26' ; * Outbound Total Overcharges

*         LINE<1,30>=WORK.REC<30>'D2/' ; * Third Party Most Recent Ship Date
*         LINE<1,31>=WORK.REC<31>'D2/' ; * Third Party Oldest Ship Date
*         LINE<1,32>=WORK.REC<32>      ; * Third Party Qty of Bills
*         LINE<1,33>=WORK.REC<33>      ; * Third Party Total Weight Shipped
*         LINE<1,34>=WORK.REC<34>'R26' ; * Third Party Total Freight Amount
*         LINE<1,35>=WORK.REC<35>'R26' ; * Third Party Total Overcharges
*
            DA<-1>=LINE
            IF SELECT.STATES='ALL' THEN  ; * JMK01
               ALL.STATES<-1>=LINE       ; * JMK01
            END                          ; * JMK01
         END                             ; * READ WORK.REC FROM F.WORK,WORK.ID
      REPEAT
      IF DA#'' THEN
         DA=CHANGE(DA,@VM,TAB)
         FILE.NAME='PROSPECTS-':OLD.STATE:'.XLS'
         WRITE DA ON F.BILLDATA,FILE.NAME ELSE
            CALL ELINE("Close ":FILE.NAME:" then press [ENTER]")
            WRITE DA ON F.BILLDATA,FILE.NAME ELSE
               CALL ELINE('File NOT Written because it is open in excel....Aborting')
               ABORT
            END
         END
         TEXT=FILE.NAME:' written to BILLDATA/':USER.NAME:' folder.'
         FILE.LIST<-1>=TEXT
         CRT @(0,23):TEXT:
      END
      IF SELECT.STATES='ALL' AND ALL.STATES<2>#'' THEN       ; * JMK01
         ALL.STATES=CHANGE(ALL.STATES,@VM,TAB)     ; * JMK01
         FILE.NAME='PROSPECTS-ALL.XLS'   ; * JMK01
         WRITE ALL.STATES ON F.BILLDATA,FILE.NAME ELSE       ; * JMK01
            CALL ELINE("Close ":FILE.NAME:" then press [ENTER]")       ; * JMK01
            WRITE ALL.STATES ON F.BILLDATA,FILE.NAME ELSE    ; * JMK01
               CALL ELINE('File NOT Written because it is open in excel....Aborting')      ; * JMK01
               ABORT                     ; * JMK01
            END                          ; * JMK01
         END                             ; * JMK01
         TEXT=FILE.NAME:' written to BILLDATA/':USER.NAME:' folder.'   ; * JMK01
         FILE.LIST<-1>=TEXT              ; * JMK01
         CRT @(0,23):TEXT:               ; * JMK01
      END                                ; * JMK01
      TIMES=DCOUNT(FILE.LIST,@AM)
      CRT @(0,23)
      FOR X = 1 TO TIMES
         CRT FILE.LIST<X>
      NEXT X
      CRT
      CRT "Press [Enter] to continue...":
      INPUT NUL:
      GOTO THE.END                       ; * End of program

***********************************************************************************************************************
SETUP.HEADINGS: ***
      DA=''
      DA<1, 1>=PROG.DESC:' for Client ':CLIENT.SAVE:' with inbound ':TRANS.DESCRIPTION:' freight bills processed between ':BEG.DATE'D4-':' and ':END.DATE'D4-':' for State ':STATE
      DA<2, 1>='This report was run by ':USER.NAME:' on ':DATE()'D4-':' at ':OCONV(TIME(),'MTHS')
      DA<3, 1>=' '
      DA<4, 1>='Client Number'
      DA<4, 2>='Client Name'
      DA<4, 3>='Lead Slsman  #'      ;*NPR01
      DA<4, 4>='Lead Slsman'         ;*NPR01
      DA<4, 5>='Servc Slsman #'      ;*NPR01
      DA<4, 6>='Servc Slsman'        ;*NPR01
      DA<4, 7>='Client Division'
      DA<4, 8>='Division City'
      DA<4, 9>='Division State'
      DA<4,10>='Division Zip'
      DA<4,11>='Vend Name'
      DA<4,12>='Vend Addr'
      DA<4,13>='Vend City'
      DA<4,14>='Vend State'
      DA<4,15>='Vend Zip'
      DA<4,16>='Newest'
      DA<4,17>='Oldest'
      DA<4,18>='Bills'
      DA<4,19>='Weight'
      DA<4,20>='Freight Amt'
      DA<4,21>='Overcharges'
*
*     DA<4,18>='IB Newest'
*     DA<4,19>='IB Oldest'
*     DA<4,20>='IB Bills'
*     DA<4,21>='IB Weight'
*     DA<4,22>='IB Freight Amt'
*     DA<4,23>='IB Overcharges'
*     DA<4,24>='OB Newest'
*     DA<4,25>='OB Oldest'
*     DA<4,26>='OB Bills'
*     DA<4,27>='OB Weight'
*     DA<4,28>='OB Freight Amt'
*     DA<4,29>='OB Overcharges'
*     DA<4,30>='3RD Newest'
*     DA<4,31>='3RD Oldest'
*     DA<4,32>='3RD Bills'
*     DA<4,33>='3RD Weight'
*     DA<4,34>='3RD Freight Amt'
*     DA<4,35>='3RD Overcharges'
      RETURN


***********************************************************************
UPDATE.WORK.REC: ***
* Most Recent Bill
      IF DWORK<START.ATT>='' THEN DWORK<START.ATT>=BILL.REC<1> ELSE
         IF BILL.REC<1> > DWORK<START.ATT> THEN DWORK<START.ATT>=BILL.REC<1>
      END

* Oldest Bill
      START.ATT+=1
      IF DWORK<START.ATT>='' THEN DWORK<START.ATT>=BILL.REC<1> ELSE
         IF BILL.REC<1> < DWORK<START.ATT> THEN DWORK<START.ATT>=BILL.REC<1>
      END

* Bill Count (Only update if not BD or AD)
      START.ATT+=1
      IF LAST.TWO #'AD' AND LAST.TWO#'BD' THEN DWORK<START.ATT>+=1

* Bill Weight (Only update if not BD or AD)
      START.ATT+=1
      IF LAST.TWO #'AD' AND LAST.TWO#'BD' THEN DWORK<START.ATT>+=BILL.REC<6>

* Bill Amouunt
      START.ATT+=1
      DWORK<START.ATT>+=BILL.REC<8>

* Overcharges
      START.ATT+=1
      BEGIN CASE
         CASE LAST.TWO='BD'
            DWORK<START.ATT>-=BILL.REC<8>          ; * Reduce the Paid Back Overcharges
         CASE 1
            DWORK<START.ATT>-=BILL.REC<11>         ; * Overcharge Variance (Stored as Neg in FH)
      END CASE
      RETURN
***********************************************************************
**********************************************************************

DISPLAY.SCREEN: ***
* Display prompts and data on the screen

      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      CRT @(0,2):STR('=',79)

      CRT @(0, 4):'Client Number       :'
      CRT @(0, 6):'Client Status       :'
      CRT @(0, 8):'Beginning Date      :'
      CRT @(0,10):'Ending Date         :'
      CRT @(0,12):'Transportation Mode :'
      CRT @(0,14):'Inc/Exc Pilot Frt   :'          ; * JMK03
*     CRT @(0,14):'Enter States separated by a space or ALL:'          ; * JMK03
      CRT @(0,16):'Enter States separated by a space or ALL:'          ; * JMK03
      CRT

      IF CLIENT.ID THEN
         CRT @(22,4):CLIENT.SAVE
      END
      IF ACTIVE.CLIENT THEN
         CRT @(22,6):ACTIVE.SAVE
      END
      IF BEG.DATE THEN
         CRT @(22,8):BEG.SAVE
      END
      IF END.DATE THEN
         CRT @(22,10):END.SAVE
      END
      IF TRANS.MODE THEN
         CRT @(22,12):TRANS.SAVE
      END
      IF SELECT.PILOT THEN               ; * JMK03
         CRT @(22,14):SELECT.PILOT       ; * JMK03
      END                                ; * JMK03
      IF SELECT.STATES THEN              ; * JMK03
         CRT @(22,18):SELECT.STATES      ; * JMK03
      END                                ; * JMK03
      RETURN

***********************************************************************

THE.END: ***
* End of program
      CRT @(0,23):@(-4):
      END
