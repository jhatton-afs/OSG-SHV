********************************************************************************
*  Program : UPS.FILE.XREF.UPD
*  Author  : NCG Pratt copied from FB.4.20 Written by James M. Barberousse (April 2002)
*  Date    : March 2009
********************************************************************************
*
*      COPYRIGHT (C) 2002 by AFS LOGISTICS, LLC. - ALL RIGHTS RESERVED
*
*  This program is the sole property of AFS Logistics, LLC (AUTOMATED FREIGHT
*  SYSTEMS) and may not be used, copied, or modified without the express
*  written consent of Brian Barker of AFS Logistics, LLC.
********************************************************************************
*
* Includes
$INCLUDE FILE.DEFS INC_ADDS60.CODES; * These require specific PROCOMM settings

* Equates
      EQU REVERSE.BLINK.ON TO TERM.ESC.SEQ:CHAR(TERM.REV+TERM.BLINK)   ; * Reverse Blinking text ON
      EQU REVERSE.ON TO TERM.ESC.SEQ:CHAR(TERM.REV)          ; * Reverse text ON
      EQU REVERSE.OFF TO TERM.ESC.SEQ:CHAR(TERM.NORMAL)      ; * Reverse text OFF
      EQU TRUE TO 1
      EQU FALSE TO 0

* Initialize general program variables
      PROMPT''
      PORT.NUM=SYSTEM(19)
      CALL GET.USER(USER.NAME)
      PROG.NAME='UPS.FILE.XREF.UPD'
      PROG.DESC='UPS XREF File Update'
      PACK.NAME='USER : ':USER.NAME
      CO.NAME='AFS Logistics, LLC'
       UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'UPS.FILE.XREF.UPD' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
       CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
      EDIT.MASK.CHAR='-'
      PLACE.HOLDER='~~ PLACE*HOLDER ~~'

* Display initial screen

      GOSUB INITIALIZE.VARIABLES
      GOSUB DISPLAY.SCREEN

* Restrict access
      BEGIN CASE
         CASE USER.NAME='OWEN'
         CASE USER.NAME='BRIAN'
         CASE USER.NAME='KAREN'
         CASE USER.NAME='DAVID'
         CASE USER.NAME='NRATH'
         CASE USER.NAME='JDARWIN'
         CASE USER.NAME='LCORKERN'
         CASE USER.NAME='NPRATT'
         CASE USER.NAME='MKERBOW'
         CASE 1
            CALL FB.PRINT.CENT(1,80,12,'! Restricted Access Application !')
            CALL FB.PRINT.CENT(1,80,14,'Access Denied')
            CALL ELINE('')
            GOTO THE.END
      END CASE

* Open files

      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         CALL OPEN.ABORT('CLIENTS',PROG.NAME)
      END
*
      OPEN '','UPS.FILE.XREF' TO F.UPS.FILE.XREF ELSE
         CALL OPEN.ABORT('UPS.FILE.XREF',PROG.NAME)
      END

GET.CLIENT:***

      GOSUB INITIALIZE.VARIABLES

      IF CLIENT.ID THEN
         EDIT.MASK=CLIENT.ID'R%5':@(-4)
      END ELSE
         EDIT.MASK=STR(EDIT.MASK.CHAR,5):@(-4)
      END
      HELP='Enter client ID or letters for search. [L]ist of clients [EX]it'
      CALL GEN.IN(26,3,EDIT.MASK,'',Q,0,20,'','',2,26,3,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' AND CLIENT.ID THEN QI=CLIENT.ID
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='L'
            GOSUB DISPLAY.XREF.RECORDS
            GOSUB DISPLAY.SCREEN
            GOTO GET.CLIENT
         CASE NOT(QI MATCHES "0N")
            CALL SOUNDEX.DISPLAY(QI,'CLIENTS','SDX.CLIENTS,NAME','2,3,4',ITEM.LIST)
            BEGIN CASE
               CASE ITEM.LIST=''
                  NULL
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                  NULL
               CASE ITEM.LIST#''
                  IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
            END CASE
            GOSUB DISPLAY.SCREEN
            GOTO GET.CLIENT
         CASE NUM(QI) AND QI#''
            QI=QI'R%5'
            READ CLIENT.REC FROM F.CLIENTS,QI THEN
               CLIENT.ID=QI
               CLIENT.NAME=CLIENT.REC<2>
               CLIENT.CITY=CLIENT.REC<4>
               CLIENT.STATE=CLIENT.REC<5>
            END ELSE
               CALL ELINE('Error: Client ':QI:' is not a valid client.')
               GOTO GET.CLIENT
            END
            READ XREF.REC FROM F.UPS.FILE.XREF,QI ELSE
               CALL ELINE('Error: No UPS Data found for Client ':QI)
               GOTO GET.CLIENT
            END
            IF OLD.XREF.REC = '' THEN OLD.XREF.REC = XREF.REC
         CASE 1
            GOTO GET.CLIENT
      END CASE
      CRT @(26,3):(CLIENT.ID'R%5':' ':CLIENT.NAME:' (':CLIENT.CITY:', ':CLIENT.STATE:')')'L#53':@(-4)

*   Calculate number of items and number of pages and set page number

      NUM.PLANS=DCOUNT(XREF.REC<1>,@VM)
      IF NUM.PLANS=0  THEN
         NUM.PAGES=0
         PAGE.NUMBER=0
      END ELSE
         NUM.PAGES=INT(NUM.PLANS/PAGE.SIZE)
         IF REM(NUM.PLANS,PAGE.SIZE) THEN NUM.PAGES+=1
         PAGE.NUMBER=1
      END
      GOSUB DISPLAY.PAGE

MAIN.START:***

      ADD.ENTRY=''    ;* ????
      EDIT.ENTRY=''   ;* ????

      CRT @(0,22):'Enter Option : --             [B]ack Page [F]orward Page [T]op Page [L]ast Page'
      EDIT.MASK=STR(EDIT.MASK.CHAR,2)
*      HELP='[A]dd [D]elete [E]dit [U]pdate [X]=Back [EX]it'
      HELP='[A]dd [E]dit [U]pdate [X]=Back [EX]it'
      CALL GEN.IN(15,22,EDIT.MASK,'',Q,0,2,'','',2,15,22,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'                    ; * Exit
            GOTO LAST.CHANCE.TO.SAVE
         CASE QI='X'                     ; * Back to client
            IF XREF.REC#OLD.XREF.REC THEN
               YN.MSG='You have unsaved changes. Save before entering new client?'
               YN.MASK=''
               GOSUB ASK.Y.OR.N
               IF YN.ANSWER='Y' THEN
                  CRT @(0,22):'Saving...':@(-3)
                  SLEEP 1
                  GOSUB FAILSAFE.CHECK
                  IF FAILSAFE.OK THEN
                     GOSUB SAVE.XREF.REC
                     GOSUB DISPLAY.PAGE
                  END ELSE
                     GOSUB DISPLAY.PAGE
                     GOTO MAIN.START     ; * X-Back aborted due to failsafe errors
                  END
               END
            END
            CLIENT.ID=''
            GOSUB DISPLAY.SCREEN
            GOTO GET.CLIENT
         CASE QI='U'                     ; * Update (and exit)
            IF XREF.REC#OLD.XREF.REC THEN
               CRT @(0,22):'Saving...':@(-3)
               SLEEP 1
               GOSUB FAILSAFE.CHECK
               IF FAILSAFE.OK THEN
                  GOSUB SAVE.XREF.REC
                  GOSUB DISPLAY.PAGE
               END ELSE
                  GOSUB DISPLAY.PAGE
                  GOTO MAIN.START        ; * Update aborted due to failsafe errors
               END
            END ELSE
               CRT @(0,22):'No changes to save.':@(-3)
               SLEEP 1
            END
*qqq            GOTO THE.END
            GOTO MAIN.START
         CASE QI='L' OR QI='LP'          ; * Last Page
            IF NUM.PAGES#0 AND PAGE.NUMBER#NUM.PAGES THEN
               PAGE.NUMBER=NUM.PAGES
               GOSUB DISPLAY.PAGE
            END ELSE
               CALL ELINE('** LAST PAGE **')
            END
            GOTO MAIN.START
         CASE QI='T' OR QI='TP'          ; * Top Page
            IF NUM.PAGES#0 AND PAGE.NUMBER#1 THEN
               PAGE.NUMBER=1
               GOSUB DISPLAY.PAGE
            END ELSE
               CALL ELINE('** FIRST PAGE **')
            END
            GOTO MAIN.START
         CASE QI='F' OR QI='FP'          ; * Forward a page
            IF NUM.PAGES#0 AND PAGE.NUMBER<NUM.PAGES THEN
               PAGE.NUMBER+=1
               GOSUB DISPLAY.PAGE
            END ELSE
               CALL ELINE('** LAST PAGE **')
            END
            GOTO MAIN.START
         CASE QI='B' OR QI='BP'          ; * Backward a page
            IF NUM.PAGES#0 AND PAGE.NUMBER>1 THEN
               PAGE.NUMBER-=1
               GOSUB DISPLAY.PAGE
            END ELSE
               CALL ELINE('** FIRST PAGE **')
            END
            GOTO MAIN.START
         CASE QI='A'                     ; * Add
            GOSUB ADD.DUMMY.PLAN
            GOSUB DISPLAY.PAGE
            GOTO MAIN.START
         CASE QI='E'                     ; * Edit
            GOSUB EDIT.DUMMY.PLAN
            GOSUB DISPLAY.PAGE
            GOTO MAIN.START
         CASE QI='*'                     ; * Show contents of XREF.REC for debugging purposes
            CRT @(-1)
            CRT @(0,0):XREF.REC
            CALL ELINE('Viewing DEBUG Screen.')
            GOSUB DISPLAY.SCREEN
            GOSUB DISPLAY.PAGE
            GOTO MAIN.START
         CASE 1
            GOTO MAIN.START
      END CASE

********************************************************************************
* Start of internal subroutines
********************************************************************************

DISPLAY.SCREEN:***
      CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      CRT @(0,2):STR('=',79):
      CRT @(0,3):'Client Number :'

      CRT @(0,5):REVERSE.ON:SPACE(79):REVERSE.OFF
      CRT @(0,21):REVERSE.ON:SPACE(79):REVERSE.OFF
      IF CLIENT.ID THEN
         CRT @(26,3):CLIENT.ID'R%5':', ':CLIENT.NAME:' (':CLIENT.CITY:', ':CLIENT.STATE:')'
      END

      CRT @(0,6):'##  Plan    Number  From Date  To  Date   Force Date'
      CRT @(0,7):'--  --------------  ---------  --------   ----------'
      RETURN

********************************************************************************

DISPLAY.PAGE:***
*   This routine displays a given page.
*   Input:  PAGE.NUMBER

      STR.OUT='Page ':PAGE.NUMBER:' of ':NUM.PAGES:' '
      STR.OUT=SPACE(79-LEN(STR.OUT)):STR.OUT
      CRT @(0,5):REVERSE.ON:STR.OUT:REVERSE.OFF
      Y=1                                ; * Screen position
      IF PAGE.NUMBER=0 THEN
         LINE.NUM=1
      END ELSE
         LINE.NUM=(PAGE.NUMBER-1)*PAGE.SIZE+1
      END
      LOOP WHILE Y<=PAGE.SIZE
         BEGIN CASE
            CASE LINE.NUM>NUM.PLANS
               * Print nothing - actually clears line
               SCREEN.LINE=LINE.NUM'R%2'
            CASE XREF.REC<2,LINE.NUM>=''
               SCREEN.LINE=LINE.NUM'R%2'
            CASE 1
               GOSUB FORMAT.LINE
               SCREEN.LINE=FORMATTED.LINE
         END CASE
         CRT @(0,START.Y+Y):SCREEN.LINE:@(-4)      ; * Draw screen line
         Y+=1                            ; * Inc screen position
         LINE.NUM+=1
      REPEAT
      RETURN

********************************************************************************

FORMAT.LINE:***

      FORMATTED.LINE =LINE.NUM'R%2':SPACE(2)
      IF LEN(XREF.REC<1,LINE.NUM>) LT 10 THEN
         FORMATTED.LINE:=XREF.REC<1,LINE.NUM>'R%10':SPACE(6)
      END ELSE
         FORMATTED.LINE:=XREF.REC<1,LINE.NUM>'R#10':SPACE(6)
      END

      FORMATTED.LINE:=XREF.REC<2,LINE.NUM>'D2-':SPACE(3)
      IF XREF.REC<3,LINE.NUM> THEN
         FORMATTED.LINE:=XREF.REC<3,LINE.NUM>'D2-':SPACE(5)
      END ELSE
         FORMATTED.LINE:=' {OPEN} ':SPACE(5)       ; * No end date
      END
      FORMATTED.LINE:=XREF.REC<4,LINE.NUM>'D2-':SPACE(2)

      RETURN

********************************************************************************

ASSIGN.FIELDS.IN:***

      XREF.REC<1,EDIT.NUMBER>=PLAN.NO "R%10"
      XREF.REC<2,EDIT.NUMBER>=BEGIN.DATE
      XREF.REC<3,EDIT.NUMBER>=END.DATE
      XREF.REC<4,EDIT.NUMBER>=FORCE.DATE

      RETURN

********************************************************************************

ASSIGN.FIELDS.OUT:***


      PLAN.NO    = XREF.REC<1,EDIT.NUMBER>
      BEGIN.DATE = XREF.REC<2,EDIT.NUMBER>
      END.DATE   = XREF.REC<3,EDIT.NUMBER>
      FORCE.DATE = XREF.REC<4,EDIT.NUMBER>

      RETURN

********************************************************************************

ADD.DUMMY.PLAN:***

* Make sure last page is being displayed

      ADD.ENTRY='1'

      NP1=FALSE
      NP2=FALSE
      IF PAGE.NUMBER<NUM.PAGES THEN
         PAGE.NUMBER=NUM.PAGES
         NP1=TRUE
      END
      IF REM(NUM.PLANS,PAGE.SIZE)=0 THEN
         * Go to the next clean page for entry
         PAGE.NUMBER+=1
         NUM.PAGES+=1
         NP2=TRUE
      END
      IF NP1 OR NP2 THEN GOSUB DISPLAY.PAGE

      EDIT.NUMBER=NUM.PLANS+1
      IF REM(EDIT.NUMBER,PAGE.SIZE)=0 THEN
         Y.POS=START.Y+PAGE.SIZE
      END ELSE
         Y.POS=START.Y+REM(EDIT.NUMBER,PAGE.SIZE)
      END

      * Make initial data assignments for a new Plan instead of ASSIGN.FIELDS.OUT

      PLAN.NO=''
      BEGIN.DATE=''
      END.DATE=''
      FORCE.DATE=''

      GOSUB PROCESS.DATA

      IF BACK.FLAG THEN
         IF NP2 THEN
            PAGE.NUMBER-=1
            NUM.PAGES-=1
         END
      END ELSE
         NUM.PLANS+=1
         GOSUB ASSIGN.FIELDS.IN
      END
      RETURN

********************************************************************************

EDIT.DUMMY.PLAN:***

      IF EDIT.ENTRY='' THEN
         AFN.MSG='Select Plan to EDIT :'
         AFN.MIN=1
         AFN.MAX=NUM.PLANS
         AFN.MASK=LAST.EDIT.MASK
         GOSUB ASK.FOR.NUM
         IF AFN.ANSWER='X' THEN RETURN
         EDIT.ENTRY=AFN.ANSWER
      END
      EDIT.NUMBER=EDIT.ENTRY
      LAST.EDIT.MASK=EDIT.ENTRY

      PAGE.NUMBER=INT(EDIT.NUMBER/PAGE.SIZE)
      IF PAGE.NUMBER*PAGE.SIZE<EDIT.NUMBER THEN PAGE.NUMBER+=1
      EDIT.Y=EDIT.NUMBER-(PAGE.NUMBER*PAGE.SIZE)+PAGE.SIZE
      GOSUB DISPLAY.PAGE
      Y.POS=START.Y+EDIT.Y

      GOSUB ASSIGN.FIELDS.OUT
      GOSUB PROCESS.DATA
      IF NOT(BACK.FLAG) THEN
         GOSUB ASSIGN.FIELDS.IN
      END
      RETURN

********************************************************************************

DELETE.DUMMY.PLAN:***

      AFN.MSG='Select Plan to DELETE :'
      AFN.MIN=1
      AFN.MAX=NUM.PLANS
      AFN.MASK=LAST.EDIT.MASK
      GOSUB ASK.FOR.NUM
      IF AFN.ANSWER='X' THEN RETURN

      EDIT.NUMBER=AFN.ANSWER
      LAST.EDIT.MASK=AFN.ANSWER
      PAGE.NUMBER=INT(EDIT.NUMBER/PAGE.SIZE)
      IF PAGE.NUMBER*PAGE.SIZE<EDIT.NUMBER THEN PAGE.NUMBER+=1
      EDIT.Y=EDIT.NUMBER-(PAGE.NUMBER*PAGE.SIZE)+PAGE.SIZE
      GOSUB DISPLAY.PAGE

      LINE.NUM=EDIT.NUMBER
      GOSUB FORMAT.LINE
      DELETE.LINE=REVERSE.ON:FORMATTED.LINE:REVERSE.OFF
      CRT @(0,START.Y+EDIT.Y):DELETE.LINE:@(-4)    ; * Draw screen line

      YN.MSG='DELETE this Plan? :'
      YN.MASK='N'
      GOSUB ASK.Y.OR.N
      IF YN.ANSWER='Y' THEN
         DEL XREF.REC<1,EDIT.NUMBER>
         DEL XREF.REC<2,EDIT.NUMBER>
         DEL XREF.REC<3,EDIT.NUMBER>
         DEL XREF.REC<4,EDIT.NUMBER>

         DEL XREF.REC<5,EDIT.NUMBER>    ;* Shipper #
         DEL XREF.REC<6,EDIT.NUMBER>    ;* Last UPS File Date
         DEL XREF.REC<7,EDIT.NUMBER>    ;* Last AFS Import Date
         DEL XREF.REC<8,EDIT.NUMBER>    ;* Last AFS Import User

         NUM.PLANS-=1
         IF NUM.PLANS=0 THEN
            NUM.PAGES=0
            PAGE.NUMBER=0
         END ELSE
            NUM.PAGES=INT(NUM.PLANS/PAGE.SIZE)
            IF REM(NUM.PLANS,PAGE.SIZE) THEN NUM.PAGES+=1
            IF REM(NUM.PLANS,PAGE.SIZE)=0 AND EDIT.NUMBER=NUM.PLANS+1 THEN
               PAGE.NUMBER-=1
            END
         END
         IF LAST.EDIT.MASK>NUM.PLANS THEN LAST.EDIT.MASK=NUM.PLANS
         IF LAST.EDIT.MASK=0 THEN LAST.EDIT.MASK=1
      END
      RETURN

********************************************************************************

PROCESS.DATA:***

      DONE=FALSE
      FIELD.POS=1
      LOOP WHILE NOT(DONE)
         BEGIN CASE
            CASE FIELD.POS=0             ; * Done
               DONE=TRUE
            CASE FIELD.POS=1             ; * Plan #
               GOSUB GET.PLAN.NO
            CASE FIELD.POS=2             ; * Begin Date
               GOSUB GET.BEGIN.DATE
            CASE FIELD.POS=3             ; * End Date
               GOSUB GET.END.DATE
            CASE FIELD.POS=4             ; * Force Date
               GOSUB GET.FORCE.DATE
            CASE FIELD.POS=5             ; * Done
               DONE=TRUE
         END CASE
         IF BACK.FLAG THEN
            FIELD.POS-=1
         END ELSE
            FIELD.POS+=1
         END
      REPEAT
      RETURN

********************************************************************************
*
GET.PLAN.NO:***

      BACK.FLAG=FALSE
      X.POS=4

      CRT @(0,22):'Enter a Plan # .':@(-4)
      IF PLAN.NO THEN
         SAVE.PLAN.NO=PLAN.NO "R%10"
         EDIT.MASK=PLAN.NO "R%10"
      END ELSE
         SAVE.PLAN.NO=SPACE(10)
         EDIT.MASK=STR("_",10)
      END
      EDIT.MASK = STR("_",10)
      HELP='OPTIONS: UPS Plan Number [X]=Back [EX]it'
      CALL GEN.IN(X.POS,Y.POS,EDIT.MASK,'',Q,0,10,'','',2,X.POS,Y.POS,0,QI,HELP,0,23)
      IF QI = '' THEN QI = SAVE.PLAN.NO
* CRT @(0,22):@(-4):@(0,22):" Q = ":Q:"  QI = ":QI ; DEBUG
      QI=OCONV(QI,'MCU')

      BEGIN CASE
         CASE QI='EX'
            GOTO LAST.CHANCE.TO.SAVE
         CASE QI='X'
            BACK.FLAG=TRUE
            CRT @(X.POS,Y.POS):SAVE.PLAN.NO "R%10"
            RETURN
         CASE ADD.ENTRY
            IF QI NE "" THEN PLAN.NO = QI
            CRT @(X.POS,Y.POS):PLAN.NO "R%10"
            RETURN
         CASE QI # ''
*            PLAN.NO=OCONV(SAVE.PLAN.NO, "R%10")   ; * SWB CACHE SYNTAX FIXES
            PLAN.NO=OCONV(SAVE.PLAN.NO, "MR%10")   ; * SWB CACHE SYNTAX FIXES
            CRT @(X.POS,Y.POS):PLAN.NO "R#10"
            RETURN
         CASE 1
            CALL ELINE('Invalid ENTRY. Try again.')
            GOTO GET.PLAN.NO
      END CASE


GET.BEGIN.DATE:***

      BACK.FLAG=FALSE
      X.POS=20
      CRT @(0,22):'Enter a beginning date.':@(-4)
      IF BEGIN.DATE THEN
         SAVE.BEGIN.DATE=BEGIN.DATE'D2-'
         EDIT.MASK=BEGIN.DATE'D2-'
      END ELSE
         SAVE.BEGIN.DATE=SPACE(8)
         EDIT.MASK='MM/DD/YY'
      END
      HELP='OPTIONS: [T]oday [X]=Back [EX]it'
      CALL GEN.IN(X.POS,Y.POS,EDIT.MASK,'DATE',Q,0,8,'','',2,X.POS,Y.POS,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF BEGIN.DATE AND QI='' THEN QI=BEGIN.DATE
      BEGIN CASE
         CASE QI='EX'
            GOTO LAST.CHANCE.TO.SAVE
         CASE QI='X'
            BACK.FLAG=TRUE
            CRT @(X.POS,Y.POS):SAVE.BEGIN.DATE
            RETURN
         CASE QI='T'
            BEGIN.DATE=DATE()
            CRT @(X.POS,Y.POS):BEGIN.DATE'D2-'
            RETURN
         CASE NUM(Q) AND QI#''
            IF Q<DATE() THEN
               CALL ELINE('Warning: This date is in the past.')
            END
            BEGIN.DATE=Q
            CRT @(X.POS,Y.POS):BEGIN.DATE'D2-'
            RETURN
         CASE 1
            CALL ELINE('Invalid date. Try again.')
            GOTO GET.BEGIN.DATE
      END CASE

********************************************************************************

GET.END.DATE:***

      BACK.FLAG=FALSE
      X.POS=31
      CRT @(0,22):'Enter an ending date.':@(-4)
      IF END.DATE THEN
         SAVE.END.DATE=END.DATE'D2-'
         EDIT.MASK=END.DATE'D2-'
      END ELSE
         SAVE.END.DATE=SPACE(8)
         EDIT.MASK='MM/DD/YY'
      END
      HELP='OPTIONS: [T]oday [O]pen Ended Space to remove [X]=Back [EX]it'
      CALL GEN.IN(X.POS,Y.POS,EDIT.MASK,'DATE',Q,0,8,'','',2,X.POS,Y.POS,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF END.DATE AND QI='' THEN QI=END.DATE
      IF NOT(END.DATE) AND QI='' THEN QI='O'
      BEGIN CASE
         CASE QI='EX'
            GOTO LAST.CHANCE.TO.SAVE
         CASE QI='X'
            BACK.FLAG=TRUE
            CRT @(X.POS,Y.POS):SAVE.END.DATE
            RETURN
         CASE QI='O' OR QI = ' '
            END.DATE=''
            CRT @(X.POS,Y.POS):' {OPEN} '
            RETURN
         CASE QI='T'
            END.DATE=DATE()
            CRT @(X.POS,Y.POS):END.DATE'D2-'
            RETURN
         CASE NUM(Q) AND QI#''
            IF Q<BEGIN.DATE THEN
               CALL ELINE('The closing date ':Q'D2-':' is before ':BEGIN.DATE'D2-':'. Try again.')
               GOTO GET.END.DATE
            END
            IF Q<DATE() THEN
               CALL ELINE('Warning: This date is in the past.')
            END
            END.DATE=Q
            CRT @(X.POS,Y.POS):END.DATE'D2-'
            RETURN
         CASE 1
            CALL ELINE('Invalid date. Try again.')
            GOTO GET.END.DATE
      END CASE
*
GET.FORCE.DATE:***  Date to allow processing even if data was not received from UPS for a particular Plan and Period

      IF END.DATE NE "" THEN
         IF END.DATE LT DATE() THEN
            RETURN  ;* No point in entering Force date if Plan no longer active
         END
      END

      BACK.FLAG=FALSE
      X.POS=44
      CRT @(0,22):'Enter an Processing Force date.':@(-4)
      IF FORCE.DATE THEN
         SAVE.FORCE.DATE=FORCE.DATE'D2-'
         EDIT.MASK=FORCE.DATE'D2-'
      END ELSE
         SAVE.FORCE.DATE=SPACE(8)
         EDIT.MASK='MM/DD/YY'
      END
      HELP='OPTIONS: [T]oday RETURN for No Date [X]=Back [EX]it'
      CALL GEN.IN(X.POS,Y.POS,EDIT.MASK,'DATE',Q,0,8,'','',2,X.POS,Y.POS,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN FORCE.DATE = ''
      BEGIN CASE
         CASE QI='EX'
            GOTO LAST.CHANCE.TO.SAVE
         CASE QI='X'
            BACK.FLAG=TRUE
            CRT @(X.POS,Y.POS):SAVE.FORCE.DATE
            RETURN
          CASE QI='T'
            FORCE.DATE=DATE()
            CRT @(X.POS,Y.POS):FORCE.DATE'D2-'
            RETURN
         CASE QI=''
            FORCE.DATE=''
            CRT @(X.POS,Y.POS):FORCE.DATE
            RETURN
         CASE NUM(Q) AND QI#''
            IF Q<BEGIN.DATE THEN
               CALL ELINE('The Force date ':Q'D2-':' is before the from ':BEGIN.DATE'D2-':'. Try again.')
               GOTO GET.FORCE.DATE
            END
            IF END.DATE NE "" THEN
               IF Q LT END.DATE THEN
                  CALL ELINE('The Force date ':Q'D2-':' is before the to date ':END.DATE 'D2-':'. Try again.')
                  GOTO GET.FORCE.DATE
               END
            END
            IF Q<DATE() THEN
               CALL ELINE('Invalid Entry - This date is in the past.')
               GOTO GET.FORCE.DATE
            END
            FORCE.DATE=Q
            CRT @(X.POS,Y.POS):FORCE.DATE'D2-'
            RETURN
         CASE 1
            CALL ELINE('Invalid date. Try again.')
            GOTO GET.FORCE.DATE
      END CASE

SKIP.FORCE.DATE: ***

********************************************************************************

FAILSAFE.CHECK:***
* There are no failsafe conditions to check currently.
      FAILSAFE.OK=TRUE                   ; * Assume no problems and try to find problems
      RETURN

********************************************************************************

SAVE.XREF.REC:***
*
* Write data to file

      IF XREF.REC<1> #'' THEN
         WRITE XREF.REC ON F.UPS.FILE.XREF,CLIENT.ID
         OLD.XREF.REC = XREF.REC
      END

      RETURN

********************************************************************************

DISPLAY.XREF.RECORDS:***
      CRT @(0,0):@(-1)
      EXECUTE 'SORT UPS.FILE.XREF 1 2 3 4'
      CALL ELINE('')
      RETURN

********************************************************************************

ASK.FOR.NUM:***
* A general number prompt routine
* Inputs:
*    AFN.MSG  - message to display
*    AFN.MASK - default value
*    AFN.MIN  - min value allowed
*    AFN.MAX  - max value allowed
* Outputs:
*    AFN.ANSWER

      AFN.ANSWER=''

AFN.1:
      CRT @(0,22):AFN.MSG:@(-4)
      HELP='Entry Options: [':AFN.MIN:'-':AFN.MAX:'] [X]=Back'
      EDIT.MASK=AFN.MASK:' '
      CALL GEN.IN(LEN(AFN.MSG)+1,22,EDIT.MASK,'',Q,0,LEN(AFN.MAX),'','',2,LEN(AFN.MSG)+1,22,0,QI,HELP,0,23)
      QI=TRIM(OCONV(QI,'MCU'))
      IF QI='' THEN QI=TRIM(EDIT.MASK)
      BEGIN CASE
         CASE QI='X'
         CASE QI>=AFN.MIN AND QI<=AFN.MAX
         CASE 1
            CALL ELINE('Invalid entry. Try again.')
            GOTO AFN.1
      END CASE
      AFN.ANSWER=QI
      CRT @(0,22):@(-4):
      CRT @(0,23):@(-4):
      RETURN

*
INITIALIZE.VARIABLES: * Initialize operating variables

      PAGE.SIZE=13                       ; * Number of lines per page
      START.Y=7                          ; * Starting y-position on the screen minus one
      LAST.EDIT.MASK=1                   ; * Last item edited or deleted
      WIDTH=80                           ; * Print width for printing table of includes/excludes
      CTR=INT(WIDTH/2)                   ; * Center of the table width


      CLIENT.ID=''
      CLIENT.NAME=''
      CLIENT.CITY=''
      CLIENT.STATE=''
      PLAN.NO=''
      ADD.ENTRY=''
      EDIT.ENTRY=''

      BEGIN.DATE=''
      END.DATE=''
      FORCE.DATE=''

      XREF.REC=''
      OLD.XREF.REC=''

      RETURN

********************************************************************************

ASK.Y.OR.N:***
* This is a general Yes/No prompt routine.
* Inputs:
*    YN.MSG, YN.MASK
* Outputs:
*    YN.ANSWER

      YN.ANSWER=''

Y.OR.N:
      CRT @(0,22):YN.MSG:@(-4)
      HELP='Entry Options: [Y]es [N]o'
      EDIT.MASK=YN.MASK'L#1'
      CALL GEN.IN(LEN(YN.MSG)+1,22,EDIT.MASK,'',Q,0,1,'','',2,LEN(YN.MSG)+1,22,0,QI,HELP,0,23)
      QI=TRIM(OCONV(QI,'MCU'))
      IF QI='' THEN QI=TRIM(EDIT.MASK)
      BEGIN CASE
         CASE QI='Y'
         CASE QI='N'
         CASE 1
            CALL ELINE('Invalid entry. Try again.')
            GOTO Y.OR.N
      END CASE
      CRT @(0,22):@(-4):
      CRT @(0,23):@(-4):
      YN.ANSWER=QI
      RETURN

********************************************************************************
********************************************************************************

LAST.CHANCE.TO.SAVE:***
      IF XREF.REC#OLD.XREF.REC THEN
         YN.MSG='You have unsaved changes. Save before exiting?'
         YN.MASK=''
         GOSUB ASK.Y.OR.N
         IF YN.ANSWER='Y' THEN
            CRT @(0,22):'Saving...':@(-3)
            SLEEP 1
            GOSUB FAILSAFE.CHECK
            IF FAILSAFE.OK THEN
               GOSUB SAVE.XREF.REC
               GOSUB DISPLAY.PAGE
            END ELSE
               GOSUB DISPLAY.PAGE
               GOTO MAIN.START
            END
         END
      END

********************************************************************************

THE.END:***
      CRT @(0,22):@(-3):
      STOP
