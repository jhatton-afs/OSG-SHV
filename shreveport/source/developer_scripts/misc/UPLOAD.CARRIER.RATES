*
* Expected layout of input file
*
*
      $INCLUDE PROG.ADMIN INC_OPTIONS

      CALL GET.USER(USER)

      FILE.PNTR = "BILLDATA.":USER

      OPEN '',FILE.PNTR TO F.BILLDATA ELSE
         STOP 'CANT OPEN ':FILE.PNTR
      END


      OPEN '','FB.CARR.RATES' TO F.CARR.RATES ELSE STOP 'CANT OPEN FB.CARR.RATES'

      OPEN '','FB.CARR.RATES,INDEX' TO F.CARR.RATES.IDX ELSE STOP 'CANT OPEN FB.CARR.RATES,INDEX'
      OPEN '','FB.CARR.RATES,ZONES' TO F.CARR.RATES.ZONES ELSE STOP 'CANT OPEN FB.CARR.RATES,ZONES'

      OPEN '','FB.TABLES' TO F.TABLES ELSE STOP 'CANT OPEN FB.TABLES'

      OPEN '','ZIPS.CODES' TO F.ZIPS ELSE ERRORS = 'CANT OPEN ZIPS.CODES'

      PROMPT''
      PROG.NAME='UPLOAD.CARRIER.RATES'
      PROG.DESC='Upload Carrier Rates'
      PACK.NAME='Freight Billing'

      UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'UPLOAD.CARRIER.RATES' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
10:

      CRT @(-1)

*SERVICE.LVL.ARRAY     = "FIRST_OVERNIGHT"
*SERVICE.LVL.ARRAY<2>  = "2DAY"
*SERVICE.LVL.ARRAY<3>  = "2DAY_FREIGHT"
*SERVICE.LVL.ARRAY<4>  = "3DAY_FREIGHT"
*SERVICE.LVL.ARRAY<5>  = "EXPRESS_SAVER"
*SERVICE.LVL.ARRAY<6>  = "1DAY_FREIGHT"
*SERVICE.LVL.ARRAY<7>  = "GROUND_COMM"
*SERVICE.LVL.ARRAY<8>  = "HOME_DELIVERY"
*SERVICE.LVL.ARRAY<9>  = "PRIORITY_OVERNIGHT"
*SERVICE.LVL.ARRAY<10> = "STANDARD_OVERNIGHT"

      SERVICE.LVL.ARRAY     = "1STON"
      SERVICE.LVL.ARRAY<2>  = "2DAY"
      SERVICE.LVL.ARRAY<3>  = "2DAY_FR"
      SERVICE.LVL.ARRAY<4>  = "3DAY_FR"
      SERVICE.LVL.ARRAY<5>  = "EXP_SVER"
      SERVICE.LVL.ARRAY<6>  = "1DAY_FR"
      SERVICE.LVL.ARRAY<7>  = "GR_COMM"
      SERVICE.LVL.ARRAY<8>  = "HOME_DEL"
      SERVICE.LVL.ARRAY<9>  = "PRIO_ON"
      SERVICE.LVL.ARRAY<10> = "STD_ON"

      SERVICE.LVL.ARRAY<1,2>  = "FO"
      SERVICE.LVL.ARRAY<2,2>  = "2DAY"
      SERVICE.LVL.ARRAY<3,2>  = "2DAY_FR"
      SERVICE.LVL.ARRAY<4,2>  = "3DAY_FR"
      SERVICE.LVL.ARRAY<5,2>  = "ESP"
      SERVICE.LVL.ARRAY<6,2>  = "1DAY_FR"
      SERVICE.LVL.ARRAY<7,2>  = "Ground"
      SERVICE.LVL.ARRAY<8,2>  = "FHD"
      SERVICE.LVL.ARRAY<9,2>  = "PO"
      SERVICE.LVL.ARRAY<10,2> = "SO"

      SERVICE.LVL.ARRAY<1,3>  = "First Overnight"
      SERVICE.LVL.ARRAY<2,3>  = "2 Day"
      SERVICE.LVL.ARRAY<3,3>  = "2 Day Freight"
      SERVICE.LVL.ARRAY<4,3>  = "3 Day Freight"
      SERVICE.LVL.ARRAY<5,3>  = "Express Saver"
      SERVICE.LVL.ARRAY<6,3>  = "1 Day Freight"
      SERVICE.LVL.ARRAY<7,3>  = "Ground Comm."
      SERVICE.LVL.ARRAY<8,3>  = "Home Delivery"
      SERVICE.LVL.ARRAY<9,3>  = "Priority Overnight"
      SERVICE.LVL.ARRAY<10,3> = "Standard Overnight"

      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,PERIOD,PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)

      EFF.DATE = ""

      GOSUB GET.EFF.DATE

      W.EFF.DATE = O.EFF.DATE
      CONVERT "/" TO "" IN W.EFF.DATE

100:
*
      CRT @(0,01):@(-3):
      CRT @(0,02):STR("=",79)
      CRT @(0,03):'Instructions for use BEFORE Continuing:'
      CRT @(0,05):'Step  1 Open the  .csv file supplied for uploading using Excel'
      CRT @(0,06):'Step  2 Click on Save As button or CLICK File & CLICK Save As, '
      CRT @(0,07):'Step  3 Ensure that you will save to your U:\':USER:'\ Drive)'
      CRT @(0,08):"Step  4 Change Save as type... to ...  Text (Tab Delimited)(*.txt)"
      CRT @(0,09):"Step  5 Name the file 'Prefix'_MMDDYY.txt (Example: 2DAY_":W.EFF.DATE:".txt)"
      CRT @(0,10):'          >>>> See available Prefixes below <<<'
      CRT @(0,11):"        Ignore the 'Not Compatible' messages you receive and click OK, then YES"
      CRT @(0,12):STR("=",79)

      N.SL = DCOUNT(SERVICE.LVL.ARRAY,@AM)
      ROW = 16
      CRT @(0 ,14):"Prefix" "L#10": " ":"Description" "L#20":" Upload"
      CRT @(40,14):"Prefix" "L#10": " ":"Description" "L#20":" Upload"
      CRT @(0 ,15): STR("-",10) : " " : STR("-",20) :" ": STR("-",6)
      CRT @(40,15): STR("-",10) : " " : STR("-",20) :" ": STR("-",6)

      FOR SL.CNT = 1 TO N.SL
         W.SRVC.LVL      = SERVICE.LVL.ARRAY<SL.CNT,2>
         W.SRVC.LVL.DESC = SERVICE.LVL.ARRAY<SL.CNT,3>
         SERVICE.LVL.ARRAY<SL.CNT,4> = "*"
         ID.FILE = W.SRVC.LVL:"_":W.EFF.DATE:".txt"
         READ TST.REC FROM F.BILLDATA, ID.FILE THEN
            GOSUB CHECK.EFF.DATE
            IF I.TST.EFF.DATE = ICONV(O.EFF.DATE,"D2/") THEN
               SERVICE.LVL.ARRAY<SL.CNT,4> = "Y"  ;* Upload file Y/N
            END ELSE
               CALL ELINE("Effective date entered does not match date on file ":ID.FILE:" Call IT")
               STOP
            END
         END
         IF MOD(SL.CNT,2) = 0 THEN
            COL = 40
            CRT @(COL,ROW):W.SRVC.LVL "L#10": " ":W.SRVC.LVL.DESC[1,20] "L#20" : SPACE(4) : SERVICE.LVL.ARRAY<SL.CNT,4>
            ROW += 1
         END ELSE
            COL = 0
            CRT @(COL,ROW):W.SRVC.LVL "L#10": " ":W.SRVC.LVL.DESC[1,20] "L#20" : SPACE(4) : SERVICE.LVL.ARRAY<SL.CNT,4>
         END
      NEXT SL.CNT

      ST.ROW = 15
      FOR SL.CNT = 1 TO N.SL
         HELP='Upload the file Y/N  [X] Back or [EX]it'
         UPLOAD.IT = SERVICE.LVL.ARRAY<SL.CNT,4>
         IF MOD(SL.CNT,2) = 0 THEN
            COL = 74
            ROW = ST.ROW + INT(SL.CNT/2)
         END ELSE
            COL = 34
            ROW = ST.ROW + INT((SL.CNT/2)+0.5)
         END

         CALL GEN.IN(COL,ROW,'','',Q,0,2,'','',0,COL,ROW,0,QI,HELP,0,23)
         CRT @(COL,ROW) : ICONV(QI,"MCU") :"   "

         QI = ICONV(QI,"MCU")

         BEGIN CASE
            CASE QI = "EX"
               STOP
            CASE QI = "X"
               IF SL.CNT = 1 THEN
                  GOTO 10
               END ELSE
                  SL.CNT -= 2
               END
            CASE QI = "Y" OR QI = "N"
               SERVICE.LVL.ARRAY<SL.CNT,4> = QI
            CASE QI = ""
               QI = SERVICE.LVL.ARRAY<SL.CNT,4>
            CASE 1
               CALL ELINE("Invalid response")
         END CASE
         CRT @(COL,ROW) : ICONV(QI,"MCU") :"   "
      NEXT SL.CNT

ASK.YN:
*
      HELP="Proceed with Import.  [YES]=Continue,  EX=Exit."
      CALL GEN.IN(0,22,'Proceed with Import. ---','',Q,0,3,'','',0,-3,22,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX' OR QI = 'X'
            STOP
         CASE QI='YES'
            NULL  ;* Go ahead
         CASE 1
            CALL ELINE("Invalid response")
            GOTO ASK.YN
      END CASE

      N.SL = DCOUNT(SERVICE.LVL.ARRAY,@AM)

      CRT @(-1)

      FOR SL.CNT = 1 TO N.SL ;* Force only STD_ON to be processed again
         IF SERVICE.LVL.ARRAY<SL.CNT,4> = "Y" THEN
            GOSUB SETUP.RATES
         END
      NEXT SL.CNT

      CALL ELINE("") ; STOP

GET.EFF.DATE:

***      CRT @(0,4):'Enter file name      : '
      CRT @(0,4):'Enter Eff. Date      : '

      IF EFF.DATE = "" THEN
         MASK = EFF.DATE
      END ELSE
         MASK = EFF.DATE 'D2/'
      END

      BACK.FLAG=0

      HELP = "Enter the Effective Date for these rates. [T]=Today [X]=Back [EX]=Exit"

      CALL GEN.IN(25,4,MASK,'DATE',Q,0,8,'','',2,25,4,0,QI,HELP,0,23)

      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE EFF.DATE NE "" & QI = ''
            Q = EFF.DATE
         CASE QI = 'T'
            Q = DATE()
         CASE QI = 'X'
            CRT @(25,4):@(-4):
            BACK.FLAG=1
            GOTO 100
         CASE QI = 'EX'
            STOP
         CASE NOT( NUM(Q) )
            CALL ELINE("Invalid date selection")
            GOTO GET.EFF.DATE
      END CASE

      EFF.DATE = Q
      CRT @(25,4):EFF.DATE'D2/' "R#8"

      O.EFF.DATE = EFF.DATE'D2/'
      I.EFF.DATE = ICONV(O.EFF.DATE,"D2/")

      RETURN

SETUP.RATES:

** CRT @(-1)

      START.DET.LN = ''

      ID.SERVICE.LVL = SERVICE.LVL.ARRAY<SL.CNT,1>
*
      W.CARRIER = "00015"

      IF ID.SERVICE.LVL = "GR_COMM" OR ID.SERVICE.LVL = "HOME_DEL" THEN
         W.CARRIER = "01075"
      END

      SERVICE.LEVEL = W.CARRIER:"*":ID.SERVICE.LVL

      ID.SERVICE.LVL1 = W.CARRIER:"*":SERVICE.LVL.ARRAY<SL.CNT,1>

      ID.RATES = SERVICE.LVL.ARRAY<SL.CNT,2>:"_":W.EFF.DATE:".txt"

      RATE.EFF.DATE = ICONV(O.EFF.DATE,"D2/")

      CRT "Processing  ":ID.RATES:" For Effective Date ":OCONV(RATE.EFF.DATE,"D2/") ; CRT

      READ SL.REC FROM F.TABLES, SERVICE.LEVEL ELSE
         SL.REC = ""
         SL.REC<1> = RATE.EFF.DATE        ;* From Date for rates
         SL.REC<2> = ""                   ;* To   Date for rates
      END

      WT.CNT = 1
      RATE.ARRAY = ""
      HDR.LINE   = ""

      READ RATES.REC FROM F.BILLDATA, ID.RATES ELSE
         CALL ELINE("Source file from Carrier ":ID.RATES:" not found call IT")
         RETURN
      END

      CONVERT CHAR(9) TO @VM IN RATES.REC
      CONVERT "$" TO "" IN RATES.REC

*RR CONVERT "-" TO " " IN RATES.REC
*** Drop columns after 9  (Only look at zones 2 through 8) - Also remove '-' values
      N.LINES = DCOUNT(RATES.REC,@AM)
      FOR II = 1 TO N.LINES
         RLINE = TRIM(RATES.REC<II,1>)
         FOR JJ = 2 TO 9
            W.VAL = TRIM(RATES.REC<II,JJ>)
            CONVERT "-" TO " " IN W.VAL
            RLINE<1,JJ> = W.VAL
         NEXT JJ
         RATES.REC<II> = RLINE
      NEXT II

* RR CRT @(-1)

      DONE = 0
*
      N.LINES = DCOUNT(RATES.REC,@AM)
      FOR II = 1 TO N.LINES
         RLINE = TRIM(RATES.REC<II>)
*RR   CRT RLINE

         CONVERT " " TO "" IN RLINE
         TST.LINE = RLINE
         IF II GT 10 THEN

* CALL ELINE("") ;** RR

            IF TST.LINE<1,1> = "" AND TST.LINE<1,3> = "" AND TST.LINE<1,5> = "" THEN
               GOTO SKIPIT
            END
         END

         N.TABS = DCOUNT(RLINE,@VM)

         IF INDEX(RLINE,"Weight",1) OR INDEX(RLINE,"Wgt",1) THEN
            IF HDR.LINE = "" THEN
               HDR.LINE = RLINE
               IF INDEX(RLINE,"Zone",1) OR INDEX(RLINE,"ZONE",1) OR INDEX(RLINE,"Wgt",1) THEN
                  ZONE.LINE = TRIM(RATES.REC<II>)
                  START.DET.LN = II
               END ELSE
                  ZONE.LINE = TRIM(RATES.REC<II + 1>)
                  START.DET.LN = II + 1
               END
               CONVERT " " TO "" IN ZONE.LINE
               RATE.ARRAY<WT.CNT> = ZONE.LINE
               WT.CNT += 1
*RR         START.DET.LN = II + 1

* RR CRT "HL ":HDR.LINE                     ; * RR
* RR CRT "ZL ":ZONE.LINE ; INPUT RR         ; * RR

            END
         END

         IF HDR.LINE NE "" THEN
            WT.LINE = TRIM(RATES.REC<II>)
            CONVERT " " TO "" IN WT.LINE
            IF INDEX(WT.LINE,"Envelope",1) THEN
               WT.LINE<1,1> = "0.5"   ;* FedEx download file may have 'Envelope up to 8 oz.' iso a numeric weight on first rate line
            END
            WGHT = WT.LINE<1,1>
            IF INDEX(WT.LINE,"eight",1) THEN GOTO SKIPIT

            IF WGHT NE "" AND NUM(WGHT) THEN
               CONVERT "$" TO "" IN WT.LINE
               RATE.ARRAY<WT.CNT> = WT.LINE
               WT.CNT += 1
            END
            IF INDEX(WT.LINE,"+",1) OR INDEX(WT.LINE,"-",1) THEN
               CONVERT "$" TO "" IN WT.LINE
               RATE.ARRAY<WT.CNT> = WT.LINE
               WT.CNT += 1
            END
         END
         SKIPIT :
      NEXT II

*RR CALL ELINE("...")                ;* RR

      N.ROWS = DCOUNT(RATE.ARRAY,@AM)

*
      N.COLS = DCOUNT(RATE.ARRAY<1>,@AM)

      ZONE.ARRAY = ""

*** IF ID.SERVICE.LVL = "HOME_DEL" THEN DEBUG

      N.ZONES = DCOUNT(RATE.ARRAY<1>,@VM)
      FOR IZ = 2 TO 8                       ;* ZZ Only up to zone 8 for initial version
         W.ZONE = TRIM(RATE.ARRAY<1,IZ>)
         IF NUM(W.ZONE) AND W.ZONE NE "" THEN
            ZONE.ARRAY<1,-1> = W.ZONE
         END ELSE
            IF W.ZONE NE "" THEN
               W.ZONE = OCONV(W.ZONE,"MCU")
               IF W.ZONE[1,4] = "ZONE" THEN
                  W.ZONE = TRIM(W.ZONE[5,99],"MCU")
               END
               IF NUM(W.ZONE) AND W.ZONE NE "" THEN
                  ZONE.ARRAY<1,-1> = IZ    ;* Zone Number not supplied - Assume eXCEL Column "number"/position is the zone B=2, C=3 ETC.
                  RATE.ARRAY<1,IZ> = IZ    ;* Zone Number not supplied - Assume eXCEL Column "number"/position is the zone B=2, C=3 ETC.
               END
            END
         END
      NEXT IZ


*RR CRT "ZONES ... ":ZONE.ARRAY ; DEBUG ; *RR

      MULTIPLIER = 1

      N.ZONES = DCOUNT(RATE.ARRAY<1>,@VM)

      FOR IZ = 2 TO 8
         NEW.REC = ""
         W.ZONE = TRIM(RATE.ARRAY<1,IZ>)
         FIRST.RATE = RATE.ARRAY<2,IZ>
         LAST.WT = ''
         IF W.ZONE = "" AND NUM(FIRST.RATE) THEN W.ZONE = IZ      ;* Zone Number not supplied - Assume eXCEL Column "number"/position is the zone B=2, C=3 ETC.
         IF NUM(W.ZONE) AND W.ZONE NE "" THEN
            N.WHTS = DCOUNT(RATE.ARRAY,@AM)
            FOR WT = 1 TO N.WHTS
               W.WHGT = TRIM(RATE.ARRAY<WT,1>)
               W.RATE = TRIM(RATE.ARRAY<WT,IZ>) * 1

*IF INDEX(W.WHGT,"+",1) OR INDEX(W.WHGT,"-",1) THEN
               IF NUM(W.WHGT) THEN
                  NULL
*RR   CRT "W.WHGT ":W.WHGT
               END ELSE
*   CRT "W.WHGT ":W.WHGT ; DEBUG
*RR   CRT "RA ":RATE.ARRAY<WT> ; DEBUG
               END
*RR CRT "IZ " : IZ "R#3" : " ZONE ":W.ZONE "R#3" : " WT " : WT "R#3":" Weight = ":ICONV(W.WHGT,"MR2") "R#10":"  Rate = ": ICONV(W.RATE,"MR2") ; DEBUG  ;* RR
               IF W.WHGT = "" OR W.RATE = "0" OR W.WHGT = "Weight" THEN
                  NULL
               END ELSE
                  IF INDEX(W.WHGT,"+",1) OR INDEX(W.WHGT,"-",1) THEN
** CRT "IZ " : IZ "R#3" : " ZONE ":W.ZONE "R#3" : " WT " : WT "R#3":" Weight = ":ICONV(W.WHGT,"MR2") "R#10":"  Rate = ": ICONV(W.RATE,"MR2") ; DEBUG  ;* RR
                     FROM.WHGT = 0
                     CONVERT "," TO "" IN W.WHGT
                     CONVERT \"\ TO \\ IN W.WHGT
                     IF INDEX(W.WHGT,"-",1) THEN FROM.WHGT = FIELD(W.WHGT,"-",1)
                     IF INDEX(W.WHGT,"+",1) THEN FROM.WHGT = FIELD(W.WHGT,"+",1)
                     IF FROM.WHGT = "" OR FROM.WHGT = "0" THEN
                        NULL
                     END ELSE
                        MULTIPLIER = 100
                        N.WTS = DCOUNT(NEW.REC<1>,@VM)
                        IF LAST.WT = '' AND NEW.REC NE '' THEN
                           LAST.WT = NEW.REC<1,N.WTS>
                           NEXT.WT = OCONV(LAST.WT,"MR2") + 1
                        END ELSE
                           NEXT.WT = FROM.WHGT
                        END
                        NEW.REC<1,-1> = ICONV(NEXT.WT,"MR2")               ;* Weight
                        NEW.REC<2,-1> = ICONV(W.RATE*MULTIPLIER,"MR2")     ;* Rate
                     END
                  END ELSE
                     MULTIPLIER = 1
                     NEW.REC<1,-1> = ICONV(W.WHGT,"MR2")                ;* Weight
                     NEW.REC<2,-1> = ICONV(W.RATE*MULTIPLIER,"MR2")     ;* Rate
                  END
* DEBUG
               END

SKIPIT2:
            NEXT WT
         END

         IF NEW.REC NE "" THEN
            N.RATES = DCOUNT(NEW.REC<1>,@VM)
***      ID.NEW = W.CARRIER:"*":ID.SERVICE.LVL:"*":W.ZONE:"*":ICONV("01/05/09","D2/")
            ID.NEW = W.CARRIER:"*":ID.SERVICE.LVL:"*":W.ZONE:"*":ICONV(O.EFF.DATE,"D2/")
            READ TST.REC FROM F.CARR.RATES, ID.NEW THEN
               CALL ELINE("Record ":ID.NEW:" Exists on file .. call IT")
            END ELSE
               WRITE NEW.REC ON F.CARR.RATES, ID.NEW
               UPD.TABLES = 1
            END
         END

      NEXT IZ

*RR CRT @(-1)
*

*
      RETURN

CHECK.EFF.DATE:

* Extract date for checking
*
* In 2009 dates came in the file as
*
*       1) "Effective 01/05/2009"
*   or  2) "Effective January 5, 2009"

      I.TST.EFF.DATE = ''
*
      NX = DCOUNT(TST.REC,@AM)
      FOR LNX = 1 TO 20
         TST.LINE = TRIM(TST.REC<LNX>)
*** IF W.SRVC.LVL = "FHD" AND TST.LINE<1,1> NE "" THEN DEBUG
         IF INDEX(TST.LINE,'Effective',1) then
            TST.EFF.DATE = FIELD(TST.LINE,' ',2,999)
            I.TST.EFF.DATE = ICONV(TST.EFF.DATE,"D2/")
*      CRT TST.LINE:"   >>> ":TST.EFF.DATE:" <<< >>> ":I.TST.EFF.DATE
         END
      NEXT LNX


      RETURN
