************************************************************************
* Program name : INET.FB.ESTIMATOR.V3
* Author       : Nicole Hennick
* Date written : August 23, 2021
* Library      : FBBP
$* COPYRIGHT (C) 2020 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED.
*
* FREIGHT BILLING PACKAGE
*
* Last updated by afs (AFSLOGISTICS\nmeddaugh) at 07:17:59 on 08/23/2021.
*
* Start modification history
* 082321 - NKH00 - ACCU-1074 Tempo Rater
* End modification history
************************************************************************
      * Initialize
      CALL GET.USER.NEW(USER,CH.NUM)
*      UPL.VIN = 'FBBP'
*      UPL.VIN<2> = 'INET.FB.ESTIMATOR.V3'
*      UPL.VIN<3> = USER
*      UPL.VIN<4> = CH.NUM
*      UPL.VOUT = ''                     
*      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)      

      TRANSIT.TIME = ''
      RELEASE.DATE = ''
      ORIG.DIR.FLG = ''
      DEST.DIR.FLG = ''
      COMB.DIR.FLG = ''
      ORIG.TERM.NAME = ''
      ORIG.TERM.CODE = ''
      ORIG.TERM.ADR1 = ''
      ORIG.TERM.ADR2 = ''
      ORIG.TERM.CITY = ''
      ORIG.TERM.ST = ''
      ORIG.TERM.ZIP = ''
      ORIG.TERM.PHONE = ''
      ORIG.TERM.TPHONE = ''
      ORIG.TERM.FAX = ''
      ORIG.TERM.EMAIL = ''
      ORIG.TERM.CNAME = ''
      ORIG.TERM.CTITLE = ''
      DEST.TERM.NAME = ''
      DEST.TERM.CODE = ''
      DEST.TERM.ADR1 = ''
      DEST.TERM.ADR2 = ''
      DEST.TERM.CITY = ''
      DEST.TERM.ST = ''
      DEST.TERM.ZIP = ''
      DEST.TERM.PHONE = ''
      DEST.TERM.TPHONE = ''
      DEST.TERM.FAX = ''
      DEST.TERM.EMAIL = ''
      DEST.TERM.CNAME = ''
      DEST.TERM.CTITLE = ''
      CARR.DATA.DATE = ''
      RW.CARRIERS = ''        ; * NKH06
      RWXL.SMC.ERROR = ''     ; * NKH03
      RW.TARIFF=''            ; * NKH04
      RW.EFF.DATE=''          ; * NKH04      
      * End NKH02
      
* For testing - Used with FBBP TIME.ESTIMATOR      
*OPEN '','NKM.TEMP' TO NKM.TEMP ELSE STOP 201, 'NKM.TEMP'

      CARRIER.EST.ARRAY=''
      CARRIER.COST.ARRAY=''
      SORT.MISROUTE.ARRAY=''             ; * NPR09
      DEST.CITY = ''
      DEST.ST = ''
      ORIG.CITY = ''
      ORIG.ST = ''
      MAX.LTL = ''
      CALL GET.USER.NEW(USER,CH.NUM)
      BEGIN CASE                         ; * JMK67
         CASE USER='DAVID' ; USER.TYPE='PROGRAMMER'          ; * JMK67
         CASE USER='GBINO' ; USER.TYPE='PROGRAMMER'          ; * JMK67
         CASE USER='daviduser' ; USER.TYPE='PROGRAMMER'      ; * JMK67
         CASE USER='NMEDDAUGH' ; USER.TYPE='PROGRAMMER'      ; * NKH02
         CASE 1 ; USER.TYPE='NORMAL'     ; * JMK67
      END CASE                           ; * JMK67
      ACTIVITY.REC=''                    ; * JMK17
      ACTIVITY.ID=''                     ; * JMK17
      VENDOR.STATUS=0                    ; * JMK40
      COMBINE.RATE=0                     ; * JMK37
      LOG.COMM=0                         ; * JMK57
      VENDOR.QUOTE.LIMIT.PERC=0
      NUMBER.LIMIT=0
      VALID.CL=1
      VALID.WT=1
      VALID.ORIG.ZIP=1
      VALID.DEST.ZIP=1

      * Input      
      INPUT CLIENT.ID
      INPUT CARRIER.ID
      INPUT OSHIP.DATE ; OSHIP.DATE = ICONV(OSHIP.DATE,'D')      
      INPUT IOT
      INPUT ORIG.ZIP
      INPUT DEST.ZIP
      INPUT TEMP.CLASSES
      INPUT TEMP.WEIGHTS
      CLIENT.ID=CLIENT.ID'R%5'          
      HOLD.CLIENT.ID=CLIENT.ID          
      IF CARRIER.ID#'ALL' THEN CARRIER.ID=CARRIER.ID'R%5'
      IOT=OCONV(IOT,'MCU')               
      TEMP.CLASSES=CHANGE(TEMP.CLASSES,"|",@VM)
      TEMP.WEIGHTS=CHANGE(TEMP.WEIGHTS,"|",@VM)

      TEMP.STRING2 = "" ; TEMP.STRING3 = ""
      TEMP.STRING4 = ""                  
      TEMP.CLASSES.HOLD = TEMP.CLASSES

      IF INDEX(TEMP.CLASSES,"~",1) THEN
         TEMP.CLASSES.HOLD = TEMP.CLASSES
         N.CL = DCOUNT(TEMP.CLASSES,@VM)
         TEMP.CLASSES = ""
         FOR CL = 1 TO N.CL
            W.CLASS.COMM = TEMP.CLASSES.HOLD<1,CL>
            TEMP.CLASSES<1,CL> = FIELD(W.CLASS.COMM,"~",1)
            W.COMM.STR = FIELD(W.CLASS.COMM,"~",2)
            I.HAZ.TYPE = TRIM(FIELD(W.COMM.STR,";",1))       
            I.HAZ.CLASS = TRIM(FIELD(W.COMM.STR,";",2))      
            I.HAZ.NMFC = TRIM(FIELD(W.COMM.STR,";",3))       
            TEMP.STRING2<1,CL> = OCONV(I.HAZ.TYPE,"MCU")
            TEMP.STRING3<1,CL> = OCONV(I.HAZ.CLASS,"MCU")
            TEMP.STRING4<1,CL> = OCONV(I.HAZ.NMFC,"MCU")     
         NEXT CL
      END

      N.BOL.CLS = DCOUNT(TEMP.CLASSES,@VM)
      IF N.BOL.CLS GT 20 THEN
         NEW.CLASSES = ""
         NEW.WEIGHTS = ""
         FOR BL = 1 TO N.BOL.CLS
            W.CLASS = TEMP.CLASSES<1,BL>
            W.WEIGHT = TEMP.WEIGHTS<1,BL>
            LOCATE W.CLASS IN NEW.CLASSES<1> SETTING CLS.POS THEN
               NEW.WEIGHTS<1,CLS.POS> = NEW.WEIGHTS<1,CLS.POS> + W.WEIGHT
            END ELSE
               NEW.CLASSES=INSERT(NEW.CLASSES,1,CLS.POS,0,W.CLASS)
               NEW.WEIGHTS=INSERT(NEW.WEIGHTS,1,CLS.POS,0,W.WEIGHT)
            END
         NEXT BL
         TEMP.CLASSES = NEW.CLASSES
         TEMP.WEIGHTS = NEW.WEIGHTS
      END

      CLASSES=''
      WEIGHTS=''
      TIMES = DCOUNT(TEMP.CLASSES<1>,@VM)
      FOR X = 1 TO TIMES
         CLASS=TEMP.CLASSES<1,X>
         IF CLASS='92.5' THEN CLASS=92
         IF CLASS='77.5' THEN CLASS=77
         WEIGHT=TEMP.WEIGHTS<1,X>'R0'    ; *** Rounded the weight to the nearest LB OH 07-07-04
         IF WEIGHT+0>0 THEN
            CLASSES<1,-1>=CLASS
            WEIGHTS<1,-1>=WEIGHT
         END
      NEXT X
      ZIP.VOUT = ""
      INPUT TEMP.MISC.CHG.CODES
      TEMP.MISC.CHG.CODES=CHANGE(TEMP.MISC.CHG.CODES,"|",@VM)
      TIMES = DCOUNT(TEMP.MISC.CHG.CODES<1>,@VM)
      MISC.CHG.CODES=''
      ACC.ERROR=''                       ; * JMK27
      FOR X = 1 TO TIMES
         CODE=TEMP.MISC.CHG.CODES<1,X>
         IF CODE='LIFT' THEN CODE = 'L25'          ; * 11-10-03 Owen Per Scott
         IF CODE#'' THEN MISC.CHG.CODES<1,-1>=CODE
      NEXT X
      MISC.CHG.CODES=OCONV(MISC.CHG.CODES,'MCU')

      INPUT USER.NAME
 IF USER.NAME = 'test' THEN
 USER.TYPE = 'NORMAL'
 END
      INPUT USER.PWD
      INPUT QUOTE.PERCENT
*     INPUT MARK.UP.PERCENT              ; * SWB02 * MARK.UP.FACTOR used to be a percentage. It can now be a percentage or a Flat Fee
      INPUT MARK.UP.FACTOR               ; * SWB02

      FLAT.FEE = 0                       ; * SWB02
      IF INDEX(USER.NAME, '~', 1) THEN   ; * SWB02

      *For some unknown reason, when the web side passes the '~F' in the user name to
      *indicate a Flat Fee, the Fee Amount would not come over in the MARK.UP.FACTOR.
      *So, if there is a Flat Fee indicator, use the number after the ~F as the
      *MARK.UP.FACTOR and treat it as a dollar amount in ICONV MD2 form.
         IF FIELD(USER.NAME, '~', 2)[1, 1] = 'F' THEN        ; * SWB02
            FLAT.FEE = 1                 ; * SWB02
            MARK.UP.FACTOR = FIELD(USER.NAME, '~', 2)[2,99]
            IF NUM(MARK.UP.FACTOR) THEN  ; * SWB02
               MARK.UP.FACTOR += 0       ; * SWB02
            END ELSE                     ; * SWB02
               MARK.UP.FACTOR = 0        ; * SWB02
            END                          ; * SWB02
         END                             ; * SWB02
         USER.NAME = FIELD(USER.NAME, '~', 1)      ; * SWB02
      END                                ; * SWB02

      IF CLASSES='' THEN
         PRINT "%ERROR:No freight classification to rate."
         VALID.CL=0
         GO 9000
      END
      IF WEIGHTS='' THEN
         PRINT "%ERROR:No freight weight to rate."
         VALID.WT=0
         GO 9000
      END

      IF QUOTE.PERCENT#'' THEN
         QUOTE.PERCENT=QUOTE.PERCENT*100           ; ** 100% Passed from SQL is 100
      END
      ORIG.ZIP=FIELD(ORIG.ZIP,'-',1)
      DEST.ZIP=FIELD(DEST.ZIP,'-',1)
      CANADIAN=0
      ORG.CAN=0                          ; * JMK51
      DST.CAN=0                          ; * JMK51
      CLIENT.STATUS=''                   ; * JMK62
      IF NOT(NUM(ORIG.ZIP)) THEN
         ORIG.ZIP=CHANGE(ORIG.ZIP,' ','')          ; * JMK76
         ORIG.ZIP=OCONV(ORIG.ZIP,'MCU')
         IF NOT(ORIG.ZIP MATCHES '1A1N1A1N1A1N') THEN
            PRINT "%ERROR:Origin Zip-Canadian Zips must be formatted A1A1A1"
            VALID.ORIG.ZIP=0
            GO 9000
         END
         CANADIAN=1
         ORG.CAN=1                       ; * JMK51
      END ELSE
         IF NOT(ORIG.ZIP MATCHES '5N') THEN
            PRINT "%ERROR:Origin Zip-US Zips must be 5 numeric digits"
            VALID.ORIG.ZIP=0
            GO 9000
         END
      END
      IF NOT(NUM(DEST.ZIP)) THEN
         DEST.ZIP=CHANGE(DEST.ZIP,' ','')          ; * JMK76
         DEST.ZIP=OCONV(DEST.ZIP,'MCU')
         IF NOT(DEST.ZIP MATCHES '1A1N1A1N1A1N') THEN
            PRINT "%ERROR:Destination Zip-Canadian Zips must be formatted A1A1A1"
            VALID.DEST.ZIP=0
            GO 9000
         END
         CANADIAN=1
         DST.CAN=1                       ; * JMK51
      END ELSE
         IF NOT(DEST.ZIP MATCHES '5N') THEN
            PRINT "%ERROR:Destination Zip-US Zips must be 5 numeric digits"
            VALID.DEST.ZIP=0
            GO 9000
         END
      END
      USER.NAME=OCONV(USER.NAME,'MCU')
      USER.PWD=OCONV(USER.PWD,'MCU')
      IF USER.NAME='FANIM91702' THEN     ; * JMK49
         IF ORIG.ZIP#'91702' AND DEST.ZIP#'91702' THEN       ; * JMK49
            PRINT "%ERROR:RATING NOT ALLOWED OUTSIDE ZIP 91702"        ; * JMK49
            GO 9000                      ; * JMK49
         END                             ; * JMK49
      END                                ; * JMK49
      OPEN '','INET.FBESTIMATOR.ACTIVITY' TO F.ACTIVITY ELSE
         PRINT "%ERROR:COULD NOT OPEN ACTIVITY"
         GO 9000
      END
      OPEN '','SCAC.XREF' TO F.SCAC.XREF ELSE      ; * BOH01
         PRINT "%ERROR:COULD NOT OPEN SCAC.XREF"   ; * BOH01
         GO 9000
      END                                ; * BOH01
      IF NOT(NUM(CARRIER.ID)) AND CARRIER.ID#'ALL' THEN      ; * BOH01
         UP.CARRIER.ID=OCONV(CARRIER.ID,'MCU')
         READV SCAC FROM F.SCAC.XREF,UP.CARRIER.ID,1 THEN    ; * BOH01
            CARRIER.ID=SCAC              ; * BOH01
         END                             ; * BOH01
      END                                ; * BOH01

      * Open general files
      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         ERROR = "CANNOT OPEN FILE CLIENTS"
         GO 9000
      END
      OPEN '','CARRIERS' TO F.CARRIERS ELSE
         ERROR = "CANNOT OPEN FILE CARRIERS"
         GO 9000
      END
      OPEN '','FB.BC.FSC' TO F.NFSC ELSE
         ERROR = "CANNOT OPEN FILE FB.BC.FSC"
         GO 9000
      END
      OPEN '','FB.TABLES' TO F.TABLES ELSE
         ERROR = "CANNOT OPEN FILE FB.TABLES"
         GO 9000
      END
      OPEN '','FB.MILEAGE' TO F.MILEAGE ELSE       ; * JMK33
         ERROR = "CANNOT OPEN MILEAGE FILE "       ; * JMK33
         GO 9000                         ; * JMK33
      END                                ; * JMK33
      OPEN 'RWXL.SMC.ERRORS' TO RWXL.SMC.ERRORS ELSE  ; * NKH03
         ERROR = 'CANNOT OPEN RWXL.SMC.ERRORS'        ; * NKH03
         GO 9000                                      ; * NKH03
      END                                             ; * NKH03

      * Open mileage input and output files
      OPEN '','PCIN' TO F.PCIN ELSE
         ERROR = "CANNOT OPEN FILE PCIN"
         GO 9000
      END
      OPEN '','PCOUT' TO F.PCOUT ELSE
         ERROR = "CANNOT OPEN FILE  "
         GO 9000
      END
      OPEN '','ZIPS.CODES' TO F.ZIPS ELSE
         ERROR = "CANNOT OPEN ZIPS FILE "
         GO 9000
      END
      OPEN '','CAN.ZIP.CODES' TO F.CAN.ZIPS ELSE   ; * JMK34
         ERROR = "CANNOT OPEN CAN.ZIP.CODES FILE "           ; * JMK34
         GO 9000                         ; * JMK34
      END                                ; * JMK34
      OPEN '','ZIP.LINE.ITEM' TO F.ZIP.LINE.ITEM ELSE        ; *DRF01
         ERROR = "CANNOT OPEN FILE ZIP.LINE.ITEM"  ; *DRF01
         GO 9000 ;                       ; *DRF01
      END                                ; *DRF01
      
      GOSUB GET.CCXL.INFO                   
DEBUG 
      STOP


*********************************************************************
CALL.TEMPO.RATER:
*********************************************************************           
      B.DATE = OCONV(OSHIP.DATE,'D4/')
      B.MM = FIELD(B.DATE,'/',1,1)
      B.DD = FIELD(B.DATE,'/',2,1)
      B.YYYY = FIELD(B.DATE,'/',3,1)
      TEMPO.BILL.DATE = B.YYYY:'-':B.MM:'-':B.DD:'T00:00:00.000Z'
      
      BEGIN CASE
         CASE IOT = "I"
            IN.OUT = 'INBOUND'
         CASE IOT = 'O'
            IN.OUT = 'OUTBOUND'
         CASE IOT = 'T'
            IN.OUT = 'THIRD_PARTY'
      END CASE
            
      READV ORIG.COUNTRY FROM ZIPS, ORIG.ZIP, 3 ELSE
         IF NUM(ORIG.ZIP[1,1]) THEN
            ORIG.COUNTRY = 'US'
         END ELSE
            ORIG.COUNTRY = 'CAN'
         END
      END
      BEGIN CASE
         CASE ORIG.COUNTRY = 'US'
            ORIG.COUNTRY = 'USA'
         CASE ORIG.COUNTRY = 'CA'
            ORIG.COUNTRY = 'CAN'
         CASE ORIG.COUNTRY = 'MX'
            ORIG.COUNTRY = 'MEX'
      END CASE
      READV DEST.COUNTRY FROM ZIPS, DEST.ZIP, 3 ELSE
         IF NUM(DEST.ZIP[1,1]) THEN
            DEST.COUNTRY = 'US'
         END ELSE
            DEST.COUNTRY = 'CAN'
         END
      END
      BEGIN CASE
         CASE DEST.COUNTRY = 'US'
            DEST.COUNTRY = 'USA'
         CASE DEST.COUNTRY = 'CA'
            DEST.COUNTRY = 'CAN'
         CASE DEST.COUNTRY = 'MX'
            DEST.COUNTRY = 'MEX'
      END CASE

*      IF CARRIER.ID # "" THEN
*         SCAC = CARRIER.REC<12>
*      END ELSE
         SCAC = ''
*      END
      
      * TEMPO.V5
      T.VIN = ''
      T.VIN<1> = CLIENT.ID
      T.VIN<2> = SCAC
      T.VIN<3> = TEMPO.BILL.DATE
      T.VIN<4> = TEMP.WEIGHTS
      T.VIN<5> = ORIG.CITY
      T.VIN<6> = ORIG.COUNTRY
      T.VIN<7> = ORIG.ZIP
      T.VIN<8> = ORIG.STATE
      T.VIN<9> = DEST.CITY
      T.VIN<10> = DEST.COUNTRY
      T.VIN<11> = DEST.ZIP
      T.VIN<12> = DEST.STATE
      T.VIN<13> = IN.OUT
      T.VIN<15> = TEMP.CLASSES  
      T.VIN<16> = MISC.CHG<1>    
*      T.VIN<16> = SCAC
      
      CALL TEMPO.V5(T.VIN,T.VOUT)

      T.SCAC = T.VOUT<1>
      T.MODE = T.VOUT<2> 
      T.GROSS.RATE = T.VOUT<3> 
      T.UNDISCOUNTED.GROSS = T.VOUT<5>
      T.FUEL.AMT = T.VOUT<7> 
      T.TRANSIT.DAYS = T.VOUT<8>
      T.TARIFF.NAME = T.VOUT<9> 
      T.TARIFF.DATE = T.VOUT<10>
      T.DIRECT = T.VOUT<11>           ; * True/False
      T.FUEL.OFFSET = T.VOUT<12>
      T.MILEAGE = T.VOUT<13>
      T.CHARGE.FLOOR = T.VOUT<14>
      T.CHARGE.MIN.DISCOUNT = T.VOUT<15> 
      T.CONTRACT.ID = T.VOUT<16>
      T.EFFECTIVE = T.VOUT<17>
      T.EXPIRATION = T.VOUT<18>
      T.CURRENCY = T.VOUT<19>  
      T.CHARGES = T.VOUT<21> 
      T.RATES = T.VOUT<22>
      T.FAKS = T.VOUT<23>
      T.WEIGHTS = T.VOUT<24>
      T.FREIGHT.CLASSES = T.VOUT<25>
      T.DISCOUNT.PCT.USED = T.VOUT<26>
      T.DISCOUNT.RATE = T.VOUT<27>
      T.ACTUAL.WGT = T.VOUT<28>
      T.DEFICIT.WGT = T.VOUT<29>
      T.BILLED.WGT = T.VOUT<30>
      T.MIN.CHARGE = T.VOUT<31>
      T.TOTAL.CHARGE = T.VOUT<32>
      T.DEFICIT.RATE = T.VOUT<33>
      T.DEFICIT.CHARGE = T.VOUT<34>
      T.DISCOUNT.AMT = T.VOUT<35>
      T.EFF.DATE = T.VOUT<36>  
      T.ACC = T.VOUT<37>
      T.ACC.RATE = T.VOUT<38>  
      T.FUEL.TYPE = T.VOUT<39>
      T.FUEL.VALUE = T.VOUT<40> 
      T.ACC.DESC = T.VOUT<41> 
      T.RATEWARE.MARKUP = T.VOUT<42>    

      RETURN

*********************************************************************
GET.CCXL.INFO: 
*********************************************************************
      IF CARRIER.ID # 'ALL' THEN
         READV CARRIER.SCAC FROM F.CARRIERS, CARRIER.ID, 12 ELSE CARRIER.SCAC = ''
      END ELSE
         CARRIER.SCAC = 'ALL'
      END

      OPEN '','ZIPS' TO ZIPS ELSE
         CALL OPEN.ABORT('ZIPS','INET.FB.ESTIMATOR')
      END

      READV ORIG.COUNTRY FROM ZIPS, ORIG.ZIP, 3 ELSE 
         IF NUM(ORIG.ZIP[1,1]) THEN
            ORIG.COUNTRY = 'US'
         END ELSE
            ORIG.COUNTRY = 'CAN'
         END
      END
      BEGIN CASE
         CASE ORIG.COUNTRY = 'US'
            ORIG.COUNTRY = 'USA'
         CASE ORIG.COUNTRY = 'CA'
            ORIG.COUNTRY = 'CAN'
         CASE ORIG.COUNTRY = 'MX'
            ORIG.COUNTRY = 'MEX'
      END CASE
      READV DEST.COUNTRY FROM ZIPS, DEST.ZIP, 3 ELSE 
         IF NUM(DEST.ZIP[1,1]) THEN
            DEST.COUNTRY = 'US'
         END ELSE
            DEST.COUNTRY = 'CAN'
         END
      END
      BEGIN CASE
         CASE DEST.COUNTRY = 'US'
            DEST.COUNTRY = 'USA'
         CASE DEST.COUNTRY = 'CA'
            DEST.COUNTRY = 'CAN'
         CASE DEST.COUNTRY = 'MX'
            DEST.COUNTRY = 'MEX'
      END CASE         
      CCVIN = ''         
      CCVIN<1> = CARRIER.SCAC
      CCVIN<2> = DEST.COUNTRY
      CCVIN<3> = DEST.ZIP
      CCVIN<4> = ORIG.COUNTRY
      CCVIN<5> = ORIG.ZIP
      CCVIN<6> = CLIENT.ID
      CCVIN<7> = USER.NAME
      CCVIN<8> = PROGFROM  
      CCVOUT = ''

      CALL CCXL.V2(CCVIN,CCVOUT)      

      RETURN     
     
