*******************************************************************************
*  Program : ZIP.LINE.ITEM.SETUP
*  Author  : David R Friend
*  Date    : January 07 2011
*******************************************************************************
*
*      COPYRIGHT (C) 2002 by AFS LOGISTICS, LLC. - ALL RIGHTS RESERVED
*
*  This program is the sole property of AFS Logistics, LLC (AUTOMATED FREIGHT
*  SYSTEMS) and may not be used, copied, or modified without the express
*  written consent of Brian Barker of AFS Logistics, LLC.
*******************************************************************************
* 100214 - JMK01 - SysAid#12531 - Trade High Cost code for NDSC for North Dakota zip codes
* 121015 - GRB01 - SysAid#20754 - Resolve stack overflow about by restructure code
*******************************************************************************
* Includes
      $INCLUDE FILE.DEFS INC_ADDS60.CODES; * These require specific PROCOMM settings

* Equates
      EQU TRUE             TO 1
      EQU FALSE            TO 0

* Initialize general program variables
      PROMPT''
      PORT.NUM=SYSTEM(19)
      CALL GET.USER(USER.NAME)
      PROG.NAME='FB.ZIP.LINE.ITEM.SETUP.NEW'
      PROG.DESC='Zip Line Item Maintenance'
      PACK.NAME='USER : ':USER.NAME
      CO.NAME='AFS Logistics, LLC'
      UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.ZIP.LINE.ITEM.SETUP' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
      EDIT.MASK.CHAR='-'
      PLACE.HOLDER='~~ PLACE*HOLDER ~~'

* Initialize operating variables
      PAGE.SIZE=13;       * Number of lines per page
      START.Y=7;          * Starting y-position on the screen minus one

      ZIPLINE.REC=''
      OLD.ZIP.PAGE=''

      CARRIER.ID=''
      CLIENT.ID=''
      MODE=''
      MODE.DESC=''
      IOT=''
      IOT.DESC=''
      CARRIER.NAME=''
      CARRIER.CITY=''
      CARRIER.STATE=''
      CLIENT.NAME=''
      CLIENT.CITY=''
      CLIENT.STATE=''

* Set access privileges
* 3 Levels of access:
*    0 - Access Denied
*    1 - View Access only
*    2 - Full View/Edit Access
 OPEN '','OPERATOR' TO F.OP ELSE CALL OPEN.ABORT("OPERATOR",PROG.NAME)      ; * GRB01
       	 READV OP.FLG FROM F.OP,USER.NAME,33 ELSE
         OP.FLG = "N"
      END
      IF OP.FLG = "Y" THEN
      USER.ACCESS=2
      END ELSE
    		USER.ACCESS=1
    	END
  ****    BEGIN CASE
  ****       CASE USER.NAME='BRIANP'
   ****         USER.ACCESS=2
  ****       CASE USER.NAME='DAVID'
   ****         USER.ACCESS=2
  ****       CASE USER.NAME='MKERBOW'
  ****          USER.ACCESS=2
   ****      CASE USER.NAME='NKELLY'         ; * JMK01
   ****         USER.ACCESS=2                ; * JMK01
   ****      CASE USER.NAME='SSHAFER'        ; * JMK01
  ****          USER.ACCESS=2                ; * JMK01
  ****       CASE USER.NAME='TBURNS'         ; * JMK01
   ****         USER.ACCESS=2                ; * JMK01
   ****      CASE 1
    ****        USER.ACCESS=1
   ****   END CASE

      GOSUB DISPLAY.SCREEN

* Open files
      OPEN '','CARRIERS' TO F.CARRIERS ELSE
         CALL OPEN.ABORT2('CARRIERS',PROG.NAME)
      END
      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         CALL OPEN.ABORT2('CLIENTS',PROG.NAME)
      END
      OPEN '','FB.TRANSPORT' TO F.TRANSPORT ELSE
         CALL OPEN.ABORT2('FB.TRANSPORT',PROG.NAME)
      END
      OPEN '','FB.TABLES' TO F.TABLES ELSE
         CALL OPEN.ABORT2('FB.TABLES',PROG.NAME)
      END
      READ LI.CODES FROM F.TABLES,'LI.CODES' ELSE
         CALL ELINE('Cannot read Line Item Codes - Get programming')
         STOP
      END
      OPEN '','ZIP.LINE.ITEM' TO F.ZIP.LINE.ITEM ELSE
         CALL OPEN.ABORT2('ZIP.LINE.ITEM',PROG.NAME)
      END
*******************************************************
GET.CARRIER:
*******************************************************
DONE = 0
 LOOP
UNTIL DONE DO
      IF CARRIER.ID#'' THEN
         EDIT.MASK=CARRIER.ID'R%5'
      END ELSE
         EDIT.MASK=STR(EDIT.MASK.CHAR,5)
      END
      HELP='Enter carrier ID  [L]ist existing setups [EX]it'
      CALL GEN.IN(10,3,EDIT.MASK,'',Q,0,20,'','',2,10,3,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' AND CARRIER.ID THEN QI=CARRIER.ID
      BEGIN CASE
         CASE QI='EX'
            DONE = 1
            CONTINUE
            ******************GOTO THE.END                     
         CASE QI='L'
            GOSUB DISPLAY.EXISTING.SETUP
            GOSUB DISPLAY.SCREEN
          ****  GOTO GET.CARRIER                    
            CONTINUE
         CASE NOT(QI MATCHES "0N")
            CALL SOUNDEX.DISPLAY(QI,'CARRIERS','SDX.CARRIER,NAME','1,2,3,4',ITEM.LIST)
            BEGIN CASE
               CASE ITEM.LIST=''
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
               CASE ITEM.LIST#''
                  IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
            END CASE
            GOSUB DISPLAY.SCREEN
           **** GOTO GET.CARRIER                 
           CONTINUE
         CASE NUM(QI) AND QI#''
            QI=QI'R%5'
            READ CARRIER.REC FROM F.CARRIERS,QI THEN
               CARRIER.ID=QI
               CARRIER.NAME=CARRIER.REC<1>
               CARRIER.CITY=CARRIER.REC<3>
               CARRIER.STATE=CARRIER.REC<4>
               CARRIER.TXT=CARRIER.ID'R%5':' ':CARRIER.NAME:' (':CARRIER.CITY:', ':CARRIER.STATE:')'
               CRT @(10,3):CARRIER.TXT'L#45'
               GOSUB GET.CLIENT
            END ELSE
               CALL ELINE('ERROR - Carrier ':QI:' is not a valid carrier.')
               ***** GOTO GET.CARRIER             
               CONTINUE
            END
         CASE 1
             ***** GOTO GET.CARRIER          
          CONTINUE
      END CASE
      REPEAT
   **   CARRIER.TXT=CARRIER.ID'R%5':' ':CARRIER.NAME:' (':CARRIER.CITY:', ':CARRIER.STATE:')'
   ***   CRT @(10,3):CARRIER.TXT'L#45'
    
********************************************************************************
THE.END: ***
********************************************************************************
      CRT @(0,22):@(-3):
      STOP
    **  END; * End program
**************************************************************      
GET.CLIENT: ***
**************************************************************
    DONE = 0
      LOOP
      IF CLIENT.ID#'' AND CLIENT.ID#'ALL' THEN
         EDIT.MASK=CLIENT.ID'R%5'
      END ELSE
         IF CLIENT.ID#'ALL' THEN
            EDIT.MASK=STR(EDIT.MASK.CHAR,5)
         END ELSE
            EDIT.MASK='ALL  '
         END
      END
      HELP='Enter client ID or [ALL]. [L]ist existing carrier setups [EX]it'
      CALL GEN.IN(10,4,EDIT.MASK,'',Q,0,20,'','',2,10,4,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' AND CLIENT.ID THEN QI=CLIENT.ID
      IF QI='' THEN QI='ALL'
      BEGIN CASE
         CASE QI='EX'
            ******GOTO THE.END                 
         DONE = 1
         RETURN                        ;* return to carrier and die
         CASE QI='X'
            CRT @(10,4):SPACE(45)
            *****GOTO GET.CARRIER                  
            RETURN                ; * to carrier
         CASE QI='L'
            GOSUB DISPLAY.EXISTING.SETUP
            GOSUB DISPLAY.SCREEN
            ******GOTO GET.CLIENT                
            CONTINUE
         CASE QI='ALL'
            CLIENT.ID=QI
            CLIENT.TXT=CLIENT.ID:' - All Clients'
            CRT @(10,4):CLIENT.TXT'L#45'
            GOSUB GET.MODE
            RETURN
         CASE NOT(QI MATCHES "0N")
            CALL SOUNDEX.DISPLAY(QI,'CLIENTS','SDX.CLIENTS,NAME','2,3,4',ITEM.LIST)
            BEGIN CASE
               CASE ITEM.LIST=''
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
               CASE ITEM.LIST#''
                  IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
            END CASE
            GOSUB DISPLAY.SCREEN
            ******GOTO GET.CLIENT                    
             CONTINUE
         CASE NUM(QI) AND QI#''
            QI=QI'R%5'
            READ CLIENT.REC FROM F.CLIENTS,QI THEN
               CLIENT.ID=QI
               CLIENT.NAME=CLIENT.REC<2>
               CLIENT.CITY=CLIENT.REC<4>
               CLIENT.STATE=CLIENT.REC<5>
               CLIENT.TXT=CLIENT.ID'R%5':' ':CLIENT.NAME:' (':CLIENT.CITY:', ':CLIENT.STATE:')'
               CRT @(10,4):CLIENT.TXT'L#45'
               ************GOTO GET.MODE                
              GOSUB GET.MODE
              RETURN
            END ELSE
               CALL ELINE('ERROR - Client ':QI:' is not a valid client.')
               ********GOTO GET.CLIENT             
               CONTINUE
            END
         CASE 1
            *************GOTO GET.CLIENT                 
            CONTINUE
      END CASE
      REPEAT
    ****  CRT @(10,4):CLIENT.TXT'L#45'
    RETURN
*******************************************************************************
GET.MODE: ***
******************************************************************************
     DONEGM = 0
     LOOP
    UNTIL DONEGM DO
      IF MODE='' THEN
         MODE=1
      END
      EDIT.MASK=MODE
      HELP='Enter Transportation Mode or [L]ist Transportation Modes'
      CALL GEN.IN(67,3,EDIT.MASK'L#2','',Q,0,2,'','',2,67,3,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' AND MODE#'' THEN QI=MODE
      BEGIN CASE
         CASE QI='EX'
          ****  GOTO THE.END                    
         DONE = 1
         RETURN
         CASE QI='X'
            CRT @(67,3):'           '
            ******GOTO GET.CLIENT                  
            RETURN                       ;* to client
         CASE QI='L'
            GOSUB DISPLAY.MODES
            GOSUB DISPLAY.SCREEN
           ****** GOTO GET.MODE               
           CONTINUE
      END CASE
      READV MODE.DESC FROM F.TRANSPORT,QI,1 ELSE
         CALL ELINE('Invalid Transportation mode')
         *****GOTO GET.MODE                           
      CONTINUE
      END
      MODE=QI
      CRT @(67,3):MODE'L#3':MODE.DESC'L#9'
      GOSUB GET.IOT
      DONEGM = 1
    REPEAT
    RETURN
***************************************************************************************
GET.IOT: ***
*************************************************************************************
   DONEGI = 0
    LOOP
    UNTIL DONEGI DO
      EDIT.MASK=IOT
      HELP='Enter Mode. [I]nbound, [O]utbound, or [T]hird Party   [EX]it'
      CALL GEN.IN(67,4,EDIT.MASK'L#2','',Q,0,2,'','',2,67,4,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' AND IOT#'' THEN QI=IOT
      BEGIN CASE
         CASE QI='EX'
           ***** GOTO THE.END
           DONE = 1
           RETURN
         CASE QI='X'
            CRT @(67,4):'            '
           ****** GOTO GET.MODE
         RETURN              ; * to GET.MODE
         CASE QI='O'
            IOT.DESC='Outbound'
            DONEGI = 1
         CASE QI='I'
            IOT.DESC='Inbound'
            DONEGI = 1
         CASE QI='T'
            IOT.DESC='Third Party'
            DONEGI = 1
         CASE 1
            CALL ELINE('Invalid Entry')
            **************GOTO GET.IOT
            CONTINUE
      END CASE
    REPEAT
      IOT=QI
      CRT @(67,4):IOT'L#3':IOT.DESC'L#9'
* Load ZIPLINE record

      ZIP.LINE.ITEM.ID=CARRIER.ID:'*':CLIENT.ID:'*':MODE:'*':IOT
      ZIP.PAGE=''
      READ ZIPLINE.REC FROM F.ZIP.LINE.ITEM,ZIP.LINE.ITEM.ID THEN
         NUM.SD=DCOUNT(ZIPLINE.REC<1>,@VM)
         FOR X=1 TO NUM.SD
            START.ZIP=ZIPLINE.REC<1,X>
            END.ZIP=ZIPLINE.REC<2,X>
            FOR Y = START.ZIP TO END.ZIP
               ZIP.PAGE<1,-1>=Y'R%5'
               LINE.ITEM.COUNT=DCOUNT(ZIPLINE.REC<3,X>,@SVM)
               TEXT=''
               FOR Z = 1 TO LINE.ITEM.COUNT
                  TEXT=TEXT:ZIPLINE.REC<3,X,Z>'L#4':'-':ZIPLINE.REC<4,X,Z>'L#1':' '
               NEXT Z
               ZIP.PAGE<2,-1>=TEXT
            NEXT Y
         NEXT X
      END ELSE
         ZIP.PAGE=''
      END
      OLD.ZIP.PAGE=ZIP.PAGE

      PAGE.NUMBER=1
      GOSUB DISPLAY.PAGE
*********************************************************************
MAIN.START: ***
*********************************************************************
    DONEMS = 0
    LOOP 
    UNTIL DONEMS DO
      CRT @(0,22):'Enter line number or zip code to edit: -----':@(-4)
      EDIT.MASK=STR(EDIT.MASK.CHAR,5)
      HELP='[B]ack Page [F]orward Page [T]op Page [L]ast Page [U]pdate [A]dd'
      CALL GEN.IN(39,22,EDIT.MASK,'',Q,0,5,'','',2,39,22,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'; * Exit
*DF          IF USER.ACCESS=1 THEN GOTO THE.END
          ******  GOTO LAST.CHANCE.TO.SAVE                       
             GOSUB LAST.CHANCE.TO.SAVE
             DONE = 1
             RETURN TO GET.CARRIER  
         CASE QI='X'; * Back to client
*DF          IF USER.ACCESS=1 THEN
*DF             GOSUB DISPLAY.SCREEN
*DF             GOTO GET.CARRIER
*DF          END
            IF ZIP.PAGE#OLD.ZIP.PAGE THEN
               YN.MSG='You have unsaved changes. Save before entering new carrier?'
               YN.MASK=''
               GOSUB ASK.Y.OR.N
               IF YN.ANSWER='Y' THEN
                  CRT @(0,22):'Saving...':@(-3)
                  SLEEP 1
                  GOSUB SAVE.ZIPLINE.REC
                  GOSUB DISPLAY.PAGE
               END
            END
            GOSUB DISPLAY.SCREEN
            ******* GOTO GET.CARRIER                            
            RETURN TO GET.CARRIER
         CASE QI='U'; * Update (and exit)
*DF          IF USER.ACCESS=1 THEN GOTO THE.END
            IF ZIP.PAGE#OLD.ZIP.PAGE THEN
               CRT @(0,22):'Saving...':@(-3)
               SLEEP 1
               GOSUB SAVE.ZIPLINE.REC
               GOSUB DISPLAY.PAGE
            END ELSE
               CRT @(0,22):'No changes to save.':@(-3)
               SLEEP 1
            END
            ***** GOTO THE.END 
            DONE = 1
            RETURN TO GET.CARRIER                            
         CASE QI='A' OR QI=NUM.SD+1; * Add
*DF          IF USER.ACCESS=1 THEN GOTO THE.END
            QI=NUM.SD+1
            EDIT.NUMBER=QI
            BACK.FLAG=FALSE
            GOSUB EDIT.ZIPLINE
            CALL ELINE('PRESS BREAK')
*DF          IF ZIP.PAGE<1,EDIT.NUMBER>#'' THEN NUM.SD=NUM.SD+1
*DF          GOSUB DISPLAY.SCREEN
            ********GOTO MAIN.START                               
             CONTINUE
         CASE QI='L' OR QI='LP'; * Last Page
            IF NUM.PAGES#0 AND PAGE.NUMBER#NUM.PAGES THEN
               PAGE.NUMBER=NUM.PAGES
               GOSUB DISPLAY.PAGE
            END ELSE
               CALL ELINE('** LAST PAGE **')
            END
            ********GOTO MAIN.START                            
             CONTINUE
         CASE QI='T' OR QI='TP'; * Top Page
            IF NUM.PAGES#0 AND PAGE.NUMBER#1 THEN
               PAGE.NUMBER=1
               GOSUB DISPLAY.PAGE
            END ELSE
               CALL ELINE('** FIRST PAGE **')
            END
            ******** GOTO MAIN.START                              
            CONTINUE
         CASE QI='F' OR QI='FP'; * Forward a page
            IF NUM.PAGES#0 AND PAGE.NUMBER<NUM.PAGES THEN
               PAGE.NUMBER+=1
               GOSUB DISPLAY.PAGE
            END ELSE
               CALL ELINE('** LAST PAGE **')
            END
            *********GOTO MAIN.START                              
            CONTINUE
         CASE QI='B' OR QI='BP'; * Backward a page
            IF NUM.PAGES#0 AND PAGE.NUMBER>1 THEN
               PAGE.NUMBER-=1
               GOSUB DISPLAY.PAGE
            END ELSE
               CALL ELINE('** FIRST PAGE **')
            END
            ****** GOTO MAIN.START                            
            CONTINUE
         CASE NUM(QI) AND QI#''; * Edit service description number
*DF          IF USER.ACCESS=1 THEN GOTO MAIN.START
            IF QI>=1 AND QI<=NUM.SD+1 AND LEN(QI)<5 THEN
               EDIT.NUMBER=QI
               BACK.FLAG=FALSE
               GOSUB EDIT.ZIPLINE
            END ELSE
               LOCATE QI IN ZIP.PAGE<1> SETTING POS THEN
                  QI=POS
                  EDIT.NUMBER=QI
                  BACK.FLAG=FALSE
                  GOSUB EDIT.ZIPLINE
               END ELSE
                  CALL ELINE('Not a valid line number or zip code')
               END
            END
            *********GOTO MAIN.START                        
            CONTINUE
         CASE 1
            *********GOTO MAIN.START                        
            CONTINUE
      END CASE
    REPEAT
    RETURN   

* Start of internal subroutines
********************************************************************************
DISPLAY.SCREEN: ***
********************************************************************************
* Display the basic screen setup
      CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      CRT @(0,2):STR('=',79):
      CRT @(0,3):'CARRIER :'
      CRT @(60,3):'MODE :'
      CRT @(0,4):'CLIENT  :'
      CRT @(60,4):'IOT  :'
      CRT @(0,5):STR('=',79):
      CRT @(0,21):STR('=',79):
      IF CARRIER.ID THEN
         CARRIER.TXT=CARRIER.ID'R%5':' ':CARRIER.NAME:' (':CARRIER.CITY:', ':CARRIER.STATE:')'
         CRT @(10,3):CARRIER.TXT'L#45'
      END
      IF CLIENT.ID AND CLIENT.ID#'ALL' THEN
         CLIENT.TXT=CLIENT.ID'R%5':' ':CLIENT.NAME:' (':CLIENT.CITY:', ':CLIENT.STATE:')'
         CRT @(10,4):CLIENT.TXT'L#45'
      END
      IF MODE#'' THEN
         CRT @(67,3):MODE'L#3':MODE.DESC'L#9'
      END
      IF IOT#'' THEN
         CRT @(67,4):IOT'L#3':IOT.DESC'L#9'
      END

      CRT @(0,6):'####  Zip Code     Line Item Codes                 '
      CRT @(0,7):'----  --------  ---------------------------------- '

      RETURN
********************************************************************************
DISPLAY.PAGE: ***
********************************************************************************
* This routine displays a given page
* Input:  PAGE.NUMBER
* Calculate number of items and number of pages and set page number
      NUM.SD=DCOUNT(ZIP.PAGE<1>,@VM)
      NUM.PAGES=INT((NUM.SD+1)/PAGE.SIZE)
      IF REM((NUM.SD+1),PAGE.SIZE) THEN NUM.PAGES+=1
      IF NUM.PAGES=0 THEN NUM.PAGES=1
      STR.OUT='[Page ':PAGE.NUMBER:' of ':NUM.PAGES:']'
      CRT @(78-LEN(STR.OUT),5):STR.OUT
      Y=1; * Screen position
      IF PAGE.NUMBER=0 THEN
         LINE.NUM=1
      END ELSE
         LINE.NUM=(PAGE.NUMBER-1)*PAGE.SIZE+1
      END
      LOOP WHILE Y<=PAGE.SIZE
         BEGIN CASE
            CASE LINE.NUM>NUM.SD+1
* Print nothing - actually clears line
*DF             SCREEN.LINE=LINE.NUM'R%4'
               SCREEN.LINE=''
            CASE ZIP.PAGE<1,LINE.NUM>=''
               SCREEN.LINE=LINE.NUM'R%4':'  -----'
            CASE 1
               GOSUB FORMAT.LINE                        ;* here is it
               SCREEN.LINE=FORMATTED.LINE
         END CASE
         CRT @(0,START.Y+Y):SCREEN.LINE:@(-4); * Draw screen line
         Y+=1; * Inc screen position
         LINE.NUM+=1
      REPEAT
      RETURN
********************************************************************************
FORMAT.LINE: ***
********************************************************************************
* Format a single line for screen or printer display
      FORMATTED.LINE=LINE.NUM'R%4':SPACE(2)
      FORMATTED.LINE:=ZIP.PAGE<1,LINE.NUM>'R%5':SPACE(5)
      IF ZIP.PAGE<2,LINE.NUM>[36,1]#'' THEN
         FORMATTED.LINE:=ZIP.PAGE<2,LINE.NUM>'L#28':'more... '
      END ELSE
         FORMATTED.LINE:=ZIP.PAGE<2,LINE.NUM>'L#35'
      END
      RETURN
***********************************************************************************
FORMAT.SEC.LINE: ***
************************************************************************************
* Format a single line for screen or printer display
      FORMATTED.SEC.LINE=SEC.LINE.NUM'R%3':SPACE(2)
      FORMATTED.SEC.LINE:=SEC.LINE.ITEM<1,SEC.LINE.NUM>'L#4':' - '
      LOCATE TRIM(SEC.LINE.ITEM<1,SEC.LINE.NUM>) IN LI.CODES<1> SETTING POS THEN
         FORMATTED.SEC.LINE:=LI.CODES<2,POS>'L#34'
      END ELSE
         FORMATTED.SEC.LINE:='Unknown Code                      '
      END
      FORMATTED.SEC.LINE:=SEC.LINE.ITEM<2,SEC.LINE.NUM>'L#2'
      IF SEC.LINE.ITEM<2,SEC.LINE.NUM>#'' THEN
         BEGIN CASE
            CASE SEC.LINE.ITEM<2,SEC.LINE.NUM>='O'
               FORMATTED.SEC.LINE:='- Orgin      '
            CASE SEC.LINE.ITEM<2,SEC.LINE.NUM>='D'
               FORMATTED.SEC.LINE:='- Destination'
            CASE SEC.LINE.ITEM<2,SEC.LINE.NUM>='B'
               FORMATTED.SEC.LINE:='- Both       '
         END CASE
      END
      RETURN
**************************************************************
DISPLAY.PAGE.2: ***
****************************************************************
      SEC.LINE.NUM=1
      CRT @(0,6):@(-4):
      CRT @(0,7):'Zip Code: ':ZIP.PAGE<1,EDIT.NUMBER>'R%5':@(-4):
      CRT @(0,8):@(-4):
      CRT @(0,9):'###  Line Item Codes                          Zip Selection':@(-4):
      CRT @(0,10):'---  --------------------------------------   -------------':@(-4):
      SEC.LINE.ITEM=''
*****    GET.NEXT.ITEM: ***
*****      IF ZIP.PAGE<2,EDIT.NUMBER>#'' THEN
*****         SEC.LINE.ITEM<1,-1>=ZIP.PAGE<2,EDIT.NUMBER>[1,4]
*****         SEC.LINE.ITEM<2,-1>=ZIP.PAGE<2,EDIT.NUMBER>[6,1]
*****         ZIP.PAGE<2,EDIT.NUMBER>=ZIP.PAGE<2,EDIT.NUMBER>[8,999]
*****         GOTO GET.NEXT.ITEM              
*****      END
    DONEDP2 = 0
      LOOP
         IF ZIP.PAGE<2,EDIT.NUMBER> = '' THEN
            DONEDP2 = 1
         END
      UNTIL DONEDP2 DO
      	SEC.LINE.ITEM<1,-1>=ZIP.PAGE<2,EDIT.NUMBER>[1,4]
      	SEC.LINE.ITEM<2,-1>=ZIP.PAGE<2,EDIT.NUMBER>[6,1]
          ZIP.PAGE<2,EDIT.NUMBER>=ZIP.PAGE<2,EDIT.NUMBER>[8,999]
       REPEAT     
      
      NUM.SEC.SD=DCOUNT(SEC.LINE.ITEM<1>,@VM)
      Y=1; * Screen position
      LOOP WHILE Y<=10
         BEGIN CASE
            CASE SEC.LINE.NUM>NUM.SEC.SD+1
* Print nothing - actually clears line
               SCREEN.LINE=''
            CASE SEC.LINE.ITEM<1,SEC.LINE.NUM>=''
               SCREEN.LINE=SEC.LINE.NUM'R%3':'  -----'
            CASE 1
               GOSUB FORMAT.SEC.LINE
               SCREEN.LINE=FORMATTED.SEC.LINE
         END CASE
         CRT @(0,10+Y):SCREEN.LINE:@(-4); * Draw screen line
         Y+=1; * Inc screen position
         SEC.LINE.NUM+=1
      REPEAT
      RETURN
********************************************************************************
ENTER.DATA: ***
*********************************************************************************
* Allow the entry and editing of the data from the top of the list to the bottom
      EDIT.NUMBER=1
      LOOP WHILE EDIT.NUMBER>=1 AND EDIT.NUMBER<=NUM.SD
         GOSUB EDIT.ZIPLINE
         IF BACK.FLAG THEN
            EDIT.NUMBER-=1
         END ELSE
            EDIT.NUMBER+=1
         END
      REPEAT
      RETURN
********************************************************************************
EDIT.ZIPLINE: ***
********************************************************************************
* Edit an existing service description's benchmark
* Input: EDIT.NUMBER set to the number to edit
      PAGE.NUMBER=INT(EDIT.NUMBER/PAGE.SIZE)
      IF PAGE.NUMBER*PAGE.SIZE<EDIT.NUMBER THEN PAGE.NUMBER+=1
      GOSUB DISPLAY.PAGE
      EDIT.Y=EDIT.NUMBER-(PAGE.NUMBER*PAGE.SIZE)+PAGE.SIZE
      Y.POS=START.Y+EDIT.Y
      GOSUB GET.ZIP.CODE
      CRT @(0,6):'####  Zip Code     Line Item Codes                 '
      CRT @(0,7):'----  --------  ---------------------------------- '
      GOSUB DISPLAY.PAGE
      RETURN
********************************************************************************
ASSIGN.FIELDS.OUT: ***
**********************************************************************************
* Grab data from the array for editing
      BENCHMARK=BENCHMARK.REC<2,EDIT.NUMBER>
      RETURN
********************************************************************************
ASSIGN.FIELDS.IN: ***
********************************************************************************
* Assign data back into the array
      BENCHMARK.REC<2,EDIT.NUMBER>=BENCHMARK
      RETURN
********************************************************************************
GET.ZIP.CODE: ***
********************************************************************************
       ****IF BACK.FLAG THEN GOTO MAIN.START
      IF BACK.FLAG THEN RETURN TO MAIN.START
      BACK.FLAG=FALSE
      HELP='Zip Code or [D]elete'
      DONEGZC = 0 
   LOOP 
  UNTIL DONEGZC DO  
GG1:  CRT @(0,22):'Enter Zip Code.':@(-4)
      X.POS=6
      IF ZIP.PAGE<1,EDIT.NUMBER>='' THEN
         MASK='-----'
      END ELSE
         MASK=ZIP.PAGE<1,EDIT.NUMBER>'R%5'
      END
      CALL GEN.IN(X.POS,Y.POS,MASK,'',Q,0,5,'','',2,X.POS,Y.POS,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF ZIP.PAGE<1,EDIT.NUMBER>#'' THEN
         IF QI='' THEN Q=ZIP.PAGE<1,EDIT.NUMBER>
      END
      BEGIN CASE
         CASE QI='X'
            BACK.FLAG=TRUE
            RETURN                                ;* to edit zipline
         CASE QI='D'
            IF ZIP.PAGE<1,EDIT.NUMBER>#'' THEN
               DEL ZIP.PAGE<1,EDIT.NUMBER>
               DEL ZIP.PAGE<2,EDIT.NUMBER>
               NUM.SD=NUM.SD-1
            END
            RETURN                                ;* to edit zipline
         CASE QI='' AND Q=''
            RETURN                                ;* to edit zipline
         CASE NUM(Q)
            IF Q#'' THEN
               LOCATE Q IN ZIP.PAGE<1> SETTING POS THEN
                  IF POS # EDIT.NUMBER THEN
                     CALL ELINE(Q:' is already on file on line ':POS)
                     *******GOTO GG1                       
                     CONTINUE
                  END
               END ELSE
                  NUM.SD=NUM.SD+1
               END
               ZIP.PAGE<1,EDIT.NUMBER>=Q
               CRT @(X.POS,Y.POS):ZIP.PAGE<1,EDIT.NUMBER>'R%5'
               DONEGZC = 1
            END
         CASE 1
            CALL ELINE('Invalid entry.')
            ******GOTO GG1                         
            CONTINUE
       END CASE
      REPEAT
      GOSUB DISPLAY.PAGE.2
      IF NUM.SEC.SD=0 THEN
         SEC.EDIT.NUMBER=1
         BACK.FLAG=FALSE
         GOTO X.BACK.TO.LINE.ITEM                  ;**********************************
      END
    
*DF    RETURN     
*********************************************************************
SEC.START: ***
********************************************************************
    LOOP
      CRT @(0,22):'Enter line number to edit: ---':@(-4)
      EDIT.MASK=STR(EDIT.MASK.CHAR,3)
      HELP='Enter line to modify'
      CALL GEN.IN(27,22,EDIT.MASK,'',Q,0,3,'','',2,27,22,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'; * Exit
*DF          IF USER.ACCESS=1 THEN GOTO THE.END
              *****GOTO LAST.CHANCE.TO.SAVE                            
               GOSUB LAST.CHANCE.TO.SAVE
               DONE = 1
               RETURN TO GET.CARRIER
         CASE QI='X' OR QI=''; * Back to client
*DF          IF USER.ACCESS=1 THEN
*DF             GOSUB DISPLAY.SCREEN
*DF             GOTO GET.CARRIER
*DF          END
            I = DCOUNT(SEC.LINE.ITEM<1>,@VM)
            TEXT=''
            FOR J = 1 TO I
               IF SEC.LINE.ITEM<1,J>#'' THEN
                  TEXT=TEXT:SEC.LINE.ITEM<1,J>'L#4':'-':SEC.LINE.ITEM<2,J>'L#1':' '
               END
            NEXT J
            ZIP.PAGE<2,EDIT.NUMBER>=TEXT
            IF I = 0 THEN
               CALL ELINE('There are no line items for this zip code. Zip code will be removed')
               DEL ZIP.PAGE<1,EDIT.NUMBER>
               DEL ZIP.PAGE<2,EDIT.NUMBER>
               NUM.SD=NUM.SD-1
            END ELSE
               TEMP.ZIP=ZIP.PAGE<1,EDIT.NUMBER>
               TEMP.LINE=ZIP.PAGE<2,EDIT.NUMBER>
               DEL ZIP.PAGE<1,EDIT.NUMBER>
               DEL ZIP.PAGE<2,EDIT.NUMBER>
               LOCATE TEMP.ZIP IN ZIP.PAGE<1> BY 'AR' SETTING ADD.POS ELSE
                  INS TEMP.ZIP BEFORE ZIP.PAGE<1,ADD.POS>
                  INS TEMP.LINE BEFORE ZIP.PAGE<2,ADD.POS>
                  PAGE.NUMBER=INT(ADD.POS/PAGE.SIZE)
                  IF PAGE.NUMBER*PAGE.SIZE<ADD.POS THEN PAGE.NUMBER+=1
*DF               NUM.SD=NUM.SD+1
               END
            END
            GOSUB DISPLAY.SCREEN
            GOSUB DISPLAY.PAGE
            *******GOTO MAIN.START                            
            RETURN TO MAIN.START
         CASE NUM(QI) AND QI#''; * Edit service description number
*DF          IF USER.ACCESS=1 THEN GOTO MAIN.START
            IF QI>=1 AND QI<=NUM.SEC.SD+1 THEN
               SEC.EDIT.NUMBER=QI
               BACK.FLAG=FALSE
X.BACK.TO.LINE.ITEM:                              ;***************************************
               GOSUB GET.LINE.ITEM
               IF BACK.FLAG THEN
                  BACK.FLAG=FALSE
                 ******** GOTO SEC.START                         
                 CONTINUE
               END
               GOSUB GET.ZIP.SEL
               IF BACK.FLAG THEN
                  BACK.FLAG=FALSE
                  GOTO X.BACK.TO.LINE.ITEM                     ;********************************** 
               END
               I = DCOUNT(SEC.LINE.ITEM<1>,@VM)
               TEXT=''
               FOR J = 1 TO I
                  IF SEC.LINE.ITEM<1,J>#'' THEN
                     TEXT=TEXT:SEC.LINE.ITEM<1,J>'L#4':'-':SEC.LINE.ITEM<2,J>'L#1':' '
                  END
               NEXT J
               ZIP.PAGE<2,EDIT.NUMBER>=TEXT
               GOSUB DISPLAY.PAGE.2
            END ELSE
               CALL ELINE('Not a valid line number')
            END
            *******GOTO SEC.START                             
            CONTINUE
         CASE 1
            *****GOTO SEC.START                         
            CONTINUE
      END CASE
    REPEAT
      CALL ELINE('PRESS BREAK')
**************************************************************************
GET.LINE.ITEM: ***
      IF BACK.FLAG THEN GOTO SEC.START                 ;**********************************
      BACK.FLAG=FALSE
    LOOP    
GG2:  CRT @(0,22):'Enter Line Item Code.':@(-4)
      HELP='Line Item Code, [L]ist Codes or [D]elete'
      SEC.X.POS=5
      START.SEC.Y.POS=10
      SEC.Y.POS=START.SEC.Y.POS+SEC.EDIT.NUMBER
      IF SEC.LINE.ITEM<1,SEC.EDIT.NUMBER>='' THEN
         MASK='----'
      END ELSE
         MASK=SEC.LINE.ITEM<1,SEC.EDIT.NUMBER>'L#4'
      END
      CALL GEN.IN(SEC.X.POS,SEC.Y.POS,MASK,'',Q,0,4,'','',2,SEC.X.POS,SEC.Y.POS,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF SEC.LINE.ITEM<1,SEC.EDIT.NUMBER>#'' THEN
         IF QI='' THEN Q=TRIM(SEC.LINE.ITEM<1,SEC.EDIT.NUMBER>)
      END
      BEGIN CASE
         CASE QI='X'
            BACK.FLAG=TRUE
            CRT @(SEC.X.POS,SEC.Y.POS):SEC.LINE.ITEM<1,SEC.EDIT.NUMBER>'L#4'
            IF SEC.LINE.ITEM<2,SEC.EDIT.NUMBER>='' THEN
               SEC.LINE.ITEM<1,SEC.EDIT.NUMBER>=''
               CRT @(SEC.X.POS,SEC.Y.POS):'----':SPACE(37)
            END
            RETURN                               ;* to edit zipline
         CASE QI='D'
            DEL SEC.LINE.ITEM<1,SEC.EDIT.NUMBER>
            DEL SEC.LINE.ITEM<2,SEC.EDIT.NUMBER>
            I = DCOUNT(SEC.LINE.ITEM<1>,@VM)
            TEXT=''
            FOR J = 1 TO I
               IF SEC.LINE.ITEM<1,J>#'' THEN
                  TEXT=TEXT:SEC.LINE.ITEM<1,J>'L#4':'-':SEC.LINE.ITEM<2,J>'L#1':' '
               END
            NEXT J
            ZIP.PAGE<2,EDIT.NUMBER>=TEXT
            GOSUB DISPLAY.PAGE.2
            BACK.FLAG=TRUE
            RETURN                                    ;* to edit zipline
         CASE QI='L'
            GOSUB DISPLAY.CODES
            GOSUB DISPLAY.SCREEN
            I = DCOUNT(SEC.LINE.ITEM<1>,@VM)
            TEXT=''
            FOR J = 1 TO I
               IF SEC.LINE.ITEM<1,J>#'' THEN
                  TEXT=TEXT:SEC.LINE.ITEM<1,J>'L#4':'-':SEC.LINE.ITEM<2,J>'L#1':' '
               END
            NEXT J
            ZIP.PAGE<2,EDIT.NUMBER>=TEXT
            GOSUB DISPLAY.PAGE.2
            *********GOTO GG2                            
            CONTINUE
            RETURN                           ;* to edit zipline
         CASE 1
            IF Q#'' THEN
               Q=OCONV(Q,'MCU')
               LOCATE Q IN SEC.LINE.ITEM<1> SETTING POS THEN
                  IF POS # SEC.EDIT.NUMBER THEN
                     CALL ELINE(Q:' is already on file on line ':POS)
                     ******************GOTO GG2                                     
                     CONTINUE
                  END
               END ELSE
                  NUM.SEC.SD=NUM.SEC.SD+1
               END
               SEC.LINE.ITEM<1,SEC.EDIT.NUMBER>=Q
               LOCATE Q IN LI.CODES<1> SETTING DESC.POS THEN
                  DESC=LI.CODES<2,DESC.POS>
               END ELSE
                  CALL ELINE(Q:' is not a valid line item')
                  ***********GOTO GG2                              
                  CONTINUE
               END
               CRT @(SEC.X.POS,SEC.Y.POS):SEC.LINE.ITEM<1,SEC.EDIT.NUMBER>'L#4':' - ':DESC'L#31'
            END ELSE
               CALL ELINE('Entry is required')
               **********GOTO GG2                        
              CONTINUE
            END
      END CASE
    REPEAT
      RETURN   ;* to edit zipline
  
**********************************************************************      
GET.ZIP.SEL: ***
**********************************************************************
  DONEGZS = 0
      BACK.FLAG=FALSE
  LOOP  
  UNTIL DONEGZS DO  
      CRT @(0,22):'Enter Zip Selection.':@(-4)
      HELP='Check for [O]rgin only [D]estination only or [B]oth Orgin or Destination'
      SEC.X.POS=46
      START.SEC.Y.POS=10
      SEC.Y.POS=START.SEC.Y.POS+SEC.EDIT.NUMBER
      IF SEC.LINE.ITEM<2,SEC.EDIT.NUMBER>='' THEN
         MASK='--'
      END ELSE
         MASK=SEC.LINE.ITEM<2,SEC.EDIT.NUMBER>'L#2'
      END
      CALL GEN.IN(SEC.X.POS,SEC.Y.POS,MASK,'',Q,0,2,'','',2,SEC.X.POS,SEC.Y.POS,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF SEC.LINE.ITEM<2,SEC.EDIT.NUMBER>#'' THEN
         IF QI='' THEN Q=SEC.LINE.ITEM<2,SEC.EDIT.NUMBER>
      END
      BEGIN CASE
         CASE QI='X'
            BACK.FLAG=TRUE
            CRT @(SEC.X.POS,SEC.Y.POS):SEC.LINE.ITEM<2,SEC.EDIT.NUMBER>'L#2'
            RETURN                    ;* to sec.start
         CASE 1
            IF Q#'' THEN
               Q=OCONV(Q,'MCU')
               IF Q#'D' AND Q#'O' AND Q#'B' THEN
                  CALL ELINE('Invalid selection you must enter a [O]rgin, [D]estination or [B]oth')
                 ******** GOTO GG3                          
                 CONTINUE
               END
               SEC.LINE.ITEM<2,SEC.EDIT.NUMBER>=Q
               BEGIN CASE
                  CASE Q='B'
                     DESC='Both'
                  CASE Q='D'
                     DESC='Destination'
                  CASE Q='O'
                     DESC='Orgin'
               END CASE
               CRT @(SEC.X.POS,SEC.Y.POS):SEC.LINE.ITEM<2,SEC.EDIT.NUMBER>'L#2':'- ':DESC'L#11'
               DONEGZS = 1
            END ELSE
               CALL ELINE('Entry is required')
              ****************** GOTO GG3                              
              CONTINUE 
            END
      END CASE
      REPEAT
      RETURN               ;* to sec.start     
 
********************************************************************************
SAVE.ZIPLINE.REC: ***
********************************************************************************
      NUM.SD=DCOUNT(ZIP.PAGE<1>,@VM)
      IF NUM.SD > 0 THEN
         START.ZIP=ZIP.PAGE<1,1>
         END.ZIP=ZIP.PAGE<1,1>
         NEXT.ZIP=ZIP.PAGE<1,1>
         TEST.LINE.ITEM=ZIP.PAGE<2,1>
         CREATE.NEW.VALUE=0
         ZIP.REC=''
         LINE.ITEM.DTL=''
         FOR X=1 TO NUM.SD
            IF NEXT.ZIP#ZIP.PAGE<1,X> THEN
               CREATE.NEW.VALUE=1
            END
            IF TEST.LINE.ITEM#ZIP.PAGE<2,X> THEN
               CREATE.NEW.VALUE=1
            END
            IF CREATE.NEW.VALUE THEN
               ZIP.REC<1,-1>=START.ZIP'R%5'
               ZIP.REC<2,-1>=END.ZIP'R%5'
               LINE.ITEM.DTL=''
                        
        *****GET.NEXT.LINE.ITEM: ***
        *****       IF TEST.LINE.ITEM#'' THEN
        *****          LINE.ITEM.DTL<1,1,-1>=TRIM(TEST.LINE.ITEM[1,4])
        *****         LINE.ITEM.DTL<2,1,-1>=TEST.LINE.ITEM[6,1]
        *****          TEST.LINE.ITEM=TEST.LINE.ITEM[8,999]
        *****         GOTO GET.NEXT.LINE.ITEM                      
        *****      END
     DONESZR = 0
      LOOP
         IF TEST.LINE.ITEM = '' THEN
            DONESZR = 1
         END
      UNTIL DONESZR DO
         LINE.ITEM.DTL<1,1,-1>=TRIM(TEST.LINE.ITEM[1,4])
         LINE.ITEM.DTL<2,1,-1>=TEST.LINE.ITEM[6,1]
         TEST.LINE.ITEM=TEST.LINE.ITEM[8,999]
      REPEAT
               ZIP.REC<3,-1>=LINE.ITEM.DTL<1>
               ZIP.REC<4,-1>=LINE.ITEM.DTL<2>
               START.ZIP=ZIP.PAGE<1,X>
               END.ZIP=ZIP.PAGE<1,X>
               TEST.LINE.ITEM=ZIP.PAGE<2,X>
               NEXT.ZIP=ZIP.PAGE<1,X>
               NEXT.ZIP=NEXT.ZIP+1
               NEXT.ZIP=NEXT.ZIP'R%5'
               CREATE.NEW.VALUE=0
            END ELSE
               END.ZIP=NEXT.ZIP
               NEXT.ZIP=NEXT.ZIP+1
               NEXT.ZIP=NEXT.ZIP'R%5'
*DF            END.ZIP=NEXT.ZIP
            END
         NEXT X
         ZIP.REC<1,-1>=START.ZIP'R%5'
         ZIP.REC<2,-1>=END.ZIP'R%5'
         LINE.ITEM.DTL=''
         
    *****GET.NEXT.LINE.ITEM.2: ***
    *****     IF TEST.LINE.ITEM#'' THEN
    *****        LINE.ITEM.DTL<1,1,-1>=TRIM(TEST.LINE.ITEM[1,4])
    *****         LINE.ITEM.DTL<2,1,-1>=TEST.LINE.ITEM[6,1]
    *****         TEST.LINE.ITEM=TEST.LINE.ITEM[8,999]
    *****        GOTO GET.NEXT.LINE.ITEM.2                           
    *****      END
     DONESZR = 0
      LOOP
         IF TEST.LINE.ITEM = '' THEN
            DONESZR = 1
         END
      UNTIL DONESZR DO
         LINE.ITEM.DTL<1,1,-1>=TRIM(TEST.LINE.ITEM[1,4])
         LINE.ITEM.DTL<2,1,-1>=TEST.LINE.ITEM[6,1]
         TEST.LINE.ITEM=TEST.LINE.ITEM[8,999]
      REPEAT
         ZIP.REC<3,-1>=LINE.ITEM.DTL<1>
         ZIP.REC<4,-1>=LINE.ITEM.DTL<2>
         WRITE ZIP.REC ON F.ZIP.LINE.ITEM,ZIP.LINE.ITEM.ID
      END ELSE
         DELETE F.ZIP.LINE.ITEM,ZIP.LINE.ITEM.ID
      END
*DF    OLD.BENCHMARK.REC=BENCHMARK.REC
      RETURN
********************************************************************************
DISPLAY.EXISTING.SETUP: ***
********************************************************************************
      CRT @(0,0):@(-1)
      IF CARRIER.ID='' THEN
         STMT='SORT ZIP.LINE.ITEM CARRIER# CLIENT#'
      END ELSE
         STMT='SORT ZIP.LINE.ITEM WITH CARRIER# = ':CARRIER.ID:' CARRIER# CLIENT#'
      END
      EXECUTE STMT
      CALL ELINE('')
      RETURN
********************************************************************************
DISPLAY.MODES: ***
********************************************************************************
      CRT @(0,0):@(-1)
      STMT='SORT FB.TRANSPORT 1 2'
      EXECUTE STMT
      CALL ELINE('')
      RETURN
********************************************************************************
DISPLAY.CODES: ***
********************************************************************************
      CRT @(0,0):@(-1)
      STMT='LIST FB.TABLES LI.CODES 1 2 (I'
      EXECUTE STMT
      CALL ELINE('')
      RETURN
********************************************************************************
ASK.Y.OR.N: ***
*******************************************************************************
* This is a general Yes/No prompt routine
* Inputs:  YN.MSG, YN.MASK
* Outputs: YN.ANSWER
      QI = ""
      YN.ANSWER=''
      LOOP
      UNTIL QI = "N" OR QI = "Y" DO
         CRT @(0,22):YN.MSG:@(-4)
         HELP='Entry Options: [Y]es [N]o'
         EDIT.MASK=YN.MASK'L#1'
         CALL GEN.IN(LEN(YN.MSG)+1,22,EDIT.MASK,'',Q,0,1,'','',2,LEN(YN.MSG)+1,22,0,QI,HELP,0,23)
         QI=TRIM(OCONV(QI,'MCU'))
         IF QI='' THEN QI=TRIM(EDIT.MASK)
         BEGIN CASE
            CASE QI='Y'
            CASE QI='N'
            CASE 1
               CALL ELINE('Invalid entry.')
               CONTINUE
         END CASE
      REPEAT
      CRT @(0,22):@(-4):
      CRT @(0,23):@(-4):
      YN.ANSWER=QI
      RETURN     
********************************************************************************
LAST.CHANCE.TO.SAVE: ***
********************************************************************************
* If you tried to EX out and there are unsaved changes - falls thru to THE.END
      IF ZIP.PAGE#OLD.ZIP.PAGE THEN
         YN.MSG='You have unsaved changes. Save before exiting?'
         YN.MASK=''
         GOSUB ASK.Y.OR.N
         IF YN.ANSWER='Y' THEN
            CRT @(0,22):'Saving...':@(-3)
            SLEEP 1
            GOSUB SAVE.ZIPLINE.REC
            GOSUB DISPLAY.PAGE
         END
      END
      RETURN
********************************************************************************
**THE.END: ***
 ***     CRT @(0,22):@(-3):
      END; * End program
