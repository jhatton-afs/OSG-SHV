      SUBROUTINE FB.2.1.TL.ROUTE(VIN,VOUT,F.PCIN,F.PCOUT,F.MILEAGE,QI,MAT CLIENT.REC)
*
 UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.2.1.TL.ROUTE' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
 CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
* SUBROUTINE TO ENTER ROUTE INFORMATION
*
* FREIGHT BILLING PACKAGE
*
* AUTHOR: TAMI SEAGO
* DATE: APRIL 15, 1999
*
* THIS PROGRAM IS A PROPRIETARY PRODUCT OF AUTOMATED FREIGHT SYSTEMS
* AND MAY NOT BE USED, COPIED OR MODIFIED WITHOUT THE EXPRESS
* WRITTEN CONSENT OF SAME.
*
********************************************************************
* 092903 - CREATE FOR TRUCK LOAD SURVEY
* 033105 - JMK01 - ADD CLIENT AND CARRIER FOR ARTCO BELL AND CRETE
* 042205 - JMK02 - UPDATE BILL.MILES WITH TOTAL MILES FOR STC CLIENTS
*
*
$INCLUDE PROG.ADMIN INC_OPTIONS
$INCLUDE FILE.DEFS INC_CLIENTS
*
* Initialize variables
*
      PROMPT''
      FP.CO=CLIENT.REC(92)               ; * JMK02
      ZIP.ARR=''
      ZIP.ARR<1> = VIN<1>
      ZIP.ARR<2> = VIN<2>
      ZIP.ARR<3> = VIN<3>
      TL.BILL.MILES = VIN<4>
      CH.NUM = VIN<5>
      IN.OUT = VIN<6>
      CC = VIN<7>
      ORIG=VIN<8>
      DEST=VIN<9>
      TL.CALC.MILES=VIN<10>
      OPT=VIN<11>
      Z.OPT=VIN<11>
      TOT.MILES=VIN<12>
      USER=VIN<13>
      CLIENT.ID=VIN<14>
      CLIENT.NAME=VIN<15>
      CARRIER.ID=VIN<16>
      CARRIER.NAME=VIN<17>
      PRO.ID=VIN<18>
      ZIP.ARR<7>=TL.CALC.MILES
      PROG.NAME='FB.2.1.TL.ROUTE'
      NZIPS=DCOUNT(ZIP.ARR<1>,@VM)
      ORIG.ZIP=ZIP.ARR<1,1>
      DEST.ZIP=ZIP.ARR<1,NZIPS>
      Z.SEL=1
      Z.PAGE=1
      BACK.FLAG=0
      Z.PROMPT=''
      BEGIN CASE
         CASE OPT='V'
            INQUIRE=1
            MODE='EDIT'
            Z.INQUIRE=1
            Z.MODE='EDIT'
         CASE OPT='I'
            INQUIRE=0
            MODE='INPUT'
            Z.INQUIRE=0
            Z.MODE='INPUT'
         CASE OPT='E'
            INQUIRE=0
            MODE='EDIT'
            Z.INQUIRE=0
            Z.MODE='EDIT'
      END CASE
      GOSUB Z.DISPLAY.HEADINGS
      GOSUB CALCULATE.TOTAL
      GOSUB Z.9000
      IF MODE='EDIT' THEN GO 5000


*
* Open files
*

*
* Start input
*
100:* UPDATE BILLED MILES
      HELP = 'Enter Billed Miles. [X]=Back. [EX]it.'
      MASK=TL.BILL.MILES 'R#6'
      CALL GEN.IN(15,4,MASK,'',Q,0,6,'','',0,15,4,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BACK.FLAG=0
      BEGIN CASE
         CASE QI=''
            Q=TL.BILL.MILES
         CASE QI='X'
            BACK.FLAG=1
            RETURN
         CASE QI='EX'
            RETURN
         CASE NUM(QI) AND QI#''
            Q=QI
         CASE 1
            GO 100
      END CASE
      TL.BILL.MILES=Q
      CRT @(15,4):TL.BILL.MILES 'R#6'
      IF MODE='EDIT' THEN RETURN
200:* UPDATE ZIP LIST
      GOSUB FB.2.1.ZIP
      IF MODE='EDIT' THEN RETURN

*
5000:* End of program
*
      HELP = "Enter Selection. ''=End. 'X'=Back. 'EX'=Exit."
      CALL GEN.IN(0,22,'Enter Selection. ###','',Q,0,3,'','',0,-3,22,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            VOUT=''
            VOUT<1>=ZIP.ARR<1>
            VOUT<2>=ZIP.ARR<2>
            VOUT<3>=ZIP.ARR<3>
            VOUT<4>=ZIP.ARR<7>
            VOUT<5> = CC
            VOUT<6>=TL.BILL.MILES
            VOUT<7>=ZIP.ARR<7>
            IF TL.BILL.MILES+0#0 THEN
               VAR.MILES=TOT.MILES/10
               VAR.TEST=ABS(TOT.MILES-TL.BILL.MILES)
               IF VAR.TEST > VAR.MILES THEN
                  SUBJ='Truckload Bill Mileage Variance'
                  TEXT=USER:' entered ':TL.BILL.MILES:' against ':TOT.MILES
                  TEXT<1,-1>=' which varies by ':VAR.TEST
                  TEXT<1,-1>='on ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
                  TEXT<1,-1>='Client ':CLIENT.ID:' ':CLIENT.NAME:' Carrier ':CARRIER.ID:' ':CARRIER.NAME:' Pro ':PRO.ID
                  TEXT<1,-1>="Message Source: FBBP FB.2.1.TL.ROUTE"
                  TEXT<1,-1>="Lines 125-147"
                  MVIN=''
                  MVOUT=''
                  MVIN<1>='SMatthews@afs.net'
                  MVIN<1,-1>='CHebert@afs.net'
***                  MVIN<2>='MButts@afs.net'
                  MVIN<2,-1>='MMcKay@afs.net'
                  MVIN<4>='AFS'
                  MVIN<5>=SUBJ
                  MVIN<6>=TEXT
*                 CALL SENDMAIL(MVIN,MVOUT)
* Above Line commented out on 04/23/04 per Scott Matthews
* Scott and Chad Hebert said that they don't do anything with these
               END
            END
            RETURN
         CASE QI='X'
            RETURN
         CASE QI='EX'
            RETURN
         CASE QI=1
            GOSUB 100
            IF BACK.FLAG THEN RETURN
         CASE QI=2
            GOSUB 200
            IF BACK.FLAG THEN GOSUB 100
            IF BACK.FLAG THEN RETURN
         CASE 1
      END CASE
      GO 5000


CALCULATE.TOTAL:***
      PCVIN=''
      PCVOUT=''
      PCVIN<1>='BOTH'
      PCVIN<2>=CH.NUM
      PCVIN<3>=ZIP.ARR<1>
      PCVIN<4>=1
      PCVIN<5>='FB.2.1.TL.ROUTE'
      PCVIN<6>='TL SURVEY ROUTING'
      PCVIN<8>=CLIENT.ID                 ; * JMK01
      PCVIN<9>=CARRIER.ID                ; * JMK01
      CALL PCMILER.BETA(PCVIN,PCVOUT,F.PCIN,F.PCOUT,F.MILEAGE)
      ZIP.ARR<7>=PCVOUT<4>
      TOTAL.MILES=0

*** IF USER = "NPRATT" THEN DEBUG

      FOR X=1 TO 10 UNTIL ZIP.ARR<1,X>=''
         ZIP.ARR<7,X> = OCONV(ZIP.ARR<7,X>,'MR0')
         MILES = ZIP.ARR<7,X>
         TOTAL.MILES+= MILES
      NEXT X
      IF FP.CO='00002' THEN              ; * JMK02
         TL.BILL.MILES=TOTAL.MILES       ; * JMK02
      END                                ; * JMK02
      RETURN

PRINT.CC:***
      PRINT @(0,0):@(-4):'Characters: ':CC'R#4':
      RETURN


FB.2.1.ZIP:

*
* Initialize Variables
*

      Z.LN=0
      GOSUB Z.DISPLAY.HEADINGS

      Z.PAGE=1
      GOSUB Z.9000

************************************************************************
* Enter zip code line number
************************************************************************
*
Z.100:
*

      IF Z.MODE = 'INPUT' THEN
         Z.LN += 1
         QI = Z.LN
         IF Z.LN GT Z.STOP THEN
            Z.PAGE += 1
            GOSUB Z.9000
         END
      END ELSE
         HELP = "Enter Line Num. ''=End. 'B'=Back. 'F'=Forward page. 'EX'=Exit."
         CALL GEN.IN(0,22,'Enter line number. ###','',Q,0,3,'','',0,-3,22,0,QI,HELP,0,23)
      END
      QI = OCONV(QI,'MCU')
      BACK.FLAG=0
      BEGIN CASE
         CASE QI = 'B'
            Z.PAGE -= 1
            IF Z.PAGE = 0 THEN Z.PAGE=1
            GOSUB Z.9000
         CASE QI = 'F'
            Z.PAGE += 1
            GOSUB Z.9000
         CASE QI = ''
            GOTO Z.9900
         CASE QI = 'X'
            BACK.FLAG=1
            RETURN
         CASE QI = 'EX'
            RELEASE
            RETURN
         CASE NUM(QI) AND Z.INQUIRE
            CALL ELINE('Cannot access detail in inquiry.')
         CASE NUM(QI)
            Z.SEL = QI
            IF IN.OUT='I' OR IN.OUT='T' THEN
               IF ZIP.ARR<1,Z.SEL-1>=DEST.ZIP AND DEST.ZIP#'' AND ZIP.ARR<1,Z.SEL>='' THEN
                  Z.MODE='EDIT'
                  GO Z.100
               END
            END
            IF Z.SEL>1 & CL.DIV.FLAG='Y' & ZIP.ARR<1,Z.SEL>='' & IN.OUT='I' THEN
               ZIP.ARR<1,Z.SEL>=DEST.ZIP
            END
            IF Z.SEL>1 & CL.DIV.FLAG='Y' & ZIP.ARR<1,Z.SEL>='' & IN.OUT='T' THEN
               ZIP.ARR<1,Z.SEL>=DEST.ZIP
            END
            IF Z.SEL=1 & CL.DIV.FLAG='Y' & ZIP.ARR<1,Z.SEL>='' & IN.OUT='O' THEN
               ZIP.ARR<1,Z.SEL>=ORIG.ZIP
            END
            GOSUB Z.8000
            BEGIN CASE
               CASE QI = '' & Z.OPT='V'
                  RETURN
               CASE QI = 'X'
                  RETURN
               CASE QI = 'EX'   ;* NPR99
                  STOP          ;* NPR99
               CASE Z.LN + 1 > 50 AND Z.MODE = 'INPUT'
                  Z.MODE = 'EDIT'
               CASE 1
                  NULL
            END CASE
      END CASE

      GOTO Z.100


************************************************************************
************************************************************************
*INTERNAL SUBROUTINES
************************************************************************
************************************************************************

************************************************************************
* Enter zip codes
************************************************************************
*
Z.8000:
*

      IF Z.SEL LT Z.START ! Z.SEL GT Z.STOP THEN
         CALL ELINE('Invalid entry.')
         RETURN
      END

      GOSUB Z.9100

*
Z.8010:
*

      HELP = "Enter Zip Code. "
      IF Z.OPT = 'V' THEN
         MASK = SPACE(5)
         HELP := "''=End. [X]=Back. [EX]=Exit."
      END ELSE
         IF CL.DIV.FLAG='Y' THEN
            HELP := "''=Accept [D]el [I]ns [E]dit [1]=End [S]rch [X]=Back [EX]it"
         END ELSE
            HELP := "''=Accept [D]el [I]ns [E]dit [S]rch [X]=Back [EX]it"
         END
         MASK = ZIP.ARR<1,Z.SEL>'L#6'
      END


      TEMP.ZIP.LEN = CL.ZIP.FLAG
      IF CL.ZIP.FLAG='C' THEN TEMP.ZIP.LEN=6
      CALL GEN.IN(3,Z.LINE,MASK,'',Q,0,TEMP.ZIP.LEN,'','',2,-TEMP.ZIP.LEN,Z.LINE,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      BACK.FLAG=0
      BEGIN CASE
         CASE QI = 'EX'
            RELEASE
            STOP ;* NPR99
*NPR99            RETURN
         CASE QI = 'X'
            IF Z.OPT NE 'V' THEN CRT @(3,Z.LINE):ZIP.ARR<1,Z.SEL>'L#6'
            Z.SEL=Z.SEL-1
            IF Z.SEL < 1 THEN
               BACK.FLAG=1
               RETURN
            END
            GOSUB Z.9100
            GO Z.8010
            RETURN
         CASE QI = 'D' & Z.OPT NE 'V'
            FOR ATT=1 TO 7
               DEL ZIP.ARR<ATT,Z.SEL>
            NEXT ATT
            Z.HLD=Z.SEL
            GOSUB CALCULATE.TOTAL
            GOSUB Z.9000
            Z.SEL=Z.HLD
            GOSUB Z.9100
            GO Z.8010
            RETURN
         CASE QI = 'I' & Z.OPT NE 'V'
            FOR ATT=1 TO 7
               INS '' BEFORE ZIP.ARR<ATT,Z.SEL>
            NEXT ATT
            ZIP.ARR<7,Z.SEL>=0
            Z.HLD=Z.SEL
            GOSUB Z.9000
            Z.SEL=Z.HLD
            GOSUB Z.9100
            GO Z.8010
            RETURN
         CASE QI='.' ! QI='1'
            FOR ATT=1 TO 7
               DEL ZIP.ARR<ATT,Z.SEL>
            NEXT ATT
            Z.HLD=Z.SEL
            GOSUB CALCULATE.TOTAL
            GOSUB Z.9000
            Z.SEL=Z.HLD
            GOSUB Z.9100
            Z.MODE='EDIT'
            GO Z.8010
            RETURN
         CASE QI = 'E' & Z.OPT NE 'V'
            Z.MODE = 'EDIT'
            CRT @(3,Z.LINE):ZIP.ARR<1,Z.SEL>'L#6'
            RETURN
         CASE QI = '' & Z.OPT NE 'V'
            Q = ZIP.ARR<1,Z.SEL>
            IF Q = '' & Z.MODE = 'INPUT' THEN
               Z.MODE = 'EDIT'
               RETURN
            END
            IF Q = '' THEN RETURN
         CASE QI = ''
            Z.X = DCOUNT(ZIP.ARR<1>,CHAR(253))
            FOR Z.I = 1 TO Z.X
               IF ZIP.ARR<4,Z.I> NE '*' THEN
                  CALL ELINE('All zip codes have not been verified.')
                  GOTO Z.8010
               END
            NEXT Z.I
            RETURN
         CASE Z.OPT = 'V'
            IF QI # ZIP.ARR<1,Z.SEL> THEN
               CALL ELINE('INVALID ZIP CODE.')
               GOTO Z.8010
            END
            ZIP.ARR<4,Z.SEL> = '*'
         CASE QI='S'
            HELP="Enter city and state for zip code search. Separate with comma(,)."
            CALL GEN.IN(10,Z.LINE,STR('-',39),'',Q,0,40,'','',1,-39,Z.LINE,0,QI,HELP,0,23)
            CALL ZIPS.DISPLAY(Q,'ZIPS.CODES','ZIPS.CITY','1,2',Z.ITEM.LIST)
            GOSUB Z.DISPLAY.HEADINGS
            GOSUB Z.9000
            HELP='S'
            BEGIN CASE
               CASE DCOUNT(Z.ITEM.LIST<1>,@VM) GT 1 OR Z.ITEM.LIST=''
                  GOSUB Z.DISPLAY.HEADINGS
                  GOSUB Z.9000
               CASE Z.ITEM.LIST NE ''
                  BEGIN CASE
                     CASE Z.SEL=1
                        IF Z.ITEM.LIST<1,1>#ORIG.ZIP THEN
                           CALL ELINE('Cannot change origin zip code here')
                        END
                     CASE Z.SEL=DCOUNT(ZIP.ARR<1>,@VM)
                        IF Z.ITEM.LIST<1,1>#DEST.ZIP THEN
                           CALL ELINE('Cannot change destination zip code here')
                        END
                     CASE 1
                  END CASE
                  ZIP.ARR<1,Z.SEL>=Z.ITEM.LIST<1,1>
                  Z.CODE=ZIP.ARR<1,Z.SEL>
                  GOSUB Z.DISPLAY.HEADINGS
                  GOSUB Z.8090
                  GOSUB CALCULATE.TOTAL
                  GOSUB Z.9000
            END CASE
         CASE NUM(QI) AND LEN(QI) < 6
            ZIP.ARR<1,Z.SEL> = Q
         CASE CL.ZIP.FLAG='C' AND QI MATCHES '1A1N1A1N1A1N'
            ZIP.ARR<1,Z.SEL> = Q
         CASE 1
            CALL ELINE('INVALID ZIP CODE.')
            GOTO Z.8010
      END CASE

      IF Z.OPT NE 'V' THEN
         Z.CODE = ZIP.ARR<1,Z.SEL>
         GOSUB Z.8090
         GOSUB CALCULATE.TOTAL
         GOSUB Z.DISPLAY.HEADINGS
         GOSUB Z.9000
         IF Z.ACK = 'ERR' THEN GOTO Z.8010
         CRT @(3,Z.LINE):ZIP.ARR<1,Z.SEL>'L#6'
      END

*
Z.CHECK.99999:
*

      IF ZIP.ARR<1,Z.SEL>='99999' THEN
         HELP="Enter different city, state. ''=Accept. 'X'=Back. 'EX'=Stop."
         MASK=Z.CITY:', ':Z.STATE
         CALL GEN.IN(10,Z.LINE,MASK'L#15','',Q,0,15,'','',2,-15,Z.LINE,0,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI='X'
               CRT @(10,Z.LINE):@(-4)
               GOTO Z.8010
            CASE QI='EX'
               RETURN
            CASE QI=''
               Q=MASK
         END CASE
         Z.X=0
         Z.X=INDEX(Q,',',1)
         IF Z.X THEN
            Z.CITY=FIELD(Q,',',1)
            Z.CITY=OCONV(Z.CITY,'MCT')
            Z.STATE=FIELD(Q,',',2)
            Z.STATE=OCONV(Z.STATE,'MCU')
         END ELSE
            CALL ELINE('Invalid entry.')
            GOTO Z.CHECK.99999
         END
      END


      RETURN
************************************************************************

************************************************************************
* Display headings
************************************************************************
*
Z.DISPLAY.HEADINGS:
*

      CRT @(0,0):@(-3)
      CRT @(0,0):"ROUTE INFORMATION"
      CRT @(0,2):"   Orig      : ":ORIG'L#24'
      CRT @(0,3):"   Dest      : ":DEST'L#24'
      CRT @(0,4):"1) Bill Miles: ":TL.BILL.MILES 'R#6'
      CRT @(0,5):"2) Route List"
      CRT @(0,6):"LN Zip                      Miles"
      CRT @(0,7):"-- ------ --------------- --------"
      FOR X = 1 TO 10
         CRT @(0,X+7):X'R%2'
      NEXT X
      CRT @(26,18):"========"
      CRT @(0,19):"TOTAL"

      RETURN
************************************************************************

************************************************************************
* Check for Valid Zip Code
************************************************************************
*
Z.8090:
*

      Z.CITY='' ; Z.STATE=''
      CALL FB.READ.ZIP( Z.CODE, Z.CITY, Z.STATE )
      IF Z.CITY='' AND NOT(Z.CODE MATCHES '1A1N1A1N1A1N') THEN
         Z.ACK='ERR'
         RETURN
      END
      ZIP.ARR<2,Z.SEL> = Z.CITY
      ZIP.ARR<3,Z.SEL> = Z.STATE
      CRT @(10,Z.LINE) : ZIP.ARR<2,Z.SEL> : ', ' : ZIP.ARR<3,Z.SEL>:
      CRT @(26,Z.LINE):ZIP.ARR<7,Z.SEL>'R#8':@(-4):
      Z.ACK = ''

      RETURN
************************************************************************

************************************************************************
* Print Page
************************************************************************
*
Z.9000:
*

      Z.START = (Z.PAGE * 9) - 8
      Z.STOP = Z.START + 8
      FOR Z.SEL = Z.START TO Z.STOP
         GOSUB Z.9100
         IF ZIP.ARR<1,Z.SEL> = '' THEN
            CRT @(0,Z.LINE):Z.SEL'R%2':@(-4):
         END ELSE
            CRT @(0,Z.LINE):Z.SEL'R%2':' ':
            CRT @(3,Z.LINE):ZIP.ARR<1,Z.SEL> 'L#6':' ':
            IF ZIP.ARR<2,Z.SEL> = '' AND ZIP.ARR<3,Z.SEL> = '' THEN
               CRT @(26,Z.LINE):ZIP.ARR<7,Z.SEL>'R#8':@(-4):
               Z.CODE = ZIP.ARR<1,Z.SEL>
               GOSUB Z.8090
            END ELSE
               CRT @(10,Z.LINE):ZIP.ARR<2,Z.SEL>:', ':ZIP.ARR<3,Z.SEL>:
               CRT @(26,Z.LINE):ZIP.ARR<7,Z.SEL>'R#8':@(-4):
            END
         END
      NEXT Z.SEL
      CRT @(26,19):TOTAL.MILES'R#8':@(-4):         ; * Total Miles

      RETURN
************************************************************************

************************************************************************
* Calculate Line
************************************************************************
*
Z.9100:
*

      Z.X = REM(Z.SEL,9)
      IF Z.X = 0 THEN Z.X = 9
      Z.LINE = 7 + Z.X

      RETURN
************************************************************************

************************************************************************
* Compress zip codes and return
************************************************************************
*
Z.9900:
*

      IF NOT(Z.INQUIRE) THEN
         TIMES = DCOUNT(ZIP.ARR<1>,CHAR(253))
         Z.NEW.ZIP.ARR=''
         Z.LAST.ZIP='FIRST'
         FOR Z.I = 1 TO TIMES
            IF ZIP.ARR<1,Z.I>#'' THEN
               IF Z.LAST.ZIP=ZIP.ARR<1,Z.I> AND Z.LAST.ZIP#'FIRST' ELSE
                  FOR Z.X = 1 TO 7
                     Z.NEW.ZIP.ARR<Z.X,-1>=ZIP.ARR<Z.X,Z.I>
                  NEXT Z.X

*       Z.LAST.ZIP=ZIP.ARR<1,Z.I> ; * Allow Dups Per Paul

               END
            END
         NEXT Z.I
      END
      ZIP.ARR=Z.NEW.ZIP.ARR

      RETURN
************************************************************************
