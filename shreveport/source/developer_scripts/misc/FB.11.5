* Program to accept or deny pro numbers TL from FP
*
* Freight Payments
*
* AUTHOR: J. Michael Kerbow
* DATE: 02/25/2004
*
* 031404 - JMK01 - ADD CITY AND STATE STANDARD
* 052604 - JMK02 - VERIFY UNLOCKED RECORDS WHEN AT PROMPTS
* 032609 - JMK03 - C090422 - Grant ability to run SS reports
* 101309 - JMK04 - Shane Oneal SS Access
* 020810 - JMK05 - C100119 - Grant access to truckload blocking screens for Peter Marquardt
* 031014 - JMK06 - SysAid#8860 - FBBP FB.11.5 variable Q not assigned at line 145
* 063016 - GRB01 - SysAid 25575 - add operator table
      PROMPT ''
      PROG.NAME='FB.11.5'
*
* Open files.
*
      OPEN '','FB.TAG.BLOCK' TO F.TAG.BLOCK ELSE
         CALL OPEN.ABORT("FB.TAG.BLOCK",PROG.NAME)
      END
      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         CALL OPEN.ABORT("CLIENTS",PROG.NAME)
      END
      OPEN '','CARRIERS' TO F.CARRIERS ELSE
         CALL OPEN.ABORT("CARRIERS",PROG.NAME)
      END
      OPEN '','SCAC.XREF' TO F.SCAC.XREF ELSE
         CALL OPEN.ABORT("SCAC.XREF",PROG.NAME)
      END
      OPEN '','FB.BILLS.HIST,00000' TO F.BILLS.HIST ELSE
         CALL OPEN.ABORT("FB.BILLS.HIST,0000",PROG.NAME)
      END
      OPEN '','FB.BILLS.CRX' TO F.BILLS.CRX ELSE
         CALL OPEN.ABORT("FB.BILLS.CRX",PROG.NAME)
      END
      OPEN '','BCTRL' TO F.BCTRL ELSE
         CALL OPEN.ABORT("BCTRL",PROG.NAME)
      END
      OPEN '','OPERATOR' TO F.OP ELSE CALL OPEN.ABORT("OPERATOR",PROG.NAME)      ; * GRB01 
*
* CHECK FOR PROPER USER
* Begin GRB01
      OK=0
      CALL GET.USER(USER)
      	READV OP.FLG FROM F.OP,USER,14 ELSE
         OP.FLG = "N"
      END
      IF OP.FLG = "Y" THEN
      **** IF USER='AMY' THEN OK=1
      **** IF USER='DAVID' THEN OK=1
      **** IF USER='GINA' THEN OK=1
      **** IF USER='SCROSS' THEN OK=1
      **** IF USER='KAREN' THEN OK=1
      **** IF USER='SONEAL' THEN OK=1         ; * JMK03 ; * JMK04
      **** IF USER='GBINO' THEN OK=1
      **** IF USER='PMARQUARDT' THEN OK=1 ; * JMK05
      **** IF USER='SMATTHEWS' THEN OK=1      ; * MATT, PER S.MATTHEWS 12/15/05
      **** IF USER='THOOD' THEN OK=1          ; * MATT, PER S.MATTHEWS 9/25/06
      **** IF USER='ABYRD' THEN OK=1          ; * MATT, PER S.MATTHEWS 9/25/06
      **** IF USER='LJAY' THEN OK=1           ; * Per Scott Matthews. DRF 11/03/06

*
  ****    IF OK=1 ELSE
END ELSE
	       CALL ELINE('Unauthorized user. ACCESS DENIED. Call  David for help.')
         GOTO 9999
      END
* End GRB01
* Initialize variables.
*
10:   PROG.DESC='TRAFFIC LANE VERIFICATION'
      PACK.NAME='Freight Payment'
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
       UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.11.5' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
       CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
      TODAY=DATE()
      PAGE.LEN=15
      MODE=''
      FIND.LOCKED.NAME=''
      AMT=0
      PU.DT=''
      DEL.DT=''
      CARRIER=''
      CARRIER.REC=''
      CLIENT=''
      CLIENT.REC=''
      ORIG.ZIP=''
      ORIG.CITY=''
      ORIG.STATE=''
      DEST.ZIP=''
      DEST.CITY=''
      DEST.STATE=''
      TOP.ORIG.ZIP=''
      TOP.ORIG.CITY=''
      TOP.ORIG.STATE=''
      TOP.DEST.ZIP=''
      TOP.DEST.CITY=''
      TOP.DEST.STATE=''
      WEIGHT=''
      MILES=''
      LOAD.NO=''
      INV.NO=''
      DEPT=''
      CARRIER.CHG=''
      TAG.CHG.PCT='.10'
      GOSUB 7000                         ; * DISPLAY SCREEN
20:   HELP = "Enter the Origination Zip Code. [S]=Search. [X]=Back. [EX]=Exit."
      CC=0
      VIN=CC                             ; * Starting Zip Character Count
      VIN<2>=12
      VOUT=''
      TOP.ORIG.ZIP=''
      ZIP.LEN='C'
      BACK.FLAG=0
      TOP.ORIG.CITY=''
      TOP.ORIG.STATE=''
      CALL FB.2.1.CSZ.NEW(VIN,VOUT,4,TOP.ORIG.ZIP,HELP,ZIP.LEN,BACK.FLAG,TOP.ORIG.CITY,TOP.ORIG.STATE)
      IF HELP='S' THEN
         GOSUB 7000
      END
      IF BACK.FLAG THEN STOP
      CC+=VOUT<1>
      CVIN=''                            ; * JMK03
      CVOUT=''                           ; * JMK03
      CVIN<1>=TOP.ORIG.CITY              ; * JMK03
      CVIN<2>=TOP.ORIG.STATE             ; * JMK03
      CALL SET.CITY(CVIN,CVOUT)          ; * JMK03
      TOP.ORIG.CITY=CVOUT<1>             ; * JMK03
      TOP.ORIG.STATE=CVOUT<2>            ; * JMK03
      CRT @(12,04):@(-4):TOP.ORIG.CITY
      CRT @(54,04):TOP.ORIG.STATE
*
*     CLIENT=Q                           ; * JMK06

30:   HELP = "Enter the Destination Zip Code. [S]=Search. [X]=Back. [EX]=Exit."
      CC=0
      VIN=CC                             ; * Starting Zip Character Count
      VIN<2>=12
      VOUT=''
      TOP.DEST.ZIP=''
      ZIP.LEN='C'
      BACK.FLAG=0
      TOP.DEST.CITY=''
      TOP.DEST.STATE=''
      CALL FB.2.1.CSZ.NEW(VIN,VOUT,5,TOP.DEST.ZIP,HELP,ZIP.LEN,BACK.FLAG,TOP.DEST.CITY,TOP.DEST.STATE)
      CC+=VOUT<1>
      IF HELP='S' OR BACK.FLAG THEN
         IF BACK.FLAG THEN
            TOP.ORIG.CITY=''
            TOP.ORIG.STATE=''
         END
         GOSUB 7000
      END
      IF BACK.FLAG THEN
         GOTO 20
      END
      CVIN=''                            ; * JMK03
      CVOUT=''                           ; * JMK03
      CVIN<1>=TOP.DEST.CITY              ; * JMK03
      CVIN<2>=TOP.DEST.STATE             ; * JMK03
      CALL SET.CITY(CVIN,CVOUT)          ; * JMK03
      TOP.DEST.CITY=CVOUT<1>             ; * JMK03
      TOP.DEST.STATE=CVOUT<2>            ; * JMK03
      CRT @(12,05):@(-4):TOP.DEST.CITY
      CRT @(54,05):TOP.DEST.STATE
*
* GET RECORD
*
      TAG.ID=TOP.ORIG.CITY:'*':TOP.ORIG.STATE:'*':TOP.DEST.CITY:'*':TOP.DEST.STATE
      TAG.ID=CHANGE(TAG.ID,' ','_')
      READU TAG.REC FROM F.TAG.BLOCK,TAG.ID LOCKED
         RELEASE F.TAG.BLOCK,TAG.ID      ; * JMK02
         FIND.LOCKED.NAME = 'FB.TAG.BLOCK,':TAG.ID
         GOSUB FIND.LOCKED
         CALL ELINE(FL.USER:' has ':FIND.LOCKED.NAME:' locked. Press enter to re-enter.')
         TOP.ORIG.ZIP=''
         TOP.ORIG.CITY=''
         TOP.ORIG.STATE=''
         TOP.DEST.ZIP=''
         TOP.DEST.CITY=''
         TOP.DEST.STATE=''
         GOSUB 7000                      ; * JMK02
         GOTO 20
      END ELSE
         RELEASE F.TAG.BLOCK,TAG.ID      ; * JMK02
         CALL ELINE('No Information for this Origin and Destination.')
         TOP.ORIG.ZIP=''
         TOP.ORIG.CITY=''
         TOP.ORIG.STATE=''
         TOP.DEST.ZIP=''
         TOP.DEST.CITY=''
         TOP.DEST.STATE=''
         GOSUB 7000                      ; * JMK02
         GO 20
      END
      OLD.TAG.REC=TAG.REC

*
* First page of codes.
*
      IF TAG.REC#'' THEN
         FP.PAGE=1
         GOSUB 10000
      END
*
* Enter selection code.
*
100:  HELP="Enter line number to confirm [B]ack [T]op ''=Page [E]nd [EX]it."
      CALL GEN.IN(0,22,"Enter line number please. ###",'',Q,0,3,'','',0,-3,22,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='' OR QI='+'
            IF TAG.REC<16,FP.PAGE*PAGE.LEN>='' THEN
               CALL ELINE('Error! You are on the last page!')
               GO 100
            END
            FP.PAGE=FP.PAGE+1
            GOSUB 10000
         CASE QI='B' OR QI='-'
            FP.PAGE=FP.PAGE-1
            IF FP.PAGE=0 THEN FP.PAGE=1
            GOSUB 10000
         CASE QI='T'
            PAGE=1
            GOSUB 10000
         CASE QI='EX'
            IF OLD.TAG.REC#TAG.REC THEN
               GOSUB ASK.FOR.CONFIRMATION
               IF NOT(CONFIRMATION) THEN GOTO 100
            END
            GOTO 9999
         CASE NUM(QI)
            SEL=QI
            IF TAG.REC<16,SEL>='' THEN
               CALL ELINE('Invalid selection.')
               GOTO 100
            END
            TL.ACT=TAG.REC<21,SEL>
            ROW=6+REM(SEL,PAGE.LEN)
            GOSUB 8000
            TAG.REC<21,SEL>=TL.ACT
            TAG.REC<22,SEL>=USER
            TAG.REC<23,SEL>=TIME()
            TAG.REC<24,SEL>=TODAY
            TAG.REC<25,SEL>=LOAD.NO
            CRT @(0,22):@(-4):
         CASE QI='E'
            NVAL=DCOUNT(TAG.REC<21>,@VM)
            FOR VAL=1 TO NVAL
               TL.ACT=TAG.REC<21,VAL>
               IF TL.ACT='A' THEN
                  LOAD.NO=TAG.REC<25,VAL>
                  LOCATE(LOAD.NO,TAG.REC,10;LPOS) THEN
                     PRO.ID=TAG.REC<16,VAL>
                     PRO.DATE=TAG.REC<19,VAL>
                     PRO.AMT=TAG.REC<20,VAL>
                     CLIENT=TAG.REC<5,LPOS>
                     ORIG.ZIP=TAG.REC<6,LPOS>
                     DEST.ZIP=TAG.REC<7,LPOS>
                     GOSUB WRITE.REJECT.BILL
                     FOR ATT=1 TO 15
                        DEL TAG.REC<ATT,LPOS>
                     NEXT ATT
                  END
                  FOR ATT=16 TO 25
                     DEL TAG.REC<ATT,VAL>
                  NEXT ATT
                  VAL=VAL-1
                  NVAL=NVAL-1
               END
            NEXT VAL
            WRITE TAG.REC ON F.TAG.BLOCK,TAG.ID
            RELEASE F.TAG.BLOCK,TAG.ID
            CRT @(-1):
            GOTO 10
      END CASE
      GOTO 100
*
*-----------------------------------------------------------------------
* INTERNAL SUBROUTINES
*-----------------------------------------------------------------------
*
7000:* INITIAL SCREEN
*
      CRT @(12,03):"City":@(54,03):"State/Province":
      CRT @(12,04):@(-4):TOP.ORIG.CITY:@(54,04):TOP.ORIG.STATE
      CRT @(00,04):"Origin"'R#11 ':@(00,05):"Destination"'R#11 ':
      CRT @(12,05):@(-4):TOP.DEST.CITY:@(54,05):TOP.DEST.STATE
      RETURN
*
* EDIT REC
*
8000: HELP="Enter [A]ccept, [D]eny. [X]-Back. [EX]-Exit."
*
      IF TL.ACT='' THEN MASK=STR('#',2) ELSE MASK=TL.ACT'L#2'
      CALL GEN.IN(66,ROW,MASK,'',Q,0,2,'','',2,66,ROW,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BACK.FLAG=0
      BEGIN CASE
         CASE QI='X'
            CRT @(66,ROW):TL.ACT'L#2'
            BACK.FLAG=1
            RETURN
         CASE QI='EX'
            IF OLD.TAG.REC#TAG.REC THEN
               GOSUB ASK.FOR.CONFIRMATION
               IF NOT(CONFIRMATION) THEN GOTO 8000
            END
            GOTO 9999
         CASE QI='A'
            TL.ACT=QI
            LOAD.SCREEN=0
            GOSUB 8100
         CASE QI='D'
            TL.ACT=QI
            LOAD.SCREEN=0
            LOAD.NO=''
         CASE QI=''
         CASE 1
            GO 8100
      END CASE
      CRT @(66,ROW):TL.ACT'L#2':
      CRT @(73,ROW):LOAD.NO 'L#6':
      RETURN
8100:**
      IF LOAD.SCREEN THEN
         HELP="Enter load number to assign to pro [EX]it."
      END ELSE
         HELP="Enter load number to assign to pro [L]ist [EX]it."
      END
      CALL GEN.IN(0,22,"Enter load number please. ######",'',Q,0,6,'','',0,-6,22,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'
            IF OLD.TAG.REC#TAG.REC THEN
               GOSUB ASK.FOR.CONFIRMATION
               IF NOT(CONFIRMATION) THEN GOTO 8100
            END
            GOTO 9999
         CASE QI='L'
            TL.PAGE=1
            GOSUB 9000
            LOAD.SCREEN=1
            GO 8100
         CASE NUM(QI)
            IF LOAD.SCREEN THEN
               GOSUB 7000
               GOSUB 10000
            END
            LOCATE(QI,TAG.REC,10;LPOS) ELSE
               CALL ELINE('Load number is not defined as active in this traffic lane.')
               GO 8100
            END
            LOAD.NO=QI
            RETURN
      END CASE
      GOTO 8100

9000: CRT @(00,6):@(-3):
      CRT @(00,6):"Ln"'R#3 ':
      CRT @(04,6):"Amount"'L#8 ':
      CRT @(13,6):"PU Date"'L#8 ':
      CRT @(22,6):"Del Date"'L#8 ':
      CRT @(31,6):"Carrier"'L#14 ':
      CRT @(46,6):"Client"'L#14 ':
      CRT @(61,6):"Pro"'L#12 ':
      CRT @(74,6):"Load"'L#5 ':

      START=(TL.PAGE*PAGE.LEN)-14
      STOP=START+14
      FOR I=START TO STOP STEP 1
         ROW=6+REM(I,PAGE.LEN)
         IF ROW=6 THEN ROW=21
         DSP.AMT=TAG.REC<1,I>
         DSP.PU.DT=TAG.REC<2,I>
         DSP.DEL.DT=TAG.REC<3,I>
         DSP.CARRIER=TAG.REC<4,I>
         READV DSP.CARRIER FROM F.CARRIERS,DSP.CARRIER,1 ELSE NULL
         DSP.CLIENT=TAG.REC<5,I>
         READV DSP.CLIENT FROM F.CLIENTS,DSP.CLIENT,2 ELSE NULL
         DSP.WEIGHT=TAG.REC<8,I>
         DSP.LOAD=TAG.REC<10,I>
         CRT @(00,ROW):I'R#3 ':
         IF DSP.AMT+0#0 THEN
            CRT @(04,ROW):DSP.AMT'L26#10 ':
         END
         CRT @(15,ROW):DSP.PU.DT'D2/':
         CRT @(24,ROW):DSP.DEL.DT'D2/':
         CRT @(33,ROW):DSP.CARRIER'L#14 ':
         CRT @(48,ROW):DSP.CLIENT'L#14 ':
         CRT @(62,ROW):DSP.WEIGHT'R#8 ':
         CRT @(71,ROW):DSP.LOAD'L#6':
      NEXT I
      RETURN
*
10000:** DISPLAY INITIAL SCREEN **
*
      CRT @(00,6):@(-3):
      CRT @(00,6):"Ln"'R#3 ':
      CRT @(04,6):"Carrier"'L#20 ':
      CRT @(25,6):"Pro Number"'L#12 ':
      CRT @(38,6):"FP User"'L#15 ':
      CRT @(54,6):"FP Amount"'L#10 ':
      CRT @(66,6):"Action"'L#6 ':
      CRT @(73,6):"Load"'L#6':
*
      START=(FP.PAGE*PAGE.LEN)-14
      STOP=START+14
      FOR I=START TO STOP STEP 1
         DSP.ROW=6+REM(I,PAGE.LEN)
         IF DSP.ROW=6 THEN DSP.ROW=21
         DSP.FP.CARRIER=FIELD(TAG.REC<16,I>,'*',1)
         READV DSP.CARRIER FROM F.CARRIERS,DSP.FP.CARRIER,1 ELSE DSP.CARRIER=DSP.FP.CARRIER
         DSP.FP.PRO=FIELD(TAG.REC<16,I>,'*',2)
         DSP.FP.USER=TAG.REC<17,I>
         READV DSP.USER FROM F.BCTRL,DSP.FP.USER,13 ELSE DSP.USER=DSP.FP.USER
         DSP.FP.AMT=TAG.REC<20,I>
         DSP.TL.ACT=TAG.REC<21,I>
         DSP.LOAD.NO=TAG.REC<25,I>
         CRT @(00,DSP.ROW):I'R#3 ':
         CRT @(04,DSP.ROW):DSP.CARRIER'L#20 ':
         CRT @(25,DSP.ROW):DSP.FP.PRO'L#12 ':
         CRT @(38,DSP.ROW):DSP.USER'L#15 ':
         IF DSP.FP.AMT+0#0 THEN
            CRT @(54,DSP.ROW):DSP.FP.AMT'L26#10 ':
         END
         CRT @(66,DSP.ROW):DSP.TL.ACT'L#2 ':
         CRT @(73,DSP.ROW):DSP.LOAD.NO'L#6':
      NEXT I
      RETURN
*
* FIND LOCKED SUBROUTINE
*
FIND.LOCKED:

      STMT = 'LIST.READU EVERY'
      EXECUTE STMT CAPTURING OUTPUT
      FL.LEN = DCOUNT(OUTPUT,@AM)
      FL.USER = 'Someone'
      FOUND = 0

      FOR X = 1 TO FL.LEN UNTIL FOUND
         T.USER = OCONV(TRIM(OUTPUT<X>[44,9]),'MCU')
         T.FILE = TRIM(OUTPUT<X>[53,17])
         IF T.FILE = FIND.LOCKED.NAME THEN
            FL.USER = T.USER
            FOUND = 1
         END
      NEXT


      RETURN
*
ASK.FOR.CONFIRMATION:***
      HELP='Enter <Y>es to exit without saving or <N>o to return to program'
      CALL GEN.IN(0,22,'Are You Sure You Want To Exit: N','',Q,0,1,'','',2,-1,22,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='N' OR QI=''
            CONFIRMATION=0
         CASE QI='Y'
            CONFIRMATION=1
         CASE 1
            CALL ELINE('Invalid Entry')
            GOTO ASK.FOR.CONFIRMATION
      END CASE
      CRT @(0,22):@(-3):
      RETURN
*
9999:* EXIT PROGRAM
      STOP
*
WRITE.REJECT.BILL:*
*
      REJ.REC=''
      REJ.REC<1>=PRO.DATE
      REJ.REC<7>=PRO.AMT
      REJ.REC<8>=PRO.AMT
      REJ.REC<10>=0
      REJ.REC<11>=0
      REJ.REC<12>=0
      REJ.REC<20>=ORIG.ZIP
      REJ.REC<21>=6
      REJ.REC<24>=0
      REJ.REC<25>=DEST.ZIP
      REJ.REC<34>=0
      REJ.REC<35>=0
      REJ.REC<36>=0
      REJ.REC<39>='R'
      REJ.REC<47>='N'
      REJ.REC<49>=0
      REJ.REC<53>=USER
      REJ.REC<61>='Truckload Transportation Load ':LOAD.NO:'. Do Not Pay!'
      REJ.REC<62,1>=USER
      REJ.REC<62,2>=TODAY
      REJ.REC<66>='N'
      REJ.REC<84>=USER
      REJ.REC<85>=TIME()
      REJ.REC<86>=TODAY
      REJ.REC<123>=0
      REJ.REC<148>=0
      WRITE REJ.REC ON F.BILLS.HIST,PRO.ID
      CRX.REC=REJ.REC
      CRX.REC<1>=CLIENT
      WRITE CRX.REC ON F.BILLS.CRX,PRO.ID
*NPR00 012510       CALL UPD.CRX.DF.FILE(PROG.NAME,"",PRO.ID,CRX.REC)
      RETURN
