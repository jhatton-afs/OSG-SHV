*======================================================================
* SUBROUTINE : PRINT.AUDIT.TABLE
*
* PROGRAMMER : Jim T. Row
*
*
*======================================================================
*   COPYRIGHT (C) 1996 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED
*       ----------------------------------------------------
*  This program is sole property of AFS Logistics, LLC (AUTOMATED
*  FREIGHT SYSTEMS) and may not be used, copied, or modified without
*  the express written consent of Brian Barker of AFS Logistics, LLC.
*======================================================================

SUBROUTINE PRINT.AUDIT.TABLE(VIN, F.AUDIT.TABLES, VOUT)
$INCLUDE FILE.DEFS INC_CLIENTS

   EQU TRUE                TO 1
   EQU FALSE               TO 0


   *
   * Line index equates - Used to index data created with
   * EXTRACT.DATA.LINE
   *
   EQU BILL.CLASS          TO  1
   EQU CONT.CLASS          TO  2
   EQU CONT.TMIN           TO  3
   EQU CONT.L5C            TO  4
   EQU CONT.O5C            TO  5
   EQU CONT.TARIFF         TO  6
   EQU LOGI.CLASS          TO 12
   EQU LOGI.PLUS           TO 14
   EQU LOGI.DISC           TO 15
   EQU LOGI.TARIFF         TO 16

   EQU MISC.CHARGE.CODES       TO 26
   EQU MISC.CHARGE.CONT.AMTS   TO 27
   EQU MISC.CHARGE.BENCH.AMTS  TO 28


   *-----------------------------------------------
   * Init Variables
   *-----------------------------------------------

   PROG.NAME = 'PRINT.AUDIT.TABLE'
   CO.NAME   = 'AFS Logistics, LLC'
   PROG.DESC = 'Audit Table Printout'

   CLASSES =50:@VM:55:@VM:60:@VM:65:@VM:70:@VM:77:@VM:85
   CLASSES:=@VM:92:@VM:100:@VM:110:@VM:125:@VM:150:@VM:175
   CLASSES:=@VM:200:@VM:250:@VM:300:@VM:400:@VM:500
   MAX.NUM.CLASSES=DCOUNT(CLASSES,@VM)

   CUR.LINE = 1
   RATE.TABLE=CLASSES<1>
   MAT CLIENT.REC = ''


   *-----------------------------------------------
   * Extract Passed Values
   *-----------------------------------------------
   TABLE.NUM         = VIN<1>
   CLIENT.ID         = VIN<2,1>'R%5'
   CLIENT.NAME       = VIN<2,2>
   CARRIER.ID        = VIN<3,1>'R%5'
   CARRIER.NAME      = VIN<3,2>
   TABLE.DESC        = VIN<5>
   EXIT.KEY          = ''

   PACK.NAME = 'TABLE :':TABLE.NUM'L#2'

    UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'PRINT.AUDIT.TABLE' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
    CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
   *-----------------------------------------------
   * Open necessary file systems.
   *-----------------------------------------------
   OPEN '','CLIENTS' TO F.CLIENTS ELSE
      CALL OPEN.ABORT("CLIENTS",PROG.NAME)
   END
   GOSUB LOAD.CLIENT.DESC

   OPEN '', 'FB.TABLES' TO F.TABLES ELSE
      CALL OPEN.ABORT("FB.TABLES", PROG.NAME)
      STOP
   END
   READ TARIFFS FROM F.TABLES,'TARIFF.DATE.XREF' ELSE
      CALL ELINE('UNABLE TO READ TARIFF LIST FROM "FB.TABLES,TARIFF.DATE.XREF"')
      STOP
   END

*   OPEN '','FB.TABLES' TO F.TABLES ELSE CALL OPEN.ABORT('FB.TABLES',PROG.NAME)
   OPEN '','FB.CUT.BACKS' TO F.CUT.BACKS ELSE
      CALL OPEN.ABORT("FB.CUT.BACKS",PROG.NAME)
   END

   *
   * Read Misc Charge Code Table from File
   *
   READ LI.CODES FROM F.TABLES,'LI.CODES' THEN
      LI.CODES<3> = ''
      LI.CODES<4> = ''
   END ELSE
      LI.CODES=''
      CALL ELINE('UNABLE TO READ "LI.CODES" FROM "FB.TABLES"')
   END
   GOSUB LOAD.RATE.TABLE


   *-----------------------------------------------
   * DISPLAY HEADER
   *-----------------------------------------------

   *
   * CONTRACT AND BENCHMARK MINIMUMS
   *
   PRINT 'Table :':VIN<1>
   PRINT
   T = RATE.TABLE<31>
   IF T='' THEN T = '(* No description has been entered for this table. *)'
   PRINT 'Description  :':T
   BEGIN CASE
      CASE RATE.TABLE<25>=''
         T='---'
      CASE RATE.TABLE<25>='Y'
         T='Yes'
      CASE RATE.TABLE<25>='N'
         T='No '
   END CASE
   PRINT 'Table Active :':T
   PRINT
   PRINT

   LINE1 ='     '
   LINE1:= '|':STR('-',13):' Contract ':STR('-',12):'|'
   IF CL.LOGISTICS = 'Y' THEN
      LINE1:= '     '
      LINE1:= '|':STR('-',9):' Logistics ':STR('-',9):'|'
   END

   LINE2 ='Bill Cls Tmin%  L5C%  O5C% AFS Tariff Name'
   LINE3 ='---- --- ----- ----- ----- ---------------'
   IF CL.LOGISTICS = 'Y' THEN
      LINE2:= '     Cls Disc% Plus% AFS Tariff Name'
      LINE3:= '     --- ----- ----- ---------------'
   END

   PRINT LINE1
   PRINT LINE2
   PRINT LINE3

   FOR CUR.LINE = 1 TO 18
      LINE = RATE.TABLE<BILL.CLASS ,CUR.LINE>'R#3':' '
      LINE:= ' '
      T=RATE.TABLE<CONT.CLASS ,CUR.LINE>
      IF T='' THEN LINE:= '---' ELSE LINE:= T'R#3'

      LINE:= ' '

      T=RATE.TABLE<CONT.TMIN,CUR.LINE>
      IF T='' THEN LINE:= '-----' ELSE LINE:= T'R26(#5)'

      LINE:= ' '

      T=RATE.TABLE<CONT.L5C,CUR.LINE>
      IF T='' THEN LINE:= '-----' ELSE LINE:= T'R26(#5)'

      LINE:= ' '

      T=RATE.TABLE<CONT.O5C,CUR.LINE>
      IF T='' THEN LINE:= '-----' ELSE LINE:= T'R26(#5)'

      LINE:= ' '

      T = RATE.TABLE<CONT.TARIFF,CUR.LINE>
      IF T='' THEN LINE:= STR('-',15) ELSE LINE:= T'L#15'

      IF CL.LOGISTICS = 'Y' THEN
         LINE:= '     '
         T = RATE.TABLE<LOGI.CLASS ,CUR.LINE>
         IF T='' THEN LINE:='---' ELSE LINE:= T'R#3'
         LINE:= ' '
         T= RATE.TABLE<LOGI.DISC  ,CUR.LINE>
         IF T='' THEN LINE:= '-----' ELSE LINE:= T'R26(#5)'
         LINE:= ' '
         T = RATE.TABLE<LOGI.PLUS  ,CUR.LINE>
         IF T='' THEN LINE:= '-----' ELSE LINE:= T'R26(#5)'
         LINE:= ' '
         T = RATE.TABLE<LOGI.TARIFF,CUR.LINE>
         IF T='' THEN LINE:=STR('-',15) ELSE LINE:= T'L#15'
      END
      PRINT LINE
   NEXT T.Y


   T.NUM.LINES = DCOUNT(RATE.TABLE<30>,@VM)
   IF T.NUM.LINES THEN
      PRINT 'AUDITOR NOTES:'
      FOR T.LINE = 1 TO 7
         T = RATE.TABLE<30,T.LINE>
         CRT @(1,9+T.LINE):T'L#78':
      NEXT
   END

   *
   * CONTRACT AND BENCHMARK MINIMUMS
   *
   PRINT
   PRINT
   T = 'CONTRACT AND BENCHMARK MINIMUMS'
   PRINT SPACE(40-LEN(T)/2):T
   PRINT

   PRINT 'Intrastate Minimums:':SPACE(24):'Interstate Minimums:'
   PRINT 'Weight  Contract  Benchmark':SPACE(17):'Weight  Contract  Benchmark'
   PRINT
   FOR XX = 1 TO 5
     IF RATE.TABLE<37,XX>#'' OR RATE.TABLE<40,XX>#'' OR XX=1 THEN
       IF RATE.TABLE<37,XX>='' THEN
         PRINT '------':
       END ELSE
         IF RATE.TABLE<37,XX>='@' THEN
           PRINT 'AND UP':
         END ELSE
           PRINT RATE.TABLE<37,XX>'L#6':
         END
       END
       IF RATE.TABLE<38,XX>='' THEN
         PRINT '  --------':
       END ELSE
         PRINT SPACE(2):RATE.TABLE<38,XX>'L26#8':
       END
       IF RATE.TABLE<39,XX>='' THEN
         PRINT '  --------':
       END ELSE
         PRINT SPACE(2):RATE.TABLE<39,XX>'L26#8':
       END
       PRINT SPACE(18):
       IF RATE.TABLE<40,XX>='' THEN
         PRINT '------':
       END ELSE
         IF RATE.TABLE<40,XX>='@' THEN
           PRINT 'AND UP':
         END ELSE
           PRINT RATE.TABLE<40,XX>'L#6':
         END
       END
       IF RATE.TABLE<41,XX>='' THEN
         PRINT '  --------':
       END ELSE
         PRINT SPACE(2):RATE.TABLE<41,XX>'L26#8':
       END
       IF RATE.TABLE<42,XX>='' THEN
         PRINT '  --------'
       END ELSE
         PRINT SPACE(2):RATE.TABLE<42,XX>'L26#8'
       END
     END
   NEXT XX
*DF   T1 = RATE.TABLE<21,1>
*DF   IF T1 ='' THEN T1 = '------' ELSE T1 = T1'R26(#8)'
*DF   T2 = RATE.TABLE<22,1>
*DF   IF T2 ='' THEN T2 = '------' ELSE T2 = T2'R26(#8)'
*DF   PRINT 'Intrastate Contract Min:':T1:'    Benchmark Min:':T2
*DF
*DF   T1 = RATE.TABLE<21,2>
*DF   IF T1 ='' THEN T1 = '------' ELSE T1 = T1'R26(#8)'
*DF   T2 = RATE.TABLE<22,2>
*DF   IF T2 ='' THEN T2 = '------' ELSE T2 = T2'R26(#8)'
*DF   CRT @(48,4):T
*DF   PRINT 'Interstate Contract Min:':T1:'    Benchmark Min:':T2


   *
   * LTL CARRIER CHARGE GOES
   *
   PRINT
   PRINT
   T = 'LTL CARRIER CHARGE CODES ON FILE'
   PRINT SPACE(40-LEN(T)/2):T
   PRINT

   DISP.TABLE = RATE.TABLE<MISC.CHARGE.CODES>
   DISP.TABLE<3> = RATE.TABLE<MISC.CHARGE.CONT.AMTS>
   DISP.HEAD2 = ' ##  CODE  DESCRIPTION                            '
   DISP.HEAD3 = ' --  ----  -------------------------------------- '
   IF CL.LOGISTICS = 'Y' THEN
      DISP.HEAD2:= 'Contr  Bench'
      DISP.HEAD3:= '-----  -----'
      DISP.TABLE<4> = RATE.TABLE<MISC.CHARGE.BENCH.AMTS>
   END ELSE
      DISP.HEAD2:= '       Contr'
      DISP.HEAD3:= '       -----'
   END
   PRINT DISP.HEAD2
   PRINT DISP.HEAD3

   *
   * Add Descriptions to the Codes...
   *
   T.NUM.CODES = DCOUNT(RATE.TABLE<MISC.CHARGE.CODES>,@VM)
   FOR T.POS = 1 TO T.NUM.CODES
      T.CODE = RATE.TABLE<MISC.CHARGE.CODES, T.POS>
      LOCATE T.CODE IN LI.CODES<1> SETTING WHERE THEN
         T.DESC = LI.CODES<2,WHERE>
      END ELSE
         T.DESC = '** Description not on file **'
      END
      DISP.TABLE<2,T.POS>=T.DESC
   NEXT

   N.LINES = DCOUNT(DISP.TABLE<1>, @VM)
   IF N.LINES < 1 THEN
      PRINT ' ** Nothing on File **'
   END ELSE
      FOR LINE = 1 TO N.LINES
         TEMP = ' ':LINE'R%2'                 ;* Line Number
         TEMP:= '  ':DISP.TABLE<1,LINE>'L#4'   ;* Line Code
         TEMP:= '  ':DISP.TABLE<2,LINE>'L#37'  ;* Code Description

         *
         * Does this include info for Bench & Contract? -this sucks!
         *
         IF INDEX(DISP.HEAD2,'Contr',1) THEN
            IF CL.LOGISTICS = 'Y' THEN
               AMOUNT = DISP.TABLE<3,LINE>         ;* Contr Amt
               TEMP:= ' ':AMOUNT'R26(#6)'
               AMOUNT = DISP.TABLE<4,LINE>         ;* Bench Amt
               TEMP:= ' ':AMOUNT'R26(#6)'
            END ELSE
               AMOUNT = DISP.TABLE<3,LINE>
               TEMP:= ' ':SPACE(6)                 ;* Skip over
               TEMP:= ' ':AMOUNT'R26(#6)'          ;* Contr Amt
            END
         END
         PRINT TEMP
      NEXT
   END

   PRINT
   PRINT
   T = 'OVERCHARGE CUTBACK CODES'
   PRINT SPACE(40-LEN(T)/2):T
   PRINT
   T.CODE = RATE.TABLE<32,1>
   T.DESC=''
   IF T.CODE THEN
      READV T.DESC FROM F.CUT.BACKS,T.CODE,1 ELSE T.CODE='** "':T.CODE:'" is no longer valid! **'
   END ELSE
     T.CODE = '** No Cutback Code Entered for this table **'
   END
   PRINT 'CUTBACK CODE :':T.CODE
   PRINT 'DESCRIPTION  :':T.DESC
   PRINT

RETURN




*----------------------------------------------------------------------
* LOAD.RATE.TABLE
*----------------------------------------------------------------------
LOAD.RATE.TABLE:

   TABLE.ID = CARRIER.ID:'*':TABLE.NUM
   FAILURE = FALSE

LRT.1:
   READU RATE.TABLE FROM F.AUDIT.TABLES,TABLE.ID LOCKED
      FIND.LOCKED.NAME = TABLE.ID
      GOSUB FIND.LOCKED
      GOTO LRT.1
   END THEN
      GOSUB SORT.RATE.TABLE
   END ELSE
      RATE.TABLE = CLASSES
      IF TABLE.DESC THEN RATE.TABLE<31>=TABLE.DESC
      FAILURE = TRUE
   END

RETURN



*----------------------------------------------------------------------
* SORT.RATE.TABLE
*----------------------------------------------------------------------
SORT.RATE.TABLE:

   T.ITEMS = DCOUNT(RATE.TABLE<MISC.CHARGE.CODES>,@VM)

   FOR T.X = 1 TO T.ITEMS
      T.LOWEST = RATE.TABLE<MISC.CHARGE.CODES,T.X>
      T.LOWEST.POS = T.X

      FOR T.POS = T.X+1 TO T.ITEMS
         T.VAL = RATE.TABLE<MISC.CHARGE.CODES,T.POS>
         IF T.LOWEST > T.VAL THEN
            T.LOWEST = T.VAL
            T.LOWEST.POS = T.POS
         END
      NEXT T.POS

      IF T.LOWEST.POS # T.X THEN
         SA.SV1 = T.LOWEST.POS ; SA.SV2 = T.X
         GOSUB SWAP.ITEMS
      END
   NEXT T.X
RETURN


*----------------------------------------------------------------------
* SWAP.ITEMS - Swaps an Ltl Carrier Code, and Amounts with another
*              subvalue.
*----------------------------------------------------------------------
SWAP.ITEMS:

   SA.ATRIB = MISC.CHARGE.CODES
   GOSUB SWAP.SUBVALS
   SA.ATRIB = MISC.CHARGE.CONT.AMTS
   GOSUB SWAP.SUBVALS
   SA.ATRIB = MISC.CHARGE.BENCH.AMTS
   GOSUB SWAP.SUBVALS

RETURN


*----------------------------------------------------------------------
* SWAP.SUBVALS - Swaps the subvalue contents of a specified attribute
*
* INPUT : SA.ATRIB - Attribute to exchange Sub Value contents
*         SA.SV1 - Subvalue to exchange contents
*         SA.SV2 - Subvalue to exchange contents
*
*----------------------------------------------------------------------
SWAP.SUBVALS:

   SA.T.VAL = RATE.TABLE<SA.ATRIB,SA.SV1>
   RATE.TABLE<SA.ATRIB,SA.SV1> = RATE.TABLE<SA.ATRIB,SA.SV2>
   RATE.TABLE<SA.ATRIB,SA.SV2> = SA.T.VAL

RETURN


*--------------------------------------------------------------------------
* Load Client Description
*
*  Loads the CLIENT.REC and set CLIENT.NAME
*
*  Sets FAILURE flag to TRUE if errors occur.. No other values are changed
*--------------------------------------------------------------------------
LOAD.CLIENT.DESC:

    MATREAD CLIENT.REC FROM F.CLIENTS,CLIENT.ID THEN
        FAILURE=FALSE
        CLIENT.NAME = CL.NAME
    END ELSE
        FAILURE=TRUE
    END

RETURN


*--------------------------------------------------------------------------
* FIND.LOCKED -  Find the person who has locked the record and displays it
*                on the screen
*
* PARAMETERS:
*   FIND.LOCKED.NAME - The record which is locked.
*
* RETURNS:
*   FOUND - TRUE  = Successfully found the locked record
*           FALSE = Failed in the attempt to find the locked file.
*                   FL.USER will contain "Someone" as a name.
*   FL.USER - The user who has the lock on the file.
*
*--------------------------------------------------------------------------
FIND.LOCKED:

   STMT = 'LIST.READU EVERY'
   EXECUTE STMT CAPTURING OUTPUT
   FL.LEN = DCOUNT(OUTPUT,@AM)
   FL.USER = 'Someone'
   FOUND = FALSE

   FOR X = 1 TO FL.LEN UNTIL FOUND
      T.USER = OCONV(TRIM(OUTPUT<X>[44,9]),'MCU')
      T.FILE = TRIM(OUTPUT<X>[53,17])
      IF T.FILE = FIND.LOCKED.NAME THEN
         FL.USER = T.USER
         FOUND = TRUE
      END
   NEXT

   T = FL.USER:" is in On-Line Audit Setup for ":FIND.LOCKED.NAME:"."
   T<2>= "Find them and tell them to get out of that client!"
   CALL ELINE(T)

RETURN


*
*
