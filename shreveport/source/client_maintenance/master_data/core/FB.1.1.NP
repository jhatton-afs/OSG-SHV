*******************************************************
* Program name : FB.1.1.NP
* Author       : BRAIN M. QUEEN
* Date written : NOVEMBER 13, 1990
* Library      : EDIBP
* COPYRIGHT (C) 2016 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED.
*
* PROGRAM TO CREATE OR MODIFY CLIENT MASTER
*
* Last updated by afs (AFSLOGISTICS\nmeddaugh) at 09:22:51 on 03/25/2019.
*
* Start modification history
*      Removed PHONE Mask from FAX Number
* 121102 - JMK01 - ADDED SHIPPING EMAILS WITH GENERIC EMAIL PROCESS
* 040203 - JMK02 - CHANGE SHIPPING TO MISROUTING AND ADDED FIELDS
* 080803 - JMK03 - UPDATE MISROUTE EMAIL FLAG WHEN CHANGING MISROUTE EMAIL
* 081203 - JMK04 - ADD PCL PER BILL RATE TO CHARGE.LIST
* 081203 - JMK05 - CHECK FOR LOGISTICS INCONSISTANCIES
* 090803 - JMK06 - CHECK FOR EMAIL INCONSISTANCIES
* 091003 - JMK07 - ADD PARENT INDEX TO FIELD 175
* 011204 - JMK08 - ADD MGMT SVC FEE FIELDS TO CHARGE LIST
* 021004 - JMK09 - ADD TROUBLESHOOTING EMAILS FOR PROCESSING
* 101104 - JMK10 - ADD IMPORT INDEX FOR EXTERNAL PROCESSING
* 110404 - JMK11 - ADD NEW FIELDS IN CHARGES TO LIST
* 110504 - JMK12 - ADD COMPANY CODE TO FAILSAFE LIST FOR SCOTT TRAFFIC BANK CODES
* 111104 - JMK13 - ADD FEDEX GROUND FIELD IN CHARGES TO LIST
* 111504 - JMK14 - CREATE CHARGE SCREEN TO SEND IN EMAIL NOTIFICATION
* 111604 - JMK15 - CHANGE SALESMAN.ID FROM INITIAL TO SERVICING
* 113004 - JMK16 - ADD CARRIER FSC OVERRIDE TO NOTIFICATION EMAIL
* 113004 - JMK17 - ADD COMPLETE CHARGE SCREEN TO NOTIFICATION EMAIL
* 120304 - JMK18 - ADD PRO RATED PER BILL FEE TO NOTIFICATION EMAIL
* 011405 - JMK19 - ADD UPS TRACKING NUMBER FEE TO NOTIFICATION EMAIL
* 012605 - JMK20 - ADD FEDX AIR OVERCHG % TO NOTIFICATION EMAIL
* 030305 - JMK21 - DISABLE EMAIL NOTIFICATION FOR "99" TRAFFIC SURVEY CLIENT
* 042605 - JMK22 - MAKE PHONE NUMBER REQUIRED FIELD
* 060605 - JMK23 - ADD SECONDARY INDEXING TO FB.BILLS.HIST FILE
* 072205 - JMK24 - CHANGE CLAIMS CLIENTS RECORDS WHEN CONTACTS ARE UPDATED
* 072205 - JMK25 - RE-STRUCTURE AND PASS CHARGE.LIST TO FB.1.1.CHARGES.NEW
* 072205 - JMK26 - ADD FIELDS FOR LOGISTICS COMMISSION CONFIGURATION
* 100705 - JMK27 - DISABLE SECONDARY INDEXING
* 102105 - JMK28 - ADD TRIGGER FOR LOGISTICS FSC EMAIL WARNINGS
* 032306 - JMK29 - FORMAT EMAIL FOR MULTIPLE LOGISTICS INFORMATION
* 061906 - JMK30 - ADD COLLECTION EMAILS TO CLIENTS RECORD
* 082806 - JMK31 - MAKE ALL MISROUTE EMAILS IN THE TO: CATEGORY
* 012907 - JCW01 - CREATE VEND.CUST.NAMES FILES FOR NEW CLIENT
* 013107 - JCW02 - T200611010013 CORRECTIONS TO CHARGE PAGE CHANGE EMAIL ALERTS
* 022307 - JCW03 - MORE CORRECTIONS TO CHARGE PAGE CHANGE EMAIL ALERTS
* 030707 - JMK32 - C200610250003 / Freight Bill lookup - Add ALIAS (dba)
* 060207 - JMK33 - C200704240003 /  ASAP  /   FW: New Request - FB Inquiry Alert / Audit Date Storage
* 091107 - JMK34 - C070504 - grant access to client charge page
* 101807 - NPR01 - Send email out if Client status changed to Inactive
* 032519 - NKH01 - ACCU-316 Modified CREATE-FILE file sizes
* End modification history
*
*******************************************************
$OPTIONS HEADER.EJECT
      ERRMSG=''
*
$OPTIONS EXEC.EQ.PERF
$OPTIONS INFO.ABORT
*
*
* Initialize variables
*
*     EXECUTE 'AUTOLOGOUT 3' ; ** Only Allow Someone in for 3 Minutes
      PROMPT''
      ADD.FLAG=0
      PROG.NAME='FB.1.1'
      PROG.DESC='CLIENT MAINTENANCE'
      PACK.NAME='FREIGHT BILLING'
      PLACE.HOLDER='!@#$%^&*()'
*
* Open files
*
      OPEN '','BCUST' TO F.CLIENT ELSE CALL OPEN.ABORT("BCUST",PROG.NAME)
      OPEN 'DICT','CLIENTS' TO F.DICT.CLIENT ELSE CALL OPEN.ABORT("DICT CLIENTS",PROG.NAME)
      OPEN '','AR.CUST' TO F.AR.CUST ELSE CALL OPEN.ABORT("AR.CUST",PROG.NAME)
      OPEN '','ZIPS.CODES' TO F.ZIPS ELSE CALL OPEN.ABORT("ZIPS",PROG.NAME)
      OPEN '','FB.TABLES' TO F.FB.TABLES ELSE CALL OPEN.ABORT("FB.TABLES",PROG.NAME)
      OPEN '','FB.ADJUST.CLIENT' TO F.ADJUST.CLIENT ELSE CALL OPEN.ABORT("FB.ADJUST.CLIENT",PROG.NAME)
      READ TARIFF.REC FROM F.FB.TABLES,'TARIFF.DATE.XREF' ELSE TARIFF.REC=''
      OPEN '','AR.SLSMAN.1000.1' TO F.SLSMAN ELSE
         CALL OPEN.ABORT('AR.SLSMAN.1000.1',PROG.NAME)
      END
      OPEN '','SDX.CLIENTS,IMPORT' TO F.INDEX ELSE CALL OPEN.ABORT("SDX.CLIENTS,IMPORT",PROG.NAME)   ; * JMK10
      OPEN '','BCTRL' TO F.BCTRL ELSE CALL OPEN.ABORT("BCTRL",PROG.NAME)

*      USER=OCONV(SYSTEM(19),'MCU')
      CALL GET.USER(USER)
      DISPLAY.MODE=1
      SUPER.USER=0
      VIN=USER
      CALL SUPER.USER(VIN,VOUT)
      SUPER.USER=VOUT<1>
      IF USER='LILLIE' THEN SUPER.USER=1           ; * This program Only
      IF USER='CHADM' THEN SUPER.USER=1  ; * This program Only
      IF USER='SSELMAN' THEN SUPER.USER=1          ; * This program Only
      IF USER='DOURSLER' THEN SUPER.USER=1         ; * This program Only
      IF USER='JWEBERT' THEN SUPER.USER=1          ; * This program Only - JCW03 02/22/07
      IF USER='NPRATT' THEN SUPER.USER=1           ; *ZZ
      GOSUB GET.CHARGE.LIST              ; * JMK25
*
* Display page heading
*
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,PERIOD,PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
*
* Enter mode VIEW or CHANGE
*
50:   IF SUPER.USER THEN
         HELP="Enter [V]iew for View only or [C]hange to make changes/additions."
         CALL GEN.IN(0,22,'Enter mode V','',Q,0,1,'','',0,-1,22,0,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI='X' OR QI='EX'
               STOP
            CASE QI='V' OR QI=''
               DISPLAY.MODE=1
            CASE QI='C'
               DISPLAY.MODE=0
            CASE 1
               CALL ELINE("Invalid Entry")
               GOTO 50
         END CASE
      END
      IF DISPLAY.MODE THEN
         PROG.DESC=PROG.DESC:' - View'
      END ELSE
         PROG.DESC=PROG.DESC:' - Change'
      END
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,PERIOD,PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
*
* Enter client number. If not on file then create if desired.
*
100:  CRT @(0,2):@(-3)
      IF DISPLAY.MODE THEN
         HELP="Enter client number or name to search. [EX]=Exit"
      END ELSE
*DF         HELP="Enter client number or name to search. [N]=New [NT]=New-Traf-Surv [EX]=Exit"
         HELP="Enter client number or name to search. [N]=New [EX]=Exit"
      END
      CALL GEN.IN(0,3,'Enter Client Number : #####','',Q,0,20,'','',2,-5,3,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X' OR QI='EX' OR QI=''
            STOP
*OH        CASE QI=''
*OH*
*OH* Print listing
*OH*
*OH          CRT @(0,22):@(-3)
*OH          HELP="Enter Y to print listing"
*OH          CALL GEN.IN(0,22,'Do you want a listing? N','',Q,0,1,'','',2,-1,22,1,QI,HELP,0,23)
*OH          QI=OCONV(QI,'MCU')
*OH          BEGIN CASE
*OH            CASE QI='' ! QI='N'
*OH              NULL
*OH***         CASE QI='Y'
*OH            CASE 0
*OH              CALL PAGE.HEAD('FB.1.1','AFS Logistics, LLC','','Client File Listing',DATE(),132,HED)
*OH              PREC='SORT BCUST NAME.40 HEADING "':HED:'" (P'
*OH              EXECUTE PREC
*OH          END CASE
*OH          STOP
*DF         CASE QI='N' OR QI='NT' AND NOT(DISPLAY.MODE)
         CASE QI='N' AND NOT(DISPLAY.MODE)
            IF QI='N' THEN ID=700 ELSE ID=99000
            LOOP
               ID=ID+1
               READ XX FROM F.CLIENT,ID'R%5' ELSE
                  READ XX FROM F.AR.CUST,ID'R%12' ELSE XX='**'
               END
            UNTIL XX='**' DO REPEAT
            Q=ID'R%5'
         CASE ALPHA(QI)
            CALL SOUNDEX.DISPLAY(QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            IF ITEM.LIST='' ! DCOUNT(ITEM.LIST<1>,@VM) > 1 THEN GOTO 100
            IF NOT(NUM(ITEM.LIST<1,1>)) THEN GOTO 100
            Q=ITEM.LIST<1,1>'R%5'
         CASE NUM(QI)
            Q=QI'R%5'
         CASE 1
            GOTO 100
      END CASE
*
* Read client item
*
      CLIENT.ID=Q
      IF DISPLAY.MODE THEN
         READ CLIENT.REC FROM F.CLIENT,Q ELSE
            CALL ELINE("Cannot find client ":Q:" in the CLIENT file.")
            GOTO 100
         END
      END ELSE
         READU CLIENT.REC FROM F.CLIENT,Q ELSE
***************************************************
            ADD.TS=0
            ADD.CLIENT=0
            IF USER='OWEN' THEN ADD.CLIENT=1 ; ADD.TS=1
            IF USER='DAVID' THEN ADD.CLIENT=1 ; ADD.TS=1
            IF USER='J-AMES' THEN ADD.CLIENT=1 ; ADD.TS=1
            IF USER='BRIAN' THEN ADD.CLIENT=1 ; ADD.TS=1
            *IF USER='AMY' THEN ADD.CLIENT=1; ADD.TS=1
            IF USER='FPMGR' THEN ADD.CLIENT=1
            IF USER='DEBBIE' THEN ADD.CLIENT=1
            IF USER='TAMI' THEN ADD.TS=1
            IF USER='DARLENE' THEN ADD.TS=1
            IF USER='MICHELLE' THEN ADD.TS=1
            IF USER='BRIANP' THEN ADD.TS=1
            IF USER='RONDA' THEN ADD.TS=1
            IF USER='KRISTY' THEN ADD.TS=1
            IF USER='SSELMAN' THEN ADD.TS=1
            IF USER='DOURSLER' THEN ADD.TS=1
            IF USER='BJEPPSON' THEN ADD.TS=1
            IF USER='DONNA' THEN ADD.TS=1
            IF USER='SSMITH' THEN ADD.TS=1         ; * ADDED MATT 1/10/07
            IF USER='CARI' THEN ADD.TS=1
            IF USER='CHRIS' THEN ADD.TS=1
            IF USER='SUSAN' THEN ADD.TS=1
            IF USER='MYRA' THEN ADD.CLIENT=1
            IF USER='MARY' THEN ADD.CLIENT=1
            IF USER='AMY' THEN ADD.CLIENT=1
            IF USER='KRISTY' THEN ADD.CLIENT=1
            IF USER='CARI' THEN ADD.CLIENT=1
            IF USER='LSMITH' THEN ADD.TS=1
            IF USER='CSHARP' THEN ADD.TS=1
            IF USER='BSMITH' THEN ADD.TS=1
            IF USER='PRUZICKA' THEN ADD.TS=1
            IF USER='BRIANP' THEN ADD.TS=1
            IF ADD.TS+ADD.CLIENT=0 THEN
               RELEASE F.CLIENT,Q
               CALL ELINE("You are not authorized to create a new Client.")
               GOTO 100
            END
            IF Q[1,2]='99' AND ADD.TS=0 THEN
               RELEASE F.CLIENT,Q
               CALL ELINE("You are not authorized to create a Traffic Survey Client.")
               GOTO 100
            END
            HELP="Enter either Y for Yes or N for No."
            LN='Client number ':Q:' not on file.  Do you want to create? N'
            CALL GEN.IN(0,22,LN,'',ACK,0,1,'','',2,-1,22,1,QI,HELP,0,23)
            QI=OCONV(QI,'MCU')
            IF QI='Y' THEN
               TEXT= 'New Client! Have Karen, Chris, Debbie, & Owen Check the report and totals'
               TEXT<2>='NEW'
               WRITE TEXT ON F.FB.TABLES,'NO-PROCESS*':Q
               * Begin NKH01
               EXECUTE 'CREATE-FILE DATA FB.BILLS,':Q:' 1009,2'   
               EXECUTE 'CREATE-FILE DATA FB.BILLS.HIST,':Q:' 1009,2'
               EXECUTE 'CREATE-FILE DATA EXPENSE.CODES,':Q:' 53,1'
               EXECUTE 'CREATE-FILE DATA DIVISION.CODES,':Q:' 23,1'
               EXECUTE 'CREATE-FILE DATA VEND.CUST.ZIPS,':Q:' 131,1'     ; *ADDED 7/25/03 KM
               EXECUTE 'CREATE-FILE DATA VEND.CUST.XREF,':Q:' 401,1'     ; *ADDED 7/25/03 KM
               EXECUTE 'CREATE-FILE DATA VEND.CUST,':Q:' 1009,2'           ; * JCW01
               EXECUTE 'CREATE-FILE DATA VEND.CUST.NAMES,':Q:' 601,1'     ; * JCW01
               EXECUTE 'CREATE-FILE DATA SDX.VCN,':Q:' 139,1'   ; * JCW01
               * End NKH01
               IF Q[1,2]#'99' THEN       ; * JMK33
                  EXECUTE 'CREATE-FILE DATA FB.BILLS.ACCESS,':Q:' 1009,2'           ; * JMK33   NKH01
               END                       ; * JMK33
               IF Q[1,2]='99' THEN
                  CALL ELINE('Coping the template record on to the traffic survey')
                  READ CLIENT.REC FROM F.CLIENT,'99001' ELSE CLIENT.REC=''
*DF                  CALL ELINE('Call David so he can check the division setup')
               END ELSE                  ; * JMK23
*                 EXECUTE 'CREATE-INDEX FB.BILLS.HIST,':Q:' CARRIER# DIV 37 39 66'         ; * JMK23; * JMK27
               END
               CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            END ELSE
               GOTO 100
            END
            IF Q[1,2]#'99' THEN
               CLIENT.REC=''
            END
            CLIENT.REC< 63>='Y'          ; * Set Verify Pro Numbers to "Y"
            CLIENT.REC< 96>='N'          ; * Set Separate Check Flag to "N"
            CLIENT.REC< 22>=DATE()
            CLIENT.REC<116>='NEW'        ; * Default Excel Macro setting to NEW
            CLIENT.REC<125>='Mbutts@afs.net':@VM:'LogAudit@afs.net'    ; * Default client email address
            CLIENT.REC<144>=DATE()       ; * Default New SOC date to today
            CLIENT.REC<146>='NW'         ; * Default New Clients to New Way
            CLIENT.REC<147>=CLIENT.ID'R%5'         ; * Default Parent Client to itself
            ADD.FLAG=1
         END
      END
      OLD.CLIENT.REC=CLIENT.REC
*
* Convert phone numbers
*
      VAR=CLIENT.REC<31>
      CALL REMOVE.PUNC(VAR)
      CALL DEL.CHARACTER(VAR,' ')
      CLIENT.REC<31>=VAR
      VAR=CLIENT.REC<45>
      CALL REMOVE.PUNC(VAR)
      CALL DEL.CHARACTER(VAR,' ')
      CLIENT.REC<45>=VAR
*
* Display menu and client data
*
      CLIENT.NUMBER.TEXT='Client Number ':Q
      CALL CENTER(CLIENT.NUMBER.TEXT,80)
      CRT @(0,2):CLIENT.NUMBER.TEXT
      CRT @(0,3):@(-4):
      CALL FB.1.1.DISPLAY(CLIENT.REC)
*****************************************************************
      SALESMAN.ID=CLIENT.REC<115>        ; * BOH01
      IF SALESMAN.ID='' THEN
*        LEAD.SALESMAN='No Lead Salesman on File'  ; * BOH01
         LEAD.SALESMAN='No Servicing Salesman on File'       ; * BOH01
      END ELSE
         READ SALESMAN.REC FROM F.SLSMAN,SALESMAN.ID THEN
*         LEAD.SALESMAN=SALESMAN.ID:' ':SALESMAN.REC<1>
            LEAD.SALESMAN=SALESMAN.REC<1>:'-':SALESMAN.ID
         END ELSE
*         LEAD.SALESMAN=SALESMAN.ID:' Name Not Found'
            LEAD.SALESMAN='Name Not Found-':SALESMAN.ID
         END
      END
      CRT @(25,0):LEAD.SALESMAN:
*****************************************************************
*
* Get selection from operator
*
200:  IF DISPLAY.MODE THEN
         HELP="Enter number of information to display: (17, 19, 20, 22 - 25)"
      END ELSE
         HELP="Enter number of information to change: (1 to 25) [D]=Delete"
      END
      HELP:=" [A]=Alias"                 ; * JMK32
      CALL GEN.IN(0,22,'Enter Selection Number ##','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN GOTO 99000
      IF NOT(DISPLAY.MODE) AND QI='D' THEN
         HELP='Enter Y to delete or N not to delete.'
         CALL GEN.IN(0,22,'Are you sure? N','',Q,0,1,'','',2,-1,22,1,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
*
* Delete client
*
         IF QI='Y' THEN
            IF USER#'OWEN' THEN
1234:          CALL ELINE('Cannot delete an account...Call Owen.')
               GO 1234
            END
            IF CLIENT.ID[1,2]='99' ELSE
               TEXT = "Looking for active records in file FB.PAY. Step 1 of 8"
               CALL CENTER(TEXT,80)
               CRT @(0,14):@(-3):TEXT:
               EXECUTE 'SELECT FB.PAY WITH CLIENT# = "':CLIENT.ID:'"' PASSLIST CAPTURING OUTPUT
               IF SYSTEM(11) THEN
                  CALL ELINE('Client ':CLIENT.ID:' has pros selected for payment. Cannot delete.')
                  GOTO 200
               END
               TEXT = "Selecting records to delete in file FB.OPEN.BILLS. Step 2 of 8"
               CALL CENTER(TEXT,80)
               CRT @(0,15):@(-3):TEXT:
               EXECUTE 'SELECT FB.OPEN.BILLS WITH CLIENT# = "':CLIENT.ID:'"' PASSLIST CAPTURING OUTPUT
               IF SYSTEM(11) THEN EXECUTE 'DELETE FB.OPEN.BILLS (I'
               TEXT = "Selecting records to delete in file FB.BILLS.CRX. Step 3 of 8"
               CALL CENTER(TEXT,80)
               CRT @(0,16):@(-3):TEXT:
               EXECUTE 'SELECT FB.BILLS.CRX WITH CLIENT# = "':CLIENT.ID:'"' PASSLIST CAPTURING OUTPUT
               IF SYSTEM(11) THEN EXECUTE 'DELETE FB.BILLS.CRX (I'
               TEXT = "Deleting file FB.BILLS,":CLIENT.ID:". Step 4 of 8"
               CALL CENTER(TEXT,80)
               CRT @(0,17):@(-3):TEXT:
            END
            EXECUTE 'DELETE-FILE DATA FB.BILLS,':CLIENT.ID
            TEXT = "Deleting file FB.OPEN.BILLS.HIST,":CLIENT.ID:". Step 5 of 8"
            CALL CENTER(TEXT,80)
            CRT @(0,18):@(-3):TEXT:
            EXECUTE 'DELETE-FILE DATA FB.BILLS.HIST,':CLIENT.ID
            TEXT = "Deleting file FB.OPEN.BILLS.ACCESS,":CLIENT.ID:". Step 5 of 8"         ; * JMK33
            CALL CENTER(TEXT,80)         ; * JMK33
            CRT @(0,18):@(-3):TEXT:      ; * JMK33
            EXECUTE 'DELETE-FILE DATA FB.BILLS.ACCESS,':CLIENT.ID      ; * JMK33
            TEXT = "Deleting file EXPENSE.CODES,":CLIENT.ID:". Step 6 of 8"
            CALL CENTER(TEXT,80)
            CRT @(0,19):@(-3):TEXT:
            EXECUTE 'DELETE-FILE DATA EXPENSE.CODES,':CLIENT.ID
            TEXT = "Deleting file DIVISION.CODES,":CLIENT.ID:". Step 7 of 8"
            CALL CENTER(TEXT,80)
            CRT @(0,20):@(-3):TEXT:
            EXECUTE 'DELETE-FILE DATA DIVISION.CODES,':CLIENT.ID
            PARENT.ID=OLD.CLIENT.REC<147>          ; * JMK07
            IF PARENT.ID#'' THEN         ; * JMK07
               READU PARENT.REC FROM F.CLIENT,PARENT.ID THEN           ; * JMK07
                  PARENT.ORG=PARENT.REC  ; * JMK07
                  LOCATE(CLIENT.ID,PARENT.REC,175;CPOS) THEN           ; * JMK07
                     PARENT.REC=DELETE(PARENT.REC,175,CPOS)  ; * JMK07
                  END                    ; * JMK07
                  IF PARENT.REC#PARENT.ORG THEN    ; * JMK07
                     WRITE PARENT.REC ON F.CLIENT,PARENT.ID  ; * JMK07
                  END                    ; * JMK07
               END                       ; * JMK07
               RELEASE F.CLIENT,PARENT.ID          ; * JMK07
            END                          ; * JMK07
            TEXT = "Deleting record ":CLIENT.ID:" from file CLIENTS. Step 8 of 8"
            CALL CENTER(TEXT,80)
            CRT @(0,21):@(-3):TEXT:
            DELETE F.CLIENT,CLIENT.ID
            CALL SOUNDEX.EDIT(OLD.CLIENT.REC<2>,'',CLIENT.ID,'SDX.CLIENTS,NAME')
            NVAL=DCOUNT(OLD.CLIENT.REC<226>,@VM)   ; * JMK32
            FOR VAL=1 TO NVAL            ; * JMK32
               CALL SOUNDEX.EDIT(OLD.CLIENT.REC<226,VAL>,'',CLIENT.ID,'SDX.CLIENTS,NAME')  ; * JMK32
            NEXT VAL                     ; * JMK32
            CALL AFS.SCR.HEAD(CO.ID,FILE.ID,PERIOD,PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            GOTO 100
         END ELSE
            GOTO 200
         END
      END
      IF QI='A' THEN                     ; * JMK32
         CALL FB.1.1.ALIAS(CLIENT.REC,DISPLAY.MODE)          ; * JMK32
         CALL AFS.SCR.HEAD(CO.ID,FILE.ID,PERIOD,PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)   ; * JMK32
         CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
         CRT @(0,2):CLIENT.NUMBER.TEXT
         CALL FB.1.1.DISPLAY(CLIENT.REC)
         GOTO 200                        ; * JMK32
      END                                ; * JMK32
      IF DISPLAY.MODE AND NUM(QI) THEN ON QI GOSUB 99999,99999,99999,99999,99999,99999,99999,99999,99999,99999,99999,99999,99999,99999,99999,99999,17000,99999,19000,20000,99999,22000,23000,24000,25000
      IF NOT(DISPLAY.MODE) AND NUM(QI) THEN ON QI GOSUB 1000,2000,3000,4000,5000,6000,7000,8000,9000,10000,11000,12000,13000,14000,15000,16000,17000,18000,19000,20000,21000,22000,23000,24000,25000
      GOTO 200
*
* Change client name
*
1000: HELP="Enter name. [space]=Clear."
      MASK=CLIENT.REC<2>:STR('-',30-LEN(CLIENT.REC<2>))
      CALL GEN.IN(13,3,MASK,'',Q,0,30,'','',2,-30,3,0,QI,HELP,0,23)
      IF INDEX(Q,"'",1) THEN
         CALL ELINE("Error!  Client Name Cannot Contain a Single Quote!")
         GO 1000
      END
      IF Q#'' THEN CLIENT.REC<2>=TRIM(Q)
      IF Q=' ' THEN CLIENT.REC<2>=''
      CRT @(13,3):CLIENT.REC<2>'L#30'
      RETURN
*
* Change client address 1
*
2000: HELP="Enter addr 1. [space]=Clear"
      MASK=CLIENT.REC<3,1>:STR('-',30-LEN(CLIENT.REC<3,1>))
      CALL GEN.IN(13,4,MASK,'',Q,0,30,'','',2,-30,4,0,QI,HELP,0,23)
      IF Q#'' THEN CLIENT.REC<3,1>=TRIM(Q)
      IF Q=' ' THEN CLIENT.REC<3,1>=''
      CRT @(13,4):CLIENT.REC<3,1>'L#30'
      RETURN
*
* Change client address 2
*
3000: HELP="Enter addr 2. [space]=Clear"
      MASK=CLIENT.REC<3,2>:STR('-',30-LEN(CLIENT.REC<3,2>))
      CALL GEN.IN(13,5,MASK,'',Q,0,30,'','',2,-30,5,0,QI,HELP,0,23)
      IF Q#'' THEN CLIENT.REC<3,2>=TRIM(Q)
      IF Q=' ' THEN CLIENT.REC=DELETE(CLIENT.REC,3,2,0)
      CRT @(13,5):CLIENT.REC<3,2>'L#30'
      RETURN
*
* Change client zip code
*
4000: HELP="Enter zip code. [space]=Clear"
      IF CLIENT.REC<6> NE '' THEN
         MASK=CLIENT.REC<6>:STR('#',10-LEN(CLIENT.REC<6>))
      END ELSE
         MASK='#####-####'
      END
      CALL GEN.IN(13,6,MASK,'',Q,0,10,'','',2,-10,6,0,QI,HELP,0,23)
      IF Q#'' THEN CLIENT.REC<6>=TRIM(Q) ELSE Q=CLIENT.REC<6>
      IF Q=' ' THEN Q=''
      CLIENT.REC<6>=TRIM(Q)
      CODE=FIELD(Q,'-',1)
      IF CODE#'' & NUM(CODE) THEN
         READ ZIP.REC FROM F.ZIPS,CODE THEN
            CLIENT.REC<4>=ZIP.REC<1>
            CLIENT.REC<5>=ZIP.REC<2>
         END
      END
      CRT @(13,6):CLIENT.REC<6>'L#10'
      CRT @(32,6):CLIENT.REC<5>'L#2'
      CRT @(13,7):CLIENT.REC<4>'L#30'
      RETURN
*
* Change client state
*
5000: HELP="Enter state code. [space]=Clear"
      MASK=CLIENT.REC<5>:STR('-',2-LEN(CLIENT.REC<5>))
      CALL GEN.IN(32,6,MASK,'',Q,0,2,'','',2,-2,6,0,QI,HELP,0,23)
      IF Q#'' THEN CLIENT.REC<5>=TRIM(Q)
      IF Q=' ' THEN CLIENT.REC<5>=''
      CRT @(32,6):CLIENT.REC<5>'L#2'
      RETURN
*
* Change client city
*
6000: HELP="Enter city. [space]=Clear"
      MASK=CLIENT.REC<4>:STR('-',30-LEN(CLIENT.REC<4>))
      CALL GEN.IN(13,7,MASK,'',Q,0,30,'','',2,-30,7,0,QI,HELP,0,23)
      IF Q#'' THEN CLIENT.REC<4>=TRIM(Q)
      IF Q=' ' THEN CLIENT.REC<4>=''
      CRT @(13,7):CLIENT.REC<4>'L#30'
      RETURN
*
* Change client fiscal year
*
7000: HELP="Enter fiscal year beginning month and day. [cr]=Accept"
      FISCAL.DATE=CLIENT.REC<29>
      IF FISCAL.DATE NE '' THEN MASK=FISCAL.DATE ELSE MASK='01.01'
      CALL GEN.IN(13,8,MASK,'',Q,0,30,'','',2,-5,8,0,QI,HELP,0,23)
      BEGIN CASE
         CASE Q=' '
            CLIENT.REC<29>=''
         CASE QI=''
            NULL
         CASE QI NE ''
            QI=QI:'.1988'
            FISCAL.DATE=ICONV(Q,'D2.')
            IF FISCAL.DATE='' THEN
               CALL ELINE('Invalid date.')
               GOTO 7000
            END
            FISCAL.MONTH=FISCAL.DATE'DM'
            FISCAL.DAY=FISCAL.DATE'DD'
            FISCAL.DATE=FISCAL.MONTH'R%2':'.':FISCAL.DAY'R%2'
         CASE 1
            GOTO 7000
      END CASE
      CLIENT.REC<29>=FISCAL.DATE
      CRT @(13,8):FISCAL.DATE
      RETURN
*
* Change client contact person
*
8000: HELP="Enter contact name. [space]=Clear"
      MASK=CLIENT.REC<46>:STR('-',30-LEN(CLIENT.REC<46>))
      CALL GEN.IN(13,9,MASK,'',Q,0,30,'','',2,-30,9,0,QI,HELP,0,23)
      IF Q#'' THEN CLIENT.REC<46>=TRIM(Q)
      IF Q=' ' THEN CLIENT.REC<46>=''
      CRT @(13,9):CLIENT.REC<46>'L#30'
      RETURN
*
* Change client invoice attn
*
9000: HELP="Enter invoice attention. [space]=Clear"
      MASK=CLIENT.REC<44>:STR('-',30-LEN(CLIENT.REC<44>))
      CALL GEN.IN(13,10,MASK,'',Q,0,30,'','',2,-30,10,0,QI,HELP,0,23)
      IF Q#'' THEN CLIENT.REC<44>=TRIM(Q)
      IF Q=' ' THEN CLIENT.REC<44>=''
      CRT @(13,10):CLIENT.REC<44>'L#30'
      RETURN
*
* Change client phone number
*
10000:HELP="Enter client's phone number. [space]=Clear"
      CALL GEN.IN(13,11,CLIENT.REC<31>'L#13','PHONE',Q,0,13,'','',2,13,11,0,QI,HELP,0,23)
      BEGIN CASE
         CASE QI=' '
            CLIENT.REC<31>=''
         CASE QI NE ''
            CLIENT.REC<31>=TRIM(Q)
         CASE QI=''
            NULL
         CASE 1
            GOTO 10000
      END CASE
      CRT @(13,11):'(':CLIENT.REC<31>[1,3]:')':CLIENT.REC<31>[4,3]:'-':CLIENT.REC<31>[7,4]
      RETURN
*
* Change client fax number
*
11000:HELP="Enter client's fax number. [space]=Clear"
      CALL GEN.IN(13,12,CLIENT.REC<45>'L#13','',Q,0,13,'','',2,13,12,0,QI,HELP,0,23)
      BEGIN CASE
         CASE QI=' '
            CLIENT.REC<45>=''
         CASE QI NE ''
            CLIENT.REC<45>=Q
         CASE QI=''
            NULL
         CASE 1
            GOTO 11000
      END CASE
      CRT @(13,12):
      LFAX=LEN(CLIENT.REC<45>)
      BEGIN CASE
         CASE LFAX=10
            PRINT '(':CLIENT.REC<45>[1,3]:')':CLIENT.REC<45>[4,3]:'-':CLIENT.REC<45>[7,4]
         CASE LFAX=7
            PRINT CLIENT.REC<45>[1,3]:'-':CLIENT.REC<45>[4,7]
         CASE 1
            PRINT
      END CASE
      RETURN
*
* Change client pre-audit start date
*
12000:HELP='Enter date Pre-Audit services started. [space]=Clear [cr]=Accept'
      MASK=CLIENT.REC<27>'D2/'
      IF MASK='' THEN MASK=DATE()'D2/'
      CALL GEN.IN(20,13,MASK,'DATE',Q,0,8,'','',2,-8,13,0,QI,HELP,0,23)
      BEGIN CASE
         CASE QI=' '
            CLIENT.REC<27>=''
            CRT @(20,13):'        '
            RETURN
         CASE QI=''
            NULL
         CASE QI NE ''
            CLIENT.REC<27>=Q
         CASE 1
            GOTO 12000
      END CASE
      CRT @(20,13):CLIENT.REC<27>'D2/'
      RETURN
*
* Change client post-audit state date
*
13000:HELP='Enter date Post-Audit services started. [space]=Clear [cr]=Accept'
      MASK=CLIENT.REC<28>'D2/'
      IF MASK='' THEN MASK=DATE()'D2/'
      CALL GEN.IN(20,14,MASK,'DATE',Q,0,8,'','',2,-8,14,0,QI,HELP,0,23)
      BEGIN CASE
         CASE QI=' '
            CLIENT.REC<28>=''
            CRT @(20,14):'        '
            RETURN
         CASE QI=''
            NULL
         CASE QI NE ''
            CLIENT.REC<28>=Q
         CASE 1
            GOTO 13000
      END CASE
      CRT @(20,14):CLIENT.REC<28>'D2/'
      RETURN
*
* Change client pay frequency
*
14000:HELP='Enter number of days in billing cycle.'
      CALL GEN.IN(69,3,CLIENT.REC<38>'R#2','',Q,0,2,'','',1,-2,3,0,QI,HELP,0,23)
      IF NUM(QI) ELSE GOTO 14000
      IF Q#'' THEN CLIENT.REC<38>=TRIM(Q)
      CRT @(69,3):CLIENT.REC<38>'R#2'
      RETURN
*
* Change client status
*
15000:HELP='Enter status. [A]=Active [I]=Inactive [O]=Out Of Business [cr]=Accept'
      CALL GEN.IN(68,4,CLIENT.REC<30>,'',Q,0,1,'','',2,-1,4,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='' & CLIENT.REC<30> NE ''
            QI=CLIENT.REC<30>
         CASE QI='I' ! QI='A'! QI='O'
            NULL
         CASE 1
            GOTO 15000
      END CASE
      IF QI='I' THEN STATUS='Inactive'
      IF QI='A' THEN STATUS='..Active'
      IF QI='O' THEN STATUS='.Out/Bus'
      CLIENT.REC<30>=QI
      CRT @(68,4):STATUS'R#8'
      RETURN
*
* Change client stay-out or pre-deposit
*
16000:HELP='Enter [S]=Stay-out [P]=Pre-deposit [cr]=Accept'
      MASK=CLIENT.REC<41>[1,1]
      CALL GEN.IN(74,5,MASK'L#1','',Q,0,1,'','',2,-1,5,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            STATUS=CLIENT.REC<41>
         CASE QI='P'
            STATUS='PD'
         CASE QI='S'
            STATUS='SO'
         CASE 1
            GOTO 16000
      END CASE
      CLIENT.REC<41>=STATUS
      CRT @(74,5):CLIENT.REC<41>
      RETURN
*
* Reporting options
*
17000:IF NOT(DISPLAY.MODE) THEN
         HELP="Enter [Q]=Quarterly, [M]=Monthly, [cr]=Accept."
         MASK=CLIENT.REC<98>
         CALL GEN.IN(75,6,MASK'L#1','',Q,0,1,'','',2,-1,6,0,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI=''
               Q=CLIENT.REC<98>
            CASE QI='Q'
               NULL
            CASE QI='M'
               NULL
            CASE 1
               GOTO 17000
         END CASE
         CLIENT.REC<98>=OCONV(Q,'MCU')
         CRT @(75,6):CLIENT.REC<98>

         HELP="[I]In [O]Out [C]Combined [B]Both [A]All [T]Third Party [X]=Back [cr]=Accept."
         MASK=CLIENT.REC<97>
         CALL GEN.IN(77,6,MASK'L#1','',Q,0,1,'','',2,-1,6,0,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI=''
               Q=CLIENT.REC<97>
            CASE QI='I'
               NULL
            CASE QI='O'
               NULL
            CASE QI='C'
               NULL
            CASE QI='B'
               NULL
            CASE QI='A'
               NULL
            CASE QI='T'
               NULL
            CASE QI='X'
               CRT @(77,6):CLIENT.REC<97>
               GOTO 17000
            CASE 1
               GOTO 17000
         END CASE
         IF CLIENT.ID[1,2]=99 AND Q # 'T' THEN
            CALL ELINE('WARNING Traffic Survey Accounts are usually [T]hird party! Consider Changing!')
         END
         CLIENT.REC<97>=QI
      END
      CRT @(77,6):CLIENT.REC<97>

      CALL FB.1.1.REPORTS.NEW(CLIENT.ID,CLIENT.REC,DISPLAY.MODE,F.CLIENT)
      RETURN
*
* Change client variance default
*
18000:HELP="Enter client's default variance:[O,C,D] [space]=Clear [cr]=Accept."
      MASK=CLIENT.REC<23>'L#1'
      CALL GEN.IN(75,7,MASK,'',Q,0,1,'','',2,-1,7,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='' & CLIENT.REC<23> NE ''
            NULL
         CASE QI=' '
            CLIENT.REC<23>=''
         CASE QI='O' ! QI='C' ! QI='D'
            CLIENT.REC<23>=QI
         CASE 1
            GOTO 18000
      END CASE
      CRT @(75,7):CLIENT.REC<23>
      RETURN
*
* Change client data entry options
*
19000:CALL FB.1.1.ENTRY.OPTS.NEW(CLIENT.ID,CLIENT.REC,DISPLAY.MODE)
      RETURN
*
* Change client key verification options
*
20000:* Verification Options
*DF      IF SUPER.USER THEN
      CALL FB.1.1.VERIFY.OPTS.NEW(CLIENT.ID,CLIENT.REC,DISPLAY.MODE)
*DF      END ELSE
*DF         SUBJ='-s"Security Violation"'
*DF         TEXT=USER:' attempted to modify Verification Options for client'
*DF         TEXT<-1>=CLIENT.ID:' ':CLIENT.REC<2>
*DF         EXECUTE 'mail ':SUBJ:' owen',//IN. < TEXT
*DF         CALL ELINE('You are not authorized to modify Verification Options!')
*DF      END
*
* Removed the above email as if they are in view no changes can be made.
* DRF 6/29/04
*
      RETURN
*
* Create invoice for A/R system
*
21000:***
*     HELP='Enter Y to create invoice, N not to create invoice or V for voucher customer.'
      HELP='Enter [Y] to create invoice or [N] not to create invoice.'
      CALL GEN.IN(75,10,CLIENT.REC<42>'L#1','',Q,0,1,'','',2,-1,10,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            Q=CLIENT.REC<42>
*       CASE QI='N' ! QI='Y' ! QI='V'
         CASE QI='N' ! QI='Y'
            Q=QI
         CASE 1
            GOTO 21000
      END CASE
      CLIENT.REC<42>=Q
      CRT @(75,10):CLIENT.REC<42>
      RETURN
*
* Change client charges
*
22000:* Charge Page
*DF      IF SUPER.USER THEN
*     IF SUPER.USER OR USER='SANDRA' OR USER='KRISTY' OR USER='SSHAFER' OR USER='SSELMAN' OR USER='DOURSLER' OR USER='CYNTHIA' OR USER='MSMITH' OR USER='RCASON' OR USER='KCHAUVIN' OR USER='BJEPPSON' OR USER='CTHOMAS' THEN ; * JMK34
      BEGIN CASE                         ; * JMK34
         CASE SUPER.USER ; CHG.PAGE=1    ; * JMK34
         CASE USER='SANDRA' ; CHG.PAGE=1           ; * JMK34
         CASE USER='KRISTY' ; CHG.PAGE=1           ; * JMK34
         CASE USER='SSHAFER' ; CHG.PAGE=1  ; * JMK34
         CASE USER='SSELMAN' ; CHG.PAGE=1          ; * JMK34
         CASE USER='DOURSLER' ; CHG.PAGE=1         ; * JMK34
         CASE USER='CYNTHIA' ; CHG.PAGE=1          ; * JMK34
         CASE USER='MSMITH' ; CHG.PAGE=1           ; * JMK34
         CASE USER='RCASON' ; CHG.PAGE=1           ; * JMK34
         CASE USER='KCHAUVIN' ; CHG.PAGE=1         ; * JMK34
         CASE USER='BJEPPSON' ; CHG.PAGE=1         ; * JMK34
         CASE USER='CTHOMAS' ; CHG.PAGE=1          ; * JMK34
         CASE USER='SMATTHEWS' ; CHG.PAGE=1        ; * JMK34
         CASE 1 ; CHG.PAGE=0             ; * JMK34
      END CASE                           ; * JMK34
      IF CHG.PAGE THEN
*        CALL FB.1.1.CHARGES.NEW(CLIENT.ID,CLIENT.REC,DISPLAY.MODE); * JMK25
         CALL FB.1.1.CHARGES.NEW(CLIENT.ID,CLIENT.REC,DISPLAY.MODE,CHARGE.LIST)  ; * JMK25
      END ELSE
         SUBJ='-s"Security Violation":USER:" - View Charge Page"'
         TEXT=USER:' attempted to view Charge Page for client'
         TEXT<-1>=CLIENT.ID:' ':CLIENT.REC<2>
         EXECUTE 'mail ':SUBJ:' owen',//IN. < TEXT
         CALL ELINE('You are not authorized to view Charge Page Information!')
      END
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,PERIOD,PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      CRT @(0,2):CLIENT.NUMBER.TEXT
      CALL FB.1.1.DISPLAY(CLIENT.REC)
      RETURN
*
* Change email addresses
*
* 23000:CALL FB.1.1.EMAIL.NEW(CLIENT.REC,DISPLAY.MODE)         ; * JMK01
23000:* ENTER EMAIL INFORMATION ; * JMK01
*     HELP='Options:[R]eporting [S]hipping [X]=Exit'         ; * JMK01; * JMK02
*     LN='Enter Reporting or Shipping Emails? -'   ; * JMK01; * JMK02
*     HELP='Options:[R]eporting [M]isrouting [X]=Exit'       ; * JMK01; * JMK02 ; * JMK09
*     LN='Enter Reporting or Misrouting Emails? -'           ; * JMK01; * JMK02 ; * JMK09
*     HELP='Options:[R]eporting [M]isrouting [T]roubleshooting [X]=Exit'         ; * JMK01; * JMK02 ; * JMK09 ; * JMK30
*     LN='Enter Reporting, Misrouting or Troubleshooting Emails? -'    ; * JMK01; * JMK02 ; * JMK09 ; * JMK30
      HELP='Options:[R]eporting [M]isrouting [T]roubleshooting [C]ollections [X]=Exit'     ; * JMK01; * JMK02 ; * JMK09 ; * JMK30
      LN='Enter Reporting, Misrouting, Troubleshooting or Collection Emails? -'  ; * JMK01; * JMK02 ; * JMK09 ; * JMK30
      CALL GEN.IN(0,22,LN,'',Q,1,1,'','',2,-1,22,1,QI,HELP,0,23)       ; * JMK01
      ETYPE=OCONV(QI,'MCU')              ; * JMK01
      VIN='' ; VOUT=''                   ; * JMK01
      BEGIN CASE                         ; * JMK01
         CASE ETYPE='X'                  ; * JMK01
            RETURN                       ; * JMK01
         CASE ETYPE='R'
            HDG.TXT='Reporting Notification'       ; * JMK01
            IF CLIENT.REC<179>#'' THEN   ; * JMK09
               HDG.TXT=HDG.TXT:' Disabled for Troubleshooting'         ; * JMK09
            END                          ; * JMK09
            VOUT<1>=CLIENT.REC<125>      ; * JMK01
            VOUT<2>=CLIENT.REC<126>      ; * JMK01
            VOUT<3>=CLIENT.REC<127>      ; * JMK01
*        CASE ETYPE='S'                  ; * JMK01; * JMK02
*           HDG.TXT='Shipping Notification'        ; * JMK01; * JMK02
*           VOUT<1>=CLIENT.REC<150>      ; * JMK01; * JMK02
*           VOUT<2>=CLIENT.REC<151>      ; * JMK01; * JMK02
*           VOUT<3>=CLIENT.REC<152>      ; * JMK01; * JMK02
         CASE ETYPE='M'                  ; * JMK01; * JMK02
            HDG.TXT='Misrouting Notification'      ; * JMK01; * JMK02
            IF CLIENT.REC<179>#'' THEN   ; * JMK09
               HDG.TXT=HDG.TXT:' Disabled for Troubleshooting'         ; * JMK09
            END                          ; * JMK09
            FOR ATT=1 TO 18              ; * JMK02
               VOUT<ATT>=CLIENT.REC<152+ATT>       ; * JMK01; * JMK02
            NEXT ATT                     ; * JMK02
         CASE ETYPE='T'                  ; * JMK09
            HDG.TXT='Troubleshooting Notification'           ; * JMK09
            VOUT<1>=CLIENT.REC<179>      ; * JMK09
         CASE ETYPE='C'                  ; * JMK30
            HDG.TXT='Collections Notification'     ; * JMK30
            IF CLIENT.REC<179>#'' THEN   ; * JMK30
               HDG.TXT=HDG.TXT:' Disabled for Troubleshooting'         ; * JMK30
            END                          ; * JMK30
            VOUT<1>=CLIENT.REC<222>      ; * JMK30
            VOUT<2>=CLIENT.REC<223>      ; * JMK30
            VOUT<3>=CLIENT.REC<224>      ; * JMK30
         CASE 1                          ; * JMK01
            GOTO 23000                   ; * JMK01
      END CASE                           ; * JMK01
      VIN<1>=PROG.DESC                   ; * JMK01
      VIN<2>=PACK.NAME                   ; * JMK01
      VIN<3>=HDG.TXT                     ; * JMK01
      VIN<4>=DISPLAY.MODE                ; * JMK01
      VIN<5>=2                           ; * JMK01 PROC LVL 1=TO 2=CC 3=BCC
      IF ETYPE='T' THEN                  ; * JMK09
         VIN<5>=1                        ; * JMK09
      END                                ; * JMK09
      IF ETYPE='M' THEN                  ; * JMK02
         VIN<5>=1                        ; * JMK31
         VIN<6>='Y'                      ; * JMK02
         VIN<7>='Y'                      ; * JMK02
         VIN<8>='Y'                      ; * JMK02
         VIN<9>='Y'                      ; * JMK02
      END                                ; *JMK02
      CALL FB.EMAIL(VIN,VOUT)            ; * JMK01
      BEGIN CASE                         ; * JMK01
         CASE ETYPE='R' AND DISPLAY.MODE=0         ; * JMK01
            CLIENT.REC<125>=VOUT<1>      ; * JMK01
            CLIENT.REC<126>=VOUT<2>      ; * JMK01
            CLIENT.REC<127>=VOUT<3>      ; * JMK01
*        CASE ETYPE='S' AND DISPLAY.MODE=0         ; * JMK01; * JMK02
*           CLIENT.REC<150>=VOUT<1>      ; * JMK01; * JMK02
*           CLIENT.REC<151>=VOUT<2>      ; * JMK01; * JMK02
*           CLIENT.REC<152>=VOUT<3>      ; * JMK01; * JMK02
         CASE ETYPE='M' AND DISPLAY.MODE=0         ; * JMK01; * JMK02
            FOR ATT=1 TO 18              ; * JMK02
               CLIENT.REC<152+ATT>=VOUT<ATT>       ; * JMK01; * JMK02
            NEXT ATT                     ; * JMK02
*           IF OLD.CLIENT.REC<153>#CLIENT.REC<153> THEN      ; * JMK03; * JMK06
            IF CLIENT.REC<153>#'' THEN   ; * JMK03; * JMK06
               IF CLIENT.REC<171>='' THEN          ; * JMK06
                  CLIENT.REC<171>='Y'    ; * JMK03
               END                       ; * JMK06
            END                          ; * JMK03
*           IF OLD.CLIENT.REC<154>#CLIENT.REC<154> THEN      ; * JMK03; * JMK06
            IF CLIENT.REC<154>#'' THEN   ; * JMK03; * JMK06
               IF CLIENT.REC<171>='' THEN          ; * JMK06
                  CLIENT.REC<171>='Y'    ; * JMK03
               END                       ; * JMK06
            END                          ; * JMK03
*           IF OLD.CLIENT.REC<155>#CLIENT.REC<155> THEN      ; * JMK03; * JMK06
            IF CLIENT.REC<155>#'' THEN   ; * JMK03; * JMK06
               IF CLIENT.REC<171>='' THEN          ; * JMK06
                  CLIENT.REC<171>='Y'    ; * JMK03
               END                       ; * JMK06
            END                          ; * JMK03
         CASE ETYPE='T' AND DISPLAY.MODE=0         ; * JMK09
            CLIENT.REC<179>=VOUT<1>      ; * JMK09
         CASE ETYPE='C' AND DISPLAY.MODE=0         ; * JMK30
            CLIENT.REC<222>=VOUT<1>      ; * JMK30
            CLIENT.REC<223>=VOUT<2>      ; * JMK30
            CLIENT.REC<224>=VOUT<3>      ; * JMK30
      END CASE                           ; * JMK01
      CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      CRT @(0,2):CLIENT.NUMBER.TEXT
      CALL FB.1.1.DISPLAY(CLIENT.REC)
      RETURN
*
* Change client default settings
*
24000:CALL FB.1.1.DEFAULTS.NEW(CLIENT.ID,CLIENT.REC,DISPLAY.MODE,TARIFF.REC)
      RETURN
*
* Client comments
*
25000:CALL FB.1.1.NOTES.NEW(CLIENT.REC,DISPLAY.MODE)
      CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      CRT @(0,2):CLIENT.NUMBER.TEXT
      CALL FB.1.1.DISPLAY(CLIENT.REC)
      RETURN
*
* Check for changes and update file
*
99000:IF OLD.CLIENT.REC # CLIENT.REC THEN
         HELP='Options:  [Y]es [N]o'
         LN='Client information changed. Update? -'
         CALL GEN.IN(0,22,LN,'',Q,1,1,'','',2,-1,22,1,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI='Y'
               IF CLIENT.REC<81>='S' OR CLIENT.REC<81>='D' OR CLIENT.REC<81>='H' THEN      ; * JMK12
                  IF CLIENT.REC<92>#'00002' THEN   ; * JMK12
                     CALL ELINE('Incorrect Company Code for Scott Traffic Bank Code')      ; * JMK12
                     GO 200              ; * JMK12
                  END                    ; * JMK12
               END                       ; * JMK12
               IF CLIENT.REC<93>='N' THEN          ; * JMK05
                  NVAL=DCOUNT(CLIENT.REC<84>,@VM)  ; * JMK05
                  IF CLIENT.REC<85,NVAL>+0#0 THEN  ; * JMK05
                     CALL ELINE('Logistics Fee is not "0"')  ; * JMK05
                     GO 200              ; * JMK05
                  END                    ; * JMK05
                  IF CLIENT.REC<94>='Y' THEN       ; * JMK05
                     CALL ELINE('Not a Logistics Client and Automated Misroute is still on')         ; * JMK05
                     GO 200              ; * JMK05
                  END                    ; * JMK05
                  IF CLIENT.REC<139>='Y' THEN      ; * JMK05
                     CALL ELINE('Not a Logistics Client and Misroute Letters are still on')          ; * JMK05
                     GO 200              ; * JMK05
                  END                    ; * JMK05
                  IF CLIENT.REC<171>='Y' THEN      ; * JMK05
                     CALL ELINE('Not a Logistics Client and Misroute Emails are still on')           ; * JMK05
                     GO 200              ; * JMK05
                  END                    ; * JMK05
               END                       ; * JMK05
               IF CLIENT.REC<93>='Y' THEN          ; * Logistics Client
                  CALL FB.1.1.VERIFY.LOGISTICS(CLIENT.ID,CLIENT.REC,VIN,VOUT)
                  IF VOUT<1> THEN
                     CALL ELINE('Error: Cannot Update.')
                     GOTO 200
                  END
                  IF CLIENT.REC<12>='N' AND CLIENT.REC<145>#'N' THEN
                     CALL ELINE('Error: Divisions set to No and DivEmailPrint set to E, B, or P.')
                     GOTO 200
                  END
                  IF ADD.FLAG=1 THEN
                     IF CLIENT.REC<125>='' THEN EMAIL.ATT=126 ELSE EMAIL.ATT=125
                     LOCATE 'LOGAUDIT@AFSLOGISTICS.COM' IN OCONV(CLIENT.REC,'MCU')<EMAIL.ATT> SETTING POS ELSE
                        CLIENT.REC<EMAIL.ATT,-1>='LogAudit@afs.net'
                     END
                  END
*OH 08-16-04      IF ADD.FLAG=1 THEN
*OH 08-16-04         IF CLIENT.REC<125>='' THEN EMAIL.ATT=126 ELSE EMAIL.ATT=125
*OH 08-16-04         LOCATE 'DDUPONT@AFSLOGISTICS.COM' IN OCONV(CLIENT.REC,'MCU')<EMAIL.ATT> SETTING POS ELSE
*OH 08-16-04            CLIENT.REC<EMAIL.ATT,-1>='DDupont@afs.net'
*OH 08-16-04         END
*OH 08-16-04      END
               END
               IF CLIENT.REC<139>='Y' THEN
                  IF CLIENT.REC<20>='N' THEN
                     CALL ELINE('Error: Must set vendors to Yes under data entry if misroute letters.')
                     GOTO 200
                  END
               END
               IF CLIENT.REC<100,13>+0 > 0 THEN
                  IF CLIENT.REC<123>='' OR CLIENT.REC<124>='' THEN
                     CALL ELINE('Error: Fax name and number must be updated since fax copies is > 0.')
                     GOTO 200
                  END
               END
               IF CLIENT.ID[1,2]#'99' THEN
                  IF CLIENT.REC<73>='' THEN
                     CALL ELINE('Error: Must have a Per Bill Rate.')
                     GOTO 200
                  END
                  IF CLIENT.REC<122>='' THEN
                     CALL ELINE('Error: Must have an EDI Per Bill Rate.')
                     GOTO 200
                  END
               END
               IF CLIENT.REC<125>#'' THEN
                  IF CLIENT.REC<134>='' OR CLIENT.REC<135>='' THEN
                     CALL ELINE('Error: Must enter Email body version and Email sort version under 24 Defaults.')
                     GOTO 200
                  END
               END
               IF CLIENT.ID[1,2]#'99' AND CLIENT.REC<16>#'Y' THEN
                  CALL ELINE('Error: Weights must be set to Y in 19 Data Entry Options.')
                  GOTO 200
               END
               IF CLIENT.REC<147>='' THEN
                  CALL ELINE('Error: Must enter a Parent-Client ID under 17 Reporting Options.')
                  GOTO 200
               END
               IF CLIENT.REC<116>='' THEN
                  CALL ELINE('Error: Must set Excel Macro under 17 Reporting Options.')
                  GOTO 200
               END
               * IF CLIENT.REC<147>#CLIENT.ID'R%5' THEN
               *  CALL ELINE("Warning:  Parent-Client ID is different from this Client's ID")
               * END
               IF CLIENT.REC<153>#'' THEN          ; * JMK03; * JMK06
                  IF CLIENT.REC<171>='' THEN       ; * JMK06
                     CLIENT.REC<171>='Y'           ; * JMK03
                  END                    ; * JMK06
               END                       ; * JMK03
               IF CLIENT.REC<154>#'' THEN          ; * JMK03; * JMK06
                  IF CLIENT.REC<171>='' THEN       ; * JMK06
                     CLIENT.REC<171>='Y'           ; * JMK03
                  END                    ; * JMK06
               END                       ; * JMK03
               IF CLIENT.REC<155>#'' THEN          ; * JMK03; * JMK06
                  IF CLIENT.REC<171>='' THEN       ; * JMK06
                     CLIENT.REC<171>='Y'           ; * JMK03
                  END                    ; * JMK06
               END                       ; * JMK03
               IF CLIENT.REC<31>='' THEN           ; * JMK22
                  CALL ELINE('Phone number is required.')    ; * JMK22
                  GOTO 200               ; * JMK22
               END                       ; * JMK22
               IF CLIENT.REC<183>#'' THEN          ; * JMK10
                  INDEX.ID=CLIENT.REC<183>:'*':CLIENT.REC<184>         ; * JMK10
                  READ INDEX.REC FROM F.INDEX,INDEX.ID ELSE INDEX.REC=''         ; * JMK10
                  LOCATE(CLIENT.ID,INDEX.REC,1;IPOS) ELSE    ; * JMK10
                     INDEX.REC=INSERT(INDEX.REC,1,IPOS;CLIENT.ID)      ; * JMK10
                     INDEX.REC=INSERT(INDEX.REC,2,IPOS;CLIENT.REC<2>)  ; * JMK10
                     WRITE INDEX.REC ON F.INDEX,INDEX.ID     ; * JMK10
                  END                    ; * JMK10
               END                       ; * JMK10
               IF CLIENT.REC<225>#'' AND OLD.CLIENT.REC<225>='' THEN
                  OPEN 'EDI.BILLS.HIST,':CLIENT.ID TO F.EDI.BILLS.HIST ELSE
                     EXECUTE 'CREATE-FILE DATA EDI.BILLS.HIST,':CLIENT.ID:' 1009,2'    ; * NKH01
                  END
               END
               WRITE CLIENT.REC ON F.CLIENT,CLIENT.ID
               INVOICE.UPD=0             ; * JMK24
               IF OLD.CLIENT.REC<44>#CLIENT.REC<44> THEN INVOICE.UPD=1           ; * JMK24
               IF OLD.CLIENT.REC<30>#CLIENT.REC<30> THEN                         ; * NPR01
                  IF CLIENT.REC<30> = "I" THEN GOSUB INACTIVE.EMAIL              ; * NPR01
               END                                                               ; * NPR01
               CONTACT.UPD=0             ; * JMK24
               IF OLD.CLIENT.REC<46>#CLIENT.REC<46> THEN CONTACT.UPD=1           ; * JMK24
               IF CONTACT.UPD OR INVOICE.UPD THEN  ; * JMK24
                  OPEN '','CL.CLIENTS' TO F.CL.CLIENT ELSE CALL OPEN.ABORT("CL.CLIENTS",PROG.NAME)   ; * JMK24
                  READU CL.CLIENT.REC FROM F.CL.CLIENT,CLIENT.ID THEN  ; * JMK24
                     CL.EMAIL.BODY=''    ; * JMK24
                     OLD.CL.CLIENT.REC=CL.CLIENT.REC         ; * JMK24
                     IF CONTACT.UPD THEN           ; * JMK24
                        CL.EMAIL.BODY<1,-1>='Old Contact:':OLD.CLIENT.REC<46>    ; * JMK24
                        CL.EMAIL.BODY<1,-1>='New Contact:':CLIENT.REC<46>        ; * JMK24
                        IF CL.CLIENT.REC<46>=OLD.CLIENT.REC<46> THEN   ; * JMK24
                           CL.CLIENT.REC<46>=CLIENT.REC<46>  ; * JMK24
                           CL.EMAIL.BODY<1,-1>='Claims Client updated with new contact.'   ; * JMK24
                        END ELSE         ; * JMK24
                           CL.EMAIL.BODY<1,-1>='Claims Client had different contact. No Update. FYI.'          ; * JMK24
                        END              ; * JMK24
                     END                 ; * JMK24
                     IF INVOICE.UPD THEN           ; * JMK24
                        CL.EMAIL.BODY<1,-1>='Old Invoice Attn:':OLD.CLIENT.REC<44>         ; * JMK24
                        CL.EMAIL.BODY<1,-1>='New Invoice Attn:':CLIENT.REC<44>   ; * JMK24
                        IF CL.CLIENT.REC<44>=OLD.CLIENT.REC<44> THEN   ; * JMK24
                           CL.CLIENT.REC<44>=CLIENT.REC<44>  ; * JMK24
                           CL.EMAIL.BODY<1,-1>='Claims Client updated with new invoice attention contact.'     ; * JMK24
                        END ELSE         ; * JMK24
                           CL.EMAIL.BODY<1,-1>='Claims Client had different invoice attention contact. No Update. FYI.'  ; * JMK24
                        END              ; * JMK24
                     END                 ; * JMK24
                     IF CL.CLIENT.REC#OLD.CL.CLIENT.REC THEN           ; * JMK24
                        WRITE CL.CLIENT.REC ON F.CL.CLIENT,CLIENT.ID   ; * JMK24
                     END                 ; * JMK24
                     CL.EMAIL.VIN=''     ; * JMK24
                     CL.EMAIL.VIN<1>='DCurtis@afs.net'       ; * JMK24
                     CL.EMAIL.VIN<3>='MKerbow@afs.net'       ; * JMK24
                     CL.EMAIL.VIN<4>='AFS_FB.1.1@afs.net'    ; * JMK24
                     CL.EMAIL.VIN<5>=USER:' made a change to the contact or invoice attn for client ':CLIENT.ID:' ':CLIENT.REC<2>  ; * JMK24
                     CL.EMAIL.VIN<6>=CL.EMAIL.BODY           ; * JMK24
                     CL.EMAIL.VIN<7>=1   ; * Auto format (add carriage returns to end of text) ; * JMK24
                     CL.EMAIL.VOUT=''    ; * JMK24
                     CALL SENDMAIL(CL.EMAIL.VIN,CL.EMAIL.VOUT)     ; * JMK24
                  END                    ; * JMK24
                  RELEASE F.CL.CLIENT,CLIENT.ID    ; * JMK24
               END                       ; * JMK24
               IF CLIENT.ID[1,2]='99' AND CLIENT.REC<12>#'Y' THEN
                  OPEN '','DIVISION.CODES,':CLIENT.ID TO F.DIV.CODE ELSE
                     CALL ELINE('Unable to open division file')
                     GOTO SKIP.DIV
                  END
                  READ DIV.REC FROM F.DIV.CODE,'00001' ELSE
                     DIV.REC=''
                     DIV.REC<1>=CLIENT.REC<6>
                     DIV.REC<16>=CLIENT.REC<4>
                     DIV.REC<17>=CLIENT.REC<5>
                     WRITE DIV.REC ON F.DIV.CODE,'00001'
                  END
               END
SKIP.DIV:***
               ADJUST.CLIENT.ID=CLIENT.ID:'*':DATE():'*':TIME():'*':USER
               WRITE CLIENT.REC ON F.ADJUST.CLIENT,ADJUST.CLIENT.ID
               IF CLIENT.REC<147>#OLD.CLIENT.REC<147> THEN   ; * JMK07
                  PARENT.ID=OLD.CLIENT.REC<147>    ; * JMK07
                  IF PARENT.ID#'' THEN   ; * JMK07
                     READU PARENT.REC FROM F.CLIENT,PARENT.ID THEN     ; * JMK07
                        PARENT.ORG=PARENT.REC      ; * JMK07
                        LOCATE(CLIENT.ID,PARENT.REC,175;CPOS) THEN     ; * JMK07
                           PARENT.REC=DELETE(PARENT.REC,175,CPOS)      ; * JMK07
                        END              ; * JMK07
                        IF PARENT.REC#PARENT.ORG THEN        ; * JMK07
                           WRITE PARENT.REC ON F.CLIENT,PARENT.ID      ; * JMK07
                        END              ; * JMK07
                     END                 ; * JMK07
                     RELEASE F.CLIENT,PARENT.ID    ; * JMK07
                  END                    ; * JMK07
               END                       ; * JMK07
               IF CLIENT.REC<147>#CLIENT.ID THEN   ; * JMK07
                  PARENT.ID=CLIENT.REC<147>        ; * JMK07
                  READU PARENT.REC FROM F.CLIENT,PARENT.ID THEN        ; * JMK07
                     PARENT.ORG=PARENT.REC         ; * JMK07
                     LOCATE(CLIENT.ID,PARENT.REC,175;CPOS;'AR') ELSE   ; * JMK07
                        PARENT.REC=INSERT(PARENT.REC,175,CPOS;CLIENT.ID)         ; * JMK07
                     END                 ; * JMK07
                     IF PARENT.REC#PARENT.ORG THEN           ; * JMK07
                        WRITE PARENT.REC ON F.CLIENT,PARENT.ID         ; * JMK07
                     END                 ; * JMK07
                  END                    ; * JMK07
                  RELEASE F.CLIENT,PARENT.ID       ; * JMK07
               END                       ; * JMK07
               CALL SOUNDEX.EDIT(OLD.CLIENT.REC<2>,CLIENT.REC<2>,CLIENT.ID,'SDX.CLIENTS,NAME')
               NVAL=DCOUNT(OLD.CLIENT.REC<226>,@VM)          ; * JMK32
               FOR VAL=1 TO NVAL         ; * JMK32
                  CALL SOUNDEX.EDIT(OLD.CLIENT.REC<226,VAL>,'',CLIENT.ID,'SDX.CLIENTS,NAME')         ; * JMK32
               NEXT VAL                  ; * JMK32
               NVAL=DCOUNT(CLIENT.REC<226>,@VM)    ; * JMK32
               FOR VAL=1 TO NVAL         ; * JMK32
                  CALL SOUNDEX.EDIT('',CLIENT.REC<226,VAL>,CLIENT.ID,'SDX.CLIENTS,NAME')   ; * JMK32
               NEXT VAL                  ; * JMK32

               * Find out if any changes/deletions/additions were made to the charges and charge pages, and if so email the changes
               * The charge attribute list below must be the same as in FB.1.1.CHARGES.NEW.
*              CHARGE.LIST=32:@VM:33:@VM:34:@VM:35:@VM:36:@VM:39:@VM:40:@VM:73:@VM:85:@VM:88:@VM:113:@VM:122:@VM:128:@VM:129:@VM:130:@VM:131:@VM:133   ; * JMK04
*              CHARGE.LIST=32:@VM:33:@VM:34:@VM:35:@VM:36:@VM:39:@VM:40:@VM:73:@VM:85:@VM:88:@VM:113:@VM:122:@VM:172:@VM:128:@VM:129:@VM:130:@VM:131:@VM:133     ; * JMK04; * JMK08
*              CHARGE.LIST=32:@VM:33:@VM:34:@VM:35:@VM:36:@VM:39:@VM:40:@VM:73:@VM:85:@VM:88:@VM:113:@VM:122:@VM:172:@VM:128:@VM:129:@VM:130:@VM:131:@VM:133:@VM:177:@VM:178         ; * JMK04; * JMK08; * JMK11
*              CHARGE.LIST=32:@VM:33:@VM:34:@VM:35:@VM:36:@VM:39:@VM:40:@VM:73:@VM:85:@VM:88:@VM:113:@VM:122:@VM:172:@VM:128:@VM:129:@VM:130:@VM:131:@VM:132:@VM:133:@VM:177:@VM:178:@VM:185   ; * JMK04; * JMK08; * JMK11 ; * JMK13
*              CHARGE.LIST=32:@VM:33:@VM:34:@VM:35:@VM:36:@VM:39:@VM:40:@VM:73:@VM:85:@VM:88:@VM:113:@VM:122:@VM:172:@VM:128:@VM:129:@VM:130:@VM:131:@VM:132:@VM:133:@VM:177:@VM:178:@VM:185:@VM:187     ; * JMK04; * JMK08; * JMK11 ; * JMK13 ; * JMK18
*              CHARGE.LIST=32:@VM:33:@VM:34:@VM:35:@VM:36:@VM:39:@VM:40:@VM:73:@VM:85:@VM:88:@VM:113:@VM:122:@VM:172:@VM:128:@VM:129:@VM:130:@VM:131:@VM:132:@VM:133:@VM:177:@VM:178:@VM:185:@VM:187:@VM:190     ; * JMK04; * JMK08; * JMK11 ; * JMK13 ; * JMK18 ; * JMK19
*              CHARGE.LIST=32:@VM:33:@VM:34:@VM:35:@VM:36:@VM:39:@VM:40:@VM:73:@VM:85:@VM:88:@VM:113:@VM:122:@VM:172:@VM:128:@VM:129:@VM:130:@VM:131:@VM:132:@VM:133:@VM:177:@VM:178:@VM:185:@VM:187:@VM:190:@VM:199         ; * JMK04; * JMK08; * JMK11 ; * JMK13 ; * JMK18 ; * JMK19 ; * JMK20
*              CHARGE.LIST=32:@VM:33:@VM:34:@VM:35:@VM:36:@VM:39:@VM:40:@VM:73:@VM:85:@VM:88:@VM:113:@VM:122:@VM:172:@VM:128:@VM:129:@VM:130:@VM:131:@VM:132:@VM:133:@VM:177:@VM:178:@VM:185:@VM:187:@VM:190:@VM:199:@VM:200           ; * JMK04; * JMK08; * JMK11 ; * JMK13 ; * JMK18 ; * JMK19 ; * JMK20 ; * JMK25
               NUM.CHARGES=DCOUNT(CHARGE.LIST,@VM)
               NUM.OLD.DATES=DCOUNT(OLD.CLIENT.REC<84>,@VM)
               NUM.NEW.DATES=DCOUNT(CLIENT.REC<84>,@VM)
               CHARGE.CHANGES=''         ; * Values on existing charge pages that changed
               CHARGE.DELETIONS=''       ; * Charge pages that were deleted
               CHARGE.ADDITIONS=''       ; * Charge pages that were created
               FSC.CHANGES=''            ; * FSC Flag was changed - JCW02
               CC=0 ; CD=0 ; CA=0        ; * Counters
               LOG.FSC.WARN=0            ; * JMK28

               * Changes/Deletions
               FOR X=1 TO NUM.OLD.DATES
                  LOCATE OLD.CLIENT.REC<84,X> IN CLIENT.REC<84> BY 'AR' SETTING DATE.POS THEN
                     * The old effective date was found in new client rec
                     FOR Y=1 TO NUM.CHARGES
                        ATTRIBUTE=CHARGE.LIST<1,Y>
                        *** In attributes 208 thru 219, if the new value is composed entirely
                        *** of sub-value markers, do not add to the change array
                        IF CLIENT.REC<ATTRIBUTE,DATE.POS> NE OLD.CLIENT.REC<ATTRIBUTE,X> THEN        ; * JCW03
                           ALL.SVM = 0   ; * JCW03
                           IF ATTRIBUTE >= 208 AND ATTRIBUTE <= 219 THEN GOSUB CHECK.VALUE           ; * JCW03
                           IF NOT(ALL.SVM) THEN    ; * JCW03
                              CC+=1
                              CHARGE.CHANGES<1,CC>=OLD.CLIENT.REC<84,X>
                              GOTO CC1
                           END           ; * JCW03
                        END              ; * JCW03
                     NEXT Y
CC1:                 FOR Y=1 TO NUM.CHARGES
                        ATTRIBUTE=CHARGE.LIST<1,Y>
                        *** In attributes 208 thru 219, if the new value is composed entirely
                        *** of sub-value markers, do not add to the change array
                        ALL.SVM = 0      ; * JCW03
                        IF CLIENT.REC<ATTRIBUTE,DATE.POS> NE OLD.CLIENT.REC<ATTRIBUTE,X> THEN        ; * JCW03
                           IF ATTRIBUTE >= 208 AND ATTRIBUTE <= 219 THEN GOSUB CHECK.VALUE           ; * JCW03
                        END              ; * JCW03
*                       IF CLIENT.REC<ATTRIBUTE,DATE.POS> NE OLD.CLIENT.REC<ATTRIBUTE,X> THEN                   ; * JCW03
                        IF CLIENT.REC<ATTRIBUTE,DATE.POS> NE OLD.CLIENT.REC<ATTRIBUTE,X> AND NOT(ALL.SVM) THEN           ; * JCW03
                           CHARGE.CHANGES<2,CC,-1>=ATTRIBUTE
*                          IF ATTRIBUTE=133 THEN ; * JMK27
                           IF ATTRIBUTE=133 OR (ATTRIBUTE>=208 AND ATTRIBUTE<=219) THEN    ; * JMK27
                              IF CHANGE(OLD.CLIENT.REC<ATTRIBUTE,X>,@SVM,CHAR(1))='' THEN
                                 CHARGE.CHANGES<3,CC,-1>=PLACE.HOLDER
                              END ELSE
                                 CHARGE.CHANGES<3,CC,-1>=CHANGE(OLD.CLIENT.REC<ATTRIBUTE,X>,@SVM,CHAR(1))
                              END
                              IF CHANGE(CLIENT.REC<ATTRIBUTE,DATE.POS>,@SVM,CHAR(1))='' THEN
                                 CHARGE.CHANGES<4,CC,-1>=PLACE.HOLDER
                              END ELSE
                                 CHARGE.CHANGES<4,CC,-1>=CHANGE(CLIENT.REC<ATTRIBUTE,DATE.POS>,@SVM,CHAR(1))
                              END
                           END ELSE
                              IF OLD.CLIENT.REC<ATTRIBUTE,X>='' THEN
                                 CHARGE.CHANGES<3,CC,-1>=PLACE.HOLDER
                              END ELSE
                                 CHARGE.CHANGES<3,CC,-1>=OLD.CLIENT.REC<ATTRIBUTE,X>
                              END
                              IF CLIENT.REC<ATTRIBUTE,DATE.POS>='' THEN
                                 CHARGE.CHANGES<4,CC,-1>=PLACE.HOLDER
                              END ELSE
                                 CHARGE.CHANGES<4,CC,-1>=CLIENT.REC<ATTRIBUTE,DATE.POS>
                              END
                              IF ATTRIBUTE=111 THEN          ; * JMK28
                                 IF OLD.CLIENT.REC<ATTRIBUTE,DATE.POS>='Y' AND CLIENT.REC<ATTRIBUTE,DATE.POS>='N' THEN   ; * JMK28
                                    LOG.FSC.WARN=1           ; * JMK28
                                 END     ; * JMK28
                              END        ; * JMK28
                           END
                        END
                     NEXT Y
                  END ELSE
                     * The effective date was not found in new client rec; therefore, it was deleted
                     CD+=1
                     CHARGE.DELETIONS<1,CD>=OLD.CLIENT.REC<84,X>
                     FOR Y=1 TO NUM.CHARGES
                        ATTRIBUTE=CHARGE.LIST<1,Y>
                        CHARGE.DELETIONS<2,CD,-1>=ATTRIBUTE
*                       IF ATTRIBUTE=133 THEN ; * JMK27
                        IF ATTRIBUTE=133 OR (ATTRIBUTE>=208 AND ATTRIBUTE<=219) THEN       ; * JMK27
                           IF CHANGE(OLD.CLIENT.REC<ATTRIBUTE,X>,@SVM,CHAR(1))='' THEN
                              CHARGE.DELETIONS<3,CD,-1>=PLACE.HOLDER
                           END ELSE
                              CHARGE.DELETIONS<3,CD,-1>=CHANGE(OLD.CLIENT.REC<ATTRIBUTE,X>,@SVM,CHAR(1))
                           END
                           CHARGE.DELETIONS<4,CD,-1>='<DELETED>':CHAR(1):'<DELETED>':CHAR(1):'<DELETED>'
                        END ELSE
                           IF OLD.CLIENT.REC<ATTRIBUTE,X>='' THEN
                              CHARGE.DELETIONS<3,CD,-1>=PLACE.HOLDER
                           END ELSE
                              CHARGE.DELETIONS<3,CD,-1>=OLD.CLIENT.REC<ATTRIBUTE,X>
                           END
                           CHARGE.DELETIONS<4,CD,-1>='<DELETED>'
                        END
                     NEXT Y
                  END                    ; * LOCATE OLD.CLIENT.REC<84,X> IN CLIENT.REC<84> BY 'AR' SETTING DATE.POS THEN
               NEXT X

               * Additions
               FOR X=1 TO NUM.NEW.DATES
                  LOCATE CLIENT.REC<84,X> IN OLD.CLIENT.REC<84> BY 'AR' SETTING DATE.POS ELSE
                     CA+=1
                     CHARGE.ADDITIONS<1,CA>=CLIENT.REC<84,X>
                     FOR Y=1 TO NUM.CHARGES
                        ATTRIBUTE=CHARGE.LIST<1,Y>
                        IF X=1 THEN      ; * First page => compare to null or zero
                           BEGIN CASE
                              CASE ATTRIBUTE=131
                                 IF CLIENT.REC<ATTRIBUTE,X> NE '' THEN
                                    CHARGE.ADDITIONS<2,CA,-1>=ATTRIBUTE
                                    CHARGE.ADDITIONS<3,CA,-1>=PLACE.HOLDER
                                    CHARGE.ADDITIONS<4,CA,-1>=CLIENT.REC<ATTRIBUTE,X>
                                 END
*                             CASE ATTRIBUTE=133 ; * JMK27
                              CASE ATTRIBUTE=133 OR (ATTRIBUTE>=208 AND ATTRIBUTE<=219)    ; * JMK27
                                 IF CHANGE(CLIENT.REC<ATTRIBUTE,X>,@SVM,'') NE '' THEN
                                    CHARGE.ADDITIONS<2,CA,-1>=ATTRIBUTE
                                    CHARGE.ADDITIONS<3,CA,-1>=PLACE.HOLDER:CHAR(1):PLACE.HOLDER:CHAR(1):PLACE.HOLDER
                                    CHARGE.ADDITIONS<4,CA,-1>=CHANGE(CLIENT.REC<ATTRIBUTE,X>,@SVM,CHAR(1))
                                 END
                              CASE 1
                                 IF CLIENT.REC<ATTRIBUTE,X> NE '0' THEN
                                    CHARGE.ADDITIONS<2,CA,-1>=ATTRIBUTE
                                    CHARGE.ADDITIONS<3,CA,-1>='0'
                                    CHARGE.ADDITIONS<4,CA,-1>=CLIENT.REC<ATTRIBUTE,X>
                                 END
                           END CASE
                        END ELSE         ; * Not first page => compare to previous value
                           IF CLIENT.REC<ATTRIBUTE,X> NE CLIENT.REC<ATTRIBUTE,X-1> THEN
                              CHARGE.ADDITIONS<2,CA,-1>=ATTRIBUTE
*                             IF ATTRIBUTE=133 THEN ; * JMK27
                              IF ATTRIBUTE=133 OR (ATTRIBUTE>=208 AND ATTRIBUTE<=219) THEN           ; * JMK27
                                 IF CHANGE(CLIENT.REC<ATTRIBUTE,X-1>,@SVM,CHAR(1))='' THEN
                                    CHARGE.ADDITIONS<3,CA,-1>=PLACE.HOLDER
                                 END ELSE
                                    CHARGE.ADDITIONS<3,CA,-1>=CHANGE(CLIENT.REC<ATTRIBUTE,X-1>,@SVM,CHAR(1))
                                 END
                                 IF CHANGE(CLIENT.REC<ATTRIBUTE,X>,@SVM,CHAR(1))='' THEN
                                    CHARGE.ADDITIONS<4,CA,-1>=PLACE.HOLDER
                                 END ELSE
                                    CHARGE.ADDITIONS<4,CA,-1>=CHANGE(CLIENT.REC<ATTRIBUTE,X>,@SVM,CHAR(1))
                                 END
                              END ELSE
                                 IF CLIENT.REC<ATTRIBUTE,X-1>='' THEN
                                    CHARGE.ADDITIONS<3,CA,-1>=PLACE.HOLDER
                                 END ELSE
                                    CHARGE.ADDITIONS<3,CA,-1>=CLIENT.REC<ATTRIBUTE,X-1>
                                 END
                                 IF CLIENT.REC<ATTRIBUTE,X>='' THEN
                                    CHARGE.ADDITIONS<4,CA,-1>=PLACE.HOLDER
                                 END ELSE
                                    CHARGE.ADDITIONS<4,CA,-1>=CLIENT.REC<ATTRIBUTE,X>
                                 END
                              END
                           END
                        END              ; * IF X=1 THEN
                     NEXT Y
                  END                    ; * LOCATE CLIENT.REC<84,X> IN OLD.CLIENT.REC<84> BY 'AR' SETTING DATE.POS ELSE
               NEXT X
*** COMMENTED OUT - JCW02
*              IF CLIENT.REC<189>#OLD.CLIENT.REC<189> THEN   ; * JMK16
*                 ATTRIBUTE=189          ; *JMK16
*                 BEGIN CASE             ; * JMK16
*                    CASE CLIENT.REC<189>#'' AND OLD.CLIENT.REC<189>=''          ; * JMK16 ; * NEW
*                       CA+=1            ; * JMK16
*                       CHARGE.ADDITIONS<1,CA>=CLIENT.REC<189>         ; * JMK16
*                       CHARGE.ADDITIONS<2,CA,-1>=ATTRIBUTE  ; * JMK16
*                       CHARGE.ADDITIONS<3,CA,-1>=''         ; * JMK16
*                       CHARGE.ADDITIONS<4,CA,-1>=CLIENT.REC<ATTRIBUTE>          ; * JMK16
*                    CASE CLIENT.REC<189>='' AND OLD.CLIENT.REC<189>#''          ; * JMK16 ; * NEW
*                       CD+=1            ; * JMK16
*                       CHARGE.DELETIONS<1,CA>=OLD.CLIENT.REC<189>     ; * JMK16
*                       CHARGE.DELETIONS<2,CD,-1>=ATTRIBUTE  ; * JMK16
*                       IF OLD.CLIENT.REC<ATTRIBUTE>='' THEN           ; * JMK16
*                          CHARGE.DELETIONS<3,CD,-1>=PLACE.HOLDER      ; * JMK16
*                       END ELSE         ; * JMK16
*                          CHARGE.DELETIONS<3,CD,-1>=OLD.CLIENT.REC<ATTRIBUTE>   ; * JMK16
*                       END              ; * JMK16
*                       CHARGE.DELETIONS<4,CD,-1>='<DELETED>'          ; * JMK16
*                   CASE 1              ; * JMK16
*                       CC+=1            ; * JMK16
*                       CHARGE.CHANGES<1,CA>=CLIENT.REC<189>           ; * JMK16
*                       CHARGE.CHANGES<2,CC,-1>=ATTRIBUTE    ; * JMK16
*                       IF OLD.CLIENT.REC<ATTRIBUTE>='' THEN           ; * JMK16
*                          CHARGE.CHANGES<3,CC,-1>=PLACE.HOLDER        ; * JMK16
*                       END ELSE         ; * JMK16
*                          CHARGE.CHANGES<3,CC,-1>=OLD.CLIENT.REC<ATTRIBUTE>     ; * JMK16
*                       END              ; * JMK16
*                       IF CLIENT.REC<ATTRIBUTE>='' THEN     ; * JMK16
*                         CHARGE.CHANGES<4,CC,-1>=PLACE.HOLDER        ; * JMK16
*                       END ELSE         ; * JMK16
*                          CHARGE.CHANGES<4,CC,-1>=CLIENT.REC<ATTRIBUTE>         ; * JMK16
*                       END              ; * JMK16
*                 END CASE               ; * JMK16
*              END                       ; * JMK16
*** END JCW02
               IF CLIENT.REC<189> # OLD.CLIENT.REC<189> THEN           ; * JCW02
                  FSC.CHANGES<1> = DATE()          ; * JCW02
                  FSC.CHANGES<2> = 189   ; * JCW02
                  FSC.CHANGES<3> = OLD.CLIENT.REC<189>       ; * JCW02
                  FSC.CHANGES<4> = CLIENT.REC<189>           ; * JCW02
               END ELSE                  ; * JCW02
                  FSC.CHANGES = ''       ; * JCW02
               END                       ; * JCW02

               CHARGE.CHANGES=CHANGE(CHARGE.CHANGES,PLACE.HOLDER,'')
               CHARGE.DELETIONS=CHANGE(CHARGE.DELETIONS,PLACE.HOLDER,'')
               CHARGE.ADDITIONS=CHANGE(CHARGE.ADDITIONS,PLACE.HOLDER,'')

*              IF CHARGE.CHANGES#'' OR CHARGE.DELETIONS#'' OR CHARGE.ADDITIONS#'' THEN                    ; * JCW02
               IF CHARGE.CHANGES#'' OR CHARGE.DELETIONS#'' OR CHARGE.ADDITIONS#'' OR FSC.CHANGES#'' THEN       ; * JCW02
                  IF CLIENT.ID[1,2]#'99' THEN      ; * JMK21
                     GOSUB EMAIL.CHARGE.PAGE.CHANGES
                  END                    ; * JMK21
               END
               IF LOG.FSC.WARN THEN      ; * JMK28
                  IF CLIENT.ID[1,2]#'99' THEN      ; * JMK28
                     GOSUB EMAIL.LOG.FSC.ALERT     ; * JMK28
                  END                    ; * JMK28
               END                       ; * JMK28
               GOTO 100
            CASE QI='N'
               RELEASE F.CLIENT,CLIENT.ID
               GOTO 100
            CASE 1
               GOTO 99000
         END CASE
      END
      CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      IF NOT(DISPLAY.MODE) THEN RELEASE F.CLIENT,CLIENT.ID
      GOTO 100
99999:CALL ELINE('Invalid selection - View Only')
      RETURN

********************************************************************************

EMAIL.CHARGE.PAGE.CHANGES:***
* Send emails out showing a change or addition was made to the charge page
      EMAIL.OUT=''
      EMAIL.OUT<1,1>='BBarker@afs.net'   ; * TO: Email addresses
      EMAIL.OUT<1,2>='KGilbert@afs.net'
      EMAIL.OUT<1,3>='OHolman@afs.net'
      EMAIL.OUT<1,4>='SMatthews@afs.net'
      EMAIL.OUT<1,5>='MButts@afs.net'
      EMAIL.OUT<1,6>='MMcKay@afs.net'
*DF      EMAIL.OUT<1,7>='DCurtis@afs.net'
*
* Removed Debbie from the email per ticket 070305. DRF 08/21/07
*
*DF      EMAIL.OUT=''
*DFCALL ELINE('PRESS BREAK')
*DF      EMAIL.OUT<1,1>='DFriend@afs.net'
*     EMAIL.OUT<2,1>='J-ames@afs.net';             * CC: Email addresses
*     EMAIL.OUT<2,1>='MKerbow@afs.net'    ; * JMK17
*     EMAIL.OUT<3> = 'JWebert@afs.net'   ; * JCW02 ; * BCC: Email addresses
      EMAIL.OUT<4>='Reports@afs.net'     ; * From Email address

      * Subject of Email
*     SALESMAN.ID=CLIENT.REC<114>        ; * JMK15
      SALESMAN.ID=CLIENT.REC<115>        ; * JMK15
      IF SALESMAN.ID='' THEN
*        LEAD.SALESMAN='No Lead Salesman on File'  ; * JMK15
         LEAD.SALESMAN='No Servicing Salesman on File'       ; * JMK15
      END ELSE
         READ SALESMAN.REC FROM F.SLSMAN,SALESMAN.ID THEN
*         LEAD.SALESMAN=SALESMAN.ID:' ':SALESMAN.REC<1>
            LEAD.SALESMAN=SALESMAN.REC<1>:'-':SALESMAN.ID
         END ELSE
*         LEAD.SALESMAN=SALESMAN.ID:' Name Not Found'
            LEAD.SALESMAN='Name Not Found-':SALESMAN.ID
         END
      END

*     EMAIL.OUT<5,1>=CLIENT.ID:' ':CLIENT.REC<2>:' ':LEAD.SALESMAN
      EMAIL.OUT<5,1>=CLIENT.REC<2>:'-':CLIENT.ID:' ':LEAD.SALESMAN

      * Email body
      EMAIL.OUT<6,-1>=USER:' made a change to the charge page for client ':CLIENT.ID:' ':CLIENT.REC<2>
      EMAIL.OUT<6,-1>='at ':OCONV(TIME(),'MTHS'):' on ':DATE()'D4/':'.'

      IF CHARGE.CHANGES#'' THEN
         CHARGE.ARRAY=CHARGE.CHANGES
         CHARGE.DESCRIPTION='An Existing Charge Page With Effective Date ':PLACE.HOLDER:' Contains Values That Were Changed'
         CHARGE.TITLE2=CLIENT.ID:' ':CLIENT.REC<2>
         CHARGE.TITLE3=LEAD.SALESMAN
         GOSUB SET.TITLE
         GOSUB EMAIL.BODY
      END

      IF CHARGE.DELETIONS#'' THEN
         CHARGE.ARRAY=CHARGE.DELETIONS
         CHARGE.DESCRIPTION='An Existing Charge Page With Effective Date ':PLACE.HOLDER:' Was Deleted'
         CHARGE.TITLE2=CLIENT.ID:' ':CLIENT.REC<2>
         CHARGE.TITLE3=LEAD.SALESMAN
         GOSUB SET.TITLE
         GOSUB EMAIL.BODY
      END

      IF CHARGE.ADDITIONS#'' THEN
         CHARGE.ARRAY=CHARGE.ADDITIONS
         CHARGE.DESCRIPTION='A New Charge Page With Effective Date ':PLACE.HOLDER:' Was Created'
         CHARGE.TITLE2=CLIENT.ID:' ':CLIENT.REC<2>
         CHARGE.TITLE3=LEAD.SALESMAN
         GOSUB SET.TITLE
         GOSUB EMAIL.BODY
      END

      IF FSC.CHANGES#'' THEN             ; * JCW02
         CHARGE.ARRAY=FSC.CHANGES        ; * JCW02
         CHARGE.DESCRIPTION='A Change Was Made to the Carrier FSC Flag'          ; * JCW02
         CHARGE.TITLE2=CLIENT.ID:' ':CLIENT.REC<2>           ; * JCW02
         CHARGE.TITLE3=LEAD.SALESMAN     ; * JCW02
         GOSUB SET.TITLE                 ; * JCW02
         GOSUB EMAIL.BODY                ; * JCW02
      END                                ; * JCW02

      SCREEN.TXT=''                      ; * JMK17
      CALL FB.1.1.CHARGES.SCREEN(CLIENT.ID,CLIENT.REC,DATE(),SCREEN.TXT)         ; * JMK17
      IF SCREEN.TXT#'' THEN              ; * JMK17
         NATT=DCOUNT(SCREEN.TXT,@AM)     ; * JMK17
         FOR ATT=1 TO NATT               ; * JMK17
            SCREEN.LINE=SCREEN.TXT<ATT>  ; * JMK19
            IF SCREEN.LINE='' THEN SCREEN.LINE=' '           ; * JMK19
            EMAIL.OUT<6,-1>=SCREEN.LINE  ; * JMK17
         NEXT ATT                        ; * JMK17
      END                                ; * JMK17
      EMAIL.OUT<7>=1                     ; * Auto format (add carriage returns to end of text)
      VOUT=''
      CALL SENDMAIL(EMAIL.OUT,VOUT)
      RETURN

********************************************************************************

EMAIL.BODY:***
      NUM.PAGES=DCOUNT(CHARGE.ARRAY<1>,@VM)
      FOR X=1 TO NUM.PAGES
         EFF.DATE=CHARGE.ARRAY<1,X>
         CHARGE.TITLE1=CHANGE(CHARGE.DESCRIPTION,PLACE.HOLDER,EFF.DATE'D4-')
         NUM.CHANGES=DCOUNT(CHARGE.ARRAY<2,X>,@SVM)
         EMAIL.OUT<6,-1>=' '
         EMAIL.OUT<6,-1>=' '
         EMAIL.OUT<6,-1>=CHARGE.TITLE1
         EMAIL.OUT<6,-1>=CHARGE.TITLE2
         EMAIL.OUT<6,-1>=CHARGE.TITLE3
         EMAIL.OUT<6,-1>=' '
*        EMAIL.OUT<6,-1>='    Description (attribute)         Old Value         New Value'  ; * JCW02
         EMAIL.OUT<6,-1>='    Description (attribute)          Values'           ; * JCW02
         EMAIL.OUT<6,-1>='    -----------------------------------------------------------'
         FOR Y=1 TO NUM.CHANGES
            ATTRIBUTE=CHARGE.ARRAY<2,X,Y>
            READ CLIENT.DICT FROM F.DICT.CLIENT,ATTRIBUTE ELSE CLIENT.DICT=''
            DESCRIPTION=CLIENT.DICT<3>
            CONVERSION=CLIENT.DICT<7>
*           IF ATTRIBUTE#133 THEN ; * JMK27
*** COMMENTED OUT - JCW02
*           IF ATTRIBUTE#133 AND ATTRIBUTE<208 AND ATTRIBUTE>219 THEN ; * JMK27
*              LINE=DESCRIPTION:' (':ATTRIBUTE:')'
*              LINE=LINE'L#30':'  '
*              IF ATTRIBUTE=131 THEN
*                 IF CHARGE.ARRAY<3,X,Y>='' THEN
*                    LINE:=SPACE(18)
*                 END ELSE
*                    LINE:=OCONV(CHARGE.ARRAY<3,X,Y>,CONVERSION)'R#9':SPACE(9)
*                 END
*                 IF CHARGE.ARRAY<4,X,Y>='' THEN
*                    LINE:=SPACE(9)
*                 END ELSE
*                    LINE:=OCONV(CHARGE.ARRAY<4,X,Y>,CONVERSION)'R#9'
*                 END
*              END ELSE
*                 LINE:=OCONV(CHARGE.ARRAY<3,X,Y>,CONVERSION)'R#9':SPACE(9)
*                 LINE:=OCONV(CHARGE.ARRAY<4,X,Y>,CONVERSION)'R#9'
*              END
*              EMAIL.OUT<6,-1>='    ':LINE
*           END ELSE
*           END
*** END JCW02
            BEGIN CASE                   ; * JMK27
               CASE ATTRIBUTE=133        ; * JMK27
                  EMAIL.OUT<6,-1>=' '
                  EMAIL.OUT<6,-1>='    Charge Page Notes BEFORE Change:'
                  EMAIL.OUT<6,-1>='    ':DESCRIPTION:' (':ATTRIBUTE:') ':FIELD(CHARGE.ARRAY<3,X,Y>,CHAR(1),1)
                  EMAIL.OUT<6,-1>='    ':DESCRIPTION:' (':ATTRIBUTE:') ':FIELD(CHARGE.ARRAY<3,X,Y>,CHAR(1),2)
                  EMAIL.OUT<6,-1>='    ':DESCRIPTION:' (':ATTRIBUTE:') ':FIELD(CHARGE.ARRAY<3,X,Y>,CHAR(1),3)
                  EMAIL.OUT<6,-1>=' '
                  EMAIL.OUT<6,-1>='    Charge Page Notes AFTER Change:'
                  EMAIL.OUT<6,-1>='    ':DESCRIPTION:' (':ATTRIBUTE:') ':FIELD(CHARGE.ARRAY<4,X,Y>,CHAR(1),1)
                  EMAIL.OUT<6,-1>='    ':DESCRIPTION:' (':ATTRIBUTE:') ':FIELD(CHARGE.ARRAY<4,X,Y>,CHAR(1),2)
                  EMAIL.OUT<6,-1>='    ':DESCRIPTION:' (':ATTRIBUTE:') ':FIELD(CHARGE.ARRAY<4,X,Y>,CHAR(1),3)
               CASE ATTRIBUTE = 189      ; * JCW02
                  EMAIL.OUT<6,-1>=' '    ; * JCW02
                  EMAIL.OUT<6,-1>='    ':DESCRIPTION:' BEFORE Change:'           ; * JCW02
                  EMAIL.OUT<6,-1>='    ':DESCRIPTION:' (':ATTRIBUTE:') ':CHARGE.ARRAY<3,X,Y>'R#20'   ; * JCW02
                  EMAIL.OUT<6,-1>=' '    ; * JCW02
                  EMAIL.OUT<6,-1>='    ':DESCRIPTION:' AFTER Change:'  ; * JCW02
                  EMAIL.OUT<6,-1>='    ':DESCRIPTION:' (':ATTRIBUTE:') ':CHARGE.ARRAY<4,X,Y>'R#20'   ; * JCW02
               CASE 1                    ; * JMK27
                  IF INDEX(CHARGE.ARRAY,CHAR(1),1) THEN      ; * JCW02
                     EMAIL.OUT<6,-1>=' '           ; * JMK27
                     EMAIL.OUT<6,-1>='    ':DESCRIPTION:' BEFORE Change:'        ; * JMK27
                     NDTL=DCOUNT(CHARGE.ARRAY<3,X,Y>,CHAR(1))          ; * JMK27
                     IF NDTL = 0 THEN NDTL=DCOUNT(CHARGE.ARRAY<4,X,Y>,CHAR(1))   ; * JCW03
                     FOR DTL=1 TO NDTL   ; * JMK27
*                       EMAIL.OUT<6,-1>='    ':DESCRIPTION:' (':ATTRIBUTE:') ':OCONV(FIELD(CHARGE.ARRAY<3,X,Y>,CHAR(1),DTL),CONVERSION)'R#9' ; * JMK27
                        EMAIL.OUT<6,-1>='    ':DESCRIPTION:' (':ATTRIBUTE:') ':OCONV(FIELD(CHARGE.ARRAY<3,X,Y>,CHAR(1),DTL),CONVERSION)'R#20'          ; * JMK27  ; * JCW02
                     NEXT DTL            ; * JMK27
                     EMAIL.OUT<6,-1>=' '           ; * JMK27
                     EMAIL.OUT<6,-1>='    ':DESCRIPTION:' AFTER Change:'         ; * JMK27
                     FOR DTL=1 TO NDTL   ; * JMK27
*                       EMAIL.OUT<6,-1>='    ':DESCRIPTION:' (':ATTRIBUTE:') ':OCONV(FIELD(CHARGE.ARRAY<4,X,Y>,CHAR(1),DTL),CONVERSION)'R#9' ; * JMK27
                        EMAIL.OUT<6,-1>='    ':DESCRIPTION:' (':ATTRIBUTE:') ':OCONV(FIELD(CHARGE.ARRAY<4,X,Y>,CHAR(1),DTL),CONVERSION)'R#20'          ; * JMK27  ; * JCW02
                     NEXT DTL            ; * JMK27
                  END ELSE               ; * JCW02
                     EMAIL.OUT<6,-1>=' '           ; * JCW02
                     EMAIL.OUT<6,-1>='    ':DESCRIPTION:' BEFORE Change:'        ; * JCW02
                     EMAIL.OUT<6,-1>='    ':DESCRIPTION:' (':ATTRIBUTE:') ':OCONV(CHARGE.ARRAY<3,X,Y>,CONVERSION)'R#20'  ; * JCW02
                     EMAIL.OUT<6,-1>=' '           ; * JCW02
                     EMAIL.OUT<6,-1>='    ':DESCRIPTION:' AFTER Change:'         ; * JCW02
                     EMAIL.OUT<6,-1>='    ':DESCRIPTION:' (':ATTRIBUTE:') ':OCONV(CHARGE.ARRAY<4,X,Y>,CONVERSION)'R#20'  ; * JCW02
                  END                    ; * JCW02
            END CASE
         NEXT Y
      NEXT X
      RETURN

********************************************************************************

SET.TITLE:***
      LONGEST.ID=1
      LONGEST.LEN=LEN(CHARGE.DESCRIPTION)
      IF LEN(CHARGE.TITLE2)>LONGEST.LEN THEN
         LONGEST.ID=2
         LONGEST.LEN=LEN(CHARGE.TITLE2)
      END
      IF LEN(CHARGE.TITLE3)>LONGEST.LEN THEN
         LONGEST.ID=3
         LONGEST.LEN=LEN(CHARGE.TITLE3)
      END
      BEGIN CASE
         CASE LONGEST.ID=1
            CHARGE.TITLE2=SPACE(INT((LONGEST.LEN-LEN(CHARGE.TITLE2))/2)):CHARGE.TITLE2
            CHARGE.TITLE2=CHARGE.TITLE2:SPACE(LONGEST.LEN-LEN(CHARGE.TITLE2))
            CHARGE.TITLE3=SPACE(INT((LONGEST.LEN-LEN(CHARGE.TITLE3))/2)):CHARGE.TITLE3
            CHARGE.TITLE3=CHARGE.TITLE3:SPACE(LONGEST.LEN-LEN(CHARGE.TITLE3))
         CASE LONGEST.ID=2
            CHARGE.DESCRIPTION=SPACE(INT((LONGEST.LEN-LEN(CHARGE.DESCRIPTION))/2)):CHARGE.DESCRIPTION
            CHARGE.DESCRIPTION=CHARGE.DESCRIPTION:SPACE(LONGEST.LEN-LEN(CHARGE.DESCRIPTION))
            CHARGE.TITLE3=SPACE(INT((LONGEST.LEN-LEN(CHARGE.TITLE3))/2)):CHARGE.TITLE3
            CHARGE.TITLE3=CHARGE.TITLE3:SPACE(LONGEST.LEN-LEN(CHARGE.TITLE3))
         CASE LONGEST.ID=3
            CHARGE.DESCRIPTION=SPACE(INT((LONGEST.LEN-LEN(CHARGE.DESCRIPTION))/2)):CHARGE.DESCRIPTION
            CHARGE.DESCRIPTION=CHARGE.DESCRIPTION:SPACE(LONGEST.LEN-LEN(CHARGE.DESCRIPTION))
            CHARGE.TITLE2=SPACE(INT((LONGEST.LEN-LEN(CHARGE.TITLE2))/2)):CHARGE.TITLE2
            CHARGE.TITLE2=CHARGE.TITLE2:SPACE(LONGEST.LEN-LEN(CHARGE.TITLE2))
      END CASE
      CHARGE.DESCRIPTION='*** ':CHARGE.DESCRIPTION:' ***'
      CHARGE.TITLE2='*** ':CHARGE.TITLE2:' ***'
      CHARGE.TITLE3='*** ':CHARGE.TITLE3:' ***'
      RETURN
********************************************************************************

EMAIL.LOG.FSC.ALERT:***
*
* Send emails out showing a change in Logistics FSC from "Y" to "N"
*
      EMAIL.OUT=''
      EMAIL.OUT<1,1>='BBarker@afs.net'   ; * TO: Email addresses
      EMAIL.OUT<1,2>='KGilbert@afs.net'
      EMAIL.OUT<1,3>='OHolman@afs.net'
      EMAIL.OUT<1,4>='BJeppson@afs.net'
      EMAIL.OUT<3>=''                    ; * BCC: Email addresses
      EMAIL.OUT<4>='***ALERT***@afs.net'           ; * From Email address

* Subject of Email
      SALESMAN.ID=CLIENT.REC<115>        ; * JMK15
      IF SALESMAN.ID='' THEN
         LEAD.SALESMAN='No Servicing Salesman on File'       ; * JMK15
      END ELSE
         READ SALESMAN.REC FROM F.SLSMAN,SALESMAN.ID THEN
            LEAD.SALESMAN=SALESMAN.REC<1>:'-':SALESMAN.ID
         END ELSE
            LEAD.SALESMAN='Name Not Found-':SALESMAN.ID
         END
      END

      EMAIL.OUT<5,1>=CLIENT.REC<2>:'-':CLIENT.ID:' ':LEAD.SALESMAN

* Email body
      EMAIL.OUT<6,-1>=USER:' made a change to the charge page for client ':CLIENT.ID:' ':CLIENT.REC<2>
      EMAIL.OUT<6,-1>='at ':OCONV(TIME(),'MTHS'):' on ':DATE()'D4/':'.'
      EMAIL.OUT<6,-1>='The Logistics FSC field has been changed from Y to N.  This could result '    ; * JMK28
      EMAIL.OUT<6,-1>='in reduced revenue for AFS.  Please confirm the validity of this change.'     ; * JMK28

      EMAIL.OUT<7>=1                     ; * Auto format (add carriage returns to end of text)
      VOUT=''
      CALL SENDMAIL(EMAIL.OUT,VOUT)
      RETURN

*
GET.CHARGE.LIST:* JMK25
*
      CHARGE.LIST=''                     ; * JMK25
      CHARGE.LIST<1,-1>=32               ; * JMK25
      CHARGE.LIST<1,-1>=33               ; * JMK25
      CHARGE.LIST<1,-1>=34               ; * JMK25
      CHARGE.LIST<1,-1>=35               ; * JMK25
      CHARGE.LIST<1,-1>=36               ; * JMK25
      CHARGE.LIST<1,-1>=39               ; * JMK25
      CHARGE.LIST<1,-1>=40               ; * JMK25
      CHARGE.LIST<1,-1>=73               ; * JMK25
      CHARGE.LIST<1,-1>=85               ; * JMK25
      CHARGE.LIST<1,-1>=88               ; * JMK25
      CHARGE.LIST<1,-1>=111              ; * JMK28
      CHARGE.LIST<1,-1>=113              ; * JMK25
      CHARGE.LIST<1,-1>=122              ; * JMK25
      CHARGE.LIST<1,-1>=172              ; * JMK25
      CHARGE.LIST<1,-1>=128              ; * JMK25
      CHARGE.LIST<1,-1>=129              ; * JMK25
      CHARGE.LIST<1,-1>=130              ; * JMK25
      CHARGE.LIST<1,-1>=131              ; * JMK25
      CHARGE.LIST<1,-1>=132              ; * JMK25
      CHARGE.LIST<1,-1>=133              ; * JMK25
      CHARGE.LIST<1,-1>=177              ; * JMK25
      CHARGE.LIST<1,-1>=178              ; * JMK25
      CHARGE.LIST<1,-1>=185              ; * JMK25
      CHARGE.LIST<1,-1>=187              ; * JMK25
      CHARGE.LIST<1,-1>=190              ; * JMK25
      CHARGE.LIST<1,-1>=199              ; * JMK25
      CHARGE.LIST<1,-1>=200              ; * JMK25
      CHARGE.LIST<1,-1>=208              ; * JMK26
      CHARGE.LIST<1,-1>=209              ; * JMK26
      CHARGE.LIST<1,-1>=210              ; * JMK26
      CHARGE.LIST<1,-1>=211              ; * JMK26
      CHARGE.LIST<1,-1>=212              ; * JMK26
      CHARGE.LIST<1,-1>=213              ; * JMK26
      CHARGE.LIST<1,-1>=214              ; * JMK26
      CHARGE.LIST<1,-1>=215              ; * JMK26
      CHARGE.LIST<1,-1>=216              ; * JMK26
      CHARGE.LIST<1,-1>=217              ; * JMK26
      CHARGE.LIST<1,-1>=218              ; * JMK26
      CHARGE.LIST<1,-1>=219              ; * JMK26
      RETURN                             ; * JMK25
*
INACTIVE.EMAIL:*              ; * NPR01
*
* Send emails out showing a change in Clients Status to Inactive
*
      EMAIL.OUT=''
      EMAIL.OUT<1,1> = 'NPratt@afs.net'  ;*ZZ
*ZZ      EMAIL.OUT<1,1>='BBarker@AFS.net'   ; * TO: Email addresses
*ZZ   EMAIL.OUT<1,2>='KGilbert@afs.net'
*ZZ   EMAIL.OUT<1,3>='OHolman@afs.net'
*ZZ   EMAIL.OUT<1,4>='BJeppson@afs.net'
*ZZ   EMAIL.OUT<1,5>='MButts@afs.net'
*ZZ   EMAIL.OUT<1,6>='SMatthews@afs.net'
      EMAIL.OUT<3>=''                    ; * BCC: Email addresses
      EMAIL.OUT<4>='***ALERT***@afs.net'           ; * From Email address

      EMAIL.OUT<5,1>=CLIENT.REC<2>:'-':CLIENT.ID:' Status set to Inactive'

* Email body
      READV USER.NAME FROM F.BCTRL, USER,13 ELSE USER.NAME = ""
      IF USER.NAME NE "" THEN USER.STRING = USER:" - ":USER.NAME ELSE USER.STRING = USER
      EMAIL.OUT<6,-1>=USER.STRING:' Changed status of client ':CLIENT.ID:' ':CLIENT.REC<2>:' to Inactive'
      EMAIL.OUT<6,-1>='at ':OCONV(TIME(),'MTHS'):' on ':DATE()'D4/':'.'
      EMAIL.OUT<7>=1                     ; * Auto format (add carriage returns to end of text)
      VOUT=''
      CALL SENDMAIL(EMAIL.OUT,VOUT)
*
RETURN
*NPR01
*
CHECK.VALUE:                             ; * JCW03
*--------------------------------------------------------
* If the value is composed entirely of sub-value markers,
* then set ALL.SVM to 1, otherwise ALL.SVM = 0
*--------------------------------------------------------
      ALL.SVM = 1
      VAL = CLIENT.REC<ATTRIBUTE,DATE.POS>
      LEN.VAL = LEN(VAL)
      FOR II = 1 TO LEN.VAL
         IF VAL[II,1] # @SVM THEN
            ALL.SVM = 0
            EXIT
         END
      NEXT II
      RETURN
