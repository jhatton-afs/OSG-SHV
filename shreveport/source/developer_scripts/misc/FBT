* NEW WITH AUDIT FEATURES
* FREIGHT BILLING PACKAGE

*---- PROGRAM: FB.2.1.NW
* AUTHOR: BRIAN M. QUEEN
* DATE: DECEMBER 5, 1990
* DESCRIPTION: FREIGHT BILL ENTRY SCREEN.

*---- THIS PROGRAM IS A PROPRIETARY PRODUCT OF AUTOMATED FREIGHT SYSTEMS
* AND MAY NOT BE USED, COPIED OR MODIFIED WITHOUT THE EXPRESS
* WRITTEN CONSENT OF SAME.
*----
* Last updated by AFS.SOURCE (valerie) at 09:52:55 on 05/26/1994.
* ADDED NEW INSERT FOR DIVISION CODES.
* Last updated by AFS (valerie) at 11:25:16 on 06/02/1994.
* ADDED A WRITE TO DELETED.BILLS TO CAPTURE DISAPPEARING BILLS.
* Last updated by AFS.SOURCE (valerie) at 14:19:48 on 07/13/94
* ADDED MORE INSERTS, ACTUAL CHARGES TO OVERCHARGE MESSAGE, AND
* ABILITY TO ENTER A ROUTE OF ZIP CODES INSTEAD OF JUST ORIGIN AND
* DESTINATION.
*---- Last updated by AFS.SOURCE (steve) at 07:55:26 on 09/21/1994.
* added NOT.PROCESSED boolean to prevent double billing via CHANGE
* 102902 - JMK01 - ADD RECORD TO FB.ONSCREEN FOR PRO LOOKUP
* 111102 - JMK02 - CHECK CARRIER STATUS FLAG FOR LOOKUP
* 122002 - JMK03 - MOVE UPDATED RECORDS TO COGNOS.UPDATE FILE
* 012103 - JMK04 - RESET LOOKUP ONLY OF PRO FORMAT IS RE-ENTERED
* 012103 - JMK05 - #361 BLOCK MANUAL MISROUTES FOR WAIVED
* 012103 - JMK06 - DISABLE COGNOS.UPDATE PROCESS
* 012103 - JMK07 - PASS MAX.LTL TO OLA
* 050603 - JMK08 - ADD CALCULATION DETAIL TO RECORD
* 060303 - JMK09 - DISABLE JMK08 CALCULATION DETAIL
* 081803 - JMK10 - LOOKUP ONLY FOR EXCLUDED CARRIERS
* 082003 - JMK11 - ADD LATE FEES FOR UPS
* 092903 - JMK12 - ADD TRUCKLOAD SURVEY SCREEN
* 112003 - JMK13 - ADD AUTO CALC PROCESS
* 120903 - JMK14 - STORE CALCULATION DETAILS FOR FUTURE RETRIEVAL
* 012004 - JMK15 - STORE THE TL DETAILS FOR SS REPORTING
* 012304 - JMK16 - BLOCK DOSKOCIL IF DETAIL PROBLEMS
* 012604 - JMK17 - WORK ON DETAILS FOR SS REPORTING
* 021004 - JMK18 - GET FREIGHT BILL DETAILS WHEN CHANGED BY AUDITOR
* 022404 - JMK19 - ADD TAG BLOCKING FOR QUICKPAY TL BILLS
* 030904 - JMK20 - CORRECT RESET OF DETAIL CHARGES
* 031204 - DRF01 - ALLOW WEIGHT TO BE ENTER WITH A - AT THE END TO CONVERT
*                  KILO TO POUNDS
* 031404 - JMK21 - CHANGE FORMAT OF TL BLOCKING
* 032204 - JMK22 - CHANGE FSC INPUTS
* 032304 - JMK23 - REMOVE BLOCKING LOCK FOR TL TRAFFIC LANE
* 032204 - JMK24 - ADD QUICK VERIFY TO PROCESS
* 032504 - JMK25 - REMOVE TRUCKLOAD FROM DOSKOCIL WRAPUP TEST
* 033104 - JMK26 - ADJUSTMENTS TO QUICK VERIFY
* 040804 - JMK27 - ADD TIME DURATION TO EMP PERF FILE
* 042304 - JMK28 - ADD VEND/CUST REJECT OPTION
* 042904 - JMK29 - REMOVE AUTOCAL FOR 01211
* 051404 - JMK30 - REMOVE OWEN AND MYSELF FROM EMAIL NOTIFICATIONS
* 052604 - JMK31 - MOVE TAG BLOCK TO SUBROUTINE AND CHECK FROM OLA
* 060204 - JMK32 - ALLOW SROSALIES ACCESS TO HELENA SHIPMENTS 6/2/04
* 060304 - JMK33 - CHANGE WAYNEP TO ACCESS JMK32 SHIPMENT
* 060804 - JMK34 - CAPTURE DISCOUNT REASON AND SEND DISCOUNT EMAIL ALERT
* 060904 - JMK35 - BYPASS INVOICE NUMBER FOR MULTIPLE PROS
* 071304 - JMK36 - CHANGE DOSKOCIL TEST FOR AMOUNTS
* 072104 - JMK37 - ADD FSC CALCULATIONS FOR CLIENT 00143
* 081104 - JMK38 - LIMIT DISCOUNT EMAIL TO VERSION 0 BILLS
* 101504 - JMK39 - TEST FOR ONSCREEN VARIABLE WRITE
* 110904 - JMK40 - ADD OVERRIDE FOR 00949 TL DIRECT DISPATCH
* 111004 - JMK41 - ADD DUE DATE PROCESSING CALCULATION
* 111104 - JMK42 - ADD FEDEX GROUND OVERCHARGE TO COMMISSION
* 111504 - JMK43 - ADD ELECTROLUX (01312) TO FSC DETAIL CAPTURE
* 111504 - JMK44 - ADD FORCED BENCHMARK MINIMUM TO OLA
* 111504 - JMK45 - ADD CARRIER ONLY FSC FIELD
* 111804 - JMK46 - ADD REJECT CONTROL OPTIONS
* 113004 - JMK47 - ADD 01334 FOR FREIGHT BILL DETAILS
* 113004 - JMK48 - ADD JOHN ESPOSITO TO 10K LIMIT FOR SCOTT
* 120704 - JMK49 - ADD USER FIELDS TO FB INPUT
* 120904 - JMK50 - ADD 01312 TO CAPTURE DETAIL LIST
* 121404 - JMK51 - EXPAND DUE DAY PROCESSING TO INCLUDE OVERRIDE
* 121404 - JMK52 - USE FB CAPTURE SWITCH
* 121404 - JMK53 - CLEAR OUT BAD FB DETAILS IF CAPTURE SWITCH IF OFF
* 121504 - JMK54 - VALIDATE EXISTING SCAC CODE OR CUSTOM FILE
* 122804 - JMK55 - CAPTURE MISROUTE INFORMATION WHEN VC OVERRIDE IS ON
* 123004 - JMK56 - RE-ACTIVATE MISROUTE INFORMATION FOR VC OVERRIDE
* 011205 - JMK57 - ADD CORE CARRIER FLAG TO RECORD
* 011205 - JMK58 - USE SAME DISC DESC INSTEAD OF SETTING TO NULL
* 011405 - JMK59 - USER CARRIER TERMS OVERRIDE FOR DUE DATE
* 011905 - BOH01 - ADDED OCONV 'MCU' TO EXPENSE CODE ENTRY
* 020905 - BOH02 - No Quick Verify for Scott "Sourced" Clients<92>='00002'
* 021505 - JMK60 - SETUP CARRIER MODE VALIDATION FOR CCC
* 022805 - JMK61 - CAPTURE THREE SETS OF FSC INFORMATION FOR REVIEW
* 030305 - JMK62 - CAPTURE MISROUTE LOGISTICS AMOUNTS FOR REVIEW
* 031805 - JMK63 - CLEAR NEW FIELDS FOR NEW NEXT PRO
* 032205 - JMK64 - ENHANCE DUE DATE PROCESSING
* 033105 - JMK65 - ADD CLIENT AND CARRIER FOR ARTCO BELL AND CRETE
* 040805 - JMK66 - ADD POTENTIAL FSC LOGISTICS BETWEEN CARRIER AND AFS
* 042205 - JMK67 - RETURN TL MILEAGE FOR STC CLIENTS
* 051205 - JMK68 - CARRY FORWARD USER FIELDS FOR AD AND BD BILLS
* 051205 - JMK69 - ADJUST FB DETAIL TEST FOR AMOUNT.MATCH
* 051905 - JMK70 - INITIALIZE AUTO.CAL VARIABLE
* 052305 - JMK71 - REMOVE ALCON/APL WEST FROM TL BLOCKING (10356/01078)
* 060905 - JMK72 - ADD TL BLOCKING REVIEW SCREEN FOR FP VERIFICATION
* 061305 - JMK73 - CHANGE TL BLOCKING EMAILS TO A GROUP ADDRESS
* 062105 - JMK74 - CHANGE WORDING OF BLOCKING REVIEW SCREEN
* 070105 - JMK75 - ALLOW DELETION OF REJECTED BILLS FOR CLIENT 98888
* 071205 - JMK76 - MAKE FB DETAILS EXEMPT FOR CARRIER 00041 AND 01312
* 072505 - JMK77 - MAKE SURE USER FIELDS ARE AVAILABLE AFTER OLA
* 080105 - JMK78 - DISABLE USER FIELDS FOR AUDITORS
* 080305 - JMK79 - ADD BILL DATE FOR 01311 BOL PROCESSING START
* 080805 - JMK80 - DISTRIBUTE EXPENSE FOR 01271 BY HAZ, FSC
* 081005 - JMK81 - CAPTURE DETAILS FOR AIR FREIGHT BILLS
* 081205 - JMK82 - SEND NOTICE TO COGNOS WHEN PROCESSED BILLS ARE UPDATED
* 082605 - JMK83 - TURN DETAIL CAPTURE ON IF ANY DETAILS ARE RETURNED FROM OLA
* 082405 - JMK84 - ADD PO/BOL DISTRIBUTION FOR STC CLIENTS
* 083105 - JMK85 - ADD UPS RELATED BILLS FOR -I,-O,-T BILLS
* 090705 - JMK86 - CHANGE -0 TO -O FOR UPS BILLS
* 091305 - JMK87 - ADD SILK ROAD TRANSPORT (15994) TO PFAUDLER .8 DISCOUNT
* 091305 - JMK88 - REMOVE MYRA AND ADD BRIAN JEPPSON TO AD EMAILS
* 100605 - JMK89 - ONLY SET MISROUTE INFORMATION IF MISROUTE AMOUNT IS GT $20.00
* 100705 - JMK90 - ALLOW DISCOUNTS FOR ATK 01365 TO DISABLE DISC EMAIL ALERT
* 101205 - JMK91 - MAKE FB DETAILS WORK FOR AF AS WELL AS LTL SHIPMENTS
* 102005 - JMK92 - ADD RATER CALL AND SUPPLY PRIMARY FIELDS
* 110805 - JMK93 - ADD SPECIAL LOGISTICS COMMISSION RATE BY TRANSPORT MODE
* 120705 - JMK94 - ADD MONROE CONTRACTORS (16058) TO PFAUDLER .8 DISCOUNT
* 120705 - JMK95 - DISALLOW REJECT FOR CLIENT 01292 WITHOUT DIVISION CODE
* 121605 - JMK96 - DISTRIBUTE EXPENSE FOR 01418 BY HAZ, FSC
* 010506 - JMK97 - ADD 01428 SUB TECHNOLOGIES FOR GST AND DUTY PROCESSING
* 012506 - JMK98 - ADD ENTRY CEILING FOR UPS LATE FEE ENTRY
* 030206 - DRF02 - Do not allow users to the misroute amount or carrier.
*                  this will probably be disable shortly after it is
*                  compiled.
* 032306 - JMK99 - PERFORM AUTO ASSIGN OF DIVISION TO INBOUND FOR LEISURE ARTS 00761
* 032406 - JMK100 - ADD CARRIER COMMISSION PERCENTAGE TO CALCULATION
* 032406 - JMK101 - CLIENT CARRIER DUE DAYS ENHANCEMENTS
* 042506 - JMK102 - PRELOAD BOL FOR ROBROY FROM FB.BOL.CRX
* 050106 - JMK103 - UPCHARGE HILO-JBHUNT 2% CONS COMMISION
* 051006 - JMK104 - CHANGE RICK KEYES TO GINA ALLISON ON TL BLOCK SYSTEM
* 051106 - JMK105 - UPDATE EXPENSE.MATRIX FILE FOR LIBERTO (00664)
* 060206 - JMK106 - USE TABLE TO INDICATE CAPTURE OF INVOICE NUMBER
* 061406 - JMK107 - ADD CARR.FSC FLAG TO SCREEN DISPLAY
* 062006 - JMK108 - ADD OPTION FOR CARRIER ALTERNATIVE TRANSPORT MODES
* 080306 - JMK109 - ADD CARRIER CONTROL NOTES TO SCREEN FOR REVIEW
* 081006 - JMK110 - REMOVE INQUIRE OPTION FROM BOL ENTRY
* 082206 - JMK111 - ADD NOTE FIELD FOR FB ENTRY
* 082506 - JMK112 - ADD 01460 DIETRICH CANADA FOR GST AND DUTY PROCESSING
* 082506 - JMK113 - EXPENSE DIV ZIP DISPLAY FOR CANADA
* 082906 - JMK114 - REMOVE NOTE REQUIREMENT FOR CARRIER 00015
* 083106 - JMK115 - ADD JOINT/DIRECT SVC FROM RATEWARE SERVER
* 083106 - JMK116 - UPDATE INVOICE NUMBER FROM PRO NUMBER FOR CARRIER 01075
* 090106 - JMK117 - FORCE ADJUSTMENT OF EXPENSE DISTRIBUTION IF AMOUNT IS CHANGED
* 092606 - JMK118 - FORCE REJECT REASON FOR 'N' OR 'E' REJECT TYPE
* 092906 - JMK119 - EXPAND FB NOTE TO ALLOW FOR MULTIPLE LINES AND INQUIRE
* 092906 - JCW01  - USE NEW FB.CHECKS FILES
* 100306 - JMK120 - REMOVE NOTE REQUIREMENT FOR REJECT BILLS
* 100406 - JMK121 - ADD RESTRICTION FOR THE APPROVE OPTION FOR AUDITOR
* 100705 - JMK122 - ALLOW DISCOUNTS FOR ATK 01530 TO DISABLE DISC EMAIL ALERT
* 101206 - JMK123 - UPDATE FB.BILLS.SUMMARY FILE IF EXISTS
* 102406 - JMK124 - T200610240003 IGNORE DUPLICATE BILL WARNING IF MORE THAN 3 YEARS OLD
* 102606 - JMK125 - T200610260010 UPDATE REJECT REASON IN JMK118 TO ONLY BE FOR UNPROCESSED BILLS
* 102606 - JMK126 - ADD MISROUTE CAPTURE INFORMATION (ATTS 63,39) IN VCOVERRIDE FIELD REGARDLESS (ATTS 189,190)
* 102706 - JMK127 - T200610260005 MORE CORRECTLY IDENTIFY FB BEFORE THEY ARE DELETED.
* 110806 - JMK128 - T200611080010 / priority 2 /FW: Replacement of John Esposito with Adam Smith on reports
* 111706 - JMK129 - T200611170002 / Determine cause & solution for OFB - RESET SU.FLAG WHEN BACKING OUT
* 112906 - JMK130 - T200611290003 /  priority 2 /  AD override
* 120506 - JMK131 - T200612050008 /  priority 2 /  Over ride on Fedex carrier (15) bills
* 120806 - JMK132 - ADJUSTEMENTS TO THE LEISURE ARTS (00761) DIVISION CODING
* 122006 - JMK133 - C200610190010 / Rector Seal VALIDATE EXPENSE CODE AND WEIGHT IN F.CRX.BOL FILE FOR REJECT
* 010807 - JMK134 - C200610190010 / Rector Seal VALIDATE EXPENSE CODE AND WEIGHT IN F.CRX.BOL FILE FOR REJECT
* 011707 - JMK135 - C200701150006 /   /  Dietrich USA & Canada (1311 & 1460) request BOL & DR cross reference to prevent duplicates
* 011807 - JMK136 - C200611130002 / Due 1/15/07   / Marlite - FSC Commission??
* 012407 - JCW02  - USE VEND.CUST.NAMES FILE
* 020507 - JMK137 - C200610190010 / Rector Seal REMOVE VALIDATION TEST FOR PARCAL CARRIERS
* 020507 - JCW03  - C200702010003 - Misroute Exceptions Anchor Paint, Airgas-Intermountain
* 020707 - JMK138 - C200702070002 /  /  Leisure Arts BOL Import File Changes
* 022207 - BOH01  - Hard Code Division numbers for Airgas-Safety 01457
* 032907 - JCW04  - UPDATE VEND.CUST.XREF AND VEND.CUST.ZIPS FILES
* 040507 - JCW05  - C200702220004 - ADD NOTES WHEN ACCOUNTING FORCES A 1-CENT VARIANCE
* 041707 - JMK139 - T200704130005  Fax from unknown sender.
* 042307 - JCW06  - C200704230003 - Change FSC expense code for 01418 - Airgas-Great Lakes
* 052107 - JCW07  - C200704230004 - Add paging to related notes display
* 070307 - JMK140 - C200704240003 /  ASAP  /   FW: New Request - FB Inquiry Alert / Audit Date Storage
* 080107 - JMK141 - C200707090003 / 7/31/07 /  Audit Flag
* 080507 - JMK142 - C70037 - add a 5 pound variance on weight check for Rectorseal
* 082107 - JMK143 - T070168 - Leisure Arts OB Shipments not matched to channel
* 091207 - JMK144 - C070443 - Create process to update SQL data tables from Universe
* 100807 - DRF03 - Modified JMK141 to only occur for logistics clients
*                  CLIENT.REC(93)='Y'
* 111207 - NPR01 - ADDED CODE FOR updating new FB.PRE.OPEN.BILLS file
* 121207 - JMK145 - C070443 - Create process to update SQL data tables from Universe
* 011408 - NPR02  - CLIENT 01485, CARRIER 17216 - FORCE MODE TO 11, FOR CARRIER 15703 - FORCE MODE TO 6.
* 012108 - JMK146 - T080174 - AD more than limit ; Password not working
* 012508 - NPR03  - Added logic to check and block the user from entering a PO/BOL # starting with AFS - Email sent also
* 020108 - JMK147 - C080232 - Adding Joint Line Pricing to OLA
* 031208 - JMK148 - T070361 - Bad FSC (and other) Data on TL Bills
* 032708 - JMK149 - T080908 - FSC is not correct in column GL
* 040308 - JMK150 - T080932 - Marlite FSC is set wrong - correct ASAP
* 041008 - JMK151 - T080908 - FSC is not correct in column GL
* 042108 - JMK152 - C080902 - Electronic BOL file FOR Dover Chemical 01636
* 051908 - NPR04  - C081352 - carrier 12440 for Rectorseal 01529 to be turned off for the bol and wt verification
* 052708 - JMK153 - REVERSE FUNCTIONALITY OF JMK56 TO REMOVE MISROUTE WHEN VC OVERRIDE IS ON
* 061308 - NPR05  - T081341 - Added ability to put a cutoff date to disallow keying
* 070708 - NPR06  - T081166 - Added Inquiry screen for Before and after picture of adjustments made
* 070708 - NPR07  - T081680 - Update PRO record with Inv #(PRO Number) for carrier 1075 - FED.INV.XREF also updated
* 081508 - JMK154 - C081314 - Overcharge classification
* 090808 - JMK155 - C082110 - Add 20% increase adjustment for First Source to benchmark and quotes
* 091008 - JMK156 - C082121 - Restrict entry of bills for Carrier #20475 to ONLY Mary / Myra
* 090908 - NPR08  - T081966 - Added new info to header screen and re-arranged print positions etc.
* 100308 - JMK157 - C082257 - Add description to the FB Details for the MISC code
* 100608 - JMK158 - FORCE AUDITORS TO ADJUST DETAIL SCREEN
* 100708 - JMK159 - C082280 - Least Cost Carriers Real Time ; Add ability to determine the least cost carrier at FB Entry
* 100808 - JMK160 - C082289 - Additional information on Freight Payment FB Entry
* 100908 - JMK161 - T082261 - FB Entry screen showing stack numbers twice
* 102208 - JMK162 - C082320 - Miles for LTL AD/BD should be captured and recorded from the original invoice
*                             and should not be recaptured and reported on either the AD/BD records.
* 102708 - JMK163 - C082406 - Add a "misroute exclusion" for Standard Forwarding and Bell Sports
* 103008 - NPR09  - T082432 - Added email notification if Bill is zeroed
* 110508 - JMK164 - T082387 - FP keys all of the accessorial charges below and they need to ?X? back, this ?screen? looses all of their changes.
* 110608 - JMK165 - Adjust Pro Format Validation for multiple pro formats
* 111808 - NPR10  - T082535 - Add transportation accrual cost from BOL file to Ideal Chemical(01053) Bills
* 112108 - NPR11  - T082554 - Customer Service Notes ability
* 120508 - NPR12  - T082554 - Customer Service Notes ability - Additional tweaking as per Amy
* 010709 - JMK166 - T090031 - Dover Checm / Reese Trucking ; Two bills with 1972 as year, processed for $0.00
* 020109 - JMK167 - LLC and Misroute changes  per meeting in Owen's office
* 021009 - JMK168 - Add Logistics Switch for Logistics Start Up Date
* 021109 - JMK169 - Turn off FB Capture for International Shipments.
* 021709 - JMK170 - ADD BACK THE LOGISITICS FLAG FOR MISROUTE CALCULATIONS
* 022709 - JMK171 - Restore the multiple shipment check for TL blocks
* 022709 - DRF04 - Added MRA.VIN<52> to bill date to calculate FSC.
* 030209 - JMK172 - T09031  - Brokerage system ; can not key the bills
* 030309 - NPR13  - T090253 - Highlight Client name based on ranking
* 030909 - JMK173 - T090329 - Lokey Metals #1402 no LCC generated
* 031009 - JMK174 - RE-ENABLE FB CAPTURE FOR INTL SHIPMENTS PER SCOTT M
* 031009 - JMK175 - Add Time In Transit Days for EDI Actual, Carrier Est and Carrier Array
* 031209 - NPR14  - Add the ability to change the status of a "N"ever Pay to "E"ventual pay in this program
* 032609 - JMK176 - T090423 - LCC issues client #1188 Actic & #1194 Hatfield
* 032709 - JMK177 - T090431 - Dover Chemical
* 041409 - JMK178 - C090484 - Robroy processes today ; need to  BOL or PO  matching
* 042309 - JMK179 - C090546 - Grant ability to enter invoices that do not match BOL file
* 042309 - JMK180 - T090550 - overcharge is being taken on a new client 01731
* 042409 - JMK181 - T090540 - Can't add AD to a freight bill
* 052109 - NPR15  - T090677 - Indicate Carrier Pay Method
* 052109 - NPR16  - T090548 - Audit threshold amounts by mode - Force bill to Auditors if amount equal to  (or above) threshold
* 052809 - JMK182 - C090692 - Need to not take commissions on Fuel
* 060409 - NPR017 - T090733 - Hussey ... Client #1334 Determine division based on Orig & Dest zips 15003 and Shipper Info/ VENDCUST #
* 070109 - JMK183 - T090835 - LCC issue for United Souther Waste
* 070709 - NPR018 - T090876 - Default User fields to original bill data when entering /n bills for Calgon Carbon
* 071409 - NPR019 - T090848 - Client 01763 - PO # on IB that begin with H - Default division to 1 . Default to 2 for PO # starting with a T or L
* 072109 - NPR020 - T090936 - Country Code prompting added
* 072309 - NPR021 - T090733 - Hussey ... Client #1334 Determine division based on Orig & Dest zips 15003 and Shipper Info/ VENDCUST # - Additional rules
* 073009 - NPR022 - T090877 - Hussey ... Client #1334 Check to make sure SIT codes entered if Stops added and visa versa
* 080509 - NPR023 - T090733 - Hussey ... Client #1334 Don't do Division and Exp code checks etc for Fedex and UPS related shipments as per Scott Matthews
* 081409 - NPR024 - T091038 - Keyer / verifier information should be displayed to auditors before a bill is updated
* 082009 - JMK184 - EXPAND INVOICE NUMBER FROM 11 TO 20
* 082609 - NPR025 - T090733 - Hussey ... Client #1334 set Orig zip to 60633 for Carrier 14657 (CMI)
* 082709 - NPR026 - T091091 - Added option to overide Pro Format based on Client/Carrier combination if it exists
* 102209 - NPR027 - T091294 - Country CodeS being overwritten when audited.
* 110609 - JMK185 - C091350 - Reid Supply -- UPS Freight --- Fuel Commission
* 121809 - JMK186 - ADD ORB LIST UPDATE TO SPEED UP THE ORB REPORTING PROCESS
* 012010 - JMK187 - T100052 - Amounts on SS report for H&K do not match
* 013010 - NPR028 - T091391 - Pull in available data from BOL file if setup to do so on Client file.
* 022610 - NPR029 - T100166 - Auto Populate Div, Exp Code and do BOL # validation for client 01614
* 032310 - NPR030 - T100266 - Audit approval ; no password should be needed for declining as a never pay
* 032310 - JMK188 - Add MSR override options to LCC for Airgas Safety and Rectorseal
* 032310 - NPR031 - T100247 - Added International Accessorial Code Selection ability
* 040810 - NPR032 - T99999  - Add routine to update Program Log file.
* 042210 - JMK189 - T100354 - Louisiana Fish Fry not receiving LCC reports
* 042610 - JMK190 - Limit OverCharge Commission adjustments to total amount originally taken.
* 052610 - NPR033 - T100372  - Prompt for Invoice Due date for UPS bills and update new UPS.SCHED and UPS.SCHED.HIST files.
* 052610 - NPR034 - T999999  - Tidy up display of Invoice Number and UPS Address correction and Fees charges
* 101211 - RLM001 - PROJECT 80 - Retrieve Account Manager ID from file CLIENTS instead of salesman file
* 111111 - JMK191 - Adjust video attributes for Accuterm and future use
* 111711 - JMK192 - SysAid#349 - Consulting Commision cap
* 040319 - NKH01  - ACCU-316 Modified CREATE-FILE file sizes
*******************************************************************************************************************************
      $INCLUDE PROG.ADMIN INC_OPTIONS
      $INCLUDE FILE.DEFS INC_DIVISION.CODES
      $INCLUDE FILE.DEFS INC_FB.CHECKS
      $INCLUDE FILE.DEFS INC_CLIENTS
      $INCLUDE FILE.DEFS INC_ADDS60.CODES

*---- Initialize variables
      GOSUB INITIALIZE.GENERAL.VARIABLES
      GOSUB INITIALIZE.BILL.VARIABLES
      GOSUB OPEN.GENERAL.FILES
      IF DBCTRL<14>='A' THEN
         USER.TYPE='A'
      END ELSE
         USER.TYPE=''
      END
      BEGIN CASE                         ; * JMK156
         CASE USER.TYPE='A'              ; * JMK156
            DHL.20475=1                  ; * JMK156
         CASE USER='MYRA'                ; * JMK156
            DHL.20475=1                  ; * JMK156
         CASE USER='MARY'                ; * JMK156
            DHL.20475=1                  ; * JMK156
         CASE USER='SMICHALIK'           ; * JMK156
            DHL.20475=1                  ; * JMK156
         CASE 1                          ; * JMK156
            DHL.20475=0                  ; * JMK156
      END CASE                           ; * JMK156
      USER.EMAIL=DBCTRL<20>              ; * JMK34
      DISC.DESC=''                       ; * JMK34
      AVOUT=''
      FRT.ARRAY=''                       ; * JMK17
      MIS.ARRAY=''                       ; * JMK17
      TAG.CHG.PCT=.10                    ; * JMK19
      TAG.LIFESPAN=365                   ; * JMK19
      FIRST.TIME.TRY=0
      LAST.CLIENT.KEYED=''
      JUMP.TO.CLIENT=0
      CAPTURE.INVOICE=0                  ; * JMK106
      TODAY=DATE()                       ; * JMK124
      OTODAY=OCONV(TODAY,'D4/')          ; * JMK124
      XREF.CHECK.DATE=ICONV(OTODAY[1,6]:OTODAY[7,4]-3,'D')   ; *JMK124
      TERM.TYPE=SYSTEM(7)                ; * JMK191
      BEGIN CASE                         ; * JMK191
         CASE TERM.TYPE='REGENT60'       ; * JMK191
            REV.ON = TERM.ESC.SEQ:CHAR(TERM.REV)   ; * JCW07
            REV.OFF = TERM.ESC.SEQ:CHAR(TERM.NORMAL)         ; * JCW07
         CASE 1                          ; * JMK191
            REV.ON = @(-13)              ; * JMK191
            REV.OFF = @(-14)             ; * JMK191
      END CASE                           ; * JMK191
      BOL.FIRST=''
      SLSMAN.STR = ""                    ; * NPR08
      SECOND.SALESMAN.NUMBER.NAME = ""   ; * NPR08

*NPR028 *
***ZZZ      IF USER = "NPRATT" OR USER = "OWEN" OR USER = "MKERBOW" OR USER = "xMARY" OR USER = "xMYRA" THEN DO.BOL.POP = 1

      DO.BOL.POP = 1                     ; *ZZZ Set flag for BOL Population and verification
*NPR028 *

*----
* READ TABLES THAT MAY BE NEEDED
*----
      READ DTARIFF.DATE.XREF FROM F.TABLES,'TARIFF.DATE.XREF' ELSE DTARIFF.DATE.XREF=''
      READ DTARIFFS FROM F.TABLES,'TARIFFS' ELSE DTARIFFS=''
      READ LI.CODES FROM F.TABLES,'LI.CODES' ELSE LI.CODES=''
      READ REJECT.CODES FROM F.TABLES,'REJECT.CODES' ELSE REJECT.CODES=''
      READ AIR.CODES FROM F.TABLES,'AIR.CODES' ELSE AIR.CODES=''
      READ INTL.CODES FROM F.TABLES,'INTL.CODES' ELSE INTL.CODES=''    ; * NPR031

      READ CONVERSION.RATE FROM F.TABLES,'CAN.TO.US.DOLLARS' ELSE
         CALL ELINE('Canada to US Dollar Rate not setup')
         STOP
      END
      READ INVOICE.CARRIERS FROM F.TABLES,'INVOICE.CARRIERS' ELSE INVOICE.CARRIERS=''      ; * JMK106

*----
* MAIN PROCESSING
*----
      GOSUB GET.SCREEN.DSP

*---- Enter client number
100: ***
      GOSUB 8100                         ; * Display screen
      ONSCREEN.ID=USER:'.TXT'
      DELETE F.ONSCREEN,ONSCREEN.ID      ; * JMK01
      SEQ.FLAG = 0
*DF      IF USER='BSMITH' THEN CLIENT.ID='01365'
      HELP = "Enter the client number. [X]=Exit [EX]=Exit"
      IF CLIENT.ID = '' THEN MASK = '#####' ELSE MASK = CLIENT.ID
*NPR08      CALL GEN.IN(9,3,MASK,'',Q,0,20,'','',2,-5,3,1,QI,HELP,0,23)
      CALL GEN.IN(9,1,MASK,'',Q,0,20,'','',2,-5,1,0,QI,HELP,0,23)      ; *NPR08
      CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      QI = OCONV(QI,'MCU')
      IF QI MATCHES "5N'E'" THEN
         QI=QI[1,5]
         END.FLAG='Y'
      END ELSE
         END.FLAG='N'
      END
      BEGIN CASE
         CASE QI = 'EX' ! QI = 'X'
            STOP
         CASE QI = '' & CLIENT.ID = ''
            STOP
         CASE QI = ''
            Q = CLIENT.ID
         CASE NOT(QI MATCHES "0N")
            VIN=0                        ; * Starting Chars In
            VOUT=''
            CALL SOUNDEX.DISPLAY.NEW(VIN,VOUT,QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            CC+=VOUT<1> ; GOSUB PRINT.CC
*NPR08            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            CLR.SCR = 1 ; GOSUB DISP.SCREEN.HEADING          ; *NPR08
            BEGIN CASE
               CASE ITEM.LIST = ''
                  GOTO 100               ; * START OVER
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                  GOTO 100               ; * START OVER
               CASE 1
                  IF NUM(ITEM.LIST<1,1>) THEN SND.DATA=ITEM.LIST<1,1> ; GOSUB SEND.DATA
                  GOTO 100               ; * START OVER
            END CASE
         CASE NUM(QI)
            Q = QI'R%5'
         CASE 1
            GOTO 100                     ; * START OVER
      END CASE
*DF      IF USER='BSMITH' THEN
*DF        IF Q#'01365' THEN
*DF          CALL ELINE('Access for ATK Only')
*DF          Q='01365'
*DF        END
*DF      END

*---- Read client name

      IF CLIENT.ID # Q THEN CLIENT.ID = Q'R%5'
      MATREAD CLIENT.REC FROM F.CLIENTS,CLIENT.ID ELSE
         CALL ELINE("ERROR - Client ":CLIENT.ID:" not on file.")
         CC+=1 ; GOSUB PRINT.CC
         GOTO 100                        ; * START OVER
      END
      READ CLIENT.ITM FROM F.CLIENTS,CLIENT.ID ELSE CLIENT.ITM=''      ; * JMK34
      CLIENT.DAYS=CLIENT.REC(186)        ; * JMK51
      FP.CO=CLIENT.REC(92)               ; * JMK48
      GOSUB GET.QV.OPTS                  ; * JMK24
      CL.TL.FLAG=CLIENT.REC(70)<1,3>     ; * JMK12
      FB.DTL.CAPTURE=CLIENT.REC(70)<1,10>          ; * JMK52
      LCC.MIN.AMT=CLIENT.REC(148)        ; * JMK159
      MAX.LTL=15000                      ; * JMK07
      IF CLIENT.REC(150)#"" THEN MAX.LTL=CLIENT.REC(150)     ; * JMK07
      CARR.FSC=CLIENT.REC(189)           ; * JMK45
      ORIG.CL.BOL.FLAG=CL.BOL.FLAG
      CLIENT.NAME = CL.NAME
      CLIENT.CITY = CL.CITY
      CLIENT.STATE = CL.ST
      ZIP.LEN = CL.ZIP.FLAG
      IF ZIP.LEN = 'C' THEN ZIP.DIGITS=6 ELSE ZIP.DIGITS=5
      ZIP.MASK='L#':ZIP.DIGITS
      CL.AUDITOR = CLIENT.REC(71)        ; * NPR08
*
      CL.STATUS = CLIENT.REC(30)         ; * NPR08
      IF CL.STATUS = "A" THEN CL.STATUS = "Active"           ; * NPR08
      IF CL.STATUS = "I" THEN CL.STATUS = "InActive"         ; * NPR08
      PRE.AUD.FROM.DT = CLIENT.REC(27)   ; * NPR08
      PRE.AUD.TO.DT = CLIENT.REC(232)    ; * NPR08
      CLIENT.DOW=CLIENT.ITM<151>         ; * JMK167

      HIN = CLIENT.ITM<240> ; HOUT = ""  ; * NPR13  Highlight based on ranking
      CALL CLIENT.HL(HIN,HOUT) ; HLB = HOUT<1,1> ; HLA = HOUT<1,2>     ; * NPR13

*
      IF CARR.FSC='Y' THEN               ; * JMK107
* NPR08          CRT @(9,3):CLIENT.ID:'*':CLIENT.NAME:@(-4)          ; * JMK107
         CRT @(9,1) : CLIENT.ID:'*':HLB : CLIENT.NAME[1,30] : HLA      ; * JMK107 * NPR08
      END ELSE                           ; * JMK107
* NPR08          CRT @(9,3):CLIENT.ID:'*':CLIENT.NAME:@(-4)          ; * JMK107
         CRT @(9,1):CLIENT.ID:' ':HLB:CLIENT.NAME[1,30] : HLA          ; * JMK107 * NPR08
      END
*
      IF CL.AUDITOR='' THEN
*NPR08          CRT @(29,1):SPACE(25)
         AUDITOR.TEXT=''
         CALL ELINE("Client: ":CLIENT.ID:" ":CLIENT.NAME:" does not have an auditor.")
         GOTO 100
      END ELSE
*NPR08          AUDITOR.TEXT='Auditor: ':CL.AUDITOR
         AUDITOR.TEXT=''
      END
*NPR08       CRT @(29,1):AUDITOR.TEXT'L#25'
*     CRT @(59,3):AUDITOR.TEXT[1,20]     ; * NPR08 ; * JMK161
      CRT @(59,3):AUDITOR.TEXT'L#20':    ; * NPR08 ; * JMK161
*
      ACCT.MGR = ''                      ; * NPR08
      ACCT.MGR.NAME = ''                 ; * NPR08
      ACCT.MGR.EMAIL = ''                ; * NPR16
*
      LEAD.SALESMAN.ID=CLIENT.REC(114)
      IF LEAD.SALESMAN.ID='' THEN
         LEAD.SALESMAN.NUMBER.NAME='Not on file'
      END ELSE
         READ SALESMAN.REC FROM F.SLSMAN,LEAD.SALESMAN.ID THEN
            LEAD.SALESMAN.NUMBER.NAME=LEAD.SALESMAN.ID:' ':SALESMAN.REC<1>'L#25'
         END ELSE
            LEAD.SALESMAN.NUMBER.NAME=LEAD.SALESMAN.ID:' Name Not Found'
         END
      END
      SECOND.SALESMAN.ID=CLIENT.REC(115)
      SLSMAN.NAME=''                     ; * JMK34
      IF SECOND.SALESMAN.ID='' THEN
         SECOND.SALESMAN.NUMBER.NAME='Not on file'
      END ELSE
         READ SALESMAN.REC FROM F.SLSMAN,SECOND.SALESMAN.ID THEN
            SECOND.SALESMAN.NUMBER.NAME=SECOND.SALESMAN.ID:' ':SALESMAN.REC<1>'L#25'
*           ACCT.MGR = SALESMAN.REC<11>  ; * NPR08  ; * RLM001
         END ELSE
            SECOND.SALESMAN.NUMBER.NAME=SECOND.SALESMAN.ID:' Name Not Found'
         END
      END
      ACCT.MGR = CLIENT.REC(264)         ; * NPR08  ; * RLM001
*NPR08
      IF ACCT.MGR # '' THEN
         READ ACCT.MGR.REC FROM F.SLSMAN,ACCT.MGR THEN
            ACCT.MGR.NAME = ACCT.MGR.REC<1>'L#25'
            ACCT.MGR.EMAIL = ACCT.MGR.REC<8>       ; * NPR16
         END
      END ELSE
         ACCT.MGR.NAME = ""
      END
*NPR08
*KM 9/24/03 changed from Lead Salesman and Second Salesman
      SLSMAN.STR='Initiating Rep:':TRIM(LEAD.SALESMAN.NUMBER.NAME):'~':'Svc Salesman:':TRIM(SECOND.SALESMAN.NUMBER.NAME)           ; *NPR08
      SLSMAN.STR=CHANGE(SLSMAN.STR,'~',SPACE(80-LEN(SLSMAN.STR)))      ; *NPR08
*NPR08      CRT @(0,2):SLSMAN.STR                                                                                               ;*NPR08
      CRT @(59,1):TRIM(SECOND.SALESMAN.NUMBER.NAME)          ; *NPR08
      CRT @(59,2):TRIM(ACCT.MGR: " " :ACCT.MGR.NAME)         ; *NPR08
      CRT @(59,3):CL.AUDITOR[1,20]       ; *NPR08
      CRT @(9,4):OCONV(PRE.AUD.FROM.DT,"D2/")      ; *NPR08
      CRT @(22,4):OCONV(PRE.AUD.TO.DT,"D2/")       ; *NPR08
      CRT @(41,4):CL.STATUS              ; *NPR08
*
      GOSUB OPEN.CLIENT.FILES
      IF START.OVER THEN
         GOTO 100
      END
      CLIENT.START.TIME=TIME()
      READ CONTROL.REC FROM F.CONTROL,CLIENT.ID ELSE CONTROL.REC=''
      READ REJ.CTRL.REC FROM F.REJ.CTRL,CLIENT.ID ELSE REJ.CTRL.REC=''           ; * JMK46

*---- Enter carrier
200: ***

      M.BOL.REC = ''                     ; *NPR777
      ID.BOL.CRX = ''                    ; *NPR777
      ID.BOL.CRX2 = ''                   ; *NPR777

      IF CARRIER.ID # '' THEN MASK = CARRIER.ID'R%5' ELSE MASK = '#####'
      HELP = "Enter the carrier number. [X]=Back [EX]=Exit"
*NPR08      CALL GEN.IN(9,4,MASK,'',Q,0,20,'','',2,-5,4,0,QI,HELP,0,23)
      CALL GEN.IN(9,2,MASK,'',Q,0,20,'','',2,-5,2,0,QI,HELP,0,23)      ; *NPR08
      CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI = 'X'
*NPR08            CRT @(9,4):@(-4):
            IF CHANGE.FLAG THEN GOTO 200 ELSE GOTO 100
         CASE QI = 'EX'
            STOP
         CASE QI='LS' ! QI='LP'
            IF QI='LS' THEN OPT='' ELSE OPT='P'
            PREC='SELECT FB.BILLS,':CLIENT.ID:' WITH STATUS # "O" AND WITH STATUS # "R" '
            PREC:=" BY STATUS BY CARRIER BY PRO"
            PREC:=' AND WITH VERSION = "0"'
            EXECUTE PREC PASSLIST CAPTURING OUTPUT
            IF @SELECTED THEN
*DF             IF USER='AMY' OR USER='MYRA' THEN
*DF               EXECUTE 'LIST FB.BILLS,':CLIENT.ID:' CARRIER.NUM PRO CARRIER.SHORT.NAME TOTAL 7 TOTAL 8 STATUS 68 30 (I':OPT
*DF             END ELSE
               EXECUTE 'LIST FB.BILLS,':CLIENT.ID:' PRO CARRIER.SHORT.NAME TOTAL 7 TOTAL 8 STATUS 68 30 (I':OPT
*DF             END
               CALL ELINE('')
               CC+=1 ; GOSUB PRINT.CC
            END ELSE
               CALL ELINE("All pro's have been verified and audited.")
               CC+=1 ; GOSUB PRINT.CC
            END
            GOSUB 8100                   ; * Display screen
            GOSUB 8200
            GOTO 200
         CASE NOT(QI MATCHES "0N")
            VIN=0                        ; * Starting Chars In
            VOUT=''
            CALL SOUNDEX.DISPLAY.NEW(VIN,VOUT,QI,'CARRIERS','SDX.CARRIER,NAME','1,2,3,4',ITEM.LIST)
            CC+=VOUT<1> ; GOSUB PRINT.CC
            GOSUB 8100                   ; * Display screen
            GOSUB 8200
            BEGIN CASE
               CASE ITEM.LIST = ''
                  GOTO 200               ; * ENTER CARRIER
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                  GOTO 200               ; * ENTER CARRIER
               CASE ITEM.LIST # ''
                  IF NUM(ITEM.LIST<1,1>) THEN SND.DATA=ITEM.LIST<1,1> ; GOSUB SEND.DATA
                  GOTO 200               ; * ENTER CARRIER
            END CASE
         CASE QI = '20475' AND DHL.20475=0         ; * JMK156
            CALL ELINE('Cannot enter bills for this carrier.  See Myra or Mary.')          ; * JMK156
            GOTO 200                     ; * ENTER CARRIER ; * JMK156
         CASE QI = ''
            Q = CARRIER.ID
         CASE NUM(QI)
            Q = QI'R%5'
         CASE 1
            GOTO 200                     ; * ENTER CARRIER
      END CASE
      IF CLIENT.ID='00877' THEN
         IF Q = '00015' OR Q = '00143' THEN
            CALL ELINE('Cannot enter FedEx or Airborne bills for Autocraft.')
            IF USER#'DEBBIE' THEN GOTO 200
         END
      END
      CARRIER.ID = Q
      CALL CLR.CONTROL(CARRIER.ID)

*---- Get carrier data

      READ CARRIER.REC FROM F.CARRIERS,CARRIER.ID ELSE
         CALL ELINE("ERROR - Carrier ":CARRIER.ID:" not on file.")
         CC+=1 ; GOSUB PRINT.CC
         GOTO 200                        ; * ENTER CARRIER
      END
*NPR026 Start changes - Replace Pro Formatting for Client with Client/Carrier specific formatting
      ID.PRO.FORMAT = CLIENT.ID:"*":CARRIER.ID ; PRO.FORMAT.REC = ''
      READ PRO.FORMAT.REC FROM F.PRO.FORMAT, ID.PRO.FORMAT THEN
         CARRIER.REC<47> = PRO.FORMAT.REC<1>       ; * PRO.FORMAT
         CARRIER.REC<51> = PRO.FORMAT.REC<2>       ; * MASK.ACTIVE
         CARRIER.REC<52> = PRO.FORMAT.REC<3>       ; * CHECK.DIG.ACTIVE
         CARRIER.REC<53> = PRO.FORMAT.REC<4>       ; * CHECK.DIG.POS
         CARRIER.REC<54> = PRO.FORMAT.REC<5>       ; * SEED.BEG.POS
         CARRIER.REC<55> = PRO.FORMAT.REC<6>       ; * SEED.END.POS
         CARRIER.REC<56> = PRO.FORMAT.REC<7>       ; * METHOD.STR
         CARRIER.REC<57> = PRO.FORMAT.REC<8>       ; * OLD.BEG.POS
         CARRIER.REC<58> = PRO.FORMAT.REC<9>       ; * OLD.END.POS
      END
*NPR026 End changes
*
*DF      IF CLIENT.ID='01312' THEN
*DF         IF CARRIER.REC<12>='' THEN
*DF            CALL ELINE('Carrier does not have a SCAC code. Please provide this to Myra')
*DF            MVIN=''
*DF            SUBJ='Carrier SCAC code not on file for Electrolux'
*DF            TEXT=USER:' attempted to enter a bill for a carrier '
*DF            TEXT<1,-1>='that does not have a SCAC code'
*DF            TEXT<1,-1>='on ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
*DF            TEXT<1,-1>='Client ':CLIENT.ID:' ':CLIENT.NAME:' Carrier ':CARRIER.ID:' ':CARRIER.REC<1>
*DF            MVIN=''
*DF            MVIN<1>='MButts@afs.net'
*DF            MVIN<2>='David@afs.net'
*DF            MVIN<4>='AFS'
*DF            MVIN<5>=SUBJ
*DF            MVIN<6>=TEXT
*DF            CALL SENDMAIL(MVIN,MVOUT)
*DF            GOTO 200
*DF         END
*DF      END
      IF CLIENT.ID='01347' OR CLIENT.ID='01312' THEN
         CSCAC.ID=CLIENT.ID:'*':CARRIER.ID
         READ CSCAC.REC FROM F.CSCAC,CSCAC.ID ELSE
*           CALL ELINE('Carrier does not have a SCAC cross reference code. Please provide this to John') ; * JMK128
            CALL ELINE('Carrier does not have a SCAC cross reference code. Please provide this to Adam or Nikki')        ; * JMK128
            MVIN=''
            SUBJ='Carrier SCAC cross reference code not on file for ':CLIENT.NAME
            TEXT=USER:' attempted to enter a bill for a carrier '
            TEXT<1,-1>='that does not have a SCAC cross reference code'
            TEXT<1,-1>='on ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
            TEXT<1,-1>='Client ':CLIENT.ID:' ':CLIENT.NAME:' Carrier ':CARRIER.ID:' ':CARRIER.REC<1>
            MVIN=''
*           MVIN<1>='JEsposito@afs.net'  ; * JMK128
            MVIN<1>='ASmith@afs.net'     ; * JMK128
            MVIN<1,-1>='smichalik@afs.net'         ; * JMK128
            MVIN<2>='David@afs.net'
            MVIN<4>='AFS'
            MVIN<5>=SUBJ
            MVIN<6>=TEXT
            CALL SENDMAIL(MVIN,MVOUT)
            GOTO 200
         END
      END
      IF CLIENT.ID='01323' OR CLIENT.ID='01324' OR CLIENT.ID='01325' OR CLIENT.ID='01326' THEN       ; * JMK60
         OPEN '','CCC.MODE,':CARRIER.ID TO F.CCCMODE ELSE    ; * JMK60
*           CALL ELINE('Carrier does not have a carrier mode file set up. Please provide this to John')        ; * JMK60 ; * JMK128
            CALL ELINE('Carrier does not have a carrier mode file set up. Please provide this to Adam or Nikki')         ; * JMK60 ; * JMK128
            MVIN=''                      ; * JMK60
            SUBJ='Carrier mode validation file is not setup for ':CARRIER.ID:' ':CARRIER.REC<1>      ; * JMK60
            TEXT=USER:' attempted to enter a bill for a carrier '      ; * JMK60
            TEXT<1,-1>='that does not have a carrier mode validation file'       ; * JMK60
            TEXT<1,-1>='on ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')      ; * JMK60
            TEXT<1,-1>='Client ':CLIENT.ID:' ':CLIENT.NAME:' Carrier ':CARRIER.ID:' ':CARRIER.REC<1>           ; * JMK60
            MVIN=''                      ; * JMK60
*           MVIN<1>='JEsposito@afs.net'   ; * JMK60 ; * JMK128
            MVIN<1>='ASmith@afs.net'     ; * JMK60 ; * JMK128
            MVIN<1,-1>='smichalik@afs.net'         ; * JMK60 ; * JMK128
*           MVIN<2>='MKerbow@afs.net'     ; * JMK60
            MVIN<4>='AFS'                ; * JMK60
            MVIN<5>=SUBJ                 ; * JMK60
            MVIN<6>=TEXT                 ; * JMK60
            CALL SENDMAIL(MVIN,MVOUT)    ; * JMK60
            GOTO 200                     ; * JMK60
         END                             ; * JMK60
      END                                ; * JMK60
*     IF CLIENT.ID='01505' AND CARR.FSC='Y' THEN   ; * JMK136 ; * JMK150
      IF CLIENT.ID='01505' AND (CARR.FSC='Y' OR CARR.FSC='C') THEN     ; * JMK136 ; * JMK150
         IF CARRIER.ID='00124' THEN CARR.FSC='N'   ; * JMK136
         IF CARRIER.ID='01786' THEN CARR.FSC='N'   ; * JMK136
         IF CARRIER.ID='05156' THEN CARR.FSC='N'   ; * JMK136
         IF CARRIER.ID='08924' THEN CARR.FSC='N'   ; * JMK136
         IF CARR.FSC='N' THEN            ; * JMK136
*NPR08            CRT @(9,3):CLIENT.ID:' ':CLIENT.NAME:@(-4)       ; * JMK136
            CRT @(9,1):CLIENT.ID:' ':HLB:CLIENT.NAME:HLA     ; * NPR08  ;* NPR13
         END                             ; * JMK136
      END                                ; * JMK136
      IF CLIENT.ID='01758' AND CARRIER.ID='00748' THEN       ; * JMK182
         CARR.FSC='N'                    ; * JMK182
         CRT @(9,1):CLIENT.ID:' ':HLB:CLIENT.NAME:HLA        ; * JMK182
      END                                ; * JMK182
      IF CLIENT.ID='01784' AND CARRIER.ID='00014' THEN       ; * JMK185
         CARR.FSC='N'                    ; * JMK185
         CRT @(9,1):CLIENT.ID:' ':HLB:CLIENT.NAME:HLA        ; * JMK185
      END                                ; * JMK185
      IF CLIENT.ID='01810' AND CARRIER.ID='00014' THEN       ; * JMK185
         CARR.FSC='N'                    ; * JMK185
         CRT @(9,1):CLIENT.ID:' ':HLB:CLIENT.NAME:HLA        ; * JMK185
      END                                ; * JMK185
      ALT.CARRIER.MODE=''                ; * JMK108
      OPEN '','CARRIER.ALT.MODE,':CARRIER.ID TO F.CARR.ALT.MODE THEN   ; * JMK108
      END                                ; * JMK108
      CARRIER.DAYS=CARRIER.REC<23>       ; * JMK41
      CARRIER.DAYS.OVERRIDE=CARRIER.REC<94>        ; * JMK59
      CARRIER.MODE=CARRIER.REC<44>
      CARRIER.MODE.WGT=CARRIER.REC<70>
      CARRIER.MODE.BY.WGT=CARRIER.REC<71>
      CARRIER.SCAC=CARRIER.REC<12>       ; * JMK147
      CARRIER.TYPE='A'                   ; * JMK147
      IF CARRIER.MODE='6' THEN           ; * JMK147
         CARRIER.TYPE='B'                ; * JMK147
      END                                ; * JMK147
*NPR02
      IF CLIENT.ID='01485' THEN
         N.MODES = DCOUNT(CARRIER.REC<71>,@VM)
         FOR I.MODE = 1 TO N.MODES
            IF CARRIER.ID='17216' THEN
               CARRIER.REC<71,I.MODE> = '11'
               CARRIER.REC<44> = '11'
            END
            IF CARRIER.ID='15703' THEN
               CARRIER.REC<71,I.MODE> = '6'
               CARRIER.REC<44> = '6'
            END
         NEXT I.MODE
         CARRIER.MODE=CARRIER.REC<44>
         CARRIER.MODE.BY.WGT=CARRIER.REC<71>
      END
*NPR02
      READV T.MODE FROM F.TRANSPORT,CARRIER.MODE,1 ELSE T.MODE = ''
      T.MODE = OCONV(T.MODE,'MCU')
      LTL.CAR=CARRIER.MODE=1
      TL.CAR=CARRIER.MODE=6
      INTL.CAR=CARRIER.MODE=8            ; * NPR031
      AIR.CAR=CARRIER.MODE=12            ; * JMK91
      STARTUP.ID = CLIENT.ID'R%5':'*':CARRIER.ID
      READV START.DATE FROM F.SU.DATE,STARTUP.ID,1 ELSE START.DATE = ''
      CARRIER.NAME = CARRIER.REC<1>
      CARRIER.STREET = TRIM(CHANGE(CARRIER.REC<2>,@VM,' '))
      CARRIER.CITY = CARRIER.REC<3>
      CARRIER.STATE = CARRIER.REC<4>
      XREF.CARRIERS = CARRIER.REC<28>
      TEXT=TRIM(CARRIER.ID:' ':CARRIER.NAME:' ':CARRIER.STREET:' ':CARRIER.CITY)
      CARRIER.TEXT = TRIM(CARRIER.ID:' ':CARRIER.NAME)       ; * NPR08
*NPR08      CRT @(9,4):[1,70]:
      CRT @(9,2):CARRIER.TEXT[1,38]
      LOOKUP.ONLY=0
      PREV.PRO.LOOKUP.ONLY=0             ; * JMK04
      CAPTURE.INVOICE=0                  ; * JMK106
      ADD.AD.OR.BD=0
*     IF CARRIER.ID#'00015' AND CARRIER.ID#'00143' AND CARRIER.ID#'00365' AND CARRIER.ID#'04226' THEN          ; * JMK106
      LOCATE CARRIER.ID IN INVOICE.CARRIERS<1> SETTING CPOS THEN       ; * JMK106
         IF INVOICE.CARRIERS<2,CPOS>='Y' THEN CAPTURE.INVOICE=1        ; * JMK106
      END ELSE                           ; * JMK106
         INV.NUM=''
         NUM.OF.PRO=''
         TOT.NUM.OF.PRO=''
      END
      IF CARRIER.REC<89>='I' THEN        ; * JMK02
         LOOKUP.ONLY=1                   ; * JMK02
         LOOKUP.ONLY.REASON='This carrier is not Active.  Lookup Only.'          ; * JMK02
         PREV.PRO.LOOKUP.ONLY=1          ; * JMK04
         CALL ELINE(LOOKUP.ONLY.REASON)  ; * JMK02
      END                                ; * JMK02
      IF CLIENT.ID='00965' AND CARRIER.ID='00041' THEN
         IF USER#'MARY' AND USER#'MYRA' AND USER.TYPE#'A' THEN
            LOOKUP.ONLY=1
            LOOKUP.ONLY.REASON='Bills must be entered by Myra or Mary. Lookup Only'
            PREV.PRO.LOOKUP.ONLY=1
            CALL ELINE(LOOKUP.ONLY.REASON)
         END
      END
      IF CLIENT.ID='01535' AND CARRIER.ID='18324' THEN
         IF USER#'MARY' AND USER#'MYRA' AND USER#'GSPECKS' AND USER.TYPE#'A' THEN
            LOOKUP.ONLY=1
            LOOKUP.ONLY.REASON='Bills must be entered by Myra or Mary. Lookup Only'
            PREV.PRO.LOOKUP.ONLY=1
            CALL ELINE(LOOKUP.ONLY.REASON)
         END
      END
      IF CLIENT.REC(70)<1,11>='Y' THEN   ; * JMK54
         SCAC.TEST=CARRIER.REC<12>       ; * JMK54
         IF SCAC.TEST='' THEN            ; * JMK54
            CSCAC.ID=CLIENT.ID:'*':CARRIER.ID      ; * JMK54
            READ CSCAC.REC FROM F.CSCAC,CSCAC.ID ELSE CSCAC.REC=''     ; * JMK54
            SCAC.TEST=CSCAC.REC<1>       ; * JMK54
         END                             ; * JMK54
         IF SCAC.TEST='' THEN            ; * JMK54
            LOOKUP.ONLY.REASON="Invalid SCAC for client ":CLIENT.ID    ; * JMK54
            CALL ELINE(LOOKUP.ONLY.REASON)         ; * JMK54
            CC+=1 ; GOSUB PRINT.CC       ; * JMK54
            LOOKUP.ONLY=1                ; * JMK54
            PREV.PRO.LOOKUP.ONLY=1       ; * JMK54
         END                             ; * JMK54
      END                                ; * JMK54
      IF NOT(DBCTRL<9>) THEN
         HELP='Enter the Remittance Zip Code from the Freight Bill'
         IF USER='OWEN' OR USER='DAVID' OR USER='JIM' THEN HELP:=' (':CARRIER.REC<5>[1,5]:')'
         CALL GEN.IN(0,22,'Remittance Zip:  ','',Q,0,5,'','',2,-1,22,1,QI,HELP,0,23)
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC
         QI = OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI = 'EX'
               STOP
            CASE QI = 'X'
               GOTO 200
         END CASE
         IF CARRIER.REC<48>#'N' THEN
*         IF (QI#CARRIER.REC<5>[1,5] & QI#CARRIER.REC<35>[1,5]) OR QI='' THEN
* Remove the Correspondence address zip verification Per Brian 06-20-01
            IF QI#CARRIER.REC<5>[1,5] OR QI='' THEN
               CALL ELINE("Error! The Zip you entered is incorrect! Lookup Only! Entry Not Allowed!")
               LOOKUP.ONLY.REASON="Incorrect Remit Zip"
               CALL ELINE(LOOKUP.ONLY.REASON)
               CC+=1 ; GOSUB PRINT.CC
               LOOKUP.ONLY=1
               PREV.PRO.LOOKUP.ONLY=1    ; * JMK04
            END
         END
      END
      IF USER='BHELPENSTELL' THEN
         LOOKUP.ONLY=1
         LOOKUP.ONLY.REASON='You do not have permission to enter bills'
         PREV.PRO.LOOKUP.ONLY=1          ; * JMK04
      END
      IF JUMP.TO.CLIENT THEN
         LOOKUP.ONLY=1
         LOOKUP.ONLY.REASON='You have Jump to a Client. Exit to the menu. To add information'
         PREV.PRO.LOOKUP.ONLY=1
      END
      IF CLIENT.REC(146)#'NW' THEN
         LOOKUP.ONLY=1
         LOOKUP.ONLY.REASON="This client ":CLIENT.ID:" Is not setup for the new way program"
         PREV.PRO.LOOKUP.ONLY=1          ; * JMK04
      END
      IF CLIENT.ID='10356' AND CARRIER.ID='00015' THEN
         CARRIER.REC<47>="1N'-'3N'-'5N":@VM:CARRIER.REC<47>
         CARRIER.REC<51>='Y':@VM:CARRIER.REC<51>
         CARRIER.REC<52>='N':@VM:CARRIER.REC<52>
         FOR J = 53 TO 58
            CARRIER.REC<J>=@VM:CARRIER.REC<J>
         NEXT J
      END
      IF (CLIENT.ID='00614' OR CLIENT.ID='00761' OR CLIENT.ID='00839' OR CLIENT.ID='00839' OR CLIENT.ID='00850' OR CLIENT.ID='00861' OR CLIENT.ID='00883' OR CLIENT.ID='00888' OR CLIENT.ID='00889' OR CLIENT.ID='00902' OR CLIENT.ID='00913' OR CLIENT.ID='00917' OR CLIENT.ID='00918' OR CLIENT.ID='00928' OR CLIENT.ID='00929' OR CLIENT.ID='00929' OR CLIENT.ID='00933' OR CLIENT.ID='00938' OR CLIENT.ID='00978' OR CLIENT.ID='00982' OR CLIENT.ID='01015' OR CLIENT.ID='01020' OR CLIENT.ID='01024' OR CLIENT.ID='01028' OR CLIENT.ID='01038' OR CLIENT.ID='01043' OR CLIENT.ID='01044' OR CLIENT.ID='01045' OR CLIENT.ID='01056' OR CLIENT.ID='01063' OR CLIENT.ID='01066' OR CLIENT.ID='01087' OR CLIENT.ID='01088' OR CLIENT.ID='01095' OR CLIENT.ID='01102' OR CLIENT.ID='01114' OR CLIENT.ID='01132' OR CLIENT.ID='01148' OR CLIENT.ID='01152' OR CLIENT.ID='01161' OR CLIENT.ID='01164' OR CLIENT.ID='01179' OR CLIENT.ID='01190' OR CLIENT.ID='01223' OR CLIENT.ID='001241' OR CLIENT.ID='01274' OR CLIENT.ID='01357' OR CLIENT.ID='01352' OR CLIENT.ID='01241' OR CLIENT.ID='01258' OR CLIENT.ID='01264' OR CLIENT.ID='01270' OR CLIENT.ID='01283' OR CLIENT.ID='01292' OR CLIENT.ID='01309' OR CLIENT.ID='01349' OR CLIENT.ID='01351' OR CLIENT.ID='01352' OR CLIENT.ID='01357' OR CLIENT.ID='01361' OR CLIENT.ID='01371' OR CLIENT.ID='01380' OR CLIENT.ID='01381' OR CLIENT.ID='01398' OR CLIENT.ID='01401' OR CLIENT.ID='01408' OR CLIENT.ID='01433' OR CLIENT.ID='01442' OR CLIENT.ID='01448' OR CLIENT.ID='01456' OR CLIENT.ID='01458' OR CLIENT.ID='01472' OR CLIENT.ID='01475' OR CLIENT.ID='01479' OR CLIENT.ID='01480' OR CLIENT.ID='01481' OR CLIENT.ID='01487' OR CLIENT.ID='01491' OR CLIENT.ID='01493' OR CLIENT.ID='01511' OR CLIENT.ID='01522' OR CLIENT.ID='01525' OR CLIENT.ID='01529' OR CLIENT.ID='01539' OR CLIENT.ID='01545' OR CLIENT.ID='01576' OR CLIENT.ID='01577' OR CLIENT.ID='01582' OR CLIENT.ID='01600' OR CLIENT.ID='01635' OR CLIENT.ID='01644' OR CLIENT.ID='01661' OR CLIENT.ID='01697' OR CLIENT.ID='01700' OR CLIENT.ID='01704' OR CLIENT.ID='10272' OR CLIENT.ID='10298' OR CLIENT.ID='10356') AND CARRIER.ID='01075' THEN
         CARRIER.REC<47>="11N":@VM:CARRIER.REC<47>
         CARRIER.REC<51>='Y':@VM:CARRIER.REC<51>
         CARRIER.REC<52>='N':@VM:CARRIER.REC<52>
         FOR J = 53 TO 58
            CARRIER.REC<J>=@VM:CARRIER.REC<J>
         NEXT J
         CARRIER.REC<47>="12N":@VM:CARRIER.REC<47>
         CARRIER.REC<51>='Y':@VM:CARRIER.REC<51>
         CARRIER.REC<52>='N':@VM:CARRIER.REC<52>
         FOR J = 53 TO 58
            CARRIER.REC<J>=@VM:CARRIER.REC<J>
         NEXT J
      END
      IF CLIENT.ID='01148' AND CARRIER.ID='01312' THEN
         LOCATE "10N" IN CARRIER.REC<47> SETTING CAR.POS THEN
            DEL CARRIER.REC<47,CAR.POS>
            FOR J = 51 TO 58
               DEL CARRIER.REC<J,CAR.POS>
            NEXT J
         END
      END
      PRO.FORMAT=CARRIER.REC<47>
      LOCATE 'Y' IN CARRIER.REC<51> SETTING NUL ELSE
         LOCATE 'L' IN CARRIER.REC<51> SETTING NUL ELSE
            IF NOT(DBCTRL<10>) THEN
               CALL ELINE('No Active Pro Format on File!  Photocopy Bill and setup format!')
               CC+=1 ; GOSUB PRINT.CC
               GOTO 200
            END
         END
      END
      IF PRO.FORMAT<1,1>='' THEN PRO.MASKS='' ELSE
         VIN=PRO.FORMAT
         VIN<2>=CARRIER.REC<51>          ; ** Y/N Active or Inactive
         CALL MASK(VIN,VOUT)
         PRO.MASKS=VOUT<1>
      END

*
* Check carrier against list in CONTROL.REC if there is one
*
      IF (CONTROL.REC='') OR (CONTROL.REC<1>='D') ELSE
         BEGIN CASE
            CASE CONTROL.REC<1>='I'      ; * CONTROL.REC is a list of carriers to include
               LOCATE CARRIER.ID IN CONTROL.REC<2> BY 'AL' SETTING CARRIER.POS THEN
                  IF DATE() LT CONTROL.REC<3,CARRIER.POS> THEN
                     CRT@(6,6):STR('*',72)         ; * JMK109
                     FOR CNOTES=1 TO 8   ; * JMK109
                        CRT @(6,6+CNOTES):'*':CONTROL.REC<11,1,CNOTES>'L#70*':   ; * JMK109
                     NEXT                ; * JMK109
                     CRT@(6,15):STR('*',72)        ; * JMK109
                     CALL ELINE('Included carrier ':CARRIER.ID:' has been flagged not to pay.')
* CALL ELINE('Carrier ':CARRIER.ID:' is in include list, but the starting date is not until ':CONTROL.REC<3,CARRIER.POS>'D2/':'.')
*                    CALL ELINE('Rejecting this carrier. Try again.')  ; * JMK10
*                    GOTO 200            ; * JMK10
                     CALL ELINE('Lookup only for this carrier.')       ; * JMK10
                     LOOKUP.ONLY=1       ; * JMK10
                     PREV.PRO.LOOKUP.ONLY=1        ; * JMK10
                     LOOKUP.ONLY.REASON='Carrier ':CARRIER.ID:' is in include list, but the starting date is not until ':CONTROL.REC<3,CARRIER.POS>'D2/':'.'     ; * JMK10
                     FOR CNOTES=1 TO 10  ; * JMK109
                        CRT@(6,5+CNOTES):STR(' ',72)         ; * JMK109
                     NEXT                ; * JMK109
                  END
                  IF CONTROL.REC<4,CARRIER.POS>#'' THEN      ; * Not open end date
                     IF DATE() GT CONTROL.REC<4,CARRIER.POS> THEN
                        CRT@(6,6):STR('*',72)      ; * JMK109
                        FOR CNOTES=1 TO 8          ; * JMK109
                           CRT @(6,6+CNOTES):'*':CONTROL.REC<11,1,CNOTES>'L#70*':          ; * JMK109
                        NEXT             ; * JMK109
                        CRT@(6,15):STR('*',72)     ; * JMK109
                        CALL ELINE('Included carrier ':CARRIER.ID:' has been flagged not to pay.')
* CALL ELINE('Carrier ':CARRIER.ID:' is in include list, but the ending date was ':CONTROL.REC<4,CARRIER.POS>'D2/':'.')
*                       CALL ELINE('Rejecting this carrier. Try again.')         ; * JMK10
*                       GOTO 200         ; * JMK10
                        CALL ELINE('Lookup only for this carrier.')    ; * JMK10
                        LOOKUP.ONLY=1    ; * JMK10
                        PREV.PRO.LOOKUP.ONLY=1     ; * JMK10
                        LOOKUP.ONLY.REASON='Carrier ':CARRIER.ID:' is in include list, but the ending date was ':CONTROL.REC<4,CARRIER.POS>'D2/':'.'   ; * JMK10
                        FOR CNOTES=1 TO 10         ; * JMK109
                           CRT@(6,5+CNOTES):STR(' ',72)      ; * JMK109
                        NEXT             ; * JMK109
                     END
                  END
               END ELSE
                  CRT@(6,6):STR('*',72)  ; * JMK109
                  FOR CNOTES=1 TO 8      ; * JMK109
                     CRT @(6,6+CNOTES):'*':CONTROL.REC<11,1,CNOTES>'L#70*':      ; * JMK109
                  NEXT                   ; * JMK109
                  CRT@(6,15):STR('*',72)           ; * JMK109
                  CALL ELINE('Not-included carrier ':CARRIER.ID:' has been flagged not to pay.')
* CALL ELINE('Carrier ':CARRIER.ID:' is not in the include list.')
*                 CALL ELINE('Rejecting this carrier. Try again.'); * JMK10
*                 GOTO 200               ; * JMK10
                  CALL ELINE('Lookup only for this carrier.')          ; * JMK10
                  LOOKUP.ONLY=1          ; * JMK10
                  PREV.PRO.LOOKUP.ONLY=1           ; * JMK10
                  LOOKUP.ONLY.REASON='Carrier ':CARRIER.ID:' is not in the include list.'  ; * JMK10
                  FOR CNOTES=1 TO 10     ; * JMK109
                     CRT@(6,5+CNOTES):STR(' ',72)  ; * JMK109
                  NEXT                   ; * JMK109
               END
            CASE CONTROL.REC<1>='E'      ; * CONTROL.REC is a list of carriers to exclude
               LOCATE CARRIER.ID IN CONTROL.REC<2> BY 'AL' SETTING CARRIER.POS THEN
                  IF CONTROL.REC<4,CARRIER.POS>='' THEN      ; * Open end date
                     IF DATE() GE CONTROL.REC<3,CARRIER.POS> THEN
                        CRT@(6,6):STR('*',72)      ; * JMK109
                        FOR CNOTES=1 TO 8          ; * JMK109
                           CRT @(6,6+CNOTES):'*':CONTROL.REC<11,1,CNOTES>'L#70*':          ; * JMK109
                        NEXT             ; * JMK109
                        CRT@(6,15):STR('*',72)     ; * JMK109
                        CALL ELINE('Excluded carrier ':CARRIER.ID:' has been flagged not to pay.')
* CALL ELINE('Carrier ':CARRIER.ID:' is in exclude list in between starting and ending dates.')
*                       CALL ELINE('Rejecting this carrier. Try again.')         ; * JMK10
*                       GOTO 200         ; * JMK10
                        CALL ELINE('Lookup only for this carrier.')    ; * JMK10
                        LOOKUP.ONLY=1    ; * JMK10
                        PREV.PRO.LOOKUP.ONLY=1     ; * JMK10
                        LOOKUP.ONLY.REASON='Carrier ':CARRIER.ID:' is in exclude list in between starting and ending dates.'       ; * JMK10
                        FOR CNOTES=1 TO 10         ; * JMK109
                           CRT@(6,5+CNOTES):STR(' ',72)      ; * JMK109
                        NEXT             ; * JMK109
                     END
                  END ELSE
                     IF (DATE() GE CONTROL.REC<3,CARRIER.POS>) AND (DATE() LE CONTROL.REC<4,CARRIER.POS>) THEN
                        CRT@(6,6):STR('*',72)      ; * JMK109
                        FOR CNOTES=1 TO 8          ; * JMK109
                           CRT @(6,6+CNOTES):'*':CONTROL.REC<11,1,CNOTES>'L#70*':          ; * JMK109
                        NEXT             ; * JMK109
                        CRT@(6,15):STR('*',72)     ; * JMK109
                        CALL ELINE('Excluded carrier ':CARRIER.ID:' has been flagged not to pay.')
* CALL ELINE('Carrier ':CARRIER.ID:' is in exclude list in between starting and ending dates.')
*                       CALL ELINE('Rejecting this carrier. Try again.'); * JMK10
*                       GOTO 200; * JMK10
                        CALL ELINE('Lookup only for this carrier.')    ; * JMK10
                        LOOKUP.ONLY=1    ; * JMK10
                        PREV.PRO.LOOKUP.ONLY=1     ; * JMK10
                        LOOKUP.ONLY.REASON='Carrier ':CARRIER.ID:' is in exclude list in between starting and ending dates.'       ; * JMK10
                        FOR CNOTES=1 TO 10         ; * JMK109
                           CRT@(6,5+CNOTES):STR(' ',72)      ; * JMK109
                        NEXT             ; * JMK109
                     END
                  END
               END
         END CASE
      END

*
* Initialize audit variables
*
      IF USER# "" THEN
         IF CLIENT.AUDIT THEN
            EQUIP.TYPES = ''
            NUM.AVAL = DCOUNT(AVAL.EQUIP.TYPES<1>,@VM)
            FOR X = 1 TO NUM.AVAL
               T.AUDIT.ID = CARRIER.ID:'*':AVAL.EQUIP.TYPES<1,X>
               READV T.EQUIP.STATUS FROM F.AUDIT,T.AUDIT.ID,15 THEN
                  EQUIP.TYPES<1,-1> = AVAL.EQUIP.TYPES<1,X>
                  EQUIP.TYPES<2,-1> = AVAL.EQUIP.TYPES<2,X>
               END
            NEXT X
            NUM.EQUIP.TYPES = DCOUNT(EQUIP.TYPES<1>,@VM)
            OLA.CARRIER.ID=CARRIER.ID
            IF CARRIER.ID='13171' THEN OLA.CARRIER.ID='01625'
            READ DAUDIT FROM F.AUDIT,OLA.CARRIER.ID THEN
               IF DAUDIT<11>#'DISABLE' THEN
                  AUDIT.TYPE=DAUDIT<1>
                  CARRIER.AUDIT=1
                  READ BENCH.DFSC FROM F.NFSC,OLA.CARRIER.ID ELSE BENCH.DFSC=''
                  IF CLIENT.ID='01862' AND CARRIER.ID='00114' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01862' AND CARRIER.ID='00601' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01862' AND CARRIER.ID='00979' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01862' AND CARRIER.ID='00014' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01862' AND CARRIER.ID='00198' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01862' AND CARRIER.ID='00030' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01863' AND CARRIER.ID='00114' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01863' AND CARRIER.ID='00601' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01863' AND CARRIER.ID='00979' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01863' AND CARRIER.ID='00014' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01863' AND CARRIER.ID='00198' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01863' AND CARRIER.ID='00030' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF USER='OWEN' THEN
                     CRT @(0,23):'Owen Press Break: ':
                     INPUT NUL:
                  END
                  READV FSC.AUDIT.CLIENT.ID FROM F.NFSC.SUB,AUDIT.CLIENT.ID,1 ELSE FSC.AUDIT.CLIENT.ID=AUDIT.CLIENT.ID
                  READ CONTR.DFSC FROM F.NFSC,OLA.CARRIER.ID:"*":FSC.AUDIT.CLIENT.ID ELSE CONTR.DFSC=BENCH.DFSC
                  IF BENCH.DFSC<1>='DISABLE' THEN
                     BENCH.DFSC=''       ; ** No Effect
                     CONTR.DFSC=''
                  END
*                 IF CLIENT.REC(27) < 13455 THEN   ; * JMK45
*                 IF CARR.FSC # "Y" THEN      ; * JMK45; * JMK61
*                    BENCH.DFSC=CONTR.DFSC         ; * JMK61
*                 END                    ; * JMK61
               END ELSE
                  CARRIER.AUDIT=0
                  AUDIT='N'
                  AUDIT.TYPE=''
                  BENCH.DFSC=''
                  CONTR.DFSC=''
               END
            END ELSE
               IF NUM.EQUIP.TYPES GE 1 THEN
                  CARRIER.AUDIT=1
                  DAUDIT=''
                  AUDIT='Y'
                  AUDIT.TYPE='TLALL'
                  READ BENCH.DFSC FROM F.NFSC,OLA.CARRIER.ID ELSE BENCH.DFSC=''
                  IF CLIENT.ID='01862' AND CARRIER.ID='00114' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01862' AND CARRIER.ID='00601' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01862' AND CARRIER.ID='00979' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01862' AND CARRIER.ID='00014' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01862' AND CARRIER.ID='00198' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01862' AND CARRIER.ID='00030' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01863' AND CARRIER.ID='00114' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01863' AND CARRIER.ID='00601' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01863' AND CARRIER.ID='00979' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01863' AND CARRIER.ID='00014' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01863' AND CARRIER.ID='00198' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01863' AND CARRIER.ID='00030' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  READ CONTR.DFSC FROM F.NFSC,OLA.CARRIER.ID:"*":AUDIT.CLIENT.ID ELSE CONTR.DFSC=BENCH.DFSC
                  IF BENCH.DFSC<1>='DISABLE' THEN
                     BENCH.DFSC=''       ; ** No Effect
                     CONTR.DFSC=''
                  END
*                 IF CLIENT.REC(27) < 13455 THEN   ; * JMK45
*                 IF CARR.FSC # "Y" THEN      ; * JMK45; * JMK61
*                    BENCH.DFSC=CONTR.DFSC         ; * JMK61
*                 END                    ; * JMK61
               END ELSE
                  CARRIER.AUDIT=0
                  DAUDIT=''
                  AUDIT='N'
                  AUDIT.TYPE=''
                  BENCH.DFSC=''
                  CONTR.DFSC=''
               END
            END
         END ELSE
            CARRIER.AUDIT=0
            DAUDIT=''
            AUDIT='N'
            AUDIT.TYPE=''
            BENCH.DFSC=''
            CONTR.DFSC=''
         END                             ; * IF CLIENT.AUDIT
      END ELSE
         IF CLIENT.AUDIT THEN
            OLA.CARRIER.ID=CARRIER.ID
            IF CARRIER.ID='13171' THEN OLA.CARRIER.ID='01625'
            READ DAUDIT FROM F.AUDIT,OLA.CARRIER.ID THEN
               IF DAUDIT<11>#'DISABLE' THEN
                  AUDIT.TYPE=DAUDIT<1>
                  CARRIER.AUDIT=1
                  READ BENCH.DFSC FROM F.NFSC,OLA.CARRIER.ID ELSE BENCH.DFSC=''
                  IF CLIENT.ID='01862' AND CARRIER.ID='00114' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01862' AND CARRIER.ID='00601' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01862' AND CARRIER.ID='00979' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01862' AND CARRIER.ID='00014' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01862' AND CARRIER.ID='00198' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01862' AND CARRIER.ID='00030' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01863' AND CARRIER.ID='00114' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01863' AND CARRIER.ID='00601' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01863' AND CARRIER.ID='00979' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01863' AND CARRIER.ID='00014' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01863' AND CARRIER.ID='00198' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  IF CLIENT.ID='01863' AND CARRIER.ID='00030' THEN
                     READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
                  END
                  READ CONTR.DFSC FROM F.NFSC,OLA.CARRIER.ID:"*":AUDIT.CLIENT.ID ELSE CONTR.DFSC=BENCH.DFSC
                  IF BENCH.DFSC<1>='DISABLE' THEN
                     BENCH.DFSC=''       ; ** No Effect
                     CONTR.DFSC=''
                  END
*                 IF CLIENT.REC(27) < 13455 THEN   ; * JMK45
*                 IF CARR.FSC # "Y" THEN      ; * JMK45; * JMK61
*                    BENCH.DFSC=CONTR.DFSC         ; * JMK61
*                 END                    ; * JMK61
               END ELSE
                  CARRIER.AUDIT=0
                  AUDIT='N'
                  AUDIT.TYPE=''
                  BENCH.DFSC=''
                  CONTR.DFSC=''
               END
            END ELSE
               CARRIER.AUDIT=0
               DAUDIT=''
               AUDIT='N'
               AUDIT.TYPE=''
               BENCH.DFSC=''
               CONTR.DFSC=''
            END
         END
      END                                ; * IF USER# "" THEN

      M.BOL.REC = ''                     ; *NPR028
      ID.BOL.CRX = ''                    ; *NPR028
      ID.BOL.CRX2 = ''                   ; *NPR028
      BOL.POP.VER.ARR = ''               ; *NPR777

*---- Enter pro number
300: ***
      LOOKUP.ONLY=PREV.PRO.LOOKUP.ONLY   ; * JMK04
      IF CHANGE.FLAG = 0 THEN
         GOSUB INITIALIZE.BILL.VARIABLES
         GOSUB 8100
         GOSUB 8200
         MISROUTE.FLG=0
      END
      IF SEQ.FLAG THEN
         IF BACK.FLAG THEN
            BACK.FLAG = 0
            SU.FLAG=0                    ; * JMK129
            CHANGE.FLAG=0                ; * JMK129
            PROG.NAME='FB.2.1.NW'        ; * JMK129
            GOSUB INITIALIZE.BILL.VARIABLES        ; * JMK129
            GOSUB 8100                   ; * JMK129
            GOSUB 8200                   ; * JMK129
            MISROUTE.FLG=0               ; * JMK129
            GOTO 200                     ; * ENTER CARRIER
         END ELSE
            GOSUB 8400                   ; * Get next pro number
            BACK.FLAG = 0
            GOTO 305
         END
      END
      IF PRO='' AND PRO.MASKS<1,1>#'' THEN
         MASK=PRO.MASKS<1,1>
         IF PRO.MASKS<1,2>#'' THEN
            OTHER.MASKS=PRO.MASKS
            DEL OTHER.MASKS<1,1>         ; ** Remove the First one (already used)
            TEXT='Other Valid Masks: ':CHANGE(OTHER.MASKS<1>,@VM,' ')
            PRINT @(0,22):@(-4):TEXT[1,59]:
         END ELSE OTHER.MASKS=''
      END ELSE
         OTHER.MASKS=''
         MASK = PRO:STR('-',20-LEN(PRO))
      END

      VER.CODE='P' ; VER.TYPE='R' ; GOSUB UPDATE.VERIFY
      IF CHANGE.FLAG AND USER.TYPE='A' THEN
         QI=PRO
         Q=PRO
         GOTO 303
      END

* NPR028 Start Changes

      IF DO.BOL.POP THEN
         CRT @(5,8) : SPACE(30)
         IF CLIENT.REC(254) NE "" THEN
***         IF NOT(CHANGE.FLAG) THEN CRT @(10,10): REV.ON : ">>> BOL Data may be available. Try Entering *BOL # <<<" : REV.OFF
***         IF M.BOL.REC = "" THEN
***            IF NOT(CHANGE.FLAG) THEN CRT @(10,10): REV.ON : ">>> BOL Data may be available. Try Entering *BOL # <<<" : REV.OFF
***         END ELSE
***            IF NOT(CHANGE.FLAG) THEN CRT @(10,10): REV.ON : ">>> Found Data for BOL " : ID.BOL.CRX : " <<<" : REV.OFF
***         END
         END
      END

* NPR028 End Changes

*     CRT @(13,6):@(-4)                  ; * JMK11
      CRT @(13,6):SPACE(30)              ; * JMK11
*     HELP = 'Enter the Pro Number. [S]=Scan Carrier [X]=Back [SEQ]=Sequential [EX]=Exit'
      HELP = 'Enter the Pro Number. [S]=Scan Carrier [X]=Back [EX]=Exit'
      CALL GEN.IN(5,6,MASK,'',Q,0,20,'','',2,5,6,0,QI,HELP,0,23)
**************************************************************

      IF CHANGE.FLAG=0 THEN              ; * JMK164
         FRT.ARRAY=''                    ; * JMK17
         MIS.ARRAY=''                    ; * JMK17
         DTL.CHRG.CODES=''               ; * JMK19
         DTL.CHRG.AMTS=''                ; * JMK19
         MISC.REASON=''                  ; * JMK164
      END                                ; * JMK164
      IF QI[LEN(QI)-1,2]='BC' THEN
         VIN=''
         VIN<1>=QI
         VIN<2>=CARRIER.ID
         CALL BAR.CODE(VIN,VOUT)
         IF VOUT<1>#'' THEN
            QI=VOUT<1>
            Q =VOUT<1>
         END
      END ELSE
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      END
**************************************************************
      CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      IF CARRIER.ID='03517' AND LEN(QI)=10 AND NUM(QI) THEN
         IF QI[9,1]#'/' THEN
            QI=QI[1,3]:QI[6,5]
            Q=QI
         END
      END
      IF OTHER.MASKS#'' THEN PRINT @(0,22):@(-4):
303: *** Entry Point When "L"ast Pro Shortcut is used
      QI = OCONV(QI,'MCU')
      QI = TRIM(QI)
      IF INDEX(QI,'*',1) THEN

*NPR028 Start changes
         IF CLIENT.REC(254) NE "" AND QI[1,1] = "*" THEN
            IF DO.BOL.POP THEN
               ID.BOL.CRX = QI[2,999]
               IF ID.BOL.CRX NE "" THEN  ; * NPR028
                  OPEN '','FB.BOL.CRX,':CLIENT.ID TO F.BOL.CRX ELSE    ; * NPR028
                     CALL ELINE("Can't open FB.BOL.CRX file for client ":CLIENT.ID)        ; * NPR028
                  END                    ; * NPR028
               END                       ; * NPR028

               IF USER = "NPRATT" OR USER = "XOWEN" OR USER = "XMKERBOW" OR USER = "MARY" OR USER = "xMYRA" THEN         ; *NPR99 04/23/10
                  M.VIN = '' ; M.VOUT = '' ; BOL.REC = ''    ; *NPR99 04/23/10
                  M.VIN<1> = CLIENT.ID   ; *NPR99 04/23/10
                  M.VIN<2> = ID.BOL.CRX  ; *NPR99 04/23/10
                  CALL FB.GET.BOL.DATA(M.VIN,M.VOUT,F.BOL.CRX,M.BOL.REC)         ; *NPR99 04/23/10
                  ID.BOL.CRX = M.VOUT<1>           ; *NPR99 04/23/10
                  CLIENT.ID2 = M.VOUT<2>           ; *NPR99 04/23/10
               END ELSE                  ; *NPR99 04/23/10
                  ID.BOL.CRX2 = CLIENT.ID : ID.BOL.CRX "R%10"
                  M.BOL.REC = ''
                  READ M.BOL.REC FROM F.BOL.CRX , ID.BOL.CRX ELSE M.BOL.REC = ""
***               IF M.BOL.REC = "" THEN READ M.BOL.REC FROM F.BOL.CRX , ID.BOL.CRX2 THEN
***                  ID.BOL.CRX = ID.BOL.CRX2
***               END
               END                       ; *NPR99 04/23/10

               IF M.BOL.REC NE "" THEN
                  IF NOT(CHANGE.FLAG) THEN
                     CRT @(10,10): REV.ON : ">>> Found BOL Data for " : ID.BOL.CRX : " <<<" : REV.OFF : @(-4)
                     M.PRO.NO = M.BOL.REC<26>
                     IF M.PRO.NO NE "" THEN
**                     CRT @(10,11): REV.ON : ">>> PRO # " : M.BOL.REC<26> : " <<<" : REV.OFF : @(-4)
                     END
                     CALL ELINE("")
                  END
                  BLIN = M.BOL.REC
                  CL.BOL.POP.VER = CLIENT.REC(254)
                  CL.BOL.POP.VER<2> = CLIENT.REC(255)
                  CL.BOL.POP.VER<3> = CLIENT.REC(256)
**               CALL FB.SETUP.BOL.POP.VER(BLIN,BLOUT,CL.BOL.POP.VER)
                  CALL FB.SETUP.BOL.POP.VER(M.BOL.REC,PRO.REC,BLOUT,CL.BOL.POP.VER,"P")    ; * Populate BOL data
                  BOL.POP.VER.ARR = BLOUT
                  BOL.PRO.NO = M.BOL.REC<26>
                  IF BOL.PRO.NO NE "" THEN
                     PRO.POP.FLAG = BOL.POP.VER.ARR<1,20>
                     IF PRO.POP.FLAG = 'Y' AND NOT(BACK.FLAG) THEN
                        DATA BOL.PRO.NO
                     END
***                  IF NOT(CHANGE.FLAG) THEN CRT @(10,10): REV.ON : ">>> Found PRO # for BOL " : ID.BOL.CRX : " <<<" : REV.OFF
                  END
                  GOTO 300
               END ELSE
                  CRT @(10,10): REV.ON : ">>> NO BOL Data found for " : ID.BOL.CRX : " <<<" : REV.OFF
                  CALL ELINE("")
               END
               GOTO 300
            END                          ; * IF DO.BOL.POP END
         END ELSE
            CALL ELINE('ERROR! Pro Number cannot contain a "*"')
            CC+=1 ; GOSUB PRINT.CC
            GOTO 300
         END
      END
*NPR028 End Changes

      IF CARRIER.ID='00041' THEN         ; * JMK86
         IF QI[LEN(QI)-1,2]='-0' THEN    ; * JMK86
            QI=QI[1,LEN(QI)-2]:'-O'      ; * JMK86
            Q=QI                         ; * JMK86
            PRINT @(5,6):QI:             ; * JMK86
         END                             ; * JMK86
      END                                ; * JMK86
*
* SWITCH + KEY TO X FOR QUICKER DATA ENTRY OF YELLOW FRT BILLS
*
      PLUS.POS=INDEX(QI,'+',1)
      IF PLUS.POS THEN
         QI=CHANGE(QI,"+","-")
         Q=QI
         PRINT @(5,6):QI:
      END
      IF QI[LEN(QI),1]='-' AND (CARRIER.ID='00093' OR CARRIER.ID='00017') THEN
*
* If the last char is a - after the +s were change to - then make an x
*
         QI=QI[1,LEN(QI)-1]:'X'
         Q=QI
         PRINT @(5,6):QI:
      END
      IF INDEX(QI,'+',1) THEN
         CALL ELINE('ERROR! Pro Number cannot contain a "+"')
         CC+=1 ; GOSUB PRINT.CC
         GOTO 300
      END
      BEGIN CASE
         CASE QI = 'X'
            CRT @(5,6):SPACE(20)
            SU.FLAG=0                    ; * JMK129
            CHANGE.FLAG=0                ; * JMK129
            PROG.NAME='FB.2.1.NW'        ; * JMK129
            GOSUB INITIALIZE.BILL.VARIABLES        ; * JMK129
            GOSUB 8100                   ; * JMK129
            GOSUB 8200                   ; * JMK129
            MISROUTE.FLG=0               ; * JMK129
            GOTO 200                     ; * ENTER CARRIER
         CASE QI = 'EX'
            STOP
         CASE QI = 'L' AND LAST.PRO#'L'  ; *   #'L' to prevent loop
            IF LAST.PRO='' THEN
               CALL ELINE('There is no Last Pro to recall!')
            END
            QI=LAST.PRO
            Q=LAST.PRO
            CRT @(5,6):QI:SPACE(LEN(MASK)-LEN(QI)):
            GOTO 303                     ; * Go to Entry Point As If it was keyed
         CASE QI = 'SU'
*           IF DBCTRL<11>=1 OR USER='KATHY' THEN   ; * JMK129
            IF DBCTRL<11>=1 THEN         ; * JMK129
               HELP='Enter SU password'
               ECHO OFF
               CALL GEN.IN(0,22,'Password: ***********','',Q,0,11,'','',2,-11,22,0,QI,HELP,0,23)
               ECHO ON
               IF QI='ADJUST ONLY' OR QI='SUPW' THEN
                  HELP='Get Owen or David. Need Additional password to continue.'
                  ECHO OFF
                  CALL GEN.IN(0,22,'Additional Password: **************','',Q,0,14,'','',2,-14,22,0,QI,HELP,0,23)
                  ECHO ON
                  IF QI='OK' THEN
                     CALL ELINE('SU installed.')
                     SU.FLAG=1
                     PROG.NAME='***SU*** FB.2.1.NW'          ; * JMK129
                  END ELSE
                     CALL ELINE('Invalid Password SU not installed.')
                     SU.FLAG=0
                     CHANGE.FLAG=0       ; * JMK129
                     PROG.NAME='FB.2.1.NW'         ; * JMK129
                  END
               END ELSE
                  CALL ELINE('Invalid Password SU not installed.')
                  SU.FLAG=0
                  CHANGE.FLAG=0          ; * JMK129
                  PROG.NAME='FB.2.1.NW'  ; * JMK129
               END
* NPR08               CALL AFS.SCR.REFRESH(PROG.NAME, PROG.DESC, PACK.NAME, CO.NAME,TIME.DATE, 1)           ; * JMK129
               CLR.SCR = 1 ; GOSUB DISP.SCREEN.HEADING       ; *NPR08
            END
            GOTO 300
         CASE QI = 'FRT'
            IF DBCTRL<12>=1 THEN
               HELP='Enter Freight Payment Manager Password.'
               ECHO OFF
               CALL GEN.IN(0,22,'Password: ***********','',Q,0,11,'','',2,-11,22,0,QI,HELP,0,23)
               ECHO ON
               IF QI='MYRA ONLY' THEN
                  CALL ELINE('Freight Payment Manager Installed.')
                  FRT.FLAG=1
               END ELSE
                  CALL ELINE('Invalid Password. Freight Payment Manager not installed.')
                  FRT.FLAG=0
               END
            END
            GOTO 300
         CASE QI = 'S'
            CRT @(0,0):@(-3)
            CALL FB.DRAW.BOX(8,3,67,16,' ','')
            CALL FB.DRAW.BOX(9,4,65,12,' ','+=+|+=+|')
            CALL FB.DRAW.BOX(9,4,65,3,' ','+=+|+=+|')
            CALL FB.PRINT.CENT(9,74,8,"C A R R I E R   C O M M E N T S")
            FOR I=1 TO 8
               COMMENT=CARRIER.REC<45,I>'L#60'
               ROW=I+6
               CRT @(10,ROW):I'R#2':'|':COMMENT
            NEXT I
            CALL ELINE('')
            GOSUB 8100                   ; * Display screen
            GOTO 300                     ; * ENTER PRO
*        CASE QI = 'SEQ'
*           GOSUB 8400                   ; * Get next number
*           SEQ.FLAG = 1
         CASE CHANGE.FLAG = 1 & QI = ''
            Q = PRO
         CASE QI = ''
            GOTO 300                     ; * ENTER PRO
      END CASE
      CALL CLR.CONTROL(Q)
      TST=OCONV(TRIM(Q),'MCU')
      VIN = TST
      VIN<2>=USER
      IF USER='-DAVID' THEN CALL ELINE('PRESS BREAK')
*     CALL CHECK.PRO(VIN,CARRIER.REC,VOUT)         ; * JMK165
      CALL CHECK.PRO.NEW(VIN,CARRIER.REC,VOUT)     ; * JMK165
      CHK.MSG = TRIM(VOUT<1>)
      CHK.OLD.PRO = VOUT<3>              ; * Mv with Old Pro Number to check
      IF CHK.MSG # '' THEN
         CALL ELINE('Error! ':CHK.MSG)
         CC+=1 ; GOSUB PRINT.CC
         GOTO 300
      END
      IF TRIM(VOUT<2>)=1 THEN            ; * If A Check Digit Was Used!
         VER.CODE='P' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
      END
      IF VOUT<5>#'' THEN                 ; * A Check Digit Was provided by the program
         LOOKUP.ONLY=1
         LOOKUP.ONLY.REASON="No Check Digit Supplied"
         QI[LEN(QI),1]=VOUT<5>
         Q=QI
         PRINT @(5,6):QI:
      END
      IF VOUT<6>#'' THEN
         LOOKUP.ONLY=1
         LOOKUP.ONLY.REASON="Old Pro Format - Lookup Item only"
*        CALL ELINE(LOOKUP.ONLY.REASON)
         IF CARRIER.ID#'00041' THEN
            Q=QI
         END
         PRINT @(5,6):QI:
      END
      IF CARRIER.ID='00093' AND QI[LEN(QI)-1,2]='BD' THEN
         LOOKUP.ONLY=0
         LOOKUP.REASON=''
      END
      IF CARRIER.ID='00093' AND QI[LEN(QI)-1,2]='AD' THEN    ; * JMK181
         LOOKUP.ONLY=0                   ; * JMK181
         LOOKUP.REASON=''                ; * JMK181
      END                                ; * JMK181
      IF CARRIER.ID='00451' AND QI[LEN(QI)-1,2]='BD' THEN
         LOOKUP.ONLY=0
         LOOKUP.REASON=''
      END
      IF CARRIER.ID='00041' THEN
         UPS.DATE=TRIM(Q)[8,6]
         UPS.DATE=UPS.DATE[1,2]:'-':UPS.DATE[3,2]:'-':UPS.DATE[5,2]
         UPS.DATE=ICONV(UPS.DATE,'D')
         IF MOD(UPS.DATE,7)#6 THEN
            CALL ELINE('UPS bills must end with a date that falls on Saturday')
            GOTO 300
         END
         IF TRIM(OCONV(Q,'MCU'))[1,7]='70X-239' THEN
            CALL ELINE('This is AFS UPS account number. You cannot enter it')
            GOTO 300
         END
         IF TRIM(OCONV(Q,'MCU'))[1,7]='1W7-16V' THEN
            CALL ELINE('Please give this bill to Mary. Bill is not to be paid')
            GOTO 300
         END
         IF TRIM(OCONV(Q,'MCU'))[1,7]='2V0-7Y1' THEN
            CALL ELINE('This is special UPS account number. You cannot enter it')
            GOTO 300
         END
      END
*DF      IF CARRIER.ID='01253' THEN
*DF         IF Q[1,3]='555' THEN
*DF            CALL ELINE('Central Transport cannot start with a 555')
*DF            GOTO 300
*DF         END
*DF      END
* Removed the above 6 lines per Owen. DRF 11/11/09

305: ***
      PRO = OCONV(TRIM(Q),'MCU')
      LAST.PRO=PRO                       ; * Save Pro for the "L"ast Pro option
      VERSION = 0
      DISP = PRO:' Version ':VERSION
      CRT @(5,6):DISP
      IF LOOKUP.ONLY=0 THEN              ; * JMK01
         SCAC=TRIM(CARRIER.REC<12>)      ; * JMK01
         ONSCREEN.ID=USER:'.TXT'
         IF SCAC='' THEN                 ; * JMK01
            DELETE F.ONSCREEN,ONSCREEN.ID
         END ELSE
            ONSCREEN.REC=''              ; * JMK01
            ONSCREEN.REC<1>=SCAC         ; * JMK01
            ONSCREEN.REC<2>=PRO          ; * JMK01
*           WRITE ONSCREEN.REC ON F.ONSCREEN,ONSCREEN.ID     ; * JMK01; * JMK38
            WRITE ONSCREEN.REC ON F.ONSCREEN,ONSCREEN.ID ELSE          ; * JMK01; * JMK38
               RQM ; RQM                 ; * JMK38
               WRITE ONSCREEN.REC ON F.ONSCREEN,ONSCREEN.ID ELSE NULL  ; * JMK38
            END                          ; * JMK38
         END                             ; * JMK01
      END                                ; * JMK01

310: ***
      IF CARRIER.ID='00093' AND PRO[LEN(PRO)-1,2]='BD' THEN
         LOOKUP.ONLY=0
         LOOKUP.REASON=''
      END
      IF CARRIER.ID='00093' AND PRO[LEN(PRO)-1,2]='AD' THEN  ; * JMK181
         LOOKUP.ONLY=0                   ; * JMK181
         LOOKUP.REASON=''                ; * JMK181
      END                                ; * JMK181
      IF CARRIER.ID='00451' AND PRO[LEN(PRO)-1,2]='BD' THEN
         LOOKUP.ONLY=0
         LOOKUP.REASON=''
      END
      PRO.ID = CARRIER.ID:'*':PRO:"*":VERSION
      IF CHANGE.FLAG THEN
         OLD.CLASS=OLD.PRO.REC<74>
         OLD.INV=OLD.PRO.REC<94>
         OLD.BOL=OLD.PRO.REC<16>
         OLD.BOL.DIST=OLD.PRO.REC<205>   ; * JMK84
      END ELSE
         OLD.PRO.ID=PRO.ID
      END
      OLD.PRO.REC = ''
      AUTO.CAL=0                         ; * JMK70
      CHANGE.EXP=0
      TEST=FIELD(PRO,'/',2)
      IF TEST#'' AND NUM(TEST) THEN
         ORIG.PRO=FIELD(PRO,'/',1)
         IF TEST=1 THEN
            ORIG.BILL.ID=CARRIER.ID:'*':ORIG.PRO:'*':VERSION
         END ELSE
            ORIG.BILL.ID=CARRIER.ID:'*':ORIG.PRO:"/":TEST-1:'*':VERSION
         END
         READ DLOOK FROM F.CRX,ORIG.BILL.ID ELSE
*         CALL ELINE(FIELD(ORIG.BILL.ID,"*",2):' must be on file before you can enter ':PRO)
*         GOTO 300
*         CALL ELINE('Warning! ':FIELD(ORIG.BILL.ID,"*",2):' should be on file before you can enter ':PRO)
         END
      END
*
      READ OLD.PRO.REC FROM F.HIST,PRO.ID THEN
*NPR01         Code below does not apply to PRE.OPEN.BILLS file - payments should not have been applied yet  ;*NPR01
         READ DOPEN.REC FROM F.OPEN,CLIENT.ID:'*':PRO.ID THEN
            IF DOPEN.REC<133>#'' THEN PREV.SELECTED='Y'
         END ELSE
            DOPEN.REC=''
            PREV.SELECTED=''
         END
*OWEN   CHK.OLD.PRO='' ; * If you Find the Original Don't check Old Ones
*NOTE KM Tested here and this is where stack # comes out
*NOTE KM Determine here if override rules are in place and if so display them
*DF         AUDITOR.TEXT='Auditor: ':OLD.PRO.REC<68>:' ':OLD.PRO.REC<89>
*NPR08         AUDITOR.TEXT='Auditor: '
         AUDITOR.TEXT = ''               ; * JMK161
         NEW.AUDITOR.TEXT = ''           ; * JMK161
*        IF OLD.PRO.REC<89> NE "" THEN AUDITOR.TEXT = OLD.PRO.REC<89>  ; * NPR08 ; * JMK161
         IF OLD.PRO.REC<89> NE "" THEN   ; * JMK161
            FBAUDITOR = OLD.PRO.REC<89>  ; * JMK161
            READV AUDITOR.TEXT FROM F.BCTRL,FBAUDITOR,13 THEN          ; * JMK161
               AUDITOR.TEXT=OCONV(AUDITOR.TEXT,'MCU')        ; * JMK161
            END                          ; * JMK161
         END                             ; * JMK161

         IF OLD.PRO.REC<96>#'' AND OLD.PRO.REC<96>#OLD.PRO.REC<68> THEN
*NPR08            AUDITOR.TEXT=AUDITOR.TEXT:OLD.PRO.REC<96>:'->':OLD.PRO.REC<68>
            NEW.AUDITOR.TEXT=NEW.AUDITOR.TEXT:OLD.PRO.REC<96>:'->':OLD.PRO.REC<68>         ; * NPR08
         END ELSE
*NPR08            AUDITOR.TEXT=AUDITOR.TEXT:OLD.PRO.REC<68>
            NEW.AUDITOR.TEXT = NEW.AUDITOR.TEXT:OLD.PRO.REC<68>
         END
         IF OLD.PRO.REC<68>='1' THEN     ; * JMK26
            IF OLD.PRO.REC<53>=OLD.PRO.REC<54> THEN          ; * JMK26
*NPR08               AUDITOR.TEXT:='G'         ; * JMK26   ;* NPR08
               NEW.AUDITOR.TEXT:='G'     ; * JMK26
            END ELSE                     ; * JMK26
*NPR08               AUDITOR.TEXT:='V'         ; * JMK26   ;* NPR08
               NEW.AUDITOR.TEXT:='V'     ; * JMK26
            END                          ; * JMK26
         END                             ; * JMK26
*NPR08          AUDITOR.TEXT=AUDITOR.TEXT:' ':OLD.PRO.REC<89>
*
         IF OLD.PRO.REC<116> #'' THEN
*NPR08            AUDITOR.TEXT=AUDITOR.TEXT:'*'
            OVERRIDE.RULES.COUNT = DCOUNT(OLD.PRO.REC<116>,@VM)
            OVERRIDE.RULES.TEXT = '*'
            FOR KM = 1 TO OVERRIDE.RULES.COUNT
               RULES.TEXT = OLD.PRO.REC<116,KM>:'_':OLD.PRO.REC<117,KM>:'_':OLD.PRO.REC<118,KM>:'__'
               OVERRIDE.RULES.TEXT = OVERRIDE.RULES.TEXT:RULES.TEXT
            NEXT KM
            RULES.OUTPUT = 1
         END ELSE
            RULES.OUTPUT = 0
         END
*NPR08         CRT @(29,1):AUDITOR.TEXT'L#25'
*        CRT @(59,3):AUDITOR.TEXT[1,20]  ; * NPR08 ; * JMK161
         CRT @(59,3):AUDITOR.TEXT'L#20':           ; * NPR08 ; * JMK161
         CRT @(70,4):NEW.AUDITOR.TEXT    ; * NPR08
         IF OLD.PRO.REC<116> #'' THEN    ; * NPR08
            CRT @(59,4):'Y'              ; * NPR08
*NPR08             CRT @(0,2):OVERRIDE.RULES.TEXT[1,79]
*NPR08            GOSUB DISPLAY.OVERRIDE.RULES
         END

         ENTERED.BY = OLD.PRO.REC<53>    ; * NPR024
         VER.BY = ''                     ; * NPR024

         COUNTRY.LIST<1> = OLD.PRO.REC<222>        ; * NPR027
         COUNTRY.LIST<2> = OLD.PRO.REC<223>        ; * NPR027

         DISP = PRO:' Version ':VERSION
         IF OLD.PRO.REC<53>#'' THEN DISP:='   Entered by : ':OLD.PRO.REC<53>
         IF OLD.PRO.REC<39>='R' THEN
            DISP:=' (REJECTED)'
            REJECT.FLAG = OLD.PRO.REC<39>
         END
         IF OLD.PRO.REC<37> # '' THEN
            VER.BY=OLD.PRO.REC<54>
         END ELSE
            READV VER.BY FROM F.BILLS,PRO.ID,54 ELSE VER.BY=''
         END

         VERIFIED.BY = VER.BY            ; * NPR024

         IF VER.BY#'' THEN DISP:='   Verified by: ':VER.BY
         CRT @(5,6):DISP
         IF OLD.PRO.REC<30>#'' THEN
*DF          CRT @(5,7):SPACE(25):SPACE(LEN(PRO)):OLD.PRO.REC<30>'D2/'
*NPR034            CRT @(30,7):SPACE(LEN(PRO)): 'Ent ':OLD.PRO.REC<30>'D2/'
            DTP = INDEX(DISP,'Enter',1)  ; * NPR034
            IF DTP = "0" THEN DTP = 30   ; * NPR034
            DTP += 4                     ; * NPR034
            CRT @(DTP,7): 'Entered on : ':OLD.PRO.REC<30>'D2/'         ; * NPR034
         END
*        IF OLD.PRO.REC<37>#'' THEN      ; * JMK85
         IF OLD.PRO.REC<37>#'' OR CARRIER.ID='00041' THEN    ; * JMK85
            GOSUB GET.RELATED.BILLS
            IF RELATED.BILLS THEN
               GOSUB DISPLAY.RELATED.BILLS
* HELP = '[Return] to display bill'                            ; * JCW07
* CALL GEN.IN(0,22,'--','',Q,0,2,'','',2,-2,22,0,QI,HELP,0,23) ; * JCW07
* CC+=LEN(QI)+1 ; GOSUB PRINT.CC                               ; * JCW07
* CRT @(0,21):@(-3):                                           ; * JCW07
* Q = OCONV(QI,'MCU')                                          ; * JCW07
               IF Q = 'EX' THEN STOP
               IF Q = 'X' THEN GOTO 300
               IF Q = 'BR' THEN          ; * JMK92
                  DATA 'Rate'            ; * JMK92
                  DATA CLIENT.ID         ; * JMK92
                  DATA CARRIER.ID        ; * JMK92
                  DATA BILL.DATE'D2/'    ; * JMK92
                  DATA IN.OUT            ; * JMK92
                  DATA ORIG.ZIP          ; * JMK92
                  DATA DEST.ZIP          ; * JMK92
                  IF ORIG.ZIP=DEST.ZIP THEN        ; * JMK92
                     DATA ''             ; * JMK92
                  END                    ; * JMK92
                  NVAL=DCOUNT(CLASSES,@VM)         ; * JMK92
                  FOR VAL = 1 TO NVAL    ; * JMK92
                     IF CLASSES<1,VAL>='' OR WEIGHTS<1,VAL>='' ELSE    ; * JMK92
                        DATA CLASSES<1,VAL>        ; * JMK92
                        DATA WEIGHTS<1,VAL>        ; * JMK92
                     END                 ; * JMK92
                  NEXT VAL               ; * JMK92
                  DATA ''                ; * JMK92 - FINISH CLASSES AND GO TO MISC CODES
                  EXECUTE 'RATER'        ; * JMK92
               END                       ; * JMK92
               GOSUB 8100                ; * Display screen
               PRO.REC=OLD.PRO.REC
               GOSUB 8300
               GOSUB 8200
            END
         END

320: ***
         VERSION = FIELD(PRO.ID,'*',3)
         DISP = FIELD(PRO.ID,'*',2):' Version ':VERSION
         CRT @(5,6):DISP
         CUST.AMT = OLD.PRO.REC<13>
         CHECK.NUM = FIELD(OLD.PRO.REC<14>,'*',1)
         BANK.ID=FIELD(OLD.PRO.REC<14>,'*',2)
         CHECK.DATE = OLD.PRO.REC<15>
         PROC.DATE = OLD.PRO.REC<37>
         IF CHANGE.FLAG AND NOT.PROCESSED AND (PROC.DATE # '') THEN
            CALL ELINE('Attempt to duplicate bill disallowed')
            CC+=1 ; GOSUB PRINT.CC
            GOTO 200
         END
         IF CHANGE.FLAG AND NOT(SU.FLAG) AND PROC.DATE # '' THEN
*df            CALL ELINE('Only Super User can change a bill that has been processed')
*df            CC+=1 ; GOSUB PRINT.CC
            CHANGE.FLAG=0
         END
         BANK.ID = OLD.PRO.REC<40>
         FB.PAY.ID=CLIENT.ID:"*":PRO.ID
         READ DPAY FROM F.PAY,FB.PAY.ID THEN
            PAY.METHOD='Check'           ; * JMK160
            IF CARRIER.REC<102>='A' THEN           ; * JMK160
               PAY.METHOD='ACH'          ; * JMK160
            END                          ; * JMK160
*           CALL ELINE("Bill Selected for Payment! No Updates Allowed!")         ; * JMK160
            CALL ELINE("Bill Scheduled for Payment on ":DPAY<134>'D2/':" via ":PAY.METHOD:"! No Updates Allowed!")       ; * JMK160
         END ELSE DPAY=''
         OK.TO.EDIT=1
         IF DPAY#'' THEN OK.TO.EDIT=0
         IF CHECK.NUM # '' THEN
*DF         IF BANK.ID='V' AND USER='DEBBIE' ELSE
            IF BANK.ID='V' OR CHECK.NUM='999999' ELSE
               OK.TO.EDIT=0
            END
         END
         LINE1=''
         LINE2=''
         IF NOT(OK.TO.EDIT) THEN

*---- Select options for Pro already on file

            CHECK.ID = CHECK.NUM:'*':BANK.ID
            MATREAD CHECK.REC FROM F.CHECKS, CHECK.ID ELSE
               MAT CHECK.REC = ''
            END
            CHECK.AMT = FCK.AMT
            IF CLIENT.ID = '00000' THEN
               CHECK.AMT = CUST.AMT
               PROC.DATE = CHECK.DATE
            END
            PRO.REC = OLD.PRO.REC
            GOSUB 8100                   ; * Display screen
            GOSUB 8300                   ; * Assign data
            GOSUB 8200                   ; * Display data
            IF CL.BANK = 'V' OR CL.BANK='N' THEN
               LINE1 = BELL:'Vouch ':CHECK.DATE'D2/':' Vouch #':CHECK.NUM
               LINE2 = 'Client amt ':CUST.AMT'R26,':' Vouch amt '
               LINE2 := CHECK.AMT'R26,':' Processed ':PROC.DATE'D2/':' '
            END ELSE
               LINE1 = BELL:'Paid ':CHECK.DATE'D2/':' Check #':CHECK.NUM
               LINE2 = 'Client amt ':CUST.AMT'R26,':' Check amt '
               LINE2 := CHECK.AMT'R26,':' Processed ':PROC.DATE'D2/':' '
            END
            IF CLIENT.ID = '00000' THEN
               LINE1 := ' Load number ':OLD.PRO.REC<16>
            END
            IF CLIENT.ID = '00000' THEN
               PRO.REC = OLD.PRO.REC
               GOSUB 8300                ; * Assign data
               COL = LEN(LINE2)
               CRT @(COL,22):
               INPUT ACK,1
               CRT @(0,21):@(-3)
               QI = 'I'
               GOSUB 8200                ; * Display data
               GOSUB 8250
               CRT @(0,21):@(-3)
               GOSUB 8100                ; * Display screen
               GOTO 300                  ; * ENTER PRO
            END
         END ELSE
*          Processed but Not Paid
**********************************************************************
*  Display Payment History Here
*
            IF CL.LAST.CHECKS#'' AND OLD.PRO.REC<39>#'R' AND CL.BANK # 'V' AND CL.BANK # 'N' AND PROC.DATE # '' THEN
               CRT @(5,6):FIELD(PRO.ID,'*',2):' Version ':VERSION : @(-4)        ; * NPR034
               CRT @(37,6):"Date Last Check Received        :"
               CRT @(71,6):CL.LAST.CHECKS<1,1>'D2/'
               CRT @(37,7):"Paying for Bills Processed      :"
               CRT @(71,7):CL.LAST.PROC.DATES<1,1>'D2/'
               NUM.OF.CHECK.DATES=DCOUNT(CL.LAST.CHECKS<1>,@VM)
               IF NUM.OF.CHECK.DATES > 8 THEN NUM.OF.CHECK.DATES = 8
*                                         Only get the latest 8 items
               SUM.OF.DATES=0
               FOR XX = 1 TO NUM.OF.CHECK.DATES
                  SUM.OF.DATES = SUM.OF.DATES + CL.LAST.CHECKS<1,XX> - CL.LAST.PROC.DATES<1,XX>
               NEXT XX
               AVG.DAYS = SUM.OF.DATES/NUM.OF.CHECK.DATES
               AVG.DAYS = AVG.DAYS + .99           ; * Round up
               AVG.DAYS = AVG.DAYS'R0'
               IF CLIENT.ID='00932' THEN AVG.DAYS=21
               EST.DATE.OF.CHECK=PROC.DATE+AVG.DAYS
               IF EST.DATE.OF.CHECK LE DATE()+7 THEN EST.DATE.OF.CHECK = DATE()+7
               CRT @(37,9):"Freight Bill Processed on       :"
               CRT @(71,9):PROC.DATE'D2/'
               CRT @(37,10):NUM.OF.CHECK.DATES:" CHECK Average Time to Receive"
               CRT @(69,10):": ":AVG.DAYS'R#3':" Days"
               CRT @(37,11):"Estimated Date of check         :"
               CRT @(71,11):EST.DATE.OF.CHECK'D2/'
            END
            IF CL.BANK = 'V' OR CL.BANK = 'N' THEN
               IF PROC.DATE='' THEN
                  LINE2 = 'Pro ':PRO.ID:' has not been processed'
               END ELSE
                  LINE2 = 'Voucher for Pro ':PRO.ID:' processed on ':PROC.DATE'D2/'
               END
            END ELSE
               IF PROC.DATE='' THEN
                  LINE2 = 'Pro ':PRO.ID:' has not been processed'
               END ELSE
                  LINE2 = 'Pro ':PRO.ID:' processed on ':PROC.DATE'D2/'
               END
            END
            LINE2 := '. Enter option please. '

         END
         IF USER.TYPE='A' THEN
            IF OLD.PRO.REC<39>='' OR OLD.PRO.REC<39>='A' THEN
               CALL ELINE('Pro ':PRO.ID:' has not been verified')
               GOTO 300
            END
         END
         IF CHANGE.FLAG THEN
            CRT @(5,6):DISP
            PRO.LEN = LEN(PRO)
            GOTO 390
         END
         CRT @(0,21):LINE1:
         CRT @(0,22):LINE2:

         IF REJECT.FLAG='R' THEN
            GOSUB SPILL.REJECT.GUTS
         END
         HELP=''
         IF PROC.DATE# '' AND NOT(REJECT.FLAG) THEN
            HELP = '1=BD 2=AD '
         END
         HELP=HELP:'3=[I]nq 4=[P]st Dup 5=Cr [L]tr '
         IF OLD.PRO.REC<88>#'' THEN
            HELP=HELP:'6=EDI '
         END
         HELP=HELP:'7=Vw [R]ej '
         IF (PROC.DATE = '' OR SU.FLAG) THEN
            IF REJECT.FLAG='R' THEN
               HELP=HELP:'8=[A]pr '
            END
            HELP=HELP:'9=[D]el 0=[C]hg'
         END
         IF CLIENT.ID = '00000' THEN
            HELP='[X]=Back [EX]=Exit or 3=[I]nquire'
            IF REJECT.FLAG='R' THEN
               HELP=HELP:' 7=Vw [R]ej 9=[D]el'
            END
         END
*
         GOSUB CHECK.FOR.ADJ             ; * NPR06
         IF ADJ.ID.ARRAY NE "" THEN      ; * NPR06
            HELP=HELP:' 10=Adj [ADJ]ust'           ; * NPR06
         END                             ; * NPR06
*
         GOSUB CHECK.FOR.ADD.NOTES       ; * NPR12

* NPR99         HELP=HELP:REV.ON:' [N]ote':REV.OFF             ; * NPR12
         HELP=HELP : ' [N]ote'           ; * NPR99
         IF ADD.NOTE.REC NE "" THEN      ; * NPR99
            CRT @(60,21):REV.ON:'See Notes..':REV.OFF        ; * NPR99
         END
*
         IF PROC.DATE NE '' AND REJECT.FLAG='R' AND USER.TYPE='A' THEN           ; * NPR14
            HELP=HELP:' [EP]ay '         ; * NPR14
         END                             ; * NPR14
*
*
*DF         IF USER.TYPE='A' AND OLD.PRO.REC<37>='' AND REJECT.FLAG#'R' AND(CLIENT.ID='01290' OR CLIENT.ID='01313' OR CLIENT.ID='01309' OR CLIENT.ID='01316' OR CLIENT.ID='01339' OR CLIENT.ID='01333' OR CLIENT.ID='01320' OR CLIENT.ID='01322') THEN
*DF            GOSUB 8100
*DF            OLD.PRO.ID = PRO.ID
*DF            PRO.REC = OLD.PRO.REC
*DF            PRO.LEN = LEN(PRO)
*DF            IF PRO[PRO.LEN-1,2] = 'BD' THEN
*DF               BAL.DUE = 1
*DF            END ELSE
*DF               BAL.DUE = 0
*DF            END
*DF            CHANGE.FLAG = 1
*DF            GOSUB 8300
*DF            GOSUB 8200
*DF            OLD.CLASS=OLD.PRO.REC<74>
*DF            OLD.INV=OLD.PRO.REC<94>
*DF            OLD.BOL=OLD.PRO.REC<16>
*DF            OLD.BOL.DIST=OLD.PRO.REC<205>          ; * JMK84
*DF            GOTO 300
*DF         END
*
* Removed the above lines per email from John Esposito. DRF 07/26/06.
*
         IF USER.TYPE = 'A' AND OLD.PRO.REC<39>='2' THEN
            GOSUB 8100
            OLD.PRO.ID = PRO.ID
            PRO.REC = OLD.PRO.REC
            PRO.LEN = LEN(PRO)
            IF PRO[PRO.LEN-1,2] = 'BD' THEN
               BAL.DUE = 1
            END ELSE
               BAL.DUE = 0
            END
            CHANGE.FLAG = 1
            GOSUB 8300
            GOSUB 8200
            OLD.CLASS=OLD.PRO.REC<74>
            OLD.INV=OLD.PRO.REC<94>
            OLD.BOL=OLD.PRO.REC<16>
            OLD.BOL.DIST=OLD.PRO.REC<205>          ; * JMK84
            GOTO 4900
*DF            GOTO 300
         END
         IF (USER.TYPE='A' AND OLD.PRO.REC<39>='3') OR (USER.TYPE='A' AND OLD.PRO.REC<39>='4') THEN
            GOSUB 8100
            OLD.PRO.ID = PRO.ID
            PRO.REC = OLD.PRO.REC
            PRO.LEN = LEN(PRO)
            IF PRO[PRO.LEN-1,2] = 'BD' THEN
               BAL.DUE = 1
            END ELSE
               BAL.DUE = 0
            END
            CHANGE.FLAG = 1
            GOSUB 8300
            GOSUB 8200
            OLD.CLASS=OLD.PRO.REC<74>
            OLD.INV=OLD.PRO.REC<94>
            OLD.BOL=OLD.PRO.REC<16>
            OLD.BOL.DIST=OLD.PRO.REC<205>          ; * JMK84
*DFIF USER='DAVID' AND USER.TYPE='A' AND OLD.PRO.REC<39>='4' THEN GOTO 4900
*            NPR.LOOP.CNT += 1                           ;* NPR99
*            IF NPR.LOOP.CNT GT "1" THEN                 ;* NPR99
*               CALL ELINE('Check with Neil in IT')      ;* NPR99
*               STOP                                     ;* NPR99
*               CHANGE.FLAG = 0                          ;* NPR99
*               GOTO 100                                 ;* NPR99
*            END                                         ;* NPR99
            GOTO 300
         END
         IF CLIENT.ID[1,2]#'99' THEN     ; * JMK140
            VIN=''                       ; * JMK140
            VOUT=''                      ; * JMK140
            VIN<1>=CLIENT.ID             ; * JMK140
            VIN<2>=PRO.ID                ; * JMK140
            VIN<3>=USER                  ; * JMK140
            VIN<4>=USER.DPT              ; * JMK140
            VIN<5>=DATE()                ; * JMK140
            VIN<6>=TIME()                ; * JMK140
            VIN<7>='1'                   ; * JMK140
            VIN<8>=PROG.NAME             ; * JMK140
            VIN<9>=PROG.DESC             ; * JMK140
            VIN<10>=PACK.NAME            ; * JMK140
            VIN<11>=CO.NAME              ; * JMK140
            CALL UPD.FB.BILLS.ACCESS(VIN,VOUT,CLIENT.ITM,CARRIER.REC,OLD.PRO.REC,F.ACCESS,F.TABLES)  ; * JMK140
         END                             ; * JMK140
         COL = LEN(LINE2)                ; * NPR99
         COL = 77                        ; * NPR99
         IF LEN(HELP) GT 77 THEN HELP = HELP[1,77]           ; * NPR99
*NPR99         CALL GEN.IN(COL,22,'--','',Q,0,2,'','',2,-2,22,0,QI,HELP,0,23)
         CALL GEN.IN(COL,22,'--','',Q,0,2,'','',2,-2,22,0,QI,HELP,0,22)
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC
         CRT @(0,21):@(-3):
         QI = OCONV(QI,'MCU')

         BEGIN CASE
            CASE QI = 'X' OR QI = ''
               GOTO 300                  ; * ENTER PRO

            CASE QI = 'EX'
               STOP

*
* Make sure the bill has been processed.
*
            CASE (QI='AD' OR QI='BD' OR QI='1' OR QI='2') AND PROC.DATE#'' AND NOT (REJECT.FLAG)     ; *1-Balance Due  2-Additional Due
               CHK.OLD.PRO=''            ; *** Dont look for any more old styles
               VERSION = 0
               PRO.REC = OLD.PRO.REC
               PRO.REC<6>=''
               PRO.REC<7>=''
               PRO.REC<8>=''
               FOR X = 10 TO 15
                  PRO.REC<X>=''
               NEXT X
               CHECK.DATE=''
               FOR X = 34 TO 37
                  PRO.REC<X>=''
               NEXT X
               PRO.REC<45>=''
               FOR X = 51 TO 52
                  PRO.REC<X>=''
               NEXT X
               PRO.REC<63>=0             ; * Don't Bring Misroute Forward
               PRO.REC<68>='4'
               FOR X = 56 TO 66
                  PRO.REC<X>=''
               NEXT X
* Don't put reject information forward
               FOR X = 69 TO 83
                  PRO.REC<X>=''
               NEXT X
* Don't put class and weight information forward
               FOR X = 143 TO 147
                  PRO.REC<X>=''
               NEXT X
* Don't put LCC information forward
               FOR X = 129 TO 132
                  PRO.REC<X>=''
               NEXT X
* Don't put detail information forward ; * JMK18
               FOR X = 151 TO 164        ; * JMK18
                  PRO.REC<X>=''          ; * JMK18
               NEXT X                    ; * JMK18
* Don't put new FB info forward ; * JMK63
               NATT=DCOUNT(PRO.REC,@AM)  ; * JMK63
*              FOR X = 165 TO NATT       ; * JMK63 ; * JMK68
               FOR X = 165 TO 182        ; * JMK63 ; * JMK68
                  PRO.REC<X>=''          ; * JMK63
               NEXT X                    ; * JMK63
               FOR X = 189 TO NATT       ; * JMK68
                  PRO.REC<X>=''          ; * JMK68
               NEXT X                    ; * JMK68
               IF CLIENT.ID='00574' THEN
                  NUM.OF.ITEMS=DCOUNT(PRO.REC<140>,@VM)
                  FOR XX = 1 TO NUM.OF.ITEMS
                     PRO.REC<140,XX>=0
                  NEXT XX
               END
               IF QI='AD' OR QI='2' THEN
                  PRO.REC<94>=''
                  OLD.CLASS=''
               END
               VC.ID=PRO.REC<17>
               GOSUB 8100                ; * Display screen
               GOSUB 8300                ; * Assign data
               GOSUB 8200                ; * Display data
               IF (QI='1' OR QI='BD') & (CLIENT.ID='00000' OR CLIENT.ID='00642') THEN
                  CALL ELINE('No Way Jose!  No BD for AFS... Changed to AD')
                  CC+=1 ; GOSUB PRINT.CC
                  QI=2
               END
               IF QI='1' OR QI='BD' THEN
                  PRO = PRO:'BD'
               END ELSE
                  PRO = PRO:'AD'
               END
               CHECK.NUM = ''
               CHECK.AMT = ''
               CRT @(5,6):PRO'L#20'
               GOTO 310

            CASE QI = 'I' OR QI='3'
               GOSUB 8100                ; * JR
               PRO.REC = OLD.PRO.REC
               GOSUB 8300                ; * Assign data
               GOSUB 8200                ; * Display data
               GOSUB 8250
               GOSUB 8100                ; * Display screen
               GOTO 300                  ; * ENTER PRO

            CASE QI = 'R' OR QI = '7'
* ; * JMK46
* Check carrier against list in REJ.CTRL.REC if there is one ; * JMK46
* ; * JMK46
               IF REJ.CTRL.REC#'' THEN   ; * JMK46
                  LOCATE CARRIER.ID IN REJ.CTRL.REC<2> BY 'AL' SETTING REJ.CTRL.POS THEN   ; * JMK46
                     IF REJ.CTRL.REC<4,REJ.CTRL.POS>='' THEN           ; * Open end date ; * JMK46
                        IF DATE() GE REJ.CTRL.REC<3,REJ.CTRL.POS> THEN           ; * JMK46
                           CALL ELINE('Excluded carrier ':CARRIER.ID:' cannot be rejected at this time.')      ; * JMK46
                           GOTO 320      ; * JMK46
                        END              ; * JMK46
                     END ELSE            ; * JMK46
                        IF (DATE() GE REJ.CTRL.REC<3,REJ.CTRL.POS>) AND (DATE() LE REJ.CTRL.REC<4,REJ.CTRL.POS>) THEN    ; * JMK46
                           CALL ELINE('Excluded carrier ':CARRIER.ID:' cannot be rejected at this time.')      ; * JMK46
                           GOTO 320      ; * JMK46
                        END              ; * JMK46
                     END                 ; * JMK46
                  END                    ; * JMK46
               END                       ; * JMK46
               IF CLIENT.ID = '00574' AND OLD.PRO.REC<39>='O' THEN
                  CALL ELINE('Error Bill has a status of O. See Owen or David to reject this bill')
                  CC+=1 ; GOSUB PRINT.CC
                  IF USER#'DAVID' THEN
                     GOTO 320
                  END
               END
               IF CLIENT.ID = '01292' AND PRO.REC<9>='' THEN           ; * JMK95
                  CALL ELINE('Cannot reject this bill without a division code.')           ; * JMK95
                  CC+=1 ; GOSUB PRINT.CC           ; * JMK95
                  GOTO 320               ; * JMK95
               END                       ; * JMK95
               IF OK.TO.EDIT THEN
                  IF USER.TYPE#'A' THEN
                     IF NOT(FRT.FLAG) THEN
                        IF OLD.PRO.REC<53>#'' AND OLD.PRO.REC<54>#'' THEN
                           NUM.OF.ITMS=DCOUNT(OLD.PRO.REC<84>,@VM)
                           READV FP.TYPE FROM F.BCTRL,OLD.PRO.REC<84,NUM.OF.ITMS>,14 ELSE FP.TYPE=''
                           IF FP.TYPE='A' THEN
*DF                      CALL ELINE('Error Rejections must be updated by audit.')
*DF                      CC+=1; GOSUB PRINT.CC
*DF                      GOTO 320
                              OK.TO.EDIT=0
                           END
                        END ELSE
                           IF USER='SMICHALIK' AND FP.CO#'00002' THEN
                              OK.TO.EDIT=0
                           END
                        END
                     END
                  END
                  IF (PROC.DATE # '') AND OLD.PRO.REC<66>#'N' THEN
*DF                CALL ELINE('ERROR! This bill has been processed!')
*DF                CC+=1; GOSUB PRINT.CC
*DF                GOTO 300
                     OK.TO.EDIT=0
                  END
                  IF OLD.PRO.REC<88>#'' AND OLD.PRO.REC<39>='V' THEN OLD.PRO.REC<39>=''
               END

               GOSUB INIT.REJECT.INFO
               PRO.REC = OLD.PRO.REC
               GOSUB 8300                ; * ASSIGN DATA
               RVIN='' ; RVOUT=''
               IF NOT(OK.TO.EDIT) THEN
                  RVIN<1>='V'
               END ELSE
                  RVIN<1> = ''
               END
               RVIN<2> = CARRIER.ID
               RVIN<3> = CLIENT.ID
               RVIN<4> = FIELD(PRO.ID,'*',2)
               RVIN<5> = REJECT.FLAG
               RVIN<6> = BILL.DATE
               RVIN<7> = ACTUAL.CHG      ; * ACTUAL.CHG
               RVIN<8> = REJ.TYPE
               T.REJECT.FLAG = REJECT.FLAG         ; * STORE TO CHECK FOR CHANGES...
               CALL FB.2.1.REJECT.KED(RVIN, RVOUT, REJECT.REASONS, MAILING.ADDR)
               MULTI.PRO.ID = RVOUT<4>
               NUM.MULTI.PROS = DCOUNT(MULTI.PRO.ID<1>,@VM)
               MULTI.PRO.DATE = RVOUT<6>
               MULTI.PRO.CHG = RVOUT<7>
               MULTI.PRO.REJ = RVOUT<8>
               IF OK.TO.EDIT THEN
                  REJECT.FLAG = RVOUT<2>
                  BILL.DATE = MULTI.PRO.DATE<1,1>
*DF               CARRIER.CHG = MULTI.PRO.CHG<1,1>
                  IF CARRIER.CHG+0 = 0 THEN CARRIER.CHG=MULTI.PRO.CHG<1,1>
                  ACTUAL.CHG = MULTI.PRO.CHG<1,1>
                  REJ.TYPE = MULTI.PRO.REJ<1,1>
               END
               GOSUB 8100                ; * Display screen
               GOSUB 8200                ; * Display data
               IF NOT(OK.TO.EDIT) THEN
                  GOTO 320
               END ELSE
                  BEGIN CASE
                     CASE RVOUT<1>='EX'
                        STOP
                     CASE RVOUT<1>='X'
                        GOTO 320
                  END CASE
                  REJECTION.ALTERED = RVOUT<3>
                  IF REJECT.FLAG='' AND T.REJECT.FLAG#'' THEN
                     IF DATE() LE CLIENT.REC(82) THEN
                        BILL.DATE=CLIENT.REC(82)+1
                     END ELSE
                        BILL.DATE=DATE()
                     END
                     MULTI.PRO.DATE<1,1>=BILL.DATE
                     GOTO 390
                  END
                  IF REJECTION.ALTERED THEN GOTO 4900
                  GOTO 310
               END

            CASE (QI = 'D' OR QI = '9') AND (PROC.DATE = '' OR SU.FLAG)
               IF CLIENT.ID = '00574' AND OLD.PRO.REC<39>='O' THEN
                  CALL ELINE('Error Bill has a status of O. See Owen or David to delete this bill')
                  CC+=1 ; GOSUB PRINT.CC
                  IF USER#'DAVID' THEN
                     GOTO 320
                  END
               END
               IF USER.TYPE#'A' THEN
                  IF NOT(FRT.FLAG) THEN
                     IF OLD.PRO.REC<53>#'' AND OLD.PRO.REC<54>#'' THEN
                        NUM.OF.ITMS=DCOUNT(OLD.PRO.REC<84>,@VM)
                        READV FP.TYPE FROM F.BCTRL,OLD.PRO.REC<84,NUM.OF.ITMS>,14 ELSE FP.TYPE=''
                        IF FP.TYPE='A' THEN
                           CALL ELINE('Error Bill has been update by audit. See Freight Mngr to delete this bill')
                           CC+=1 ; GOSUB PRINT.CC
                           GOTO 320
                        END
                     END
                  END ELSE
                     IF USER='SMICHALIK' AND FP.CO#'00002' THEN
                        CALL ELINE('Error Bill has been update by audit. See Myra or Mary to delete this bill')
                        CC+=1 ; GOSUB PRINT.CC
                        GOTO 320
                     END
                  END
               END
               TEST.NAME=OLD.PRO.REC<53>
*DF            IF OLD.PRO.REC<53>[1,4]='EDI:' THEN TEST.NAME=OLD.PRO.REC<53>[5,99]
               IF OLD.PRO.REC<53>[1,4]='EDI:' THEN
                  CALL ELINE('Error EDI bills cannot be deleted')
                  CC+=1 ; GOSUB PRINT.CC
                  GOTO 320
               END
               IF NOT(SU.FLAG OR FRT.FLAG) AND USER # TEST.NAME THEN
                  IF CLIENT.ID#'98888' THEN        ; * JMK75
                     CALL ELINE('Error! Only ':TEST.NAME:' can Delete this bill!')
                     CC+=1 ; GOSUB PRINT.CC
                     GOTO 320
                  END                    ; * JMK75
               END ELSE
                  IF FRT.FLAG AND CLIENT.ID#'99998' THEN
                     IF USER='SMICHALIK' AND FP.CO#'00002' THEN
                        CALL ELINE('Error! Only ':TEST.NAME:' can Delete this bill!')
                        CC+=1 ; GOSUB PRINT.CC
                        GOTO 320
                     END
                  END
               END
               IF OLD.PRO.REC<39>='R' THEN
                  CALL ELINE('You can move a rejected bill from one client to another. 1-2-18')
               END
               HELP='[DELETE] to complete the deletion  [EX]it [N]o'
               LN = 'Type the word "DELETE" to delete this Pro! ------'
               CALL GEN.IN(0,22,LN,'',Q,0,6,'','',6,-6,22,1,QI,HELP,0,23)
               CC+=LEN(QI)+1 ; GOSUB PRINT.CC
               QI = OCONV(QI,'MCU')
               BEGIN CASE
                  CASE QI = '' OR QI = 'N'
                     GOTO 300
                  CASE QI = 'EX'
                     STOP
                  CASE QI = 'DELETE' OR (USER = 'MYRA' AND QI = 'D')
*                    IF PROC.DATE#'' THEN ; * JMK127
                     IF OLD.PRO.REC<37>#'' THEN    ; * JMK127
                        CALL ELINE('Error! Bill has already been processed you cannot delete.')
                        CC+=1 ; GOSUB PRINT.CC
                        LINE.OUT=''
                        LINE.OUT<1,10>=123
                        MVIN=''
                        SUBJ='Bill attempted to be deleted with a process date'
                        TEXT=USER:' attempted to delete a bill with a process date '
*                       TEXT<1,-1>='of ':OCONV(PROC.DATE,'D2/') ; * JMK127
                        TEXT<1,-1>='of ':OCONV(OLD.PRO.REC<37>,'D2/')  ; * JMK127
                        TEXT<1,-1>='on ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
                        TEXT<1,-1>='Client ':CLIENT.ID:' ':CLIENT.NAME:' Carrier ':CARRIER.ID:' ':CARRIER.NAME:' Pro ':PRO.ID
                        MVIN=''
                        MVIN<1>='Owen@afs.net':@VM:'KGilbert@afs.net'
                        MVIN<2>='David@afs.net'
                        MVIN<4>='AFS'
                        MVIN<5>=SUBJ
                        MVIN<6>=TEXT
                        CALL SENDMAIL(MVIN,MVOUT)
                        GOSUB 8100
                        GOTO 300
                     END
*                    WRITE PRO.ID:@FM:USER:@FM:PROC.DATE:@FM:OLD.PRO.REC<8> ON F.DEL.BILLS, DATE():'*':TIME() ; * JMK127
                     WRITE PRO.ID:@FM:USER:@FM:OLD.PRO.REC<37>:@FM:OLD.PRO.REC<8> ON F.DEL.BILLS, DATE():'*':TIME()      ; * JMK127
                     DELETE F.BILLS,PRO.ID
                     DELETE F.HIST,PRO.ID
                     DELETE F.CRX,PRO.ID
                     DELETE F.OPEN,CLIENT.ID:'*':PRO.ID
                     DELETE F.PRE.OPEN,CLIENT.ID:'*':PRO.ID  ; *NPR01
                     IF OLD.PRO.REC<94>#'' THEN
                        READ DINV.XREF FROM F.INV.XREF,OLD.PRO.REC<94> THEN
                           LOCATE OLD.PRO.ID IN DINV.XREF BY 'AR' SETTING INV.POS THEN
                              DEL DINV.XREF<INV.POS>
                              IF DINV.XREF='' THEN
                                 DELETE F.INV.XREF,OLD.PRO.REC<94>
                              END ELSE
                                 WRITE DINV.XREF ON F.INV.XREF,OLD.PRO.REC<94>
                              END
                           END
                        END
                     END
                     IF CLIENT.ID='00949' THEN
                        IF TL.CAR THEN
                           CL.BOL.CRX.FLAG = 'Y'
                        END ELSE
                           CL.BOL.CRX.FLAG = 'N'
                        END
                     END
                     IF CL.BOL.CRX.FLAG = 'Y' THEN
                        DELETE.FLAG=1
                        GOSUB SET.BOL.CRX
                        DELETE.FLAG=0
                     END
                     PRO = FIELD(PRO.ID,'*',2)
                     START = LEN(PRO)-1
                     TEMP = LEN(PRO)-2
                     IF PRO[START,2] = 'CM' THEN
                        OLD.PRO.ID = FIELD(PRO.ID,'*',1):'*':PRO[1,TEMP]
                        OLD.PRO.ID := '*':FIELD(PRO.ID,'*',3)
                     END
                     GOSUB 8100          ; * JR
                     GOTO 300            ; * ENTER PRO
               END CASE


            CASE CLIENT.ID = '00000'
               CALL ELINE('Invalid entry.')
               CC+=1 ; GOSUB PRINT.CC
               GOTO 320

            CASE QI = 'P' OR QI = '4'    ; * POST DUPLICATE
               IF PRO.REC<37>='' THEN
                  CALL ELINE('Pro ':PRO:' must be processed before you can post a duplicate')
                  GOTO 300
               END
               IF PRO.REC<9>#'' THEN
                  READ TEMP.DIV.REC FROM F.DIV,PRO.REC<9> THEN
                     IF TEMP.DIV.REC<7>='I' THEN
                        CALL ELINE('Pro ':PRO:' has an inactive division you cannot post a duplicate')
                        GOTO 300
                     END
                  END ELSE
                     CALL ELINE('Pro ':PRO:' has an invalide division you cannot post a duplicate')
                     GOTO 300
                  END
               END
               PRO.REC = OLD.PRO.REC

325:
               VERSION = VERSION+1
               PRO.ID = CARRIER.ID:'*':PRO:'*':VERSION
               READ DUMMY FROM F.HIST,PRO.ID THEN GOTO 325
               GOSUB 8300                ; * Assign data
               GOSUB 8200                ; * Display data
               GOTO 4900                 ; * UPDATE ACTION

            CASE QI = 'L' OR QI = '5'
               GOSUB PROCESS.INQUIRE
               GOTO 300                  ; * ENTER PRO

            CASE QI = 6 AND OLD.PRO.REC<88>#''
               EDI.VIN=''
               EDI.VIN<1>=CLIENT.ID
               EDI.VIN<2>=CARRIER.ID
               EDI.VIN<3>=PRO
               EDI.VOUT=''
               CALL FB.2.1.EDI(EDI.VIN,EDI.VOUT,OLD.PRO.REC)
               GOSUB 8100                ; * Display screen
               GOSUB 8200                ; * Display data
               GOTO 320

*
* Make sure the bill has not been processed.
*
*           CASE (QI='A' or QI='8') AND (PROC.DATE = '' OR SU.FLAG) ; * JMK121
            CASE (QI='A' or QI='8') AND (PROC.DATE = '' OR SU.FLAG) AND REJECT.FLAG='R'    ; * JMK121
               IF (PROC.DATE # '') THEN
                  CALL ELINE('WARNING! This bill has been processed!')
                  CC+=1 ; GOSUB PRINT.CC
               END
               IF (REJ.TYPE = 'N') THEN
                  CALL ELINE("WARNING! This bill WAS marked NEVER PAY. NOW it's marked PAY EVENTUALLY!")
                  CC+=1 ; GOSUB PRINT.CC
               END
               IF USER.TYPE='A' AND PRO[LEN(PRO)-1,2]#'BD' AND PRO[LEN(PRO)-1,2]#'AD' THEN
                  READV FP.TYPE FROM F.BCTRL,OLD.PRO.REC<53>,14 ELSE FP.TYPE=''
                  IF FP.TYPE='A' THEN
                     CALL ELINE('Error Bill must be go through freight payment')
                     CC+=1 ; GOSUB PRINT.CC
                     GOTO 320
                  END
                  IF FP.TYPE='F' AND OLD.PRO.REC<54>='' THEN
                     CALL ELINE('Error Bill must be approved by freight payment so that it can be verified.')
                     CC+=1 ; GOSUB PRINT.CC
                     GOTO 320
                  END
               END
               IF USER.TYPE#'A' THEN
                  IF OLD.PRO.REC<53>#'' AND OLD.PRO.REC<54>#'' THEN
                     NUM.OF.ITMS=DCOUNT(OLD.PRO.REC<84>,@VM)
                     READV FP.TYPE FROM F.BCTRL,OLD.PRO.REC<84,NUM.OF.ITMS>,14 ELSE FP.TYPE=''
                     IF FP.TYPE='A' THEN
                        IF NOT(FRT.FLAG) THEN
                           CALL ELINE('Error Bill must be approved by audit.')
                           CC+=1 ; GOSUB PRINT.CC
                           GOTO 320
                        END ELSE
                           IF USER='SMICHALIK' AND FP.CO#'00002' THEN
                              CALL ELINE('Error Bill must be approved by audit.')
                              CC+=1 ; GOSUB PRINT.CC
                              GOTO 320
                           END
                        END
                     END
                  END
               END
               PRO.REC = OLD.PRO.REC
               GOSUB 8300
               IF BILL.STATUS='' THEN BILL.STATUS=4
               IF USER.TYPE='A' THEN
                  PRO.REC<39>=BILL.STATUS
                  OLD.PRO.REC<39>=BILL.STATUS
               END
               REJECT.FLAG=''
               REJ.TYPE='E'
               REJECTION.ALTERED=1
               GOSUB 8100                ; * Redraw Screen Fields
               GOSUB 8200                ; * Redraw Screen Data
*DF               GOTO 390
*DF               GOTO 365
               PRO.LEN = LEN(PRO)
               IF PRO[PRO.LEN-1,2] = 'BD' THEN
                  BAL.DUE = 1
               END ELSE
                  BAL.DUE = 0
               END
               GOTO 365
            CASE (QI = 'C' OR QI = '0') AND (PROC.DATE = '' OR SU.FLAG)
               IF CLIENT.ID = '00574' AND OLD.PRO.REC<39>='O' THEN
*DF               IF CLIENT.ID = '00574' AND OLD.PRO.REC<39>='O' AND USER#'LCARDWELL' AND USER#'MWADE' THEN
                  CALL ELINE('Error Bill has a status of O. See Owen or David to change this bill')
                  CC+=1 ; GOSUB PRINT.CC
                  IF USER#'DAVID' THEN
                     GOTO 320
                  END
               END
               IF SU.FLAG THEN
*DFIF DATE()=12716 AND (USER='MYRA' OR USER='DAVID') THEN OK.TO.EDIT=1; * MYRA SPECIAL
                  IF NOT(OK.TO.EDIT) THEN
                     CALL ELINE('Cannot edit this bill it has been paid')
                     GOTO 320
                  END
               END ELSE
                  IF USER.TYPE#'A' THEN
                     IF NOT(FRT.FLAG) THEN
                        IF OLD.PRO.REC<89>#'' AND OLD.PRO.REC<89>#USER THEN
                           CALL ELINE('Error! Only ':OLD.PRO.REC<89>:' can Change this bill!')
                           CC+=1 ; GOSUB PRINT.CC
                           GOTO 320
                        END
                        TEST.NAME=OLD.PRO.REC<53>
                        IF OLD.PRO.REC<53>[1,4]='EDI:' THEN TEST.NAME=OLD.PRO.REC<53>[5,99]
                        IF TEST.NAME#USER THEN
                           CALL ELINE('Error! Only ':TEST.NAME:' can Change this bill!')
                           CC+=1 ; GOSUB PRINT.CC
                           GOTO 320
                        END
                     END ELSE
                        IF USER='SMICHALIK' AND FP.CO#'00002' THEN
                           IF OLD.PRO.REC<89>#'' AND OLD.PRO.REC<89>#USER THEN
                              CALL ELINE('Error! Only ':OLD.PRO.REC<89>:' can Change this bill!')
                              CC+=1 ; GOSUB PRINT.CC
                              GOTO 320
                           END
                           TEST.NAME=OLD.PRO.REC<53>
                           IF OLD.PRO.REC<53>[1,4]='EDI:' THEN TEST.NAME=OLD.PRO.REC<53>[5,99]
                           IF TEST.NAME#USER THEN
                              CALL ELINE('Error! Only ':TEST.NAME:' can Change this bill!')
                              CC+=1 ; GOSUB PRINT.CC
                              GOTO 320
                           END
                        END
                     END
                  END
*DF              IF USER.TYPE='A' AND USER#'DAVID' THEN
                  IF USER.TYPE='A' THEN
*DF            IF (NOT(OLD.PRO.REC<39>='R') OR NOT(OLD.PRO.REC<39>='O')) AND NOT(SU.FLAG OR FRT.FLAG) AND USER # OLD.PRO.REC<53> AND NOT((USER.TYPE='A' AND OLD.PRO.REC<39>='2') OR (USER.TYPE='A' AND OLD.PRO.REC<39>='3') OR (USER.TYPE='A' AND OLD.PRO.REC<39>='4')) THEN
                     IF OLD.PRO.REC<39>#'R' AND OLD.PRO.REC<68>='1' AND OLD.PRO.REC<53>[1,11]#'EDI:AUTO - ' THEN
                        CALL ELINE('Error! Only ':OLD.PRO.REC<53>:' can Change this bill!')
                        CC+=1 ; GOSUB PRINT.CC
                        GOTO 320
                     END
                  END
               END
               NOT.PROCESSED = (PROC.DATE = '')
               OLD.PRO.ID = PRO.ID
               PRO.REC = OLD.PRO.REC
               PRO.LEN = LEN(PRO)
               IF PRO[PRO.LEN-1,2] = 'BD' THEN
                  BAL.DUE = 1
               END ELSE
                  BAL.DUE = 0
               END
               CHANGE.FLAG = 1
               GOSUB 8100                ; * JR
               GOSUB 8300                ; * Assign data
               GOSUB 8200                ; * Display data
*              IF CHANGE.FLAG THEN OLD.INV=OLD.PRO.REC<94> ; OLD.BOL=OLD.PRO.REC<16> ; OLD.CLASS=OLD.PRO.REC<74> ; Q=PRO ; QI=PRO ; * JMK84
               IF CHANGE.FLAG THEN       ; * JMK84
                  OLD.INV=OLD.PRO.REC<94>          ; * JMK84
                  OLD.BOL=OLD.PRO.REC<16>          ; * JMK84
                  OLD.BOL.DIST=OLD.PRO.REC<205>    ; * JMK84
                  OLD.CLASS=OLD.PRO.REC<74>        ; * JMK84
                  Q=PRO                  ; * JMK84
                  QI=PRO                 ; * JMK84
               END                       ; * JMK84
               IF PROC.DATE='' THEN
                  GOTO 300               ; *** Enter Pro (Can X-Back to Carrier)
               END
            CASE QI='BR'                 ; * JMK92
               PRO.REC = OLD.PRO.REC
               GOSUB 8300
               DATA 'Rate'               ; * JMK92
               DATA CLIENT.ID            ; * JMK92
               DATA CARRIER.ID           ; * JMK92
               DATA BILL.DATE'D2/'       ; * JMK92
               DATA IN.OUT               ; * JMK92
               DATA ORIG.ZIP             ; * JMK92
               DATA DEST.ZIP             ; * JMK92
               IF ORIG.ZIP=DEST.ZIP THEN           ; * JMK92
                  DATA ''                ; * JMK92
               END                       ; * JMK92
               NVAL=DCOUNT(CLASSES,@VM)  ; * JMK92
               FOR VAL = 1 TO NVAL       ; * JMK92
                  IF CLASSES<1,VAL>='' OR WEIGHTS<1,VAL>='' ELSE       ; * JMK92
                     DATA CLASSES<1,VAL>           ; * JMK92
                     DATA WEIGHTS<1,VAL>           ; * JMK92
                  END                    ; * JMK92
               NEXT VAL                  ; * JMK92
               DATA ''                   ; * JMK92 - FINISH CLASSES AND GO TO MISC CODES
               EXECUTE 'RATER'           ; * JMK92
               GOSUB 8100                ; * JR
               GOSUB 8300                ; * Assign data
               GOSUB 8200                ; * Display data
            CASE QI = 'ADJ' OR QI='10'   ; * NPR06
               N.ADJ = DCOUNT(ADJ.ID.ARRAY,@AM)    ; * NPR06
               FOR I.ADJ = 1 TO N.ADJ    ; * NPR06
                  ID.ADJ = ADJ.ID.ARRAY<I.ADJ>     ; * NPR06
                  IF N.ADJ GT 1 THEN     ; * NPR06
                     READ W.ADJ.REC FROM F.ADJUST.HIST, ID.ADJ ELSE W.ADJ.REC = ""         ; * NPR06
                  END                    ; * NPR06
*
                  GOSUB DISPLAY.ADJ.DATA           ; * Display data           ; * NPR06
               NEXT I.ADJ                ; * NPR06
               GOSUB 8100                ; * Display screen    ; * NPR06
               GOTO 300                  ; * ENTER PRO         ; * NPR06
            CASE QI = 'N' OR QI = "11"   ; * NPR12
               ID.NOTES = CLIENT.ID:"*":PRO.ID     ; * NPR12
               VIN = ID.NOTES ; IN.NOTE = ""       ; * NPR12
               CALL FB.CC.NOTES(IN.NOTE,VIN,VOUT)  ; * NPR12
               GOSUB 8100                ; * NPR12
               GOSUB 8300                ; * NPR12 ; * NPR99
               GOSUB 8200                ; * NPR12
               GOTO 320                  ; * NPR99
            CASE QI = "EP" AND REJECT.FLAG='R' AND USER.TYPE='A'       ; * NPR14
               CHANGED.TO.EVENTUAL.PAY = 1
               PRO.REC<66> = "E"         ; * NPR14
               OLD.PRO.REC<66> = "E"     ; * NPR14
               PRO.REC<37> = ""          ; * NPR14
               OLD.PRO.REC<37> = ""      ; * NPR14

               REJ.TYPE='E'
               GOSUB 8100                ; * Display screen   ; * NPR14
               GOSUB 8300                ; * Assign data      ; * NPR14
               GOSUB 8200                ; * Display data     ; * NPR14
               GOTO 320                  ; * NPR14
            CASE 1
               CALL ELINE('Invalid entry.')
               CC+=1 ; GOSUB PRINT.CC
               GOTO 320
         END CASE
      END ELSE
         IF CLIENT.ID[1,2]#'99' THEN     ; * JMK140
            VIN=''                       ; * JMK140
            VOUT=''                      ; * JMK140
            VIN<1>=CLIENT.ID             ; * JMK140
            VIN<2>=PRO.ID                ; * JMK140
            VIN<3>=USER                  ; * JMK140
            VIN<4>=USER.DPT              ; * JMK140
            VIN<5>=DATE()                ; * JMK140
            VIN<6>=TIME()                ; * JMK140
            VIN<7>='1'                   ; * JMK140
            VIN<8>=PROG.NAME             ; * JMK140
            VIN<9>=PROG.DESC             ; * JMK140
            VIN<10>=PACK.NAME            ; * JMK140
            VIN<11>=CO.NAME              ; * JMK140
            CALL UPD.FB.BILLS.ACCESS(VIN,VOUT,CLIENT.ITM,CARRIER.REC,PRO.REC,F.ACCESS,F.TABLES)      ; * JMK140
         END                             ; * JMK140
         PRO.LEN = LEN(PRO)
         IF PRO[PRO.LEN-1,2] = 'BD' THEN
            BAL.DUE = 1
         END ELSE
            BAL.DUE = 0
         END
         IF CARRIER.ID='00041' THEN      ; * JMK85
            DASH.O=0
            NO.DASH.O=0
            GOSUB GET.RELATED.BILLS      ; * JMK85
            IF RELATED.BILLS THEN        ; * JMK85
               GOSUB DISPLAY.RELATED.BILLS         ; * JMK85
* HELP = '[Return] ' ; * JMK85                                           ; * JCW07
* CALL GEN.IN(0,22,'--','',Q,0,2,'','',2,-2,22,0,QI,HELP,0,23) ; * JMK85 ; * JCW07
* CC+=LEN(QI)+1 ; GOSUB PRINT.CC ; * JMK85                               ; * JCW07
* CRT @(0,21):@(-3): ; * JMK85                                           ; * JCW07
* Q = OCONV(QI,'MCU')  ; * JMK85                                         ; * JCW07
               IF Q = 'EX' THEN STOP     ; * JMK85
               IF DASH.O=0 AND NO.DASH.O#0 THEN
                  LOOKUP.ONLY=1
                  LOOKUP.ONLY.REASON='There is version of this bill already on file.  Lookup Only'
                  PREV.PRO.LOOKUP.ONLY=1
               END
               GOSUB 8100                ; * Display screen ; * JMK85
               GOSUB 8200                ; * JMK85
*              GOTO 300                  ; * JMK85
            END
         END                             ; * JMK85
      END

*---- Check for duplicate pro posted to another client, display,
* and clear for another entry

      IF CLIENT.ID[1,2]='99' ELSE
*DF*DF IF USER='DAVID' THEN CALL ELINE('PRESS BREAK')
*DF         IF (CARRIER.ID='00562' OR CARRIER.ID='00014') AND LEN(PRO)=9 THEN
*DF            PRO.PRE='003':@VM:'006':@VM:'008':@VM:'040':@VM:'041'
*DF            NUM.TO.CHECK=DCOUNT(PRO.PRE,@VM)
*DF            FOR ZZ = 1 TO NUM.TO.CHECK
*DF               PRO.EXT=PRO.PRE<1,ZZ>
*DF               LOOK.ID='00562*':PRO.EXT:'-':PRO[2,7]:'*':0
*DF               READ DLOOK FROM F.CRX,LOOK.ID THEN
*DF                  PRO=PRO.EXT:'-':PRO[2,7]
*DF                  CARRIER.ID='00562'
*DF                  PRO.ID=CARRIER.ID:'*':PRO:'*':VERSION
*DF                  LOOKUP.ONLY=1
*DF                  LOOKUP.ONLY.REASON='This carrier is not Active.  Lookup Only.'
*DF                  PREV.PRO.LOOKUP.ONLY=1
*DF                  IF SU.FLAG THEN
*DF                     SU.FLAG=0
*DF                     CHANGE.FLAG=0
*DF                     PROG.NAME='FB.2.1.NW'         ; * JMK129
*DF*NPR08                     CALL AFS.SCR.REFRESH(PROG.NAME, PROG.DESC, PACK.NAME, CO.NAME,TIME.DATE, 1)     ; * JMK129
*DF                     CLR.SCR = 1 ; GOSUB DISP.SCREEN.HEADING           ; *NPR08
*DF                     GOTO 300
*DF                  END
*DF                  GOTO 310
*DF               END
*DF            NEXT ZZ
*DF         END
*
* Removed the above 25 lines we are no longer going to check Motor Cargo
* against a bill keyed in under UPS Freight. - DRF 10/23/08
*
*DF*DF IF USER='DAVID' THEN CALL ELINE('PRESS BREAK')
         IF CARRIER.ID='00017' AND LEN(PRO)=12 THEN
            LOOK.ID='00093*':PRO[1,10]:PRO[12,1]:'*':0
            READ DLOOK FROM F.CRX,LOOK.ID THEN
               CALL ELINE('PRO ':PRO:' is already on file under 00093 see your supervisor')
*DF                CARRIER.ID='00093'
*DF                PRO.ID=CARRIER.ID:'*':PRO:'*':VERSION
*DF                LOOKUP.ONLY=1
*DF                LOOKUP.ONLY.REASON='This carrier is not Active.  Lookup Only.'
*DF                PREV.PRO.LOOKUP.ONLY=1
*DF                IF SU.FLAG THEN
*DF                   SU.FLAG=0
*DF                   CHANGE.FLAG=0
*DF                   PROG.NAME='FB.2.1.NW'         ; * JMK129
*DF*NPR08                   CALL AFS.SCR.REFRESH(PROG.NAME, PROG.DESC, PACK.NAME, CO.NAME,TIME.DATE, 1)     ; * JMK129
*DF                   CLR.SCR = 1 ; GOSUB DISP.SCREEN.HEADING           ; *NPR08
*DF                   GOTO 300
*DF                END
               GOTO 300
            END
         END
         READ DUMMY FROM F.CRX,PRO.ID THEN
            IF DUMMY<2> <= XREF.CHECK.DATE THEN
*DF            IF DUMMY<2> > XREF.CHECK.DATE OR CARRIER.ID='00562' THEN   ; * JMK124
               HELP='Are you trying to enter a new pro [N]o or [Y]es'
               CALL GEN.IN(0,22,'New Pro? N ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
               QI=OCONV(QI,'MCU')
               BEGIN CASE
                  CASE QI='EX'
                     STOP
                  CASE QI='N' OR QI='' OR QI='X'
                     NULL
                  CASE QI='Y'
                     GOTO 315
               END CASE
            END
            PRO.REC = DUMMY
            PRO.REC<1>=DUMMY<2>          ; * Correct the Position of the Date
            PRO.REC<2>=''                ; * Correct the I/O Flag (Not on CRX File)
            DUM.CL=DUMMY<1>
*
* Assign the Data to PRO.REC then try to read the REAL File
*
            OPEN 'FB.BILLS.HIST,':DUM.CL TO F.DUMMY THEN
               READ PRO.REC FROM F.DUMMY,PRO.ID ELSE NULL
            END
            GOSUB 8100                   ; * Display screen
            GOSUB 8300                   ; * Assign data
            GOSUB 8200                   ; * Display data
            IF SU.FLAG AND CHANGE.FLAG ELSE
               IF DBCTRL<14>#'F' AND DBCTRL<14>#'A' THEN
                  WAIT='J'
               END ELSE
                  IF CARRIER.ID='02653' AND DUMMY<2> < DATE()-1460 AND DBCTRL<14>='F' THEN
                     CRT @(0,23):BELL:"[ENTER] to Con, [J]ump to client ":DUMMY<1>:", or [A]dd and remove old xref.:":
                  END ELSE
                     CRT @(0,23):BELL:"Press [ENTER] to Continue or [J]ump to client ":DUMMY<1>:".: ":
                  END
                  INPUT WAIT,1:
               END
               CC+=1 ; GOSUB PRINT.CC

               IF OCONV(WAIT,'MCU')='J' THEN
*DF               IF USER.TYPE#'A' THEN JUMP.TO.CLIENT=1
*
* Removed the JUMP.TO.CLIENT flag. Now the user can jump to a client
* and enter a bill under the new client - DRF 5/28/04
*
                  SND.DATA=DUMMY<1>
                  SND.DATA:=",":CARRIER.ID
                  IF NOT(DBCTRL<9>) THEN
                     SND.DATA:=",":CARRIER.REC<5>[1,5]
                  END
                  SND.DATA:=",":PRO
                  SND.DATA=CHANGE(SND.DATA,",",@AM)
                  GOSUB SEND.DATA
                  GOTO 100
               END
               IF CARRIER.ID ='02653' AND DUMMY<2> < DATE()-1460 AND OCONV(WAIT,'MCU')='A' AND DBCTRL<14>='F' THEN
                  DELETE F.CRX,PRO.ID
                  SND.DATA=CLIENT.ID
                  SND.DATA:=",":CARRIER.ID
                  IF NOT(DBCTRL<9>) THEN
                     SND.DATA:=",":CARRIER.REC<5>[1,5]
                  END
                  SND.DATA:=",":PRO
                  SND.DATA=CHANGE(SND.DATA,",",@AM)
                  GOSUB SEND.DATA
                  GOTO 100
               END
               CRT @(0,22):@(-3):
               CRT @(0,21):@(-3):
               PRO.REC = ''
               GOTO 300                  ; * ENTER PRO
            END
*DF            END                          ; * JMK124
         END
      END

315: ***
      READ DUMMY FROM F.HIST,PRO.ID ELSE
         IF XREF.CARRIERS#'' THEN
            CHK.PRO=PRO
            GOSUB CHECK.XREF.CARRIERS
         END
*
* Check old pro format that was passed by CHECK.PRO
*
         IF CHK.OLD.PRO # '' THEN
            CHK.TIMES=DCOUNT(CHK.OLD.PRO<1>,@VM)
            FOR CHK.CNT=1 TO CHK.TIMES
*
* CHK.OLD.PRO - Computed old pro format from CALL CHECK.PRO
*
               CHK.PRO=CHK.OLD.PRO<1,CHK.CNT>
               CHK.ID = CARRIER.ID:'*':CHK.PRO:'*0'
               READ DUMMY FROM F.CRX,CHK.ID THEN
                  Q=CHK.PRO
                  GOTO 305               ; * Skip "Pro Format" Routine
               END

               IF XREF.CARRIERS#'' THEN
*
* CHK.PRO - Check XREF carriers for the computed OLD format
*
                  CHK.PRO = CHK.PRO
                  GOSUB CHECK.XREF.CARRIERS
               END
            NEXT CHK.CNT
         END

*** Look for "Old" Style Pro Numbers
         IF CARRIER.ID='09922' AND PRO='0257-577' ELSE
            IF INDEX(PRO,'-',1) OR PRO[1,1]='0' OR INDEX(PRO,'.',1) THEN
               CHK.PRO=PRO
               CHK.PRO=CHANGE(CHK.PRO,'-','')
               CHK.PRO=CHANGE(CHK.PRO,'.','')
               CHK.ID = CARRIER.ID:'*':CHK.PRO:'*0'
               IF CHK.PRO#PRO THEN
                  READ DUMMY FROM F.CRX,CHK.ID THEN
                     Q=CHK.PRO           ; * Look like you entered the "Old" number
                     GOTO 305            ; * Skip "Pro Format" Routine
                  END
               END
               POS.CNTR=0
               LOOP POS.CNTR+=1 ; UNTIL CHK.PRO[1,1]#'0' DO
                  CHK.PRO=CHK.PRO[2,999]
               REPEAT
               CHK.ID = CARRIER.ID:'*':CHK.PRO:'*0'
               READ DUMMY FROM F.CRX,CHK.ID THEN
                  Q=CHK.PRO              ; * Look like you entered the "Old" number
                  GOTO 305               ; * Skip "Pro Format" Routine
               END
               IF XREF.CARRIERS#'' THEN
                  CHK.PRO=CHK.PRO
                  GOSUB CHECK.XREF.CARRIERS
               END
            END
         END
      END
************************************************************************
      EDI.ID=CLIENT.ID:'*':PRO.ID
      READ DUMMY FROM F.EDI.BILLS,EDI.ID THEN
         CALL ELINE('Bill is pending in EDI. Give bill to Auditor')
         CC+=1 ; GOSUB PRINT.CC
         GOTO 300
      END
************************************************************************
*DF      IF CARRIER.ID='00015' OR (CARRIER.ID='01075' AND (CLIENT.ID = '00701' OR CLIENT.ID='00761' OR CLIENT.ID = '00846' OR CLIENT.ID = '01132' OR CLIENT.ID='01163' OR CLIENT.ID='01038' OR CLIENT.ID='01202' OR CLIENT.ID='01289' OR CLIENT.ID='01292' OR CLIENT.ID='01352' OR CLIENT.ID='01241' OR CLIENT.ID='01274' OR CLIENT.ID='01357' OR CLIENT.ID='01361' OR CLIENT.ID='10356' OR CLIENT.ID='01349' OR CLIENT.ID='01170' OR CLIENT.ID='01087' OR CLIENT.ID='01195' OR CLIENT.ID='01264' OR CLIENT.ID='01190' OR CLIENT.ID='01363' OR CLIENT.ID='01038'OR CLIENT.ID='01066' OR CLIENT.ID='01222' OR CLIENT.ID='10225' OR CLIENT.ID='01066' OR CLIENT.ID= '01222' OR CLIENT.ID='01380' OR CLIENT.ID='01255' OR CLIENT.ID='01381' OR CLIENT.ID='01397' OR CLIENT.ID='01401' OR CLIENT.ID='01436' OR CLIENT.ID='01309' OR CLIENT.ID='01315' OR CLIENT.ID='01351' OR CLIENT.ID='01173' OR CLIENT.ID='01223' OR CLIENT.ID='01371' OR CLIENT.ID='01171' OR CLIENT.ID='01258' OR CLIENT.ID='01021' OR CLIENT.ID='01442' OR CLIENT.ID='01446' OR CLIENT.ID='01456' OR CLIENT.ID='01476' OR CLIENT.ID='01487' OR CLIENT.ID='01515' OR CLIENT.ID='01525' OR CLIENT.ID='01545' OR CLIENT.ID='01500' OR CLIENT.ID='01491' OR CLIENT.ID='01467' OR CLIENT.ID='01075')) THEN
      IF CARRIER.ID='00015' OR CARRIER.ID='01075' THEN
         READ DUMMY FROM F.INV.XREF,PRO THEN
            CALL ELINE('Bill has a cross reference check inquire FedEx - 1-2-7 Give to Nick Rath')
            CC+=1 ; GOSUB PRINT.CC
            GOTO 300
         END
      END
*********************************************************************
* This is the last point before entry of bill
*********************************************************************
      IF CARRIER.ID='00453' AND PRO[1,3]='006' THEN
         CALL ELINE("You cannot enter a bill with a pro that starts with 006 - See Programming")
         CC+=1 ; GOSUB PRINT.CC
         GOTO 300
      END
365: ***
      IF PRO[LEN(PRO)-1,2]='AD' OR PRO[LEN(PRO)-1,2]='BD' OR INDEX(PRO,'/',1) THEN
         LAST.TWO=PRO[LEN(PRO)-1,2]
         IF LAST.TWO = 'AD' OR LAST.TWO = 'BD' THEN
            ORIG.ON.PRO=PRO[1,LEN(PRO)-2]
         END ELSE
            PRO.EXTENSTION=FIELD(PRO,'/',2)
            PRO.EXTENSTION.LEN=LEN(PRO.EXTENSTION)
            PRO.EXTENSTION = PRO.EXTENSTION -1
            IF PRO.EXTENSTION LE 0 THEN
               ORIG.ON.PRO=PRO[1,LEN(PRO)-2]
            END ELSE
               ORIG.ON.PRO=PRO[1,LEN(PRO)-PRO.EXTENSTION.LEN]:PRO.EXTENSTION
            END
         END
         FOUND.ORIG=0
         MOD.XREF.CARRIERS=''
         IF CLIENT.ID='10356' AND CARRIER.ID='00015' THEN
            MOD.XREF.CARRIERS='01075'
         END
         IF CLIENT.ID='10356' AND CARRIER.ID='01075' THEN
            MOD.XREF.CARRIERS='00015'
         END
*DF         TIMES=DCOUNT(XREF.CARRIERS<1>,@VM)
         TIMES=DCOUNT(MOD.XREF.CARRIERS<1>,@VM)
*
* Removed the check for cross reference. So that a / can only be entered
* on bills that are already on file for the carrier that is keyed.
* per Myra and Owen. DRF 02/02/07.
*
* Added a special case for Alcon for FedEx and FedEx ground. DRF 02/06/07
*
         FOR XCHK = 1 TO TIMES + 1
            IF XCHK = TIMES + 1 THEN
               ORIG.ON.ID=CARRIER.ID:'*':ORIG.ON.PRO:'*0'
            END ELSE
*DF               ORIG.ON.ID=XREF.CARRIERS<1,XCHK>:'*':ORIG.ON.PRO:'*0'
               ORIG.ON.ID=MOD.XREF.CARRIERS<1,XCHK>:'*':ORIG.ON.PRO:'*0'
            END
            READ ORIG.ON.FILE FROM F.HIST,ORIG.ON.ID THEN
               IF ORIG.ON.FILE<39>='O' OR (CLIENT.ID='01326' OR CLIENT.ID='01323' OR CLIENT.ID='01324' OR CLIENT.ID='01351' OR CLIENT.ID='01308' OR CLIENT.ID='01334' OR CLIENT.ID='01311' OR CLIENT.ID='01288' OR CLIENT.ID='01322' OR CLIENT.ID='01305' OR CLIENT.ID='01349' OR CLIENT.ID='01350' OR CLIENT.ID='01292' OR CLIENT.ID='01356' OR CLIENT.ID='01320' OR CLIENT.ID='01460' OR CLIENT.ID='01329' OR CLIENT.ID='01344' OR CLIENT.ID='00392' OR CLIENT.ID='01083' OR CLIENT.ID='01408' OR CLIENT.ID='01340' OR CLIENT.ID='01310' OR CLIENT.ID='01312' OR CLIENT.ID='01331' OR CLIENT.ID='01113' OR CLIENT.ID='01535' OR CLIENT.ID='01505' OR CLIENT.ID='01148' OR CLIENT.ID='01371' OR CLIENT.ID='01398' OR CLIENT.ID='01539' OR CLIENT.ID='01704' OR CLIENT.ID='01474') THEN
                  FOUND.ORIG=1
               END
            END ELSE
               READ ORIG.ON.FILE FROM F.CRX,ORIG.ON.ID THEN
                  IF ORIG.ON.FILE<39>='O' THEN
                     FOUND.ORIG=1
                  END
               END
            END
         NEXT XCHK
         IF LAST.TWO='AD' AND CARRIER.ID='00015' THEN GOTO 400
         IF NOT(FOUND.ORIG) THEN
            CALL ELINE(ORIG.ON.PRO:' must be on file & not rejected before ':PRO:' can be entered')
            CC+=1 ; GOSUB PRINT.CC
            GOTO 300
         END
      END
      IF SU.FLAG THEN                    ; * JMK129
         CALL ELINE("Error!  Cannot enter new bills as Super User!")   ; * JMK129
         CC+=1 ; GOSUB PRINT.CC          ; * JMK129
         GOTO 300                        ; * JMK129
      END                                ; * JMK129
      IF LOOKUP.ONLY AND SU.FLAG AND CHANGE.FLAG THEN
         IF LOOKUP.ONLY.REASON='Incorrect Remit Zip' THEN
            LOOKUP.ONLY=0
            PREV.PRO.LOOKUP.ONLY=0       ; * JMK04
         END
      END
      IF LOOKUP.ONLY THEN
*df         IF LOOKUP.ONLY.REASON='This carrier is not Active.  Lookup Only.' OR LOOKUP.ONLY.REASON='Old Pro Format - Lookup Item only' THEN
         IF CARRIER.REC<89>='I' THEN
            IF PRO[PRO.LEN-1,2]='AD' OR PRO[PRO.LEN-1,2]='BD' ELSE
               CALL ELINE("Bill Not On File... You cannot add it because: ":LOOKUP.ONLY.REASON)
               CC+=1 ; GOSUB PRINT.CC
               GOTO 300
            END
         END ELSE
            CALL ELINE("Bill Not On File... You cannot add it because: ":LOOKUP.ONLY.REASON)
            CC+=1 ; GOSUB PRINT.CC
            LOOKUP.ONLY=0
            PREV.PRO.LOOKUP.ONLY=0
            GOTO 300
         END
      END
      IF TRIM(OCONV(CARRIER.REC<7>,'MCU'))='DO NOT ENTER BILLS' THEN
         CALL ELINE("Error!  Cannot use this carrier to enter new bills!")
         CC+=1 ; GOSUB PRINT.CC
         GOTO 300
      END
      IF CL.STAT#'A' THEN
         CALL ELINE("No Entry Is allowed on Clients That Are Not Set to Active!")
         CC+=1 ; GOSUB PRINT.CC
         GOTO 300
      END
370:
      IF USER.TYPE='A' THEN
         LAST.TWO=PRO[LEN(PRO)-1,2]
         IF OLD.PRO.REC='' AND LAST.TWO # 'AD' AND LAST.TWO # 'BD' THEN
            HELP='Pro does not exist. Do you wish to reject the pro'
            CALL GEN.IN(0,22,'Reject Pro? N ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
            QI=OCONV(QI,'MCU')
            BEGIN CASE
               CASE QI='EX'
                  STOP
               CASE QI='N' OR QI='' OR QI='X'
                  GOTO 300
               CASE QI='Y'
                  RVIN='' ; RVOUT=''
                  RVIN<1> = 'E'
                  RVIN<2> = CARRIER.ID
                  RVIN<3> = CLIENT.ID
                  RVIN<4> = FIELD(PRO.ID,'*',2)
                  RVIN<5> = REJECT.FLAG
                  RVIN<6> = BILL.DATE
                  RVIN<7> = ACTUAL.CHG   ; * CARRIER.CHG
                  RVIN<8> = 'N'
                  CALL FB.2.1.REJECT.KED(RVIN, RVOUT, REJECT.REASONS, MAILING.ADDR)
                  REJECT.FLAG = RVOUT<2>
                  MULTI.PRO.ID = RVOUT<4>
                  NUM.MULTI.PROS = DCOUNT(MULTI.PRO.ID<1>,@VM)
                  MULTI.PRO.DATE = RVOUT<6>
                  MULTI.PRO.CHG = RVOUT<7>
                  MULTI.PRO.REJ = RVOUT<8>
                  IF RVOUT<9>='Y' THEN
                     PROC.DATE=''
*DAVID                 IF DATE() LE CLIENT.REC(82) THEN
*DAVID                   BILL.DATE=CLIENT.REC(82)+1
*DAVID                 END ELSE
*DAVID                   BILL.DATE=DATE()
*DAVID                 END
                  END
                  BILL.DATE = MULTI.PRO.DATE<1,1>
                  ACTUAL.CHG = MULTI.PRO.CHG<1,1>
*DF               CARRIER.CHG = MULTI.PRO.CHG<1,1>
                  IF CARRIER.CHG+0 = 0 THEN CARRIER.CHG=MULTI.PRO.CHG<1,1>
                  REJ.TYPE = MULTI.PRO.REJ<1,1>
                  GOSUB 8100             ; * Redraw Screen Fields
                  GOSUB 8200             ; * Redraw Screen Data
                  BEGIN CASE
                     CASE RVOUT<1>='EX'
                        STOP
                     CASE RVOUT<1>='X' OR REJECT.FLAG = ''
                        GOTO 300
                  END CASE
                  REJECTION.ALTERED = RVOUT<3>
                  GOTO 4900
               CASE 1
                  CALL ELINE('Invalid Entry')
                  GOTO 370
            END CASE
*DF          CALL ELINE('Pro ':PRO.ID:' has not been entered')
*DF          GOTO 300
         END
      END

390:
*
* If Auditable - Send to Audit Routine
*
      WT.REJECT=0                        ; * JMK133
      GOIN=0
      FRT.ARRAY=''                       ; * JMK17
      MIS.ARRAY=''                       ; * JMK17
*DF      IF CARRIER.AUDIT AND NOT(CHANGE.FLAG) THEN GOIN=1
      IF CARRIER.AUDIT THEN GOIN=1
      IF LTL.CAR & CLIENT.AUDIT & CL.LOGISTICS='Y' & CL.AUTO.MISROUTE='Y' THEN GOIN=1      ; * JMK168
*DF      IF LTL.CAR & CLIENT.AUDIT & (CL.LOGISTICS='Y') & (BILL.DATE >= CLIENT.REC(149)) & (CL.AUTO.MISROUTE='Y') THEN GOIN=1         ; * JMK168
*     IF (LTL.CAR OR (TL.CAR AND USER # '')) & CLIENT.AUDIT & CL.LOGISTICS='Y' & CL.AUTO.MISROUTE='Y' THEN GOIN=1
* Don't Go into On Line Audit if AD or BD.  Owen 06/09/98
      LPRO=LEN(PRO)
      IF PRO[LPRO-1,2]='AD' OR PRO[LPRO-1,2]='BD' THEN GOIN=0
      IF SU.FLAG AND CHANGE.FLAG THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00981' AND CARRIER.ID='00030' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00981' AND CARRIER.ID='00124' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00981' AND CARRIER.ID='00018' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00981' AND CARRIER.ID='00563' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00981' AND CARRIER.ID='00748' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00981' AND CARRIER.ID='00787' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00981' AND CARRIER.ID='00093' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00981' AND CARRIER.ID='00017' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00981' AND CARRIER.ID='00014' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00981' AND CARRIER.ID='00601' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00857' AND CARRIER.ID='00030' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00857' AND CARRIER.ID='00124' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00857' AND CARRIER.ID='00018' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00857' AND CARRIER.ID='00563' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00857' AND CARRIER.ID='00748' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00857' AND CARRIER.ID='00787' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00857' AND CARRIER.ID='00093' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00857' AND CARRIER.ID='00017' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00857' AND CARRIER.ID='00014' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00857' AND CARRIER.ID='00601' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00857' AND CARRIER.ID='00212' THEN GOIN=0
      IF GOIN THEN
*DF         IF USER.TYPE#'A' THEN BILL.STATUS=4
*       Always Get Class & Weight for LTL Carriers (For Misroutes)
         AVIN='' ; AVOUT=''
         IF BACK.FLAG THEN AVIN<1>='X'
         BACK.FLAG=0
         AVIN<3>=BILL.DATE
         AVIN<4>=TRANS.MODE
         AVIN<5>=AIR.PIECES
         AVIN<6>=WEIGHT
         AVIN<7>=MISC.CHARGE
         AVIN<8>=ACTUAL.CHG              ; * (Carrier Amount on Bill)
         AVIN<9>=CARRIER.CHG             ; * (Logistics Amount)
*DF         AVIN<10>=CARRIER.ID
         AVIN<10>=OLA.CARRIER.ID
         AVIN<11>=CLIENT.ID
         AVIN<12>=IN.OUT
         AVIN<13,1>=ORIG.ZIP
         AVIN<13,2>=ORIG.CITY
         AVIN<13,3>=ORIG.STATE
         AVIN<14,1>=DEST.ZIP
         AVIN<14,2>=DEST.CITY
         AVIN<14,3>=DEST.STATE
         AVIN<15>=CL.ZIP.DEF<1,1>
         AVIN<16>=USER
         NUM.OF.CLASS=DCOUNT(CLASSES,@VM)
         FOR XX = 1 TO NUM.OF.CLASS
            IF CLASSES<1,XX>='' OR WEIGHTS<1,XX>='' ELSE
               AVIN<18,-1>=CLASSES<1,XX>
               AVIN<19,-1>=WEIGHTS<1,XX>
            END
         NEXT XX
         AVIN<21>=MISC.CHG.CODES
         AVIN<22>=CONTR.MISC.CHG.AMTS
         AVIN<23>=BENCH.MISC.CHG.AMTS
*        AVIN<24>=CL.LOGISTICS='Y'       ; * JMK168
         IF USER='DAVID' THEN CALL ELINE('PRESS BREAK')
         AVIN<24>=(CL.LOGISTICS='Y') & (BILL.DATE >= CLIENT.REC(149))  ; * JMK168
         AVIN<25>=0                      ; * Starting OLA Character Count
         AVIN<26>=ZIP.LEN
         GOSUB 8200
         AVIN<27>=PROG.NAME
         AVIN<28>=PROG.DESC
         AVIN<29>=PACK.NAME
         AVIN<30>=CO.NAME
         GOSUB GET.SCREEN.DSP
         AVIN<31>=SCREEN.DSP
         AVIN<32>=DATA.DSP
         IF NOT(CARRIER.AUDIT) THEN
            AVIN<33>=1                   ; * Get Class/Weight for Misroutes
         END
         AVIN<34>=CL.AUTO.MISROUTE='Y'
         AVIN<35>=CL.LOG.FSC='N'         ; * Flag to NOT Calculate Log FSC
*KD 1/11/98 - ADDED CHECKING AGAINST PRE-AUDIT DATES
*
         AVIN<36>=CLIENT.REC(27)
         AVIN<37> = PRO.ID
         AVIN<38> = ZIP.ARR
         AVIN<39> = CH.NUM
         AVIN<40> = MILEAGE
         AVIN<41> = 'NW'                 ; * New way don't verify class
         AVIN<42> = OLD.PRO.REC<39>
         AVIN<43> = USER.TYPE
         AVIN<44> = OLD.PRO.REC<98>
         AVIN<45>=FLAT.RATE
         AVIN<46>=MAX.LTL                ; * JMK07
         AVIN<47>=CARRIER.ID
         AVIN<48>=CLIENT.REC(188)        ; * JMK44
         AVIN<49>=CARR.FSC               ; * JMK61
         AVIN<50>=CARRIER.SCAC           ; * JMK147
         AVIN<51>=CARRIER.TYPE           ; * JMK147
*
         CUTOFF.DATE = CLIENT.REC(232)   ; * NPR05
         AVIN<52>=CUTOFF.DATE            ; * NPR05
         AVIN<53>=CL.LOGISTICS='Y'
         AVIN<54>=CLIENT.REC(149)
         AVIN<55>=CHECK.FOR.CAPACITY

         AVIN<56>=OLD.PRO.REC<53>        ; * Entered  By  * NPR024
         AVIN<57>=OLD.PRO.REC<54>        ; * Verified By  * NPR024
*
         AVIN<58>=BOL.POP.VER.ARR<1>     ; * NPR028 *** CLIENTS<254> - MV 'Population' Flags   - Populate Bill data from BOL data ,if flag for data field is set to 'Y'
         AVIN<59>=BOL.POP.VER.ARR<2>     ; * NPR028 *** CLIENTS<255> - MV 'Verification' Flags - Verify Bill record against data from BOL data ,if flag for data field is set to 'Y'
         AVIN<60>=BOL.POP.VER.ARR<3>     ; * NPR028 *** CLIENTS<256> - MV 'Variance'           - Allow a certain variance on weights and Amount fields when verifying against BOL data.
         AVIN<61>=BOL.POP.VER.ARR<4>     ; * NPR028 *** Data from FB.BOL.CRX record related to bill
*
         AVOUT=''
         BEGIN CASE
            CASE AUDIT.TYPE = 'AIRBRN' ; NULL
            CASE AUDIT.TYPE = 'LTLALL' ; NULL
            CASE AUDIT.TYPE = 'TLALL' AND USER # '' ; NULL
            CASE 1 ; AUDIT.TYPE='LTLALL'           ; * Force LTL
         END CASE
         MISROUTE.FLG=0
         BEGIN CASE
            CASE AUDIT.TYPE='LTLALL' AND USER='JIM00'
               CALL FB.2.1.AUDIT.OWEN.TXT(AVIN,AVOUT,DAUDIT,DFSC,DTARIFFS,DTARIFF.DATE.XREF,LI.CODES,F.AUDIT.TABLES,F.AUDIT.ZIPS,F.PCIN,F.PCOUT)
            CASE AUDIT.TYPE='LTLALL' AND USER='OWEN'
               CALL FB.2.1.AUDIT.OWEN(AVIN,AVOUT,DAUDIT,CONTR.DFSC,BENCH.DFSC,DTARIFFS,DTARIFF.DATE.XREF,LI.CODES,F.AUDIT.TABLES,F.AUDIT.ZIPS,F.PCIN,F.PCOUT,F.TABLES)
            CASE AUDIT.TYPE='LTLALL'
               CALL FB.2.1.AUDIT.OWEN(AVIN,AVOUT,DAUDIT,CONTR.DFSC,BENCH.DFSC,DTARIFFS,DTARIFF.DATE.XREF,LI.CODES,F.AUDIT.TABLES,F.AUDIT.ZIPS,F.PCIN,F.PCOUT,F.TABLES)
            CASE AUDIT.TYPE='LTLALL' AND NUM.EQUIP.TYPES GT 0 AND USER # ''
395: ***
               HELP="Is this a [L]TL or a [T]ruckload? [R]eject Bill"
               MASK='LTL OR TRUCKLOAD: L '
               CALL GEN.IN(50,6,MASK,'',Q,0,2,'L','',2,-2,6,0,QI,HELP,0,23)
               CC+=LEN(QI)+1
               QI = ICONV(QI,'MCU')
               IF QI='3' THEN QI='T'
               IF QI='-' THEN QI='R'
               IF QI='' THEN QI = 'L'
               BEGIN CASE
                  CASE QI='X'
                     X.EX.FLAG='X'
                  CASE QI='EX'
                     X.EX.FLAG='EX'
                  CASE QI = 'T'
                     CALL FB.2.1.AUDIT.TL(AVIN,AVOUT,CONTR.DFSC,BENCH.DFSC,AVAL.ACC.CODES,F.AUDIT.ZIPS,F.PCIN,F.PCOUT,F.AUDIT,F.AUDIT.PP,EQUIP.TYPES,F.MILEAGE,F.TABLES)
                  CASE QI = 'L'
                     CALL FB.2.1.AUDIT.OWEN(AVIN,AVOUT,DAUDIT,CONTR.DFSC,BENCH.DFSC,DTARIFFS,DTARIFF.DATE.XREF,LI.CODES,F.AUDIT.TABLES,F.AUDIT.ZIPS,F.PCIN,F.PCOUT,F.TABLES)
                  CASE 1
                     CALL ELINE('Invalid Entry, Please try again!!')
                     GOTO 395
               END CASE
            CASE AUDIT.TYPE='AIRBRN'
               CALL FB.2.1.AUDIT.AIRBRN(AVIN,AVOUT,DAUDIT,DFSC,F.RATE.TABLES,F.PCIN,F.PCOUT)
            CASE AUDIT.TYPE='TLALL' AND USER # ''
               CALL FB.2.1.AUDIT.TL(AVIN,AVOUT,CONTR.DFSC,BENCH.DFSC,AVAL.ACC.CODES ,F.AUDIT.ZIPS,F.PCIN,F.PCOUT,F.AUDIT,F.AUDIT.PP,EQUIP.TYPES,F.MILEAGE,F.TABLES)
            CASE 1
               CALL ELINE('Error - Incorrect Audit Type of "':AUDIT.TYPE:' Call Programmer!')
               CC+=1 ; GOSUB PRINT.CC
         END CASE
         SAVE.AVOUT=AVOUT
         CC+=AVOUT<25> ; GOSUB PRINT.CC
         AUDIT=AVOUT<2>
         REDRAW.SCR=AVOUT<20>
         FLAT.RATE=AVOUT<35>
         CONTR.ABS.MIN=AVOUT<37>
         CONTR.FSC.PERC=AVOUT<38>
         CONTR.FSC.PARMS=AVOUT<46>       ; * JMK61
         BENCH.FSC.PARMS=AVOUT<47>       ; * JMK61
         AFS.FSC.PARMS=AVOUT<48>         ; * JMK61
         TRANSIT.TIME=AVOUT<50>          ; * JMK175
         CAPACITY.LOAD=AVOUT<51>
         IF REDRAW.SCR='REDRAW' OR AUDIT='U' OR AUDIT='S' THEN
            GOSUB 8100                   ; * Redraw Entry Fields
            GOSUB 8200                   ; * Redisplay Data
         END
         X.EX.FLAG=AVOUT<1>
*DF         IF X.EX.FLAG='X' THEN GOTO 300
         IF X.EX.FLAG='X' THEN
            IF SU.FLAG THEN
               CALL ELINE('You cannot X back from here')
               STOP
            END
            GOTO 300
         END
         IF X.EX.FLAG='EX' THEN STOP
*        IF AUDIT='U' THEN GOTO 300 ; * Unable to Audit Go get Pro
*DF      IF AUDIT='S'  THEN GOTO 300 ;*User chose to skip.
         IF AUDIT='R' THEN               ; * Reject Bill
            AUDIT='N'                    ; * Set to No Audit
            SND.DATA='R' ; GOSUB SEND.DATA
         END
         IF AUDIT='Y' OR AUDIT='U' OR AUDIT='S' THEN
            BILL.DATE=AVOUT<3>
            CRT @(5,7):BILL.DATE'D2/':
            TRANS.MODE=AVOUT<4>
            AIR.PIECES=AVOUT<5>
            CRT @(0,21):AIR.PIECES'R#7':
            WEIGHT=AVOUT<6>
            IF (CLIENT.ID='01323' OR CLIENT.ID='01324' OR CLIENT.ID='01325' OR CLIENT.ID='01326' OR CLIENT.ID='01311') AND (USER='MYRA' OR USER='JAUDIT' OR USER='SMICHALIK' OR USER='DAVID' OR SPECIAL.NIKKI.VACATION) THEN
               CRT @(0,20):WEIGHT'R#7':'  Dim':
            END ELSE
               CRT @(0,19):WEIGHT'R#6':
            END
            MISC.CHARGE=AVOUT<7>
            IF AVOUT<8>+0=0 THEN
               ACTUAL.CHG=OLD.PRO.REC<8>
            END ELSE
               ACTUAL.CHG=AVOUT<8>
            END
            OLA.AMT=AVOUT<34>
            IF OLD.PRO.REC<8>#'' THEN
               IF OLD.PRO.REC<8>#ACTUAL.CHG THEN CHANGE.EXP=1
            END
            CRT @(15,19):ACTUAL.CHG'R26#9':
            IF AVOUT<9>+0=0 THEN
               CARRIER.CHG=OLD.PRO.REC<7>
            END ELSE
               CARRIER.CHG=AVOUT<9>
            END
            CRT @(6,19):CARRIER.CHG'R26#9':
            IF FLAT.RATE THEN
               CRT @(24,19):'F'
            END ELSE
               CRT @(24,19):' '
            END
            VARIANCE=CARRIER.CHG-ACTUAL.CHG
            CRT @(25,19):VARIANCE'R26#7':
            IN.OUT=AVOUT<12>
            CRT @(5,8):IN.OUT:
            ORIG.ZIP=AVOUT<13,1>
            ORIG.CITY=AVOUT<13,2>
            ORIG.STATE=AVOUT<13,3>
            CRT @(5,10):ORIG.ZIP:' ':ORIG.CITY:', ':ORIG.STATE:
            DEST.ZIP=AVOUT<14,1>
            DEST.CITY=AVOUT<14,2>
            DEST.STATE=AVOUT<14,3>
            CRT @(5,11):DEST.ZIP:' ':DEST.CITY:', ':DEST.STATE:
            GOSUB 9500                   ; * JMK31
*           IF BLOCKIT=1 THEN GO 300     ; * JMK31 ; * JMK172
            IF BLOCKIT.YES=1 THEN GO 300           ; * JMK31 ; * JMK172
            MISROUTE.FLG=AVOUT<17>
            IF USER='OWEN' THEN CALL ELINE('At Mode By Weight Decision')
            LOCATE WEIGHT IN CARRIER.MODE.WGT<1> BY "AR" SETTING POS ELSE NULL
            T.MODE.BY.WGT = OCONV(CARRIER.MODE.BY.WGT<1,POS>,'MCU')
            LTL.CAR=T.MODE.BY.WGT=1      ; * JMK187
            TL.CAR=T.MODE.BY.WGT=6       ; * JMK187
            AIR.CAR=T.MODE.BY.WGT=12     ; * JMK187
            CLASSES=AVOUT<18>            ; * Mv Line Item Classes
            WEIGHTS=AVOUT<19>            ; * Mv Line Item Weights
            MISC.CHG.CODES=AVOUT<21>
            CONTR.MISC.CHG.AMTS=AVOUT<22>
            BENCH.MISC.CHG.AMTS=AVOUT<23>
            LOGISTIC.AMT=AVOUT<26>
            OVERCHARGE.AMT=AVOUT<27>
            CUT.DESC=AVOUT<28>
            AUDITOR.VIEWED = AVOUT<30>
            IF AUDIT.TYPE='TLALL' AND USER # '' THEN
               IF USER.TYPE='A' AND CLIENT.ID='00574' ELSE
                  ZIP.ARR = AVOUT<31>
               END
               MILEAGE = AVOUT<32>
               CRT @(5,15):MILEAGE'L1,#10'
            END
            IF AUDIT.TYPE = 'LTLALL' THEN
               IF AUDIT = 'Y' THEN
                  HIGH.CLASS = AVOUT<31>
                  LOWEST.TABLE.CLASS = AVOUT<32>
                  DIFFERENCE = AVOUT<36>
               END
               AMOUNT.MATCH = AVOUT<33>
            END
*           IF DTL.CHRG.AMTS#AVOUT<44> THEN        ; * JMK18; * JMK20
*              FRT.ARRAY=''              ; * JMK18; * JMK20
*              MIS.ARRAY=''              ; * JMK18; * JMK20
*              DTL.OUT=AVOUT             ; * JMK18; * JMK20
*              DTL.CHRG.CODES=AVOUT<40>  ; * JMK18; * JMK20
*              DTL.CHRG.AMTS=AVOUT<44>   ; * JMK18; * JMK20
*              GOSUB RECALC.FB.DETAILS   ; * JMK18; * JMK20
*           END                          ; * JMK18; * JMK20
            CUT.CLASS=AVOUT<49>          ; * JMKXXX
            IF AMOUNT.MATCH=0 AND AUDIT # 'Y' AND USER='DAVID' THEN
               CALL ELINE('PRESS BREAK')
               LOCATE 'FRT' IN DTL.CHRG.CODES<1> SETTING CHRG.POS THEN
                  FSC.PERC.CALC=(1+CONTR.FSC.PERC/100000)
                  TEMP.ACTUAL.CHG=ACTUAL.CHG
                  NUM.OF.LINE=DCOUNT(DTL.CHRG.CODES<1>,@VM)
                  FOR XX = 1 TO NUM.OF.LINE
                     IF DTL.CHRG.CODES<1,XX>#'FRT' AND DTL.CHRG.CODES<1,XX>#'FSC' THEN
                        TEMP.ACTUAL.CHG= TEMP.ACTUAL.CHG-DTL.CHRG.AMTS<1,XX>
                     END
                  NEXT XX
                  FRT.CHRG=TEMP.ACTUAL.CHG/FSC.PERC.CALC
                  FRT.CHRG=FRT.CHRG'R0'
                  DTL.CHRG.AMTS<1,CHRG.POS>=FRT.CHRG
               END
               LOCATE 'FSC' IN DTL.CHRG.CODES<1> SETTING CHRG.POS THEN
                  FSC.PERC.CALC=CONTR.FSC.PERC/100000
                  FSC.CHRG=FRT.CHRG*FSC.PERC.CALC
                  FSC.CHRG=FSC.CHRG'R0'
                  DTL.CHRG.AMTS<1,CHRG.POS>=FSC.CHRG
               END
               GOSUB RECALC.FB.DETAILS
            END
            VAR.ARR=''
            VAR.REC=''
*DF            IF USER='DAVID' THEN CALL ELINE('HERE PRESS BREAK')
            IF OVERCHARGE.AMT+0 > 0 THEN
*DF           IF START.DATE #'' THEN OVERCHARGE.DATE = START.DATE ELSE OVERCHARGE.DATE = CL.PRE.DATE+90
               IF START.DATE #'' THEN OVERCHARGE.DATE = START.DATE ELSE OVERCHARGE.DATE = CL.PRE.DATE+45
*DF           IF DATE() < OVERCHARGE.DATE AND DAUDIT<13>='Y' AND CL.LOGISTICS='Y' THEN
*
*  Changed to use at ship date instead of todays date.
*  8/6/02 DRF
*
               IF BILL.DATE < OVERCHARGE.DATE AND DAUDIT<13>='Y' AND CL.LOGISTICS='Y' THEN           ; * JMK168 ; * JMK180
*              IF BILL.DATE < OVERCHARGE.DATE AND DAUDIT<13>='Y' AND (CL.LOGISTICS='Y') AND (BILL.DATE >= CLIENT.REC(149)) THEN    ; * JMK168 ; * JMK180

*tbs Changed to check for a new startup date based on carriers and client
*tbs allows for carrier based startup dates rather than client

*tbs       IF DATE() LE CL.PRE.DATE+90 AND DAUDIT<13>='Y' AND CL.LOGISTICS='Y' THEN
*             IF 90 DAYS OR LESS FROM PRE AUDIT START DATE
*             AND THE CARRIER IS CLASSIFIED A CORE CARRIER IN OLA
*             AND THE CLIENT IS CLASSIFIED AS A LOGISTICS CLIENT
*             PUT MONEY IN DISCOUNT FIELD
                  VAR.ARR<1>=OVERCHARGE.AMT
*             VAR.ARR<7>='Tariff Error'
                  VAR.ARR<7>=CUT.DESC
                  VAR.ARR<10>=CUT.CLASS  ; * JMK154
               END ELSE
*             PUT MONEY IN OVERCHARGE FIELD
                  VAR.ARR<2>=OVERCHARGE.AMT
*             VAR.ARR<8>='Tariff Error'
                  VAR.ARR<8>=CUT.DESC
                  VAR.ARR<11>=CUT.CLASS  ; * JMK154
               END
               VER.CODE='A' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
            END
            IF LOGISTIC.AMT+0 > 0 THEN
               VAR.ARR<3>=LOGISTIC.AMT
*DF            VAR.REC<1>='1'
*DF            VAR.REC<2>=LOGISTIC.AMT
            END
         END
      END ELSE
         IF USER.TYPE = 'A' AND BILL.STATUS = '3' AND LTL.CAR THEN
            FIRST.TIME.TRY=0
            FIRST.TIME.THRU=1
            GOTO 1850
         END
      END
*DF      IF USER.TYPE='A' AND BILL.STATUS='4' AND AUDIT='Y' AND (USER='DAVID' OR USER='WPARDUE') THEN
      IF USER.TYPE='A' AND BILL.STATUS='4' AND AUDIT='Y' THEN
         FIRST.TIME.TRY=0
         FIRST.TIME.THRU=1
         GOTO 1850
      END
      IF USER.TYPE = 'A' AND BILL.STATUS = '4' THEN
         LAST.TWO=PRO[LEN(PRO)-1,2]
*DF         IF (LAST.TWO = 'AD' OR LAST.TWO = 'BD') AND OLD.PRO.REC<7>='' THEN
         IF (LAST.TWO = 'AD' OR LAST.TWO = 'BD') THEN
            GOTO 1600
         END ELSE
            AUTO.CAL=1
            GOTO 1950
         END
      END
*DF     IF USER.TYPE = 'A' THEN GOTO 430

*---- Invoice Number - only for carrier 00015

400: ***
      IF CARRIER.ID='01075' AND INV.NUM='' THEN INV.NUM=PRO  ; * JMK116
*     IF CARRIER.ID='00015' OR CARRIER.ID='00143' OR CARRIER.ID='00365' OR CARRIER.ID='04226' THEN   ; * JMK106
      IF CAPTURE.INVOICE THEN            ; * JMK106
         NUM.OF.PRO=NUM.OF.PRO+1
         IF NUM.OF.PRO>TOT.NUM.OF.PRO AND NOT(CHANGE.FLAG) THEN
            INV.NUM=''
            TOT.NUM.OF.PRO=''
            NUM.OF.PRO=1
         END
         IF INV.NUM # '' THEN
            GO 410                       ; * JMK35
*           MASK = INV.NUM'L#11'         ; * JMK184
            MASK = INV.NUM'L#20'         ; * JMK184
         END ELSE
            IF CARRIER.ID='00015' THEN
*              MASK = '#-###-#####'      ; * JMK184
               MASK = '#-###-#####         '       ; * JMK184
            END ELSE
*              MASK = '###########'      ; * JMK184
               MASK = STR('#',20)        ; * JMK184
            END
         END
         HELP = "Enter Invoice Number. "
*        IF CHANGE.FLAG ! INV.NUM # '' THEN REQ = 0 ELSE REQ = 1
*        CALL GEN.IN(40,6,'Inv Num: ':MASK,'',Q,0,11,'','',2,-11,6,0,QI,HELP,0,23)         ; * JMK184
         CALL GEN.IN(36,7,'Inv Num: ':MASK,'',Q,0,20,'','',2,-20,7,0,QI,HELP,0,23)         ; * JMK184   ; * NPR034
         IF INDEX(QI,"+",1) THEN
            QI=CHANGE(QI,"+","-")
            Q=QI
*NPR034            CRT @(40,6):QI:
            CRT @(45,7):QI:              ; * NPR034
         END
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC
         QI = OCONV(QI,'MCU')
         BEGIN CASE
            CASE INV.NUM#'' & QI = ''
               Q = INV.NUM
            CASE QI = 'X'
               IF INV.NUM#'' THEN
                  NUM.OF.PRO=NUM.OF.PRO-1
               END
               IF CHANGE.FLAG=1 THEN
                  CHANGE.MODE=0
*DF                  IF SU.FLAG THEN GOSUB INITIALIZE.BILL.VARIABLES
                  IF SU.FLAG THEN
                     CALL ELINE('You cannot X-back here')
                     STOP
                  END
                  GOSUB 8100
                  IF SU.FLAG THEN GOSUB 8200
                  GOTO 300
               END
               BACK.FLAG = 1
               GOTO 300                  ; * ENTER PRO
            CASE QI = 'EX'
               STOP
            CASE Q MATCH "1N'-'3N'-'5N" AND CARRIER.ID='00015'
               NULL
            CASE Q MATCH "9N" AND CARRIER.ID='00015'
               TEMP=Q[1,1]:'-':Q[2,3]:'-':Q[5,5]
               Q=TEMP
            CASE QI=''
               NULL
            CASE 1
               IF CARRIER.ID='00015' OR Q='' THEN
                  CALL ELINE('ERROR - Invalid Invoice Number.')
                  CC+=1 ; GOSUB PRINT.CC
                  NUM.OF.PRO=NUM.OF.PRO-1
                  GOTO 400
               END
         END CASE
         INV.NUM = Q
410: * MULTIPLE INVOICE BYPASS                         ; * JMK35
         IF INV.NUM='' THEN
            IF CLIENT.ID='10356' OR CLIENT.ID='00125' THEN
               CALL ELINE('Error invoice number is missing')
               GOTO 400
            END ELSE
               CALL ELINE('Warning invoice number is missing')
            END
         END
         TEMP.INV.ID=CHANGE(INV.NUM,'-','')
* PER JADE 04-06-04         IF TEMP.INV.ID=PRO AND CARRIER.ID#'00143' THEN
         IF TEMP.INV.ID=PRO AND CLIENT.ID#'10356' THEN
            CALL ELINE('Error invoice number cannot be the same as pro number. Enter pro with dashes')
            GOTO 400
         END
         IF CLIENT.ID='00125' THEN
            INV.ID=CARRIER.ID:'*':INV.NUM:'*0'
            READ INV.REC FROM F.HIST,INV.ID THEN
               CALL ELINE(INV.NUM:' Is Already on file')
               GOTO 300
            END
         END
*NPR034         CRT @(49,6):INV.NUM'L#11'
         CRT @(45,7) : INV.NUM'L#20'     ; * NPR034

420: ***
         IF NOT(CHANGE.FLAG) AND INV.NUM#'' THEN
            IF TOT.NUM.OF.PRO # '' THEN
               MASK = TOT.NUM.OF.PRO'R#4'
* NPR034               CRT @(73,6):TOT.NUM.OF.PRO'R#4'
               CRT @(73,7):TOT.NUM.OF.PRO'R#4'     ; * NPR034
               GOTO 422
            END ELSE
               MASK = '####'
            END
            HELP = "Enter total number of airbills for this invoice. "
            IF CHANGE.FLAG ! TOT.NUM.OF.PRO # '' THEN REQ = 0 ELSE REQ = 1
*NPR034            CALL GEN.IN(65,6,NUM.OF.PRO'R#4':' of ':MASK,'',Q,REQ,4,'','',2,-4,6,0,QI,HELP,0,23)
            CALL GEN.IN(65,7,NUM.OF.PRO'R#4':' of ':MASK,'',Q,REQ,4,'','',2,-4,7,0,QI,HELP,0,23)     ; * NPR034
            CC+=LEN(QI)+1 ; GOSUB PRINT.CC
            QI = OCONV(QI,'MCU')
            BEGIN CASE
               CASE TOT.NUM.OF.PRO#'' & QI = ''
                  Q = TOT.NUM.OF.PRO
               CASE QI = 'X'
*NPR034                  CRT @(73,6):TOT.NUM.OF.PRO'R#4'
                  CRT @(73,7):TOT.NUM.OF.PRO'R#4'  ; * NPR034
                  NUM.OF.PRO=NUM.OF.PRO-1
                  GOTO 400
               CASE QI = 'EX'
                  STOP
               CASE NUM(Q)
                  NULL
               CASE 1
                  CALL ELINE('ERROR - Invalid Total Number of Airbills.')
                  CC+=1 ; GOSUB PRINT.CC
                  GOTO 420
            END CASE
            TOT.NUM.OF.PRO = Q
*NPR034            CRT @(73,6):TOT.NUM.OF.PRO'R#4'
            CRT @(73,7):TOT.NUM.OF.PRO'R#4'        ; * NPR034
         END
      END
422: *** NUM OF PRO BYPASS

*---- Address Correction Charge - only for carrier 00041

425: ***
      IF CARRIER.ID='00041' THEN
         IF ADDRESS.CORRECTION.CHARGE#'' THEN
            MASK=ADDRESS.CORRECTION.CHARGE'R26,'
         END ELSE
            MASK='########'
         END
         HELP = 'Enter UPS Address Correction Charge. [X]=Back [EX]=Exit'
*NPR034         CALL GEN.IN(46,6,'UPS Addr Correc Chrg: ':MASK,'AMT2',Q,0,8,'','',2,68,6,0,QI,HELP,0,23)
         CALL GEN.IN(46,8,'UPS Addr Correc Chrg: ':MASK,'AMT2',Q,0,8,'','',2,68,8,0,QI,HELP,0,23)
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC
         QI=OCONV(QI,'MCU')
         BEGIN CASE
            CASE ADDRESS.CORRECTION.CHARGE#'' & QI=''
               Q=ADDRESS.CORRECTION.CHARGE
            CASE QI='X'
               IF CHANGE.FLAG=1 THEN
                  CHANGE.MODE=0
                  IF SU.FLAG THEN GOSUB INITIALIZE.BILL.VARIABLES
                  GOSUB 8100
                  IF SU.FLAG THEN GOSUB 8200
                  GOTO 300
               END
               BACK.FLAG=1
               GOTO 300                  ; * ENTER PRO
            CASE QI='EX'
               STOP
            CASE QI=''
               NULL
         END CASE
         IF Q>30000 THEN                 ; * JMK98
            HELP='Are you sure [Y]es'    ; * JMK98
            CALL GEN.IN(0,22,'Are you sure - ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)      ; * JMK98
            CC+=LEN(QI)+1 ; GOSUB PRINT.CC         ; * JMK98
            QI = OCONV(QI,'MCU')         ; * JMK98
            IF QI#'Y' THEN GO 425        ; * JMK98
         END                             ; * JMK98
         ADDRESS.CORRECTION.CHARGE = Q
*NPR034         CRT @(68,6):ADDRESS.CORRECTION.CHARGE'R26,':@(-4)
         CRT @(68,8):ADDRESS.CORRECTION.CHARGE'R26,':@(-4)
      END                                ; * IF CARRIER.ID='00041'

*---- UPS Fee Charge - only for carrier 00041; * JMK11

427: ***; * JMK11
      IF CARRIER.ID='00041' THEN         ; * JMK11
         IF UPS.FEE.CHARGE#'' THEN       ; * JMK11
            MASK=UPS.FEE.CHARGE'R26,'    ; * JMK11
         END ELSE                        ; * JMK11
            MASK='########'              ; * JMK11
         END                             ; * JMK11
         HELP = 'Enter UPS Fees Charge. [X]=Back [EX]=Exit'  ; * JMK11
*NPR034         CALL GEN.IN(46,7,'UPS Fees Charge     : ':MASK,'AMT2',Q,0,8,'','',2,68,7,0,QI,HELP,0,23)    ; * JMK11
         CALL GEN.IN(46,9,'UPS Fees Charge     : ':MASK,'AMT2',Q,0,9,'','',2,68,9,0,QI,HELP,0,23)    ; * JMK11
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC  ; * JMK11
         QI=OCONV(QI,'MCU')              ; * JMK11
         BEGIN CASE                      ; * JMK11
            CASE UPS.FEE.CHARGE#'' & QI=''         ; * JMK11
               Q=UPS.FEE.CHARGE          ; * JMK11
            CASE QI='X'                  ; * JMK11
               IF CHANGE.FLAG=1 THEN     ; * JMK11
                  CHANGE.MODE=0          ; * JMK11
*DF                  IF SU.FLAG THEN GOSUB INITIALIZE.BILL.VARIABLES      ; * JMK11
                  IF SU.FLAG THEN
                     CALL ELINE('You cannot X back here')
                     STOP
                  END
                  GOSUB 8100             ; * JMK11
                  IF SU.FLAG THEN GOSUB 8200       ; * JMK11
                  GOTO 425               ; * JMK11
               END                       ; * JMK11
               BACK.FLAG=1               ; * JMK11
               GOTO 425                  ; * ENTER ADDR CORR; * JMK11
            CASE QI='EX'                 ; * JMK11
               STOP                      ; * JMK11
            CASE QI=''                   ; * JMK11
               NULL                      ; * JMK11
         END CASE                        ; * JMK11
         IF Q>30000 THEN                 ; * JMK98
            HELP='Are you sure [Y]es'    ; * JMK98
            CALL GEN.IN(0,22,'Are you sure - ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)      ; * JMK98
            CC+=LEN(QI)+1 ; GOSUB PRINT.CC         ; * JMK98
            QI = OCONV(QI,'MCU')         ; * JMK98
            IF QI#'Y' THEN GO 427        ; * JMK98
         END                             ; * JMK98
         UPS.FEE.CHARGE = Q              ; * JMK11
*NPR034         CRT @(68,7):UPS.FEE.CHARGE'R26,':@(-4)    ; * JMK11
         CRT @(68,9):UPS.FEE.CHARGE'R26,':@(-4)    ; * JMK11   * NPR034
      END                                ; * IF CARRIER.ID='00041'; * JMK11

*----
* Enter pro date
*----
430: ***
      REJECTABLE = NOT(REJECT.FLAG = 'R' AND CHANGE.FLAG AND OLD.PRO.REC<1>='')
*     IF (AUDIT='Y' OR AUDIT='U') AND (AUDIT.TYPE[1,3]='LTL' OR AUDIT.TYPE='AIRBRN') THEN
      IF (AUDIT='Y' OR AUDIT='U' OR AUDIT='S') AND (AUDIT.TYPE[1,3]='LTL' OR AUDIT.TYPE='AIRBRN' OR (AUDIT.TYPE[1,2]='TL' AND USER # '')) THEN
         IF BACK.FLAG THEN
            IF CHANGE.FLAG THEN
               BACK.FLAG=0
               CHANGE.MODE=0
*           CALL ELINE('Cannot X back to Pro In "Change" Mode.  You must EX.')
*           CC+=1; GOSUB PRINT.CC
*              IF CARRIER.ID='00015' OR CARRIER.ID='00143' OR CARRIER.ID='00365' OR CARRIER.ID='04226' THEN    ; * JMK106
               IF CAPTURE.INVOICE THEN   ; * JMK106
                  GOTO 400
               END ELSE
                  IF CARRIER.ID='00041' THEN
*                    GOTO 425            ; * JMK11
                     GOTO 427            ; * JMK11
                  END ELSE
                     CHANGE.MODE=0
*DF                     IF SU.FLAG THEN GOSUB INITIALIZE.BILL.VARIABLES
                     IF SU.FLAG THEN
                        CALL ELINE('You cannot X back here')
                        STOP
                     END
                     GOSUB 8100
                     IF SU.FLAG THEN GOSUB 8200
                     GOTO 300
                  END
               END
            END ELSE
*              IF CARRIER.ID='00015' OR CARRIER.ID='00143' OR CARRIER.ID='00365' OR CARRIER.ID='04226' THEN    ; * JMK106
               IF CAPTURE.INVOICE THEN   ; * JMK106
                  IF INV.NUM='' THEN GOTO 400
                  GOTO 420
               END ELSE
*                 IF CARRIER.ID='00041' THEN GOTO 425        ; * JMK11
                  IF CARRIER.ID='00041' THEN GOTO 427        ; * JMK11
                  GOTO 390
               END
            END
         END
         GOTO 450
      END
      BACK.FLAG = 0
*JR   IF CHANGE.FLAG AND BILL.DATE # '' THEN

*NPR028 Start Changes
      IF DO.BOL.POP THEN
         DATE.POP.FLAG = BOL.POP.VER.ARR<1,15>
         IF DATE.POP.FLAG = 'Y' AND NOT(BACK.FLAG) THEN
            BILL.DATE = BOL.POP.VER.ARR<4,15>
         END
      END
*NPR028 End Changes

      IF BILL.DATE # '' THEN
         MASK = BILL.DATE'D2.'
      END ELSE
         MASK = 'MM/DD/YY'
      END
      HELP = "Enter Pro Date. [T]oday "
*     IF REJECTABLE THEN HELP:="[R]eject Pay "
*DF   IF REJECTABLE AND NOT(CHANGE.FLAG) THEN HELP:="[R]ejct Pay "
      IF REJECTABLE THEN HELP:="[R]ejct Pay "
      HELP:="[P]rnt Addr Ltr [X]=Bck [EX]it [L]=Car Ltr"
      IF CHANGE.FLAG ! BILL.DATE # '' THEN REQ = 0 ELSE REQ = 1
      CALL GEN.IN(5,7,MASK,'DATE',Q,REQ,8,'','',2,-8,7,0,QI,HELP,0,23)
      CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI = 'P'
            IF TRIM(PRO.ID) = "" THEN
               CALL ELINE("CALL TAMI - PRO ID IS NULL - CARRIER ADDRESS LETTER")
               CALL ELINE("CALL TAMI - PRO ID IS NULL - CARRIER ADDRESS LETTER")
               CALL ELINE("CALL TAMI - PRO ID IS NULL - CARRIER ADDRESS LETTER")
            END
            GOSUB PRINT.CARRIER.ADDRESS.LETTER
            GOTO 400

         CASE QI = 'L'
            GOSUB PROCESS.INQUIRE
            GOTO 300                     ; * ENTER PRO

*DF         CASE QI = 'R' AND REJECTABLE AND NOT(CHANGE.FLAG)
         CASE QI = 'R' AND REJECTABLE
* ; * JMK46
* Check carrier against list in REJ.CTRL.REC if there is one ; * JMK46
* ; * JMK46
            IF REJ.CTRL.REC#'' THEN      ; * JMK46
               LOCATE CARRIER.ID IN REJ.CTRL.REC<2> BY 'AL' SETTING REJ.CTRL.POS THEN      ; * JMK46
                  IF REJ.CTRL.REC<4,REJ.CTRL.POS>='' THEN    ; * Open end date ; * JMK46
                     IF DATE() GE REJ.CTRL.REC<3,REJ.CTRL.POS> THEN    ; * JMK46
                        CALL ELINE('Carrier ':CARRIER.ID:' cannot be rejected at this time.  ':TRIM(REJ.CTRL.REC<11,REJ.CTRL.POS>))          ; * JMK46
                        GOTO 430         ; * JMK46
                     END                 ; * JMK46
                  END ELSE               ; * JMK46
                     IF (DATE() GE REJ.CTRL.REC<3,REJ.CTRL.POS>) AND (DATE() LE REJ.CTRL.REC<4,REJ.CTRL.POS>) THEN       ; * JMK46
                        CALL ELINE('Carrier ':CARRIER.ID:' cannot be rejected at this time.  ':TRIM(REJ.CTRL.REC<11,REJ.CTRL.POS>))          ; * JMK46
                        GOTO 430         ; * JMK46
                     END                 ; * JMK46
                  END                    ; * JMK46
               END                       ; * JMK46
            END                          ; * JMK46
            IF NOT(REJECTION.ALTERED) THEN GOSUB INIT.REJECT.INFO
            RVIN='' ; RVOUT=''
            RVIN<1> = 'E'
            RVIN<2> = CARRIER.ID
            RVIN<3> = CLIENT.ID
            RVIN<4> = FIELD(PRO.ID,'*',2)
*DF         RVIN<5> = REJECT.FLAG
            RVIN<5> = 'R'
            RVIN<6> = BILL.DATE
            RVIN<7> = ACTUAL.CHG         ; * CARRIER.CHG
            RVIN<8> = REJ.TYPE
*           RVIN<9> = PRO.REC<37>
*           RVIN<9> = OLD.PRO.REC<37>
            CALL FB.2.1.REJECT.KED(RVIN, RVOUT, REJECT.REASONS, MAILING.ADDR)
            REJECT.FLAG = RVOUT<2>
            MULTI.PRO.ID = RVOUT<4>
            NUM.MULTI.PROS = DCOUNT(MULTI.PRO.ID<1>,@VM)
            MULTI.PRO.DATE = RVOUT<6>
            MULTI.PRO.CHG = RVOUT<7>
            MULTI.PRO.REJ = RVOUT<8>
            IF RVOUT<9>='Y' THEN
               PROC.DATE=''
*DAVID      IF DATE() LE CLIENT.REC(82) THEN
*DAVID        BILL.DATE=CLIENT.REC(82)+1
*DAVID      END ELSE
*DAVID        BILL.DATE=DATE()
*DAVID      END
            END
*           PROC.DATE = RVOUT<9>
            BILL.DATE = MULTI.PRO.DATE<1,1>
            ACTUAL.CHG = MULTI.PRO.CHG<1,1>
*DF         CARRIER.CHG = MULTI.PRO.CHG<1,1>
            IF CARRIER.CHG+0 = 0 THEN CARRIER.CHG=MULTI.PRO.CHG<1,1>
            REJ.TYPE = MULTI.PRO.REJ<1,1>
            GOSUB 8100                   ; * Redraw Screen Fields
            GOSUB 8200                   ; * Redraw Screen Data
            BEGIN CASE
               CASE RVOUT<1>='EX'
                  STOP
               CASE RVOUT<1>='X' OR REJECT.FLAG = ''
                  GOTO 400
            END CASE
            REJECTION.ALTERED = RVOUT<3>
            GOTO 4900

         CASE CHANGE.FLAG & QI = ''
            Q = BILL.DATE
         CASE QI = 'T'
            Q = DATE()
         CASE QI = 'X'
            CRT @(5,7):SPACE(8):
            IF CHANGE.FLAG=1 THEN
               CHANGE.MODE=0
*             CALL ELINE('Cannot X back to Pro In "Change" Mode.  You must EX')
*             CC+=1; GOSUB PRINT.CC
*              IF CARRIER.ID='00015' OR CARRIER.ID='00143' OR CARRIER.ID='00365' OR CARRIER.ID='04226' THEN GOTO 400     ; * JMK106
               IF CAPTURE.INVOICE THEN GOTO 400    ; * JMK106
*              IF CARRIER.ID='00041' THEN GOTO 425           ; * JMK11
               IF CARRIER.ID='00041' THEN GOTO 427           ; * JMK11
*DF               IF SU.FLAG THEN GOSUB INITIALIZE.BILL.VARIABLES
               IF SU.FLAG THEN
                  CALL ELINE('You cannot X-back here')
                  STOP
               END
               GOSUB 8100
               IF SU.FLAG THEN GOSUB 8200
               GOTO 300
            END
            BACK.FLAG = 1
*           IF CARRIER.ID='00015' OR CARRIER.ID='00143' OR CARRIER.ID='00365' OR CARRIER.ID='04226' THEN       ; * JMK106
            IF CAPTURE.INVOICE THEN      ; * JMK106
               IF INV.NUM='' THEN GOTO 400
               GOTO 420
            END ELSE
*              IF CARRIER.ID='00041' THEN GOTO 425           ; * JMK11
               IF CARRIER.ID='00041' THEN GOTO 427           ; * JMK11
            END
            GOTO 300                     ; * ENTER PRO
         CASE QI = 'EX'
            STOP
         CASE NOT(NUM(Q)) OR Q GT DATE() ! Q = ''
            CALL ELINE('ERROR - Invalid Date.')
            CC+=1 ; GOSUB PRINT.CC
            GOTO 400
      END CASE
      IF Q < DATE()-730 THEN
         CALL ELINE("Warning! Bill was shipped more than 2 years ago!")
         CC+=1
*       IF DATE()='12486' ELSE
*       GOTO 400
*       END
      END
      IF Q > DATE() THEN
         CALL ELINE("Error Bill date can't be in the future!")
         CC+=1
         GOTO 400
      END
      BILL.DATE = Q
      DUE.DATE=BILL.DATE+CARRIER.DAYS    ; * JMK41
*     IF NUM(CLIENT.DAYS) THEN           ; * JMK51; * JMK59
      IF NUM(CLIENT.DAYS) AND CARRIER.DAYS.OVERRIDE#'Y' THEN           ; * JMK51; * JMK59
         DUE.DATE=BILL.DATE+CLIENT.DAYS  ; * JMK51
         CCDAYS.ID=CLIENT.ID'R%5':'*':CARRIER.ID'R%5'        ; * JMK101
         READ CCDAYS.REC FROM F.CCDAYS,CCDAYS.ID THEN        ; * JMK101
            CCDAYS=CCDAYS.REC<1>         ; * JMK101
            DUE.DATE=BILL.DATE+CCDAYS    ; * JMK101
         END                             ; * JMK101
      END                                ; * JMK51
*     IF CLIENT.DAYS='C' THEN            ; * JMK64 ; * JMK101
*        CCDAYS.ID=CLIENT.ID'R%5':'*':CARRIER.ID'R%5'        ; * JMK64 ; * JMK101
*        READ CCDAYS.REC FROM F.CCDAYS,CCDAYS.ID THEN        ; * JMK64 ; * JMK101
*           CCDAYS=CCDAYS.REC<1>         ; * JMK64 ; * JMK101
*           DUE.DATE=BILL.DATE+CCDAYS    ; * JMK64 ; * JMK101
*        END                             ; * JMK64 ; * JMK101
*     END                                ; * JMK64 ; * JMK101
      IF CLIENT.REC(27)#'' AND BILL.DATE < CLIENT.REC(27) THEN
VERIFY.SELECTION: ***
         CRT @(0,21):"[YES] I understand that this bill is Earlier than Client Pre-Audit Start Date!"
         HELP="X=Change. EX=Exit. [YES]=Continue."
         CALL GEN.IN(0,22,'Enter selection please. ---','',Q,0,3,'','',0,-3,22,1,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI='X'
               CRT @(0,21):@(-3):
               GOTO 430
            CASE QI='EX'
               STOP
            CASE QI='YES'
               NULL
            CASE 1
               CALL ELINE('Invalid entry. Must be [X], [EX], or [YES].')
               GOTO VERIFY.SELECTION
         END CASE
         CRT @(0,21):@(-3):


*       CALL ELINE("WARNING!! Bill Date is Earlier than Client Pre-Audit Start Date!!!!")
*       CC+=1; GOSUB PRINT.CC
      END
      IF CLIENT.ID='00716' & BILL.DATE GE ICONV('12/01/94','D') THEN
         CALL ELINE('NO Dal-Tile After 12/01/94')
         CC+=1 ; GOSUB PRINT.CC
         GOTO 400
      END
*
* NPR05 - Cutoff Date for keying
*
      CUTOFF.DATE = CLIENT.REC(232)
      IF CUTOFF.DATE NE "" THEN
         IF BILL.DATE GE CUTOFF.DATE THEN
            CALL ELINE('No bills may be entered for this client starting ': OCONV(CUTOFF.DATE,"D2/"))
            CC+=1 ; GOSUB PRINT.CC
            GOTO 400
         END
      END
*
* NPR05
*
      CRT @(5,7):BILL.DATE'D2/'
      IF USER.TYPE = 'A' THEN GOTO 500

*---- Enter due date
450: ***

      IF CL.DUE.FLAG # 'Y' THEN
*DF         IF BACK.FLAG THEN GOTO 430 ELSE GOTO 500
         IF BACK.FLAG THEN
            GOTO 430
         END ELSE
*NPR033            GOTO 500
            IF CARRIER.ID # "00041" THEN GOTO 500  ; * NPR033
         END
      END
      BACK.FLAG = 0
      IF CHANGE.FLAG ! DUE.DATE # '' THEN
         MASK = DUE.DATE'D2.'
         IF NOT(CHANGE.FLAG) AND CARRIER.ID = "00041" THEN MASK = (BILL.DATE + 11) 'D2/'   ; * NPR033
      END ELSE
         MASK = DATE()'D2.'
         IF CARRIER.ID = "00041" THEN MASK = "MM/DD/YY"      ; * NPR033
      END
      CRT @(14,7):'Due'
      HELP = "Enter the Due Date. [T]=Today [X]=Back to Pro Date [EX]=Exit"
      IF CHANGE.FLAG ! DUE.DATE # '' THEN REQ = 0 ELSE REQ = 1
      CALL GEN.IN(18,7,MASK,'DATE',Q,REQ,8,'','',2,-8,7,0,QI,HELP,0,23)
      CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE CHANGE.FLAG & QI = ''
            Q = DUE.DATE
         CASE QI = 'T'
            Q = DATE()
         CASE QI = 'X'
            CRT @(18,7):@(-4):
            BACK.FLAG=1
            GOTO 400
         CASE QI = 'EX'
            STOP
         CASE NOT( NUM(Q) )
            GOTO 450
      END CASE
      DUE.DATE = Q
      CRT @(18,7):DUE.DATE'D2/'

*---- Enter inbound or outbound
500: ***
      IF (AUDIT='Y' OR AUDIT='U' OR AUDIT='S') AND (AUDIT.TYPE[1,3]='LTL' OR (AUDIT.TYPE[1,2]='TL' and USER # '')) THEN
*      IF (AUDIT='Y' OR AUDIT='U') AND AUDIT.TYPE[1,3]='LTL' THEN
         IF BACK.FLAG THEN GOTO 450      ; * Back into Audit Routine
* NPR019         IF CLIENT.ID='01127' OR CLIENT.ID='00761' OR CLIENT.ID='01596' OR CLIENT.ID='01721' THEN GOTO 1475
         IF CLIENT.ID='01127' OR CLIENT.ID='00761' OR CLIENT.ID='01596' OR CLIENT.ID='01721' OR CLIENT.ID='01763' THEN GOTO 1475   ; * NPR019
*        GOTO 600                        ; * JMK77
         GOTO 580                        ; * JMK77
      END
      BEGIN CASE
         CASE CL.IO.FLAG = 'I'
            IF BACK.FLAG THEN GOTO 450
            IN.OUT = 'I'
         CASE CL.IO.FLAG = 'O'
            IF BACK.FLAG THEN GOTO 450
            IN.OUT = 'O'
         CASE CL.IO.FLAG = 'T'
            IF BACK.FLAG THEN GOTO 450
            IN.OUT = 'T'
         CASE 1
            BACK.FLAG = 0
*NPR028 Start Changes
            IF DO.BOL.POP THEN
               INOUT.POP.FLAG = BOL.POP.VER.ARR<1,17>
               IF INOUT.POP.FLAG = 'Y' AND NOT(BACK.FLAG) THEN
                  IN.OUT = "O"
               END
            END
*NPR028 End Changes

            MASK = IN.OUT'L#2'
            HELP = 'Enter [I]Inbound [O]Outbound [T]Third Party [X]=Back to Date Entry [EX]=Exit'
            CALL GEN.IN(5,8,MASK,'',Q,0,2,'','',2,-2,8,0,QI,HELP,0,23)
            CC+=LEN(QI)+1 ; GOSUB PRINT.CC
            QI = OCONV(QI,'MCU')
            BEGIN CASE
               CASE CHANGE.FLAG & QI = ''
                  Q = IN.OUT
               CASE QI = 'X'
                  CRT @(5,8):' ':
                  BACK.FLAG = 1
                  GOTO 450
               CASE QI = 'EX'
                  STOP
               CASE QI = 1 ! QI = 'I'
                  Q = 'I'
               CASE QI = 0 ! QI = 'O'
                  Q = 'O'
               CASE QI = 3 ! QI = 'T'
                  Q = 'T'
               CASE QI = ''
                  IF IN.OUT # '' THEN Q = IN.OUT ELSE
                     CRT BELL:BELL
                     GOTO 500
                  END
               CASE 1
                  CRT BELL:BELL
                  GOTO 500
            END CASE
            IN.OUT = Q
      END CASE
      IF CLIENT.ID='10356' AND IN.OUT='T' THEN
         CALL ELINE('Bills Must Be Entered As Inbound Or Outbound For Alcon')
         GOTO 500
      END
      CRT @(5,8):IN.OUT

*CCCC      IF CLIENT.ID='01127' OR CLIENT.ID='00761' OR CLIENT.ID='01596' OR CLIENT.ID='01721' THEN
      IF CLIENT.ID='01127' OR CLIENT.ID='00761' OR CLIENT.ID='01596' OR CLIENT.ID='01721' OR CLIENT.ID='01763' THEN      ; * NPR019
         GOTO 1475
      END
      IF CLIENT.ID='01292' THEN
         GOTO 700
      END

*NPR029
      IF CLIENT.ID='01614' AND IN.OUT = "O" THEN
         GOTO 700
      END
*NPR029

*---- Enter User Fields

580: ***
      IF CLIENT.ID='01567' THEN
         GOTO 700
      END
*     IF CLIENT.REC(191)#'' THEN         ; * JMK49 ; * JMK78
      IF CLIENT.REC(191)#'' AND USER.TYPE # 'A' THEN         ; * JMK49 ; * JMK78
         UVIN=''                         ; * JMK49
         UVIN<1>=CLIENT.ID               ; * JMK49
         UVIN<2>=IN.OUT                  ; * JMK49
         UVIN<3>=CARRIER.ID              ; * JMK60
*NPR018 Start changes
*        IF CLIENT.ID='01323' OR CLIENT.ID='01324' OR CLIENT.ID='01326' THEN
         IF CLIENT.ID = '01324' THEN
            UFLDS = ''
            CALG.PRO.NO=FIELD(PRO.ID,'*',2)
            IF FIELD(CALG.PRO.NO,"/",2) NE "" THEN
               CALG.ORIG.PRO.ID = FIELD(PRO.ID,"*",1):"*":FIELD(CALG.PRO.NO,"/",1):"*":FIELD(PRO.ID,"*",3)
               READ CALG.ORIG.REC FROM F.HIST,CALG.ORIG.PRO.ID THEN
                  UFLDS<1> = CALG.ORIG.REC<183>    ; * Product ID
                  UFLDS<2> = CALG.ORIG.REC<184>    ; * Freight Terms
                  UFLDS<3> = CALG.ORIG.REC<185>    ; * Contract/Order #
*                  UFLDS<4> = CALG.ORIG.REC<186>        ;* Item #
                  UFLDS<5> = ORIG.ON.FILE<187>     ; * Mode
*                  UFLDS<6> = CALG.ORIG.REC<188>        ;* Mileage
               END
            END
         END
*NPR018 End Changes
         CALL FB.2.1.USER.FIELDS(UVIN,MAT CLIENT.REC,UFLDS)  ; * JMK49
         GOSUB 8100                      ; * JMK49
         GOSUB 8200                      ; * JMK49
      END                                ; * JMK49

*---- Enter division

600: ***

*IF USER = "NPRATT" THEN DEBUG

      IF DIVISION#'' AND USER.TYPE = 'A' THEN
         IF BACK.FLAG THEN
*DF           BACK.FLAG=0
            GOTO 500
         END
         GOTO 700
      END
      UNITY.TEST=0
      IF CLIENT.ID='01037' AND IN.OUT#'I' THEN UNITY.TEST=1
*DF   IF CL.DIV.FLAG = 'Y' AND CLIENT.ID # '00872' AND CLIENT.ID # '00883' AND CLIENT.ID # '00664' AND CLIENT.ID#'01037' THEN
      IF CL.DIV.FLAG = 'Y' AND CLIENT.ID # '00872' AND CLIENT.ID # '00883' AND CLIENT.ID # '00664' AND CLIENT.ID# '01457' AND NOT(UNITY.TEST) THEN     ; * BOH01 ; * NPR029
         BACK.FLAG = 0

* Checks the zips for a cross reference
         IF ZIP.DIV.XREF AND DIVISION = '' THEN
            CKECK.ZIP=''
            IF IN.OUT = 'O' THEN CHECK.ZIP = ORIG.ZIP
            IF IN.OUT = 'I' THEN CHECK.ZIP = DEST.ZIP
            IF IN.OUT = 'T' THEN CHECK.ZIP = ORIG.ZIP
            IF CHECK.ZIP#'' THEN
               READV DIVISION FROM F.ZIP.DIV.XREF,CHECK.ZIP,1 ELSE DIVISION=''
               DIV.COUNT = DCOUNT(DIVISION<1>,@VM)
               IF DIV.COUNT GT 1 THEN
                  CALL FB.2.1.GET.DIV(CHECK.ZIP,CLIENT.ID,DIVISION,"E",QI)
                  QI = OCONV(QI,'MCU')
                  GOSUB 8100
                  GOSUB 8200
                  IF QI = 'X' THEN
                     BACK.FLAG = 1
                     GOTO 500
                  END
                  GOTO CHECK.THIS.DIV
               END
            END
         END
         IF CLIENT.ID='00396' AND DIVISION='' THEN
            SND.DATA='00010' ; GOSUB SEND.DATA
         END
         IF CLIENT.ID='01029' AND DIVISION='' THEN
            SND.DATA='00004' ; GOSUB SEND.DATA
         END
         IF CLIENT.ID='01076' AND CARRIER.ID='00041' THEN
            BEGIN CASE
               CASE PRO[1,7]='758-270'
                  SND.DATA='00001'
                  GOSUB SEND.DATA
               CASE PRO[1,7]='756-898'
                  SND.DATA='00002'
                  GOSUB SEND.DATA
               CASE PRO[1,7]='921-430'
                  SND.DATA='00003'
                  GOSUB SEND.DATA
               CASE PRO[1,7]='337-778'
                  SND.DATA='00004'
                  GOSUB SEND.DATA
               CASE PRO[1,7]='711-326'
                  SND.DATA='00005'
                  GOSUB SEND.DATA
               CASE PRO[1,7]='728-832'
                  SND.DATA='00006'
                  GOSUB SEND.DATA
               CASE PRO[1,7]='3X7-580'
                  SND.DATA='00007'
                  GOSUB SEND.DATA
               CASE PRO[1,7]='386-186'
                  SND.DATA='00008'
                  GOSUB SEND.DATA
               CASE PRO[1,7]='V6V-336'
                  SND.DATA='00009'
                  GOSUB SEND.DATA
               CASE PRO[1,7]='788-W13'
                  SND.DATA='00010'
                  GOSUB SEND.DATA
               CASE PRO[1,7]='2RV-278'
                  SND.DATA='00012'
                  GOSUB SEND.DATA
            END CASE
         END
         IF CLIENT.ID='01023' AND CARRIER.ID='00041' THEN
            BEGIN CASE
               CASE PRO[1,7]='0EY-543'
                  SND.DATA='00015'
                  GOSUB SEND.DATA
            END CASE
         END
*DF        IF CLIENT.ID='10356' AND DIVISION='' AND CARRIER.ID='08180' THEN
*DF           SND.DATA='00002' ; GOSUB SEND.DATA
*DF        END
         IF CLIENT.ID='01221' AND CARRIER.ID='07580 ' AND DIVISION='' THEN
            SND.DATA='00455' ; GOSUB SEND.DATA
         END
         IF CLIENT.ID='01221' AND CARRIER.ID='15942 ' AND DIVISION='' THEN
            SND.DATA='00455' ; GOSUB SEND.DATA
         END

610:
*DF      IF CLIENT.ID='01127' THEN DIVISION=BOL[LEN(BOL)-1,2]
         IF CLIENT.ID='01127' THEN
            DIVISION=BOL[LEN(BOL)-1,2]
            IF NUM(DIVISION) THEN DIVISION='CO'
         END
         IF CLIENT.ID='01633' THEN
            IF IN.OUT='I' THEN
               DIVISION='00001'
            END ELSE
               DIVISION='00000'
            END
         END
         IF CLIENT.ID='01596' THEN
            BEGIN CASE
               CASE BOL=''
                  DIVISION=''
               CASE OCONV(BOL,'MCU')[1,3]='JDD'
                  DIVISION='00001'
               CASE NUM(BOL[1,1])
                  DIVISION='00002'
               CASE 1
                  DIVISION=''
            END CASE
         END


*&&&&&&
         IF CLIENT.ID='01721' AND IN.OUT='I' THEN
            BEGIN CASE
               CASE BOL[1,3]='613'
                  DIVISION='KC613'
               CASE BOL[1,3]='615'
                  DIVISION='CH615'
               CASE BOL[1,3]='616'
                  DIVISION='DA616'
               CASE BOL[1,3]='617'
                  DIVISION='HO617'
               CASE BOL[1,3]='618'
                  DIVISION='AL618'
               CASE BOL[1,3]='619'
                  DIVISION='DE619'
               CASE 1
                  DIVISION=''
            END CASE
         END
         IF CLIENT.ID='01567' AND IN.OUT='I' AND DIVISION='' THEN
            BEGIN CASE
               CASE BOL[1,2]='40'
                  DIVISION='00040'
               CASE BOL[1,2]='08'
                  DIVISION='00008'
               CASE BOL[1,2]='04'
                  DIVISION='00004'
               CASE BOL[1,2]='05'
                  DIVISION='00005'
               CASE BOL[1,2]='06'
                  DIVISION='00006'
               CASE BOL[1,2]='07'
                  DIVISION='00007'
               CASE BOL[1,2]='09'
                  DIVISION='00009'
               CASE BOL[1,2]='10'
                  DIVISION='00010'
               CASE BOL[1,2]='11'
                  DIVISION='00011'
               CASE BOL[1,2]='12'
                  DIVISION='00012'
               CASE 1
                  DIVISION=''
            END CASE
         END
*&&&&&&

*        IF CLIENT.ID='00761' AND IN.OUT='I' THEN  ; * JMK99 ; * JMK132
         IF CLIENT.ID='00761' THEN       ; * JMK99 ; * JMK132
*           IF DIVISION='' THEN          ; * JMK99 ; * JMK143
*              READV DIV.TEST FROM F.DIV.CODE.XREF,BOL,1 THEN          ; * JMK99 ; * JMK132
*              READ DIV.CODE.XREF.REC FROM F.DIV.CODE.XREF,BOL THEN    ; * JMK99 ; * JMK132 ; * JMK138
*                 IF IN.OUT=DIV.CODE.XREF.REC<2> THEN        ; * JMK132
*                    DIV.TEST=DIV.CODE.XREF.REC<1>'R%5'      ; * JMK132
*              READ BOL.REC FROM F.BOL.CRX,BOL THEN          ; * JMK99 ; * JMK132 ; * JMK138 ; * JMK143
*                 IF IN.OUT=BOL.REC<23> THEN       ; * JMK132 ; * JMK138 ; * JMK143
*                    DIV.TEST=BOL.REC<37>'R%5'     ; * JMK132 ; * JMK138 ; * JMK143
*                    SND.DATA=DIV.TEST   ; * JMK99 ; * JMK143
*                    GOSUB SEND.DATA     ; * JMK99 ; * JMK143
*                 END ELSE               ; * JMK132 ; * JMK143
*                    DIV.TEST='99999'    ; * JMK143
*                    SND.DATA=DIV.TEST   ; * JMK143
*                    GOSUB SEND.DATA     ; * JMK143
*                 END                    ; * JMK143
*              END ELSE                  ; * JMK99 ; * JMK143
*                 DIV.TEST='99999'       ; * JMK143
*                 SND.DATA=DIV.TEST      ; * JMK143
*                 GOSUB SEND.DATA        ; * JMK143
*              END                       ; * JMK143
            IF DIVISION='' OR DIVISION='99999' THEN          ; * JMK143
               TRACK.NO=' '              ; * JMK143
               REF=' '                   ; * JMK143
               IF CARRIER.ID='00015' OR CARRIER.ID='01075' THEN        ; * JMK143
                  READ EDI.HIST.REC FROM F.EDI.BILLS.HIST,PRO.ID THEN  ; * JMK143
                     REF=EDI.HIST.REC<9>           ; * JMK143
                     TRACK.NO=EDI.HIST.REC<135>    ; * JMK143
                  END                    ; * JMK143
               END                       ; * JMK143
               VIN=''                    ; * JMK143
               VIN<1>=DIVISION           ; * JMK143
               VIN<2>=PRO                ; * JMK143
               VIN<3>=TRACK.NO           ; * JMK143
               IF REF#' ' THEN           ; * JMK143
                  VIN<-1>=TRIM(REF)      ; * JMK143
               END                       ; * JMK143
               VIN<-1>=BOL               ; * JMK143
               IF NUM(BOL) AND LEN(BOL) < 9 AND IN.OUT='O' THEN        ; * JMK143
                  BOL=BOL'R%9'           ; * JMK143
                  VIN<-1>=BOL            ; * JMK143
               END                       ; * JMK143
               IF INDEX(BOL,'/',1) THEN  ; * JMK143
                  NPART=DCOUNT(BOL,'/')  ; * JMK143
                  FOR PART=1 TO NPART    ; * JMK143
                     BOL.PART=FIELD(BOL,'/',PART)  ; * JMK143
                     VIN<-1>=BOL.PART    ; * JMK143
                  NEXT PART              ; * JMK143
               END                       ; * JMK143
               IF INDEX(BOL,' ',1) THEN  ; * JMK143
                  NPART=DCOUNT(BOL,' ')  ; * JMK143
                  FOR PART=1 TO NPART    ; * JMK143
                     BOL.PART=FIELD(BOL,' ',PART)  ; * JMK143
                     VIN<-1>=BOL.PART    ; * JMK143
                  NEXT PART              ; * JMK143
               END                       ; * JMK143
               VOUT=''                   ; * JMK143
               CALL GET.00761.DIV(VIN,VOUT,F.BOL.CRX)        ; * JMK143
               SND.DATA=VOUT<1>          ; * JMK143
               GOSUB SEND.DATA           ; * JMK143
            END                          ; * JMK99
         END                             ; * JMK99
*DF      IF CLIENT.ID='01292' THEN
*DF         DIVISION=VC.CODE
*DF      END
         IF CL.DIV.FLAG ='Y' THEN
            NOT.ASK = 0
            IF USER.MODIFY = 0 AND BACK.FLAG THEN GOTO 1400
            VIN = CLIENT.ID
            IF CL.EXP.FLAG = 'Y' AND EXP.CODE #'' THEN
               VIN<2> = EXP.CODE
            END
            VIN<4> = CARRIER.ID
            VIN<5> = CARRIER.NAME
            VIN<6> = CARRIER.MODE        ; * Transportation Mode
            VIN<7> = IN.OUT
            VIN<8> = VC.CODE
            VIN<9> = VC.DESC
            VIN<10> = ORIG.ZIP
            VIN<11> = ORIG.STATE
            VIN<12> = DEST.ZIP
            VIN<13> = DEST.STATE
            VIN<14> = 'DEFAULT'
            VIN<15> = DIVISION
            VIN<16> = BACK.FLAG
            VIN<17> = ''                 ; * USED FOR EDI
            VIN<18> = BOL                ; * Only user for Daws (01084) right now Alcon division 5 and (10225) R & M and (01163) MD Building and (01196) JM CLipper for division 1 and (01202) Lowen and (01225) May & Company and (01240) Isco Inc and (01000) Qualico and (00984) Orschelin and (01361) Fairbanks Morse and (01320) Precision Kidd and (01305) Future Metals (01285) Solideal Tire (01472) Rexel-Rocky Mountain Division (01491) Form + Surface (01488) Green Light or (01525) REMCO (01554) Power and Pumps
            VIN<19> = BILL.DATE
*           IF CARRIER.ID='00015' OR CARRIER.ID='00143' OR CARRIER.ID='00365' OR CARRIER.ID='04226' THEN       ; * JMK106
            IF CAPTURE.INVOICE THEN      ; * JMK106
               VIN<20>=INV.NUM
            END
            VIN<22>=VC.ID
            VIN<23>=PRO
            FOR UATT=1 TO 6              ; * JMK49
               VIN<23+UATT>=UFLDS<UATT>  ; * JMK49
            NEXT UATT                    ; * JMK49
            VIN<30>=VC.TYPE
            BACK.FLAG = 0
            NOT.ASK = 0
            CALL GET.DIVISION(VIN,VOUT)
            DIVISION = VOUT<1>
            IF DIVISION = 'EX' OR DIVISION = 'ex' THEN STOP
            USER.MODIFY = VOUT<2>
            IF USER.MODIFY = 0 THEN
               VER.CODE='E' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
            END
            NOT.ASK = VOUT<3>
            ERROR.MESSAGE = VOUT<5>
            IF ERROR.MESSAGE #'' THEN
               CALL ELINE(ERROR.MESSAGE)
            END
            MASK = VOUT<6>
            CRT @(5,9):DIVISION
         END
         IF CLIENT.ID='01338' THEN       ; * JMK49
            IF UFLDS<1>#'' THEN          ; * JMK49
               DIV.PFX=OCONV(UFLDS<1>[1,1],'MCU')  ; * JMK49
               BEGIN CASE                ; * JMK49
                  CASE DIV.PFX='P'       ; * JMK49
                     DIVISION=1'R%5'     ; * JMK49
                  CASE DIV.PFX='W'       ; * JMK49
                     DIVISION=2'R%5'     ; * JMK49
                  CASE DIV.PFX='R'       ; * JMK49
                     DIVISION=3'R%5'     ; * JMK49
                  CASE DIV.PFX='N'       ; * JMK49
                     DIVISION=4'R%5'     ; * JMK49
                  CASE DIV.PFX='C' OR DIV.PFX='D' OR DIV.PFX='T'       ; * JMK49
                     DIVISION=7'R%5'     ; * JMK49
                  CASE DIV.PFX='J'       ; * JMK49
                     DIVISION=11'R%5'    ; * JMK49
                  CASE DIV.PFX='E'       ; * JMK49
                     DIVISION=12'R%5'    ; * JMK49
                  CASE DIV.PFX='I'       ; * JMK49
                     DIVISION=14'R%5'    ; * JMK49
                  CASE DIV.PFX='B'       ; * JMK49
                     DIVISION=15'R%5'    ; * JMK49
                  CASE DIV.PFX='F'       ; * JMK49
                     DIVISION=16'R%5'    ; * JMK49
                  CASE DIV.PFX='V'       ; * JMK49
                     DIVISION=18'R%5'    ; * JMK49
                  CASE DIV.PFX='L'       ; * JMK49
                     DIVISION=20'R%5'    ; * JMK49
                  CASE DIV.PFX='A'       ; * JMK49
                     DIVISION=23'R%5'    ; * JMK49
                  CASE DIV.PFX='M'       ; * JMK49
                     DIVISION='26M''R%5'           ; * JMK49
                  CASE DIV.PFX='K'       ; * JMK49
                     DIVISION=28'R%5'    ; * JMK49
                  CASE DIV.PFX='G'       ; * JMK49
                     DIVISION=30'R%5'    ; * JMK49
                  CASE DIV.PFX='H'       ; * JMK49
                     DIVISION=31'R%5'    ; * JMK49
                  CASE DIV.PFX='Z'       ; * JMK49
                     DIVISION=32'R%5'    ; * JMK49
                  CASE DIV.PFX='Y'       ; * JMK49
                     DIVISION=33'R%5'    ; * JMK49
                  CASE DIV.PFX='Q'       ; * JMK49
                     DIVISION=34'R%5'    ; * JMK49
                  CASE DIV.PFX='O'       ; * JMK49
                     DIVISION=35'R%5'    ; * JMK49
                  CASE DIV.PFX='U'       ; * JMK49
                     DIVISION=37'R%5'    ; * JMK49
                  CASE DIV.PFX='X'       ; * JMK49
                     DIVISION=38'R%5'    ; * JMK49
               END CASE                  ; * JMK49
            END                          ; * JMK49
         END                             ; * JMK49
         IF CLIENT.ID='01597' THEN
            IF UFLDS<1>#'' THEN
               DIVISION=UFLDS<1>[3,4]'R%5'
            END
         END
         MASK = DIVISION:STR('#',5-LEN(DIVISION))
         HELP = 'Enter Division. '
         IF REJECTABLE THEN HELP:="[R]ejct Pay "
         HELP := ' [X]=Back [EX]=Exit'
         IF CLIENT.ID='00866' THEN PREV.DIVISION=DIVISION
         IF CLIENT.ID='01311' OR CLIENT.ID='01460' THEN
            MASK = DIVISION:STR('#',20-LEN(DIVISION))
            HELP = 'Enter BOL/PO. '
            IF REJECTABLE THEN HELP:="[R]ejct Pay "
            HELP := ' [X]=Back [EX]=Exit'
            CALL GEN.IN(5,9,MASK,'',Q,0,20,'','',2,-20,9,0,QI,HELP,0,23)
         END ELSE
            IF CLIENT.ID='01638' THEN
               CALL GEN.IN(5,9,MASK,'',Q,0,6,'','',2,-6,9,0,QI,HELP,0,23)
            END ELSE
               CALL GEN.IN(5,9,MASK,'',Q,0,5,'','',2,-5,9,0,QI,HELP,0,23)
            END
         END
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC
         QI = OCONV(QI,'MCU')
         Q = OCONV(Q,'MCU')
         BEGIN CASE
            CASE QI = 'X'
               CRT @(5,9):'                    '
               BACK.FLAG = 1
               GOTO 500
            CASE QI = 'EX'
               STOP
            CASE QI = 'R' AND REJECTABLE
               IF NOT(REJECTION.ALTERED) THEN GOSUB INIT.REJECT.INFO
               RVIN='' ; RVOUT=''
               RVIN<1> = 'E'
               RVIN<2> = CARRIER.ID
               RVIN<3> = CLIENT.ID
               RVIN<4> = FIELD(PRO.ID,'*',2)
*DF            RVIN<5> = REJECT.FLAG
               RVIN<5> = 'R'
               RVIN<6> = BILL.DATE
               RVIN<7> = ACTUAL.CHG      ; * CARRIER.CHG
               RVIN<8> = REJ.TYPE
*               RVIN<9> = PRO.REC<37>
*               RVIN<9> = OLD.PRO.REC<37>
               CALL FB.2.1.REJECT.KED(RVIN, RVOUT, REJECT.REASONS, MAILING.ADDR)
               REJECT.FLAG = RVOUT<2>
               MULTI.PRO.ID = RVOUT<4>
               NUM.MULTI.PROS = DCOUNT(MULTI.PRO.ID<1>,@VM)
               MULTI.PRO.DATE = RVOUT<6>
               MULTI.PRO.CHG = RVOUT<7>
               MULTI.PRO.REJ = RVOUT<8>
               IF RVOUT<9>='Y' THEN
                  PROC.DATE=''
*DAVID           IF DATE() LE CLIENT.REC(82) THEN
*DAVID             BILL.DATE=CLIENT.REC(82)+1
*DAVID           END ELSE
*DAVID             BILL.DATE=DATE()
*DAVID           END
               END
*              PROC.DATE = RVOUT<9>
               BILL.DATE = MULTI.PRO.DATE<1,1>
               ACTUAL.CHG = MULTI.PRO.CHG<1,1>
*DF            CARRIER.CHG = MULTI.PRO.CHG<1,1>
               IF CARRIER.CHG+0 = 0 THEN CARRIER.CHG=MULTI.PRO.CHG<1,1>
               REJ.TYPE = MULTI.PRO.REJ<1,1>
               GOSUB 8100                ; * Redraw Screen Fields
               GOSUB 8200                ; * Redraw Screen Data
               BEGIN CASE
                  CASE RVOUT<1>='EX'
                     STOP
                  CASE RVOUT<1>='X' OR REJECT.FLAG = ''
                     GOTO 400
               END CASE
               REJECTION.ALTERED = RVOUT<3>
               GOTO 4900

            CASE QI = ''
               Q = DIVISION
         END CASE
         IF DIVISION='-' AND Q#DIVISION THEN
            LOCATE 'DIV' IN MISSING.DATA<1> SETTING MISSING.POS THEN
               DEL MISSING.DATA<1,MISSING.POS>
            END
         END
         IF Q='-' THEN
            DIVISION=Q
         END ELSE
            IF CLIENT.ID='01014' THEN
               BEGIN CASE
                  CASE Q='1'
                     Q='TU'
                  CASE Q='2'
                     Q='DE'
                  CASE Q='3'
                     Q='DA'
                  CASE Q='4'
                     Q='LR'
                  CASE Q='5'
                     Q='OC'
               END CASE
            END
            IF CLIENT.ID='01261' THEN
               BEGIN CASE
                  CASE Q='1'
                     Q='D'
                  CASE Q='2'
                     Q='F'
                  CASE Q='3'
                     Q='S'
               END CASE
            END
            IF CLIENT.ID='01508' THEN
               BEGIN CASE
                  CASE Q='1'
                     Q='KCS'
                  CASE Q='2'
                     Q='OKO'
                  CASE Q='3'
                     Q='OKT'
                  CASE Q='4'
                     Q='SPM'
                  CASE Q='5'
                     Q='STI'
                  CASE Q='6'
                     Q='WIC'
               END CASE
            END
            IF (CLIENT.ID='01311' OR CLIENT.ID='01460') AND Q#'' THEN
               IF Q[5,1]#'-' THEN        ; * JMK135
                  CALL ELINE('Enter Division-BOL format')    ; * JMK135
                  GO 600                 ; * JMK135
               END                       ; * JMK135
               IF CL.BOL.CRX.FLAG = 'Y' THEN       ; * JMK135
                  READ TEMP FROM F.BOL.CRX,Q THEN  ; * JMK135
                     IF TEMP<10>#'' THEN           ; * JMK135
                        CALL ELINE('BOL already applied against PRO ':TEMP<11>:'*':TEMP<10>:'*0')    ; * JMK135
*DF                        IF USER#'ASMITH' AND USER#'SMICHALIK' AND USER#'MYRA' AND USER#'MARY' AND USER#'KCHAUVIN' AND USER#'BRODGERS' AND USER#'DAVID' THEN        ; * JMK135
                        BEGIN CASE
*                          CASE USER='ASMITH'      ; * JMK179
                           CASE USER='SMICHALIK'
                           CASE USER='MYRA'
                           CASE USER='MARY'
*                          CASE USER='KCHAUVIN'    ; * JMK179
*                          CASE USER='BRODGERS'    ; * JMK179
                           CASE USER='DTAYLOR'     ; * Ticket 082298 DRF 10/10/08
*                          CASE USER='DFRAASE'
                           CASE USER='DAVID'
                           CASE USER='SGARVIN' AND CLIENT.ID='01311'
                           CASE USER='AWILLIAMS' AND CLIENT.ID='01311'
                           CASE USER='CSTEVENS' AND CLIENT.ID='01311'
                           CASE USER='SMICHALIK' AND CLIENT.ID='01311'
                           CASE USER='SGARVIN' AND CLIENT.ID='01311' AND TODAY > "14427" AND TODAY < "14470"
                           CASE USER='SGARVIN' AND CLIENT.ID='01311' AND TODAY > "14427" AND TODAY < "14433"
                           CASE USER='AWILLIAMS' AND CLIENT.ID='01460'           ; * JMK179
                           CASE 1
                              GO 600     ; * JMK135
                        END CASE
*DF                        END              ; * JMK135
                     END                 ; * JMK135
                  END ELSE               ; * JMK135
                     IF IN.OUT='O' THEN  ; * JMK135
                        CALL ELINE('BOL not received from client. Send to client for approval.')     ; * JMK135
*DF                        IF USER#'SMICHALIK' AND USER#'SGARVIN' AND USER#'ASMITH' AND USER#'SMICHALIK' AND USER#'MYRA' AND USER#'MARY' THEN     ; * JMK135
                        BEGIN CASE
*                          CASE USER='ASMITH'      ; * JMK179
                           CASE USER='SMICHALIK'
                           CASE USER='MYRA'
                           CASE USER='MARY'
                           CASE USER='SGARVIN'
                           CASE USER='AWILLIAMS' AND CLIENT.ID='01311'
                           CASE USER='CSTEVENS' AND CLIENT.ID='01311'
                           CASE USER='SMICHALIK'
                           CASE USER='AWILLIAMS' AND CLIENT.ID='01311'           ; * JMK179
                           CASE USER='AWILLIAMS' AND CLIENT.ID='01460'           ; * JMK179
                           CASE 1
                              GO 600     ; * JMK135
                        END CASE         ; * JMK135
                     END                 ; * JMK135
                  END                    ; * JMK135
               END                       ; * JMK135
               BOL=Q
               IF Q[1,4]='8331' OR Q[1,4]='8332' THEN
*                 Q=Q[2,5]               ; * JMK135
                  Q=Q[2,3]:Q[6,2]        ; * JMK135
               END ELSE
                  Q=Q[1,4]
               END
            END
            IF CLIENT.ID='01084' THEN
               IF Q#'' THEN
                  DIVISION = Q'R%5'
               END ELSE
                  DIVISION =''
               END
            END ELSE
               IF CLIENT.ID='01638' THEN
                  DIVISION = Q'R%6'
               END ELSE
                  DIVISION = Q'R%5'
               END
            END
*KM 2/25/04 FACTORY BUILDER STORES
            IF CLIENT.ID = '01209' THEN
*DF               GOTO 700
            END
         END
CHECK.THIS.DIV: ***
         IF CLIENT.ID='00908' THEN
            MATREAD DIV.REC FROM F.DIV,DIVISION THEN
               IF DIV.REC(8)#'' THEN
                  DIVISION=DIV.REC(8)'R%5'
                  GOTO CHECK.THIS.DIV
               END
            END
         END
         IF CLIENT.ID='00866' THEN
            IF DIVISION # PREV.DIVISION THEN
               EXP.CODE=''               ; * Reset Expense Code on Division Change
            END
         END
         IF CLIENT.ID='10356' THEN
            IF DIVISION='00005' THEN
               CL.BOL.FLAG='Y'
            END ELSE
*DF               IF DIVISION='00006' AND CARRIER.ID='00015' THEN
               IF (DIVISION='00006' AND CARRIER.ID='00015') OR (DIVISION='00002' AND (CARRIER.ID='00015' OR CARRIER.ID='01075' OR CARRIER.ID='00143' OR CARRIER.ID='00365')) THEN
                  CL.BOL.FLAG='Y'
               END ELSE
                  CL.BOL.FLAG=ORIG.CL.BOL.FLAG
               END
            END
         END
         IF CLIENT.ID='01567' THEN
            IF DIVISION='00097' AND IN.OUT#'I' THEN
               CALL ELINE('Cannot have division of 00097 for mode of ':IN.OUT)
               GOTO 600
            END
*DF           IF DIVISION='00004' AND IN.OUT='I' THEN
*DF             CALL ELINE('Cannot have a division of 00004 for mode of ':IN.OUT)
*DF             GOTO 600
*DF           END
         END
         CRT @(5,9):DIVISION:'               '
         IF DIVISION='-' THEN
            LOCATE 'DIV' IN MISSING.DATA<1> SETTING MISSING.POS ELSE
               MISSING.DATA<1,-1>='DIV'
            END
            GOTO 700
         END
**************************************************************
*IF USER = "NPRATT" THEN DEBUG
         MATREAD DIV.REC FROM F.DIV, DIVISION ELSE
            IF ZIP.DIV.XREF THEN
               CHECK.ZIP = DIVISION
               READV DIVISION FROM F.ZIP.DIV.XREF,DIVISION,1 THEN
                  DIV.COUNT = DCOUNT(DIVISION<1>,@VM)
                  IF DIV.COUNT GT 1 THEN
                     CALL FB.2.1.GET.DIV(CHECK.ZIP,CLIENT.ID,DIVISION,"E",QI)
                     GOSUB 8100
                     GOSUB 8200
                     IF QI = 'X' THEN
                        BACK.FLAG = 1
                        GOTO 500
                     END
                     GOTO CHECK.THIS.DIV
                  END ELSE
                     GOTO CHECK.THIS.DIV
                  END
               END
            END
            CALL ELINE("ERROR - Division ":DIVISION:" not on file.")
            CC+=1 ; GOSUB PRINT.CC
            GOTO 610
         END
         IF DIV.REC(7)='I' THEN
            CALL ELINE("ERROR - Division ":DIVISION:" is Inactive - Cannot use.")
            CC+=1 ; GOSUB PRINT.CC
            GOTO 610
         END
         IF CLIENT.ID='01292' THEN GOTO 1297
         IF CLIENT.ID='01567' THEN GOTO 1297
         IF CLIENT.ID='01338' THEN DIV.ZIP=''
         IF (AUDIT='Y' OR AUDIT='U' OR AUDIT='S') AND (AUDIT.TYPE[1,3]='LTL' OR (AUDIT.TYPE[1,2]='TL' AND USER #'')) ELSE
*         IF (AUDIT='Y' OR AUDIT='U') AND AUDIT.TYPE[1,3]='LTL' ELSE
            ZIP.VAR = DIV.ZIP
            CALL FB.READ.ZIP(ZIP.VAR,CITY,STATE)
            IF CL.DIV.ZIP.OVER # 'Y' AND IN.OUT#"T" THEN
               IF CITY = '' ! STATE = '' THEN
                  CALL ELINE('Zip ':DIV.ZIP:' is bad in Division Code ':DIVISION:'.')
                  CC+=1 ; GOSUB PRINT.CC
                  GOTO 600
               END
               IF IN.OUT = 'O' THEN CITY.LINE=10 ELSE CITY.LINE=11
               IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN      ; * UPS
                  CRT @(5,CITY.LINE):'99999 UPS, ZZ':@(-4):
               END ELSE
                  IF CARRIER.ID='01075' THEN
                     CRT @(5,CITY.LINE):'99999 FedEx Ground, ZZ':@(-4):
                  END ELSE
                     IF LEN(DIV.ZIP)=6 THEN        ; * JMK113
                        CRT @(5,CITY.LINE):DIV.ZIP'L#6':' ':CITY:', ':STATE:@(-4):         ; * JMK113
                     END ELSE            ; * JMK113
                        CRT @(5,CITY.LINE):DIV.ZIP'R%5':' ':CITY:', ':STATE:@(-4):
                     END                 ; * JMK113
                  END
               END
            END
            BEGIN CASE
               CASE IN.OUT='O'
                  ORIG.ZIP = DIV.ZIP
                  ORIG.CITY = CITY
                  ORIG.STATE = STATE
                  IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN   ; * Default for UPS
                     ORIG.ZIP='99999'
                     ORIG.CITY='UPS'
                     ORIG.STATE='ZZ'
                  END
                  IF CARRIER.ID='01075' THEN       ; * Default for FedEx Ground
                     ORIG.ZIP='99999'
                     ORIG.CITY='FedEx Ground'
                     ORIG.STATE='ZZ'
                  END

*NPR025 Start changes
                  IF CLIENT.ID = '01334' AND CARRIER.ID = '14657' THEN
                     ORIG.ZIP = '60633'
                     ORIG.CITY='Chicago'
                     ORIG.STATE='IL'
                     IF ORIG.CITY # '' THEN
                        DESC = ORIG.CITY:', ':ORIG.STATE
                     END ELSE
                        DESC = ORIG.STATE
                     END
                     CRT @(5,10):ORIG.ZIP ZIP.MASK:' ':DESC:@(-4)
                  END
*NPR025 End changes

                  IF CL.DIV.ZIP.OVER # "Y" THEN GOTO 800     ; * Skip to Dest
               CASE IN.OUT='I'
                  DEST.ZIP = DIV.ZIP
                  DEST.CITY = CITY
                  DEST.STATE = STATE
                  IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN   ; * Default for UPS
                     DEST.ZIP='99999'
                     DEST.CITY='UPS'
                     DEST.STATE='ZZ'
                  END
                  IF CARRIER.ID='01075' THEN       ; * Default for FedEx Ground
                     DEST.ZIP='99999'
                     DEST.CITY='FedEx Ground'
                     DEST.STATE='ZZ'
                  END
               CASE IN.OUT='T'
                  NULL
            END CASE
         END
      END ELSE
         IF BACK.FLAG THEN GOTO 500
      END
      IF CLIENT.ID = '01042' AND CARRIER.ID = '12181' AND ORIG.ZIP='' THEN
         ORIG.ZIP = '07305'
         ORIG.CITY = 'Jersey City'
         ORIG.STATE = 'NJ'
         DEST.ZIP = '07305'
         DEST.CITY = 'Jersey City'
         DEST.STATE = 'NJ'
      END
      IF CLIENT.ID = '01042' AND CARRIER.ID = '12147' AND ORIG.ZIP='' THEN
         ORIG.ZIP = '90280'
         ORIG.CITY='South Gate'
         ORIG.STATE='CA'
         DEST.ZIP = '90280'
         DEST.CITY='South Gate'
         DEST.STATE='CA'
      END
*NPR025 Start changes
*      IF USER = "NPRATT" THEN
*      IF CLIENT.ID = '01334' AND CARRIER.ID = '14657' AND ORIG.ZIP='' THEN
*         ORIG.ZIP = '60633'
*         ORIG.CITY='Chicago'
*         ORIG.STATE='IL'
*      END
*      END
*NPR025 End changes
      IF CLIENT.ID='01567' THEN GOTO 1297

*---- Enter origin zip
700: ***
      IF USER='DAVID' THEN CALL ELINE('PRESS BREAK-ZIP CODE SCREEN')
      IF CLIENT.ID#'00574' THEN
         IF (AUDIT='Y' OR AUDIT='U' OR AUDIT='S') AND (AUDIT.TYPE[1,3]='LTL' OR (AUDIT.TYPE[1,2]='TL' AND USER # '')) THEN
            IF BACK.FLAG THEN GOTO 600
            GOTO 800
         END
      END ELSE
         IF USER.TYPE='A' THEN
            IF BACK.FLAG THEN GOTO 600
            GOTO 800
         END
      END

*NPR028 Start Changes
      IF DO.BOL.POP THEN
         ORIG.ZIP.POP.FLAG = BOL.POP.VER.ARR<1,7>
         IF ORIG.ZIP.POP.FLAG = 'Y' AND NOT(BACK.FLAG) THEN
            ORIG.ZIP = BOL.POP.VER.ARR<4,7>
            IF NUM(ORIG.ZIP) AND LEN(ORIG.ZIP) LT 5 THEN ORIG.ZIP = ORIG.ZIP "R%5"
            DATA ORIG.ZIP
         END
      END
*NPR028 End Changes

      BEGIN CASE
         CASE CL.ZIP.RTE = 'Y'
            IF ZIP.ARR = '' THEN
               IF ORIG.ZIP # '' THEN
                  ZIP.ARR<1,1> = ORIG.ZIP
                  ZIP.ARR<2,1> = ORIG.CITY
                  ZIP.ARR<3,1> = ORIG.STATE
               END
               IF DEST.ZIP # '' AND CLIENT.ID#'00574' THEN
                  ZIP.ARR<1,50> = DEST.ZIP
                  ZIP.ARR<2,50> = DEST.CITY
                  ZIP.ARR<3,50> = DEST.STATE
               END
            END
            IF CLIENT.ID = "00574" AND IN.OUT='O' THEN
               CALL FB.2.1.ZIP.00574(ZIP.ARR,F.CLIENTS.CUST,F.EXP,QI)
               NUM.OF.ITEM=DCOUNT(ZIP.ARR<6>,@VM)
               EXP.CODE=ZIP.ARR<6,NUM.OF.ITEM>
            END ELSE
               ZIP.ARR<4>=''
               ZIP.ARR<5>=''
               ZIP.ARR<6>=''
               CALL FB.2.1.ZIP( ZIP.ARR,QI)
            END
            ORIG.ZIP = ZIP.ARR<1,1>
            ORIG.CITY = ZIP.ARR<2,1>
            ORIG.STATE = ZIP.ARR<3,1>
            NUM.ZIPS = DCOUNT( ZIP.ARR<1>, @VM )
            DEST.ZIP = ZIP.ARR<1,NUM.ZIPS>
            DEST.CITY = ZIP.ARR<2,NUM.ZIPS>
            DEST.STATE = ZIP.ARR<3,NUM.ZIPS>
            IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN         ; * Default for UPS
               ORIG.ZIP='99999'
               ORIG.CITY='UPS'
               ORIG.STATE='ZZ'
               DEST.ZIP='99999'
               DEST.CITY='UPS'
               DEST.STATE='ZZ'
            END
            IF CARRIER.ID='01075' THEN   ; * Default for FedEx Ground
               ORIG.ZIP='99999'
               ORIG.CITY='FedEx Ground'
               ORIG.STATE='ZZ'
               DEST.ZIP='99999'
               DEST.CITY='FedEx Ground'
               DEST.STATE='ZZ'
            END
            IF QI = 'X' THEN
               BACK.FLAG = 1
               GOTO 600
            END
            GOTO 900
         CASE CL.ORIG.FLAG = 'Y'
            IF CL.ZIP.DEF<1,1> # '' THEN
               IF IN.OUT = 'O' & NOT(BACK.FLAG) THEN SND.DATA=CL.ZIP.DEF<1,1> ; GOSUB SEND.DATA
            END
            HELP = "Enter the Origination Zip Code. [S]=Search [X]=Back [EX]=Exit"
            VIN=0                        ; * Starting Zip Character Count
            VIN<3>=LAST.ORIG.ZIP
            VIN<4>=LAST.ORIG.CITY
            VIN<5>=LAST.ORIG.STATE
            VOUT=''
            IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN         ; * Default for UPS
               ORIG.ZIP='99999'
               ORIG.CITY='UPS'
               ORIG.STATE='ZZ'
            END
            IF CARRIER.ID='01075' THEN   ; * Default for FedEx Ground
               ORIG.ZIP='99999'
               ORIG.CITY='FedEx Ground'
               ORIG.STATE='ZZ'
            END

*NPR020 Start Changes

            VIN<7> = COUNTRY.LIST<1>     ; * Origination Country code
            VIN<8> = CLIENT.ID
            VIN<9> = CARRIER.ID
            CALL FB.2.1.CSZ.NEW(VIN,VOUT,10,ORIG.ZIP,HELP,ZIP.LEN,BACK.FLAG,ORIG.CITY,ORIG.STATE)    ; * ZZ USE .NEW VERSION
            COUNTRY.LIST<1> = VOUT<2>

*NPR020 End Changes


            IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN         ; * Force for UPS
               ORIG.ZIP='99999'
               ORIG.CITY='UPS'
               ORIG.STATE='ZZ'
            END
            IF CARRIER.ID='01075' THEN   ; * Force for FedEx Ground
               ORIG.ZIP='99999'
               ORIG.CITY='FedEx Ground'
               ORIG.STATE='ZZ'
            END
            IF CLIENT.ID='00841' AND CARRIER.ID='00030' AND IN.OUT='O' AND ORIG.ZIP='67101' THEN
               ORIG.ZIP='67107'
               ORIG.CITY='Moundridge'
               ORIG.STATE='KS'
            END
            CC+=VOUT<1> ; GOSUB PRINT.CC
            IF HELP = 'S' ! HELP = '' THEN
               GOSUB 8100                ; * Display screen
               GOSUB 8200                ; * Display data
            END
            IF BACK.FLAG THEN GOTO 600
            IF ORIG.CITY # '' THEN
               DESC = ORIG.CITY:', ':ORIG.STATE
            END ELSE
               DESC = ORIG.STATE
            END
            LAST.ORIG.ZIP=ORIG.ZIP
            LAST.ORIG.CITY=ORIG.CITY
            LAST.ORIG.STATE=ORIG.STATE
            CRT @(5,10):ORIG.ZIP ZIP.MASK:' ':DESC:@(-4)

*NPR020 Start Changes
            IF COUNTRY.LIST<1,1> EQ "" THEN
               CRT @(5,10):ORIG.ZIP ZIP.MASK:' ':DESC:@(-4)
            END ELSE
               ORIG.COUNTRY.CD = COUNTRY.LIST<1,1>
               ORIG.COUNTRY.NAME = OCONV(COUNTRY.LIST<1,2>,"MCT")
*               CRT @(5,10):ORIG.ZIP ZIP.MASK:" ":ORIG.COUNTRY.NAME:@(-4)
               CRT @(5,10):ORIG.ZIP ZIP.MASK:' ':OCONV(DESC,"MCT"):" (":ORIG.COUNTRY.CD:")":@(-4)
            END
*NPR020 End Changes

            IF CLIENT.ID = '01209' THEN GOTO 800   ; * CHECK FOR FACTORY BUILDERS KM 2/25/04
            IF CLIENT.ID = '01283' THEN GOTO 800   ; * CHECK FOR SRI
            IF CLIENT.ID = '01567' THEN GOTO 800
            IF CL.DIV.FLAG = 'Y' & NOT(BACK.FLAG) THEN
*DF               IF CL.DIV.ZIP.OVER = 'Y' OR IN.OUT = 'T' ELSE GOTO 900
            END
         CASE BACK.FLAG
            GOTO 600
         CASE 1
            NULL
      END CASE

*---- Enter destination zip
800: ***
      IF CLIENT.ID#'00574' THEN
         IF (AUDIT='Y' OR AUDIT='U' OR AUDIT='S') AND (AUDIT.TYPE[1,3]='LTL' OR (AUDIT.TYPE[1,2]='TL' AND USER # '')) THEN
            IF BACK.FLAG THEN GOTO 700
            GOTO 900
         END
      END ELSE
         IF USER.TYPE='A' THEN
            IF BACK.FLAG THEN GOTO 700
            GOTO 900
         END
      END

*NPR028 Start Changes
      IF DO.BOL.POP THEN
         DEST.ZIP.POP.FLAG = BOL.POP.VER.ARR<1,14>
         IF DEST.ZIP.POP.FLAG = 'Y' AND NOT(BACK.FLAG) THEN
            DEST.ZIP = BOL.POP.VER.ARR<4,14>
            IF NUM(DEST.ZIP) AND LEN(DEST.ZIP) LT 5 THEN DEST.ZIP = DEST.ZIP "R%5"
            DATA DEST.ZIP
         END
      END
*NPR028 End Changes

      BEGIN CASE
         CASE CL.ZIP.RTE = 'Y'
            IF ZIP.ARR = '' THEN
               IF ORIG.ZIP # '' THEN
                  ZIP.ARR<1,1> = ORIG.ZIP
                  ZIP.ARR<2,1> = ORIG.CITY
                  ZIP.ARR<3,1> = ORIG.STATE
               END
               IF DEST.ZIP # '' AND CLIENT.ID#'00574' THEN
                  ZIP.ARR<1,50> = DEST.ZIP
                  ZIP.ARR<2,50> = DEST.CITY
                  ZIP.ARR<3,50> = DEST.STATE
               END
            END
            IF CLIENT.ID = "00574" AND IN.OUT='O' THEN
               CALL FB.2.1.ZIP.00574(ZIP.ARR,F.CLIENTS.CUST,F.EXP,QI)
               NUM.OF.ITEM=DCOUNT(ZIP.ARR<6>,@VM)
               EXP.CODE=ZIP.ARR<6,NUM.OF.ITEM>
            END ELSE
               CALL FB.2.1.ZIP( ZIP.ARR,QI)
            END
            ORIG.ZIP = ZIP.ARR<1,1>
            ORIG.CITY = ZIP.ARR<2,1>
            ORIG.STATE = ZIP.ARR<3,1>
            NUM.ZIPS = DCOUNT( ZIP.ARR<1>, @VM )
            DEST.ZIP = ZIP.ARR<1,NUM.ZIPS>
            DEST.CITY = ZIP.ARR<2,NUM.ZIPS>
            DEST.STATE = ZIP.ARR<3,NUM.ZIPS>
            IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN         ; * Default for UPS
               ORIG.ZIP='99999'
               ORIG.CITY='UPS'
               ORIG.STATE='ZZ'
               DEST.ZIP='99999'
               DEST.CITY='UPS'
               DEST.STATE='ZZ'
            END
            IF CARRIER.ID='01075' THEN   ; * Default for FedEx Ground
               ORIG.ZIP='99999'
               ORIG.CITY='FedEx Ground'
               ORIG.STATE='ZZ'
               DEST.ZIP='99999'
               DEST.CITY='FedEx Ground'
               DEST.STATE='ZZ'
            END
            IF QI = 'X' THEN
               BACK.FLAG = 1
               GOTO 600
            END
         CASE CL.DEST.FLAG = 'Y'
            IF CL.ZIP.DEF<1,1> # '' THEN
               IF IN.OUT = 'I' & NOT(BACK.FLAG) THEN SND.DATA=CL.ZIP.DEF<1,1> ; GOSUB SEND.DATA
            END
            HELP = "Enter the Destination Zip Code. [S]=Search [X]=Back [EX]=Exit"
            VIN=0                        ; * Starting Zip Character Count
            VIN<3>=LAST.DEST.ZIP
            VIN<4>=LAST.DEST.CITY
            VIN<5>=LAST.DEST.STATE
            VOUT=''
            IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN         ; * Default for UPS
               DEST.ZIP='99999'
               DEST.CITY='UPS'
               DEST.STATE='ZZ'
            END
            IF CARRIER.ID='01075' THEN   ; * Default for FedEx Ground
               DEST.ZIP='99999'
               DEST.CITY='FedEx Ground'
               DEST.STATE='ZZ'
            END

*NPR020 Start Changes

            VIN<7> = COUNTRY.LIST<2>     ; * Destination Country code
            VIN<8> = CLIENT.ID
            VIN<9> = CARRIER.ID
            CALL FB.2.1.CSZ.NEW(VIN,VOUT,11,DEST.ZIP,HELP,ZIP.LEN,BACK.FLAG,DEST.CITY,DEST.STATE)    ; * ZZ To be removed l8tr ;*ZZ USE .NEW VERSION
            COUNTRY.LIST<2> = VOUT<2>

*NPR020 End Changes

            IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN         ; * Force for UPS
               DEST.ZIP='99999'
               DEST.CITY='UPS'
               DEST.STATE='ZZ'
            END
            IF CARRIER.ID='01075' THEN   ; * Force for FedEx Ground
               DEST.ZIP='99999'
               DEST.CITY='FedEx Ground'
               DEST.STATE='ZZ'
            END
            IF CLIENT.ID='00841' AND CARRIER.ID='00030' AND IN.OUT='I' AND DEST.ZIP='67101' THEN
               DEST.ZIP='67107'
               DEST.CITY='Moundridge'
               DEST.STATE='KS'
            END
            CC+=VOUT<1> ; GOSUB PRINT.CC
            IF HELP = 'S' ! HELP = '' THEN
               GOSUB 8100                ; * Display screen
               GOSUB 8200                ; * Display data
            END
            IF BACK.FLAG THEN GOTO 700
            IF DEST.CITY # '' THEN
               DESC = DEST.CITY:', ':DEST.STATE
            END ELSE
               DESC = DEST.STATE
            END
            LAST.DEST.ZIP=DEST.ZIP
            LAST.DEST.CITY=DEST.CITY
            LAST.DEST.STATE=DEST.STATE
            CRT @(5,11):DEST.ZIP ZIP.MASK:' ':DESC:@(-4)

*NPR020 Start Changes
            IF COUNTRY.LIST<2,1> NE "" THEN
               DEST.COUNTRY.CD = COUNTRY.LIST<2,1>
               DEST.COUNTRY.NAME = OCONV(COUNTRY.LIST<2,2>,"MCT")
               CRT @(5,11):DEST.ZIP ZIP.MASK:' ':OCONV(DESC,"MCT"):" (":DEST.COUNTRY.CD:")":@(-4)
            END
*NPR020 End Changes

            BACK.FLAG = 0
            IF DEST.ZIP = ORIG.ZIP THEN
               CALL ELINE('WARNING - Origin and destination zip are the same.')
               CC+=1 ; GOSUB PRINT.CC
            END
         CASE BACK.FLAG
            GOTO 700
         CASE 1
            NULL
      END CASE

*---- Feed origin and destination zips to mileage calc program

900: ***
      IF CL.ORIG.FLAG='Y' AND CL.DEST.FLAG='Y' THEN CL.MILE.FLAG='Y'
      IF LEN(ORIG.ZIP) < 5 OR LEN(DEST.ZIP) < 5 THEN CL.MILE.FLAG='N'
      IF CL.MILE.FLAG = 'Y' & ORIG.ZIP#99999 & DEST.ZIP#99999 THEN
         BEGIN CASE
            CASE (AUDIT='Y' OR AUDIT='U' OR AUDIT='S') AND (AUDIT.TYPE[1,2]='TL' AND USER # '')
               MILE.REC = ZIP.ARR<1>
            CASE CL.ZIP.RTE = 'Y'
               MILE.REC = ZIP.ARR<1>
            CASE ORIG.ZIP LE DEST.ZIP
               MILE.REC = ORIG.ZIP:@VM:DEST.ZIP
            CASE 1
               MILE.REC = ORIG.ZIP:@VM:DEST.ZIP
*DF               MILE.REC = DEST.ZIP:@VM:ORIG.ZIP
         END CASE
* NPR999         VIN='SEND'
         VIN='BOTH'                      ; * NPR999
         VIN<2>=CH.NUM
         VIN<3>=MILE.REC
         VIN<4>=0                        ; * 1 to Skip File Lookup and go to PC
         VIN<5>=PROG.NAME
         VIN<6>=CLIENT.ID:' - ':CLIENT.NAME
         VIN<8>=CLIENT.ID                ; * JMK65
         VIN<9>=CARRIER.ID               ; * JMK65
         SENT.TO.PCMILER=1
         CALL PCMILER.BETA(VIN,VOUT,F.PCIN,F.PCOUT,F.MILEAGE)
*** IF USER = "NPRATT" THEN DEBUG
         IF VOUT<2>='FOUNDINFILE' OR VOUT<2>[1,5]='ERROR' THEN
            MILEAGE=OCONV(VOUT<1>,'MR0')
            CRT @(5,15):MILEAGE'L1,#10'
            SENT.TO.PCMILER=0
         END ELSE                        ; * NPR999 03/10/10 NPR
            MILEAGE=OCONV(VOUT<1>,'MR0')           ; * NPR999 03/10/10 NPR
            CRT @(5,15):MILEAGE'L1,#10'  ; * NPR999 03/10/10 NPR
            SENT.TO.PCMILER=0            ; * NPR999 03/10/10 NPR
         END                             ; * NPR999 03/10/10 NPR
      END
      IF ORIG.ZIP # '' THEN
         CRT @(5,10):ORIG.ZIP ZIP.MASK:' ':ORIG.CITY:', ':ORIG.STATE:@(-4)
      END
      IF DEST.ZIP # '' THEN
         CRT @(5,11):DEST.ZIP ZIP.MASK:' ':DEST.CITY:', ':DEST.STATE:@(-4):
      END

*NPR020 Start Changes
      IF ORIG.ZIP # '' THEN
         CRT @(5,10):ORIG.ZIP ZIP.MASK:' ':ORIG.CITY:', ':ORIG.STATE:@(-4)
         IF COUNTRY.LIST<1,1> EQ "" THEN
            CRT @(5,10):ORIG.ZIP ZIP.MASK:' ':ORIG.CITY:', ':ORIG.STATE:@(-4)
         END ELSE
            ORIG.COUNTRY.CD = COUNTRY.LIST<1,1>
            ORIG.COUNTRY.NAME = OCONV(COUNTRY.LIST<1,2>,"MCT")
            CRT @(5,10):ORIG.ZIP ZIP.MASK:' ':OCONV(ORIG.CITY,"MCT"):', ':OCONV(ORIG.STATE,"MCT"):" (":ORIG.COUNTRY.CD:")":@(-4)
         END
      END

      IF DEST.ZIP # '' THEN
         CRT @(5,11):DEST.ZIP ZIP.MASK:' ':DEST.CITY:', ':DEST.STATE:@(-4):
         IF COUNTRY.LIST<1,1> EQ "" THEN
            CRT @(5,11):DEST.ZIP ZIP.MASK:' ':DEST.CITY:', ':DEST.STATE:@(-4):
         END ELSE
            DEST.COUNTRY.CD = COUNTRY.LIST<2,1>
            DEST.COUNTRY.NAME = OCONV(COUNTRY.LIST<2,2>,"MCT")
            CRT @(5,11):DEST.ZIP ZIP.MASK:' ':OCONV(DEST.CITY,"MCT"):', ':OCONV(DEST.STATE,"MCT"):" (":DEST.COUNTRY.CD:")":@(-4)
         END
      END
*NPR020 End Changes

      IF USER.TYPE = 'A' THEN
         IF OLD.PRO.REC<2> # IN.OUT THEN
            VC.ID=''
         END ELSE
            GOTO 1475
         END
      END

*---- Enter vendor/customer number

1400: ***
      BEGIN CASE
         CASE IN.OUT = 'O'
            IF CL.CUST.FLAG # 'Y' THEN
               IF BACK.FLAG THEN GOTO 800
               GOTO 1295
            END ELSE
               DESC = 'Cust.'
            END
         CASE IN.OUT = 'I'
            IF CL.VEND.FLAG # 'Y' THEN
               IF BACK.FLAG THEN GOTO 800
               GOTO 1295                 ; * Skip To Expense Code Entry
            END ELSE
               DESC = 'Vend.'
            END
         CASE 1
            IF CL.CUST.FLAG#'Y' AND CL.VEND.FLAG#'Y' THEN
               IF BACK.FLAG THEN GOTO 800
               GOTO 1295                 ; * Skip To Expense Code Entry
            END ELSE
               DESC = 'Shpr.'
            END

      END CASE

      BACK.FLAG = 0
      CRT @(0,13):DESC'L#18':

1450:
      BACK.FLAG = 0
      VC.VIN=VC.CODE
      VC.VIN<2>=0                        ; * Starting Character Count
      VC.VIN<3>=USER
      VC.VOUT=''
      IF CL.ORIG.FLAG='Y' AND CL.DEST.FLAG='Y' THEN
         IF IN.OUT = 'O' THEN
            VC.ZIP=DEST.ZIP
            VC.CITY=DEST.CITY
            VC.ST=DEST.STATE
         END ELSE
            VC.ZIP=ORIG.ZIP
            VC.CITY=ORIG.CITY
            VC.ST=ORIG.STATE
            IF CLIENT.ID='10356' AND CARRIER.ID='01060' AND IN.OUT='T' THEN
               VC.ZIP=DEST.ZIP
               VC.CITY=DEST.CITY
               VC.ST=DEST.STATE
            END
            IF CLIENT.ID='01292' AND IN.OUT='T' THEN
               VC.ZIP=DEST.ZIP
               VC.CITY=DEST.CITY
               VC.ST=DEST.STATE
            END
         END
         CALL FB.2.1.VEND.CUST(IN.OUT,VC.DESC,F.VEND.CUST,F.VC.XREF,F.VC.ZIPS,F.TABLES,CLIENT.ID,QI,VC.ZIP,VC.CITY,VC.ST,VC.VIN,VC.VOUT,'E')
      END ELSE
         CALL FB.2.1.CONSIGN.NEW(IN.OUT,VC.DESC,F.VEND.CUST,F.VC.XREF,F.VC.ZIPS,CLIENT.ID,QI,VC.VIN,VC.VOUT)
      END

*      IF CLIENT.ID = "01334" THEN                                                            ;* NPR017
*         W.SHIPPER = OCONV(VC.DESC,"MCU")
*         IF IN.OUT='O' THEN DIV.ZIP=PRO.REC<3>
*         IF IN.OUT='I' THEN DIV.ZIP=PRO.REC<4>
*         W.SHIP.ZIP = DIV.ZIP[1,5]
*
*         HUS.DIV.FLAG = 0
*
*         IF W.SHIP.ZIP = "15003"  AND INDEX(W.SHIPPER,"HUSSEY",1) THEN          ;* City = Ambridge
*            IF INDEX(W.SHIPPER,"FABRIC",1) THEN DIVISION.CODE = "00005"         ;   HUS.DIV.FLAG = 1
*         END
*
*         IF W.SHIP.ZIP = "15056" AND INDEX(W.SHIPPER,"HUSSEY",1) THEN          ;* City = Leetsdale
*            IF INDEX(W.SHIPPER,"COPPER",1) THEN DIVISION.CODE = "00001"   ;   HUS.DIV.FLAG = 1
*            IF INDEX(W.SHIPPER,"FABRIC",1) THEN DIVISION.CODE = "00002"   ;   HUS.DIV.FLAG = 1
*         END
*
*         IF W.SHIP.ZIP = "40019" AND INDEX(W.SHIPPER,"HUSSEY",1) THEN          ;* City = Eminence
*            IF INDEX(W.SHIPPER,"COPPER",1) THEN DIVISION.CODE = "00003"  ;   HUS.DIV.FLAG = 1
*            IF INDEX(W.SHIPPER,"FABRIC",1) THEN DIVISION.CODE = "00004"  ;   HUS.DIV.FLAG = 1
*         END


*         IF HUS.DIV.FLAG THEN
*            IF PRO.REC<9> NE "" AND DIVISION.CODE NE PRO.REC<9> THEN
*               CRT IN.OUT:"  ":W.SHIP.ZIP:"  SH ":W.SHIPPER "L#30":" CALC DIV ":DIVISION.CODE :
*               CRT " -- ":PRO.REC<9>  ; CRT
*                CALL ELINE("Should this not be Division ":DIVISION.CODE :" Check with Nikki !!")
*            END
*         END
*      END                                                                                    ;* NPR017

      IF VC.VOUT<4>#'X' THEN
         CC+=VC.VOUT<1> ; GOSUB PRINT.CC
         VC.ID=VC.VOUT<2>
         VC.CODE=VC.VOUT<3>
         VC.OVERRIDE=VC.VOUT<5>
         VC.TYPE=VC.VOUT<6>              ; * JMK28
         IF VC.TYPE='R' THEN             ; * JMK28
            VC.REJECT=1                  ; * JMK28
         END ELSE                        ; * JMK28
            VC.REJECT=0                  ; * JMK28
         END                             ; * JMK28
      END
      IF CLIENT.ID = '00883' THEN
         UP.VC.DESC=OCONV(VC.DESC,'MCU')
         IF VC.ID='14809' OR INDEX(UP.VC.DESC,'BOMBAY',1) THEN
            CALL ELINE('Verify With Auditor that this is not an Outbound COLLECT shipment!')
         END
      END
      IF CLIENT.ID = '00924' OR CLIENT.ID='01228' THEN
         UP.VC.DESC=OCONV(VC.DESC,'MCU')
         IF UP.VC.DESC[1,4]='FTPC' OR UP.VC.DESC[1,9]='FLEETRITE' OR UP.VC.DESC[1,7]='F T P C' THEN
            CALL ELINE('Cannot update a bill with a customer/vendor of Fleetrite or FTPC')
            GOSUB 8100
            GOTO 300
         END
      END
      IF ((CLIENT.ID = '01221' AND CARRIER.ID # '14365') OR CLIENT.ID='01280' OR CLIENT.ID = '01209' OR CLIENT.ID='01283' OR CLIENT.ID='01630' OR CLIENT.ID='01609' OR CLIENT.ID='01617' OR CLIENT.ID='01622') AND VC.VOUT<4>#'X' THEN
         IF VC.CODE='I' THEN
            IF DEST.ZIP#'' AND DEST.ZIP#'99999' THEN
               READV DIVISION FROM F.ZIP.DIV.XREF,DEST.ZIP,1 ELSE
                  CALL ELINE('Cannot locate intercompany division')
                  GOTO 1400
               END
               DIV.COUNT = DCOUNT(DIVISION<1>,@VM)
               IF DIV.COUNT GT 1 THEN
                  CALL FB.2.1.GET.DIV(CHECK.ZIP,CLIENT.ID,DIVISION,"E",QI)
                  QI = OCONV(QI,'MCU')
                  GOSUB 8100
                  GOSUB 8200
                  IF QI = 'X' THEN
                     BACK.FLAG = 1
                     GOTO 1400
                  END
                  MATREAD DIV.REC FROM F.DIV, DIVISION ELSE
                     CALL ELINE("ERROR - Division ":DIVISION:" not on file.")
                     CC+=1 ; GOSUB PRINT.CC
                     GOTO 1400
                  END
                  IF DIV.REC(7)='I' THEN
                     CALL ELINE("ERROR - Division ":DIVISION:" is Inactive - Cannot use.")
                     CC+=1 ; GOSUB PRINT.CC
                     GOTO 1400
                  END
               END
            END
         END
      END
      IF CLIENT.ID='01863' THEN
         IF VC.CODE#'' THEN
            DIVISION=FIELD(VC.CODE,"*",2)
            DIVISION=DIVISION'R%5'
            MATREAD DIV.REC FROM F.DIV, DIVISION ELSE
               CALL ELINE("ERROR - Division ":DIVISION:" not on file.")
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1400
            END
            IF DIV.REC(7)='I' THEN
               CALL ELINE("ERROR - Division ":DIVISION:" is Inactive - Cannot use.")
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1400
            END
         END
      END

*NPR029 Start Changes
      IF CLIENT.ID = '01614' AND DIVISION = '' THEN
         IF ORIG.ZIP#'' AND ORIG.ZIP#'99999' THEN
            READV DIVISION FROM F.ZIP.DIV.XREF,ORIG.ZIP,1 ELSE
               CALL ELINE('Cannot locate intercompany division')
               GOTO 1400
            END
            DIV.COUNT = DCOUNT(DIVISION<1>,@VM)
            IF DIV.COUNT GT 1 THEN
               CALL FB.2.1.GET.DIV(ORIG.ZIP,CLIENT.ID,DIVISION,"E",QI)
               QI = OCONV(QI,'MCU')
               GOSUB 8100
               GOSUB 8200
               IF QI = 'X' THEN
                  BACK.FLAG = 1
                  GOTO 1400
               END
               MATREAD DIV.REC FROM F.DIV, DIVISION ELSE
                  CALL ELINE("ERROR - Division ":DIVISION:" not on file.")
                  CC+=1 ; GOSUB PRINT.CC
                  GOTO 1400
               END
               IF DIV.REC(7)='I' THEN
                  CALL ELINE("ERROR - Division ":DIVISION:" is Inactive - Cannot use.")
                  CC+=1 ; GOSUB PRINT.CC
                  GOTO 1400
               END
            END
         END
      END
*NPR029 End Changes

      BEGIN CASE
         CASE QI = 'NULL'
            GOSUB 8100                   ; * Display screen
            GOSUB 8200                   ; * Display data
            GOTO 1450
         CASE QI = 'X'
            BACK.FLAG = 1
            GOTO 800
         CASE QI = 'EX'
            STOP
         CASE VC.DESC = '' & QI = ''
            GOSUB 8100                   ; * Display screen
            GOSUB 8200                   ; * Display data
            CALL ELINE("Entry required!")
            CC+=1 ; GOSUB PRINT.CC
            GOTO 1450
      END CASE
      GOSUB 8100                         ; * Display screen
      GOSUB 8200                         ; * Display data

1295: ***
      BEGIN CASE                         ; * JMK133
         CASE CLIENT.ID='00984' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01000' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01064' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01084' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01163' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01196' AND DIVISION='00001' ; BOL.FIRST=1     ; * JMK133
         CASE CLIENT.ID='01202' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01225' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01240' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01285' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01305' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01320' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01361' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01472' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01488' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01491' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01529' ; BOL.FIRST=1      ; * JMK133
*NPR04         CASE CLIENT.ID='01529' AND CARRIER.ID NE '12440' ; BOL.FIRST=1 ;*NPR04
         CASE CLIENT.ID='01599' ; BOL.FIRST=1      ; * DRF
         CASE CLIENT.ID='10225' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='10356' AND DIVISION='00005' ; BOL.FIRST=1     ; * JMK133
         CASE CLIENT.ID='10356' AND CARRIER.ID='00015' AND DIVISION='00006' ; BOL.FIRST=1  ; * JMK133
         CASE CLIENT.ID='10356' AND DIVISION='00002' AND (CARRIER.ID='00015' OR CARRIER.ID='01075' OR CARRIER.ID='00143' OR CARRIER.ID='00365') ; BOL.FIRST=1    ; * JMK133
         CASE CLIENT.ID='01525' ; BOL.FIRST=1
         CASE CLIENT.ID='01554' ; BOL.FIRST=1
         CASE CLIENT.ID='01567' ; BOL.FIRST=1      ; * JCW, 05/10/07
         CASE CLIENT.ID='01613' ; BOL.FIRST=1      ; * JCW, 05/10/07
         CASE CLIENT.ID='01636' ; BOL.FIRST=1      ; * JMK152
         CASE CLIENT.ID='01539' ; BOL.FIRST=1
**         CASE CLIENT.ID='01763' AND USER = "NPRATT" ; BOL.FIRST=1      ;*NPR019 ??
         CASE CLIENT.ID='01818' ; BOL.FIRST=1
         CASE CLIENT.ID='01344' ; BOL.FIRST=1
         CASE CLIENT.ID='01288' ; BOL.FIRST=1
         CASE CLIENT.ID='01282' ; BOL.FIRST=1
         CASE 1 ; BOL.FIRST=0            ; * JMK133
      END CASE                           ; * JMK133
*     IF CLIENT.ID='01084' OR (CLIENT.ID='10356' AND DIVISION='00005') OR (CLIENT.ID='10356' AND CARRIER.ID='00015' AND DIVISION='00006') OR (CLIENT.ID='10356' AND DIVISION='00002' AND (CARRIER.ID='00015' OR CARRIER.ID='01075' OR CARRIER.ID='00143' OR CARRIER.ID='00365')) OR CLIENT.ID='10225' OR CLIENT.ID='01163' OR (CLIENT.ID='01196' AND DIVISION='00001') OR CLIENT.ID='01202' OR CLIENT.ID='01225' OR CLIENT.ID='01240' OR CLIENT.ID='01000' OR CLIENT.ID='00984' OR CLIENT.ID='01361' OR CLIENT.ID='01320' OR CLIENT.ID='01305' OR CLIENT.ID='01285' OR CLIENT.ID='01064' OR CLIENT.ID='01472' OR CLIENT.ID='01491' OR CLIENT.ID='01488' THEN ; * JMK133
      IF BOL.FIRST THEN                  ; * JMK133
         IF BACK.FLAG THEN GOTO 1400
         GOTO 1475
      END
      IF CLIENT.ID='01292' THEN GOTO 600
1297: ***
      IF CL.EXP.FLAG ='Y' AND CLIENT.ID#'01053' THEN
         NOT.ASK = 0
         IF USER.MODIFY = 0 AND BACK.FLAG THEN GOTO 1400
*DF         IF USER='DAVID' OR USER='MARY' OR USER='MYRA' THEN
         IF USER='DAVID' THEN CALL ELINE('EXPENSE PRESS BREAK')
         TEMP.REC = ''
         TEMP.REC<1> = BILL.DATE
         TEMP.REC<2> = IN.OUT
         TEMP.REC<3> = ORIG.ZIP
         TEMP.REC<4> = DEST.ZIP
         TEMP.REC<5> = EXP.CODE
         TEMP.REC<6> = WEIGHT+0
         TEMP.REC<7> = CARRIER.CHG+0
         TEMP.REC<8> = ACTUAL.CHG+0
         TEMP.REC<9> = DIVISION
         TEMP.REC<10> = VAR.ARR<1>+0
         TEMP.REC<11> = VAR.ARR<2>+0
         TEMP.REC<12> = VAR.ARR<3>+0
         TEMP.REC<16> = BOL
         TEMP.REC<205> = BOL.DIST        ; * JMK84
         TEMP.REC<17> = VC.ID
         TEMP.REC<19> = MILEAGE+0
         CARRIER.MODE.WGT = CARRIER.REC<70>
         CARRIER.MODE.BY.WGT = CARRIER.REC<71>
         LOCATE WEIGHT IN CARRIER.MODE.WGT<1> BY "AR" SETTING POS ELSE NULL
         T.MODE.BY.WGT = OCONV(CARRIER.MODE.BY.WGT<1,POS>,'MCU')
         LTL.CAR=T.MODE.BY.WGT=1         ; * JMK187
         TL.CAR=T.MODE.BY.WGT=6          ; * JMK187
         AIR.CAR=T.MODE.BY.WGT=12        ; * JMK187
         TEMP.REC<21> = T.MODE.BY.WGT
         TEMP.REC<25> = ORIG.STATE
         TEMP.REC<26> = DEST.STATE
         TEMP.REC<27> = ORIG.CITY
         TEMP.REC<28> = DEST.CITY
         TEMP.REC<68> = BILL.STATUS
         MISC.CHG.POS=DCOUNT(CLASSES<1>,@VM)       ; * Find out how many
         FOR MISC.CHG.CNT=1 TO MISC.CHG.POS
            TEMP.REC<70,MISC.CHG.CNT>='FRT'
         NEXT MISC.CHG.CNT
         IF MISC.CHG.CODES#'' THEN
            TEMP.REC<70,MISC.CHG.POS+1>=MISC.CHG.CODES
         END
         TEMP.REC<74> = CLASSES
         TEMP.REC<119> = FLAT.RATE
         EXPENSE.VIN=''
         EXPENSE.VIN<1>=VC.DESC
         EXPENSE.VIN<2>=ACTUAL.CHG+0
         EXPENSE.VIN<3>=OLA.AMT+0
         EXPENSE.VIN<5>=PRO
         CALL NEW.GET.EXPENSE(EXPENSE.VIN,CLIENT.ID,CARRIER.ID,TEMP.REC,F.EXP,EXPENSE.VOUT)
         IF EXPENSE.VOUT<1>#'' THEN
            IF OWEN OR USER='DAVID' OR USER='KMESSENGER' THEN
               NUM.OF.EXPENSE.RULE=DCOUNT(EXPENSE.VOUT<2>,@VM)
               FOR XX = 1 TO NUM.OF.EXPENSE.RULE
                  CRT @(40,7+XX):EXPENSE.VOUT<2,XX>'L#10':" ":EXPENSE.VOUT<3,XX>'L#3':" ":EXPENSE.VOUT<4,XX>'L#23'
               NEXT XX
               CALL ELINE('Check expense codes')
            END
            EXP.CODE=EXPENSE.VOUT<1>
*DF            EXPENSE.FIELD=EXPENSE.VOUT<2>
*DF            EXPENSE.OPERATOR=EXPENSE.VOUT<3>
*DF            EXPENSE.INFO=EXPENSE.VOUT<4>
         END
*DF         END
         IF EXPENSE.VOUT<1>='' THEN
            VIN = CLIENT.ID
            IF CL.DIV.FLAG = 'Y' AND DIVISION #'' THEN
               VIN<2> = DIVISION
               VIN<3> = DIV.REC(8)
               VIN<31> = DIV.REC(45)
            END
            VIN<4> = CARRIER.ID
            VIN<5> = CARRIER.NAME
            VIN<6> = CARRIER.MODE        ; * Transportation Mode
            VIN<7> = IN.OUT
            VIN<8> = VC.CODE
            VIN<9> = VC.DESC
            VIN<10> = ORIG.ZIP
            VIN<11> = ORIG.STATE
            VIN<12> = DEST.ZIP
            VIN<13> = DEST.STATE
            VIN<14> = 'DEFAULT'
            VIN<15> = EXP.CODE
            VIN<16> = BACK.FLAG
            VIN<17> = ''                 ; * USED FOR EDI
            VIN<19> = BILL.DATE
*        IF CARRIER.ID='00015' OR CARRIER.ID='00143' OR CARRIER.ID='00365' OR CARRIER.ID='04226' THEN          ; * JMK106
            IF CAPTURE.INVOICE THEN      ; * JMK106
               VIN<20>=INV.NUM
            END
            VIN<21>=DIV.REC(11)
            VIN<22>=VC.ID
            VIN<23>=PRO
            VIN<18>=BOL                  ; * Only user for Daws (01084) right now Alcon division 5 and (10225) R & M and (01163) MD Building and (01196) JM CLipper for division 1 and (01202) Lowen and (01225) May & Company and (01240) Isco Inc and (01000) Qualico and (00984) Orschelin and (01361) Fairbanks Morse and (01320) Precision Kidd and (01305) Future Metals (01285) Solideal Tire (01472) Rexel-Rocky Mountain Division (01491) Form + Surface (01488) Green Light or (01525) REMCO (01554) Power and Pumps (01567) Betts Springs
            FOR UATT=1 TO 6              ; * JMK49
               VIN<23+UATT>=UFLDS<UATT>  ; * JMK49
            NEXT UATT                    ; * JMK49
            VIN<30>=VC.TYPE
            VIN<32>=DEST.CITY
            VIN<33>=ORIG.CITY
            BACK.FLAG = 0
*tbs    IF EXP.CODE = '' THEN
            NOT.ASK = 0
            W.BOL = BOL                  ; * NPR909  as per Myra  03/25/10
            CALL GET.EXPENSE(VIN,VOUT)
            IF CLIENT.ID='01288' AND EXP.CODE='' AND IN.OUT='O' THEN
               BOL=BOL[3,999]
            END
            IF CLIENT.ID='01282' AND EXP.CODE='' THEN
               IF BOL<1,1>='001' THEN
                  BOL = DELETE(BOL,1,1)
               END
            END
            EXP.CODE = VOUT<1>
            IF EXP.CODE = 'EX' OR EXP.CODE = 'ex' THEN STOP
            USER.MODIFY = VOUT<2>
            IF USER.MODIFY = 0 THEN
               VER.CODE='E' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
            END
            IF CLIENT.ID='01288' AND EXP.CODE='' THEN
               BOL=BOL[3,999]
            END
            IF CLIENT.ID='01282' AND EXP.CODE='' THEN
               IF BOL<1,1>='001' THEN
                  BOL = DELETE(BOL,1,1)
               END
            END
            NOT.ASK = VOUT<3>
            ADD.EXPENSE = VOUT<4>
*         MASK = VOUT<5>
            ERROR.MESSAGE = VOUT<5>
            IF ERROR.MESSAGE #'' THEN
               CALL ELINE(ERROR.MESSAGE)
            END
            MASK = VOUT<6>
            MULTI.CODE = VOUT<8>
            MULTI.PERCENT = VOUT<9>
            CRT @(5,12):EXP.CODE
            IF CLIENT.ID='01288' THEN BOL = W.BOL  ; * NPR909 as per Myra  03/25/10
*tbs    END
         END

         IF NOT.ASK THEN
            NOT.ASK = 0
            QI = EXP.CODE
            Q = QI
         END ELSE
            HELP = "Enter the Expense Code. [X]=Back [EX]=Exit"
            IF EXP.CODE#'' THEN MASK = EXP.CODE'L#35'
            MASK=MASK'L#35'
            CALL GEN.IN(5,12,MASK,'',Q,0,35,'','',2,-35,12,0,QI,HELP,0,23)
         END
         QI=OCONV(QI,'MCU')              ; *BOH01
         Q =OCONV(Q,'MCU')               ; *BOH01
         BACK.FLAG = 0
         BEGIN CASE
            CASE QI = 'X'
               BACK.FLAG = 1
               CRT @(5,12):@(-4)
               GOTO 1400
            CASE QI = 'EX'
               STOP
            CASE CHANGE.FLAG & QI = ''
               QI = EXP.CODE
            CASE EXP.CODE#'' AND QI=''
               QI = EXP.CODE
            CASE QI # ''
               VIN = CLIENT.ID
               IF CL.DIV.FLAG = 'Y' AND DIVISION #'' THEN
                  VIN<2> = DIVISION
                  VIN<3> = DIV.REC(8)
                  VIN<31> = DIV.REC(45)
               END
               VIN<4> = CARRIER.ID
               VIN<5> = CARRIER.NAME
               VIN<6> = CARRIER.MODE     ; * Transportation Mode
               VIN<7> = IN.OUT
               VIN<8> = VC.CODE
               VIN<9> = VC.DESC
               VIN<10> = ORIG.ZIP
               VIN<11> = ORIG.STATE
               VIN<12> = DEST.ZIP
               VIN<13> = DEST.STATE
               VIN<14> = 'TRANSLATE'
               VIN<15> = QI
               VIN<17> = ''              ; * USED FOR EDI
               VIN<19> = BILL.DATE
               CALL GET.EXPENSE(VIN,VOUT)
               QI = VOUT<1>              ; * Translated Expense Code
               IF QI = 'EX' OR QI = 'ex' THEN STOP
               ERROR.MESSAGE = VOUT<5>
               IF ERROR.MESSAGE #'' THEN
                  CALL ELINE(ERROR.MESSAGE)
                  GOTO 1297
               END
               MULTI.CODE = VOUT<8>
               MULTI.PERCENT = VOUT<9>
            CASE 1
               CALL ELINE('Invalid Expense Code.')
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1297
         END CASE
         IF QI='-' THEN
            LOCATE 'EXP' IN MISSING.DATA<1> SETTING MISSING.POS ELSE
               MISSING.DATA<1,-1>='EXP'
            END
            GOTO 1475
         END
         IF QI#'-' THEN
            LOCATE 'EXP' IN MISSING.DATA<1> SETTING MISSING.POS THEN
               DEL MISSING.DATA<1,MISSING.POS>
            END
         END
         EXP.CODE = QI
         VIN<14> = 'FORMAT'
         VIN<15> = EXP.CODE
         VIN<17> = ''                    ; * USED FOR EDI
         CALL GET.EXPENSE(VIN,VOUT)
         IF VIN<1> = 'EX' OR VIN<1> = 'ex' THEN STOP
         ERROR.MESSAGE = VOUT<5>
         IF ERROR.MESSAGE#'' THEN
            CALL ELINE(ERROR.MESSAGE)
            GOTO 1297
         END
         EXP.CODE = VOUT<1>
         ORIG.EXP.CODE=VOUT<7>
*DF        DTAB<1> = EXP.CODE

*---- Verify expense code in expense code file

         IF OCONV(USER,'MCU')='TEASTRIDGE' AND CLIENT.ID='01148' AND (CARRIER.ID='00015' OR CARRIER.ID='01075') THEN
            ADD.EXPENSE=1
         END
         IF CLIENT.ID='01312' AND EXP.CODE#'' THEN
            ADD.EXPENSE=1
         END
*DF         IF CLIENT.ID='01342' AND EXP.CODE#'' THEN
*DF            ADD.EXPENSE=1
*DF         END
*
* Removed the add option for 01342 LS Starrett per John at Scott Traffic
* DRF 12/06/05
*
         IF CLIENT.ID='00934' AND EXP.CODE#'' THEN
            ADD.EXPENSE=1
         END
         IF CLIENT.ID='01408' AND EXP.CODE#'' THEN
            ADD.EXPENSE=1
         END
         READ DEXP FROM F.EXP,EXP.CODE THEN
            ACTIVE = DEXP<5>             ; * Was Att <4> until 5/15/99
            EXP.CODE.DESC = DEXP<1>
            IF ACTIVE='I' THEN
               CALL ELINE('Error! Expense Code ':EXP.CODE:' is no longer a valid expense code.')
               CC+=1 ; GOSUB PRINT.CC
               EXP.CODE=''
               GOTO 1297
            END
         END ELSE
            IF ADD.EXPENSE = 0 THEN
               CALL ELINE('Error! ':EXP.CODE:' Is not on file.')
               EXP.CODE=''
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1297
            END
            CRT @(0,22):BELL:BELL:
            HELP = "Enter either Y or N."
1320:
            LINE = 'Expense code ':EXP.CODE
            LINE := ' not on file. Do you want to add? N'
            CALL GEN.IN(0,22,LINE,'',Q,0,1,'','',1,-1,22,1,QI,HELP,0,23)
            CC+=LEN(QI) ; GOSUB PRINT.CC
            QI = OCONV(QI,'MCU')
            IF QI = '' THEN QI = 'N'
            IF QI = 'Y' ! QI = 'N' ! QI='0' ! QI='1' ELSE GOTO 1320
            IF QI = 'N' OR QI='0' THEN GOTO 1295

* ---- Enter new expense code description and update expense code file
1330:
            HELP = "Enter the expense code description."
            MASK=EXP.CODE:STR("_",35-LEN(EXP.CODE))
            CALL GEN.IN(0,22,'Enter description ':MASK,'',Q,0,35,'','',2,-35,22,0,QI,HELP,0,23)
            CC+=LEN(QI)+1 ; GOSUB PRINT.CC
            IF Q='' THEN Q=EXP.CODE
1335:
            HELP = "Enter either Y or N."
            LINE = 'The description is ':Q:'. Is this correct? Y'
            CALL GEN.IN(0,22,LINE,'',ACK,0,1,'','',1,-1,22,1,QI,HELP,0,23)
            CC+=LEN(QI) ; GOSUB PRINT.CC
            QI = OCONV(QI,'MCU')
            IF QI = '' THEN QI = 'Y'
            IF QI = 'Y' ! QI = 'N' ELSE GOTO 1335
            IF QI = 'N' THEN GOTO 1330
            EXP.CODE.DESC = Q
            WRITEV EXP.CODE.DESC ON F.EXP,EXP.CODE,1
         END
         CRT @(5,12):EXP.CODE:' ':EXP.CODE.DESC:@(-4):
*DF         IF CLIENT.ID='01371' AND PRO.ID # "00015*799367051920BD*0" THEN
         IF CLIENT.ID='01371' AND CARRIER.ID # "20693" THEN
            TEST.DIV=FIELD(EXP.CODE,'-',2)
            IF TEST.DIV'R%5'#DIVISION'R%5' THEN
               CALL ELINE('Division and expense code do not match, Please try again')
               IF USER#'MARY' AND USER#'MYRA' AND USER#'DAVID' THEN
                  GOTO 600
               END
            END
         END
         IF CLIENT.ID='01443' THEN
            TEST.DIV=FIELD(EXP.CODE,'-',2)
            TEST.DIV=TEST.DIV[1,3]
            IF TEST.DIV'R%5'#DIVISION'R%5' THEN
               CALL ELINE('Division and expense code do not match, Please try again')
               GOTO 600
            END
         END
         IF CLIENT.ID='00872' AND CL.DIV.FLAG = 'Y' THEN
            DIVISION=EXP.CODE[1,1]
            IF EXP.CODE='420000' OR EXP.CODE='430000' THEN
               DIVISION='00010'
            END
            DIVISION=DIVISION'R%5'
            MATREAD DIV.REC FROM F.DIV, DIVISION ELSE
               CALL ELINE("ERROR - Division ":DIVISION:" not on file.")
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1297
            END
            IF DIV.REC(7)='I' THEN
               CALL ELINE("ERROR - Division ":DIVISION:" is Inactive - Cannot Use")
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1297
            END
            VER.CODE='DC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
            CRT @(5,9):DIVISION
         END
         IF CLIENT.ID='00664' AND CL.DIV.FLAG = 'Y' THEN
            DIVISION=EXP.CODE[1,2]
            DIVISION=DIVISION'R%5'
            MATREAD DIV.REC FROM F.DIV, DIVISION ELSE
               CALL ELINE("ERROR - Division ":DIVISION:" not on file.")
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1297
            END
            IF DIV.REC(7)='I' THEN
               CALL ELINE("ERROR - Division ":DIVISION:" is Inactive - Cannot Use")
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1297
            END
            VER.CODE='DC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
            CRT @(5,9):DIVISION
         END
*DF        IF CLIENT.ID='00883' AND CL.DIV.FLAG = 'Y' AND CARRIER.ID#'00015' THEN
         IF CLIENT.ID='00883' AND CL.DIV.FLAG = 'Y' THEN
            DIVISION=EXP.CODE[1,2]
            DIVISION=DIVISION'R%5'
            MATREAD DIV.REC FROM F.DIV, DIVISION ELSE
               CALL ELINE("ERROR - Division ":DIVISION:" not on file.")
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1297
            END
            IF DIV.REC(7)='I' THEN
               CALL ELINE("ERROR - Division ":DIVISION:" is Inactive - Cannot Use")
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1297
            END
            CRT @(5,9):DIVISION
*OWEN      VER.CODE='DC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
         END
*********************************************************************
         IF CLIENT.ID='01457' AND CL.DIV.FLAG = 'Y' THEN     ; * BOH01 This entire block of code
            BEGIN CASE
               CASE IN.OUT='O' ; DC.ZIP=ORIG.ZIP
               CASE IN.OUT='I' ; DC.ZIP=DEST.ZIP
               CASE 1 ; DC.ZIP=ORIG.ZIP  ; * Use the Origin for Third Party to Solve the Fife WA Problem
            END CASE
            BEGIN CASE
               CASE DC.ZIP = '19007' ; DIVISION='00001'      ; * Bristol PA
               CASE DC.ZIP = '23321' ; DIVISION='00001'      ; * Shipments from Chesapeak VA are for Bristol PA
               CASE DC.ZIP = '30096' ; DIVISION='00002'      ; * Duluth GA
               CASE DC.ZIP = '45011' ; DIVISION='00003'      ; * Hamilton OH
               CASE DC.ZIP = '90601' ; DIVISION='00005'      ; * Whittier CA
               CASE DC.ZIP = '90607' ; DIVISION='00005'      ; * Whittier CA
               CASE DC.ZIP = '90610' ; DIVISION='00005'      ; * Whittier CA
               CASE DC.ZIP = '98424' ; DIVISION='00005'      ; * Shipments from Fife WA are for Whittier CA
               CASE DC.ZIP = '53022' ; DIVISION='00008'      ; * Germantown WI
               CASE DC.ZIP = '53002' ; DIVISION='00008'      ; * Shipments from Allentown WI are for Germantown WI
               CASE DC.ZIP = '75019' ; DIVISION='00014'      ; * Coppell TX
               CASE DC.ZIP = '98188' OR DC.ZIP='98108' ; DIVISION='00015'        ; * Seattle WA
               CASE IN.OUT='T' ; DIVISION=UFLDS<1>'R%5'
*DF               CASE 1 ; DIVISION='99999'           ; * All Others
            END CASE
            MATREAD DIV.REC FROM F.DIV, DIVISION ELSE
               CALL ELINE("ERROR - Division ":DIVISION:" not on file.")
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1297
            END
            IF DIV.REC(7)='I' THEN
               CALL ELINE("ERROR - Division ":DIVISION:" is Inactive - Cannot Use")
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1297
            END
            CRT @(5,9):DIVISION
         END
*********************************************************************
         IF CLIENT.ID='01037' AND CL.DIV.FLAG = 'Y' AND IN.OUT#'I' THEN
            DIVISION=EXP.CODE[6,2]
            DIVISION=DIVISION'R%5'
            MATREAD DIV.REC FROM F.DIV, DIVISION ELSE
               CALL ELINE("ERROR - Division ":DIVISION:" not on file.")
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1297
            END
            IF DIV.REC(7)='I' THEN
               CALL ELINE("ERROR - Division ":DIVISION:" is Inactive - Cannot Use")
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1297
            END
            CRT @(5,9):DIVISION
*OWEN      VER.CODE='DC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
         END
*********************************************************************
*OH     IF OLD.PRO.REC<5> = OLD.PRO.REC<31> & NOT(CHANGE.FLAG) THEN
         IF MULTI.CODE#'' THEN
            DTAB<1>=MULTI.CODE
            CODE.COUNTER=DCOUNT(DTAB<1>,@VM)
            CODE.ACC = 0
            FOR XX = 1 TO CODE.COUNTER-1
               DTAB<3,XX> = OCONV(ACTUAL.CHG*MULTI.PERCENT<1,XX>/10000,'MR0')
               CODE.ACC = CODE.ACC + DTAB<3,XX>
            NEXT XX
            DTAB<3,CODE.COUNTER>=ACTUAL.CHG-CODE.ACC
            CHANGE.EXP=0
         END ELSE
            IF OLD.PRO.REC<5> # EXP.CODE THEN      ; * It Changed
* Reset Expense Code distribution & Force Update
               IF OLD.PRO.REC<5>#'' THEN CHANGE.EXP=1
               DTAB = ''
               DTAB<1> = EXP.CODE
            END ELSE CHANGE.EXP=0
         END
      END ELSE
         IF BACK.FLAG THEN GOTO 1400
      END
*     IF CLIENT.ID='01084' OR (CLIENT.ID='10356' AND DIVISION='00005') OR (CLIENT.ID='10356' AND CARRIER.ID='00015' AND DIVISION='00006') OR (CLIENT.ID='10356' AND DIVISION='00002' AND (CARRIER.ID='00015' OR CARRIER.ID='01075' OR CARRIER.ID='00143' OR CARRIER.ID='00365')) OR CLIENT.ID='10225' OR CLIENT.ID='01163' OR (CLIENT.ID='01196' AND DIVISION='00001') OR CLIENT.ID='01202' OR CLIENT.ID='01225' OR CLIENT.ID='01240' OR CLIENT.ID='01000' OR CLIENT.ID='00984' OR CLIENT.ID='01361' OR CLIENT.ID='01320' OR CLIENT.ID='01305' OR CLIENT.ID='01285' OR CLIENT.ID='01064' OR CLIENT.ID='01472' OR CLIENT.ID='01491' OR CLIENT.ID='01488' THEN ; * JMK133
      IF BOL.FIRST THEN                  ; * JMK133
         IF BACK.FLAG THEN GOTO 1295
         GOTO 1550
      END
*NPR019      IF CLIENT.ID='01127' OR CLIENT.ID='00761' OR CLIENT.ID='01596' OR CLIENT.ID='01721' THEN GOTO 1550
      IF CLIENT.ID='01127' OR CLIENT.ID='00761' OR CLIENT.ID='01596' OR CLIENT.ID='01721' OR CLIENT.ID='01763' THEN GOTO 1550      ; * NPR019

*---- Enter class
1475: ***
      IF CL.CLS.FLAG = 'Y' THEN
         BACK.FLAG = 0
         CALL FB.2.1.CLASS(CLASS,QI,'E')
         QI = OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI = 'X'
               BACK.FLAG = 1
               CALL FB.CLEAR.WINDOW
               GOTO 1295
            CASE QI = 'EX'
               STOP
         END CASE
         WEIGHT = 0
         X = DCOUNT(CLASS<2>,CHAR(253))
         FOR I = 1 TO X
            WEIGHT = WEIGHT+CLASS<2,I>
         NEXT I
      END ELSE
         IF BACK.FLAG THEN GOTO 1295
      END
      IF USER.TYPE = 'A' THEN GOTO 1600
      IF PRO.ID='00041*752-316043005*0' THEN GOTO 1600

*---- Enter bill of lading code
      BEGIN CASE
         CASE CLIENT.ID='00857'
            CL.BOL.FLAG='N'              ; * Don't Allow User To change BOL
            IF IN.OUT='I' OR IN.OUT='T' THEN
               IF VC.VOUT#'' THEN
                  BOL=VC.CODE            ; ** Stemco's Special Code
               END
               IF NOT(BOL MATCHES "8N'-'6N") AND NOT(BOL MATCHES "5N'-'4N") AND NOT(BOL MATCHES "4N'-'5N") AND NOT(BOL MATCHES "8N") AND NOT(BOL MATCHES "9N") THEN
                  CALL ELINE('Not a Valid Expense Code-Vendor on this Vendor')
                  CC+=1 ; GOSUB PRINT.CC
                  GOTO 1450
               END
            END ELSE
               BEGIN CASE
                  CASE ORIG.ZIP[1,3]='756'         ; * Longview
*DF                BOL='81200001'
***********************************************************************
**                                                                   **
** Changed per Karen Smith at Stemco on 5/11/01                      **
**                                                                   **
***********************************************************************
                     BOL='82200001'
                  CASE ORIG.ZIP='28053'  ; * Gastonia
                     BOL='15131100'
                  CASE ORIG.ZIP='89520'  ; * Reno
                     BOL='15131100'
                  CASE CARRIER.ID='00041'          ; * UPS
                     BOL='82200001'
                  CASE 1
                     CALL ELINE('Cannot Calculate BOL for Outbound from Zip ':ORIG.ZIP:'.')
                     CC+=1 ; GOSUB PRINT.CC
                     BACK.FLAG=1
                     GOTO 800
               END CASE
            END
      END CASE

1500:
      EXP.LIST=''                        ; * JMK177
      IF CL.BOL.FLAG = 'Y' THEN
         BACK.FLAG = 0
         VIN=0
         VIN<2>=USER
         VIN<4>=IN.OUT                   ; * Send In / Out Flag Every Time
*DF        IF CLIENT.ID='00904' THEN
*DF*         VIN<4>=IN.OUT
*DF          VIN<5>=CARRIER.ID
*DF        END
         VIN<5>=CARRIER.ID
         IF CLIENT.ID='00908' AND IN.OUT='O' THEN
            VIN<3>=DIVISION[4,2]:'-'
*          VIN<4>=IN.OUT
         END
         PREV.BOL=BOL
         PREV.BOL.DIST=BOL.DIST          ; * JMK84
         VIN<6>=EXP.CODE
         IF CLIENT.ID='00924' OR CLIENT.ID='01228' THEN
            VIN<7>=DIVISION
         END
         VIN<8>=CARRIER.MODE
         VIN<9>=CARRIER.NAME
         VIN<10>=PRO
         VIN<11>=BILL.DATE               ; * JMK79
         VIN<12>=ACTUAL.CHG              ; * JMK84
         VIN<13>=BOL.DIST                ; * JMK84
*        IF CLIENT.ID='01349' OR CLIENT.ID='01350' THEN      ; * JMK102 ; * JMK178
         IF CLIENT.ID='01349' OR CLIENT.ID='01350' OR CLIENT.ID='01645' THEN     ; * JMK102 ; * JMK178
            IF BOL='' THEN               ; * JMK102
               RR.PRO=PRO                ; * JMK102
               RR.PRO.NO=CHANGE(RR.PRO,'-','')     ; * JMK102
               RR.PRO.NO=CHANGE(RR.PRO.NO,' ','')  ; * JMK102
               CHR.POS=0                 ; * JMK102
               CHR.EXIT=0                ; * JMK102
               LOOP                      ; * JMK102
                  CHR.POS+=1             ; * JMK102
                  CHR=RR.PRO.NO[CHR.POS,1]         ; * JMK102
                  IF CHR#'0' THEN CHR.EXIT=1       ; * JMK102
                  IF CHR.POS>LEN(RR.PRO.NO) THEN CHR.EXIT=1  ; * JMK102
               UNTIL CHR.EXIT DO         ; * JMK102
               REPEAT                    ; * JMK102
               RR.PRO.NO=RR.PRO.NO[CHR.POS,9999]   ; * JMK102
               IF RR.PRO.NO#'' THEN      ; * JMK102
                  OPEN '','PRO.BOL.XREF' TO F.PBX ELSE       ; * JMK102
                     CALL OPEN.ABORT('PRO.BOL.XREF',PROG.NAME)         ; * JMK102
                  END                    ; * JMK102
                  READ PBX.REC FROM F.PBX,RR.PRO.NO THEN     ; * JMK102
                     BOL=PBX.REC<1>      ; * JMK102
                     BOL.DIST=PBX.REC<2>           ; * JMK102
                     PREV.BOL=BOL        ; * JMK102
                     PREV.BOL.DIST=BOL.DIST        ; * JMK102
                     VIN<13>=BOL.DIST    ; * JMK102
                  END                    ; * JMK102
               END                       ; * JMK102
            END                          ; * JMK102
         END                             ; * JMK102
         VOUT=''

*NPR028 Start Changes

         IF DO.BOL.POP THEN
** IF USER = "NPRATT" THEN DEBUG
            IF M.BOL.REC NE '' THEN
               ID.BOL.CRX = ""
               FLAG.REF.NO1 = CLIENT.REC(254)<1,19>
               FLAG.REF.NO2 = CLIENT.REC(254)<1,31>
               FLAG.REF.NO3 = CLIENT.REC(254)<1,32>
***               IF FLAG.REF.NO3 = "Y" THEN ID.BOL.CRX = M.BOL.REC<43>
***               IF FLAG.REF.NO2 = "Y" THEN ID.BOL.CRX = M.BOL.REC<42>
***               IF FLAG.REF.NO1 = "Y" THEN ID.BOL.CRX = M.BOL.REC<25>

               IF FLAG.REF.NO1 = "Y" AND M.BOL.REC<25> NE '' THEN BOL<1,-1> = M.BOL.REC<25>
               IF FLAG.REF.NO2 = "Y" AND M.BOL.REC<42> NE '' THEN BOL<1,-1> = M.BOL.REC<42>
               IF FLAG.REF.NO3 = "Y" AND M.BOL.REC<43> NE '' THEN BOL<1,-1> = M.BOL.REC<43>

               VIN<15> = ID.BOL.CRX
            END
         END
         CALL FB.2.1.BOL.NEW(VIN,VOUT,CLIENT.ID,MAT CLIENT.REC,BOL,QI,'E')

*NPR028 Start Changes

         BOL.DIST=VOUT<3>                ; * JMK84
*
*End changes NPR03
*
         N.BOLS = DCOUNT(BOL<1>,@VM)
         FOR I.BOL = 1 TO N.BOLS
            IF USER NE "MYRA" THEN
               W.BOL = BOL<1,I.BOL>
               IF W.BOL[1,3] = "AFS" THEN
                  CALL ELINE("PO/BOL Numbers starting with AFS might be Truckload bills - Speak to Myra")
                  GOSUB TL.BLOCK.EMAIL
                  GOTO 600
               END
            END
         NEXT I.BOL
*
*End changes NPR03
*
         IF CLIENT.ID = 00981 THEN EXP.CODE = VOUT<2>
         IF CLIENT.ID = 00981 THEN
            IF DIVISION = 00003 THEN
               IF IN.OUT = 'I' THEN
                  EXP.CODE='11026000'
               END ELSE
                  EXP.CODE='50306000'
               END
            END
         END

*NPR019 Start changes.

         IF CLIENT.ID = '01763' AND IN.OUT = "I" THEN
            W.BOL = BOL<1,1>
            IF W.BOL[1,1] = "H" THEN
               DIVISION = "00001"
            END
            IF W.BOL[1,1] = "T" OR W.BOL[1,1] = "L" THEN
               DIVISION = "00002"
            END
         END
*
*End changes NPR019
*
         IF CLIENT.ID = 01053 THEN       ; * NPR10
            EXP.CODE = VOUT<2>
            BOL.ACCRUAL.COST = VOUT<5>   ; * NPR10
         END                             ; * NPR10
         CC+=VOUT<1> ; GOSUB PRINT.CC
         QI = OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI = 'X'
               BACK.FLAG = 1
               GOTO 1475
            CASE QI = 'EX'
               STOP
         END CASE
         IF BOL='-' THEN
            LOCATE 'BOL' IN MISSING.DATA<1> SETTING MISSING.POS ELSE
               MISSING.DATA<1,-1>='BOL'
            END
         END
         IF PREV.BOL='-' AND BOL # PREV.BOL THEN
            LOCATE 'BOL' IN MISSING.DATA<1> SETTING MISSING.POS THEN
               DEL MISSING.DATA<1,MISSING.POS>
            END
         END
         IF CLIENT.ID = 01529 AND IN.OUT='O' THEN  ; * JMK133
            EXP.CODE=VOUT<2>             ; * JMK133
            WT.REJ.TEST=1                ; * JMK137
            IF CARRIER.ID='00015' THEN WT.REJ.TEST=0         ; * JMK137
            IF CARRIER.ID='00041' THEN WT.REJ.TEST=0         ; * JMK137
            IF CARRIER.ID='01075' THEN WT.REJ.TEST=0         ; * JMK137
            IF CARRIER.ID='01312' THEN WT.REJ.TEST=0         ; * JMK137
            IF CARRIER.ID='12440' THEN WT.REJ.TEST=0         ; * NPR04
            IF WT.REJ.TEST THEN          ; * JMK137
               IF BOL='' THEN            ; * JMK133
                  LOCATE 'BOL' IN MISSING.DATA<1> SETTING MISSING.POS ELSE       ; * JMK133
                     MISSING.DATA<1,-1>='BOL'      ; * JMK133
                  END                    ; * JMK133
               END                       ; * JMK133
               IF EXP.CODE='' THEN       ; * JMK133
                  LOCATE 'EXP' IN MISSING.DATA<1> SETTING MISSING.POS ELSE       ; * JMK133
                     MISSING.DATA<1,-1>='EXP'      ; * JMK133
                  END                    ; * JMK133
               END                       ; * JMK133
            END                          ; * JMK137
         END                             ; * JMK133
         IF CLIENT.ID = 01613 AND IN.OUT='O' THEN
            EXP.CODE=VOUT<2>             ; * JMK133
            IF EXP.CODE='' THEN          ; * JMK133
               LOCATE 'EXP' IN MISSING.DATA<1> SETTING MISSING.POS ELSE          ; * JMK133
                  MISSING.DATA<1,-1>='EXP'         ; * JMK133
               END                       ; * JMK133
            END                          ; * JMK133
         END
         IF CLIENT.ID='00883' AND CARRIER.ID = '02653' AND IN.OUT='O' THEN
            IF BOL = '' THEN
               CALL ELINE("You must input a BOL for Pollock when the carrier is Conway")
               GOTO 1500
            END
         END

*NPR029 Start Changes
         IF CLIENT.ID='01614' THEN
            BOL.TST = BOL<1,1>
            IF DIVISION = 3 AND IN.OUT='O' THEN
               BOL.PREFIX = BOL.TST[1,4] ; BOL.SUFFIX = BOL.TST[5,999]
               IF BOL.PREFIX = "7300" AND NUM(BOL.SUFFIX) AND LEN(BOL.SUFFIX) = 4 THEN
                  NULL
               END ELSE
                  CALL ELINE("BOL Number should commence with 7300 and be 8 numbers long")
*ZZ                  GOTO 1500
               END
            END ELSE
               BOL.PREFIX = BOL.TST[1,3] ; BOL.SUFFIX = BOL.TST[4,999]
               IF BOL.PREFIX = "800" AND NUM(BOL.SUFFIX) AND LEN(BOL.SUFFIX) = 5 THEN
                  NULL
               END ELSE
                  CALL ELINE("BOL Number should commence with 800 and be 8 numbers long")
*ZZ                  GOTO 1500
               END
            END
         END
*NPR029 * End Changes

         IF CLIENT.ID='10298' AND DIVISION='00004' THEN
            BEGIN CASE
               CASE NOT(NUM(BOL)) ; NULL
               CASE BOL GE "310378" AND BOL LE "310500"
                  EXP.CODE='620-666-666-612'
                  DTAB<1>=EXP.CODE
               CASE BOL GE "312900" AND BOL LE "313200"
                  EXP.CODE='620-666-666-612'
                  DTAB<1>=EXP.CODE
            END CASE
         END
         IF CLIENT.ID = 00972 THEN
            IF EXP.CODE='814000094058' AND BOL='99999' THEN
               EXP.CODE='814000002075'
               DTAB<1>=EXP.CODE
               CRT @(5,12):EXP.CODE:' ':EXP.CODE:@(-4):
            END
         END
         IF CLIENT.ID = '01636' AND IN.OUT='O' THEN          ; * JMK152
            EXP.CODE=VOUT<2>             ; * JMK152
            EXP.DIST=VOUT<4>             ; * JMK152
            EXP.LIST=VOUT<2>             ; * JMK152
            IF EXP.CODE='' THEN          ; * JMK152
               LOCATE 'EXP' IN MISSING.DATA<1> SETTING MISSING.POS ELSE          ; * JMK152
                  MISSING.DATA<1,-1>='EXP'         ; * JMK152
               END                       ; * JMK152
            END                          ; * JMK152
            DTAB<1>=EXP.LIST             ; * JMK152
            EXP.CODE=DTAB<1,1>           ; * JMK152
         END                             ; * JMK152

*DF         IF CLIENT.ID = 01344 AND IN.OUT='O' THEN
         IF CLIENT.ID = 01344 THEN
            EXP.CODE=VOUT<2>
*DF            UFLDS<1>=VOUT<2>[15,4]
            IF EXP.CODE='' THEN
               LOCATE 'EXP' IN MISSING.DATA<1> SETTING MISSING.POS ELSE
                  MISSING.DATA<1,-1>='EXP'
               END
            END
         END
*NPR023      IF CLIENT.ID = "01334" THEN                                                            ;* NPR017
*NPR023         W.SHIPPER = OCONV(VC.DESC,"MCU")
*NPR023         IF IN.OUT='O' THEN DIV.ZIP=PRO.REC<3>
*NPR023         IF IN.OUT='I' THEN DIV.ZIP=PRO.REC<4>
*NPR023         W.SHIP.ZIP = DIV.ZIP[1,5]
*NPR023
*NPR023         HUS.DIV.FLAG = 0

*NPR023         IF W.SHIP.ZIP = "15003"  AND INDEX(W.SHIPPER,"HUSSEY",1) THEN          ;* City = Ambridge
*NPR023            IF INDEX(W.SHIPPER,"FABRIC",1) THEN DIVISION.CODE = "00005"         ;   HUS.DIV.FLAG = 1
*NPR023         END

*NPR023         IF W.SHIP.ZIP = "15056" AND INDEX(W.SHIPPER,"HUSSEY",1) THEN          ;* City = Leetsdale
*NPR023            IF INDEX(W.SHIPPER,"COPPER",1) THEN DIVISION.CODE = "00001"        ;   HUS.DIV.FLAG = 1
*NPR023            IF INDEX(W.SHIPPER,"FABRIC",1) THEN DIVISION.CODE = "00002"        ;   HUS.DIV.FLAG = 1
*NPR023         END

*NPR023         IF W.SHIP.ZIP = "40019" AND INDEX(W.SHIPPER,"HUSSEY",1) THEN          ;* City = Eminence
*NPR023            IF INDEX(W.SHIPPER,"COPPER",1) THEN DIVISION.CODE = "00003"        ;   HUS.DIV.FLAG = 1
*NPR023            IF INDEX(W.SHIPPER,"FABRIC",1) THEN DIVISION.CODE = "00004"        ;   HUS.DIV.FLAG = 1
*NPR023         END

*NPR023         IF HUS.DIV.FLAG THEN
*NPR023            IF PRO.REC<9> NE "" AND DIVISION.CODE NE PRO.REC<9> THEN
*NPR023                CALL ELINE("Should this not be Division ":DIVISION.CODE :" Check with someone !!")
*NPR023            END
*NPR023         END
*NPR023     END

*NPR021 Start of Changes
*         IF CLIENT.ID = "01334" AND (USER = "NPRATT" OR USER = "MARY" OR USER = "MYRA" OR USER = "MKERBOW" OR USER = "OWEN" OR USER = "SMATTHEWS" OR USER = "ZZ AWILLIAMS") THEN
         IF CLIENT.ID = "01334" THEN
            W.SHIPPER = ""
            W.CONSIGNEE = ""

            Z.TESTNAME = OCONV(VC.DESC,"MCU")

            IF IN.OUT='I' THEN
               W.CONSIGNEE = Z.TESTNAME
            END

            IF IN.OUT='O' THEN
               W.SHIPPER = Z.TESTNAME
            END

            HIN = '' ; HOUT = ''         ; * Set EDI.REC= '' for keyed bills
*
            HIN = IN.OUT                 ; * In / Out
            HIN<2> = ORIG.ZIP            ; * Origination Zip.
            HIN<3> = DEST.ZIP            ; * Destination Zip.
            HIN<4> = VC.DESC             ; * Cust./Vend.
            HIN<5> = W.SHIPPER           ; * Shipper
            HIN<6> = W.CONSIGNEE         ; * Consignee
            HIN<7> = BOL                 ; * Bol #
            HIN<8> = CARRIER.ID          ; * Carrier #
            HIN<9> = PRO.REC<7>          ; * Bill Amount
            IN.OUT.HOLD = IN.OUT

            CALL GET.HUSSEY.DIV.EXP(HIN,HOUT)

            H.DIVISION.CODE = HOUT<1>
            H.EXPENSE.CODE = HOUT<2>
            IN.OUT = HOUT<3>
            ERROR.OUT = HOUT<4>

            IF H.DIVISION.CODE = "" THEN H.DIVISION.CODE = DIVISION

            HUSSEY.ERRORS = 0

            IF DIVISION NE H.DIVISION.CODE THEN
               CALL ELINE("Division should be ":H.DIVISION.CODE)
               DIVISION = H.DIVISION.CODE
               HUSSEY.ERRORS = 1
            END

            IF EXP.CODE NE H.EXPENSE.CODE THEN
               CALL ELINE("Expense code should be ":H.EXPENSE.CODE)
               EXP.CODE = H.EXPENSE.CODE
               HUSSEY.ERRORS = 1
            END

            IF IN.OUT NE IN.OUT.HOLD THEN
               CALL ELINE("Shipment IOT should be ":IN.OUT)
               HUSSEY.ERRORS = 1
            END

*NPR023   IF HUSSEY.ERRORS THEN GOTO 500
            IF IN.OUT = "O" AND (CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' OR CARRIER.ID='01075') THEN        ; *NPR023  Ignore checks for Fedex and UPS Outbound
               NULL                      ; *NPR023
            END ELSE                     ; *NPR023
               IF HUSSEY.ERRORS THEN GOTO 500
            END                          ; *NPR023
         END
*NPR021 End of Changes

      END ELSE
         IF BACK.FLAG THEN GOTO 1475
      END
*NPR019      IF CLIENT.ID='01127' OR CLIENT.ID='00761' OR CLIENT.ID='01596' OR CLIENT.ID='01721' THEN GOTO 600

      IF CLIENT.ID='01127' OR CLIENT.ID='00761' OR CLIENT.ID='01596' OR CLIENT.ID='01721' OR CLIENT.ID='01763' THEN GOTO 600       ; * NPR019

*     IF CLIENT.ID='01084' OR (CLIENT.ID='10356' AND DIVISION='00005') OR (CLIENT.ID='10356' AND CARRIER.ID='00015' AND DIVISION='00006') OR (CLIENT.ID='10356' AND DIVISION='00002' AND (CARRIER.ID='00015' OR CARRIER.ID='01075' OR CARRIER.ID='00143' OR CARRIER.ID='00365')) OR CLIENT.ID='10225' OR CLIENT.ID='01163' OR (CLIENT.ID='01196' AND DIVISION='00001') OR CLIENT.ID='01202' OR CLIENT.ID='01225' OR CLIENT.ID='01240' OR CLIENT.ID='01000' OR CLIENT.ID='00984' OR CLIENT.ID='01361' OR CLIENT.ID='01320' OR CLIENT.ID='01305' OR CLIENT.ID='01285' OR CLIENT.ID='01064' OR CLIENT.ID='01472' OR CLIENT.ID='01491' OR CLIENT.ID='01488' THEN GOTO 1297 ; * JMK133
      IF BOL.FIRST THEN
         IF CLIENT.ID = '01567' THEN
            GOTO 600
         END ELSE
            GOTO 1297
         END
      END
*DF      IF BOL.FIRST THEN GOTO 1297        ; * JMK133

*---- Enter discounts
1550: ***
      IF CL.DISC.FLAG = 'Y' THEN
         BACK.FLAG = 0
         CALL FB.2.1.DISC(DISC.PERC,DISC.DET,NET,QI)
         QI = OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI = 'X'
               BACK.FLAG = 1
               GOTO 1500
            CASE QI = 'EX'
               STOP
         END CASE

1555:
         IF DISC.PERC = 0 THEN
            DISC.FLAG = ''
            LOOP
            UNTIL DISC.FLAG # '' DO
               HELP = "Enter Y if pro is discountable or N if not."
               CRT BELL:BELL
               CALL GEN.IN(36,18,'Is pro discountable? N','',Q,1,1,'','',
1              ,-1,18,0,QI,HELP,0,23)
               CC+=LEN(QI) ; GOSUB PRINT.CC
               QI = OCONV(QI,'MCU')
               BEGIN CASE
                  CASE QI = 'N'
                     DISC.FLAG = 'N'
                     HELP = "Enter Y if pro is minimum charge or N if not."
                     CRT BELL:BELL

1560:
                     CALL GEN.IN(36,19,'Is pro minimum charge? N','',Q,1,1,
                     '','',1,-1,19,0,QI,HELP,0,23)
                     CC+=LEN(QI) ; GOSUB PRINT.CC
                     QI = OCONV(QI,'MCU')
                     BEGIN CASE
                        CASE QI = 'N' ! QI = ''
                           MIN.CHG = 'N'
                        CASE QI = 'Y'
                           IF NET LE '6500' THEN
                              MIN.CHG = 'Y'
                           END ELSE
                              CALL ELINE('Net value of pro is greater than $65.00')
                              CC+=1 ; GOSUB PRINT.CC
                              MIN.CHG = 'N'
                           END
                        CASE 1
                           GOTO 1560
                     END CASE
                     QI = OCONV(QI,'MCU')
                  CASE QI = 'Y'
                     DISC.FLAG = 'Y'
                  CASE 1
                     CALL ELINE('Invalid entry!')
                     CC+=1 ; GOSUB PRINT.CC
               END CASE
            REPEAT
         END
         CARRIER.CHG = NET
      END ELSE
         IF BACK.FLAG THEN GOTO 1500
      END

*---- Enter weight
1600: ***
      IF CLIENT.ID#'00574' THEN
         IF (AUDIT='Y' OR (AUDIT='U' AND AVOUT<6>#'') OR AUDIT='S') AND (AUDIT.TYPE[1,3]='LTL' OR AUDIT.TYPE='AIRBRN' OR (AUDIT.TYPE[1,2]='TL' AND USER # '')) THEN
* OH I removed the AUDIT='U' part because if U was true the program
*  Would not ask for the weight even thought the flag was set
*DF      IF AUDIT='Y' AND (AUDIT.TYPE[1,3]='LTL' OR AUDIT.TYPE='AIRBRN' OR (AUDIT.TYPE[1,2]='TL' AND USER # '')) THEN
            IF BACK.FLAG THEN GOTO 1500
*df            IF USER.TYPE='A' THEN
            AUTO.CAL=1
            GOTO 1700
*df            END
         END
      END
      IF CL.WT.FLAG = 'Y' THEN
*NPR028 Start Changes
         IF DO.BOL.POP THEN
            WEIGHT.POP.FLAG = BOL.POP.VER.ARR<1,16>
            IF WEIGHT.POP.FLAG = 'Y' AND NOT(BACK.FLAG) THEN
               WEIGHT = BOL.POP.VER.ARR<4,16>
            END
         END
*NPR028 End Changes
         BACK.FLAG = 0
         HELP = 'Enter the shipment wght. Enter a - behind the wght to convert from kilo to lbs.'
         IF WEIGHT = '' THEN REQ = 1 ELSE REQ = 0
*DF         CALL GEN.IN(0,19,WEIGHT'R#6','',Q,REQ,6,'','',2,-6,19,0,QI,HELP,0,23)
         IF (CLIENT.ID='01323' OR CLIENT.ID='01324' OR CLIENT.ID='01325' OR CLIENT.ID='01326' OR CLIENT.ID='01311') AND (USER='MYRA' OR USER='JAUDIT' OR USER='SMICHALIK' OR USER='DAVID' OR SPECIAL.NIKKI.VACATION) THEN
            CALL GEN.IN(0,20,WEIGHT'R#7','',Q,REQ,7,'','',2,-7,20,0,QI,HELP,0,23)
         END ELSE
            CALL GEN.IN(0,19,WEIGHT'R#6','',Q,REQ,6,'','',2,-6,19,0,QI,HELP,0,23)
         END
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC
         QI = OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI = 'X'
               IF (CLIENT.ID='01323' OR CLIENT.ID='01324' OR CLIENT.ID='01325' OR CLIENT.ID='01326' OR CLIENT.ID ='01311') AND (USER='MYRA' OR USER='JAUDIT' OR USER='SMICHALIK' OR USER='DAVID' OR SPECIAL.NIKKI.VACATION) THEN
                  CRT @(0,20):'        Dim':
               END ELSE
                  CRT @(0,19):'       ':
               END
               BACK.FLAG = 1
               GOTO 1550
            CASE QI = 'EX'
               STOP
            CASE CHANGE.FLAG & QI = ''
               Q = WEIGHT
            CASE QI = ''
               Q = WEIGHT
            CASE QI[LEN(QI),1]='-'
               QI=QI[1,LEN(QI)-1]
               IF NUM(QI) THEN
                  QI=QI/.45359
                  QI=QI'R0'
                  Q=QI
               END ELSE
                  GOTO 1600
               END
            CASE NUM(QI)
               Q = QI
            CASE 1
               GOTO 1600
         END CASE
         IF IN.OUT='O' AND ZIP.ARR#'' AND CLIENT.ID='00574' THEN
            TL.WEIGHT=0
            FOR XX = 1 TO DCOUNT(ZIP.ARR<5>,@VM)
               TL.WEIGHT=TL.WEIGHT+ZIP.ARR<5,XX>
            NEXT XX
            IF Q # TL.WEIGHT THEN
               CALL ELINE('Weight does not match the weight for each zip')
               GOTO 1600
            END
         END
         IF CLIENT.ID = 01529 AND IN.OUT='O' THEN  ; * JMK133
            WT.REJ.TEST=1                ; * JMK134
            IF CARRIER.ID='00015' THEN WT.REJ.TEST=0         ; * JMK134
            IF CARRIER.ID='00041' THEN WT.REJ.TEST=0         ; * JMK134
            IF CARRIER.ID='01075' THEN WT.REJ.TEST=0         ; * JMK134
            IF CARRIER.ID='01312' THEN WT.REJ.TEST=0         ; * JMK134
            IF CARRIER.ID='12440' THEN WT.REJ.TEST=0         ; * NPR04
            IF WT.REJ.TEST THEN          ; * JMK134
               TEST.WT.AMT=0             ; * JMK133
               BOL.NVAL=DCOUNT(BOL,@VM)  ; * JMK133
               FOR BOL.VAL=1 TO BOL.NVAL           ; * JMK133
                  READ CLBOL.REC FROM F.BOL.CRX,BOL<1,BOL.VAL> ELSE CLBOL.REC=''           ; * JMK133
                  CL.WEIGHT=CLBOL.REC<22>+0        ; * JMK133
                  TEST.WT.AMT+=CL.WEIGHT           ; * JMK133
               NEXT BOL.VAL              ; * JMK133
               BEGIN CASE                ; * JMK133
                  CASE TRANS.MODE=2 OR TRANS.MODE=15         ; * JMK133
                     CL.WT.MIN=TEST.WT.AMT*.95     ; * JMK133
                     CL.WT.MAX=TEST.WT.AMT*1.05    ; * JMK133
                  CASE 1                 ; * JMK133
*                    CL.WT.MIN=TEST.WT.AMT         ; * JMK133 ; * JMK142
*                    CL.WT.MAX=TEST.WT.AMT         ; * JMK133 ; * JMK142
                     CL.WT.MIN=TEST.WT.AMT-5.0     ; * JMK133 ; * JMK142
                     CL.WT.MAX=TEST.WT.AMT+5.0     ; * JMK133 ; * JMK142
               END CASE                  ; * JMK133
               IF Q < CL.WT.MIN OR Q > CL.WT.MAX THEN        ; * JMK133
                  WT.REJECT=1            ; * JMK133
               END                       ; * JMK133
            END                          ; * JMK134
         END                             ; * JMK133
         LOCATE Q IN CARRIER.MODE.WGT<1> BY "AR" SETTING POS ELSE NULL
         T.MODE.BY.WGT = OCONV(CARRIER.MODE.BY.WGT<1,POS>,'MCU')
         LTL.CAR=T.MODE.BY.WGT=1         ; * JMK187
         TL.CAR=T.MODE.BY.WGT=6          ; * JMK187
         AIR.CAR=T.MODE.BY.WGT=12        ; * JMK187
         BEGIN CASE
            CASE (CLIENT.ID='01323' OR CLIENT.ID='01324' OR CLIENT.ID='01325' OR CLIENT.ID='01326' OR CLIENT.ID='01311') AND (USER='MYRA' OR USER='JAUDIT' OR USER='SMICHALIK' OR USER='DAVID' OR SPECIAL.NIKKI.VACATION)
               NULL
*DF            CASE CARRIER.MODE='3'
            CASE T.MODE.BY.WGT='3'
               IF Q > 250000 THEN
                  CALL ELINE('Weight can not be greater than 250000')
                  GOTO 1600
               END
            CASE CLIENT.ID = '00574'
               IF Q > 150000 THEN
                  CALL ELINE('Weight can not be greater than 150000')
                  GOTO 1600
               END
*DF            CASE CLIENT.ID = '01311' AND CARRIER.MODE='6'
            CASE CLIENT.ID = '01311' AND T.MODE.BY.WGT='6'
*DF               IF Q > 115000 THEN
*DF                  CALL ELINE('Weight can not be greater than 115000')
*
* Modified the weight for ticket 070821. DRF 10/09/07
*
*DF               IF Q > 189999 THEN
*DF                  CALL ELINE('Weight can not be greater than 189999')
*DF                  GOTO 1600
*DF               END
*DF            CASE CLIENT.ID = '01319' AND CARRIER.ID='14887'
*DF               IF Q > 99999 THEN
*DF                  CALL ELINE('Weight can not be greater than 99999')
*DF                  GOTO 1600
*DF               END
*DF            CASE CARRIER.MODE='1'
            CASE T.MODE.BY.WGT='1'
               IF Q > 50000 THEN
                  CALL ELINE('Weight can not be greater than 50000')
                  GOTO 1600
               END
*DF            CASE CARRIER.MODE='8'
            CASE T.MODE.BY.WGT='8'
               NULL
            CASE 1
               IF Q > 99999 THEN
                  CALL ELINE('Weight can not be greater than 99999')
                  GOTO 1600
               END
         END CASE
         WEIGHT = Q
         BEGIN CASE
            CASE CARRIER.ID="00015"
            CASE CARRIER.ID="00143"
            CASE CARRIER.ID="00365"
            CASE CARRIER.ID="00041"
            CASE 1
               CALL FB.CLEAR.WINDOW
         END CASE
         IF (CLIENT.ID='01323' OR CLIENT.ID='01324' OR CLIENT.ID='01325' OR CLIENT.ID='01326' OR CLIENT.ID='01311') AND (USER='MYRA' OR USER='JAUDIT' OR USER='SMICHALIK' OR USER='DAVID' OR SPECIAL.NIKKI.VACATION) THEN
            CRT @(0,20):WEIGHT'R#7':'  Dim'
         END ELSE
            CRT @(0,19):WEIGHT'R#6'
         END
      END ELSE
         IF BACK.FLAG THEN GOTO 1550
      END
      AUTO.CAL=1
      IF WEIGHT > 50000 THEN CALL ELINE('WARNING! Weight is over 50,000 lbs! Check it!')

*---- Enter carrier charge
1700: ***
      IF AUDIT='Y' OR (AUDIT='U' AND AVOUT<9>#'') THEN
         IF NOT(FRT.FLAG) THEN
            IF BACK.FLAG THEN GOTO 1600
*df            IF USER.TYPE='A' THEN
            GOTO 1800
*df            END
         END
      END
      BACK.FLAG = 0
      HELP = "Enter the carrier charge. [X]=Back [EX]=Exit"
      IF CARRIER.CHG = '' THEN REQ = 1 ELSE REQ = 0
      CALL GEN.IN(6,19,CARRIER.CHG'R26#9','AMT2',Q,REQ,9,'','',2,-9,19,0,QI,HELP,0,23)
      CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      QI = OCONV(QI,'MCU')
      IF QI[LEN(QI),1]='+' THEN
         FLAT.RATE=1
         QI=QI[1,LEN(QI)-1]
      END
      BEGIN CASE
         CASE QI = ''
            Q = CARRIER.CHG
         CASE QI = 'X'
            CRT @(6,19):'         ':
            BACK.FLAG = 1
            GOTO 1600
         CASE QI = 'EX'
            STOP
*DF         CASE (CLIENT.ID = '00885' OR CLIENT.ID = '00223' OR CLIENT.ID='00924' OR CLIENT.ID='01228' OR CLIENT.ID='01211' OR CLIENT.ID='01212') AND QI='0'
*
* Removed 01211 Mointain coin per Owen - DRF 5/11/04
*
         CASE (CLIENT.ID = '00885' OR CLIENT.ID = '00223' OR CLIENT.ID='00924' OR CLIENT.ID='01228' OR CLIENT.ID='01212' OR CLIENT.ID='01088' OR CLIENT.ID='01674') AND QI='0'
            AUTO.CAL=0
            VER.CODE='CC' ; VER.TYPE='R' ; GOSUB UPDATE.VERIFY
            VER.CODE='VD' ; VER.TYPE='R' ; GOSUB UPDATE.VERIFY
            GOTO 1700
         CASE NUM(QI)
            VAR.ARR = ''
            IF USER.TYPE#'A' THEN ACTUAL.CHG = ''
         CASE 1
            GOTO 1700
      END CASE
      IF Q[LEN(Q),1]='+' THEN Q=Q[1,LEN(Q)-1]
*     IF CLIENT.ID='01380' AND USER.TYPE#'A' AND (CARRIER.ID='08354' OR CARRIER.ID='01906') THEN ; * JMK87
*     IF CLIENT.ID='01380' AND USER.TYPE#'A' AND (CARRIER.ID='08354' OR CARRIER.ID='01906' OR CARRIER.ID='15994') THEN   ; * JMK87; * JMK94
      IF CLIENT.ID='01380' AND USER.TYPE#'A' AND IN.OUT='O' AND (CARRIER.ID='08354' OR CARRIER.ID='01906' OR CARRIER.ID='15994' OR CARRIER.ID='16058') THEN      ; * JMK87; * JMK94
         IF Q#CARRIER.CHG THEN
            Q=Q*.8
            Q=Q'R0'
         END
      END
      IF OLD.PRO.REC<88>#'' AND (CARRIER.ID = "00015" OR CARRIER.ID = "01075" OR CARRIER.ID="00143") THEN      ; ** EDI BILL
*DF      IF OLD.PRO.REC<88>#'' AND (CARRIER.ID = "00015" OR CARRIER.ID = "01075") AND USER#'RCASON' AND USER#'JMILLER' AND USER#'CSANFORD' AND USER#'LCARDWELL' AND USER#'DAVID' THEN           ; ** EDI BILL
         IF Q#CARRIER.CHG AND NOT(SU.FLAG) THEN    ; * Can't Change Amount
            CALL ELINE('Cannot Change EDI Bill Amount!')
            CC+=1 ; GOSUB PRINT.CC
            GOTO 1700
         END
      END
      CARRIER.CHG = Q'R0'
      IF ACTUAL.CHG = '' THEN
         BEGIN CASE
            CASE AUTO.CAL AND CLIENT.ID='00885' AND CARRIER.ID='00015' AND BILL.DATE GE ICONV('09/09/97','D') AND DEST.ZIP # "99999" AND ORIG.ZIP # "99999"
               ACTUAL.CHG=CARRIER.CHG
               CARRIER.CHG=CARRIER.CHG+(CARRIER.CHG*.3821)
               CARRIER.CHG=CARRIER.CHG'R0'
               VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
*DF            IF AUTO.CAL AND CLIENT.ID='00223' THEN
            CASE CLIENT.ID='00223' AND AUTO.CAL
               ACTUAL.CHG=CARRIER.CHG
               CARRIER.CHG=CARRIER.CHG+(CARRIER.CHG*.075)
               CARRIER.CHG=CARRIER.CHG'R0'
               VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
*           CASE CLIENT.ID='01211' AND AUTO.CAL    ; * JMK13; * JMK29
*              ACTUAL.CHG=CARRIER.CHG    ; * JMK13; * JMK29
*              CARRIER.CHG=CARRIER.CHG+(CARRIER.CHG*.020)    ; * JMK13; * JMK29
*              CARRIER.CHG=CARRIER.CHG'R0'         ; * JMK13; * JMK29
*              VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY      ; * JMK13; * JMK29
            CASE CLIENT.ID='01212' AND AUTO.CAL    ; * JMK13
               ACTUAL.CHG=CARRIER.CHG    ; * JMK13
               CARRIER.CHG=CARRIER.CHG+(CARRIER.CHG*.020)    ; * JMK13
               CARRIER.CHG=CARRIER.CHG'R0'         ; * JMK13
               VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY      ; * JMK13
            CASE (CLIENT.ID='00924' OR CLIENT.ID='01228') AND CARRIER.ID='03324' AND AUTO.CAL
*          AArons Automotive and O&S Trucking "Milk Run"
               ACTUAL.CHG=CARRIER.CHG
               LOOKUP.DATE=DATE()        ; * Use Today as a lookup date
               LOCATE LOOKUP.DATE IN CLIENT.REC(84)<1> BY 'AR' SETTING POS ELSE POS=POS-1
               IF POS=0 THEN POS=1
               CONS.PERC=CLIENT.REC(85)<1,POS>/100
               NEGO.PERC="30"            ; * AFS's Portion of Actual Charges is 3.0%
               CONS.AMT=(NEGO.PERC*ACTUAL.CHG)/(CONS.PERC*10)
               CARRIER.CHG=ACTUAL.CHG+CONS.AMT
               CARRIER.CHG=CARRIER.CHG'R0'
               VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
               VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
            CASE CLIENT.ID='01176' AND (CARRIER.ID='00015' OR CARRIER.ID='01075')
*           Superlift and FedEx logistic only keyed
               CONS.AMT=CARRIER.CHG
               ACTUAL.CHG=0
               VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
               VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
            CASE CLIENT.ID='01088' AND CARRIER.ID='00807' AND AUTO.CAL           ; * JMK103
*          Hi-Lo Industries and JB Hunt "Milk Run"
               ACTUAL.CHG=CARRIER.CHG    ; * JMK103
               LOOKUP.DATE=DATE()        ; * Use Today as a lookup date ; * JMK103
               LOCATE LOOKUP.DATE IN CLIENT.REC(84)<1> BY 'AR' SETTING POS ELSE POS=POS-1  ; * JMK103
               IF POS=0 THEN POS=1       ; * JMK103
               CONS.PERC=CLIENT.REC(85)<1,POS>/100           ; * JMK103
               NEGO.PERC="20"            ; * AFS's Portion of Actual Charges is 2.0% ; * JMK103
               CONS.AMT=(NEGO.PERC*ACTUAL.CHG)/(CONS.PERC*10)          ; * JMK103
               CARRIER.CHG=ACTUAL.CHG+CONS.AMT     ; * JMK103
               CARRIER.CHG=CARRIER.CHG'R0'         ; * JMK103
               VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY      ; * JMK103
               VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY      ; * JMK103
            CASE CLIENT.ID='01674' AND AUTO.CAL    ; * JMK155
* First Source Electrical client (01674) ; * JMK155
               ACTUAL.CHG=CARRIER.CHG    ; * JMK155
               LOOKUP.DATE=DATE()        ; * Use Today as a lookup date ; * JMK155
               LOCATE LOOKUP.DATE IN CLIENT.REC(84)<1> BY 'AR' SETTING POS ELSE POS=POS-1  ; * JMK155
               IF POS=0 THEN POS=1       ; * JMK155
               CONS.PERC=CLIENT.REC(85)<1,POS>/100           ; * JMK155
               NEGO.PERC="200"           ; * AFS's Portion of Actual Charges is 20.0% ; * JMK155
               CONS.AMT=(NEGO.PERC*ACTUAL.CHG)/(CONS.PERC*10)          ; * JMK155
               CARRIER.CHG=ACTUAL.CHG+CONS.AMT     ; * JMK155
               CARRIER.CHG=CARRIER.CHG'R0'         ; * JMK155
               VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY      ; * JMK155
               VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY      ; * JMK155
            CASE 1
               ACTUAL.CHG = CARRIER.CHG
         END CASE
      END ELSE
         IF USER.TYPE#'A' AND CLIENT.ID='00223' THEN
            ACTUAL.CHG=CARRIER.CHG
            CARRIER.CHG=CARRIER.CHG+(CARRIER.CHG*.075)
            CARRIER.CHG=CARRIER.CHG'R0'
            VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
         END
*        IF CLIENT.ID='01211' AND AUTO.CAL THEN    ; * JMK29
*           ACTUAL.CHG=CARRIER.CHG       ; * JMK13; * JMK29
*           CARRIER.CHG=CARRIER.CHG+(CARRIER.CHG*.020)       ; * JMK13; * JMK29
*           CARRIER.CHG=CARRIER.CHG'R0'  ; * JMK13; * JMK29
*           VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY         ; * JMK13; * JMK29
*           VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY         ; * JMK29
*        END                             ; * JMK29
         IF CLIENT.ID='01212' AND AUTO.CAL THEN
            ACTUAL.CHG=CARRIER.CHG       ; * JMK13
            CARRIER.CHG=CARRIER.CHG+(CARRIER.CHG*.020)       ; * JMK13
            CARRIER.CHG=CARRIER.CHG'R0'  ; * JMK13
            VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY         ; * JMK13
            VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
         END
         IF (CLIENT.ID='00924' OR CLIENT.ID='01228') AND CARRIER.ID='03324' AND AUTO.CAL THEN
*         AArons Automotive and O&S Trucking "Milk Run"
            ACTUAL.CHG=CARRIER.CHG
            LOOKUP.DATE=DATE()           ; * Use Today as a lookup date
            LOCATE LOOKUP.DATE IN CLIENT.REC(84)<1> BY 'AR' SETTING POS ELSE POS=POS-1
            IF POS=0 THEN POS=1
            CONS.PERC=CLIENT.REC(85)<1,POS>/100
            NEGO.PERC="30"               ; * AFS's Portion of Actual Charges is 3.0%
            CONS.AMT=(NEGO.PERC*ACTUAL.CHG)/(CONS.PERC*10)
            CARRIER.CHG=ACTUAL.CHG+CONS.AMT
            CARRIER.CHG=CARRIER.CHG'R0'
            VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
            VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
         END
         IF CLIENT.ID='01176' AND (CARRIER.ID='00015' OR CARRIER.ID='01075') THEN
*        Superlift and FedEx logistic only keyed
            CONS.AMT=CARRIER.CHG
            ACTUAL.CHG=0
            VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
            VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
            CRT @(15,19):ACTUAL.CHG'R26#9'
         END
         IF CLIENT.ID='01088' AND CARRIER.ID='00807' AND AUTO.CAL THEN           ; * JMK103
*          Hi-Lo Industries and JB Hunt "Milk Run"
            ACTUAL.CHG=CARRIER.CHG       ; * JMK103
            LOOKUP.DATE=DATE()           ; * Use Today as a lookup date ; * JMK103
            LOCATE LOOKUP.DATE IN CLIENT.REC(84)<1> BY 'AR' SETTING POS ELSE POS=POS-1     ; * JMK103
            IF POS=0 THEN POS=1          ; * JMK103
            CONS.PERC=CLIENT.REC(85)<1,POS>/100    ; * JMK103
            NEGO.PERC="20"               ; * AFS's Portion of Actual Charges is 2.0% ; * JMK103
            CONS.AMT=(NEGO.PERC*ACTUAL.CHG)/(CONS.PERC*10)   ; * JMK103
            CARRIER.CHG=ACTUAL.CHG+CONS.AMT        ; * JMK103
            CARRIER.CHG=CARRIER.CHG'R0'  ; * JMK103
            VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY         ; * JMK103
            VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY         ; * JMK103
         END                             ; * JMK103
         IF CLIENT.ID='01674' AND AUTO.CAL THEN    ; * JMK155
* First Source Electrical client (01674) ; * JMK155
            ACTUAL.CHG=CARRIER.CHG       ; * JMK155
            LOOKUP.DATE=DATE()           ; * Use Today as a lookup date ; * JMK155
            LOCATE LOOKUP.DATE IN CLIENT.REC(84)<1> BY 'AR' SETTING POS ELSE POS=POS-1     ; * JMK155
            IF POS=0 THEN POS=1          ; * JMK155
            CONS.PERC=CLIENT.REC(85)<1,POS>/100    ; * JMK155
            NEGO.PERC="200"              ; * AFS's Portion of Actual Charges is 20.0% ; * JMK155
            CONS.AMT=(NEGO.PERC*ACTUAL.CHG)/(CONS.PERC*10)   ; * JMK155
            CARRIER.CHG=ACTUAL.CHG+CONS.AMT        ; * JMK155
            CARRIER.CHG=CARRIER.CHG'R0'  ; * JMK155
            VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY         ; * JMK155
            VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY         ; * JMK155
         END                             ; * JMK155
      END
      CRT @(6,19):CARRIER.CHG'R26#9'
      FIRST.TIME.TRY=1

*---- Enter actual charge
1800: ***
*DF      IF AUDIT='Y' OR (AUDIT='U' AND AVOUT<8>#'') THEN
      IF AUDIT='Y' OR (AUDIT='U' AND AVOUT<8>+0#0) THEN
         IF NOT(FRT.FLAG) THEN
            IF BACK.FLAG THEN GOTO 1700
*df            IF USER.TYPE='A' THEN
            GOTO 1825
*df            END
         END
      END
      BACK.FLAG = 0
      IF CLIENT.ID='01176' AND (CARRIER.ID='00015' OR CARRIER.ID='01075') THEN
         GOTO 1825
      END
      IF FLAT.RATE THEN
         CRT @(24,19):'F'
      END
      HELP = "Enter the Actual Charge. [X]=Back [EX]=Exit"
      CALL GEN.IN(15,19,ACTUAL.CHG'R26#9','AMT2',Q,0,9,'','',2,-9,19,0,QI,HELP,0,23)
      CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      QI = OCONV(QI,'MCU')
      IF QI#'X' AND QI#'' AND FLAT.RATE THEN
         IF QI[LEN(QI),1]#'+' THEN
            FLAT.RATE=0
            CRT @(24,19):' '
         END
      END
      IF QI[LEN(QI),1]='+' THEN
         FLAT.RATE=1
         QI=QI[1,LEN(QI)-1]
      END
      BEGIN CASE
         CASE QI = ''
            Q = ACTUAL.CHG
         CASE QI = 'X'
            CRT @(15,19):'         ':
            GOTO 1700
         CASE NUM(QI)
            VAR.ARR = ''
         CASE QI = 'EX'
            STOP
         CASE 1
            GOTO 1800
      END CASE
      IF Q[LEN(Q),1]='+' THEN Q=Q[1,LEN(Q)-1]
      IF OLD.PRO.REC<88>#'' AND (CARRIER.ID = "00015" OR CARRIER.ID = "01075" OR CARRIER.ID = "00143") THEN    ; ** EDI BILL
*DF      IF OLD.PRO.REC<88>#'' AND (CARRIER.ID = "00015" OR CARRIER.ID = "01075") AND USER#'RCASON' AND USER#'JMILLER' AND USER#'CSANFORD' AND USER#'LCARDWELL' AND USER#'DAVID' THEN           ; ** EDI BILL
         IF Q#ACTUAL.CHG THEN            ; * Can't Change Amount
            IF NOT(SU.FLAG) THEN
               CALL ELINE('Cannot Change EDI Bill Amount!')
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1800
            END ELSE
               REMIT.ID=CLIENT.ID:'*':PRO.ID
               READ DREMIT FROM EDI.REMIT,REMIT.ID THEN
                  DELETE EDI.REMIT,REMIT.ID
               END
            END
         END
      END
      IF PRO[LEN(PRO)-1,2] = 'BD' OR PRO[LEN(PRO)-1,2] = 'AD' ELSE
         IF PRO.REC<98>+0#0 AND USER.TYPE='A' THEN
            IF Q > PRO.REC<98> THEN
               CALL ELINE('Amount must be equal or less than the amount keyed by freight payment.')
               GOTO 1800
            END
         END
      END
      IF CARRIER.ID='00041' AND CLIENT.ID='10337' AND PRO[1,7]='753-294' THEN
         IF Q LT CARRIER.CHG-1 THEN
            CALL ELINE('Actual Charge must be within a penny of Carrier Charge. See Myra')
            GOTO 1800
         END
      END

*NPR030      IF PRO[LEN(PRO)-1,2]='AD' AND Q > "59999" THEN
      W.NEVERPAY = (PRO.REC<66>='N' AND PRO.REC<39>='R')     ; *NPR030
      IF PRO[LEN(PRO)-1,2]='AD' AND Q > "59999" AND NOT(W.NEVERPAY) THEN         ; *NPR030
AD.CONFIRMATION: ***
         CRT CHAR(7)
         HELP='Press Enter for confirmation or X-back to Actual Charge'
         CALL GEN.IN(0,22,'Carrier amount excess limit. Press Enter to Send password to supervisor *****','',Y,0,5,'','',2,-5,22,0,YI,HELP,0,23)
         IF OCONV(YI,'MCU')='X' THEN
            CRT @(0,22):@(-4):
            GOTO 1800
         END
         IF TRIM(YI)='' ELSE
            CALL ELINE('Invalid Entry.')
            GOTO AD.CONFIRMATION
         END
*
* AD over 599.99 has to have a supervisor approval
*
*DF        TODAY=DATE()
*DF        PASS.WORD=(MOD(TODAY,7)+1)*TODAY+CLIENT.ID+INT(TIME())
         PASS.WORD=OCONV(PRO,'MCN')
         PASS.WORD=PASS.WORD*17
         PASS.WORD=PASS.WORD[LEN(PASS.WORD)-5,6]
*
         MVIN=''
         SUBJ='AD for more than the limit was attempted'
         TEXT=USER:' attempted to enter a AD bill with an amount '
         TEXT<1,-1>='of ':Q'R26':' '
         TEXT<1,-1>='on ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
         TEXT<1,-1>='Client ':CLIENT.ID:' Carrier ':CARRIER.ID:' Pro ':PRO
         IF FOUND.ORIG THEN
            TEXT<1,-1>='Original Bill was paid at ':ORIG.ON.FILE<8>'R26'
         END
         TEXT<1,-1>='PASSWORD is ':PASS.WORD
         MVIN=''
*        MVIN<1>='MButts@afs.net' ; * JMK88
         MVIN<1>='BJeppson@afs.net'      ; * JMK88
         MVIN<1,-1>='SMatthews@afs.net'
*df        MVIN<2>='Wayne@afs.net':@VM:'MButts@afs.net'
         MVIN<4>='AFS'
         MVIN<5>=SUBJ
         MVIN<6>=TEXT
         CALL SENDMAIL(MVIN,MVOUT)
AD.PASSWORD: ***
         HELP='Enter password X-back to Actual Charge or C to Cancel bill'
         ECHO OFF
         CALL GEN.IN(0,22,'Password: ***********','',Y,0,11,'','',2,-11,22,0,YI,HELP,0,23)
         ECHO ON
         IF OCONV(YI,'MCU')='X' THEN
            CRT @(0,22):@(-4):
            GOTO 1800
         END
         IF OCONV(YI,'MCU')='C' THEN
            GOTO 300
         END
         IF YI=PASS.WORD ELSE
            CALL ELINE('Invalid Password.')
            GOTO AD.PASSWORD
         END
      END
*DF      IF PRO[LEN(PRO)-1,2]='AD' AND CARRIER.ID#'00015' THEN
*DF        IF PRO[LEN(PRO)-3,2] = 'AD' THEN
*DF          AD.ID = CARRIER.ID:'*':PRO[1,LEN(PRO)-4]:"*":VERSION
*DF        END ELSE
*DF          AD.ID = CARRIER.ID:'*':PRO[1,LEN(PRO)-2]:"*":VERSION
*DF        END
*DF        READ OLD.CHRG.REC FROM F.HIST,AD.ID ELSE OLD.CHRG.REC=''
*DF        OLD.CHRG.AMT=OLD.CHRG.REC<8>
*DF        IF Q > (OLD.CHRG.AMT * .25) THEN
*DF          CALL ELINE('Carrier amount excess limit. See Supervisor.')
*DF          GOTO 1800
*DF        END
*DF      END
      IF BAL.DUE THEN
         IF PRO[LEN(PRO)-5,2] = 'BD' THEN
            LOOKUP.DATE=DATE()
            LOCATE LOOKUP.DATE IN CLIENT.REC(84)<1> BY 'AR' SETTING DATE.POS ELSE DATE.POS=DATE.POS-1
            IF DATE.POS=0 THEN DATE.POS=1
            IF CLIENT.REC(131)<1,DATE.POS>#'' THEN
               CALL ELINE('Cannot enter a BDBDBD for this client because it has a overcharge cap.')
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1800
            END
            BD.ID = CARRIER.ID:'*':PRO[1,LEN(PRO)-6]:"*":VERSION
            READ OLD.OVC.REC FROM F.HIST,BD.ID ELSE OLD.OVC.REC=''
            OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
            OLD.OVC.COM=ABS(OLD.OVC.REC<43>)       ; * JMK190
            IF CLIENT.ID='01706' THEN
               READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
               IF OLD.OVC.REC<1>='00902' OR OLD.OVC.REC<1>='00917' OR OLD.OVC.REC<1>='00918' OR OLD.OVC.REC<1>='00938' OR OLD.OVC.REC<1>='01164' OR OLD.OVC.REC<1>='01472' OR OLD.OVC.REC<1>='01479' OR OLD.OVC.REC<1>='01576' OR OLD.OVC.REC<1>='01578' THEN
                  OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
               END
            END
            IF CLIENT.ID='01633' THEN
               READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
               IF OLD.OVC.REC<1>='00972' THEN
                  OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
               END
            END
            BD.ID = CARRIER.ID:'*':PRO[1,LEN(PRO)-4]:"*":VERSION
            READ OLD.OVC.REC FROM F.HIST,BD.ID ELSE OLD.OVC.REC=''
            OLD.OVC.AMT=OLD.OVC.AMT-OLD.OVC.REC<8>
            OLD.OVC.COM-=ABS(OLD.OVC.REC<43>)      ; * JMK190
            IF CLIENT.ID='01706' THEN
               READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
               IF OLD.OVC.REC<1>='00902' OR OLD.OVC.REC<1>='00917' OR OLD.OVC.REC<1>='00918' OR OLD.OVC.REC<1>='00938' OR OLD.OVC.REC<1>='01164' OR OLD.OVC.REC<1>='01472' OR OLD.OVC.REC<1>='01479' OR OLD.OVC.REC<1>='01576' OR OLD.OVC.REC<1>='01578' THEN
                  OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
               END
            END
            IF CLIENT.ID='01633' THEN
               READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
               IF OLD.OVC.REC<1>='00972' THEN
                  OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
               END
            END
            BD.ID = CARRIER.ID:'*':PRO[1,LEN(PRO)-2]:"*":VERSION
            READ OLD.OVC.REC FROM F.HIST,BD.ID ELSE OLD.OVC.REC=''
            OLD.OVC.AMT=OLD.OVC.AMT-OLD.OVC.REC<8>
            OLD.OVC.COM-=ABS(OLD.OVC.REC<43>)      ; * JMK190
            IF CLIENT.ID='01706' THEN
               READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
               IF OLD.OVC.REC<1>='00902' OR OLD.OVC.REC<1>='00917' OR OLD.OVC.REC<1>='00918' OR OLD.OVC.REC<1>='00938' OR OLD.OVC.REC<1>='01164' OR OLD.OVC.REC<1>='01472' OR OLD.OVC.REC<1>='01479' OR OLD.OVC.REC<1>='01576' OR OLD.OVC.REC<1>='01578' THEN
                  OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
               END
            END
            IF CLIENT.ID='01633' THEN
               READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
               IF OLD.OVC.REC<1>='00972' THEN
                  OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
               END
            END
         END ELSE
            IF PRO[LEN(PRO)-3,2] = 'BD' THEN
               LOOKUP.DATE=DATE()
               LOCATE LOOKUP.DATE IN CLIENT.REC(84)<1> BY 'AR' SETTING DATE.POS ELSE DATE.POS=DATE.POS-1
               IF DATE.POS=0 THEN DATE.POS=1
               IF CLIENT.REC(131)<1,DATE.POS>#'' THEN
                  CALL ELINE('Cannot enter a BDBD for this client because it has a overcharge cap.')
                  CC+=1 ; GOSUB PRINT.CC
                  GOTO 1800
               END
               BD.ID = CARRIER.ID:'*':PRO[1,LEN(PRO)-4]:"*":VERSION
               READ OLD.OVC.REC FROM F.HIST,BD.ID ELSE OLD.OVC.REC=''
               OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
               OLD.OVC.COM=ABS(OLD.OVC.REC<43>)    ; * JMK190
               IF CLIENT.ID='01706' THEN
                  READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
                  IF OLD.OVC.REC<1>='00902' OR OLD.OVC.REC<1>='00917' OR OLD.OVC.REC<1>='00918' OR OLD.OVC.REC<1>='00938' OR OLD.OVC.REC<1>='01164' OR OLD.OVC.REC<1>='01472' OR OLD.OVC.REC<1>='01479' OR OLD.OVC.REC<1>='01576' OR OLD.OVC.REC<1>='01578' THEN
                     OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
                  END
               END
               IF CLIENT.ID='01633' THEN
                  READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
                  IF OLD.OVC.REC<1>='00972' THEN
                     OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
                  END
               END
               BD.ID = CARRIER.ID:'*':PRO[1,LEN(PRO)-2]:"*":VERSION
               READ OLD.OVC.REC FROM F.HIST,BD.ID ELSE OLD.OVC.REC=''
               OLD.OVC.AMT=OLD.OVC.AMT-OLD.OVC.REC<8>
               OLD.OVC.COM-=ABS(OLD.OVC.REC<43>)   ; * JMK190
               IF CLIENT.ID='01706' THEN
                  READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
                  IF OLD.OVC.REC<1>='00902' OR OLD.OVC.REC<1>='00917' OR OLD.OVC.REC<1>='00918' OR OLD.OVC.REC<1>='00938' OR OLD.OVC.REC<1>='01164' OR OLD.OVC.REC<1>='01472' OR OLD.OVC.REC<1>='01479' OR OLD.OVC.REC<1>='01576' OR OLD.OVC.REC<1>='01578' THEN
                     OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
                  END
               END
               IF CLIENT.ID='01633' THEN
                  READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
                  IF OLD.OVC.REC<1>='00972' THEN
                     OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
                  END
               END
            END ELSE
               BD.ID = CARRIER.ID:'*':PRO[1,LEN(PRO)-2]:"*":VERSION
               READ OLD.OVC.REC FROM F.HIST,BD.ID ELSE OLD.OVC.REC=''
*DF          OLD.OVC.AMT=ABS(OLD.OVC.REC<10>+OLD.OVC.REC<11>)
               OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
               OLD.OVC.COM=ABS(OLD.OVC.REC<43>)    ; * JMK190
               IF CLIENT.ID='01706' THEN
                  READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
                  IF OLD.OVC.REC<1>='00902' OR OLD.OVC.REC<1>='00917' OR OLD.OVC.REC<1>='00918' OR OLD.OVC.REC<1>='00938' OR OLD.OVC.REC<1>='01164' OR OLD.OVC.REC<1>='01472' OR OLD.OVC.REC<1>='01479' OR OLD.OVC.REC<1>='01576' OR OLD.OVC.REC<1>='01578' THEN
                     OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
                  END
               END
               IF CLIENT.ID='01633' THEN
                  READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
                  IF OLD.OVC.REC<1>='00972' THEN
                     OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
                  END
               END
            END
         END
         IF Q > OLD.OVC.AMT THEN
            CALL ELINE('ERROR - BD Bill Amount Cannot Exceed Previous OC Cutback of ':OLD.OVC.AMT'R26,':'.')
            CC+=1 ; GOSUB PRINT.CC
            GOTO 1800
         END
      END
      IF Q GE "1000000" AND CARRIER.ID # "00041" AND USER.TYPE#'A' THEN
*DF         IF USER#"MYRA" AND USER#"FPMGR" AND USER#"DAVID" AND USER#"MARY" AND USER#'KRISTY' AND USER#'JESPOSITO' AND USER#'NFASONE' THEN        ; * JMK48
*DF            CALL ELINE("Only Myra, Mary, John, Nikki, and FPMGR can enter bills 10,000 and above.")  ; * JMK48
*DF            GOTO 1800                    ; * JMK48
*DF         END ELSE                        ; * JMK48
*DF            CALL ELINE("Warning: Bills over 10,000 must be approved by Myra, Mary, John or Nikki.")   ; * JMK48
*DF         END                             ; * JMK48
         BEGIN CASE                      ; * JMK48
            CASE USER='MYRA'             ; * JMK48
            CASE USER='FPMGR'            ; * JMK48
*DF            CASE USER='DAVID'            ; * JMK48
            CASE USER='MARY'             ; * JMK48
            CASE USER='KRISTY'           ; * JMK48
            CASE USER='BRIAN'            ; * JMK48
            CASE USER='OWEN'             ; * JMK48
            CASE USER='KAREN'            ; * JMK48
            CASE USER='BRIAN'            ; * JMK48
            CASE USER='JESPOSITO' AND FP.CO='00002'          ; * JMK48
            CASE USER='SMICHALIK' AND FP.CO='00002'
            CASE USER='SGARVIN' AND CLIENT.ID='01311' AND TODAY > "14427" AND TODAY < "14433"
            CASE USER='SGARVIN' AND CLIENT.ID='01311' AND TODAY > "14427" AND TODAY < "14470"
            CASE USER='SGARVIN' AND CLIENT.ID='01460' AND TODAY > "14427" AND TODAY < "14470"
            CASE USER='SMICHALIK' AND CLIENT.ID='01460' AND TODAY > "14427" AND TODAY < "14433"
            CASE USER='SMICHALIK' AND CLIENT.ID='01311' AND TODAY < "14309"
            CASE SPECIAL.NIKKI.VACATION
            CASE SU.FLAG
            CASE 1                       ; * JMK48
               CALL ELINE("Only Myra and FPMGR can enter bills 10,000 and above.")         ; * JMK48
               GOTO 1800                 ; * JMK48
         END CASE                        ; * JMK48
*        CALL ELINE("Warning: Bills over 10,000 must be approved by Myra, Mary, John, or Nikki.")    ; * JMK48 ; * JMK128
         CALL ELINE("Warning: Bills over 10,000 must be approved by Myra, Mary, Adam, or Nikki.")    ; * JMK48 ; * JMK128
      END
      ACTUAL.CHG = Q'R0'
      IF FLAT.RATE THEN
         CRT @(24,19):'F'
      END ELSE
         CRT @(24,19):' '
      END
      CRT @(15,19):ACTUAL.CHG'R26#9'
      IF ACTUAL.CHG GT CARRIER.CHG THEN
         CALL ELINE('ERROR - Actual charge cannot be greater than carrier charge.')
         CC+=1 ; GOSUB PRINT.CC
         GOTO 1800
      END
      IF OLD.PRO.REC<8>#'' THEN
         IF OLD.PRO.REC<8>#ACTUAL.CHG THEN CHANGE.EXP=1
      END
      CARRIER.AND.ACTUAL.MATCH=0
      IF AUDIT.TYPE # 'LTLALL' AND USER.TYPE#'A' AND NOT(SU.FLAG) THEN
         CARRIER.AND.ACTUAL.MATCH=1
      END
      IF AUDIT.TYPE = 'LTLALL' AND USER.TYPE#'A' AND NOT(SU.FLAG) THEN
         IF AUDIT # 'Y' AND AUDIT # 'U' THEN
            CARRIER.AND.ACTUAL.MATCH=1
         END
         IF AUDIT = 'U' THEN
            IF AMOUNT.MATCH = '' THEN
               CARRIER.AND.ACTUAL.MATCH=1
            END
         END
      END
*DF      IF CARRIER.AND.ACTUAL.MATCH AND (CLIENT.ID # '00223' AND (CLIENT.ID # '00924' OR CARRIER.ID # '03324') AND (CLIENT.ID # '01228' OR CARRIER.ID # '03324') AND (CLIENT.ID#'01211') AND (CLIENT.ID#'01212') AND (CLIENT.ID # '00885' OR CARRIER.ID # '00015')) THEN
*
* Removed 01211 Mointain coin per Owen - DRF 5/11/04
*
*     IF CARRIER.AND.ACTUAL.MATCH AND (CLIENT.ID # '00223' AND (CLIENT.ID # '00924' OR CARRIER.ID # '03324') AND (CLIENT.ID # '01228' OR CARRIER.ID # '03324')AND (CLIENT.ID#'01212') AND (CLIENT.ID # '00885' OR CARRIER.ID # '00015')) THEN ; * JMK103
      IF CARRIER.AND.ACTUAL.MATCH AND (CLIENT.ID # '00223' AND (CLIENT.ID # '00924' OR CARRIER.ID # '03324') AND (CLIENT.ID # '01228' OR CARRIER.ID # '03324')AND (CLIENT.ID#'01212') AND (CLIENT.ID # '00885' OR CARRIER.ID # '00015') AND (CLIENT.ID # '01088' OR CARRIER.ID # '00807') AND (CLIENT.ID # '01674' OR CARRIER.ID #'00041')) THEN     ; * JMK103
         IF ACTUAL.CHG # CARRIER.CHG THEN
            CALL ELINE('ERROR - Actual charge must match carrier charge.')
            CC+=1 ; GOSUB PRINT.CC
            GOTO 1800
         END
      END
      GOSUB 9500                         ; * JMK31
*     IF BLOCKIT=1 THEN GO 300           ; * JMK31 ; * JMK172
      IF BLOCKIT.YES=1 THEN GO 300       ; * JMK31 ; * JMK172

*** Append notes when Accounting creates a one-cent variance
      IF SU.FLAG AND DBCTRL<15> = 'AC' THEN        ; * JCW05
         IF CARRIER.CHG = 1 AND ACTUAL.CHG = 0 THEN          ; * JCW05
            NOTE1 = 'Original Amount of ':OCONV(OLD.PRO.REC<8>,'MR2$')           ; * JCW05
            NOTE1 := ', changed on ':OCONV(DATE(),'D2/')     ; * JCW05
            NOTE2 = 'by ':USER:' in Accounting.'   ; * JCW05
*** To prevent adding the notes more than once...
            LOCATE NOTE1 IN FB.NOTE<1> SETTING POS ELSE      ; * JCW05
               FB.NOTE<1,-1> = NOTE1     ; * JCW05
               FB.NOTE<1,-1> = NOTE2     ; * JCW05
            END                          ; * JCW05
         END ELSE                        ; * JCW05
*** Remove appended notes when Accounting removes the one-cent variance
            IF OLD.PRO.REC<7> = 1 AND OLD.PRO.REC<8> = 0 THEN          ; * JCW05
               NOTE.CNT = DCOUNT(FB.NOTE,CHAR(253))          ; * JCW05
               FOR I = 1 TO NOTE.CNT     ; * JCW05
                  IF FB.NOTE<1,I>[1,19] = 'Original Amount of ' THEN   ; * JCW05
                     FB.NOTE = DELETE(FB.NOTE,1,I)           ; * JCW05
                     IF FB.NOTE<1,I>[1,3] = 'by ' THEN FB.NOTE = DELETE(FB.NOTE,1,I)       ; * JCW05
                     EXIT                ; * JCW05
                  END                    ; * JCW05
               NEXT I                    ; * JCW05
            END                          ; * JCW05
         END                             ; * JCW05
      END                                ; * JCW05

*---- Display mileage
1825: *** Skip Actual Charge
      IF CL.MILE.FLAG = 'Y' THEN
         IF SENT.TO.PCMILER THEN
            VIN='READ'
            VIN<2>=CH.NUM
            CALL PCMILER.BETA(VIN,VOUT,F.PCIN,F.PCOUT,F.MILEAGE)
            SENT.TO.PCMILER=0
            MILEAGE=OCONV(VOUT<1>,'MR0')
*
* Added MR0 on 7/16/02 by DRF
*
         END
         CRT @(5,15):MILEAGE'L1,#10'
         CRT @(0,22):@(-4):
      END

*---- Calculate charges
1850:
      CHARGES = 0
      TEMP.CLIENT.ID=CLIENT.ID
      IF CLIENT.ID='00760' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='00978' THEN
         TEMP.CLIENT.ID='00857'
      END
*DF      IF CLIENT.ID='00981' THEN
*DF        TEMP.CLIENT.ID='00857'
*DF      END
      IF CLIENT.ID='00981' AND (NOT(CLIENT.AUDIT AND CARRIER.AUDIT) OR CARRIER.ID='00030'OR CARRIER.ID='00093' OR CARRIER.ID='00787' OR CARRIER.ID='00014') THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='00986' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01028' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01029' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01044' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01045' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01059' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01024' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01026' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01104' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01058' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01532' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01361' AND (CARRIER.ID='00017' OR CARRIER.ID='00093' OR CARRIER.ID='00014') THEN
         TEMP.CLIENT.ID='00857'
      END
*DF      IF CLIENT.ID='01384' AND (CARRIER.ID='00017' OR CARRIER.ID='00093' OR CARRIER.ID='00014') THEN
      IF CLIENT.ID='01384' THEN
         TEMP.CLIENT.ID='00857'
      END
*DF      IF CLIENT.ID='01385' AND (CARRIER.ID='00017' OR CARRIER.ID='00093' OR CARRIER.ID='00014') THEN
      IF CLIENT.ID='01385' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01533' THEN
         TEMP.CLIENT.ID='00857'
      END
      TEMP.CARRIER.ID=CARRIER.ID
      IF USER.NAME='DAVID' THEN CALL ELINE('Wayne rating')
      IF LTL.CAR THEN
         BEGIN CASE
            CASE CARRIER.ID='00212'
            CASE CARRIER.ID='00017'
            CASE CARRIER.ID='00093'
            CASE CARRIER.ID='00030'
            CASE CARRIER.ID='00787'
            CASE CARRIER.ID='00014' AND TEMP.CLIENT.ID='00857' AND CLIENT.ID#'01028' AND CLIENT.ID#'01044' AND CLIENT.ID#'01045' AND CLIENT.ID#'01059'
            CASE 1
               TEMP.CARRIER.ID='99999'
         END CASE
*DF         IF CLIENT.ID='00986' AND CARRIER.ID='00030' THEN
*DF            TEMP.CARRIER.ID='00030'
*DF         END
*DF         IF CLIENT.ID='00986' AND CARRIER.ID='00093' THEN
*DF            TEMP.CLIENT.ID='00986'
*DF         END
         IF CLIENT.ID='00986' AND CARRIER.ID='00093' THEN
            TEMP.CLIENT.ID='00986'
         END
         IF CLIENT.ID='01361' AND CARRIER.ID='00093' THEN
            TEMP.CLIENT.ID='00986'
         END
         IF CLIENT.ID='00981' AND CARRIER.ID='00093' THEN
            TEMP.CLIENT.ID='00981'
         END
         IF CLIENT.ID='00986' AND CARRIER.ID='00018' THEN
            TEMP.CLIENT.ID='00986'
            TEMP.CARRIER.ID='00018'
         END
         IF CLIENT.ID='00986' AND CARRIER.ID='02653' THEN
            TEMP.CLIENT.ID='00986'
            TEMP.CARRIER.ID='02653'
         END
         IF CLIENT.ID='01029' AND CARRIER.ID='00018' THEN
            TEMP.CLIENT.ID='00986'
            TEMP.CARRIER.ID='00018'
         END
         IF CLIENT.ID='00981' AND CARRIER.ID='00124' THEN
            TEMP.CLIENT.ID='00981'
            INDIRECT=0
            IF INDEX('MN-WI-MI-IA-KS-MO-AL-GA-NC-SC-TN-KY-IN-IL-OH-PA-NY',ORIG.STATE,1) ELSE
               INDIRECT=1
            END
            IF INDEX('MN-WI-MI-IA-KS-MO-AL-GA-NC-SC-TN-KY-IN-IL-OH-PA-NY',DEST.STATE,1) ELSE
               INDIRECT=1
            END
            TEMP.CARRIER.ID='00124'
            IF INDIRECT THEN
               TEMP.CARRIER.ID='00563'
            END
         END
         IF CLIENT.ID='00981' AND CARRIER.ID='00563' THEN
            TEMP.CLIENT.ID='00981'
            TEMP.CARRIER.ID='00124'
         END
         IF CLIENT.ID='00981' AND CARRIER.ID='00018' THEN
            TEMP.CLIENT.ID='00981'
            TEMP.CARRIER.ID='00018'
         END
         IF CLIENT.ID='00981' AND CARRIER.ID='00748' THEN
            TEMP.CLIENT.ID='00981'
            TEMP.CARRIER.ID='00748'
         END
         IF CLIENT.ID='00981' AND CARRIER.ID='00017' AND IN.OUT='O' AND ORIG.ZIP='53144' THEN
            TEMP.CLIENT.ID='00981'
            TEMP.CARRIER.ID='00017'
         END
         IF CLIENT.ID='00981' AND CARRIER.ID='00017' AND IN.OUT='O' AND ORIG.ZIP='16506' THEN
            TEMP.CLIENT.ID='00981'
            TEMP.CARRIER.ID='00017'
         END
         IF CLIENT.ID='00981' AND CARRIER.ID='00017' AND IN.OUT='O' AND ORIG.ZIP='44087' THEN
            TEMP.CLIENT.ID='00981'
            TEMP.CARRIER.ID='00017'
         END
         IF CLIENT.ID='00981' AND CARRIER.ID='00017' AND IN.OUT='O' AND ORIG.ZIP='47978' THEN
            TEMP.CLIENT.ID='00981'
            TEMP.CARRIER.ID='00017'
         END
*DF         IF CLIENT.ID='00981' AND CARRIER.ID='00014' THEN
*DF            TEMP.CLIENT.ID='00981'
*DF            TEMP.CARRIER.ID='00014'
*DF         END
*DF         IF CLIENT.ID='00981' AND CARRIER.ID='00014' AND IN.OUT='O' AND ORIG.ZIP='36507' THEN
*DF            TEMP.CLIENT.ID='00981'
*DF            TEMP.CARRIER.ID='00014'
*DF         END
*DF         IF CLIENT.ID='00981' AND CARRIER.ID='00014' AND IN.OUT='I' AND DEST.ZIP='36507' THEN
*DF            TEMP.CLIENT.ID='00981'
*DF            TEMP.CARRIER.ID='00014'
*DF         END
*DF         IF CLIENT.ID='00857' AND CARRIER.ID='00030' THEN
*DF            TEMP.CARRIER.ID='00030'
*DF         END
         IF CLIENT.ID='00981' AND CARRIER.ID='00601' THEN
            TEMP.CLIENT.ID='00981'
            TEMP.CARRIER.ID='00601'
         END
         IF CLIENT.ID='00978' AND CARRIER.ID='00017' THEN
            TEMP.CLIENT.ID='00978'
            TEMP.CARRIER.ID='00017'
         END
         IF CLIENT.ID='01044' AND CARRIER.ID='00014' THEN
            TEMP.CLIENT.ID='01045'
            TEMP.CARRIER.ID='00014'
         END
         IF CLIENT.ID='01059' AND CARRIER.ID='00014' THEN
            TEMP.CLIENT.ID='01045'
            TEMP.CARRIER.ID='00014'
         END
         IF CLIENT.ID='01045' AND CARRIER.ID='00014' THEN
            TEMP.CLIENT.ID='01045'
            TEMP.CARRIER.ID='00014'
         END
         IF CLIENT.ID='01028' AND CARRIER.ID='00014' THEN
            TEMP.CLIENT.ID='01045'
            TEMP.CARRIER.ID='00014'
         END
         IF CLIENT.ID='01024' AND CARRIER.ID='00014' THEN
            TEMP.CLIENT.ID='01045'
            TEMP.CARRIER.ID='00014'
         END
         IF CLIENT.ID='01044' AND CARRIER.ID='00017' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01059' AND CARRIER.ID='00017' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01045' AND CARRIER.ID='00017' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01028' AND CARRIER.ID='00017' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01024' AND CARRIER.ID='00017' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01044' AND CARRIER.ID='00093' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01059' AND CARRIER.ID='00093' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01045' AND CARRIER.ID='00093' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01028' AND CARRIER.ID='00093' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01024' AND CARRIER.ID='00093' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01044' AND CARRIER.ID='00171' THEN
            TEMP.CLIENT.ID='01045'
            TEMP.CARRIER.ID='00171'
         END
         IF CLIENT.ID='01059' AND CARRIER.ID='00171' THEN
            TEMP.CLIENT.ID='01045'
            TEMP.CARRIER.ID='00171'
         END
         IF CLIENT.ID='01045' AND CARRIER.ID='00171' THEN
            TEMP.CLIENT.ID='01045'
            TEMP.CARRIER.ID='00171'
         END
         IF CLIENT.ID='01028' AND CARRIER.ID='00171' THEN
            TEMP.CLIENT.ID='01045'
            TEMP.CARRIER.ID='00171'
         END
         IF CLIENT.ID='01024' AND CARRIER.ID='00171' THEN
            TEMP.CLIENT.ID='01045'
            TEMP.CARRIER.ID='00171'
         END
         IF CLIENT.ID='01044' AND CARRIER.ID='00212' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01059' AND CARRIER.ID='00212' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01045' AND CARRIER.ID='00212' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01028' AND CARRIER.ID='00212' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01024' AND CARRIER.ID='00212' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01044' AND CARRIER.ID='00453' THEN
            TEMP.CLIENT.ID='01045'
            TEMP.CARRIER.ID='00453'
         END
         IF CLIENT.ID='01059' AND CARRIER.ID='00453' THEN
            TEMP.CLIENT.ID='01045'
            TEMP.CARRIER.ID='00453'
         END
         IF CLIENT.ID='01045' AND CARRIER.ID='00453' THEN
            TEMP.CLIENT.ID='01045'
            TEMP.CARRIER.ID='00453'
         END
         IF CLIENT.ID='01028' AND CARRIER.ID='00453' THEN
            TEMP.CLIENT.ID='01045'
            TEMP.CARRIER.ID='00453'
         END
         IF CLIENT.ID='01024' AND CARRIER.ID='00453' THEN
            TEMP.CLIENT.ID='01045'
            TEMP.CARRIER.ID='00453'
         END
         IF CLIENT.ID='00978' AND CARRIER.ID='00114' AND BILL.DATE GT 13281 THEN
            TEMP.CLIENT.ID='XXXXX'
         END
         IF CLIENT.ID='00760' AND CARRIER.ID='00114' AND BILL.DATE GT 13281 THEN
            TEMP.CLIENT.ID='XXXXX'
         END
         IF CLIENT.ID='00978' AND CARRIER.ID='00601' THEN
            TEMP.CLIENT.ID='00978'
            TEMP.CARRIER.ID='00601'
         END
         IF CLIENT.ID='01361' AND CARRIER.ID='00601' THEN
            TEMP.CLIENT.ID='00978'
            TEMP.CARRIER.ID='00601'
         END
         IF CLIENT.ID='00760' AND CARRIER.ID='00601' THEN
            TEMP.CLIENT.ID='00978'
            TEMP.CARRIER.ID='00601'
         END
         IF CLIENT.ID='00986' AND CARRIER.ID='00601' THEN
            TEMP.CLIENT.ID='00978'
            TEMP.CARRIER.ID='00601'
         END
*DF         IF CLIENT.ID='01028' AND CARRIER.ID='00014' THEN
*DF            TEMP.CLIENT.ID='999-999'
*DF            TEMP.CARRIER.ID='00014'
*DF         END
*DF         IF CLIENT.ID='01045' AND CARRIER.ID='00014' THEN
*DF            TEMP.CLIENT.ID='999-999'
*DF            TEMP.CARRIER.ID='00014'
*DF         END
*
* Installed the above to lines so that mileage rates would not apply
* to these two client carriers. Ticket 070852. DRF 10/11/07
*
         IF CLIENT.ID='00857' AND CARRIER.ID='00212' THEN
            TEMP.CLIENT.ID='99999'
            TEMP.CARRIER.ID='00212'
         END
         IF CLIENT.ID='00857' AND CARRIER.ID='00171' THEN
            TEMP.CLIENT.ID='00857'
            TEMP.CARRIER.ID='00171'
         END
* Installed the above 8 lines for miles for Enpro Stemco. Ticket 081287
* DRF 05/14/08
         IF CLIENT.ID='00857' AND CARRIER.ID='00601' THEN
            TEMP.CLIENT.ID='00978'
            TEMP.CARRIER.ID='00601'
         END
         IF TEMP.CLIENT.ID='00857' AND TEMP.CARRIER.ID='00787' THEN
            IF ORIG.STATE='TX' AND INDEX('FL-LA',DEST.STATE,1) THEN
               TEMP.CARRIER.ID='99998'
            END
            IF ORIG.STATE='AL' AND INDEX('FL-LA-OK-TX',DEST.STATE,1) THEN
               TEMP.CARRIER.ID='99997'
            END
            IF ORIG.STATE='AL' AND DEST.STATE='CA' THEN
               TEMP.CARRIER.ID='99996'
            END
         END
      END
      IF USER='DAVID' THEN CALL ELINE('ENTERING THE RATES')
      CALL FB.2.1.RATE(TEMP.CLIENT.ID,TEMP.CARRIER.ID,CLASS,MILEAGE,WEIGHT,CHARGES,MARGIN)
      IF CHARGES # 0 THEN
         READ BENCH.DFSC FROM F.NFSC,CARRIER.ID ELSE BENCH.DFSC=''
         IF CLIENT.ID='01862' AND CARRIER.ID='00114' THEN
            READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
         END
         IF CLIENT.ID='01862' AND CARRIER.ID='00601' THEN
            READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
         END
         IF CLIENT.ID='01862' AND CARRIER.ID='00979' THEN
            READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
         END
         IF CLIENT.ID='01862' AND CARRIER.ID='00014' THEN
            READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
         END
         IF CLIENT.ID='01862' AND CARRIER.ID='00198' THEN
            READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
         END
         IF CLIENT.ID='01862' AND CARRIER.ID='00030' THEN
            READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
         END
         IF CLIENT.ID='01863' AND CARRIER.ID='00114' THEN
            READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
         END
         IF CLIENT.ID='01863' AND CARRIER.ID='00601' THEN
            READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
         END
         IF CLIENT.ID='01863' AND CARRIER.ID='00979' THEN
            READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
         END
         IF CLIENT.ID='01863' AND CARRIER.ID='00014' THEN
            READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
         END
         IF CLIENT.ID='01863' AND CARRIER.ID='00198' THEN
            READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
         END
         IF CLIENT.ID='01863' AND CARRIER.ID='00030' THEN
            READ BENCH.DFSC FROM F.NFSC,'00114*99288' ELSE BENCH.DFSC=''
         END
         READ CONTR.DFSC FROM F.NFSC,CARRIER.ID:"*":CLIENT.ID ELSE CONTR.DFSC=BENCH.DFSC
         IF BENCH.DFSC<1>='DISABLE' THEN
            BENCH.DFSC=''                ; ** No Effect
            CONTR.DFSC=''
         END
*        IF CLIENT.REC(27) < 13455 THEN  ; * JMK45
*        IF CARR.FSC # "Y" THEN     ; * JMK45; * JMK61
*           BENCH.DFSC=CONTR.DFSC        ; * JMK61
*        END                             ; * JMK61
         IF BENCH.DFSC#'' THEN
            FSC.VIN=BILL.DATE
            FSC.VIN<2>=WEIGHT
            FSC.VIN<3>=MILEAGE
            FSC.VIN<6>=CHARGES
            FSC.VIN<7>=ORIG.STATE        ; * Special for Xpedx & AFS
            FSC.VIN<8>=DEST.STATE        ; * Special for AFS
            CALL CALC.FSC(FSC.VIN,FSC.VOUT,BENCH.DFSC,F.TABLES)
            CHARGES=CHARGES+FSC.VOUT<1>
            OLA.AMT=CHARGES
         END
      END

*---- Check actual charges against calculated charges

      IF CHARGES # 0 AND ACTUAL.CHG-CHARGES GT MARGIN AND FIRST.TIME.TRY THEN
         FIRST.TIME.TRY=0
         CALL ELINE('Charges do not match on line audit. Please verify amount')
         ACTUAL.CHG=''
         GOTO 1800
      END
      IF CHARGES # 0 AND USER.TYPE#'A' THEN
         XX = ACTUAL.CHG-CHARGES
         IF XX GT MARGIN THEN
            BILL.STATUS='3'
*DAVID           MISROUTE.ARRAY=''
*DAVID           MISROUTE.ARRAY<1>=CHARGES
*DAVID           MISROUTE.ARRAY<2>='70000'
*DAVID           MISROUTE.AMOUNT=CHARGES
*DAVID           MISROUTE.CARRIER='70000'
*DF            CRT @(0,21):BELL:BELL:
*DF            LOOP
*DF               CALL INPUT.CLEAR(0,21)
*DF               HELP = "[Y]=Yes. [N]=No."
*DF               DVAR = "WARNING - Actual ":CHARGES'L26,'
*DF               DVAR := ", Overcharge ":XX'L26,'
*DF               DVAR := ", set bill aside for auditor? Y"
*DF               CALL GEN.IN(0,22,DVAR,'',Q,0,1,'','',0,-1,22,1,QI,HELP,0,23)
*DF               CC+=LEN(QI)+1; GOSUB PRINT.CC
*DF               QI = OCONV(QI,'MCU')
*DF            UNTIL QI = 'Y' ! QI = 'N' ! QI = '' DO
*DF            REPEAT
*DF            IF QI # 'N' THEN
*DF               GOSUB 8100
*DF               GOTO 300                               ;* ENTER PRO
*DF            END
         END ELSE
            BILL.STATUS=1
         END
      END
*DF      IF CLIENT.ID='00857' THEN
*DF        IF CARRIER.ID#'00212' AND CARRIER.ID#'00787' AND CARRIER.ID#'04861' AND CARRIER.ID#'01751' AND CARRIER.ID#'05156' AND CARRIER.ID#'00453' AND CARRIER.ID#'01786' AND CARRIER.ID#'00114' AND CARRIER.ID#'00017' AND CARRIER.ID#'00451' AND CARRIER.ID#'00223' AND CARRIER.ID#'00093' THEN
*DF           BILL.STATUS='4'
*DF         END
*DF       END
      IF TEMP.CLIENT.ID='00857' THEN
         IF CLIENT.ID='00986' THEN
            IF CARRIER.ID#'00212' AND CARRIER.ID#'00787' AND CARRIER.ID#'04861' AND CARRIER.ID#'01751' AND CARRIER.ID#'05156' AND CARRIER.ID#'00453' AND CARRIER.ID#'01786' AND CARRIER.ID#'00114' AND CARRIER.ID#'00017' AND CARRIER.ID#'00451' AND CARRIER.ID#'00223' AND CARRIER.ID#'00093' AND CARRIER.ID#'02653' AND CARRIER.ID#'00376' AND CARRIER.ID#'01648' AND CARRIER.ID#'00030' THEN
               BILL.STATUS='4'
               IF LTL.CAR THEN
                  MISROUTE.ARRAY=''
                  MISROUTE.ARRAY<1>=CHARGES
                  MISROUTE.ARRAY<2>='70000'
                  MISROUTE.AMOUNT=CHARGES
                  MISROUTE.CARRIER='70000'
               END
            END
         END ELSE
            IF CARRIER.ID#'00212' AND CARRIER.ID#'00787' AND CARRIER.ID#'04861' AND CARRIER.ID#'01751' AND CARRIER.ID#'05156' AND CARRIER.ID#'00453' AND CARRIER.ID#'01786' AND CARRIER.ID#'00114' AND CARRIER.ID#'00017' AND CARRIER.ID#'00451' AND CARRIER.ID#'00223' AND CARRIER.ID#'00093' AND CARRIER.ID#'00376' AND CARRIER.ID#'01648' AND CARRIER.ID#'00030' AND CARRIER.ID#'00014' AND CARRIER.ID#'00601' AND CARRIER.ID# '00171' THEN
*DF               IF CARRIER.ID='00030' AND CLIENT.ID='00857' ELSE
               BILL.STATUS='4'
               IF LTL.CAR THEN
                  MISROUTE.ARRAY=''
                  MISROUTE.ARRAY<1>=CHARGES
                  MISROUTE.ARRAY<2>='70000'
                  MISROUTE.AMOUNT=CHARGES
                  MISROUTE.CARRIER='70000'
               END
*DF               END
            END
         END
      END
1875: ***
      IF USER.TYPE='A' AND BILL.STATUS='3' AND CHARGES AND FIRST.TIME.THRU THEN
         IF CAPACITY.LOAD#'' THEN
            CRT @(0,21):'Capacity'
         END ELSE
            CRT @(0,21):'        '
         END
         CRT @(15,21):CHARGES'R26#9'
         HELP='[1]=Accept OLA, [2]=Accept Data, [3]=Enter Charges'
         CALL GEN.IN(0,22,'Enter [A] to accept these amounts --','',Q,0,2,'','',2,-2,22,0,QI,HELP,0,23)
         CC+=LEN(QI)+1
         QI = OCONV(QI,'MCU')
         IF QI='X' THEN
            CRT @(0,22):@(-3)
            GOTO 1600
         END
         IF QI='EX' THEN
            STOP
         END
         IF QI='3' THEN
            CARRIER.CHG=''
            ACTUAL.CHG=''
            OVERCHARGE.AMT=''
            LOGISTICS.AMT=''
            AUTO.CAL=0
            FIRST.TIME.THRU=0
            GOTO 1700
         END
         IF QI='2' THEN
            CRT @(0,21):@(-3)
            GOTO 2200
         END
         IF QI='A' OR QI = '1' THEN
            ACTUAL.CHG=CHARGES
            OVERCHARGE.AMT=CARRIER.CHG-ACTUAL.CHG
            IF OVERCHARGE.AMT < 0 THEN
               OVERCHARGE.AMT=0
            END
            CRT @(6,19):CARRIER.CHG'R26#9'
            CRT @(15,19):ACTUAL.CHG'R26#9'
            CRT @(0,22):@(-3)
            GOTO 1900
         END
         CALL ELINE('Invalid entry')
         GOTO 1875
      END

*---- Select variance

1900: ***
      VARIANCE = (CARRIER.CHG-ACTUAL.CHG)'R0'
      CRT @(25,19):VARIANCE'R26#7'
*DF      IF (AUTO.CAL AND CLIENT.ID='00885' AND CARRIER.ID='00015' AND BILL.DATE GE ICONV('09/09/97','D') AND DEST.ZIP # "99999" AND ORIG.ZIP # "99999") OR (CLIENT.ID='00223' AND AUTO.CAL) OR (CLIENT.ID='00924' AND CARRIER.ID='03324' AND AUTO.CAL)OR (CLIENT.ID='01228' AND CARRIER.ID='03324') OR (CLIENT.ID='01211' AND AUTO.CAL) OR (CLIENT.ID='01212' AND AUTO.CAL) THEN
*
* Removed 01211 Mointain coin per Owen - DRF 5/11/04
*
*     IF (AUTO.CAL AND CLIENT.ID='00885' AND CARRIER.ID='00015' AND BILL.DATE GE ICONV('09/09/97','D') AND DEST.ZIP # "99999" AND ORIG.ZIP # "99999") OR (CLIENT.ID='00223' AND AUTO.CAL) OR (CLIENT.ID='00924' AND CARRIER.ID='03324' AND AUTO.CAL) OR (CLIENT.ID='01228' AND CARRIER.ID='03324') OR (CLIENT.ID='01212' AND AUTO.CAL) THEN ; * JMK103
      IF (AUTO.CAL AND CLIENT.ID='00885' AND CARRIER.ID='00015' AND BILL.DATE GE ICONV('09/09/97','D') AND DEST.ZIP # "99999" AND ORIG.ZIP # "99999") OR (CLIENT.ID='00223' AND AUTO.CAL) OR (CLIENT.ID='00924' AND CARRIER.ID='03324' AND AUTO.CAL) OR (CLIENT.ID='01228' AND CARRIER.ID='03324') OR (CLIENT.ID='01212' AND AUTO.CAL) OR (CLIENT.ID='01088' AND CARRIER.ID='00807' AND AUTO.CAL) OR (CLIENT.ID='01674' AND CARRIER.ID='00041' AND AUTO.CAL) THEN  ; * JMK103
         IF AUDIT#'Y' THEN
            VAR.ARR=''
            VAR.ARR<3>=VARIANCE
         END
         VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
         IF BACK.FLAG THEN GOTO 1800
         GOTO 1950
      END
      IF CLIENT.ID='01176' AND (CARRIER.ID='00015' OR CARRIER.ID='01075') THEN
         VAR.ARR=''
         VAR.ARR<3>=VARIANCE
         VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
         IF BACK.FLAG THEN GOTO 1800
         GOTO 1950
      END
      IF VARIANCE # 0 & VERSION = 0 THEN
*DF     IF AUDIT#'Y' OR (USER.TYPE='A' AND VAR.ARR<2>#'') THEN
         IF (USER.TYPE='A' AND VAR.ARR<1>#'') OR (USER.TYPE='A' AND VAR.ARR<2>#'') OR (AUDIT#'Y' AND AUDIT#'U') OR (USER.TYPE='A') THEN
*           IF VAR.ARR<8>='Tariff Error' THEN VAR.ARR<8>=''  ; * JMK154
*           IF VAR.ARR<7>='Tariff Error' THEN VAR.ARR<7>=''  ; * JMK154
            IF VAR.ARR<8>='Tariff Error' THEN VAR.ARR<8>='' ; VAR.ARR<11>=''     ; * JMK154
            IF VAR.ARR<7>='Tariff Error' THEN VAR.ARR<7>='' ; VAR.ARR<10>=''     ; * JMK154
            IF OLD.PRO.REC<41,1>#'' AND VAR.ARR<1>#'' THEN VAR.ARR<7>=OLD.PRO.REC<41,1>
            IF OLD.PRO.REC<41,2>#'' AND VAR.ARR<2> THEN VAR.ARR<8>=OLD.PRO.REC<41,2>
            IF OLD.PRO.REC<41,3>#'' AND VAR.ARR<3>#'' THEN VAR.ARR<9>=OLD.PRO.REC<41,3>
            BACK.FLAG = 0
            VIN=0                        ; * Starting Characters
            VIN<2>=USER
            GOSUB GET.ALLOW.DISCOUNTS
            VIN<3>=ALLOW.DISCOUNTS
            VIN<4>=CLIENT.ID
            VIN<5>=CARRIER.ID
            VOUT=''
            CALL FB.2.1.VARIANCE.NEW(VIN,VOUT,MAT CLIENT.REC,BAL.DUE,VARIANCE,VAR.ARR,QI)
            CC+=VOUT<1> ; GOSUB PRINT.CC
            DISC.DESC=VOUT<2>            ; * JMK34
            GOSUB 8100                   ; * Display screen
            GOSUB 8200                   ; * Display data
            IF QI = 'X' THEN
               BACK.FLAG = 1
               GOTO 1800
            END
            IF QI = 'D' THEN GOTO 1900
            IF QI = 'EX' THEN STOP
         END
         IF BACK.FLAG THEN GOTO 1800
*        END ELSE
*          IF BACK.FLAG THEN GOTO 1800
*          VAR.ARR=''
*          IF OVERCHARGE.AMT+0 > 0 THEN
*             VAR.ARR<2>=OVERCHARGE.AMT
*             VAR.ARR<8>='Tariff Error'
*          END
*          IF LOGISTIC.AMT+0 > 0 THEN
*             VAR.ARR<3>=LOGISTIC.AMT
*          END
**DF          VAR.ARR=''
**DF          VAR.ARR<3>=VARIANCE ; * Logistics Variance
*          * Going to try to leave BILL<41> Null (Variance Description)
*        END
      END ELSE
         IF BACK.FLAG THEN GOTO 1800
      END
********************* Add Misrouting **********************
*---- Enter Misrouting charge

1950:
*OH   IF APRVD.CARRS & APRVD.CARRIER='N' THEN
      IF CLIENT.REC(69)='Y' OR CLIENT.REC(69)=IN.OUT THEN
         MISROUTE.ARRAY=''
         MISROUTE.AMOUNT=''
         MISROUTE.CARRIER=''
      END
*DF      IF CLIENT.REC(69)='Y' OR MISROUTE.ARRAY#'' THEN
      IF ((CLIENT.REC(69)='Y' OR MISROUTE.ARRAY<1>#'') AND (CLIENT.REC(69)='Y' OR MISROUTE.ARRAY<2>#'')) OR ((CLIENT.REC(69)=IN.OUT OR MISROUTE.ARRAY<1>#'') AND CLIENT.REC(69)=IN.OUT OR MISROUTE.ARRAY<2>#'') THEN
*df         CRT @(33,16):'Misrouting Approved'
         CRT @(43,17):' Charges    Approved Carrier'
         CRT @(33,19):'Misroute: '
         CRT @(33,20):'LCC: '
         CRT @(43,18):'----------  -------'
         IF USER='DAVID' THEN CALL ELINE('PRESS BREAK - GOING INTO MISROUTE')
*********************************************************************
         BEGIN CASE
*         CASE AUDIT='Y'
*           GOSUB FIND.GOOD.CARRIER
*         CASE AUDIT='U'
*           GOSUB FIND.GOOD.CARRIER
*DF          CASE MISROUTE.FLG=1 AND NOT(CHANGE.FLAG)
*           CASE MISROUTE.FLG=1 AND VC.OVERRIDE#'Y'          ; * JMK56
* Owen Added VC.OVERRIDE on 02-26-01.  If override flag = 'Y' don't look; * JMK56
*           CASE MISROUTE.FLG=1          ; * JMK56 ; * JMK153
            CASE MISROUTE.FLG=1 AND VC.OVERRIDE#'Y'          ; * JMK56 ; * JMK153
               GOSUB FIND.GOOD.CARRIER
*DF          CASE (CLIENT.ID='00877' OR CLIENT.ID='00893') AND CARRIER.ID='00004' AND NOT(CHANGE.FLAG)
            CASE (CLIENT.ID='00877' OR CLIENT.ID='00893') AND CARRIER.ID='00004'
               GOSUB FIND.GOOD.CARRIER
         END CASE
         IF OWEN THEN CALL ELINE('Got All Misroute Information')
         IF USER='DAVID' THEN CALL ELINE('Got All Misroute Information')
*       IF ACTUAL.CHG LE MISROUTE.AMOUNT AND CLIENT.ID#'00891' THEN
* Let negative Misroutes through for Zexel Decatur
* tbs Let all negative Miroutes through and catch on download and reports
*         MISROUTE.AMOUNT='' ; MISROUTE.CARRIER=''
*       END
*DF        IF MISROUTE.AMOUNT+0#0 THEN
*DF          VER.CODE='M' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
*DF        END
         SAVE.MR.AMOUNT=MISROUTE.AMOUNT ; SAVE.MR.CARRIER=MISROUTE.CARRIER
*********************************************************************
         CRT @(43,19):MISROUTE.AMOUNT'R26#10'
         IF MISROUTE.CARRIER#'' THEN
            READV MISROUTE.NAME FROM F.CARRIERS,MISROUTE.CARRIER,1 ELSE
               MISROUTE.NAME='Unknown Carrier'
            END
            CRT @(56,19):MISROUTE.CARRIER'R%5':' ':MISROUTE.NAME'L#10'
         END ELSE
            CRT @(56,19):SPACE(16)
         END
*DF         IF USER='DAVID' OR USER='MYRA' OR USER='MARY' OR SU.FLAG THEN
         IF SU.FLAG THEN
            IF BACK.FLAG AND MISROUTE.AMOUNT+0#0 THEN GOTO ENTER.MISROUTE.CARRIER
ENTER.MISROUTE.CHARGE: ***
            BACK.FLAG = 0
            HELP = "Enter the Misrouting Charge. [X]=Back [EX]=Exit"
            REQ=0
            CALL GEN.IN(43,19,MISROUTE.AMOUNT'R26#10','AMT2',Q,REQ,9,'','',2,-10,19,0,QI,HELP,0,23)
            CC+=LEN(QI)+1 ; GOSUB PRINT.CC
            QI = OCONV(QI,'MCU')
            BEGIN CASE
               CASE QI = ''
                  Q = MISROUTE.AMOUNT
               CASE QI = 'X'
                  CRT @(43,19):MISROUTE.AMOUNT'R26#10'
                  BACK.FLAG=1
                  GOTO 1800
               CASE NUM(QI)
                  NULL
               CASE QI = 'EX'
                  STOP
               CASE 1
                  GOTO 1950
            END CASE
*         IF Q > ACTUAL.CHG AND CLIENT.ID#"00891" THEN
*   Let negative Misroutes through for Zexel Decatur
*   Let negative Misourtes through and catch on download and reports
*            CALL ELINE('ERROR - Misrouting Charge cannot be greater than the actual charge.')
*          CC+=1; GOSUB PRINT.CC
*            GOTO 1950
*         END
            MISROUTE.AMOUNT = Q'R0'
            IF VC.OVERRIDE='Y' AND MISROUTE.AMOUNT+0#0 THEN  ; * JMK05 ; * JMK56 ; * JMK153
               CALL ELINE("Vendor Override in Effect...No Misroutes")  ; * JMK05 ; * JMK56 ; * JMK153
               MISROUTE.AMOUNT=0         ; * JMK05 ; * JMK56 ; * JMK153
            END                          ; * JMK05 ; * JMK56 ; * JMK153
            CRT @(43,19):MISROUTE.AMOUNT'R26#10'
            IF MISROUTE.AMOUNT+0=0 THEN
               CRT @(56,19):SPACE(16)
               MISROUTE.CARRIER=''
               MISROUTE.NAME=''
            END
            IF MISROUTE.AMOUNT < 100 AND MISROUTE.AMOUNT # 0 THEN
               HELP = 'Is this the correct amount?':BELL
               CALL GEN.IN(0,22,'Correct? Y ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
               CC+=LEN(QI)+1 ; GOSUB PRINT.CC
               QI = OCONV(QI,'MCU')
               IF QI # 'Y' THEN GOTO 1950
            END
         END
      END ELSE
*DF         IF USER='DAVID' OR USER='MYRA' OR USER='MARY' OR SU.FLAG THEN
         IF SU.FLAG THEN
            IF BACK.FLAG THEN GOTO 1900
         END ELSE
            IF BACK.FLAG THEN GOTO 1800
         END
      END

*DF      IF USER='DAVID' OR USER='MYRA' OR USER='MARY' OR SU.FLAG THEN
      IF SU.FLAG THEN
         IF MISROUTE.AMOUNT+0#0 THEN
ENTER.MISROUTE.CARRIER:
            IF MISROUTE.CARRIER # '' THEN MASK = MISROUTE.CARRIER'R%5' ELSE MASK = '#####'
            BACK.FLAG=0
            HELP = "Enter the approved carrier for the misroute."
            CALL GEN.IN(56,19,MASK,'',Q,0,20,'','',2,-5,19,0,QI,HELP,0,23)
            CC+=LEN(QI)+1 ; GOSUB PRINT.CC
            QI = OCONV(QI,'MCU')
            IF QI='' THEN QI=MISROUTE.CARRIER ; Q=MISROUTE.CARRIER
            BEGIN CASE
               CASE QI = 'EX'
                  STOP
               CASE QI = 'X'
                  IF MISROUTE.CARRIER#'' THEN
*DF                VER.CODE='M' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
                     CRT @(56,19):MISROUTE.CARRIER'R%5'
                  END ELSE
                     CRT @(56,19):SPACE(16)
                  END
                  GOTO 1950
               CASE QI = ''
                  CALL ELINE('Entry is required.')
                  GOTO ENTER.MISROUTE.CARRIER
               CASE NOT(QI MATCHES "0N")
                  VIN=0                  ; * Starting Chars In
                  VOUT=''
                  CALL SOUNDEX.DISPLAY.NEW(VIN,VOUT,QI,'CARRIERS','SDX.CARRIER,NAME','1,2,3,4',ITEM.LIST)
                  CC+=VOUT<1> ; GOSUB PRINT.CC
                  GOSUB 8100
                  GOSUB 8200
                  BEGIN CASE
                     CASE ITEM.LIST = ''
                        GOTO ENTER.MISROUTE.CARRIER
                     CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                        GOTO ENTER.MISROUTE.CARRIER
                     CASE ITEM.LIST # ''
                        IF NUM(ITEM.LIST<1,1>) THEN SND.DATA=ITEM.LIST<1,1> ; GOSUB SEND.DATA
                        GOTO ENTER.MISROUTE.CARRIER
                  END CASE
               CASE NUM(QI)
                  Q = QI'R%5'
               CASE 1
                  GOTO ENTER.MISROUTE.CARRIER
            END CASE
            MISROUTE.CARRIER = Q

*----   Get Carrier Data

            READV MISROUTE.NAME FROM F.CARRIERS,MISROUTE.CARRIER,1 ELSE
               CALL ELINE("ERROR - Carrier ":CARRIER.ID:" not on file.")
               GOTO ENTER.MISROUTE.CARRIER
            END
            CRT @(56,19):MISROUTE.CARRIER'R%5':' ':MISROUTE.NAME'L#10'
            IF SAVE.MR.AMOUNT#MISROUTE.AMOUNT OR SAVE.MR.CARRIER#MISROUTE.CARRIER THEN
* If the user changed the default misroute amt or carrier then
               VER.CODE='M' ; VER.TYPE='R' ; GOSUB UPDATE.VERIFY
            END
         END
      END

      IF (DATE() GE 11127 AND MISROUTE.AMOUNT+0#0) OR CLIENT.ID='01651' THEN
ENTER.VEND.CUST:
         IF IN.OUT = 'I' OR CLIENT.ID='01651' THEN
            T.ADDRESS = CUST.VEND.ADDR
            IF VC.ID # '' THEN
               READ VCUST.REC FROM F.VEND.CUST,VC.ID THEN
                  T.ADDRESS<1>=VCUST.REC<1>        ; * Name
                  T.ADDRESS<2>=VCUST.REC<3,1>      ; * Address 1
                  T.ADDRESS<3>=VCUST.REC<3,2>      ; * Address 2
                  T.ADDRESS<5>=VCUST.REC<5>        ; * City
                  T.ADDRESS<6>=VCUST.REC<6>        ; * State
                  T.ADDRESS<4>=VCUST.REC<7>        ; * Zip
               END
            END ELSE
*            CALL ELINE('VC.ID WAS NULL! DID NOT READ VEND.CUST.')
            END

DISPLAY.ADDR:
            ADDR.POS = 1

UPDATE.ADDR:
            CRT @(40, 6):'|     ENTER CUST.VEND ADDRESS      '
            CRT @(40, 7):'|--------------------------------------'
            CRT @(40, 8):'| NAME  :':T.ADDRESS<1>'L#30':@(-4)
            CRT @(40, 9):'| ADDR 1:':T.ADDRESS<2>'L#30':@(-4)
            CRT @(40,10):'| ADDR 2:':T.ADDRESS<3>'L#30':@(-4)
            CRT @(40,11):'| ZIP   :':T.ADDRESS<4>'L#30':@(-4)
            CRT @(40,12):'| CITY  :':T.ADDRESS<5>'L#30':@(-4)
            CRT @(40,13):'| STATE :':T.ADDRESS<6>'L#30':@(-4)
            CRT @(40,14):'| UPDATE:':@(-4)
            CRT @(40,15):'---------------------------------------'

EDIT.ADDR:
            HELP = "Enter Cust.Vendor Address information. [X]=Back [EX]=Exit"
            MASK = T.ADDRESS<ADDR.POS>'L#30'
            CALL GEN.IN(49,7+ADDR.POS,MASK,'',Q,0,30,'','',2,49,7+ADDR.POS,1,QI,HELP,0,23)
            QI = OCONV(QI,'MCU')
            CC+=LEN(QI)+1 ; GOSUB PRINT.CC
            BEGIN CASE
               CASE QI='X'
                  CRT @(49,7+ADDR.POS):T.ADDRESS<ADDR.POS>:@(-4)
                  IF ADDR.POS = 1 THEN
*DF                     IF USER='DAVID' OR USER='MYRA' OR USER='MARY' OR SU.FLAG THEN
                     IF SU.FLAG THEN
                        GOTO ENTER.MISROUTE.CARRIER
                     END ELSE
                        GOTO 1800
                     END
                  END ELSE
                     ADDR.POS-=1
                     GOTO EDIT.ADDR
                  END
               CASE QI='EX'
                  STOP
               CASE 1
                  IF Q#'' THEN T.ADDRESS<ADDR.POS>=TRIM(Q)
                  VAL = T.ADDRESS<ADDR.POS>
                  CRT @(49,7+ADDR.POS):T.ADDRESS<ADDR.POS>:@(-4)
                  IF ADDR.POS = 2 AND (TRIM(VAL) = '' OR TRIM(VAL) = 'BAD ADDRESS') THEN
                     CALL ELINE('MUST HAVE AN ADDRESS.')
                     GOTO EDIT.ADDR
                  END
                  IF ADDR.POS = 3 THEN GOTO SAVE.ADDR
                  ADDR.POS+=1
                  IF ADDR.POS = 5 AND VAL # '' THEN
                     READ T.REC FROM F.ZIPS,VAL THEN
                        T.ADDRESS<5> = T.REC<1>
                        T.ADDRESS<6> = T.REC<2>
                        GOTO UPDATE.ADDR
                     END
                  END
                  GOTO EDIT.ADDR
            END CASE

SAVE.ADDR:
            HELP = "Update Cust.Vendor Address Information? [Y]es [N]o [X]=Back [EX]=Exit"
            MASK = 'Y '
            CALL GEN.IN(49,14,MASK,'',Q,0,2,'','',2,49,14,1,QI,HELP,0,23)
            QI = OCONV(QI,'MCU')
            CC+=LEN(QI)+1 ; GOSUB PRINT.CC
            BEGIN CASE
               CASE QI='X' OR QI='N'
                  GOTO EDIT.ADDR
               CASE QI='EX'
                  STOP
               CASE QI='' OR QI='Y'
               CASE 1
                  CALL ELINE('Invalid Option.  Y, N, X or EX.')
                  GOTO SAVE.ADDR
            END CASE

            IF VC.ID # '' THEN
               OLD.VCUST.NAME = VCUST.REC<1>
               VCUST.REC<1> = T.ADDRESS<1>
               VCUST.REC<3,1> = T.ADDRESS<2>
               VCUST.REC<3,2> = T.ADDRESS<3>
               VCUST.REC<5> = T.ADDRESS<5>
               VCUST.REC<6> = T.ADDRESS<6>
               VCUST.REC<7> = T.ADDRESS<4>
*** BEGIN JCW02
*
* Update VEND.CUST.NAMES file
*
               IF VCUST.REC<1> # OLD.VCUST.NAME THEN
*** Remove link to old description in VEND.CUST.NAMES
                  VCN.ID = VCUST.REC<42>
                  READ VCN.REC FROM F.VCN, VCN.ID THEN
                     LOCATE VC.ID IN VCN.REC<2> SETTING POS THEN
                        VCN.REC = DELETE(VCN.REC,2,POS)
                        IF VCN.REC<2> # '' THEN
                           WRITE VCN.REC ON F.VCN, VCN.ID
                        END ELSE
                           DELETE F.VCN, VCN.ID
                           CALL SOUNDEX.EDIT(OLD.VCUST.NAME,'',VCN.ID,'SDX.VCN,':CLIENT.ID)
                        END
                     END
                  END
*** Add link to new description to VEND.CUST.NAMES
                  STMT = 'SELECT VEND.CUST.NAMES,':CLIENT.ID:' WITH 1 = "':VCUST.REC<1>:'" SAMPLE 1'
                  EXECUTE STMT RTNLIST VCN.LIST CAPTURING MSG
                  BEGIN CASE
*** New Vend/Cust Description
                     CASE @SELECTED < 1
                        GOSUB ADD.NEW.VCN
                        VCN.REC = ''
                        VCN.REC<1> = VCUST.REC<1>
                        VCN.REC<2> = VC.ID
                        WRITE VCN.REC TO F.VCN, VCN.ID
                        CALL SOUNDEX.EDIT('',VCUST.REC<1>,VCN.ID,'SDX.VCN,':CLIENT.ID)
*** Description is already in VEND.CUST.NAMES
                     CASE @SELECTED = 1
                        READNEXT VCN.ID FROM VCN.LIST THEN
                           READ VCN.REC FROM F.VCN, VCN.ID THEN
                              LOCATE VC.ID IN VCN.REC<2> SETTING POS ELSE
                                 VCN.REC<2,-1> = VC.ID
                                 WRITE VCN.REC ON F.VCN, VCN.ID
                              END
                           END
                        END
                  END CASE
                  VCUST.REC<42> = VCN.ID
               END
*** END JCW02
** Update VEND.CUST record
               WRITE VCUST.REC ON F.VEND.CUST,VC.ID
** UPDATE SOUNDEX FOR VEND.CUST  (Remove old name and add New Name)
               CALL SOUNDEX.EDIT(OLD.VCUST.NAME,VCUST.REC<1>,VC.ID,'SDX.VEND.CUST,':CLIENT.ID)
*** Update VEND.CUST.XREF file ; * JCW04
               ZIP = VCUST.REC<7>        ; * JCW04
               DESC = VCUST.REC<1>       ; * JCW04
               DESC = TRIM(OCONV(DESC,'MCU'))      ; * JCW04
               IF ZIP # 99999 THEN       ; * JCW04
                  XREF.ID = DESC:'*':ZIP           ; * JCW04
               END ELSE                  ; * JCW04
                  XREF.ID = DESC         ; * JCW04
               END                       ; * JCW04
               WRITEV VC.ID TO F.VC.XREF, XREF.ID, 1         ; * JCW04
*** Update VEND.CUST.ZIPS file                           ; * JCW04
               READ VC.ZIP.REC FROM F.VC.ZIPS, ZIP ELSE VC.ZIP.REC = ''          ; * JCW04
               LOCATE VC.ID IN VC.ZIP.REC<1> SETTING POS ELSE          ; * JCW04
                  VC.ZIP.REC<1,-1> = VC.ID         ; * JCW04
                  WRITE VC.ZIP.REC TO F.VC.ZIPS, ZIP         ; * JCW04
               END                       ; * JCW04
            END ELSE
*              CALL ELINE('VC.ID WAS NULL! DID NOT UPDATE VEND.CUST')
            END

            CUST.VEND.ADDR = T.ADDRESS
            GOSUB 8100                   ; * Display screen
            GOSUB 8200                   ; * Display data
         END

      END

*DF      END
*DF       END ; *BOH
      TEMP.REC = ''
      IF OLD.PRO.REC<39>='R' AND REJECT.FLAG#'R' ELSE
         TEMP.REC<53>=OLD.PRO.REC<53>
         TEMP.REC<54>=OLD.PRO.REC<54>
         TEMP.REC<98>=OLD.PRO.REC<98>
      END
      TEMP.REC<1> = BILL.DATE
      TEMP.REC<2> = IN.OUT
      IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN     ; * United Parcel Service
         TEMP.REC<3>='99999'
         TEMP.REC<4>='99999'
      END ELSE
         IF CARRIER.ID='01075' THEN      ; * FedEx Ground
            TEMP.REC<3>='99999'
            TEMP.REC<4>='99999'
         END ELSE
            TEMP.REC<3>=ORIG.ZIP
            TEMP.REC<4>=DEST.ZIP
         END
      END
      TEMP.REC<5> = EXP.CODE
      TEMP.REC<6> = WEIGHT
      TEMP.REC<7> = CARRIER.CHG
      TEMP.REC<8> = ACTUAL.CHG
      TEMP.REC<9> = DIVISION
      TEMP.REC<10> = 0-VAR.ARR<1>
      TEMP.REC<11> = 0-VAR.ARR<2>
      TEMP.REC<12> = 0-VAR.ARR<3>
      TEMP.REC<17> = VC.ID
      TEMP.REC<18> = ZIP.ARR<1>
      NUM.ZIPS = DCOUNT(TEMP.REC<18>, @VM)
      IF NUM.ZIPS > 1 THEN
         DEL TEMP.REC<18,NUM.ZIPS>
         DEL TEMP.REC<18,1>
      END
      TEMP.REC<19> = MILEAGE
      TEMP.REC<20> = CARRIER.ID
      TEMP.REC<22> = MISROUTE.ARRAY<1>
      TEMP.REC<23> = MISROUTE.ARRAY<2>
      TEMP.REC<24> = DISC.PERC
      IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN
         TEMP.REC<25>='ZZ'
         TEMP.REC<26>='ZZ'
         TEMP.REC<27>='UPS'
         TEMP.REC<28>='UPS'
      END ELSE
         IF CARRIER.ID='01075' THEN
            TEMP.REC<25>='ZZ'
            TEMP.REC<26>='ZZ'
            TEMP.REC<27>='FedEx Ground'
            TEMP.REC<28>='FedEx Ground'
         END ELSE
            TEMP.REC<25>=ORIG.STATE
            TEMP.REC<26>=DEST.STATE
            TEMP.REC<27>=ORIG.CITY
            TEMP.REC<28>=DEST.CITY
         END
      END
      TEMP.REC<38> = DUE.DATE
      VAR.CODE = ''
      IF VARIANCE = 0 THEN VAR.ARR = ''
      IF VAR.ARR<1>'R0' # 0 ! VAR.ARR<4>'R0' NE 0 THEN
         VAR.CODE = VAR.CODE:'D'
      END
      IF VAR.ARR<2>'R0' # 0 ! VAR.ARR<5>'R0' NE 0 THEN
         VAR.CODE = VAR.CODE:'O'
      END
      IF VAR.ARR<3>'R0' # 0 ! VAR.ARR<6>'R0' NE 0 THEN
         VAR.CODE = VAR.CODE:'C'
      END
      TEMP.REC<29> = VAR.CODE

      READV E.DATE FROM F.HIST, OLD.PRO.ID, 30 THEN
         TEMP.REC<30> = E.DATE
      END
      IF VERSION > 0 THEN TEMP.REC<30>=''          ; * Set to Null on Dups
      IF DATE() LE CLIENT.REC(82) THEN
         NEW.BILL.DATE=CLIENT.REC(82)+1
      END ELSE
         NEW.BILL.DATE=DATE()
      END

      IF OLD.PRO.REC<66>='N' AND OLD.PRO.REC<39> = 'R' AND TEMP.REC<39> # 'R' THEN TEMP.REC<30>=''   ; * JIM - NEVERPAYS

      IF TEMP.REC<30>='' THEN TEMP.REC<30>=NEW.BILL.DATE
      IF TEMP.REC<39>#'R' AND OLD.PRO.REC<37>='' THEN
         IF TEMP.REC<30> LE CLIENT.REC(82) THEN TEMP.REC<30>=NEW.BILL.DATE
      END
      TEMP.REC<34> = 0-VAR.ARR<4>
      TEMP.REC<35> = 0-VAR.ARR<5>
      TEMP.REC<36> = 0-VAR.ARR<6>
      IF USER.TYPE='A' THEN
         IF REJECT.FLAG THEN
            TEMP.REC<39>=REJECT.FLAG
         END ELSE
            TEMP.REC<39>=OLD.PRO.REC<39>
            TEMP.REC<54>=OLD.PRO.REC<54>
            TEMP.REC<98>=OLD.PRO.REC<98>
         END
      END
      TEMP.REC<40> = BANK.ID
      TEMP.REC<45> = VERIFIED
      TEMP.REC<68> = BILL.STATUS
      TEMP.REC<88> = OLD.PRO.REC<88>     ; * Copy over EDI Links
      TEMP.REC<93> = MISSING.DATA
      TEMP.REC<96>=OVERRIDE.STATUS
      IF OLA.AMT#'' THEN
         TEMP.REC<99>=OLA.AMT
      END
      TEMP.REC<116>=OVERRIDE.FIELD
      TEMP.REC<117>=OVERRIDE.OPERATOR
      TEMP.REC<118>=OVERRIDE.INFO
      TEMP.REC<119>=FLAT.RATE
      IF REJECT.FLAG # '' THEN TEMP.REC<39> = REJECT.FLAG
      IF (OLD.PRO.REC<88>) AND TEMP.REC<39>='' THEN
         TEMP.REC<39>='V'                ; * IF EDI, Mark as verified
      END
      IF QV.VALID THEN                   ; * JMK24
         TEMP.REC<39>='O'                ; * JMK24
         IF USER.TYPE#'A' AND OLD.PRO.REC<37>='' AND (CLIENT.ID='01290' OR CLIENT.ID='01313' OR CLIENT.ID='01309' OR CLIENT.ID='01316' OR CLIENT.ID='01339' OR CLIENT.ID='01333' OR CLIENT.ID='01320' OR CLIENT.ID='01322') THEN
            TEMP.REC<98>=TEMP.REC<8>
         END
      END                                ; * JMK24
      READV P.DATE FROM F.HIST, OLD.PRO.ID, 37 THEN
         TEMP.REC<37> = P.DATE
      END
      IF OLD.PRO.REC<66>='N' AND OLD.PRO.REC<39> = 'R' AND TEMP.REC<39> # 'R' THEN TEMP.REC<37>=''
      IF VERSION > 0 THEN TEMP.REC<37>=''
      TEMP.REC<41,1> = VAR.ARR<7>
      TEMP.REC<41,2> = VAR.ARR<8>
      TEMP.REC<41,3> = VAR.ARR<9>
      TEMP.REC<46> = MIN.CHG
      APRVD.CARRIER = 'N'
      IF QI = 'W' THEN TEMP.REC<48> = 'Y' ELSE TEMP.REC<48> = ''
      FOR X = 84 TO 86
         TEMP.REC<X>=OLD.PRO.REC<X>
      NEXT X
      TEMP.REC<51> = VAR.REC<1>
      TEMP.REC<52> = VAR.REC<2>
      TEMP.REC<56> = VAR.REC<3>
      TEMP.REC<55> = LEN(PRO.REC)-LEN(USER)
      TEMP.REC<59> = REJECT.REASONS<1>
      TEMP.REC<60> = REJECT.REASONS<2>
      TEMP.REC<61> = REJECT.REASONS<3>
      TEMP.REC<62> = REJECT.REASONS<4>
      TEMP.REC<64,1>=MAILING.ADDR<1>
      TEMP.REC<64,2>=MAILING.ADDR<2>
      TEMP.REC<64,3>=MAILING.ADDR<3>
      TEMP.REC<64,4>=MAILING.ADDR<4>
      TEMP.REC<66> = REJ.TYPE
      CARRIER.MODE.WGT = CARRIER.REC<70>
      CARRIER.MODE.BY.WGT = CARRIER.REC<71>
      LOCATE WEIGHT IN CARRIER.MODE.WGT<1> BY "AR" SETTING POS ELSE NULL
      T.MODE.BY.WGT = OCONV(CARRIER.MODE.BY.WGT<1,POS>,'MCU')
      LTL.CAR=T.MODE.BY.WGT=1            ; * JMK187
      TL.CAR=T.MODE.BY.WGT=6             ; * JMK187
      AIR.CAR=T.MODE.BY.WGT=12           ; * JMK187
      TEMP.REC<21> = T.MODE.BY.WGT
      IF TEMP.REC<21>#'1' AND TEMP.REC<21>#'6' THEN TEMP.REC<19>=''    ; * JMK162
      IF PRO[LEN(PRO)-1,2]='AD' THEN TEMP.REC<19>=''         ; * JMK162
      IF PRO[LEN(PRO)-1,2]='BD' THEN TEMP.REC<19>=''         ; * JMK162
      IF VC.OVERRIDE='Y' ELSE
         TEMP.REC<63> = MISROUTE.AMOUNT
         TEMP.REC<69> = MISROUTE.CARRIER
         TEMP.REC<189>=MISROUTE.AMOUNT   ; * JMK126
         TEMP.REC<190>=MISROUTE.CARRIER  ; * JMK126
      END                                ; * JMK55
      IF (CLIENT.ID='01014' AND CARRIER.ID='03131') OR (CLIENT.ID='01079' AND CARRIER.ID='00250') THEN         ; * JCW03
         TEMP.REC<63> = ''               ; * JCW03
         TEMP.REC<69> = ''               ; * JCW03
         TEMP.REC<22> = ''               ; * JCW03
         TEMP.REC<23> = ''               ; * JCW03
         IF VC.OVERRIDE = 'Y' THEN       ; * JCW03
            TEMP.REC<189> = ''           ; * JCW03
            TEMP.REC<190> = ''           ; * JCW03
            TEMP.REC<191> = ''           ; * JCW03
            TEMP.REC<192> = ''           ; * JCW03
            TEMP.REC<193> = ''           ; * JCW03
            TEMP.REC<194> = ''           ; * JCW03
            TEMP.REC<195> = ''           ; * JCW03
            TEMP.REC<196> = ''           ; * JCW03
         END                             ; * JCW03
      END                                ; * JCW03
      IF DAUDIT<13>='Y' THEN             ; * JMK57
         TEMP.REC<197>='Y'               ; * JMK57
      END ELSE                           ; * JMK57
         TEMP.REC<197>='N'               ; * JMK57
      END                                ; * JMK57
      IF QI='A' OR QI='1' THEN
         TEMP.REC<39> = 'O'
         IF OLD.PRO.REC<39> # 'O' AND TEMP.REC<39>='O' AND CLIENT.ID='00574' THEN
            IF DATE() LE CLIENT.REC(82) THEN
               TEMP.REC<30>=CLIENT.REC(82)+1
            END ELSE
               TEMP.REC<30> = DATE()
            END
         END
      END ELSE
         IF REJECT.FLAG#'R' THEN TEMP.REC<39>=TEMP.REC<68>
      END
      IF VERSION GT 0 THEN TEMP.REC<39> = 'O'
      TEMP.REC<90> = VC.CODE
      TEMP.REC<91> = CC
      TEMP.REC<100>= VC.ID               ; * Item ID for Cust.Vend
      TEMP.REC<101>= CUST.VEND.ADDR<1>   ; * Name
      TEMP.REC<102>= CUST.VEND.ADDR<2>   ; * Address1
      TEMP.REC<102,2>= CUST.VEND.ADDR<3>           ; * Address2
      TEMP.REC<103>= CUST.VEND.ADDR<5>   ; * City
      TEMP.REC<104>= CUST.VEND.ADDR<6>   ; * State
      TEMP.REC<105>= CUST.VEND.ADDR<4>   ; * Zip
      IF USER.TYPE='A' THEN
         IF TEMP.REC<97>='' THEN
            IF OLD.CLASS # CLASSES THEN
               TEMP.REC<97>=OLD.CLASS
            END
         END
      END
      TEMP.REC<74> = CLASSES
      TEMP.REC<75> = WEIGHTS
      TEMP.REC<110>= AUDITOR.VIEWED      ; * 1=OLA Auditor viewed, 0=OLA, ''=Manual bill.
      MISC.CHG.POS=DCOUNT(CLASSES<1>,@VM)          ; * Find out how many
      FOR MISC.CHG.CNT=1 TO MISC.CHG.POS
         TEMP.REC<70,MISC.CHG.CNT>='FRT'
      NEXT MISC.CHG.CNT
      IF MISC.CHG.CODES#'' THEN
         TEMP.REC<70,MISC.CHG.POS+1>=MISC.CHG.CODES
         TEMP.REC<77,MISC.CHG.POS+1>=CONTR.MISC.CHG.AMTS
         TEMP.REC<79,MISC.CHG.POS+1>=BENCH.MISC.CHG.AMTS
      END
      IF SU.FLAG THEN
         TEMP.REC<39>=OLD.PRO.REC<39>
         TEMP.REC<68>=OLD.PRO.REC<68>
         TEMP.REC<54>=OLD.PRO.REC<54>
         TEMP.REC<89>=OLD.PRO.REC<89>
         TEMP.REC<95>=OLD.PRO.REC<95>
         TEMP.REC<97>=OLD.PRO.REC<97>
      END
      TEMP.REC<120>=ZIP.ARR<1>           ; * MV Zips
      TEMP.REC<121>=ZIP.ARR<2>           ; * MV Cities
      TEMP.REC<122>=ZIP.ARR<3>           ; * MV States
      TEMP.REC<149>=ZIP.ARR<7>           ; * MV Miles JMK12
      TEMP.ZIP.ARR=ZIP.ARR
      DEL TEMP.ZIP.ARR<1,1>
      DEL TEMP.ZIP.ARR<2,1>
      DEL TEMP.ZIP.ARR<3,1>
      DEL TEMP.ZIP.ARR<4,1>
      DEL TEMP.ZIP.ARR<5,1>
      DEL TEMP.ZIP.ARR<6,1>
      DEL TEMP.ZIP.ARR<7,1>              ; * JMK12
      IF CLIENT.ID='00574' AND IN.OUT='O' THEN
         TEMP.REC<136>=TEMP.ZIP.ARR<4>
         TEMP.REC<137>=TEMP.ZIP.ARR<2>
         TEMP.REC<138>=TEMP.ZIP.ARR<3>
         TEMP.REC<139>=TEMP.ZIP.ARR<1>
         TEMP.REC<140>=TEMP.ZIP.ARR<5>
         TEMP.REC<142>=TEMP.ZIP.ARR<6>
         CLIENT.CUST.TOT.WT=0
         X=DCOUNT(TEMP.ZIP.ARR<5>,CHAR(253))
         FOR I=1 TO X
            CLIENT.CUST.TOT.WT=CLIENT.CUST.TOT.WT+TEMP.ZIP.ARR<5,I>
         NEXT I
         NEW.TOT=''
         PRO.REC<31>=''
         PRO.REC<33>=''
         X=DCOUNT(TEMP.ZIP.ARR<5>,CHAR(253))
         TIMES=X-1
         IF TIMES => 1 THEN
            FOR I=1 TO TIMES
               IF CLIENT.CUST.TOT.WT+0=0 THEN
                  WT.PERCENT=1/X
               END ELSE
                  WT.PERCENT=TEMP.ZIP.ARR<5,I>/CLIENT.CUST.TOT.WT
               END
               TEMP.REC<141,I>=(WT.PERCENT*ACTUAL.CHG)'R0'
               NEW.TOT=NEW.TOT+TEMP.REC<141,I>
               LOCATE TEMP.REC<142,I> IN TEMP.REC<31> SETTING EXP.POS THEN
                  TEMP.REC<33,EXP.POS>=TEMP.REC<33,EXP.POS>+TEMP.REC<141,I>
               END ELSE
                  TEMP.REC<31,-1>=TEMP.REC<142,I>
                  TEMP.REC<33,-1>=TEMP.REC<141,I>
               END
            NEXT I
         END
         TEMP.REC<141,X>=ACTUAL.CHG-NEW.TOT
         LOCATE TEMP.REC<142,X> IN TEMP.REC<31> SETTING EXP.POS THEN
            TEMP.REC<33,EXP.POS>=TEMP.REC<33,EXP.POS>+TEMP.REC<141,X>
         END ELSE
            TEMP.REC<31,-1>=TEMP.REC<142,X>
            TEMP.REC<33,-1>=TEMP.REC<141,X>
         END
         IF TEMP.REC<31>='' THEN TEMP.REC<31>=TEMP.REC<5>
      END
      TEMP.REC<123>=ADDRESS.CORRECTION.CHARGE      ; * For United Parcel Service
      LCC.CAPTURE=1                      ; * JMK159
      PRO.NO=FIELD(PRO.ID,'*',2)         ; * JMK159
      PRO.LENGTH=LEN(PRO.NO)             ; * JMK159
      DUP=FIELD(PRO.ID,'*',3)            ; * JMK159
      IF PRO.NO[PRO.LENGTH-1,2] = 'BD' THEN BAL.DUE = 1 ELSE BAL.DUE = 0         ; * JMK159
      IF PRO.NO[PRO.LENGTH-1,2] = 'AD' THEN ADD.DUE = 1 ELSE ADD.DUE = 0         ; * JMK159
      IF PRO.NO[PRO.LENGTH-1,2] = 'CM' THEN CR.MEMO = 1 ELSE CR.MEMO = 0         ; * JMK159
      NEVERPAY.FLAG = (TEMP.REC<66>='N' AND TEMP.REC<39>='R')          ; * JMK159
      HOLD.FLAG = (TEMP.REC<66>#'N' AND TEMP.REC<39>='R')    ; * JMK159
      IF MISROUTE.AMOUNT+0#0 THEN LCC.CAPTURE=0
      IF DUP THEN LCC.CAPTURE=0          ; * JMK159
      IF HOLD.FLAG THEN LCC.CAPTURE=0    ; * JMK159
      IF NEVERPAY.FLAG THEN LCC.CAPTURE=0          ; * JMK159
      IF CLIENT.ID[1,2]='99' THEN LCC.CAPTURE=0    ; * JMK159
      IF TEMP.REC<63>+0#0 THEN LCC.CAPTURE=0       ; * JMK159 - NO MISROUTE BILLS
      IF TEMP.REC<21>#1 THEN LCC.CAPTURE=0         ; * JMK159 - ONLY LTL BILLS
      IF CLIENT.ITM<93>#'Y' THEN LCC.CAPTURE=0     ; * JMK159 - ONLY LOGISTICS BILLS
*     IF CLIENT.ITM<93>="Y" AND BILL.DATE<CLIENT.ITM<149> THEN LCC.CAPTURE=0     ; * JMK168 ; * JMK189
      IF CLIENT.ITM<93>="Y" THEN         ; * JMK189
         IF CLIENT.ITM<149>#'' THEN      ; * JMK189
            IF BILL.DATE<CLIENT.ITM<149> THEN LCC.CAPTURE=0  ; * JMK189
         END                             ; * JMK189
      END                                ; * JMK189
      IF CLIENT.ITM<94>#'Y' THEN LCC.CAPTURE=0     ; * JMK159 - ONLY MISROUTE CLIENT BILLS
      IF TEMP.REC<2>='T' THEN LCC.CAPTURE=0        ; * JMK159 - NO THIRD PARTY BILLS
      IF ADD.DUE OR BAL.DUE THEN LCC.CAPTURE=0     ; * JMK159 ; *Added no AD or BD by DRF 12-11-03
*DFIF USER='DAVID' THEN CALL ELINE('PRESS BREAK')
      IF LCC.CAPTURE THEN                ; * JMK159
         GET.LCC=1                       ; * JMK159
         IF USER='DAVID' THEN CALL ELINE('LCC PRESS BREAK')
         IF TEMP.REC<21>#'1' THEN GET.LCC=0        ; * JMK159
         IF TEMP.REC<74>='' THEN GET.LCC=0         ; * JMK159
         IF TEMP.REC<75>='' THEN GET.LCC=0         ; * JMK159
*DF         IF OLD.PRO.REC<119>='1' THEN GET.LCC=0
         IF TEMP.REC<119>='1' THEN GET.LCC=0
         IF GOIN THEN
            IF AVIN<45>=1 THEN GET.LCC=0
            IF AVIN='' AND TEMP.REC<119>=1 THEN GET.LCC=0
         END ELSE
            IF TEMP.REC<119>=1 THEN GET.LCC=0
         END
         IF GET.LCC THEN                 ; * JMK159
            GCVIN=''                     ; * JMK159
            GCVIN<1>=AUDIT.CLIENT.ID     ; * JMK159
            GCVIN<2>=PRO.ID              ; * JMK159
            GCVIN<3>=CLIENT.ID           ; * JMK159
            GCVOUT=''                    ; * JMK159
            CARRIER.ARRAY=''             ; * JMK159
            CALL FIND.GOOD.CARRIERS.SUB(GCVIN,GCVOUT,TEMP.REC,CARRIER.ARRAY,F.CLIENTS,F.CARRIERS,F.NFSC,F.PCIN,F.PCOUT,F.TABLES,F.AUDIT,F.AUDIT.TABLES,F.AUDIT.ZIPS)       ; * JMK159
            TEMP.HOLD=''                 ; * JMK176
            IF TEMP.REC<37>='' THEN      ; * JMK176
               TEMP.HOLD=TEMP.REC        ; * JMK176
               NXT.PROC.DT=DATE()        ; * JMK176
               CALL NEXT.PROCESS.DATE(NXT.PROC.DT,CLIENT.DOW)          ; * JMK176
               TEMP.HOLD<37>=NXT.PROC.DT           ; * JMK176
               COMM.VIN=PRO.ID           ; * JMK176
               COMM.VIN<2>=CLIENT.REC(84)          ; * JMK176
               COMM.VIN<3>=CLIENT.REC(34)          ; * JMK176
               COMM.VIN<4>=CLIENT.REC(33)          ; * JMK176
               COMM.VIN<5>=CLIENT.REC(85)          ; * JMK176
               COMM.VIN<6>=CLIENT.REC(88)          ; * JMK176
               COMM.VIN<7>=CARRIER.ID    ; * JMK176
               COMM.VIN<8>=CLIENT.ID     ; * JMK176
               COMM.VIN<9>=USER          ; * JMK176
               COMM.VIN<10>=CLIENT.REC(131)        ; * JMK176
               COMM.VIN<13>=CLIENT.REC(187)        ; * JMK176
               COMM.VIN<14>=CLIENT.REC(200)        ; * JMK176
               COMM.VIN<15>=CLIENT.REC(208)        ; * JMK176
               COMM.VIN<16>=CLIENT.REC(209)        ; * JMK176
               COMM.VIN<17>=CLIENT.REC(210)        ; * JMK176
               COMM.VIN<18>=CLIENT.REC(211)        ; * JMK176
               COMM.VIN<19>=CLIENT.REC(212)        ; * JMK176
               COMM.VIN<20>=CLIENT.REC(213)        ; * JMK176
               COMM.VIN<21>=CLIENT.REC(214)        ; * JMK176
               COMM.VIN<22>=CLIENT.REC(215)        ; * JMK176
               COMM.VIN<23>=CLIENT.REC(216)        ; * JMK176
               COMM.VIN<24>=CLIENT.REC(217)        ; * JMK176
               COMM.VIN<25>=CLIENT.REC(218)        ; * JMK176
               COMM.VIN<26>=CLIENT.REC(219)        ; * JMK176
               COMM.VIN<28>=CLIENT.REC(268)        ; * JMK192
               CALL CALC.COMMISSION(TEMP.HOLD,COMM.VIN,COMM.VOUT)      ; * JMK176
               DISCOUNT.COMM=COMM.VOUT<1>          ; * JMK176
               OVERCHG.COMM=COMM.VOUT<2>           ; * JMK176
               CONSULTING.COMM=COMM.VOUT<3>        ; * JMK176
               EXP.DIST.COMM=COMM.VOUT<4>          ; * JMK176
               MGMT.SVC.COMM=COMM.VOUT<5>          ; * JMK176
               MISR.CONS.COMM=COMM.VOUT<6>         ; * JMK176
               TEMP.HOLD<42>=DISCOUNT.COMM         ; * JMK176
               TEMP.HOLD<43>=OVERCHG.COMM          ; * JMK176
               TEMP.HOLD<44>=CONSULTING.COMM       ; * JMK176
               TEMP.HOLD<32>=EXP.DIST.COMM         ; * JMK176
               TEMP.HOLD<165>=MGMT.SVC.COMM        ; * JMK176
               TEMP.HOLD<203>=MISR.CONS.COMM       ; * JMK176
            END                          ; * JMK176
*           LCC.AMOUNT=GCVOUT<1>         ; * JMK159 ; * JMK173
*           LCC.CARRIER=GCVOUT<2>        ; * JMK159 ; * JMK173
*           IF LCC.AMOUNT > TEMP.REC<8> THEN       ; * JMK173
            LCC.AMOUNT=CARRIER.ARRAY<1,1>          ; * JMK159 ; * JMK173
            LCC.CARRIER=CARRIER.ARRAY<2,1>         ; * JMK159 ; * JMK173
            IF TEMP.HOLD#'' THEN         ; * JMK176
               TRUE.COST=TEMP.HOLD<8>+TEMP.HOLD<44>          ; * JMK176
            END ELSE
               TRUE.COST=TEMP.REC<8>+TEMP.REC<44>  ; * JMK173
            END
            LOCATE CARRIER.ID IN CARRIER.ARRAY<2> SETTING LPOS THEN    ; * JMK176
*              IF LCC.AMOUNT > TRUE.COST THEN      ; * JMK173 ; * JMK176
*              IF LCC.AMOUNT > TRUE.COST OR LCC.CARRIER=CARRIER.ID THEN          ; * JMK173 ; * JMK176 ; * JMK183
               IF LCC.AMOUNT GE TRUE.COST OR LCC.CARRIER=CARRIER.ID THEN         ; * JMK173 ; * JMK176 ; * JMK183
                  LCC.AMOUNT=''
                  LCC.CARRIER=''
               END
               LCC.ARRAY=CARRIER.ARRAY
            END ELSE                     ; * JMK176
               LCC.AMOUNT=''
               LCC.CARRIER=''
               LCC.ARRAY=''
            END                          ; * JMK176
            IF LCC.AMOUNT+0=0 ELSE
               READV LCC.NAME FROM F.CARRIERS,LCC.CARRIER,1 ELSE LCC.NAME='Unknown Carrier'
               CRT @(43,20):LCC.AMOUNT'R26#10'
               CRT @(56,20):LCC.CARRIER'%5':' ':LCC.NAME'L#10'
            END
         END ELSE
            LCC.AMOUNT=''
            LCC.CARRIER=''
            LCC.ARRAY=''                 ; * JMK175
            CRT @(56,20):'                 '
         END                             ; * JMK159
         LCC.OVR.AMOUNT=LCC.AMOUNT       ; * JMK188
         LCC.OVR.CARRIER=LCC.CARRIER     ; * JMK188
         IF CLIENT.ID='01457' OR CLIENT.ID='01529' THEN      ; * JMK188
            IF LCC.AMOUNT+0#0 AND VC.OVERRIDE='Y' THEN       ; * JMK188
               LCC.AMOUNT=''             ; * JMK188
               LCC.CARRIER=''            ; * JMK188
               LCC.NAME=''               ; * JMK188
            END                          ; * JMK188
         END                             ; * JMK188
      END                                ; * JMK159
*DF      IF USER.TYPE='A' OR SU.FLAG THEN
      IF SU.FLAG OR (USER.TYPE='A' AND MISROUTE.AMOUNT+0=0) THEN
         IF BACK.FLAG AND LCC.AMOUNT+0#0 THEN GOTO ENTER.LCC.CARRIER
ENTER.LCC.CHARGE: ***
         BACK.FLAG = 0
         HELP = "Enter the LCC Charge. [X]=Back [EX]=Exit"
         REQ=0
         CALL GEN.IN(43,20,LCC.AMOUNT'R26#10','AMT2',Q,REQ,9,'','',2,-10,20,0,QI,HELP,0,23)
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC
         QI = OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI = ''
               Q = LCC.AMOUNT
            CASE QI = 'X'
               CRT @(43,20):LCC.AMOUNT'R26#10'
*DF               BACK.FLAG=1
*DF               GOTO 1800
               GOTO ENTER.MISROUTE.CHARGE
            CASE NUM(QI)
               QI=Q'R0'
            CASE QI = 'EX'
               STOP
            CASE 1
               GOTO 1950
         END CASE
         IF QI > ACTUAL.CHG THEN
            CALL ELINE('LCC cannot be greater than the amount to pay')
            CC+=1
            QI=''
            GOTO ENTER.LCC.CHARGE
         END
         LCC.AMOUNT = Q'R0'
         CRT @(43,20):LCC.AMOUNT'R26#10'
         IF LCC.AMOUNT+0=0 THEN
            CRT @(56,20):SPACE(16)
            LCC.CARRIER=''
            LCC.NAME=''
         END
      END
      IF USER.TYPE='A' OR SU.FLAG THEN
         IF BACK.FLAG THEN GOTO 1900
      END ELSE
         IF BACK.FLAG THEN GOTO 1800
      END

      IF USER.TYPE='A' OR SU.FLAG THEN
         IF LCC.AMOUNT+0#0 THEN
ENTER.LCC.CARRIER:
            IF LCC.CARRIER # '' THEN MASK = LCC.CARRIER'R%5' ELSE MASK = '#####'
            BACK.FLAG=0
            HELP = "Enter the approved carrier for the least cost."
            CALL GEN.IN(56,20,MASK,'',Q,0,20,'','',2,-5,20,0,QI,HELP,0,23)
            CC+=LEN(QI)+1 ; GOSUB PRINT.CC
            QI = OCONV(QI,'MCU')
            IF QI='' THEN QI=LCC.CARRIER ; Q=LCC.CARRIER
            BEGIN CASE
               CASE QI = 'EX'
                  STOP
               CASE QI = 'X'
                  IF LCC.CARRIER#'' THEN
                     CRT @(56,20):LCC.CARRIER'R%5'
                  END ELSE
                     CRT @(56,20):SPACE(16)
                  END
                  GOTO ENTER.LCC.CHARGE
               CASE QI = ''
                  CALL ELINE('Entry is required.')
                  GOTO ENTER.LCC.CARRIER
               CASE NOT(QI MATCHES "0N")
                  VIN=0                  ; * Starting Chars In
                  VOUT=''
                  CALL SOUNDEX.DISPLAY.NEW(VIN,VOUT,QI,'CARRIERS','SDX.CARRIER,NAME','1,2,3,4',ITEM.LIST)
                  CC+=VOUT<1> ; GOSUB PRINT.CC
                  GOSUB 8100
                  GOSUB 8200
                  BEGIN CASE
                     CASE ITEM.LIST = ''
                        GOTO ENTER.LCC.CARRIER
                     CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                        GOTO ENTER.LCC.CARRIER
                     CASE ITEM.LIST # ''
                        IF NUM(ITEM.LIST<1,1>) THEN SND.DATA=ITEM.LIST<1,1> ; GOSUB SEND.DATA
                        GOTO ENTER.LCC.CARRIER
                  END CASE
               CASE NUM(QI)
                  Q = QI'R%5'
               CASE 1
                  GOTO ENTER.LCC.CARRIER
            END CASE
            LCC.CARRIER = Q

*----   Get Carrier Data

            READV LCC.NAME FROM F.CARRIERS,LCC.CARRIER,1 ELSE
               CALL ELINE("ERROR - Carrier ":CARRIER.ID:" not on file.")
               GOTO ENTER.LCC.CARRIER
            END
            CRT @(56,20):LCC.CARRIER'R%5':' ':LCC.NAME'L#10'
         END
      END
      IF USER.TYPE = 'A' THEN GOTO 2100

***********************************************************

*---- Enter air shipment pieces
2000: ***
      IF T.MODE[1,3] = 'TEMP' & CL.AIR.FLAG = 'Y' THEN
         IF (AUDIT='Y' OR AUDIT='U') AND AUDIT.TYPE='AIRBRN' THEN
            IF BACK.FLAG THEN
*DF             IF USER='DAVID' OR USER='MYRA' OR USER='MARY' OR SU.FLAG THEN
               IF SU.FLAG THEN
                  GOTO 1950              ; * Back into Audit Routine
               END ELSE
                  IF USER.TYPE='A' THEN
                     GOTO ENTER.LCC.CHARGE
                  END ELSE
                     GOTO 1800
                  END
               END
            END
            GOTO 2100
         END
         BACK.FLAG = 0
         HELP = 'Enter the number of air pieces. [X]=Back [EX]=Exit'
         IF AIR.PIECES = '' THEN REQ = 1 ELSE REQ = 0
         CALL GEN.IN(0,21,AIR.PIECES'R#7','',Q,REQ,7,'','',2,-7,21,0,QI,HELP,0,23)
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC
         QI = OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI = 'X'
               CRT @(0,21):'       ':
               BACK.FLAG = 1
*DF         IF USER='DAVID' OR USER='MYRA' OR USER='MARY' OR SU.FLAG THEN
               IF SU.FLAG THEN
                  GOTO 1950
               END ELSE
                  GOTO 1800
               END
            CASE QI = 'EX'
               STOP
            CASE CHANGE.FLAG & QI = ''
               Q = AIR.PIECES
            CASE QI = ''
               Q = AIR.PIECES
            CASE NUM(QI)
               Q = QI
            CASE 1
               GOTO 2000
         END CASE
         AIR.PIECES = Q
         CRT @(0,21):AIR.PIECES'R#7'
      END ELSE
*DF         IF USER='DAVID' OR USER='MYRA' OR USER='MARY' OR SU.FLAG THEN
         IF SU.FLAG THEN
            IF BACK.FLAG THEN GOTO 1950
         END ELSE
            IF USER.TYPE='A' THEN
               GOTO ENTER.MISROUTE.CHARGE
            END ELSE
               IF BACK.FLAG THEN GOTO 1800
            END
         END
      END

2001: ***
      IF NOT(SU.FLAG) THEN
*        IF INDEX(T.MODE,'AIR',1) GT 0 & CL.AIR.FLAG = 'Y' THEN ; * JMK12
         BEGIN CASE                      ; * JMK12
            CASE INDEX(T.MODE,'AIR',1) GT 0 & CL.AIR.FLAG = 'Y'        ; * JMK12
               BACK.FLAG = 0
               HELP = 'Enter the dimensional weight of the shipment. [X]=Back [EX]=Exit'
               IF DIM.WEIGHT = '' THEN
                  REQ = 1
                  MASK = ''
               END ELSE
                  REQ = 0
                  MASK = DIM.WEIGHT'R#6'
               END
               CALL GEN.IN(1,21,MASK,'',Q,REQ,6,'','',2,1,21,0,QI,HELP,0,23)
               CC+=LEN(QI)+1 ; GOSUB PRINT.CC
               QI = OCONV(QI,'MCU')
               BEGIN CASE
                  CASE QI = 'X'
                     CRT @(0,21):'         ':
                     BACK.FLAG = 1
*DF                    IF USER='DAVID' OR USER='MYRA' OR USER='MARY' OR SU.FLAG THEN
                     IF SU.FLAG THEN
                        GOTO 1950
                     END ELSE
                        GOTO 1800
                     END
                  CASE QI = 'EX'
                     STOP
                  CASE CHANGE.FLAG & QI = ''
                     Q = DIM.WEIGHT
                  CASE QI = ''
                     Q = DIM.WEIGHT
                  CASE NUM(QI)
                     Q = QI
                  CASE 1
                     GOTO 2001
               END CASE
               DIM.WEIGHT = Q
               CRT @(1,21):DIM.WEIGHT'R#6'
               IF DIM.WEIGHT > 50000 THEN CALL ELINE('WARNING! Weight is over 50,000 lbs! Check it!')
               IF DIM.WEIGHT = WEIGHT THEN CHARGE.WEIGHT = DIM.WEIGHT ELSE CHARGE.WEIGHT = WEIGHT
               CARRIER.MODE.WGT = CARRIER.REC<70>
               CARRIER.MODE.BY.WGT = CARRIER.REC<71>
               LOCATE CHARGE.WEIGHT IN CARRIER.MODE.WGT<1> BY "AR" SETTING POS ELSE NULL
               T.MODE.BY.WGT = OCONV(CARRIER.MODE.BY.WGT<1,POS>,'MCU')
               LTL.CAR=T.MODE.BY.WGT=1   ; * JMK187
               TL.CAR=T.MODE.BY.WGT=6    ; * JMK187
               AIR.CAR=T.MODE.BY.WGT=12  ; * JMK187
               IF T.MODE.BY.WGT = 12 AND CHARGE.WEIGHT > 75 THEN
                  VIN=''
                  VIN<1> = SERVICE.LEVEL
                  VIN<2> = AIR.PIECES
                  VIN<3> = AIR.CHRG.CODES
                  VIN<4> = AIR.CHRG.AMTS
                  VIN<5> = DIM.WEIGHT
                  VIN<6> = WEIGHT
                  VIN<7> = CARRIER.ID
                  VIN<8> = CARRIER.NAME
                  ORIG = ORIG.ZIP:' ':ORIG.CITY:', ': ORIG.STATE
                  VIN<9> = ORIG
                  DEST = DEST.ZIP:' ':DEST.CITY:', ': DEST.STATE
                  VIN<10> = DEST
                  VIN<11> = ACTUAL.CHG
                  VIN<12> = CC
                  IF CHANGE.FLAG THEN VIN<13> = 'E' ELSE VIN<13> = 'I'
                  VIN<14> = USER
                  CVIN<15> = MISC.REASON           ; * JMK157
                  ID = 'AIR.SERVLEV*':CARRIER.ID
                  READ SERVICE.LEV FROM F.TABLES,ID ELSE
                     CALL ELINE('There must be a service level table set up for this carrier.')
                     GOTO 100
                  END
                  VOUT=''
                  CALL FB.2.1.AIR.FREIGHT(VIN,VOUT,AIR.CODES,SERVICE.LEV,QI)
                  CC+=VOUT<5> ; GOSUB PRINT.CC
                  IF VOUT # '' THEN
                     SERVICE.LEVEL = VOUT<1>
                     AIR.PIECES = VOUT<2>
                     AIR.CHRG.CODES = VOUT<3>
                     AIR.CHRG.AMTS = VOUT<4>
                     MISC.REASON = CVOUT<6>        ; * JMK157
                  END
                  QI = OCONV(QI,'MCU')
                  BEGIN CASE
                     CASE QI = 'X'
                        BACK.FLAG = 1
                        GOSUB 8100
                        GOSUB 8200
                        GOTO 2001
                     CASE QI = 'EX'
                        STOP
                  END CASE
                  GOSUB 8100
                  GOSUB 8200
               END                       ; * IF T.MODE.BY.WGT = 12 AND CHARGE.WEIGHT > 75
*         END ELSE ; * JMK12
            CASE INDEX(T.MODE,'TRUCKLOAD',1) GT 0 & CL.TL.FLAG = 'Y'   ; * JMK12
               BACK.FLAG = 0
               GOSUB GET.TL.ROUTE        ; * JMK18
               BEGIN CASE
                  CASE QI = 'X'
                     BACK.FLAG = 1
                     GOSUB 8100
                     GOSUB 8200
*DF                    IF USER='DAVID' OR USER='MYRA' OR USER='MARY' OR SU.FLAG THEN
                     IF SU.FLAG THEN
                        GOTO 1950
                     END ELSE
                        GOTO 1800
                     END
                  CASE QI = 'EX'
                     STOP
               END CASE
               IF VOUT # '' THEN
                  ZIP.ARR<1>=RVOUT<1>
                  ZIP.ARR<2>=RVOUT<2>
                  ZIP.ARR<3>=RVOUT<3>
                  ZIP.ARR<7>=RVOUT<7>
                  TL.BILL.MILES=RVOUT<6>
               END
               BACK.FLAG = 0
*DF               GOSUB GET.FB.DETAILS      ; * JMK18
*DF               BEGIN CASE
*DF                  CASE QI = 'X'
*DF                     BACK.FLAG = 1
*DF                     GOSUB 8100
*DF                     GOSUB 8200
*DF                     GOTO 2001
*DF                  CASE QI = 'EX'
*DF                     STOP
*DF               END CASE
               GOSUB 8100
               GOSUB 8200
            CASE 1                       ; * JMK12
               IF BACK.FLAG THEN
*DF                 IF USER='DAVID' OR USER='MYRA' OR USER='MARY' OR SU.FLAG THEN
                  IF SU.FLAG THEN
                     GOTO 1950
                  END ELSE
                     GOTO 1800
                  END
               END
               CARRIER.MODE.WGT = CARRIER.REC<70>
               CARRIER.MODE.BY.WGT = CARRIER.REC<71>
               LOCATE WEIGHT IN CARRIER.MODE.WGT<1> BY "AR" SETTING POS ELSE NULL
               T.MODE.BY.WGT = OCONV(CARRIER.MODE.BY.WGT<1,POS>,'MCU')
               LTL.CAR=T.MODE.BY.WGT=1   ; * JMK187
               TL.CAR=T.MODE.BY.WGT=6    ; * JMK187
               AIR.CAR=T.MODE.BY.WGT=12  ; * JMK187
*        END                             ; * IF INDEX(T.MODE,'AIR',1) GT 0 & CL.AIR.FLAG = 'Y' ; * JMK12
         END CASE                        ; * JMK12
      END                                ; * IF NOT(SU.FLAG)

*---- Enter expense distributions
2100: ***
      IF CLIENT.ID='01636' AND OLD.PRO.REC<33>='' THEN       ; * JMK152
         DTAB.HOLD=''                    ; * JMK152
         NEXPVAL=DCOUNT(EXP.LIST,@VM)    ; * JMK152
         IF NEXPVAL>1 THEN               ; * JMK152
            EXPBASE=SUM(EXP.DIST)        ; * JMK152
            DTAB<1>=EXP.LIST             ; * JMK152
            FOR EXPVAL=1 TO NEXPVAL-1    ; * JMK152
               DTAB<3,EXPVAL>=OCONV(ACTUAL.CHG*EXP.DIST<1,EXPVAL>/EXPBASE,'MR0')           ; * JMK152
            NEXT EXPVAL                  ; * JMK152
            DTAB<3,NEXPVAL>=ACTUAL.CHG-SUM(DTAB<3>)          ; * JMK152
            DTAB.HOLD=DTAB               ; * JMK152
         END                             ; * JMK152
      END                                ; * JMK152
      IF CL.EXP.DIST.FLAG MATCHES 'Y':@VM:'O' AND VERSION = 0 THEN
         IF USER.TYPE='A' THEN
            IF BACK.FLAG THEN GOTO 2000
            TOT=0
            X=DCOUNT(DTAB<1>,CHAR(253))
            FOR I=1 TO X
               TOT=TOT+DTAB<3,I>
            NEXT I
            NEW.TOT=''
            IF TOT # ACTUAL.CHG THEN
*DF               IF (CLIENT.ID='10356' AND CARRIER.ID='00041' AND DIVISION < '00004') OR (CLIENT.ID='10356' AND CARRIER.ID='00015' AND DIVISION='00006') OR (CLIENT.ID='10356' AND CARRIER.ID='00041' AND DIVISION='00007') THEN
               IF (CLIENT.ID='10356' AND CARRIER.ID='00041' AND DIVISION < '00004') OR (CLIENT.ID='10356' AND CARRIER.ID='00041' AND DIVISION='00007') OR (CLIENT.ID='01157' AND CARRIER.ID='00041') OR (CLIENT.ID='01085' AND CARRIER.ID='00041') OR (CLIENT.ID='01087' AND CARRIER.ID='00041') THEN
                  VIN=0                  ; * Starting Characters for Subroutine
                  VIN<2>=USER
                  VOUT=''
                  CALL FB.2.1.DIST.NEW(VIN,VOUT,F.DIV,F.EXP,ACTUAL.CHG,DTAB,QI)
                  CC+=VOUT<1> ; GOSUB PRINT.CC
               END ELSE
                  X=DCOUNT(DTAB<1>,CHAR(253))
                  TIMES=X-1
                  IF TIMES => 1 THEN
                     FOR I=1 TO TIMES
                        EXP.PERCENT=DTAB<3,I>/TOT
                        DTAB<3,I>=(EXP.PERCENT*ACTUAL.CHG)'R0'
                        NEW.TOT=NEW.TOT+DTAB<3,I>
                     NEXT I
                  END
                  DTAB<3,X>=ACTUAL.CHG-NEW.TOT
               END
            END
            GOTO 2200
         END
         BACK.FLAG = 0
*DF         IF CL.EXP.DIST.FLAG = 'Y' OR (CLIENT.ID='10356' AND CARRIER.ID='00041' AND DIVISION < '00004') OR (CLIENT.ID='10356' AND CARRIER.ID='00015' AND DIVISION = '00006') OR (CLIENT.ID='10356' AND CARRIER.ID='00041' AND DIVISION='00007') THEN
         IF CL.EXP.DIST.FLAG = 'Y' OR (CLIENT.ID='10356' AND CARRIER.ID='00041' AND DIVISION < '00004') OR (CLIENT.ID='10356' AND CARRIER.ID='00041' AND DIVISION='00007') OR (CLIENT.ID='01157' AND CARRIER.ID='00041') OR (CLIENT.ID='01085' AND CARRIER.ID='00041') OR (CLIENT.ID='01087' AND CARRIER.ID='00041') THEN
            IF CLIENT.ID='10356' AND CARRIER.ID='00041' AND DIVISION < '00004' AND PRO[1,7]#'1RA-951' THEN
               IF PRO[1,7]='22W-9A7' OR PRO[1,7]='22W-9A9' THEN
                  DTAB<1,2>=DTAB<1,1>[1,17]:'0'
               END ELSE
                  DTAB<1,2>=DTAB<1,1>[1,17]:'3'
               END
            END
*DF            IF CLIENT.ID='10356' AND CARRIER.ID='00015' AND DIVISION='00006' AND IN.OUT='O' THEN
*DF               DTAB<1,2>=DTAB<1,1>[1,18]:'6'
*DF            END
            IF CLIENT.ID='10356' AND CARRIER.ID='00041' AND DIVISION='00007' THEN
               DTAB<1,2>=DTAB<1,1>[1,13]:'10.0'
            END
            IF CLIENT.ID='01085' AND CARRIER.ID='00041' THEN
               DTAB<1,2>='03.0.0603.53600.0000.0000'
            END
            IF CLIENT.ID='01087' AND CARRIER.ID='00041' THEN
               DTAB<1,2>='11-419-925'
            END
            IF DTAB<3> = '' THEN DTAB<3> = ACTUAL.CHG
            QI = ''
            VIN=0                        ; * Starting Characters for Subroutine
            VIN<2>=USER
            VOUT=''
            CALL FB.2.1.DIST.NEW(VIN,VOUT,F.DIV,F.EXP,ACTUAL.CHG,DTAB,QI)
            CC+=VOUT<1> ; GOSUB PRINT.CC
         END ELSE
*DF            IF CHANGE.FLAG=1 OR CHANGE.EXP=1 THEN SND.DATA='Y';GOSUB SEND.DATA
            IF CHANGE.FLAG=1 OR CHANGE.EXP=1 AND DCOUNT(DTAB<1>,@VM)>1 THEN      ; * JMK117
               SND.DATA='Y'              ; * JMK117
               GOSUB SEND.DATA           ; * JMK117
            END                          ; * JMK117
            HELP = "Distribute expenses? [Y or 1]=Yes [N or CR]=No [X]=Back [EX]=Exit"
            CRT @(0,22):
            CALL GEN.IN(0,22,'Enter option please. --','',Q,0,2,'','',2,-2,22,1,Q2,HELP,0,23)
            CC+=LEN(Q2)+1 ; GOSUB PRINT.CC
            Q2 = OCONV(Q2,'MCU')
            IF Q = 'Y' ! Q = '1' THEN
               QI = ''
               VIN=0                     ; * Starting Characters for Subroutine
               VIN<2>=USER
               VOUT=''
               CALL FB.2.1.DIST.NEW(VIN,VOUT,F.DIV,F.EXP,ACTUAL.CHG,DTAB,QI)
               CC+=VOUT<1> ; GOSUB PRINT.CC
            END ELSE
               IF CLIENT.ID='01053' THEN DTAB<1>=EXP.CODE
               DTAB<3> = ACTUAL.CHG
            END
            IF Q2 = 'X' THEN
               BACK.FLAG = 1
               GOTO 2000
            END
            IF Q2 = 'EX' THEN STOP
         END
      END ELSE
         IF BACK.FLAG THEN GOTO 2000
         IF CLIENT.ID='01053' THEN DTAB<1>=EXP.CODE
         DTAB<3> = ACTUAL.CHG
         QI = ''
      END
      IF QI = 'X' THEN
         BACK.FLAG = 1
         GOTO 2000
      END
      IF QI = 'EX' THEN STOP

*---- Enter variance distributions
2200: ***
      QI = ''
      IF CL.VAR.FLAG='Y' THEN CL.VAR.FLAG='A'
***
***
***  Per Owen request as clients were enter with a Y and should be an A
***  We don't think the Y is used anymore. - DRF 8/5/02
***
***
      IF (CL.VAR.FLAG = 'Y' & VERSION = 0) OR (CL.VAR.FLAG = 'A' & VERSION = 0) THEN
         IF VAR.ARR<3>+0 # 0 THEN
            IF AUDIT#'Y' AND CL.VAR.FLAG='Y' THEN
               BACK.FLAG = 0
               VIN=0
               VIN<2>=USER
               VOUT=''
               CALL FB.2.1.VAR.DIST.NEW(VIN,VOUT,F.VAR,VAR.ARR<3>,VAR.REC,QI)
               CC+=VOUT<1> ; GOSUB PRINT.CC
               VER.CODE='LD' ; VER.TYPE='R' ; GOSUB UPDATE.VERIFY
               IF QI = 'X' THEN
                  BACK.FLAG = 1
                  GOTO 2100
               END
               IF QI = 'EX' THEN STOP
               IF CLIENT.ID='00367' THEN
                  IF VAR.REC<1>#DIVISION+0 THEN
                     CALL ELINE('Variance Distribution must be the division number.')
                     CC+=1 ; GOSUB PRINT.CC
                     GOTO 2200
                  END
               END
            END ELSE
               IF BACK.FLAG THEN GOTO 2100
               VAR.REC=''
               BEGIN CASE
                  CASE AUDIT.TYPE[1,3]='LTL' AND CLIENT.ID='00367'
                     VAR.CODE=DIVISION+0           ; * For Delta Distributing
                     VAR.REC<1>=VAR.CODE
                     VAR.REC<2>=LOGISTIC.AMT
                     READV DESC FROM F.VAR,VAR.CODE,1 ELSE DESC='Not On File'
                     VAR.REC<3>=DESC
                  CASE 1
                     VAR.REC<1>=CARRIER.MODE
                     READV DESC FROM F.VAR,CARRIER.MODE,1 ELSE
*** ADD CODE ***
                        READV TR.MODE FROM F.TRANSPORT,CARRIER.MODE,1 ELSE
                           CALL ELINE("Carrier: ":CARRIER.ID:" has an invalid transportation code of '":CARRIER.MODE:"'")
                           STOP
                        END
                        WRITEV TR.MODE ON F.VAR,CARRIER.MODE,1
                        DESC=TR.MODE
                     END
                     VAR.REC<2>=VAR.ARR<3>
                     VAR.REC<3>=DESC
               END CASE
               VER.CODE='LD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
            END
         END ELSE
            IF BACK.FLAG THEN GOTO 2100
         END
      END ELSE
         IF BACK.FLAG THEN GOTO 2100
      END
ENTER.DUTY: ***
*DF      IF USER='DAVID' THEN CALL ELINE('PRESS BREAK')
*     IF (USER.TYPE # 'A' OR PRO[LEN(PRO)-1,2]='AD' OR PRO[LEN(PRO)-1,2]='BD') AND (CLIENT.ID = "00978" OR CLIENT.ID = "01105") AND ((ORIG.ZIP MATCH('1A1N1A1N1A1N') AND NOT(DEST.ZIP MATCH('1A1N1A1N1A1N')) OR (DEST.ZIP MATCH('1A1N1A1N1A1N') AND NOT(ORIG.ZIP MATCH('1A1N1A1N1A1N'))))) THEN ; * JMK97
      IF (USER.TYPE # 'A' OR PRO[LEN(PRO)-1,2]='AD' OR PRO[LEN(PRO)-1,2]='BD') AND (CLIENT.ID = "00978" OR CLIENT.ID = "01105" OR CLIENT.ID="01428") AND ((ORIG.ZIP MATCH('1A1N1A1N1A1N') AND NOT(DEST.ZIP MATCH('1A1N1A1N1A1N')) OR (DEST.ZIP MATCH('1A1N1A1N1A1N') AND NOT(ORIG.ZIP MATCH('1A1N1A1N1A1N'))))) THEN   ; * JMK97
         QI=''
         VOUT=''
         VIN=CC
         VIN<2>=USER
         VIN<3>=IN.OUT
         VIN<4>=ACTUAL.CHG
         VIN<5>=CLIENT.ID
         VIN<6>=ORIG.ZIP
         VIN<7>=DEST.ZIP
         CALL FB.2.1.DUTY(VIN,VOUT,DIDUTY,DODUTY,QI)
         CC+=VOUT<1> ; GOSUB PRINT.CC
         IF QI='X' THEN
            BACK.FLAG=1
            GOTO 2200
         END
      END ELSE
         IF (USER.TYPE # 'A' OR PRO[LEN(PRO)-1,2]='AD' OR PRO[LEN(PRO)-1,2]='BD') AND (CLIENT.ID = "01460") AND (ORIG.ZIP MATCH('1A1N1A1N1A1N') OR DEST.ZIP MATCH('1A1N1A1N1A1N')) THEN        ; * JMK112
            QI=''                        ; * JMK112
            VOUT=''                      ; * JMK112
            VIN=CC                       ; * JMK112
            VIN<2>=USER                  ; * JMK112
            VIN<3>=IN.OUT                ; * JMK112
            VIN<4>=ACTUAL.CHG            ; * JMK112
            VIN<5>=CLIENT.ID             ; * JMK112
            VIN<6>=ORIG.ZIP              ; * JMK112
            VIN<7>=DEST.ZIP              ; * JMK112
            CALL FB.2.1.DUTY(VIN,VOUT,DIDUTY,DODUTY,QI)      ; * JMK112
            CC+=VOUT<1> ; GOSUB PRINT.CC           ; * JMK112
            IF QI='X' THEN               ; * JMK112
               BACK.FLAG=1               ; * JMK112
               GOTO 2200                 ; * JMK112
            END                          ; * JMK112
            EXPVIN=''                    ; * JMK112
            EXPVOUT=''                   ; * JMK112
            EXPVIN<1>=CLIENT.ID          ; * JMK112
            EXPVIN<2>=ACTUAL.CHG         ; * JMK112
            EXPVIN<3>=DIVISION           ; * JMK112
            CALL DIST.EXPENSE(EXPVIN,EXPVOUT,DODUTY)         ; * JMK112
            IF EXPVOUT#'' THEN           ; * JMK112
               DTAB<1>=EXPVOUT<1>        ; * JMK112
               DTAB<3>=EXPVOUT<2>        ; * JMK112
               EXP.CODE=DTAB<1,1>        ; * JMK112
            END                          ; * JMK112
         END ELSE                        ; * JMK112
            IF BACK.FLAG THEN GOTO 2200
         END                             ; * JMK112
      END

      BEEN.THRU=0
*---- Item update
4900: ***
      IF REJECT.FLAG OR VERSION#0 ELSE
*        IF CLIENT.ID='00932' OR CLIENT.ID='00143' OR (INDEX(T.MODE,'TRUCKLOAD',1) GT 0 & CL.TL.FLAG = 'Y') THEN         ; * JMK18; * JMK37 ; * JMK43
         CAPTURE.DETAIL=0                ; * JMK43
*        IF CLIENT.ID='00932' THEN CAPTURE.DETAIL=1          ; * JMK43 ; * JMK52
*        IF CLIENT.ID='00143' THEN CAPTURE.DETAIL=1          ; * JMK43 ; * JMK52
*        IF CLIENT.ID='01312' THEN CAPTURE.DETAIL=1          ; * JMK43 ; * JMK52
*        IF CLIENT.ID='01334' THEN CAPTURE.DETAIL=1          ; * JMK47 ; * JMK52
*        IF CLIENT.ID='01201' THEN CAPTURE.DETAIL=1          ; * JMK47 ; * JMK52
*        IF CLIENT.ID='01306' THEN CAPTURE.DETAIL=1          ; * OWEN  ; * JMK52
*        IF CLIENT.ID='01312' THEN CAPTURE.DETAIL=1          ; * JMK50 ; * JMK52
         IF CLIENT.ID='01095' THEN
            IF ORIG.ZIP='99999' OR LEN(ORIG.ZIP)=6 OR DEST.ZIP='99999' OR LEN(DEST.ZIP)=6 THEN
               CAPTURE.DETAIL=1
            END ELSE
               CAPTURE.DETAIL=0
            END
         END
*DF         IF USER='DAVID' AND CLIENT.ID='01031' AND CARRIER.ID='00198' AND WEIGHT LE 200 THEN CAPTURE.DETAIL=1
         IF FB.DTL.CAPTURE='Y' THEN CAPTURE.DETAIL=1         ; * JMK52
         IF (INDEX(T.MODE,'TRUCKLOAD',1) GT 0 & CL.TL.FLAG = 'Y') THEN CAPTURE.DETAIL=1    ; * JMK43
         IF DTL.CHRG.AMTS#'' THEN CAPTURE.DETAIL=1           ; * JMK83
         IF CARRIER.ID='00041' THEN CAPTURE.DETAIL=0         ; * JMK76
         IF CARRIER.ID='01312' THEN CAPTURE.DETAIL=0         ; * JMK76
*        IF CARRIER.MODE='8' THEN CAPTURE.DETAIL=0           ; * JMK169; * JMK174
         IF CAPTURE.DETAIL THEN          ; * JMK43
            BEGIN CASE                   ; * JMK91
               CASE AIR.CAR              ; * JMK91
                  AIR.CHRG.AMT=SUM(AIR.CHRG.AMTS)  ; * JMK91
VERIFY.AIR.AMTS: *   ; * JMK91
*                 IF (AIR.CHRG.AMT#ACTUAL.CHG ) OR (PRO.REC<39>#'R' AND AMOUNT.MATCH=0 AND AUDIT # 'Y') OR (AIR.CAR & CL.AIR.FLAG='Y' AND USER.TYPE#'A') OR (QI='X') THEN  ; * JMK91 ; * JMK158
                  IF (AIR.CHRG.AMT#ACTUAL.CHG ) OR (PRO.REC<39>#'R' AND AMOUNT.MATCH=0 AND AUDIT # 'Y') OR (AIR.CAR & CL.AIR.FLAG='Y') OR (QI='X') THEN          ; * JMK91 ; * JMK158
                     GOSUB GET.FB.DETAILS          ; * JMK91
                     IF QI='X' THEN      ; * JMK91
                        BACK.FLAG=1      ; * JMK91
                        GOSUB 8100       ; * JMK91
                        GOSUB 8200       ; * JMK91
                        GOTO ENTER.DUTY  ; * JMK91
                     END                 ; * JMK91
                     FRT.ARRAY=''        ; * JMK91
                     MIS.ARRAY=''        ; * JMK91
                     DTL.OUT=''          ; * JMK91
                     DTL.OUT<40>=AIR.CHRG.CODES    ; * JMK91
                     DTL.OUT<44>=AIR.CHRG.AMTS     ; * JMK91
                     GOSUB RECALC.FB.DETAILS       ; * JMK91
                  END                    ; * JMK91
                  LOCATE('FUEL',AIR.CHRG.CODES,1;FPOS) ELSE  ; * JMK91
VERIFY.FUEL: *         ; * JMK91
                     CRT @(0,21):@(-3):"[YES] I verify that this bill does NOT have a fuel surcharge."         ; * JMK91
                     HELP="X=Change. EX=Exit. [YES]=Continue."         ; * JMK91
                     CALL GEN.IN(0,22,'Enter selection please. ---','',Q,0,3,'','',0,-3,22,1,QI,HELP,0,23)     ; * JMK91
                     QI=OCONV(QI,'MCU')  ; * JMK91
                     BEGIN CASE          ; * JMK91
                        CASE QI='X'      ; * JMK91
                           CRT @(0,21):@(-3):      ; * JMK91
                           GOTO 4900     ; * JMK91
                        CASE QI='EX'     ; * JMK91
                           STOP          ; * JMK91
                        CASE QI='YES'    ; * JMK91
                           NULL          ; * JMK91
                        CASE QI='1'      ; * JMK91
                           NULL          ; * JMK91
                        CASE 1           ; * JMK91
                           CALL ELINE('Invalid entry. Must be [X], [EX], or [YES].')       ; * JMK91
                           GOTO VERIFY.FUEL        ; * JMK91
                     END CASE            ; * JMK91
                     CRT @(0,21):@(-3):  ; * JMK91
                  END                    ; * JMK91
               CASE 1                    ; * JMK91
                  DTL.CHRG.AMT=SUM(DTL.CHRG.AMTS)  ; * JMK18
VERIFY.DTL.AMTS: *   ; * JMK18
*           IF (DTL.CHRG.AMT#ACTUAL.CHG ) OR (PRO.REC<39>#'R' AND AMOUNT.MATCH=0 AND AUDIT # 'Y') OR (TL.CAR & CL.TL.FLAG='Y') OR (QI='X') THEN        ; * JMK18 ; * JMK69
*                 IF (DTL.CHRG.AMT#ACTUAL.CHG ) OR (PRO.REC<39>#'R' AND AMOUNT.MATCH=0 AND AUDIT # 'Y') OR (TL.CAR & CL.TL.FLAG='Y' AND USER.TYPE#'A') OR (QI='X') THEN    ; * JMK18 ; * JMK69 ; * JMK158
                  IF (DTL.CHRG.AMT#ACTUAL.CHG ) OR (PRO.REC<39>#'R' AND AMOUNT.MATCH=0 AND AUDIT # 'Y') OR (TL.CAR & CL.TL.FLAG='Y') OR (QI='X') THEN  ; * JMK18 ; * JMK69 ; * JMK158
                     GOSUB GET.FB.DETAILS          ; * JMK18
*DF              IF QI='X' THEN GO VERIFY.DTL.AMTS      ; * JMK18
                     IF QI='X' THEN
                        BACK.FLAG=1
                        GOSUB 8100
                        GOSUB 8200
                        GOTO ENTER.DUTY
                     END
                     FRT.ARRAY=''        ; * JMK18
                     MIS.ARRAY=''        ; * JMK18
                     DTL.OUT=''          ; * JMK18
                     DTL.OUT<40>=DTL.CHRG.CODES    ; * JMK18
                     DTL.OUT<44>=DTL.CHRG.AMTS     ; * JMK18
                     GOSUB RECALC.FB.DETAILS       ; * JMK18
                  END                    ; * JMK18

*NPR031 Start Changes

                  CHECK.FSC = 1          ; * NPR031
                  IF ORIG.ZIP = "99999" OR DEST.ZIP = "99999" THEN
                     IF CARRIER.ID='00041' THEN
                        CHECK.FSC = 1
                     END ELSE
                        CHECK.FSC = 0
                     END
                  END

                  IF INTL.CAR OR INDEX(T.MODE,"INTERNATIONAL",1) THEN CHECK.FSC = 0

                  IF NOT(CHECK.FSC) THEN
                     NULL
                  END ELSE

*NPR031 End Changes

                     LOCATE('FSC',DTL.CHRG.CODES,1;FPOS) ELSE          ; * JMK18
VERIFY.FSC: *         ; * JMK18
                        CRT @(0,21):@(-3):"[YES] I verify that this bill does NOT have a fuel surcharge."      ; * JMK18
                        HELP="X=Change. EX=Exit. [YES]=Continue."      ; * JMK18
                        CALL GEN.IN(0,22,'Enter selection please. ---','',Q,0,3,'','',0,-3,22,1,QI,HELP,0,23)  ; * JMK18
                        QI=OCONV(QI,'MCU')         ; * JMK18
                        BEGIN CASE       ; * JMK18
                           CASE QI='X'   ; * JMK18
                              CRT @(0,21):@(-3):   ; * JMK18
                              GOTO 4900  ; * JMK18
                           CASE QI='EX'  ; * JMK18
                              STOP       ; * JMK18
                           CASE QI='YES'           ; * JMK18
                              NULL       ; * JMK18
                           CASE QI='1'   ; * JMK22
                              NULL       ; * JMK22
                           CASE 1        ; * JMK18
                              CALL ELINE('Invalid entry. Must be [X], [EX], or [YES].')    ; * JMK18
                              GOTO VERIFY.FSC      ; * JMK18
                        END CASE         ; * JMK18
                        CRT @(0,21):@(-3):
                     END                 ; * JMK18
                  END                    ; * NPR031
            END CASE                     ; * JMK91
            GOSUB 8100
            GOSUB 8200
         END                             ; * JMK18
      END
      IF USER.TYPE # 'A' AND NOT(SU.FLAG) THEN
         IF AUDIT.TYPE = 'LTLALL' THEN
            IF AMOUNT.MATCH=0 AND AUDIT # 'Y' THEN
               BILL.STATUS=3
            END ELSE
               IF AUDIT = 'Y' THEN
                  IF HIGH.CLASS > LOWEST.TABLE.CLASS THEN
                     IF CONTR.ABS.MIN THEN
                        BILL.STATUS=1
                        MIN.CHG='Y'
                     END ELSE
                        BILL.STATUS=2
                     END
                  END ELSE
                     BILL.STATUS=1
                  END
               END
            END
         END
         IF AUDIT.TYPE='TLALL' THEN
            IF AUDIT='Y' THEN
*DF               BILL.STATUS=1
               IF CLIENT.ID='00949' THEN
                  BILL.STATUS=3
               END ELSE
                  BILL.STATUS=1
               END
            END
            IF AUDIT='U' THEN
               BILL.STATUS=3
            END
         END
         IF VERSION = '0' THEN
            OVERRIDE.STATUS=''
            TEMP.REC = ''
            TEMP.REC<1> = BILL.DATE
            TEMP.REC<2> = IN.OUT
            TEMP.REC<3> = ORIG.ZIP
            TEMP.REC<4> = DEST.ZIP
            TEMP.REC<5> = EXP.CODE
            TEMP.REC<6> = WEIGHT+0
            TEMP.REC<8> = ACTUAL.CHG+0
            TEMP.REC<9> = DIVISION
            TEMP.REC<10> = VAR.ARR<1>+0
            TEMP.REC<11> = VAR.ARR<2>+0
            TEMP.REC<12> = VAR.ARR<3>+0
            TEMP.REC<16> = BOL
            TEMP.REC<205> = BOL.DIST     ; * JMK84
            TEMP.REC<17> = VC.ID
            TEMP.REC<19> = MILEAGE+0
            CARRIER.MODE.WGT = CARRIER.REC<70>
            CARRIER.MODE.BY.WGT = CARRIER.REC<71>
            LOCATE WEIGHT IN CARRIER.MODE.WGT<1> BY "AR" SETTING POS ELSE NULL
            T.MODE.BY.WGT = OCONV(CARRIER.MODE.BY.WGT<1,POS>,'MCU')
            LTL.CAR=T.MODE.BY.WGT=1      ; * JMK187
            TL.CAR=T.MODE.BY.WGT=6       ; * JMK187
            AIR.CAR=T.MODE.BY.WGT=12     ; * JMK187
            TEMP.REC<21> = T.MODE.BY.WGT
            TEMP.REC<25> = ORIG.STATE
            TEMP.REC<26> = DEST.STATE
            TEMP.REC<27> = ORIG.CITY
            TEMP.REC<28> = DEST.CITY
            TEMP.REC<68> = BILL.STATUS
            MISC.CHG.POS=DCOUNT(CLASSES<1>,@VM)    ; * Find out how many
            FOR MISC.CHG.CNT=1 TO MISC.CHG.POS
               TEMP.REC<70,MISC.CHG.CNT>='FRT'
            NEXT MISC.CHG.CNT
            IF MISC.CHG.CODES#'' THEN
               TEMP.REC<70,MISC.CHG.POS+1>=MISC.CHG.CODES
            END
            TEMP.REC<74> = CLASSES
            TEMP.REC<119> = FLAT.RATE
            OVERRIDE.VIN=''
            OVERRIDE.VIN<1>=VC.DESC
            OVERRIDE.VIN<2>=ACTUAL.CHG+0
            OVERRIDE.VIN<3>=OLA.AMT+0
            OVERRIDE.VIN<5>=PRO
*DF*DF          IF USER='DAVID' OR (USER='TINA' AND CLIENT.ID='00982') THEN
*DF          IF USER='DAVID' OR USER='OWEN' THEN
*DF            CALL ELINE('PRESS BREAK')
*DF            CALL CHECK.OVERRIDES.NEW(OVERRIDE.VIN,CLIENT.ID,CARRIER.ID,TEMP.REC,OVER.VOUT)
*DF          END ELSE
            IF USER='DAVID' THEN CALL ELINE('PRESS BREAK')
            CALL CHECK.OVERRIDES(OVERRIDE.VIN,CLIENT.ID,CARRIER.ID,TEMP.REC,OVER.VOUT)
*DF          END
            IF OVER.VOUT<1>#'' AND OVER.VOUT<1>#BILL.STATUS THEN
               IF OWEN OR USER='DAVID' OR USER='KMESSENGER' THEN
                  NUM.OF.OVER.RULE=DCOUNT(OVER.VOUT<2>,@VM)
                  FOR XX = 1 TO NUM.OF.OVER.RULE
                     CRT @(40,7+XX):OVER.VOUT<2,XX>'L#10':" ":OVER.VOUT<3,XX>'L#3':" ":OVER.VOUT<4,XX>'L#23'
                  NEXT XX
                  CALL ELINE('Set in the override stack')
               END
               IF OVER.VOUT<1>='1' AND (BILL.STATUS='3' OR BILL.STATUS='4') THEN
                  IF VAR.ARR<3> GT 0 THEN
                     VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
                  END
               END
               OVERRIDE.STATUS=BILL.STATUS
               BILL.STATUS=OVER.VOUT<1>
               OVERRIDE.FIELD=OVER.VOUT<2>
               OVERRIDE.OPERATOR=OVER.VOUT<3>
               OVERRIDE.INFO=OVER.VOUT<4>
            END
*DF            IF OVER.VOUT<1>='AUDIT' AND BILL.STATUS='1' THEN
*DF               IF OWEN OR USER='DAVID' OR USER='KMESSENGER' THEN
*DF                  NUM.OF.OVER.RULE=DCOUNT(OVER.VOUT<2>,@VM)
*DF                  FOR XX = 1 TO NUM.OF.OVER.RULE
*DF                     CRT @(40,7+XX):OVER.VOUT<2,XX>'L#10':" ":OVER.VOUT<3,XX>'L#3':" ":OVER.VOUT<4,XX>'L#23'
*DF                  NEXT XX
*DF                  CALL ELINE('Set in the override stack')
*DF               END
*DF               OVERRIDE.STATUS=BILL.STATUS
*DF               BILL.STATUS='4'
*DF               OVERRIDE.FIELD=OVER.VOUT<2>
*DF               OVERRIDE.OPERATOR=OVER.VOUT<3>
*DF               OVERRIDE.INFO=OVER.VOUT<4>
*DF            END
*DF            IF OVER.VOUT<1>='OVER' AND BILL.STATUS#'1' THEN
*DF               IF OWEN OR USER='DAVID' OR USER ='KMESSENGER' THEN
*DF                  NUM.OF.OVER.RULE=DCOUNT(OVER.VOUT<2>,@VM)
*DF                  FOR XX = 1 TO NUM.OF.OVER.RULE
*DF                     CRT @(40,7+XX):OVER.VOUT<2,XX>'L#10':" ":OVER.VOUT<3,XX>'L#3':" ":OVER.VOUT<4,XX>'L#23'
*DF                  NEXT XX
*DF                  CALL ELINE('Set in the override stack')
*DF               END
*DF               IF BILL.STATUS='2' THEN GOTO UPDATE.STATUS
*DF               IF VAR.ARR<3> GT 0 THEN
*DF                  VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
*DF               END
*DF*DF            IF VAR.ARR<3>+0#0 THEN GOTO SKIP.UPDATE.STATUS
*DF*DF            IF CLIENT.AUDIT THEN
*DF*DF              READV LOG.FLAG FROM F.AUDIT,CARRIER.ID,13 ELSE LOG.FLAG=''
*DF*DF              IF LOG.FLAG='Y' THEN GOTO SKIP.UPDATE.STATUS
*DF*DF            END
*DFUPDATE.STATUS:***
*DF               OVERRIDE.STATUS=BILL.STATUS
*DF               BILL.STATUS='1'
*DF               OVERRIDE.FIELD=OVER.VOUT<2>
*DF               OVERRIDE.OPERATOR=OVER.VOUT<3>
*DF               OVERRIDE.INFO=OVER.VOUT<4>
*DFSKIP.UPDATE.STATUS:***
*DF            END
            IF CLIENT.ID='01290' OR CLIENT.ID='01313' OR CLIENT.ID='01309' OR CLIENT.ID='01316' OR CLIENT.ID='01339' OR CLIENT.ID='01333' OR CLIENT.ID='01320' OR CLIENT.ID='01322' OR (CLIENT.ID='01351' AND CARRIER.ID='00041') OR (CLIENT.ID='01342' AND CARRIER.ID='15113') OR (CLIENT.ID='01342' AND CARRIER.ID='01075') ELSE
*DF               IF BILL.STATUS=1 AND INDEX(PRO.ID,'/',1) THEN
*DF                  OVERRIDE.STATUS=BILL.STATUS
*DF                  BILL.STATUS='4'
*DF                  OVERRIDE.FIELD='/'
*DF                  OVERRIDE.OPERATOR='ALL'
*DF                  OVERRIDE.INFO=''
*DF               END
*
* Per Owen. Remove the / to always go to stack for everyone not just the
* special accounts listed above. - DRF 10/26/05
*
               IF BILL.STATUS=1 THEN
                  BEGIN CASE
                     CASE CLIENT.ID='01340'
                        IF ACTUAL.CHG GT '499999' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='499999'
                        END
                     CASE CLIENT.ID='01083' AND CARRIER.ID='03624'
                        IF ACTUAL.CHG GT '299999' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='299999'
                        END
                     CASE CLIENT.ID='01344' AND CARRIER.ID='15417'
                        IF ACTUAL.CHG GT '362500' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='362500'
                        END
*
* Added the above case Per Wayne Pardue. 080877 DRF 03/19/08
*
                     CASE T.MODE.BY.WGT='1' AND ACTUAL.CHG GT '99999'
                        BILL.STATUS='4'
                        OVERRIDE.FIELD='CHRG'
                        OVERRIDE.OPERATOR='GT'
                        OVERRIDE.INFO='99999'
                     CASE CLIENT.ID='01015' AND CARRIER.ID='15720'
                        IF ACTUAL.CHG GT '499999' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='499999'
                        END
                     CASE CLIENT.ID='10337' AND CARRIER.ID='00620'
                        IF ACTUAL.CHG GT '399999' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='399999'
                        END
                     CASE CLIENT.ID='10340' AND CARRIER.ID='11585'
                        IF ACTUAL.CHG GT '499999' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='499999'
                        END
                     CASE CLIENT.ID='10340' AND CARRIER.ID='11488'
                        IF ACTUAL.CHG GT '399999' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='399999'
                        END
                     CASE CLIENT.ID='10340' AND CARRIER.ID='13291'
                        IF ACTUAL.CHG GT '399999' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='399999'
                        END
                     CASE CLIENT.ID='10340' AND CARRIER.ID='07489'
                        IF ACTUAL.CHG GT '349999' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='349999'
                        END
                     CASE CLIENT.ID='01478' AND CARRIER.ID='17438'
                        IF ACTUAL.CHG GT '799999' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='799999'
                        END
*
* Added the above C200611020004 Per Wayne Pardue/Wayne Lenart. DRF 11/06/06
*
                     CASE CLIENT.ID='10225' AND CARRIER.ID='03783'
                        IF ACTUAL.CHG GT '499999' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='499999'
                        END
                     CASE CLIENT.ID='10225' AND CARRIER.ID='14700'
                        IF ACTUAL.CHG GT '499999' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='499999'
                        END
                     CASE CLIENT.ID='10225' AND CARRIER.ID='14282'
                        IF ACTUAL.CHG GT '499999' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='499999'
                        END
*
* Added the above 3 Cases T200612060004 Per Wayne Pardue/Kathy. DRF 12/11/06
*
                     CASE CLIENT.ID='01311' AND CARRIER.ID='16682'
                        IF ACTUAL.CHG GT '499999' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='499999'
                        END
                     CASE CLIENT.ID='01311' AND CARRIER.ID='02931'
                        IF ACTUAL.CHG GT '499999' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='499999'
                        END
                     CASE CLIENT.ID='01311' AND CARRIER.ID='17573'
                        IF ACTUAL.CHG GT '499999' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='499999'
                        END
*
* Added the above 3 Cases Per Wayne Pardue/Adam Smith. DRF 12/19/06
*
                     CASE CLIENT.ID='01179' AND CARRIER.ID='17724'
                        IF ACTUAL.CHG GT '399999' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='399999'
                        END
                     CASE CLIENT.ID='01288' AND CARRIER.ID='14577'
                        IF ACTUAL.CHG GT '560000' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='560000'
                        END
                     CASE CLIENT.ID='01288' AND CARRIER.ID='03405'
                        IF ACTUAL.CHG GT '499999' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='499999'
                        END
                     CASE CLIENT.ID='01408' AND CARRIER.ID='15954'
*DF                        IF ACTUAL.CHG GT '380000' THEN
                        IF ACTUAL.CHG GT '400000' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
*DF                           OVERRIDE.INFO='380000'
                           OVERRIDE.INFO='400000'
                        END
*
* Added the above case Per Wayne Pardue. C200703130005 DRF 03/13/07
*
*
* Changed from $3,800.00 to $4,000.00 per Wayne Pardue. 091282 DRF 10/20/09
*
                     CASE CLIENT.ID='01408' AND CARRIER.ID='05364'
                        IF ACTUAL.CHG GT '500000' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='500000'
                        END
*
* Added the above case Per Wayne Pardue. 070941 DRF 10/22/07
*
                     CASE CLIENT.ID='00949' AND CARRIER.ID='14257'
                        IF ACTUAL.CHG GT '449999' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='449999'
                        END
                     CASE CLIENT.ID='01478' AND CARRIER.ID='04044'
                        IF ACTUAL.CHG GT '499999' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='499999'
                        END
*
* Added the above case. Ticket 081681. DRF 07/21/08
*
                     CASE CLIENT.ID='01113' AND CARRIER.ID='16361'
                        IF ACTUAL.CHG GT '399999' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='399999'
                        END
*
* Added the above case. Ticket 081730. DRF 07/21/08
*
                     CASE CLIENT.ID='01408' AND CARRIER.ID='01118'
                        IF ACTUAL.CHG GT '400000' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='400000'
                        END
*
* Added the above case. Ticket 081797. DRF 07/24/08
*
                     CASE CLIENT.ID='01408' AND CARRIER.ID='08700'
                        IF ACTUAL.CHG GT '350000' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='350000'
                        END
*
* Added the above case. Ticket 081897. DRF 08/05/08
*
                     CASE (CARRIER.ID#'00041' AND CARRIER.ID#'08519' AND CARRIER.ID#'12393' AND CARRIER.ID#'03029' AND CARRIER.ID#'11159' AND CARRIER.ID#'09899' AND CARRIER.ID#'00642' AND CARRIER.ID#'04064') AND ACTUAL.CHG GT '299999'
                        BILL.STATUS='4'
                        OVERRIDE.FIELD='CHRG'
                        OVERRIDE.OPERATOR='GT'
                        OVERRIDE.INFO='299999'
                  END CASE
               END
            END
         END
         IF ACTUAL.CHG+0>150000 AND TRANS.MODE=1 THEN        ; * JMK141
            NO.CORE.FLAG=0               ; * JMK141
            IF PRO.REC<197>#'Y' OR MISROUTE.AMOUNT+0#0 THEN  ; * JMK141
               NVAL=DCOUNT(CLASSES,@VM)  ; * JMK141
               FOR VAL=1 TO NVAL UNTIL NO.CORE.FLAG          ; * JMK141
                  CLS=CLASSES<1,VAL>     ; * JMK141
                  IF CLS < 100 AND ACTUAL.CHG+0>150000 THEN NO.CORE.FLAG=1       ; * JMK141
                  IF CLS >= 100 AND ACTUAL.CHG+0>200000 THEN NO.CORE.FLAG=1      ; * JMK141
               NEXT VAL                  ; * JMK141
               IF NVAL=0 THEN NO.CORE.FLAG=1       ; * JMK141
               IF NO.CORE.FLAG AND PRO.REC<21>='1' AND BILL.STATUS<3 THEN        ; * JMK141
                  BILL.STATUS='3'        ; * JMK141
               END                       ; * JMK141
            END                          ; * JMK141
         END                             ; * JMK141

*
* NPR16 - Start changes
*
         IF USER = "NPRATT" OR USER = "OWEN" OR USER = "MKERBOW" OR USER = "MARY" OR USER = "MYRA" THEN        ; * Temporary for testing purposes 052509.
            CARRIER.MODE.WGT = CARRIER.REC<70>
            CARRIER.MODE.BY.WGT = CARRIER.REC<71>
            LOCATE WEIGHT IN CARRIER.MODE.WGT<1> BY "AR" SETTING POS ELSE NULL
            T.MODE.BY.WGT = OCONV(CARRIER.MODE.BY.WGT<1,POS>,'MCU')
            LTL.CAR=T.MODE.BY.WGT=1      ; * JMK187
            TL.CAR=T.MODE.BY.WGT=6       ; * JMK187
            AIR.CAR=T.MODE.BY.WGT=12     ; * JMK187
            IF USER.TYPE NE 'A' THEN
               NULL
            END ELSE
               IF BILL.STATUS = "3" OR BILL.STATUS = "4" THEN
                  NULL
               END ELSE
                  THRESHOLD.AMT = '' ; TCH.NOTE1 = "" ; TCH.NOTE2 = ""
                  ID.TAB.TCH = "MODE_THC*" : T.MODE.BY.WGT : "*" : CLIENT.ID
                  READV TR.MODE.DESC FROM F.TRANSPORT,T.MODE.BY.WGT,1 ELSE TR.MODE.DESC = ''
                  TCH.NOTE2 = "Set for transport mode ":T.MODE.BY.WGT
                  IF TR.MODE.DESC NE '' THEN TCH.NOTE2 := " (":TR.MODE.DESC:")"
                  READ TCH.REC FROM F.TABLES, ID.TAB.TCH THEN
                     THRESHOLD.AMT = TCH.REC<1>
                  END ELSE
                     ID.TAB.TCH = "MODE_THC*" : T.MODE.BY.WGT : "*ALL"
                     READ TCH.REC FROM F.TABLES, ID.TAB.TCH THEN
                        THRESHOLD.AMT = TCH.REC<1>
                        TCH.NOTE2 = " and ALL Clients"
                     END
                  END
                  IF THRESHOLD.AMT NE '' THEN
                     IF ACTUAL.CHG GE THRESHOLD.AMT THEN
                        NEW.BILL.STATUS = "4"      ; * Force the bill to go to the Auditors regardless of any other reasons to the contrary
                        TCH.NOTE1 = "Bill Amount of ":OCONV(ACTUAL.CHG,"MR2$"):"  Exceeds set threshold of ":OCONV(THRESHOLD.AMT,"MR2$")
                        IF INDEX(FB.NOTE,"threshold",1) THEN
                           NULL
                        END ELSE
                           FB.NOTE<1,-1> = TCH.NOTE1
                           FB.NOTE<1,-1> = TCH.NOTE2 : " -- Changed Stack # from ":BILL.STATUS:" to ":NEW.BILL.STATUS
                        END
                        GOSUB SEND.THRESHOLD.EMAIL
                        BILL.STATUS = NEW.BILL.STATUS
                     END
                  END
               END
            END
         END

         GOSUB 8100
         GOSUB 8200

*NPR028 Start changes
VERIFY.BOL:

         IF M.BOL.REC = '' THEN GOTO VERIFY.BOL.END

         IF DO.BOL.POP THEN
            IF CLIENT.REC(254) NE "" THEN
               BLOUT = ''
               CL.BOL.POP.VER = CLIENT.REC(254)
               CL.BOL.POP.VER<2> = CLIENT.REC(255)
               CL.BOL.POP.VER<3> = CLIENT.REC(256)
               TEMP.REC<75> = WEIGHTS    ; * NPR028 was not being updated earlier in pgm.
               CALL FB.SETUP.BOL.POP.VER(M.BOL.REC,TEMP.REC,BLOUT,CL.BOL.POP.VER,"V")      ; * Verify data
               IF BLOUT NE '' THEN
*               CRT @(0,21):"[YES] I understand that Data entered does not match data from BOL "
                  CRT @(0,21):"Update Bill even if BOL data does not verify [YES]. [NO] "
                  HELP="X=Change. EX=Exit. [YES]=Continue."
                  CALL GEN.IN(0,22,'Enter selection please. ---','',Q,0,3,'','',0,-3,22,1,QI,HELP,0,23)
                  QI=OCONV(QI,'MCU')
                  BEGIN CASE
                     CASE QI='X'
                        CRT @(0,21):@(-3):
                        GOTO 4900
                     CASE QI='EX'
                        STOP
                     CASE QI='YES'
                        NULL
                     CASE QI='NO'
***                     M.BOL.REC = ""
***                     ID.BOL.CRX = ""
***                     ID.BOL.CRX2 = ""
                        GOSUB 8100
                        GOSUB 8200
                        CHANGE.FLAG=1
                        GO 300
                     CASE 1
                        CALL ELINE('Invalid entry. Must be [X], [EX], [NO], or [YES].')
                        GOTO VERIFY.BOL
                  END CASE
                  CRT @(0,21):@(-3):
               END
            END
         END

VERIFY.BOL.END:

         GOSUB 8100
         GOSUB 8200

*NPR028 End Changes

* NPR16 - End changes

         BEGIN CASE
            CASE VERSION > 0
               TEXT.LINE=''
            CASE BILL.STATUS='1'
               TEXT.LINE='Stack 1V - This bill does NOT need to go to an auditor.'         ; * JMK24
            CASE BILL.STATUS='2'
               TEXT.LINE='Stack 2 - This bill was audited but class needs to be verified by audit.'
            CASE BILL.STATUS='3'
               TEXT.LINE='Stack 3 - This bill audited. But the amount did not match.'
            CASE BILL.STATUS='4'
               TEXT.LINE='Stack 3 - This bill did not audit. An auditor needs to approve it.'
            CASE 1
               IF VERSION='0' THEN
                  TEXT.LINE='This bill did not have a status. CALL PROGRAMMING.'
               END
         END CASE
         QV.VALID=0                      ; * JMK24
         IF BILL.STATUS=1 THEN           ; * JMK24
            QV.ID=CLIENT.ID'R%5':'*':CARRIER.ID'R%5'         ; * JMK24
            READ QV.REC FROM F.QV,QV.ID ELSE       ; * JMK24
               QV.ID='00000*':CARRIER.ID'R%5'      ; * JMK24
               READ QV.REC FROM F.QV,QV.ID ELSE QV.REC='N'   ; * JMK24
            END                          ; * JMK24
            QV.FLG=QV.REC<1>             ; * JMK24
            IF QV.FLG='Y' THEN           ; * JMK24
               IF USER.TYPE='A' THEN QV.FLG='N'    ; * JMK24
            END                          ; * JMK24
            IF QV.FLG='Y' THEN           ; * JMK24
               IF REJECT.FLAG='R' THEN QV.FLG='N'  ; * JMK24
            END                          ; * JMK24
            IF QV.FLG='Y' THEN           ; * JMK24
               IF VERSION#'0' THEN QV.FLG='N'      ; * JMK24
            END                          ; * JMK24
            IF QV.FLG='Y' THEN           ; * JMK24
               TEST=CLIENT.QV            ; * JMK24
               LOCATE('P',TEST,1;PPOS) THEN        ; * JMK24
                  DEL TEST<1,PPOS>       ; * JMK24
               END                       ; * JMK24
               LOCATE('A',TEST,1;PPOS) THEN        ; * JMK24
                  DEL TEST<1,PPOS>       ; * JMK24
               END                       ; * JMK24
               IF TEST#'' THEN QV.FLG='N'          ; * JMK24
            END                          ; * JMK24
            IF CLIENT.REC(92)='00002' THEN QV.FLG='N'        ; * BOH02
            IF QV.FLG='Y' THEN           ; * JMK24
               GOSUB QUICK.VERIFY        ; * JMK24
               IF QV.VALID=0 THEN        ; * JMK24
                  GOSUB 8100             ; * JMK24
                  GOSUB 8200             ; * JMK24
                  CHANGE.FLAG=1          ; * JMK24
                  GO 300                 ; * JMK24
               END
               TEXT.LINE='Stack 1G - This bill does NOT need to go to an auditor or verify.'         ; * JMK24
            END                          ; * JMK24
         END                             ; * JMK24
         CRT @(0,21):TEXT.LINE:@(-3)
      END
      IF USER.TYPE#'A' THEN
         ALCON.REJECT=0
         IF CLIENT.ID='10356' AND NOT(BEEN.THRU) THEN
            BEEN.THRU=1
            BEGIN CASE
               CASE CARRIER.MODE='2' OR CARRIER.MODE='12'
                  IF CARRIER.ID#'00992' AND CARRIER.ID#'00015' AND CARRIER.ID#'00143' AND CARRIER.ID#'00365' THEN
*DF                     IF ACTUAL.CHG > 75000 THEN
                     IF ACTUAL.CHG > 100000 THEN
*
* Change the amount from 750.00 to 1000.00 per ticket 091112. DRF 09/17/09
*
                        ALCON.REJECT=1
                     END
                  END
               CASE CARRIER.MODE='1'
*DF                  IF ACTUAL.CHG > 150000 THEN
                  IF ACTUAL.CHG > 100000 THEN
*
* Change the amount from 1500.00 to 1000.00 per ticket 091112. DRF 09/17/09
*
                     ALCON.REJECT=1
                  END
               CASE CARRIER.MODE='6'
                  IF ACTUAL.CHG > 300000 THEN
                     ALCON.REJECT=1
                  END
            END CASE
         END
         IF ALCON.REJECT THEN
*           HELP = '[R]=Reject [Y]=Update [N]=No Update [X]=Back [EX]=Exit' ; * JMK111
            HELP = '[R]=Rej [Y]=Upd [NU]=No Upd [N]=Note [X]=Back [EX]=Exit'     ; * JMK111
            CALL GEN.IN(0,22,'Update? R ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
         END ELSE
*DF            IF VC.REJECT THEN            ; * JMK28
*DF            IF USER='BSMITH' AND CLIENT.ID='01365' THEN
*DF               VC.REJECT=1
*DF            END
*           IF VC.REJECT AND REJECT.FLAG#'R' THEN  ; * JMK28 ; * JMK133
            BOL.REJECT=0
            IF CLIENT.ID='01599' AND BOL[1,1]='9' AND BOL#'99' THEN
               BOL.REJECT=1
            END
            IF (VC.REJECT OR WT.REJECT OR BOL.REJECT) AND REJECT.FLAG#'R' THEN   ; * JMK28 ; * JMK133
*              HELP = '[R]=Reject [N]=No Update [X]=Back [EX]=Exit'    ; * JMK28 ; * JMK111
               HELP = '[R]=Rej [NU]=No Upd [N]=Note [X]=Back [EX]=Exit'          ; * JMK28 ; * JMK111
               CALL GEN.IN(0,22,'Update? R ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)        ; * JMK28
               IF QI='' THEN QI='R'
            END ELSE                     ; * JMK28
*OH            HELP = '[Y]=Update [N]=No Update [X]=Back [EX]=Exit'
*              HELP = '[R]=Reject [Y]=Update [N]=No Update [X]=Back [EX]=Exit' ; * JMK111
               HELP = '[R]=Rej [Y]=Upd [NU]=No Upd [N]=Note [X]=Back [EX]=Exit'  ; * JMK111
               CALL GEN.IN(0,22,'Update? Y ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
               IF QI='' THEN QI='Y'
            END                          ; * JMK28
         END
      END ELSE
         REJECTABLE = NOT(REJECT.FLAG = 'R' AND CHANGE.FLAG AND OLD.PRO.REC<1>='')
         IF REJECT.FLAG='R' THEN
            HELP=''
         END ELSE
            HELP='[1]=[A]pprove '
         END
*DF        IF OLD.PRO.REC<39>='2' THEN
         HELP=HELP:'[2]=[C]hange '
*DF        END
*        HELP=HELP:'[U]pdate but not Approve [N]o Update [R]eject' ; * JMK111
         HELP=HELP:'[U]pd but not Approve [NU]o Upd [N]ote [R]ej'      ; * JMK111
         CALL GEN.IN(0,22,'Approve for Payment? - ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
      END
      CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      IF USER.TYPE#'A' THEN
         IF VC.REJECT AND QI='' THEN QI='R'        ; * JMK28
         IF ALCON.REJECT THEN
            IF QI='' THEN QI='R'
         END ELSE
            IF QI='' THEN QI='Y'
         END
*DF         IF VC.REJECT THEN QI='R'        ; * JMK28
      END
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI = 'EX'
            STOP
*         CASE QI = 'R'
*DF          CASE QI = 'R' AND REJECTABLE AND NOT(CHANGE.FLAG)
         CASE QI = 'R' AND REJECTABLE
            IF NOT(REJECTION.ALTERED) THEN GOSUB INIT.REJECT.INFO
            RVIN='' ; RVOUT=''
            RVIN<1> = 'E'
            RVIN<2> = CARRIER.ID
            RVIN<3> = CLIENT.ID
            RVIN<4> = FIELD(PRO.ID,'*',2)
*DF             RVIN<5> = REJECT.FLAG
            RVIN<5> = 'R'
            RVIN<6> = BILL.DATE
            RVIN<7> = ACTUAL.CHG         ; * CARRIER.CHG
            RVIN<8> = REJ.TYPE
            CALL FB.2.1.REJECT.KED(RVIN, RVOUT, REJECT.REASONS, MAILING.ADDR)
            REJECT.FLAG = RVOUT<2>
            MULTI.PRO.ID = RVOUT<4>
            NUM.MULTI.PROS = DCOUNT(MULTI.PRO.ID<1>,@VM)
            MULTI.PRO.DATE = RVOUT<6>
            MULTI.PRO.CHG = RVOUT<7>
            MULTI.PRO.REJ = RVOUT<8>
            IF RVOUT<9>='Y' THEN
               PROC.DATE=''
               IF DATE() LE CLIENT.REC(82) THEN
                  BILL.DATE=CLIENT.REC(82)+1
               END ELSE
                  BILL.DATE=DATE()
               END
            END
            BILL.DATE = MULTI.PRO.DATE<1,1>
            ACTUAL.CHG = MULTI.PRO.CHG<1,1>
*DF             CARRIER.CHG = MULTI.PRO.CHG<1,1>
            IF CARRIER.CHG+0 = 0 THEN CARRIER.CHG=MULTI.PRO.CHG<1,1>
            REJ.TYPE = MULTI.PRO.REJ<1,1>
            GOSUB 8100                   ; * Redraw Screen Fields
            GOSUB 8200                   ; * Redraw Screen Data
            BEGIN CASE
               CASE RVOUT<1>='EX'
                  STOP
               CASE RVOUT<1>='X' OR REJECT.FLAG = ''
                  GOTO 400
            END CASE
            REJECTION.ALTERED = RVOUT<3>
            GOTO 4900

         CASE QI = 'N'                   ; * JMK111
*           MASK='Note - ':FB.NOTE       ; * JMK111
*           HELP='Enter Note or cr to accept.'     ; * JMK111
*           CALL GEN.IN(0,22,MASK,'',Q,0,70,'','',2,7,22,1,QI,HELP,0,23)         ; * JMK111
*           QI = OCONV(QI,'MCU')         ; * JMK111
*           BEGIN CASE                   ; * JMK111
*              CASE QI = 'EX'            ; * JMK111
*                 STOP                   ; * JMK111
*              CASE QI = ''              ; * JMK111
*                 Q = FB.NOTE            ; * JMK111
*              CASE 1
*                 FB.NOTE=Q              ; * JMK111
*           END CASE                     ; * JMK111
            CALL FB.2.1.NOTES(FB.NOTE,QI,0)        ; * JMK119
            GOSUB 8100                   ; * JMK119
            GOSUB 8200                   ; * JMK119
            GOTO 4900                    ; * JMK111

         CASE QI = 'NU'                  ; * JMK111
            CHANGE.FLAG = 0
            GOSUB 8100                   ; * Display screen
            GOTO 300                     ; * ENTER PRO

         CASE QI = 'X'
            IF VERSION GT 0 THEN
               CALL ELINE('Back up not allowed on duplicate posting.')
               CC+=1 ; GOSUB PRINT.CC
               GOTO 4900                 ; * UPDATE ACTION
            END
            BACK.FLAG = 1
            GOTO ENTER.DUTY

*DF         CASE (QI='C' OR QI='2') AND OLD.PRO.REC<39>='2'
         CASE (QI='C' OR QI='2')
            IF BILL.STATUS='2' THEN GOTO 390
*DF        IF BILL.STATUS='4' THEN AUDIT='S'
            AUDIT='S'
*DF           IF BILL.STATUS='4' THEN
*DF             IF CARRIER.AUDIT THEN GOTO 390
*DF             IF LTL.CAR & CLIENT.AUDIT & CL.LOGISTICS='Y' & CL.AUTO.MISROUTE='Y' THEN GOTO 390
*DF             LPRO=LEN(PRO)
*DF             IF PRO[LPRO-1,2]='AD' OR PRO[LPRO-1,2]='BD' THEN GOTO 430
*DF             IF SU.FLAG AND CHANGE.FLAG THEN GOTO 430
*DF             GOTO 430
*DF           END ELSE
            GOTO 430
*DF           END

         CASE (QI='Y' AND USER.TYPE#'A') OR (QI='U' AND USER.TYPE='A') OR (QI='A' AND REJECT.FLAG # 'R' AND USER.TYPE='A') OR (QI='1' AND REJECT.FLAG # 'R' AND USER.TYPE='A')
            IF MISSING.DATA#'' AND NOT(REJECT.FLAG) THEN
               CALL ELINE('Missing ':MISSING.DATA<1,1>:' ':MISSING.DATA<1,2>:' ':MISSING.DATA<1,3>:' you should reject bill until this information comes in.')
               GOTO 4900
            END
            IF DBCTRL<14>='N' AND (NOT(REJECT.FLAG) OR CLIENT.ID#'00000') THEN
               CALL ELINE('Can only update rejected bills for Client 00000.')
               GOTO 4900
            END
            IF REJECT.FLAG#'R' AND VERSION=0 THEN
               IF TEMP.CLIENT.ID#'00857' THEN
                  IF FLAT.RATE AND MISROUTE.ARRAY<1>#'' THEN
                     CALL ELINE('Flat rate should not have a misroute')
                     GOTO 4900
                  END
*DF                  IF VAR.ARR<3>+0#0 AND MISROUTE.ARRAY<1>#'' THEN
*DF                     CALL ELINE('Logistics should not have a misroute')
*DF                     GOTO 4900
*DF                  END
*
* Removed because we can now have logistics and misroute. - DRF 04/14/09
               END
            END
*DF            IF USER='BSMITH' AND (NOT(REJECT.FLAG) OR CLIENT.ID#'01365') THEN
*DF               CALL ELINE('Can only update rejected bills for ATK.')
*DF               GOTO 4900
*DF            END
            IF USER='DAVID' THEN CALL ELINE('PRESS BREAK - AT VENDOR CHECK')
            IF CARRIER.MODE='10' AND ACTUAL.CHG > 50000 AND USER.TYPE#'A' AND CARRIER.ID#'14768' THEN
               IF USER='MARY' OR USER='MYRA' OR USER='DAVID' OR USER='SMICHALIK' THEN
CHECK.AMT.VERIFICATION: ***
                  CRT @(0,21):"[YES] I have checked the amount and it is only for freight charges!"
                  HELP="X=Change. EX=Exit. [YES]=Continue."
                  CALL GEN.IN(0,22,'Enter selection please. ---','',Q,0,3,'','',0,-3,22,1,QI,HELP,0,23)
                  QI=OCONV(QI,'MCU')
                  BEGIN CASE
                     CASE QI='X'
                        CRT @(0,21):@(-3):
                        GOTO 4900
                     CASE QI='EX'
                        STOP
                     CASE QI='YES'
                        NULL
                     CASE 1
                        CALL ELINE('Invalid entry. Must be [X], [EX], or [YES].')
                        GOTO CHECK.AMT.VERIFICATION
                  END CASE
                  CRT @(0,21):@(-3):
               END ELSE
                  CALL ELINE('Error. Please take bill to Myra or Mary')
                  GOTO 4900
               END
            END
            IF CL.DIV.FLAG='Y' AND REJECT.FLAG#'R' THEN
               IF DIVISION='' THEN
                  CALL ELINE('No Division found. Please enter a Division. Update Refused')
                  GOTO 4900
               END
            END
            IF ((ORIG.ZIP='' AND CL.ORIG.FLAG='Y') OR (DEST.ZIP='' AND CL.DEST.FLAG='Y')) AND REJECT.FLAG#'R' THEN
               CALL ELINE('Orig zip is: ':ORIG.ZIP:' and dest zip is: ':DEST.ZIP:' Update refused')
               TEMP.REC = ''
               TEMP.REC<1> = BILL.DATE
               TEMP.REC<2> = IN.OUT
               TEMP.REC<3> = ORIG.ZIP
               TEMP.REC<4> = DEST.ZIP
               TEMP.REC<5> = EXP.CODE
               TEMP.REC<6> = WEIGHT+0
               TEMP.REC<7> = CARRIER.CHG+0
               TEMP.REC<8> = ACTUAL.CHG+0
               TEMP.REC<9> = DIVISION
               TEMP.REC<10> = VAR.ARR<1>+0
               TEMP.REC<11> = VAR.ARR<2>+0
               TEMP.REC<12> = VAR.ARR<3>+0
               TEMP.REC<16> = BOL
               TEMP.REC<205> = BOL.DIST  ; * JMK84
               TEMP.REC<17> = VC.ID
               TEMP.REC<19> = MILEAGE+0
               CARRIER.MODE.WGT = CARRIER.REC<70>
               CARRIER.MODE.BY.WGT = CARRIER.REC<71>
               LOCATE WEIGHT IN CARRIER.MODE.WGT<1> BY "AR" SETTING POS ELSE NULL
               T.MODE.BY.WGT = OCONV(CARRIER.MODE.BY.WGT<1,POS>,'MCU')
               LTL.CAR=T.MODE.BY.WGT=1   ; * JMK187
               TL.CAR=T.MODE.BY.WGT=6    ; * JMK187
               AIR.CAR=T.MODE.BY.WGT=12  ; * JMK187
               TEMP.REC<21> = T.MODE.BY.WGT
               TEMP.REC<25> = ORIG.STATE
               TEMP.REC<26> = DEST.STATE
               TEMP.REC<27> = ORIG.CITY
               TEMP.REC<28> = DEST.CITY
               TEMP.REC<68> = BILL.STATUS
               MISC.CHG.POS=DCOUNT(CLASSES<1>,@VM)           ; * Find out how many
               FOR MISC.CHG.CNT=1 TO MISC.CHG.POS
                  TEMP.REC<70,MISC.CHG.CNT>='FRT'
               NEXT MISC.CHG.CNT
               IF MISC.CHG.CODES#'' THEN
                  TEMP.REC<70,MISC.CHG.POS+1>=MISC.CHG.CODES
               END
               TEMP.REC<74> = CLASSES
               TEMP.REC<119> = FLAT.RATE
               FBVIN=''
               FBVIN<1>=PROG.NAME
               FBVIN<2>=PROG.DESC
               FBVIN<3>=PACK.NAME
               FBVIN<4>=CO.NAME
               FBVIN<5>=OCONV(TIME(),'MTH'):' ':OCONV(DATE(),'D2/')
               FBVIN<6>=CLIENT.ID
               FBVIN<7>=CARRIER.ID
               FBVIN<8>=PRO.ID
               FBVOUT=''
               CALL GET.FB.INFO(FBVIN,FBVOUT,CLIENT.ITM,CARRIER.REC,TEMP.REC)
               NTEXT=FBVOUT
               NTEXT<1,-1>=' '
               MVIN=''
               MVIN<1>='MMcKay@afs.net'
***               MVIN<2>='OHolman@afs.net'
               MVIN<4>='AFS'
               SUBJ=USER:' entered a bill without an orig or dest zip.'
               MVIN<5>=SUBJ
               MVIN<6>=NTEXT
               CALL SENDMAIL(MVIN,MVOUT)
               GOTO 4900
            END
            IF PRO[LEN(PRO)-1,2] = 'BD' OR PRO[LEN(PRO)-1,2] = 'AD' ELSE
               IF USER.TYPE='A' AND ACTUAL.CHG > PRO.REC<98> AND REJECT.FLAG#'R' THEN
                  CALL ELINE('Actual amt must be equal or less than the amount keyed by freight payment')
                  GOTO 4900
               END
            END
            IF PRO[LEN(PRO)-1,2] = 'BD' OR PRO[LEN(PRO)-1,2] = 'AD' THEN         ; * JMK111
               TEST.NOTE=1               ; * JMK130
*              IF CARRIER.ID='00015' AND REJECT.FLAG='R' THEN          ; * JMK130 ; * JMK131
               IF CARRIER.ID='00015' OR REJECT.FLAG='R' THEN           ; * JMK130 ; * JMK131
                  TEST.NOTE=0            ; * JMK130
               END                       ; * JMK130
               IF CLIENT.ID='10356' AND CARRIER.ID='01682' AND DATE()<=ICONV('12-01-06','D') AND PRO[LEN(PRO)-1,2]='AD' THEN       ; * JMK130
                  TEST.NOTE=0            ; * JMK130
               END                       ; * JMK130
               IF TEST.NOTE THEN         ; * JMK130
*              IF USER.TYPE='A' AND LEN(TRIM(FB.NOTE))<5 THEN          ; * JMK111 ; * JMK114
*              IF USER.TYPE='A' AND LEN(TRIM(FB.NOTE))<5 AND CARRIER.ID#'00015' THEN       ; * JMK111 ; * JMK114 ; * JMK120
*              IF USER.TYPE='A' AND LEN(TRIM(FB.NOTE))<5 AND CARRIER.ID#'00015' AND REJECT.FLAG#'R' THEN       ; * JMK111 ; * JMK114 ; * JMK120 ; * JMK130
                  IF USER.TYPE='A' THEN  ; * JMK130
                     IF LEN(TRIM(FB.NOTE))<5 THEN  ; * JMK130
                        CALL ELINE('You must enter a valid reason for this bill')          ; * JMK111
                        GOTO 4900        ; * JMK111
*              END                       ; * JMK111 ; * JMK130
                     END ELSE            ; * JMK111 ; * JMK130
*              IF USER.TYPE='A' AND LEN(TRIM(FB.NOTE))>=5 THEN         ; * JMK111 ; * JMK114
*              IF USER.TYPE='A' AND LEN(TRIM(FB.NOTE))>=5 AND CARRIER.ID#'00015' THEN      ; * JMK111 ; * JMK114 ; * JMK120
*              IF USER.TYPE='A' AND LEN(TRIM(FB.NOTE))>=5 AND CARRIER.ID#'00015' AND REJECT.FLAG#'R' THEN      ; * JMK111 ; * JMK114 ; * JMK120 ; * JMK130
                        FBVIN=''         ; * JMK111
                        FBVIN<1>=PROG.NAME         ; * JMK111
                        FBVIN<2>=PROG.DESC         ; * JMK111
                        FBVIN<3>=PACK.NAME         ; * JMK111
                        FBVIN<4>=CO.NAME           ; * JMK111
                        FBVIN<5>=OCONV(TIME(),'MTH'):' ':OCONV(DATE(),'D2/')     ; * JMK111
                        FBVIN<6>=CLIENT.ID         ; * JMK111
                        FBVIN<7>=CARRIER.ID        ; * JMK111
                        FBVIN<8>=PRO.ID  ; * JMK111
                        FBVOUT=''        ; * JMK111
                        CALL GET.FB.INFO(FBVIN,FBVOUT,CLIENT.ITM,CARRIER.REC,PRO.REC)      ; * JMK111
                        NTEXT=FBVOUT     ; * JMK111
                        NTEXT<1,-1>=' '  ; * JMK111
                        BEGIN CASE       ; * JMK111
                           CASE PRO[LEN(PRO)-1,2]='AD'       ; * JMK111
                              NTEXT<1,-1>='AD Note :':FB.NOTE          ; * JMK111
                              SUBJ='Additional Billing Reason for pro ':PRO.ID   ; * JMK111
                           CASE PRO[LEN(PRO)-1,2]='BD'       ; * JMK111
                              NTEXT<1,-1>='BD Note :':FB.NOTE          ; * JMK111
                              SUBJ='Balance Due Billing Reason for pro ':PRO.ID  ; * JMK111
                           CASE 1        ; * JMK111
                              NTEXT<1,-1>='Note :':FB.NOTE   ; * JMK111
                              SUBJ='FB Note for pro ':PRO.ID           ; * JMK111
                        END CASE         ; * JMK111
                        MVIN=''          ; * JMK111
                        MVIN<1,-1>='BJeppson@afs.net'        ; * JMK111
                        IF DATE() < 14117 THEN     ; * JMK111
***                           MVIN<1,-1>='OHolman@afs.net'      ; * JMK111
                        END              ; * JMK111
*                 MVIN<3,-1>='MKerbow@afs.net'      ; * JMK111
                        MVIN<4>='AFS'    ; * JMK111
                        MVIN<5>=SUBJ     ; * JMK111
                        MVIN<6>=NTEXT    ; * JMK111
                        CALL SENDMAIL(MVIN,MVOUT)  ; * JMK111
                     END                 ; * JMK111
                  END                    ; * JMK130
               END                       ; * JMK111
            END                          ; * JMK130
            IF ACTUAL.CHG+0>150000 AND TRANS.MODE=1 THEN     ; * JMK141
               NO.CORE.FLAG=0            ; * JMK141
               IF PRO.REC<197>#'Y' OR MISROUTE.AMOUNT+0#0 THEN         ; * JMK141
                  NVAL=DCOUNT(CLASSES,@VM)         ; * JMK141
                  FOR VAL=1 TO NVAL UNTIL NO.CORE.FLAG       ; * JMK141
                     CLS=CLASSES<1,VAL>  ; * JMK141
                     IF CLS < 100 AND ACTUAL.CHG+0>150000 THEN NO.CORE.FLAG=1    ; * JMK141
                     IF CLS >= 100 AND ACTUAL.CHG+0>200000 THEN NO.CORE.FLAG=1   ; * JMK141
                  NEXT VAL               ; * JMK141
                  IF NVAL=0 THEN NO.CORE.FLAG=1    ; * JMK141
                  IF (USER.TYPE='A') AND NO.CORE.FLAG AND PRO.REC<21>='1' AND CLIENT.REC(93)='Y' AND REJECT.FLAG#'R' THEN          ; * JMK141 DRF03
NO.CORE.CONFIRMATION: ***                 ; * JMK141
                     CRT CHAR(7)         ; * JMK141
                     HELP='Press Enter for confirmation or X-back'     ; * JMK141
                     CALL GEN.IN(0,22,'Non-core limits. Enter Passwrd or <cr> to Send password to Brian ******','',Z,0,6,'','',2,-6,22,0,ZI,HELP,0,23)           ; * JMK141
                     IF OCONV(ZI,'MCU')='X' THEN   ; * JMK141
                        CRT @(0,22):@(-4):         ; * JMK141
                        GOTO 1800        ; * JMK141
                     END                 ; * JMK141
                     PASS.WORD=OCONV(PRO,'MCN')    ; * JMK141
                     PASS.WORD=PASS.WORD*19        ; * JMK141
                     PASS.WORD=PASS.WORD[LEN(PASS.WORD)-5,6]           ; * JMK141
                     IF TRIM(ZI)#'' AND ZI # PASS.WORD THEN  ; * JMK141
                        CALL ELINE('Incorrect Password.')    ; * JMK141
                        GOTO NO.CORE.CONFIRMATION  ; * JMK141
                     END                 ; * JMK141
*                                        ; * JMK141
* No Core Limits actual charge has to have a supervisor approval       ; * JMK141
*                                        ; * JMK141
                     IF TRIM(ZI)='' THEN           ; * JMK141
                        MVIN=''          ; * JMK141
                        SUBJ='Non-Core or Misroute Limit exceeded for ':PRO.ID   ; * JMK141
                        FBVIN=''         ; * JMK141
                        FBVIN<1>=PROG.NAME         ; * JMK141
                        FBVIN<2>=PROG.DESC         ; * JMK141
                        FBVIN<3>=PACK.NAME         ; * JMK141
                        FBVIN<4>=CO.NAME           ; * JMK141
                        FBVIN<5>=OCONV(TIME(),'MTH'):' ':OCONV(DATE(),'D2/')     ; * JMK141
                        FBVIN<6>=CLIENT.ID         ; * JMK141
                        FBVIN<7>=CARRIER.ID        ; * JMK141
                        FBVIN<8>=PRO.ID  ; * JMK141
                        FBVOUT=''        ; * JMK141
                        CALL GET.FB.INFO(FBVIN,FBVOUT,CLIENT.ITM,CARRIER.REC,PRO.REC)      ; * JMK141
                        TEXT=FBVOUT      ; * JMK141
                        TEXT<1,-1>=' '   ; * JMK141
                        TEXT<1,-1>='The PASSWORD to allow entry is: ':PASS.WORD  ; * JMK141
                        MVIN=''          ; * JMK141
                        MVIN<1>='BJeppson@afs.net'           ; * JMK141
*                       MVIN<3,-1>='OHolman@afs.net'         ; * JMK141
*                       MVIN<3,-1>='MKerbow@afs.net'         ; * JMK141
                        MVIN<4>='AFS'    ; * JMK141
                        MVIN<5>=SUBJ     ; * JMK141
                        MVIN<6>=TEXT     ; * JMK141
                        CALL SENDMAIL(MVIN,MVOUT)  ; * JMK141
*                       GOTO 300         ; * JMK141 ; * JMK146
                        GOTO NO.CORE.CONFIRMATION  ; * JMK146
                     END                 ; * JMK141
                  END                    ; * JMK141
               END                       ; * JMK141
            END                          ; * JMK141

            IF CL.EXP.FLAG='Y' AND REJECT.FLAG#'R' THEN
               IF EXP.CODE='' THEN
                  CALL ELINE('No Expense Code found. Please enter a Expense Code. Update Refused')
                  GOTO 4900
               END
            END

         CASE 1
            CALL ELINE('Invalid entry. Please try again.')
            GOTO 4900
      END CASE
      IF (CL.VAR.FLAG='Y' AND REJECT.FLAG#'R') OR (CL.VAR.FLAG='A' AND REJECT.FLAG#'R') THEN
         VAR.TIMES=DCOUNT(VAR.REC<2>,@VM)
         TOT.LOG.AMT=0
         FOR VAR.CNT=1 TO VAR.TIMES
            TOT.LOG.AMT+=VAR.REC<2,VAR.CNT>
         NEXT VAR.CNT
*df      IF (CL.VEND.FLAG = 'Y' ! CL.CUST.FLAG = 'Y') AND VC.ID = '' THEN
         IF ((CL.VEND.FLAG = 'Y' AND IN.OUT='I') OR (CL.CUST.FLAG = 'Y' AND IN.OUT='O')) AND VC.ID='' AND VERSION=0 THEN
            SUBJ='-s"Blank Vendor Customer"'
            TEXT=USER:' ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
            TEXT<-1>=CLIENT.ID:' ':CLIENT.NAME
            TEXT<-1>='PRO ID: ':PRO.ID
            TEXT<-1>='Vendor Customer ID is Blank'
            TEXT<-1>='Update to File Refused!'
            TEXT<-1>='User returned to Customer Vendor Routine'
*            EXECUTE 'mail ':SUBJ:' TAMI',//IN. < TEXT
            CALL ELINE('Vendor Customer is blank! Update Refused! Renter/Update Customer Vendor!')
            CC+=1 ; GOSUB PRINT.CC
            GOTO 1400
         END

         IF TOT.LOG.AMT+0 # VAR.ARR<3>+0 THEN
            IF VAR.ARR<3>+0=0 THEN
               VAR.REC=''                ; * Set All Logistics Variance Info to ''
            END ELSE
               SUBJ='-s"Logistics Distribution Error"'
               TEXT=USER:' ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
               TEXT<-1>=CLIENT.ID:' ':CLIENT.NAME
               TEXT<-1>='PRO ID: ':PRO.ID
               TEXT<-1>='Logistics Variance <12> is ':VAR.ARR<3>'R26,'
               TEXT<-1>='Logistics Distribution <52> is ':TOT.LOG.AMT'R26,'
               TEXT<-1>='Update to File Refused!'
*            EXECUTE 'mail ':SUBJ:' owen',//IN. < TEXT
               CALL ELINE('Logistics Variance Distribution Error! Update Refused! Renter/Update Bill')
               CC+=1 ; GOSUB PRINT.CC
               STOP
            END
         END
      END
*      IF CL.EXP.DIST.FLAG MATCHES 'Y':@VM:'O' THEN
*      IF CL.EXP.FLAG = 'Y' AND REJECT.FLAG#'R' THEN
      IF CHECK.EXP.CODES AND REJECT.FLAG#'R' THEN
         EXP.TIMES=DCOUNT(DTAB<3>,@VM)
         TOT.EXP.AMT=0
         NO.CODE=0
         FOR EXP.CNT=1 TO EXP.TIMES
            TOT.EXP.AMT+=DTAB<3,EXP.CNT>
            IF DTAB<1,EXP.CNT>='' THEN NO.CODE=1
         NEXT EXP.CNT
         IF CLIENT.ID='00574' AND IN.OUT='O' THEN
            IF DTAB<1,EXP.TIMES>#EXP.CODE THEN NO.CODE=1
         END ELSE
            IF DTAB<1,1>#EXP.CODE THEN NO.CODE=1   ; * Force Error
         END
         IF TOT.EXP.AMT+0 # ACTUAL.CHG+0 OR NO.CODE THEN
            MVIN=''
            SUBJ='Expense Distribution Error'
            TEXT=USER:' ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
            TEXT<1,-1>=CLIENT.ID:' ':CLIENT.NAME
            TEXT<1,-1>='PRO ID: ':PRO.ID
            TEXT<1,-1>='Expense Variance <33> is ':TOT.EXP.AMT'R26,'
            TEXT<1,-1>='Actual Bill Charge <8> is ':ACTUAL.CHG'R26,'
            IF NO.CODE THEN TEXT<1,-1>='MV Expense Code missing <31>'
            TEXT<1,-1>='Update to File Refused!'
            TEXT<1,-1>='User returned to Expense Code Prompt'
            TEXT<1,-1>='Expense Distribution Reset to <5> & <8>'
            TEXT<1,-1>=EXP.CODE
            TEXT<1,-1>=DTAB<1>
            MVIN=''
            MVIN<1>='David@afs.net'
            MVIN<4>='AFS'
            MVIN<5>=SUBJ
            MVIN<6>=TEXT
            CALL SENDMAIL(MVIN,MVOUT)
            SUBJ='-s"Expense Distribution Error"'
            TEXT=USER:' ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
            TEXT<-1>=CLIENT.ID:' ':CLIENT.NAME
            TEXT<-1>='PRO ID: ':PRO.ID
            TEXT<-1>='Expense Variance <33> is ':TOT.EXP.AMT'R26,'
            TEXT<-1>='Actual Bill Charge <8> is ':ACTUAL.CHG'R26,'
            IF NO.CODE THEN TEXT<-1>='MV Expense Code missing <31>'
            TEXT<-1>='Update to File Refused!'
            TEXT<-1>='User returned to Expense Code Prompt'
            TEXT<-1>='Expense Distribution Reset to <5> & <8>'
*          EXECUTE 'mail ':SUBJ:' owen',//IN. < TEXT
            CALL ELINE('Expense Distribution Error! You will be sent to Expense Code Entry!')
            CC+=1 ; GOSUB PRINT.CC
            DTAB=EXP.CODE ; DTAB<3>=ACTUAL.CHG
            GOTO 1295                    ; * Expense Code Entry
         END
      END
      IF REJECT.FLAG#'R' THEN
*DF       IF BAL.DUE THEN ADD.ATT=3 ELSE ADD.ATT=0
         ADD.ATT=0
         IF ACTUAL.CHG-CARRIER.CHG+VAR.ARR<1+ADD.ATT>+VAR.ARR<2+ADD.ATT>+VAR.ARR<3+ADD.ATT> # 0 THEN
            SUBJ='-s"Variance Error"'
            TEXT=USER:' ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
            TEXT<-1>=CLIENT.ID:' ':CLIENT.NAME
            TEXT<-1>='PRO ID: ':PRO.ID
            TEXT<-1>='Actual Charge <8> is ':ACTUAL.CHG'R26,'
            TEXT<-1>='Carrier Charge <7> is ':CARRIER.CHG'R26,'
            TEXT<-1>='Discount Variance <10> is ':VAR.ARR<1+ADD.ATT>'R26,'
            TEXT<-1>='Overcharge Variance <11> is ':VAR.ARR<2+ADD.ATT>'R26,'
            TEXT<-1>='Logistics Variance <12> is ':VAR.ARR<3+ADD.ATT>'R26,'
            TEXT<-1>='Difference is ':(ACTUAL.CHG-CARRIER.CHG+VAR.ARR<1+ADD.ATT>+VAR.ARR<2+ADD.ATT>+VAR.ARR<3+ADD.ATT>)'R26,'
            TEXT<-1>='Update to File Refused!'
*            EXECUTE 'mail ':SUBJ:' owen',//IN. < TEXT
            CALL ELINE('Difference between carrier and actual charges do not match variance. No Update')
            CC+=1 ; GOSUB PRINT.CC
            GOTO 4900
         END
*DF         IF CARRIER.CHG-ACTUAL.CHG > 999999 AND PRO.ID#'00093*281-9705686*0' THEN
*DF         IF CARRIER.CHG-ACTUAL.CHG > 999999 AND PRO.ID#'14622*MEM0142962*0' THEN
*DF         IF CARRIER.CHG-ACTUAL.CHG > 999999 AND PRO.ID#'10027*32390520*0' THEN
         IF CARRIER.CHG-ACTUAL.CHG > 999999 AND PRO.ID#'08606*E230729958*0' THEN
            SUBJ='-s"Variance Error"'
            TEXT=USER:' ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
            TEXT<-1>=CLIENT.ID:' ':CLIENT.NAME
            TEXT<-1>='PRO ID: ':PRO.ID
            TEXT<-1>='Actual Charge <8> is ':ACTUAL.CHG'R26,'
            TEXT<-1>='Carrier Charge <7> is ':CARRIER.CHG'R26,'
            TEXT<-1>='Discount Variance <10> is ':VAR.ARR<1+ADD.ATT>'R26,'
            TEXT<-1>='Overcharge Variance <11> is ':VAR.ARR<2+ADD.ATT>'R26,'
            TEXT<-1>='Logistics Variance <12> is ':VAR.ARR<3+ADD.ATT>'R26,'
            TEXT<-1>='The variance is greater than 9999.99'
            TEXT<-1>='Update to File Refused!'
*            EXECUTE 'mail ':SUBJ:' owen',//IN. < TEXT
            CALL ELINE('The variance is greater than 9999.99. No Update')
            CC+=1 ; GOSUB PRINT.CC
            GOTO 4900
         END
      END

      IF VAR.ARR<3>+0 > 0 THEN
         IF CL.CONS.PC<1,DCOUNT(CL.CONS.PC<1>,@VM)>+0=0 THEN
*
* If consulting variance and no percentages setup, refuse update
*
            IF CLIENT.ID='00784' OR CLIENT.ID='00761' OR CLIENT.ID='00057' OR CLIENT.ID='00860' OR CLIENT.ID='10225' OR CLIENT.ID'00802' OR CLIENT.ID='00932' ELSE
*          OR CLIENT.ID='00801' OR CLIENT.ID='00900' OR CLIENT.ID='00853' OR CLIENT.ID='00862' OR CLIENT.ID='00892' OR CLIENT.ID='00952' ELSE
*
* Don't Error on AMTRAN or Leisure Arts or Alloy or Alliance Wall or Leisure Arts
*
               SUBJ='-s"Consulting Not Setup"'
               TEXT=USER:' ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
               TEXT<-1>=CLIENT.ID:' ':CLIENT.NAME
               TEXT<-1>='PRO ID: ':PRO.ID
               TEXT<-1>='Consulting Entered and Not Setup on Client Maintenance'
               TEXT<-1>='Update to File Refused!'
               TEXT<-1>="User Was Returned to Update Bill Prompt"
*            EXECUTE 'mail ':SUBJ:' owen',//IN. < TEXT
               CALL ELINE('Error! Consulting Was Entered and Fees have NOT been setup! Update Refused!')
               CC+=1 ; GOSUB PRINT.CC
               GOTO 4900                 ; * Update Y/N Question
            END
         END
      END
*DF      IF USER='DAVID' THEN CALL ELINE('PRESS BREAK DAVID')
*DF      IF PRO.ID#'00013*00118001680*0' AND PRO.ID#'01786*05805506*0' AND PRO.ID#'00212*543013330*0' AND PRO.ID#'00212*543013298*0' AND PRO.ID#'00212*543010484*0' AND PRO.ID#'00212*406312183*0' AND PRO.ID#'10415*28815*0' AND PRO.ID#'00212*543025631*0' AND PRO.ID#'00103*0454662476*0' AND PRO.ID#'00212*406329476*0' AND PRO.ID#'00212*406314221*0' THEN
*df      IF NOT(CLIENT.ID='00850' AND CARRIER.ID='00017' AND USER='WPARDUE' AND DATE()=13248) THEN
      IF PRO.ID#'00041*703-5E8111205-I*0' AND PRO.ID#'00041*R60-4V2111205-O*0' AND PRO.ID#'00041*V94-711111205-O*0' AND PRO.ID#'00041*W3Y-101111205-O*0' AND PRO.ID#'00500*063078877*0' AND PRO.ID#'00124*1760041063*0' AND PRO.ID#'00748*10015809ADBD*0' AND PRO.ID#'15435*ORD617321*0' AND PRO.ID#'15435*ORD617699*0' THEN
         IF ACTUAL.CHG#0 AND PRO[LEN(PRO)-1,2]#'AD' THEN
            IF VAR.ARR<3>+0 > 5*ACTUAL.CHG THEN
               IF (USER.TYPE='A') OR (USER.TYPE#'A' AND BILL.STATUS='1') THEN
FIVE.TIMES.CONFIRMATION: ***
                  CRT CHAR(7)
                  HELP='Press Enter for confirmation or X-back'
                  CALL GEN.IN(0,22,'Log. amt exceeds lmt. Enter Passwrd, <cr> to Send passwrd to Log Mgr ******','',Z,0,6,'','',2,-6,22,0,ZI,HELP,0,23)
                  IF OCONV(ZI,'MCU')='X' THEN
                     CRT @(0,22):@(-4):
                     GOTO 1800
                  END
                  PASS.WORD=OCONV(PRO,'MCN')
                  PASS.WORD=PASS.WORD*19
                  PASS.WORD=PASS.WORD[LEN(PASS.WORD)-5,6]
                  IF TRIM(ZI)#'' AND ZI # PASS.WORD THEN
                     CALL ELINE('Incorrect Password.')
                     GOTO FIVE.TIMES.CONFIRMATION
                  END
*
* 5 Times actual charge has to have a supervisor approval
*
                  IF TRIM(ZI)='' THEN
                     MVIN=''
                     SUBJ='Logistics is 5 times the actual charge was attempted'
                     TEXT=USER:' attempted to enter a bill with a logistic amount more '
                     TEXT<1,-1>='than 5 times the freight amount'
                     TEXT<1,-1>=' '
*DF                     TEXT<1,-1>=' '
*DF                     TEXT<1,-1>='Client ':CLIENT.ID:' - ':CLIENT.NAME
*DF                     TEXT<1,-1>='Carrier ':CARRIER.ID:' - ':CARRIER.NAME
*DF                     TEXT<1,-1>='Pro# ':PRO
*DF                     TEXT<1,-1>=' '
*DF                     TEXT<1,-1>='Carrier Charge: ':ACTUAL.CHG'R26'
*DF                     TEXT<1,-1>='Logistics Amount: ':VAR.ARR<3>'R26'
*DF                     TEXT<1,-1>=' '
                     TEXT<1,-1>='The PASSWORD to allow entry is: ':PASS.WORD
                     TEXT<1,-1>=' '
                     FBVIN=''
                     FBVIN<1>=PROG.NAME
                     FBVIN<2>=PROG.DESC
                     FBVIN<3>=PACK.NAME
                     FBVIN<4>=CO.NAME
                     FBVIN<5>=OCONV(TIME(),'MTH'):' ':OCONV(DATE(),'D2/')
                     FBVIN<6>=CLIENT.ID
                     FBVIN<7>=CARRIER.ID
                     FBVIN<8>=PRO.ID
                     FBVOUT=''
                     CALL GET.FB.INFO(FBVIN,FBVOUT,CLIENT.ITM,CARRIER.REC,PRO.REC)
                     TEXT<1,-1>=FBVOUT
*DF                   TEXT<1,-1>='of ':ACTUAL.CHG'R26':' and logistics of ':VAR.ARR<3>'R26':' '
*DF                   TEXT<1,-1>='on ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
*DF                   TEXT<1,-1>='Client ':CLIENT.ID:' Carrier ':CARRIER.ID:' Pro ':PRO
*DF                   TEXT<1,-1>='PASSWORD is ':PASS.WORD
                     MVIN=''
                     MVIN<1>='BJeppson@afs.net'
***                     MVIN<1,-1>='OHolman@afs.net'
                     MVIN<4>='AFS'
                     MVIN<5>=SUBJ
                     MVIN<6>=TEXT
                     CALL SENDMAIL(MVIN,MVOUT)
                     GOTO 300
                  END
FIVE.TIMES.PASSWORD: ***
*DF                 CRT @(0,22):@(-4):
*DF                 HELP='Enter password X-back to Actual Charge or C to Cancel bill'
*DF                 ECHO OFF
*DF                 CALL GEN.IN(0,22,'Password: ***********','',Z,0,11,'','',2,-11,22,0,ZI,HELP,0,23)
*DF                 ECHO ON
*DF                 IF OCONV(ZI,'MCU')='X' THEN
*DF                    CRT @(0,22):@(-4):
*DF                    GOTO 1800
*DF                 END
*DF                 IF OCONV(ZI,'MCU')='C' THEN
*DF                    CRT @(0,22):@(-4):
*DF                    GOTO 300
*DF                 END
*DF                 IF ZI=PASS.WORD ELSE
*DF                    CALL ELINE('Invalid Password.')
*DF                    GOTO FIVE.TIMES.PASSWORD
*DF                 END
               END
            END
         END ELSE
            IF PRO.ID#'00041*703-5E8111205-I*0' AND PRO.ID#'00041*R60-4V2111205-O*0' AND PRO.ID#'00041*V94-711111205-O*0' AND PRO.ID#'00041*W3Y-101111205-O*0' AND PRO.ID#'10027*32385770AD*0' AND PRO.ID#'10027*32385760AD*0' AND PRO.ID#'00939*32395090AD*0' THEN
               IF VAR.ARR<3>+0 > 499999 THEN
                  CALL ELINE('ERROR - The Consulting cannot be over a certain limited see your supervisor')
                  GOTO 4900
               END
            END
         END
      END
      IF CLIENT.ID='00223' AND REJECT.FLAG#'R' AND VERSION=0 THEN
*                                          For Ross Martin
         VAR.ENTERED=VAR.ARR<3>+0
         VAR.COMP=(ACTUAL.CHG*.075)'R0'
         IF VAR.ENTERED # VAR.COMP AND INDEX(PRO.ID,'BD',1) LT 1 THEN
*
* Consulting variance has to equal 7.5 time the actual charge
*
            CALL ELINE('Error! Consulting is not 7.5 times the actual charge. Call programming.')
            CC+=1 ; GOSUB PRINT.CC
            LINE.OUT=''
            LINE.OUT<1,10>=123
            TEMP.ID=USER:"*":DATE():"*":TIME()
            MVIN=''
            SUBJ='Ross Martin was attempted to be updated with an incorrect consulting amount'
            TEXT=USER:' attempted to update a bill with the consulting '
            TEXT<1,-1>='amount of ':VAR.ENTERED'R26':' and the computer computed the amount'
            TEXT<1,-1>='as ':VAR.COMP'R26'
            TEXT<1,-1>='on ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
            TEXT<1,-1>='Client ':CLIENT.ID:' Carrier ':CARRIER.ID:' Pro ':PRO.ID
            MVIN=''
            MVIN<1>='Owen@afs.net':@VM:'David@afs.net'
            MVIN<2>='Wayne@afs.net'
            MVIN<4>='AFS'
            MVIN<5>=SUBJ
            MVIN<6>=TEXT
            CALL SENDMAIL(MVIN,MVOUT)
            GOTO 4900                    ; * Update Y/N Question
         END
      END
      IF (CLIENT.ID='00924' OR CLIENT.ID='01228') AND CARRIER.ID='03324' AND REJECT.FLAG#'R' AND VERSION=0 THEN
*          AArons Automotive and O&S Trucking "Milk Run"
*           ACTUAL.CHG=CARRIER.CHG
         LOOKUP.DATE=DATE()              ; * Use Today as a lookup date
         LOCATE LOOKUP.DATE IN CLIENT.REC(84)<1> BY 'AR' SETTING POS ELSE POS=POS-1
         IF POS=0 THEN POS=1
         CONS.PERC=CLIENT.REC(85)<1,POS>/100
         NEGO.PERC="30"                  ; * AFS's Portion of Actual Charges is 3.0%
         CONS.AMT=(NEGO.PERC*ACTUAL.CHG)/(CONS.PERC*10)
         CONS.AMT=CONS.AMT'R0'
         VAR.COMP=CONS.AMT
         VAR.ENTERED=VAR.ARR<3>+0
         IF VAR.ENTERED # VAR.COMP AND INDEX(PRO.ID,'BD',1) LT 1 THEN
*
* Consulting variance after applying AFS portion must equal NEGO.PERC of Actual Charge
*
            CALL ELINE('Error! Consulting is not correct. Exit program and re-enter bill.')
            CC+=1 ; GOSUB PRINT.CC
            LINE.OUT=''
            LINE.OUT<1,10>=123
            TEMP.ID=USER:"*":DATE():"*":TIME()
            MVIN=''
            SUBJ='Aarons and O&S was attempted to be updated with an incorrect consulting amount'
            TEXT=USER:' attempted to update a bill with the consulting '
            TEXT<1,-1>='amount of ':VAR.ENTERED'R26':' and the computer computed the amount'
            TEXT<1,-1>='as ':VAR.COMP'R26'
            TEXT<1,-1>='on ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
            TEXT<1,-1>='Client ':CLIENT.ID:' Carrier ':CARRIER.ID:' Pro ':PRO.ID
            MVIN=''
            MVIN<1>='Owen@afs.net':@VM:'David@afs.net'
            MVIN<2>='SMatthews@afs.net'
            MVIN<4>='AFS'
            MVIN<5>=SUBJ
            MVIN<6>=TEXT
            CALL SENDMAIL(MVIN,MVOUT)
            GOTO 4900                    ; * Update Y/N Question
         END
      END
*     IF CLIENT.ID='01211' AND REJECT.FLAG#'R' AND VERSION=0 THEN      ; * JMK29
*        CONS.AMT=ACTUAL.CHG*.020        ; * JMK29
*        CONS.AMT=CONS.AMT'R0'           ; * JMK29
*        VAR.COMP=CONS.AMT               ; * JMK29
*        VAR.ENTERED=VAR.ARR<3>+0        ; * JMK29
*        IF VAR.ENTERED # VAR.COMP AND INDEX(PRO.ID,'BD',1) LT 1 THEN  ; * JMK29
*           CALL ELINE('Error! Consulting is not correct. Exit program and re-enter bill.')          ; * JMK29
*           CC+=1 ; GOSUB PRINT.CC       ; * JMK29
*           LINE.OUT=''                  ; * JMK29
*           LINE.OUT<1,10>=123           ; * JMK29
*           TEMP.ID=USER:"*":DATE():"*":TIME()     ; * JMK29
*           MVIN=''                      ; * JMK29
*           SUBJ='Mountian Coin attempted to be updated with an incorrect consulting amount'         ; * JMK29
*           TEXT=USER:' attempted to update a bill with the consulting '         ; * JMK29
*           TEXT<1,-1>='amount of ':VAR.ENTERED'R26':' and the computer computed the amount'         ; * JMK29
*           TEXT<1,-1>='as ':VAR.COMP'R26'         ; * JMK29
*           TEXT<1,-1>='on ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')      ; * JMK29
*           TEXT<1,-1>='Client ':CLIENT.ID:' Carrier ':CARRIER.ID:' Pro ':PRO.ID           ; * JMK29
*           MVIN=''                      ; * JMK29
*           MVIN<1>='Owen@afs.net':@VM:'David@afs.net'         ; * JMK29
*           MVIN<2>='SMatthews@afs.net':@VM:'MButts@afs.net'   ; * JMK29
*           MVIN<4>='AFS'                ; * JMK29
*           MVIN<5>=SUBJ                 ; * JMK29
*           MVIN<6>=TEXT                 ; * JMK29
*           CALL SENDMAIL(MVIN,MVOUT)    ; * JMK29
*           GOTO 4900                    ; * Update Y/N Question; * JMK29
*        END                             ; * JMK29
*     END                                ; * JMK29
      IF CLIENT.ID='01212' AND REJECT.FLAG#'R' AND VERSION=0 THEN
         CONS.AMT=ACTUAL.CHG*.020
         CONS.AMT=CONS.AMT'R0'
         VAR.COMP=CONS.AMT
         VAR.ENTERED=VAR.ARR<3>+0
         IF VAR.ENTERED # VAR.COMP AND INDEX(PRO.ID,'BD',1) LT 1 THEN
            CALL ELINE('Error! Consulting is not correct. Exit program and re-enter bill.')
            CC+=1 ; GOSUB PRINT.CC
            LINE.OUT=''
            LINE.OUT<1,10>=123
            TEMP.ID=USER:"*":DATE():"*":TIME()
            MVIN=''
            SUBJ='Air O Fasteners attempted to be updated with an incorrect consulting amount'
            TEXT=USER:' attempted to update a bill with the consulting '
            TEXT<1,-1>='amount of ':VAR.ENTERED'R26':' and the computer computed the amount'
            TEXT<1,-1>='as ':VAR.COMP'R26'
            TEXT<1,-1>='on ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
            TEXT<1,-1>='Client ':CLIENT.ID:' Carrier ':CARRIER.ID:' Pro ':PRO.ID
            MVIN=''
            MVIN<1>='Owen@afs.net':@VM:'David@afs.net'
            MVIN<2>='SMatthews@afs.net'
            MVIN<4>='AFS'
            MVIN<5>=SUBJ
            MVIN<6>=TEXT
            CALL SENDMAIL(MVIN,MVOUT)
            GOTO 4900                    ; * Update Y/N Question
         END
      END
      IF CLIENT.ID='00891' AND CARRIER.ID='03029' THEN
*  For Zexel USA - Decatur Division for AFS Logistics LLC Int'l
         IF ACTUAL.CHG='267000' AND CARRIER.CHG='267000' THEN
*
* Logistics not take for the Zexel USA - Decatur Divsion for AFS Logistics LLC. Int'l
*
            CALL ELINE('Error! No Consulting take for this bill of Zexel USA for AFS Logistics LLC Int')
            CC+=1 ; GOSUB PRINT.CC
            LINE.OUT=''
            LINE.OUT<1,10>=123
            TEMP.ID=USER:"*":DATE():"*":TIME()
            MVIN=''
            SUBJ='No logistics taken for a Zexel USA - Decatur Divisions for AFS Logistics Intl'
            TEXT=USER:' attempted to update a bill with the carrier '
            TEXT<1,-1>='amount of ':CARRIER.CHG:' and the actual charge amount'
            TEXT<1,-1>='of ':ACTUAL.CHG
            TEXT<1,-1>='on ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
            TEXT<1,-1>='Client ':CLIENT.ID:' Carrier ':CARRIER.ID:' Pro ':PRO.ID
            MVIN=''
            MVIN<1>='Owen@afs.net':@VM:'KGilbert@afs.net':@VM:'Greg@afs.net'
            MVIN<2>='Wayne@afs.net'
            MVIN<4>='AFS'
            MVIN<5>=SUBJ
            MVIN<6>=TEXT
            CALL SENDMAIL(MVIN,MVOUT)
            GOTO 4900                    ; * Update Y/N Question
         END                             ; * IF ACTUAL.CHG='267000' AND CARRIER.CHG='267000'
      END                                ; * IF CLIENT.ID='00891' AND CARRIER.ID='03029'
      IF CLIENT.ID='01088' AND CARRIER.ID='00807' AND REJECT.FLAG#'R' AND VERSION=0 AND USER#'MYRA' THEN       ; * JMK103
*          Hi-Lo Industries and JB Hunt Trucking "Milk Run"
         LOOKUP.DATE=DATE()              ; * Use Today as a lookup date ; * JMK103
         LOCATE LOOKUP.DATE IN CLIENT.REC(84)<1> BY 'AR' SETTING POS ELSE POS=POS-1        ; * JMK103
         IF POS=0 THEN POS=1             ; * JMK103
         CONS.PERC=CLIENT.REC(85)<1,POS>/100       ; * JMK103
         NEGO.PERC="20"                  ; * AFS's Portion of Actual Charges is 2.0% ; * JMK103
         CONS.AMT=(NEGO.PERC*ACTUAL.CHG)/(CONS.PERC*10)      ; * JMK103
         CONS.AMT=CONS.AMT'R0'           ; * JMK103
         VAR.COMP=CONS.AMT               ; * JMK103
         VAR.ENTERED=VAR.ARR<3>+0        ; * JMK103
         IF VAR.ENTERED # VAR.COMP AND INDEX(PRO.ID,'BD',1) LT 1 THEN  ; * JMK103
*
* Consulting variance after applying AFS portion must equal NEGO.PERC of Actual Charge
*
            CALL ELINE('Error! Consulting is not correct. Exit program and re-enter bill.')          ; * JMK103
            CC+=1 ; GOSUB PRINT.CC       ; * JMK103
            LINE.OUT=''                  ; * JMK103
            LINE.OUT<1,10>=123           ; * JMK103
            TEMP.ID=USER:"*":DATE():"*":TIME()     ; * JMK103
            MVIN=''                      ; * JMK103
            SUBJ='Hi-Lo Industries and JB Hunt was attempted to be updated with an incorrect consulting amount'          ; * JMK103
            TEXT=USER:' attempted to update a bill with the consulting '         ; * JMK103
            TEXT<1,-1>='amount of ':VAR.ENTERED'R26':' and the computer computed the amount'         ; * JMK103
            TEXT<1,-1>='as ':VAR.COMP'R26'         ; * JMK103
            TEXT<1,-1>='on ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')      ; * JMK103
            TEXT<1,-1>='Client ':CLIENT.ID:' Carrier ':CARRIER.ID:' Pro ':PRO.ID           ; * JMK103
            MVIN=''                      ; * JMK103
            MVIN<1>='Owen@afs.net':@VM:'David@afs.net'       ; * JMK103
            MVIN<2>='SMatthews@afs.net'           ; * JMK103
            MVIN<4>='AFS'                ; * JMK103
            MVIN<5>=SUBJ                 ; * JMK103
            MVIN<6>=TEXT                 ; * JMK103
            CALL SENDMAIL(MVIN,MVOUT)    ; * JMK103
            GOTO 4900                    ; * Update Y/N Question ; * JMK103
         END                             ; * JMK103
      END                                ; * JMK103

*DF    IF PRO.REC<1> GE "12167" THEN
**********************************************************************
**                                                                  **
**  Removed the date check of 4/23/01 on 5/16/01 at 3:40pm. Any     **
**  bills updated after this provide the other criteria is met will **
**  have the logistics cap.                                         **
**                                                                  **
**********************************************************************
      IF CLIENT.ID = "00882" OR CLIENT.ID = "00923" OR CLIENT.ID = "00943" OR CLIENT.ID = "01025" THEN
         IF CARRIER.ID = "00050" OR CARRIER.ID = "00212" OR CARRIER.ID = "00004" OR CARRIER.ID = "00114" THEN
            IF WEIGHT GE "700" THEN
               IF VAR.ARR<3> GT "3670" THEN
*
* Logistics cap of 36.70 for Dealers (00882, 00923, and 00943) on or after 4/23/01 with
* weight for 700 or more for carriers (AAA Cooper, Amverican, or Consolidated Frieghtways)
*
                  CALL ELINE('Error! Logistics cap of 36.70 on these bills')
                  CC+=1 ; GOSUB PRINT.CC
                  LINE.OUT=''
                  LINE.OUT<1,10>=123
                  TEMP.ID=USER:"*":DATE():"*":TIME()
                  MVIN=''
                  SUBJ='Logistics cap of 36.70'
                  TEXT=USER:' attempted to update a bill with a logistics '
                  TEXT<1,-1>='amount of ':VAR.ARR<3>'R26#8'
                  TEXT<1,-1>='on ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
                  TEXT<1,-1>='Client ':CLIENT.ID:' Carrier ':CARRIER.ID:' Pro ':PRO.ID
                  MVIN=''
                  MVIN<1>='SMatthews@afs.net':@VM:'David@afs.net'
                  MVIN<2>='JLockard@afs.net'
                  MVIN<4>='AFS'
                  MVIN<5>=SUBJ
                  MVIN<6>=TEXT
                  CALL SENDMAIL(MVIN,MVOUT)
                  GOTO 4900              ; * Update Y/N Question
               END
            END
         END
      END                                ; * IF CLIENT.ID = "00882" OR CLIENT.ID = "00923" OR CLIENT.ID = "00943" OR CLIENT.ID = "01025"
*DF    END
*DF    IF CARRIER.ID='00015' AND VERSION='0' AND PRO.REC<94>='' THEN
*DF      CALL ELINE('Error! Missing FedEx invoice number - Call David')
*DF      CC+=1; GOSUB PRINT.CC
*DF      GOTO 4900 ; * Update Y/N Question
*DF    END
      IF REJECT.FLAG='R' THEN
         IF REJ.TYPE='' THEN
            CALL ELINE('Please go back and enter this bill as Eventually Pay or Never Pay.')
            GOTO 4900
         END
      END
*     IF REJ.TYPE#'' THEN                ; * JMK118 ; * JMK125
      IF REJ.TYPE#'' AND OLD.PRO.REC<37>='' THEN   ; * JMK118 ; * JMK125
         NEED.REASON=0                   ; * JMK118
         IF TRIM(REJECT.REASONS<1>)#'' THEN NEED.REASON=1    ; * JMK118
         IF TRIM(REJECT.REASONS<2>)#'' THEN NEED.REASON=1    ; * JMK118
         IF TRIM(REJECT.REASONS<3>)#'' THEN NEED.REASON=1    ; * JMK118
         IF TRIM(REJECT.REASONS<4>)#'' THEN NEED.REASON=1    ; * JMK118
         IF NEED.REASON=0 THEN           ; * JMK118
            CALL ELINE('Please go back and enter accompanying rejection reason for this bill.')      ; * JMK118
            GOTO 4900                    ; * JMK118
         END                             ; * JMK118
      END                                ; * JMK118
      IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN
         IF ACTUAL.CHG LE ADDRESS.CORRECTION.CHARGE AND ADDRESS.CORRECTION.CHARGE GT 0 THEN
            CALL ELINE('Actual Charge must be greater than UPS Address Correction Charge. Check both.')
            GOTO 4900                    ; * Update Y/N Question
         END
      END
      IF CLIENT.ID='00846' AND NOT(REJECT.FLAG) THEN
         IF IN.OUT='O' AND CARRIER.ID # '00015' THEN
            IF BOL='' OR BOL='NONE' OR BOL='NS' THEN
               CALL ELINE('Client 00846 must have a BOL in order to update')
               GOTO 4900
            END
         END
      END
      IF CLIENT.ID='00973' AND NOT(REJECT.FLAG) THEN
         IF EXP.CODE[7,1]#DIVISION+0 THEN
            CALL ELINE('Client 00973 division and expense code do not coorespond correctly')
            GOTO 4900
         END
      END
      IF CLIENT.ID='00949-AMERIMAX IS MOVING THEIR OWN LOADS FROM HELENA 10-20-04' AND NOT(REJECT.FLAG) THEN
         IF BILL.DATE GE '13189' AND TL.CAR AND INDEX(OCONV(ORIG.CITY,'MCU'),'HELENA',1) AND CARRIER.ID#'00642' THEN

*           IF USER#'SROSALIES' AND DATE()#'13316' THEN      ; * JMK32; * JMK33
*           IF USER#'WPARDUE'   AND DATE()#'13304' THEN      ; * JMK32; * JMK33
*           IF DATE()#'13352' THEN       ; * JMK32; * JMK33

*DF-This statement does not work            IF CARRIER.ID # '10313' AND (CARRIER.ID#'01118' AND DATE()=13430) THEN         ; * Per JC TL does not use CH Robinson
            IF CARRIER.ID # '10313' THEN           ; * Per JC TL does not use CH Robinson
*DF              IF CARRIER.ID#'01118' THEN
               CALL ELINE('Cannot update a truckload bill from Helena after 2/9/04. - See Owen')
               GOTO 4900
*DF              END
            END
            ; * JMK32
         END
      END

*     IF CLIENT.ID='01009' AND NOT(REJECT.FLAG) THEN
      IF 0 THEN
         IF IN.OUT='I' THEN
            IF BOL MATCH "'000'4N" ELSE
               CALL ELINE('Client 01009 must have a P O number that matches 000NNNN in order to update')
               GOTO 4900
            END
         END
      END

      IF (CLIENT.ID = '00924' OR CLIENT.ID = '01228') AND NOT(REJECT.FLAG) THEN
         UP.VC.DESC=OCONV(VC.DESC,'MCU')
         IF UP.VC.DESC[1,4]='FTPC' OR UP.VC.DESC[1,9]='FLEETRITE' OR UP.VC.DESC[1,7]='F T P C' THEN
            CALL ELINE('Cannot update a bill with a customer/vendor of Fleetrite or FTPC')
            GOTO 4900
         END
      END
*     IF CLIENT.ID = '00932' AND INDEX(T.MODE,'TRUCKLOAD',1) GT 0 THEN           ; * JMK16; * JMK25
*     IF CLIENT.ID = '00932' AND NOT(REJECT.FLAG) THEN       ; * JMK16; * JMK25; * JMK36
      IF CLIENT.ID = '00932' AND NOT(REJECT.FLAG) AND ACTUAL.CHG+0#0 THEN        ; * JMK16; * JMK25; * JMK36
         IF MIS.ARRAY='' AND FRT.ARRAY='' AND DTL.CHRG.CODES='' AND DTL.CHRG.AMTS='' THEN  ; * JMK16
            CALL ELINE('Problem with Doskocil detail information - Call Mike or Owen!!')   ; * JMK16
            GOTO 4900                    ; * JMK16
         END                             ; * JMK16
      END                                ; * JMK16

      IF CHANGE.FLAG AND SU.FLAG THEN
5000: ***
         HELP="[U]nprocess Bill [A]djust Bill [X]=Back [EX]it"
         CALL GEN.IN(0,22,'Unprocess bill or Adjust bill - ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC
         QI = OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI = 'EX'
               STOP
            CASE QI = 'X'
               GOTO 4900
            CASE QI = 'A' OR QI = 'U'
               POST.YTD=QI
               IF POST.YTD='U' THEN
                  HELP='Are you sure you want to unprocess the bill [Y]es'
                  CALL GEN.IN(0,22,'Are you sure you want to unprocess - ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
                  CC+=LEN(QI)+1 ; GOSUB PRINT.CC
                  QI = OCONV(QI,'MCU')
                  IF QI#'Y' THEN GO 5000
               END
               GOSUB WRITE.PRO.INFO
*NPR06               T.DATE=DATE()
*NPR06               T.TIME=TIME()
               ADJUST.HIST.ID=CLIENT.ID:'*':PRO.ID:'*':T.DATE:'*':T.TIME:'*OLD'
               WRITE OLD.PRO.REC ON F.ADJUST.HIST,ADJUST.HIST.ID
               ADJUST.HIST.ID=CLIENT.ID:'*':PRO.ID:'*':T.DATE:'*':T.TIME:'*NEW'
               WRITE PRO.REC ON F.ADJUST.HIST,ADJUST.HIST.ID
               ADJUST.VIN=POST.YTD
               ADJUST.VIN<2>=PRO.ID
               ADJUST.VIN<3>=CLIENT.ID
               CALL FB.ADJUST(ADJUST.VIN,ADJUST.VOUT,MAT CLIENT.REC,OLD.PRO.REC,PRO.REC)
            CASE 1
               CALL ELINE('Invalid entry. Please try again.')
               GOTO 5000
         END CASE
      END ELSE
*
* Write the Bill information
*
         GOSUB WRITE.PRO.INFO

*
* Handle Multiple Pros from Reject System
*
* (We use the above gosub to write the first
*  values for the orginal bill. This handles the
*  AD,BD, and VERSION differences from the Multiple
*  rejects.  We will save the current values and restore
*  them once we have written all of the other multiple bills)
*

         IF NUM.MULTI.PROS > 1 THEN
*
* Save current values
*
            T.PRO.REC = PRO.REC
            T.PRO.ID = PRO.ID
*           T.CARRIER.CHG = CARRIER.CHG
            T.ACTUAL.CHG = ACTUAL.CHG
            T.BILL.DATE = BILL.DATE
            T.VERSION = VERSION
            T.REJ.TYPE = REJ.TYPE

*
* Write the Multiple Reject Bills
* (Loop from 2 to number of multiples, the first
* one was already written and is only a placeholder)
*
            FOR TX = 2 TO NUM.MULTI.PROS
               PRO.ID = CARRIER.ID:'*':MULTI.PRO.ID<1,TX>:'*':'0'
               CARRIER.CHG = MULTI.PRO.CHG<1,TX>
               ACTUAL.CHG = MULTI.PRO.CHG<1,TX>
               BILL.DATE = MULTI.PRO.DATE<1,TX>
               REJ.TYPE = MULTI.PRO.REJ<1,TX>
               VERSION=0
*
* Construct Perform the Write
*
               GOSUB WRITE.PRO.INFO
            NEXT TX
*
* Restore OLD values
*
            PRO.REC = T.PRO.REC
            PRO.ID = T.PRO.ID
*           CARRIER.CHG = T.CARRIER.CHG
            ACTUAL.CHG = T.ACTUAL.CHG
            BILL.DATE = T.BILL.DATE
            VERSION = T.VERSION
            REJ.TYPE = T.REJ.TYPE
         END
      END

      IF END.FLAG='Y' THEN
         STOP
      END

      M.BOL.REC = ''                     ; *NPR028
      ID.BOL.CRX = ''                    ; *NPR028
      ID.BOL.CRX2 = ''                   ; *NPR028
      BOL.POP.VER.ARR = ''               ; *NPR777

      CHANGE.FLAG = 0                    ; * At line 300, this will clear all vars
      GOSUB 8100                         ; * Display screen
      GOTO 300                           ; * ENTER PRO
      GOTO 4900                          ; * UPDATE ACTION

*----
* WRITE.PRO.INFO
*----
WRITE.PRO.INFO: ***
*
      T.DATE=DATE()                      ; * NPR06
      T.TIME=TIME()                      ; * NPR06
*
      PRO.REC = ''
      IF OLD.PRO.REC<39>='R' AND REJECT.FLAG#'R' ELSE
         PRO.REC<53>=OLD.PRO.REC<53>
         PRO.REC<54>=OLD.PRO.REC<54>
         PRO.REC<98>=OLD.PRO.REC<98>
      END
      PRO.REC<1> = BILL.DATE
      PRO.REC<2> = IN.OUT
      IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN     ; * United Parcel Service
         PRO.REC<3>='99999'
         PRO.REC<4>='99999'
      END ELSE
         IF CARRIER.ID='01075' THEN      ; * FedEx Ground
            PRO.REC<3>='99999'
            PRO.REC<4>='99999'
         END ELSE
            PRO.REC<3>=ORIG.ZIP
            PRO.REC<4>=DEST.ZIP
         END
      END
      PRO.REC<5> = EXP.CODE
      PRO.REC<6> = WEIGHT
      PRO.REC<7> = CARRIER.CHG
      PRO.REC<8> = ACTUAL.CHG
      PRO.REC<9> = DIVISION
      PRO.REC<10> = 0-VAR.ARR<1>
      PRO.REC<11> = 0-VAR.ARR<2>
      PRO.REC<12> = 0-VAR.ARR<3>
      PRO.REC<13> = CHECK.AMT
      PRO.REC<14> = CHECK.NUM
*DFIF DATE()=12716 AND (USER='MYRA' OR USER='DAVID') THEN
*DFPRO.REC<13>=OLD.PRO.REC<13>
*DFPRO.REC<14>=OLD.PRO.REC<14>
*DFEND
      PRO.REC<15> = CHECK.DATE
      IF CL.BANK = 'V' OR CL.BANK='N' THEN
         PRO.REC<13>=OLD.PRO.REC<13>
         PRO.REC<14>=OLD.PRO.REC<14>
         PRO.REC<15>=OLD.PRO.REC<15>
      END
      PRO.REC<16> = BOL
      IF CLIENT.ID='00949' THEN
         IF TL.CAR THEN
            CL.BOL.CRX.FLAG = 'Y'
         END ELSE
            CL.BOL.CRX.FLAG = 'N'
         END
      END
      IF CL.BOL.CRX.FLAG = 'Y' THEN
         GOSUB SET.BOL.CRX
      END
      PRO.REC<17> = VC.ID
      PRO.REC<18> = ZIP.ARR<1>
      NUM.ZIPS = DCOUNT(PRO.REC<18>, @VM)
      IF NUM.ZIPS > 1 THEN
         DEL PRO.REC<18,NUM.ZIPS>
         DEL PRO.REC<18,1>
      END
      PRO.REC<19> = MILEAGE
      PRO.REC<20> = CARRIER.ID

*      X = DCOUNT(DISC.DET,@AM)
*      FOR I = 1 TO X
*         PRO.REC<22,I> = DISC.DET<I,1>
*         PRO.REC<23,I> = DISC.DET<I,2>
*      NEXT I
      PRO.REC<22> = MISROUTE.ARRAY<1>
      PRO.REC<23> = MISROUTE.ARRAY<2>
      PRO.REC<24> = DISC.PERC
      IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN
         PRO.REC<25>='ZZ'
         PRO.REC<26>='ZZ'
         PRO.REC<27>='UPS'
         PRO.REC<28>='UPS'
      END ELSE
         IF CARRIER.ID='01075' THEN
            PRO.REC<25>='ZZ'
            PRO.REC<26>='ZZ'
            PRO.REC<27>='FedEx Ground'
            PRO.REC<28>='FedEx Ground'
         END ELSE
            PRO.REC<25>=ORIG.STATE
            PRO.REC<26>=DEST.STATE
            PRO.REC<27>=ORIG.CITY
            PRO.REC<28>=DEST.CITY
         END
      END
      PRO.REC<38> = DUE.DATE
      VAR.CODE = ''
      IF VARIANCE = 0 THEN VAR.ARR = ''
      IF VAR.ARR<1>'R0' # 0 ! VAR.ARR<4>'R0' NE 0 THEN
         VAR.CODE = VAR.CODE:'D'
      END
      IF VAR.ARR<2>'R0' # 0 ! VAR.ARR<5>'R0' NE 0 THEN
         VAR.CODE = VAR.CODE:'O'
      END
      IF VAR.ARR<3>'R0' # 0 ! VAR.ARR<6>'R0' NE 0 THEN
         VAR.CODE = VAR.CODE:'C'
      END
      PRO.REC<29> = VAR.CODE

      READV E.DATE FROM F.HIST, OLD.PRO.ID, 30 THEN
         PRO.REC<30> = E.DATE
      END
      IF VERSION > 0 THEN PRO.REC<30>=''           ; * Set to Null on Dups
*OH   IF VERSION > 0 THEN
*OH      READV E.DATE FROM F.HIST, PRO.ID, 30 ELSE
*OH         PRO.REC<30> = DATE()
*OH      END
*OH   END
*OH   IF PRO.REC<30> = '' THEN
*OH     PRO.REC<30>=DATE()
*OH     IF PRO.REC<30>=CLIENT.REC(82) THEN PRO.REC<30>+=1
*OH   END
      IF DATE() LE CLIENT.REC(82) THEN
         NEW.BILL.DATE=CLIENT.REC(82)+1
      END ELSE
         NEW.BILL.DATE=DATE()
      END

      IF OLD.PRO.REC<66>='N' AND OLD.PRO.REC<39> = 'R' AND PRO.REC<39> # 'R' THEN PRO.REC<30>=''     ; * JIM - NEVERPAYS

      IF PRO.REC<30>='' THEN PRO.REC<30>=NEW.BILL.DATE
      IF PRO.REC<39>#'R' AND OLD.PRO.REC<37>='' THEN
         IF PRO.REC<30> LE CLIENT.REC(82) THEN PRO.REC<30>=NEW.BILL.DATE
      END
********************************************************************
      IF CLIENT.ID = '00978' THEN
         BASE.AMT=PRO.REC<8>             ; * Get Starting amount
         EXP.ARRAY=''
* Distribute BFG-Garlock Palmyra changed Inbound percent on 1/28/03
* Distribute BFG-Garlock Palmyra changed Inbound and Outbound percent on 1/9/04 - DRF
* Distribute BFG-Garlock Palmyra changed Inbound percent on 02/03/04 - DRF
* Distribute BFG-Garlock Palmyra changed Inbound and Outbound percent on 02/01/05 - DRF
* Distribute changed Inbound and Outbound 01/31/06 - DRF
* Distribute changed Inbound and Outbound 01/11/07 - DRF
* Distribute changed Inbound 04/24/08 - DRF
* Distribute changed Inbound 01/05/10 - DRF
         IF IN.OUT='I' THEN
            EXP.ARRAY<1,1>='MLD' ; EXP.ARRAY<2,1>=15.1
            EXP.ARRAY<1,2>='KLZ' ; EXP.ARRAY<2,2>=28.0
            EXP.ARRAY<1,3>='CMP' ; EXP.ARRAY<2,3>=0.1
            EXP.ARRAY<1,4>='GYL' ; EXP.ARRAY<2,4>=15.4
*DF            EXP.ARRAY<1,5>='SHT' ; EXP.ARRAY<2,5>=19.0
            EXP.ARRAY<1,5>='HPS' ; EXP.ARRAY<2,5>=31.0
            EXP.ARRAY<1,6>='FAB' ; EXP.ARRAY<2,6>=1.3
*DF            EXP.ARRAY<1,7>='EJT' ; EXP.ARRAY<2,7>=10.5
            EXP.ARRAY<1,7>='EJ' ; EXP.ARRAY<2,7>=2.1
            EXP.ARRAY<1,8>='HYD' ; EXP.ARRAY<2,8>=4.6
*DF            EXP.ARRAY<1,9>='DIV' ; EXP.ARRAY<2,9>=11.9
            EXP.ARRAY<1,9>='RIM' ; EXP.ARRAY<2,9>=2.4
         END ELSE
*  Distribute BFG-Garlock Palmyra automatically....
            IF PRO.ID[1,13]='00041*1X4-568' OR PRO.ID[1,13]='00041*3V9-86A' THEN
               EXP.ARRAY<1,1>='KLZ' ; EXP.ARRAY<2,1>=100.0
            END ELSE
               EXP.ARRAY<1,1>='MLD' ; EXP.ARRAY<2,1>=1.1
               EXP.ARRAY<1,2>='KLZ' ; EXP.ARRAY<2,2>=20.2
               EXP.ARRAY<1,3>='CMP' ; EXP.ARRAY<2,3>=0.9
               EXP.ARRAY<1,4>='GYL' ; EXP.ARRAY<2,4>=19.9
*DF               EXP.ARRAY<1,5>='SHT' ; EXP.ARRAY<2,5>=5.8
               EXP.ARRAY<1,5>='HPS' ; EXP.ARRAY<2,5>=32.1
               EXP.ARRAY<1,6>='FAB' ; EXP.ARRAY<2,6>=8.4
*DF               EXP.ARRAY<1,7>='EJT' ; EXP.ARRAY<2,7>=2.5
               EXP.ARRAY<1,7>='EJ' ; EXP.ARRAY<2,7>=9.2
               EXP.ARRAY<1,8>='HYD' ; EXP.ARRAY<2,8>=8.2
*DF               EXP.ARRAY<1,9>='RIM' ; EXP.ARRAY<2,9>=0
*DF               EXP.ARRAY<1,9>='DIV' ; EXP.ARRAY<2,9>=65.0
            END
         END
         EXP.TIMES=DCOUNT(EXP.ARRAY<1>,@VM)
         EXP.CHECK=0
         AMT.LEFT=BASE.AMT
         DTAB=''
         FOR X = 1 TO EXP.TIMES
            EXP.CHECK+=EXP.ARRAY<2,X>
            IF X = EXP.TIMES THEN
               EXP.AMT=AMT.LEFT
            END ELSE
               EXP.AMT=BASE.AMT*EXP.ARRAY<2,X>/100
               EXP.AMT=OCONV(EXP.AMT,'MR0')
            END
            IF EXP.AMT>'0' OR CARRIER.CHG>'1' THEN
               DTAB<1,-1>=EXP.ARRAY<1,X>
               DTAB<3,-1>=EXP.AMT
               AMT.LEFT-=EXP.AMT
            END
         NEXT X
         IF EXP.CHECK#100 THEN
            CALL ELINE('Automatic Expense Breakout for BFG Garlock is not 100% Update Refused!')
            CC+=1 ; GOSUB PRINT.CC
            GOTO 1400
         END
         EXP.CODE=DTAB<1,1>              ; * Set "Expense Code" to the 1st Value
         PRO.REC<5>=EXP.CODE
         PRO.REC<31> = DTAB<1>
         PRO.REC<33> = DTAB<3>
      END ELSE
         PRO.REC<31> = DTAB<1>
*DF     PRO.REC<32> = DTAB<2>
         PRO.REC<33> = DTAB<3>
      END
********************************************************************
*DF      IF USER='DAVID' THEN CALL ELINE('BEFORE CAL BREAK')
*DF      IF CLIENT.ID='00761' AND CARRIER.ID='00015' AND PRO.REC<8> > 0 AND EXP.CODE='07013-691002' THEN
*DF*DF        DTAB<1,2>='04007-691002'
*DF*DF        DTAB<3,1>=OCONV(PRO.REC<8>*75/100,'MR0')
*DF*DF        DTAB<3,2>=PRO.REC<8>-DTAB<3,1>
*DF         DTAB<1,2>='05502-691002'
*DF         DTAB<1,3>='04007-691002'
*DF         DTAB<1,4>='13001-691002'
*DF         DTAB<3,1>=OCONV(PRO.REC<8>*15/100,'MR0')
*DF         DTAB<3,2>=OCONV(PRO.REC<8>*15/100,'MR0')
*DF         DTAB<3,3>=OCONV(PRO.REC<8>*65/100,'MR0')
*DF         DTAB<3,4>=PRO.REC<8>-(DTAB<3,1>+DTAB<3,2>+DTAB<3,3>)
*DF         PRO.REC<31>=DTAB<1>
*DF         PRO.REC<33>=DTAB<3>
*DF      END
***
***
***  Per Karl at Alcon 5/9/02. We will no long use the short split.
***  The total amount will go the the NN account number
***
***
***  Per Marie at Alcon 5/10/02. We will use a new short split going
***  between two codes.
***
***
      IF CLIENT.ID='10356' AND (CARRIER.ID='01060' OR CARRIER.ID='00044') AND PRO.REC<8> > 0 AND (ORIG.EXP.CODE MATCHES "'S'2N" OR ORIG.EXP.CODE MATCHES "'s'2N") THEN
*DF        DTAB<1,2>='9993820001.6620.SG7714'
*DF        DTAB<1,3>='9993820001.6620.SG7710'
*DF        DTAB<3,1>=OCONV(PRO.REC<8>*849/1000,'MR0')
*DF        DTAB<3,2>=OCONV(PRO.REC<8>*136/1000,'MR0')
*DF        DTAB<3,3>=PRO.REC<8>-(DTAB<3,1>+DTAB<3,2>)
         DTAB<1,2>='9993820001.6620.0'
         DTAB<3,1>=OCONV(PRO.REC<8>*849/1000,'MR0')
         DTAB<3,2>=PRO.REC<8>-(DTAB<3,1>)
         PRO.REC<31>=DTAB<1>
         PRO.REC<33>=DTAB<3>
      END
      IF CLIENT.ID='10356' AND CARRIER.ID='01060' AND PRO.REC<8> > 0 AND (ORIG.EXP.CODE MATCHES 'L' OR ORIG.EXP.CODE MATCHES 'l') THEN
*DF*DF        DTAB<1,2>='9993820001.6620.SG7714'
*DF*DF        DTAB<1,3>='9993820001.6620.SG7710'
*DF         DTAB<1,2>='9993820001.6620.0'
*DF         DTAB<1,3>='9990224500.6620.92'
*DF         DTAB<1,4>='9493116000.5310.FRIN'
*DF         DTAB<1,5>='9871416000.5310.2'
*DF         DTAB<3,1>=OCONV(PRO.REC<8>*356/1000,'MR0')
*DF*DF        DTAB<3,2>=OCONV(PRO.REC<8>*57/1000,'MR0')
*DF*DF        DTAB<3,3>=OCONV(PRO.REC<8>*6/1000,'MR0')
*DF         DTAB<3,2>=OCONV(PRO.REC<8>*63/1000,'MR0')
*DF         DTAB<3,3>=OCONV(PRO.REC<8>*109/1000,'MR0')
*DF         DTAB<3,4>=OCONV(PRO.REC<8>*339/1000,'MR0')
*DF         DTAB<3,5>=PRO.REC<8>-(DTAB<3,1>+DTAB<3,2>+DTAB<3,3>+DTAB<3,4>+DTAB<3,5>)
*
* Percents changed on 2/9/04 for email form Bob Hickman dater 2/4/04.
* by DRF 2/9/04.
*
         DTAB<1,2>='9990224500.6620.92'
         DTAB<1,3>='9493116000.5310.FRIN'
         DTAB<1,4>='987141600.5310.21'
         DTAB<3,1>=OCONV(PRO.REC<8>*380/1000,'MR0')
         DTAB<3,2>=OCONV(PRO.REC<8>*116/1000,'MR0')
         DTAB<3,3>=OCONV(PRO.REC<8>*362/1000,'MR0')
         DTAB<3,4>=PRO.REC<8>-(DTAB<3,1>+DTAB<3,2>+DTAB<3,3>+DTAB<3,4>)
         PRO.REC<31>=DTAB<1>
         PRO.REC<33>=DTAB<3>
*
*  Removed the split per ticket 070710. - DRF 10/02/07
*
*
* Added the split back in per Mary. - DRF 03/12/08
*
      END
********************************************************************
      IF CLIENT.ID='10298' AND DIVISION='00004' AND CARRIER.ID='06140' AND PRO.REC<8> > 165000 THEN
*DF         DTAB<1,2>='515-461-006-000'
         DTAB<1,2>='515-467-006-000'
*
* Changed 461 to 467 per email from Myra on 09/09/04. DRF
*
         DTAB<3,1>='165000'
         DTAB<3,2>=PRO.REC<8>-'165000'
         PRO.REC<31>=DTAB<1>
         PRO.REC<33>=DTAB<3>
      END
      IF (CLIENT.ID='01063' OR CLIENT.ID='01195') AND PRO.REC<8> > 0 THEN
         IF MULTI.CODE#'' THEN
            DTAB<1>=MULTI.CODE
            CODE.COUNTER=DCOUNT(DTAB<1>,@VM)
            CODE.ACC = 0
            FOR XX = 1 TO CODE.COUNTER-1
               DTAB<3,XX> = OCONV(PRO.REC<8>*MULTI.PERCENT<1,XX>/10000,'MR0')
               CODE.ACC = CODE.ACC + DTAB<3,XX>
            NEXT XX
            DTAB<3,CODE.COUNTER>=PRO.REC<8>-CODE.ACC
         END
         PRO.REC<31>=DTAB<1>
         PRO.REC<33>=DTAB<3>
      END
********************************************************************
*     IF CLIENT.ID='01271' THEN          ; * JMK80 ; * JMK96
      IF CLIENT.ID='01271' OR CLIENT.ID='01418' OR CLIENT.ID='01113' THEN        ; * JMK80 ; * JMK96
         DTAB=''                         ; * JMK80
         EXP.ID=PRO.REC<31,1>            ; * JMK80
         EXP.AMT=PRO.REC<8>              ; * JMK80
         DTAB<1>=EXP.ID                  ; * JMK80
         DTAB<3>=EXP.AMT                 ; * JMK80
         HAZ.EXP.AMT=0                   ; * JMK80
         FSC.EXP.AMT=0                   ; * JMK80
         IF CLIENT.ID#'01113' THEN
            LOCATE('HAZ',DTL.CHRG.CODES,1;HAZPOS) THEN       ; * JMK80
               IF CLIENT.ID='01271' THEN
                  HAZ.EXP.ID=OCONV(EXP.ID,'G.2'):'.382301'   ; * JMK80
               END ELSE
                  HAZ.EXP.ID=OCONV(EXP.ID,'G-2'):'-382301'   ; * JMK80
               END
               HAZ.EXP.AMT=DTL.CHRG.AMTS<1,HAZPOS>           ; * JMK80
               DTAB<1,-1>=HAZ.EXP.ID     ; * JMK80
               DTAB<3,-1>=HAZ.EXP.AMT    ; * JMK80
            END                          ; * JMK80
         END
         LOCATE('FSC',DTL.CHRG.CODES,1;FSCPOS) THEN          ; * JMK80
            IF CLIENT.ID = '01271' THEN  ; * JCW06
*DF               FSC.EXP.ID=OCONV(EXP.ID,'G-2'):'-382901'      ; * JMK80 ; * JCW06
*DF               FSC.EXP.ID=OCONV(EXP.ID,'G-2'):'-388101'      ; * JMK80 ; * JCW06
               FSC.EXP.ID=OCONV(EXP.ID,'G.2'):'.388101'      ; * JMK80 ; * JCW06
            END ELSE                     ; * JCW06
               FSC.EXP.ID=OCONV(EXP.ID,'G-2'):'-388101'      ; * JCW06
            END                          ; * JCW06
            FSC.EXP.AMT=DTL.CHRG.AMTS<1,FSCPOS>    ; * JMK80
            DTAB<1,-1>=FSC.EXP.ID        ; * JMK80
            DTAB<3,-1>=FSC.EXP.AMT       ; * JMK80
         END                             ; * JMK80
         DTAB<3,1>=EXP.AMT-HAZ.EXP.AMT-FSC.EXP.AMT           ; * JMK80
         PRO.REC<31>=DTAB<1>             ; * JMK80
         PRO.REC<33>=DTAB<3>             ; * JMK80
      END                                ; * JMK80
      IF CLIENT.ID='01636' THEN          ; * JMK152
         IF DTAB.HOLD#'' AND OLD.PRO.REC<31>='' THEN         ; * JMK152
            PRO.REC<31>=DTAB.HOLD<1>     ; * JMK152
            PRO.REC<33>=DTAB.HOLD<3>     ; * JMK152
         END                             ; * JMK152
      END                                ; * JMK152
      PRO.REC<34> = 0-VAR.ARR<4>
      PRO.REC<35> = 0-VAR.ARR<5>
      PRO.REC<36> = 0-VAR.ARR<6>
      IF USER.TYPE='A' THEN
         IF REJECT.FLAG THEN
            PRO.REC<39>=REJECT.FLAG
         END ELSE
            PRO.REC<39>=OLD.PRO.REC<39>
            PRO.REC<54>=OLD.PRO.REC<54>
            PRO.REC<98>=OLD.PRO.REC<98>
         END
      END ELSE
         IF AUDIT='Y' THEN
            IF ABS(DIFFERENCE) < 2 THEN
               PRO.REC<39>='A'           ; * Amounts Verified
               VER.CODE='A' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
            END
            VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
         END
         PRO.REC<54>=''
      END
      PRO.REC<40> = BANK.ID
      PRO.REC<45> = VERIFIED
*     IF BILL.STATUS=1 THEN              ; * JMK26
*        IF QV.VALID THEN                ; * JMK26
*           PRO.REC<68> = '1G'           ; * JMK26
*        END ELSE                        ; * JMK26
*           PRO.REC<68> = '1V'           ; * JMK26
*        END                             ; * JMK26
*     END ELSE                           ; * JMK26
      PRO.REC<68> = BILL.STATUS
*     END                                ; * JMK26
*     PRO.REC<70> = AVOUT<40>            ; * JMK08; * JMK09
*     PRO.REC<74> = AVOUT<41>            ; * JMK08; * JMK09
*     PRO.REC<75> = AVOUT<42>            ; * JMK08; * JMK09
*     PRO.REC<76> = AVOUT<43>            ; * JMK08; * JMK09
*     PRO.REC<77> = AVOUT<44>            ; * JMK08; * JMK09
*     PRO.REC<78> = AVOUT<43>            ; * JMK08; * JMK09
*     PRO.REC<79> = AVOUT<44>            ; * JMK08; * JMK09
*     PRO.REC<83> = AVOUT<45>            ; * JMK08; * JMK09
      FRT.ARRAY=''                       ; * JMK14
      MIS.ARRAY=''                       ; * JMK14
      DTL.OUT=''                         ; * JMK17
      BEGIN CASE                         ; * JMK17
         CASE AVOUT<40>#''               ; * JMK17
            DTL.OUT=AVOUT                ; * JMK17
            IF DTL.CHRG.CODES='' THEN    ; * JMK18
*              DTL.CHRG.CODES=DTL.OUT<40>          ; * JMK18 ; * JMK53
*              DTL.CHRG.AMTS=DTL.OUT<44>           ; * JMK18 ; * JMK53
            END                          ; * JMK18
         CASE DTL.CHRG.CODES<1,1>#'' AND INDEX(T.MODE,'TRUCKLOAD',1) GT 0        ; * JMK17
            DTL.OUT<40>=DTL.CHRG.CODES   ; * JMK17
            DTL.OUT<44>=DTL.CHRG.AMTS    ; * JMK17
*        CASE PRO.REC<70>#''             ; * JMK17
*           DTL.OUT<40>=PRO.REC<70>      ; * JMK17
*           DTL.OUT<41>=PRO.REC<74>      ; * JMK17
*           DTL.OUT<42>=PRO.REC<75>      ; * JMK17
*           DTL.OUT<43>=PRO.REC<76>      ; * JMK17
*           DTL.OUT<44>=PRO.REC<77>      ; * JMK17
*           DTL.OUT<45>=PRO.REC<83>      ; * JMK17
*           LOCATE('FRT',DTL.OUT,40;FPOS) ELSE     ; * JMK17
*              TOT.MIS.AMT=SUM(PRO.REC<77>)        ; * JMK17
*              TOT.FRT.AMT=PRO.REC<8>-TOT.MIS.AMT  ; * JMK17
*              FOR ATT=40 TO 45          ; * JMK17
*                 DTL.OUT=INSERT(DTL.OUT,ATT,1;'')           ; * JMK17
*              NEXT ATT                  ; * JMK17
*              DTL.OUT<40,1>='FRT'       ; * JMK17
*              DTL.OUT<44,1>=TOT.FRT.AMT           ; * JMK17
*           END                          ; * JMK17
         CASE 1                          ; * JMK17
            DTL.OUT=''                   ; * JMK17
            IF DTL.CHRG.CODES#'' THEN    ; * JMK19
               DTL.OUT<40>=DTL.CHRG.CODES          ; * JMK19
               DTL.OUT<44>=DTL.CHRG.AMTS           ; * JMK19
            END                          ; * JMK19
      END CASE                           ; * JMK17
      GOSUB RECALC.FB.DETAILS            ; * JMK18
      PRO.REC<88> = OLD.PRO.REC<88>      ; * Copy over EDI Links
      PRO.REC<93> = MISSING.DATA
*     IF CARRIER.ID='00015' OR CARRIER.ID='00143' OR CARRIER.ID='00365' OR CARRIER.ID='04226' THEN   ; * JMK106
* NPR07      IF CAPTURE.INVOICE THEN            ; * JMK106
      IF CAPTURE.INVOICE OR CARRIER.ID='01075' THEN          ; * JMK106  ; * NPR07
         PRO.REC<94>=INV.NUM
      END
      IF CAPTURE.INVOICE OR CARRIER.ID='20114' THEN          ; * JMK106  ; * NPR07
         PRO.REC<94>=INV.NUM
      END
      PRO.REC<96>=OVERRIDE.STATUS
      IF OLA.AMT#'' THEN
         PRO.REC<99>=OLA.AMT
      END
      PRO.REC<116>=OVERRIDE.FIELD
      PRO.REC<117>=OVERRIDE.OPERATOR
      PRO.REC<118>=OVERRIDE.INFO
      PRO.REC<119>=FLAT.RATE

*
* Update the PRO.REC<39> - Only alter contents of <39> if we need to.
* incase <39> already contains a prior value.
*
      IF REJECT.FLAG # '' THEN PRO.REC<39> = REJECT.FLAG
      IF (OLD.PRO.REC<88>) AND PRO.REC<39>='' THEN
         PRO.REC<39>='V'                 ; * IF EDI, Mark as verified
      END
*OH   IF OLD.PRO.REC<39> = 'R' AND PRO.REC<39> # 'R' THEN
*OH     PRO.REC<30> = DATE()
*OH     IF PRO.REC<30>=CLIENT.REC(82) THEN PRO.REC<30>+=1
*OH Can't use same date as the last processed date!
*OH   END
*DF   IF PRO.REC<39> # 'R' AND CLIENT.ID[1,2]='99' THEN PRO.REC<39>='V'
      IF QV.VALID THEN                   ; * JMK24
         PRO.REC<39>='O'                 ; * JMK24
         IF USER.TYPE#'A' AND OLD.PRO.REC<37>='' AND (CLIENT.ID='01290' OR CLIENT.ID='01313' OR CLIENT.ID='01309' OR CLIENT.ID='01316' OR CLIENT.ID='01339' OR CLIENT.ID='01333' OR CLIENT.ID='01320' OR CLIENT.ID='01322') THEN
            PRO.REC<98>=PRO.REC<8>
         END
      END                                ; * JMK24
      READV P.DATE FROM F.HIST, OLD.PRO.ID, 37 THEN
         PRO.REC<37> = P.DATE
      END ELSE
*DF      PRO.REC<54>=''
      END
      IF CHANGED.TO.EVENTUAL.PAY THEN PRO.REC<37> = ''       ; * NPR14
      IF OLD.PRO.REC<66>='N' AND OLD.PRO.REC<39> = 'R' AND PRO.REC<39> # 'R' THEN PRO.REC<37>=''
      IF VERSION > 0 THEN PRO.REC<37>=''
      PRO.REC<41,1> = VAR.ARR<7>
      PRO.REC<41,2> = VAR.ARR<8>
      PRO.REC<41,3> = VAR.ARR<9>
*     PRO.REC<42> = VOID.DESC
*DF      PRO.REC<45> = DISC.FLAG
      PRO.REC<46> = MIN.CHG
      APRVD.CARRIER = 'N'
      IF APRVD.CARRS THEN
         GOSUB SET.APRVD.CARR
      END
      PRO.REC<47> = APRVD.CARRIER
      IF QI = 'W' THEN PRO.REC<48> = 'Y' ELSE PRO.REC<48> = ''
      CALC = 0
      COST.MILE = 0
      IF MILEAGE+0 # 0 THEN
         COST.MILE = OCONV(ACTUAL.CHG,'MD2')/MILEAGE
         COST.MILE = ICONV( COST.MILE,'MD2' )
      END

*OH 11-21-97 IF COST.MILE LT CL.CPM.MIN OR CL.CPM.MIN = '' THEN
      IF CL.CPM.MIN+0 > 0 THEN
         IF COST.MILE LT CL.CPM.MIN THEN
            COST.MILE = ''
         END
      END
      PRO.REC<49> = COST.MILE'R0'
*DF   PRO.REC<50> = CLASS<1>
*DF   PRO.REC<50> = UPDATE.MARK
      FOR X = 84 TO 86
         PRO.REC<X>=OLD.PRO.REC<X>
      NEXT X
      IF PRO.REC<84>='' AND OLD.PRO.REC<84>#'' THEN
         PRO.REC<84>=OLD.PRO.REC<84>
         PRO.REC<85>=OLD.PRO.REC<85>
         PRO.REC<86>=OLD.PRO.REC<86>
      END
*     IF PRO.REC<84>='' THEN PRO.REC<84>=USER
      PRO.REC<84,-1>=USER                ; * Update Each Time bill is Filed
*NPR06      PRO.REC<85,-1>=TIME()              ; * Update Each Time bill is Filed
      PRO.REC<85,-1>=T.TIME              ; * Update Each Time bill is Filed   ;*NPR06
      PRO.REC<86,-1>=DATE()              ; * Update Each Time bill is Filed
      IF QV.VALID THEN                   ; * JMK24
         PRO.REC<54>=USER                ; * JMK26
         PRO.REC<84,-1>=USER             ; * JMK24
*NPR06         PRO.REC<85,-1>=TIME()           ; * JMK24  ;*NPR06
         PRO.REC<85,-1>=T.TIME           ; * JMK24       ;*NPR06
         PRO.REC<86,-1>=DATE()           ; * JMK24
      END                                ; * JMK24
      PRO.REC<51> = VAR.REC<1>
      PRO.REC<52> = VAR.REC<2>
      PRO.REC<56> = VAR.REC<3>
      IF PRO.REC<53> = '' THEN PRO.REC<53> = USER
      PRO.REC<55> = LEN(PRO.REC)-LEN(USER)
      PRO.REC<57> = AIR.PIECES
      PRO.REC<58> = CLASS<2>
      PRO.REC<59> = REJECT.REASONS<1>
      PRO.REC<60> = REJECT.REASONS<2>
      PRO.REC<61> = REJECT.REASONS<3>
      PRO.REC<62> = REJECT.REASONS<4>
      PRO.REC<64,1>=MAILING.ADDR<1>
      PRO.REC<64,2>=MAILING.ADDR<2>
      PRO.REC<64,3>=MAILING.ADDR<3>
      PRO.REC<64,4>=MAILING.ADDR<4>
      PRO.REC<66> = REJ.TYPE
      CARRIER.MODE.WGT = CARRIER.REC<70>
      CARRIER.MODE.BY.WGT = CARRIER.REC<71>
      LOCATE WEIGHT IN CARRIER.MODE.WGT<1> BY "AR" SETTING POS ELSE NULL
      T.MODE.BY.WGT = OCONV(CARRIER.MODE.BY.WGT<1,POS>,'MCU')
      LTL.CAR=T.MODE.BY.WGT=1            ; * JMK187
      TL.CAR=T.MODE.BY.WGT=6             ; * JMK187
      AIR.CAR=T.MODE.BY.WGT=12           ; * JMK187
      PRO.REC<21> = T.MODE.BY.WGT

      IF PRO.REC<21>#'1' AND PRO.REC<21>#'6' THEN PRO.REC<19>=''       ; * JMK162
      IF PRO[LEN(PRO)-1,2]='AD' THEN PRO.REC<19>=''          ; * JMK162
      IF PRO[LEN(PRO)-1,2]='BD' THEN PRO.REC<19>=''          ; * JMK162
      PRO.REC<65> = SERVICE.LEVEL
      PRO.REC<106> = DIM.WEIGHT
      PRO.REC<107> = AIR.CHRG.CODES
      PRO.REC<108> = AIR.CHRG.AMTS
      PRO.REC<207> = INTL.CHRG.CODES     ; * NPR031
      PRO.REC<208> = INTL.CHRG.AMTS      ; * NPR031
      IF VC.OVERRIDE='Y' THEN            ; * JMK55
         PRO.REC<189>=MISROUTE.AMOUNT    ; * JMK55
         PRO.REC<190>=MISROUTE.CARRIER   ; * JMK55
         PRO.REC<191>=13513              ; * JMK55
         PRO.REC<192>='NEVER'            ; * JMK55
         PRO.REC<193>='On file when reason system started'   ; * JMK55
         PRO.REC<194>='Logistics Dept'   ; * JMK55
         PRO.REC<195>=13513              ; * JMK55
         PRO.REC<196>=46800              ; * JMK55
      END ELSE                           ; * JMK55
         PRO.REC<63> = MISROUTE.AMOUNT
         PRO.REC<69> = MISROUTE.CARRIER
         PRO.REC<189>=MISROUTE.AMOUNT    ; * JMK126
         PRO.REC<190>=MISROUTE.CARRIER   ; * JMK126
      END                                ; * JMK55
*** These two client/carrier combinations should never be counted as misroutes
*** Requested by Donna Dupont and Kristy Rivet
      IF (CLIENT.ID='01014' AND CARRIER.ID='03131') OR (CLIENT.ID='01079' AND CARRIER.ID='00250') THEN         ; * JCW03
         PRO.REC<63> = ''                ; * JCW03
         PRO.REC<69> = ''                ; * JCW03
         PRO.REC<22> = ''                ; * JCW03
         PRO.REC<23> = ''                ; * JCW03
         IF VC.OVERRIDE = 'Y' THEN       ; * JCW03
            PRO.REC<189> = ''            ; * JCW03
            PRO.REC<190> = ''            ; * JCW03
            PRO.REC<191> = ''            ; * JCW03
            PRO.REC<192> = ''            ; * JCW03
            PRO.REC<193> = ''            ; * JCW03
            PRO.REC<194> = ''            ; * JCW03
            PRO.REC<195> = ''            ; * JCW03
            PRO.REC<196> = ''            ; * JCW03
         END                             ; * JCW03
      END                                ; * JCW03
      IF DAUDIT<13>='Y' THEN             ; * JMK57
         PRO.REC<197>='Y'                ; * JMK57
      END ELSE                           ; * JMK57
         PRO.REC<197>='N'                ; * JMK57
      END                                ; * JMK57
      IF (USER.TYPE='A' AND NOT(SU.FLAG) AND QI='A') OR (USER.TYPE='A' AND NOT(SU.FLAG) AND QI='1') OR (USER.TYPE='A' AND NOT(SU.FLAG) AND QI='U') THEN
         AUDITOR=USER
*DF     IF AUDITOR='' THEN AUDITOR=CL.AUDITOR
         PRO.REC<89> = AUDITOR
         PRO.REC<95> = DATE()
         IF QI='A' OR QI='1' THEN
            PRO.REC<39> = 'O'
            IF OLD.PRO.REC<39> # 'O' AND PRO.REC<39>='O' AND CLIENT.ID='00574' THEN
               IF DATE() LE CLIENT.REC(82) THEN
                  PRO.REC<30>=CLIENT.REC(82)+1
               END ELSE
                  PRO.REC<30> = DATE()
               END
            END
         END ELSE
            IF REJECT.FLAG#'R' THEN PRO.REC<39>=PRO.REC<68>
         END
      END
      IF VERSION GT 0 THEN PRO.REC<39> = 'O'
      PRO.REC<90> = VC.CODE
      PRO.REC<91> = CC
      PRO.REC<100>= VC.ID                ; * Item ID for Cust.Vend
      PRO.REC<101>= CUST.VEND.ADDR<1>    ; * Name
      PRO.REC<102>= CUST.VEND.ADDR<2>    ; * Address1
      PRO.REC<102,2>= CUST.VEND.ADDR<3>  ; * Address2
      PRO.REC<103>= CUST.VEND.ADDR<5>    ; * City
      PRO.REC<104>= CUST.VEND.ADDR<6>    ; * State
      PRO.REC<105>= CUST.VEND.ADDR<4>    ; * Zip
      IF USER.TYPE='A' THEN
         IF PRO.REC<97>='' THEN
            IF OLD.CLASS # CLASSES THEN
               PRO.REC<97>=OLD.CLASS
            END
         END
      END
      PRO.REC<74> = CLASSES
      PRO.REC<75> = WEIGHTS
      PRO.REC<110>= AUDITOR.VIEWED       ; * 1=OLA Auditor viewed, 0=OLA, ''=Manual bill.
*dF      IF USER = 'DAVID' THEN CALL ELINE('PRESS BREAK')
      MISC.CHG.POS=DCOUNT(CLASSES<1>,@VM)          ; * Find out how many
      FOR MISC.CHG.CNT=1 TO MISC.CHG.POS
         PRO.REC<70,MISC.CHG.CNT>='FRT'
      NEXT MISC.CHG.CNT
      IF MISC.CHG.CODES#'' THEN
         PRO.REC<70,MISC.CHG.POS+1>=MISC.CHG.CODES
         PRO.REC<77,MISC.CHG.POS+1>=CONTR.MISC.CHG.AMTS
         PRO.REC<79,MISC.CHG.POS+1>=BENCH.MISC.CHG.AMTS
      END
      IF SU.FLAG THEN
         PRO.REC<39>=OLD.PRO.REC<39>
         PRO.REC<68>=OLD.PRO.REC<68>
         PRO.REC<54>=OLD.PRO.REC<54>
         PRO.REC<89>=OLD.PRO.REC<89>
         PRO.REC<95>=OLD.PRO.REC<95>
         PRO.REC<97>=OLD.PRO.REC<97>
      END
      PRO.REC<120>=ZIP.ARR<1>            ; * MV Zips
      PRO.REC<121>=ZIP.ARR<2>            ; * MV Cities
      PRO.REC<122>=ZIP.ARR<3>            ; * MV States
      PRO.REC<149>=ZIP.ARR<7>            ; * MV Miles JMK12
*DFIF DATE()=12716 AND (USER='MYRA' OR USER='DAVID') THEN
*DFPRO.REC<120>=OLD.PRO.REC<120>
*DFPRO.REC<121>=OLD.PRO.REC<121>
*DFPRO.REC<122>=OLD.PRO.REC<122>
*DFEND
      TEMP.ZIP.ARR=ZIP.ARR
      DEL TEMP.ZIP.ARR<1,1>
      DEL TEMP.ZIP.ARR<2,1>
      DEL TEMP.ZIP.ARR<3,1>
      DEL TEMP.ZIP.ARR<4,1>
      DEL TEMP.ZIP.ARR<5,1>
      DEL TEMP.ZIP.ARR<6,1>
      DEL TEMP.ZIP.ARR<7,1>              ; * JMK12
      IF CLIENT.ID='00574' AND IN.OUT='O' THEN
         PRO.REC<136>=TEMP.ZIP.ARR<4>
         PRO.REC<137>=TEMP.ZIP.ARR<2>
         PRO.REC<138>=TEMP.ZIP.ARR<3>
         PRO.REC<139>=TEMP.ZIP.ARR<1>
         PRO.REC<140>=TEMP.ZIP.ARR<5>
         PRO.REC<142>=TEMP.ZIP.ARR<6>
         CLIENT.CUST.TOT.WT=0
         X=DCOUNT(TEMP.ZIP.ARR<5>,CHAR(253))
         FOR I=1 TO X
            CLIENT.CUST.TOT.WT=CLIENT.CUST.TOT.WT+TEMP.ZIP.ARR<5,I>
         NEXT I
         NEW.TOT=''
         PRO.REC<31>=''
         PRO.REC<33>=''
         X=DCOUNT(TEMP.ZIP.ARR<5>,CHAR(253))
         TIMES=X-1
         IF TIMES => 1 THEN
            FOR I=1 TO TIMES
               IF CLIENT.CUST.TOT.WT+0=0 THEN
                  WT.PERCENT=1/X
               END ELSE
                  WT.PERCENT=TEMP.ZIP.ARR<5,I>/CLIENT.CUST.TOT.WT
               END
               PRO.REC<141,I>=(WT.PERCENT*ACTUAL.CHG)'R0'
               NEW.TOT=NEW.TOT+PRO.REC<141,I>
               LOCATE PRO.REC<142,I> IN PRO.REC<31> SETTING EXP.POS THEN
                  PRO.REC<33,EXP.POS>=PRO.REC<33,EXP.POS>+PRO.REC<141,I>
               END ELSE
                  PRO.REC<31,-1>=PRO.REC<142,I>
                  PRO.REC<33,-1>=PRO.REC<141,I>
               END
            NEXT I
         END
         PRO.REC<141,X>=ACTUAL.CHG-NEW.TOT
         LOCATE PRO.REC<142,X> IN PRO.REC<31> SETTING EXP.POS THEN
            PRO.REC<33,EXP.POS>=PRO.REC<33,EXP.POS>+PRO.REC<141,X>
         END ELSE
            PRO.REC<31,-1>=PRO.REC<142,X>
            PRO.REC<33,-1>=PRO.REC<141,X>
         END
         IF PRO.REC<31>='' THEN PRO.REC<31>=PRO.REC<5>
      END
      PRO.REC<123>=ADDRESS.CORRECTION.CHARGE       ; * For United Parcel Service
      PRO.REC<143>=LCC.AMOUNT            ; * JMK159
      PRO.REC<145>=LCC.ARRAY<1>          ; * JMK159
      PRO.REC<146>=LCC.ARRAY<2>          ; * JMK159
      PRO.REC<147>=LCC.CARRIER           ; * JMK159
      PRO.REC<148>=UPS.FEE.CHARGE        ; * For United Parcel Service; * JMK11
      PRO.REC<150>=TL.BILL.MILES         ; * JMK12
      IF AIR.CHRG.CODES#'' THEN          ; * JMK81
         PRO.REC<151>=AIR.CHRG.CODES     ; * JMK81
         PRO.REC<152>=AIR.CHRG.AMTS      ; * JMK81
*        DTL.OUT<40>=AIR.CHRG.CODES      ; * JMK149 ; * JMK151
*        DTL.OUT<44>=AIR.CHRG.AMTS       ; * JMK149 ; * JMK151
         FRT.ARRAY=''                    ; * JMK149
         MIS.ARRAY=''                    ; * JMK149
         GOSUB RECALC.FB.DETAILS         ; * JMK149
*NPR031      END ELSE                           ; * JMK81
      END                                ; * NPR031

      IF INTL.CHRG.CODES#'' THEN         ; * JMK81              ; * NPR031
         PRO.REC<151>=INTL.CHRG.CODES    ; * JMK81              ; * NPR031
         PRO.REC<152>=INTL.CHRG.AMTS     ; * JMK81              ; * NPR031
*        DTL.OUT<40>=INTL.CHRG.CODES      ; * JMK149 ; * JMK151  ; * NPR031
*        DTL.OUT<44>=INTL.CHRG.AMTS       ; * JMK149 ; * JMK151  ; * NPR031
         FRT.ARRAY=''                    ; * JMK149             ; * NPR031
         MIS.ARRAY=''                    ; * JMK149             ; * NPR031
         GOSUB RECALC.FB.DETAILS         ; * JMK149             ; * NPR031
      END                                ; * NPR031

      IF DTL.CHRG.CODES #'' THEN         ; * JMK81  ; * NPR031
         PRO.REC<151>=DTL.CHRG.CODES     ; * JMK12
         PRO.REC<152>=DTL.CHRG.AMTS      ; * JMK12
         PRO.REC<218>=MISC.REASON        ; * JMK157
*        DTL.OUT<40>=DTL.CHRG.CODES      ; * JMK149 ; * JMK151
*        DTL.OUT<44>=DTL.CHRG.AMTS       ; * JMK149 ; * JMK151
         FRT.ARRAY=''                    ; * JMK149
         MIS.ARRAY=''                    ; * JMK149
         GOSUB RECALC.FB.DETAILS         ; * JMK149
      END                                ; * JMK81
*     IF DTL.CHRG.CODES#'' AND FRT.ARRAY<1>='' THEN          ; * JMK19 ; * JMK81
      IF FRT.ARRAY<1>='' THEN            ; * JMK81
         IF AIR.CHRG.CODES#'' THEN       ; * JMK81
            DTL.OUT<40>=AIR.CHRG.CODES   ; * JMK81
            DTL.OUT<44>=AIR.CHRG.AMTS    ; * JMK81
            GOSUB RECALC.FB.DETAILS      ; * JMK19
         END                             ; * JMK81

         IF INTL.CHRG.CODES#'' THEN      ; * JMK81 ; * NPR031
            DTL.OUT<40>=INTL.CHRG.CODES  ; * JMK81 ; * NPR031
            DTL.OUT<44>=INTL.CHRG.AMTS   ; * JMK81 ; * NPR031
            GOSUB RECALC.FB.DETAILS      ; * JMK19 ; * NPR031
         END                             ; * JMK81 ; * NPR031

         IF DTL.CHRG.CODES#'' THEN       ; * JMK81
            DTL.OUT<40>=DTL.CHRG.CODES   ; * JMK81
            DTL.OUT<44>=DTL.CHRG.AMTS    ; * JMK81
            GOSUB RECALC.FB.DETAILS      ; * JMK19
         END                             ; * JMK81
      END                                ; * JMK19
      FOR ATT=1 TO 6                     ; * JMK14
         PRO.REC<152+ATT>=FRT.ARRAY<ATT>           ; * JMK14
         PRO.REC<158+ATT>=MIS.ARRAY<ATT>           ; * JMK14
      NEXT ATT                           ; * JMK14
      PRO.REC<166>=DISC.DESC             ; * JMK34
      FOR UATT=1 TO 6                    ; * JMK49
         PRO.REC<182+UATT>=UFLDS<UATT>   ; * JMK49
      NEXT UATT                          ; * JMK49
      IF CLIENT.ID='01700' THEN
         PRO.REC<183>=VC.CODE
      END
      IF CLIENT.ITM<147>='89997' THEN    ; * JMK154
         UP.VC.DESC=OCONV(VC.DESC,'MCU')           ; * JMK154
         IF VC.TYPE='I' OR INDEX(UP.VC.DESC,'AIRGAS',1) THEN           ; * JMK154
            READV DEST.AG.BRANCH FROM F.ALOC.ZIP,DEST.ZIP,1 ELSE DEST.AG.BRANCH=''         ; * JMK154
            READV ORIG.AG.BRANCH FROM F.ALOC.ZIP,ORIG.ZIP,1 ELSE ORIG.AG.BRANCH=''         ; * JMK154
         END ELSE                        ; * JMK154
            ORIG.AG.BRANCH=''            ; * JMK154
            DEST.AG.BRANCH=''            ; * JMK154
         END                             ; * JMK154
         IF ORIG.AG.BRANCH='' OR DEST.AG.BRANCH='' THEN      ; * JMK154
            AG.SHIP='OTHER'              ; * JMK154
         END ELSE                        ; * JMK154
            IF ORIG.AG.BRANCH=DEST.AG.BRANCH THEN  ; * JMK154
               AG.SHIP='INTRA'           ; * JMK154
            END ELSE                     ; * JMK154
               AG.SHIP='INTER'           ; * JMK154
            END                          ; * JMK154
         END                             ; * JMK154
         PRO.REC<188>=AG.SHIP            ; * JMK154
      END                                ; * JMK154
      PRO.REC<199>=CONTR.FSC.PARMS       ; * JMK61
      PRO.REC<200>=BENCH.FSC.PARMS       ; * JMK61
      PRO.REC<201>=AFS.FSC.PARMS         ; * JMK61
      PRO.REC<202>=MISROUTE.ARRAY<3>     ; * JMK62
*     IF CARR.FSC='Y' THEN               ; * JMK65 ; * JMK159
      IF CARR.FSC='Y' OR CARR.FSC='C' THEN         ; * JMK65 ; * JMK159
         PRO.REC<204>=BENCH.FSC.PARMS<1,7>-AFS.FSC.PARMS<1,7>          ; * JMK65
      END                                ; * JMK65
      PRO.REC<205>=BOL.DIST              ; * JMK84
*DF      IF (IN.OUT='I' AND CLIENT.ID#'01105') OR (IN.OUT='O' AND CLIENT.ID='01105') THEN
*     IF ORIG.ZIP MATCH('1A1N1A1N1A1N') AND (CLIENT.ID='00978' OR CLIENT.ID='01105') THEN; * JMK112
      IF ORIG.ZIP MATCH('1A1N1A1N1A1N') AND (CLIENT.ID='00978' OR CLIENT.ID='01105' OR CLIENT.ID='01428') THEN           ; * JMK112
         PRO.REC<124>=DIDUTY<2,1>
         PRO.REC<125>=''
         PRO.REC<126>=''
         PRO.REC<127>=''
         PRO.REC<128>=''
         PRO.REC<129>=''
         PRO.REC<130>=''
         PRO.REC<131>=''
         PRO.REC<132>=''
      END
*DF      IF (IN.OUT='O' AND CLIENT.ID#'01105') OR (IN.OUT='I' AND CLIENT.ID='01105') THEN
*     IF DEST.ZIP MATCH('1A1N1A1N1A1N') AND (CLIENT.ID='00978' OR CLIENT.ID='01105') THEN; * JMK112
      IF DEST.ZIP MATCH('1A1N1A1N1A1N') AND (CLIENT.ID='00978' OR CLIENT.ID='01105' OR CLIENT.ID='01428') THEN           ; * JMK112
         PRO.REC<124>=''
         PRO.REC<125>=DODUTY<2,1>
         PRO.REC<126>=DODUTY<2,2>
         PRO.REC<127>=DODUTY<2,3>
         PRO.REC<128>=DODUTY<2,4>
         IF DODUTY<2,1>+0#0 THEN
            PRO.REC<129>=(DODUTY<2,1>/CONVERSION.RATE*10000)'R0'
         END
         IF DODUTY<2,2>+0#0 THEN
            PRO.REC<130>=(DODUTY<2,2>/CONVERSION.RATE*10000)'R0'
         END
         IF DODUTY<2,3>+0#0 THEN
            PRO.REC<131>=(DODUTY<2,3>/CONVERSION.RATE*10000)'R0'
         END
         IF DODUTY<2,4>+0#0 THEN
            PRO.REC<132>=(DODUTY<2,4>/CONVERSION.RATE*10000)'R0'
         END
      END
      IF (ORIG.ZIP MATCH ('1A1N1A1N1A1N') OR DEST.ZIP MATCH('1A1N1A1N1A1N')) AND (CLIENT.ID='01460') THEN      ; * JMK112
         PRO.REC<124>=''                 ; * JMK112
         PRO.REC<125>=DODUTY<2,1>        ; * JMK112
         PRO.REC<126>=DODUTY<2,2>        ; * JMK112
         PRO.REC<127>=DODUTY<2,3>        ; * JMK112
         PRO.REC<128>=DODUTY<2,4>        ; * JMK112
      END                                ; * JMK112
      PRO.REC<213>=FB.NOTE               ; * JMK111
      PRO.REC<217>=VAR.ARR<10>           ; * JMK154 - DISCOUNT CLASS
      PRO.REC<217>=VAR.ARR<11>           ; * JMK154 - OVERCHARGE CLASS WILL REPLACE ANY DISCOUNT CLASS
      PRO.REC<218>=MISC.REASON           ; * JMK157
      PRO.REC<220>=TRANSIT.TIME          ; * JMK175
      IF LCC.ARRAY<24>#'' THEN           ; * JMK175
         PRO.REC<221>=LCC.ARRAY<24>      ; * JMK175
      END ELSE                           ; * JMK175
         PRO.REC<221>=MISROUTE.ARRAY<5>  ; * JMK175
      END                                ; * JMK175
      IF CLIENT.ID = '01053' THEN        ; * NPR10
         PRO.REC<183>=BOL.ACCRUAL.COST   ; * NPR10
      END                                ; * NPR10
      PRO.REC<224>=LCC.ARRAY<7>          ; * JMK159

*NPR020 Start Changes
      IF ORIG.ZIP = "99999" THEN
         ORIG.COUNTRY.CD = COUNTRY.LIST<1,1>
      END ELSE
         ORIG.COUNTRY.CD = "US"
      END
      IF LEN(ORIG.ZIP) = "6" AND ORIG.ZIP MATCH ('1A1N1A1N1A1N') THEN ORIG.COUNTRY.CD = "CA"         ; * Canada
      PRO.REC<222>=ORIG.COUNTRY.CD

      IF DEST.ZIP = "99999" THEN
         DEST.COUNTRY.CD = COUNTRY.LIST<2,1>
      END ELSE
         DEST.COUNTRY.CD = "US"
      END

      IF LEN(DEST.ZIP) = "6" AND DEST.ZIP MATCH ('1A1N1A1N1A1N') THEN DEST.COUNTRY.CD = "CA"         ; * Canada
      PRO.REC<223>=DEST.COUNTRY.CD
*NPR020 End Changes

      IF VC.OVERRIDE="Y" AND LCC.OVR.AMOUNT+0#0 THEN         ; * JMK188
         PRO.REC<227>=LCC.OVR.AMOUNT     ; * JMK188
         PRO.REC<228>=LCC.OVR.CARRIER    ; * JMK188
         PRO.REC<229>=13513              ; * JMK188
         PRO.REC<230>='NEVER'            ; * JMK188
         PRO.REC<231>='On file when reason system started'   ; * JMK188
         PRO.REC<232>='Logistics Dept'   ; * JMK188
         PRO.REC<233>=13513              ; * JMK188
         PRO.REC<234>=46800              ; * JMK188
      END                                ; * JMK188


      IF CHANGE.FLAG THEN
*NPR06         WRITE OLD.PRO.ID:@FM:USER:@FM:PRO.ID:@FM:OLD.PRO.REC<8> ON F.DEL.BILLS, DATE():'*':TIME()
         WRITE OLD.PRO.ID:@FM:USER:@FM:PRO.ID:@FM:OLD.PRO.REC<8> ON F.DEL.BILLS, DATE():'*':T.TIME   ; *NPR06
         DELETE F.BILLS,OLD.PRO.ID
         DELETE F.HIST,OLD.PRO.ID
         DELETE F.CRX,OLD.PRO.ID
         DELETE F.OPEN,CLIENT.ID:'*':OLD.PRO.ID
         DELETE F.PRE.OPEN,CLIENT.ID:'*':OLD.PRO.ID          ; *NPR01
      END
*     IF VOIDED THEN
*        WRITEV VOID.DESC ON F.HIST,OLD.PRO.ID,42
*        PRO.REC<39> = 'V'
*     END
      IF PRO.REC<37> = '' ! VERSION GT 0 THEN
         IF CLIENT.ID # '00000' THEN WRITE PRO.REC ON F.BILLS,PRO.ID
      END
      IF OLD.PRO.REC='' THEN
         ERR=0
*DF     IF USER='OWEN' AND CLIENT.ID[1,2]#'99' THEN ERR=1
*DF     IF USER='FPMGR' THEN ERR=1
*DF     IF USER='JANET' THEN ERR=1
         IF SU.FLAG THEN ERR=1
         IF FRT.FLAG THEN ERR=1
         IF ERR THEN
            CALL ELINE('You are entering new bills under the user ':USER:'.')
            CC+=1 ; GOSUB PRINT.CC
         END
      END
      IF PRO.REC<37>#'' THEN
         COMM.VIN=PRO.ID
         COMM.VIN<2>=CLIENT.REC(84)
         COMM.VIN<3>=CLIENT.REC(34)
         COMM.VIN<4>=CLIENT.REC(33)
         COMM.VIN<5>=CLIENT.REC(85)
         COMM.VIN<6>=CLIENT.REC(88)      ; * JMK42
         COMM.VIN<7>=CARRIER.ID
         COMM.VIN<8>=CLIENT.ID
         COMM.VIN<9>=USER
         COMM.VIN<10>=CLIENT.REC(131)
         COMM.VIN<13>=CLIENT.REC(187)    ; * JMK42
         COMM.VIN<14>=CLIENT.REC(200)    ; * JMK93
         COMM.VIN<15>=CLIENT.REC(208)    ; * JMK93
         COMM.VIN<16>=CLIENT.REC(209)    ; * JMK93
         COMM.VIN<17>=CLIENT.REC(210)    ; * JMK93
         COMM.VIN<18>=CLIENT.REC(211)    ; * JMK93
         COMM.VIN<19>=CLIENT.REC(212)    ; * JMK93
         COMM.VIN<20>=CLIENT.REC(213)    ; * JMK93
         COMM.VIN<21>=CLIENT.REC(214)    ; * JMK100
         COMM.VIN<22>=CLIENT.REC(215)    ; * JMK100
         COMM.VIN<23>=CLIENT.REC(216)    ; * JMK100
         COMM.VIN<24>=CLIENT.REC(217)    ; * JMK100
         COMM.VIN<25>=CLIENT.REC(218)    ; * JMK100
         COMM.VIN<26>=CLIENT.REC(219)    ; * JMK100
         COMM.VIN<28>=CLIENT.REC(268)    ; * JMK192
         IF BAL.DUE THEN                 ; * JMK190
            COMM.VIN<27>=OLD.OVC.COM     ; * JMK190
         END                             ; * JMK190
         CALL CALC.COMMISSION(PRO.REC,COMM.VIN,COMM.VOUT)
         DISCOUNT.COMM=COMM.VOUT<1>
         OVERCHG.COMM=COMM.VOUT<2>
         CONSULTING.COMM=COMM.VOUT<3>
         EXP.DIST.COMM=COMM.VOUT<4>
         MGMT.SVC.COMM=COMM.VOUT<5>
         MISR.CONS.COMM=COMM.VOUT<6>     ; * JMK62
         PRO.REC<42>=DISCOUNT.COMM
         PRO.REC<43>=OVERCHG.COMM
         PRO.REC<44>=CONSULTING.COMM
         PRO.REC<32>=EXP.DIST.COMM
         PRO.REC<165>=MGMT.SVC.COMM
         PRO.REC<203>=MISR.CONS.COMM     ; * JMK62 - MISR COMM FOR MISR VARIANCES
      END
*DFIF DATE()=12716 AND (USER='MYRA' OR USER='DAVID') THEN
*DFPRO.REC<133>=OLD.PRO.REC<133>
*DFPRO.REC<134>=OLD.PRO.REC<134>
*DFPRO.REC<135>=OLD.PRO.REC<135>
*DFEND
      WRITE PRO.REC ON F.HIST,PRO.ID
      IF PRO.REC<39="R" AND PRO.REC<66>="E" THEN   ; * JMK186
         ORB.SL.ID='ORB.':CLIENT.ID      ; * JMK186
         READ ORB.SL.REC FROM F.SL,ORB.SL.ID ELSE ORB.SL.REC=''        ; * JMK186
         LOCATE PRO.ID IN ORB.SL.REC SETTING LPOS ELSE       ; * JMK186
            ORB.SL.REC<-1>=PRO.ID        ; * JMK186
            WRITE ORB.SL.REC ON F.SL,ORB.SL.ID     ; * JMK186
         END                             ; * JMK186
      END                                ; * JMK186
      LOCATE 'MISC' IN PRO.REC<151> SETTING MPOS THEN        ; * JMK157
         OLD.MISC.CNT=COUNT(OLD.PRO.REC<151>,'MISC')         ; * JMK158
         NEW.MISC.CNT=COUNT(PRO.REC<151>,'MISC')   ; * JMK158
         IF NEW.MISC.CNT>OLD.MISC.CNT THEN         ; * JMK158
            SLSMAN.NAME=SALESMAN.REC<1>  ; * JMK157
            DISC.AMT=-PRO.REC<10>        ; * JMK157
            VIN<1>=PROG.NAME             ; * JMK157
            VIN<2>=PROG.DESC             ; * JMK157
            VIN<3>=PACK.NAME             ; * JMK157
            VIN<4>=CO.NAME               ; * JMK157
            VIN<5>=OCONV(TIME(),'MTH'):' ':OCONV(DATE(),'D2/')         ; * JMK157
            VIN<6>=CLIENT.ID             ; * JMK157
            VIN<7>=CARRIER.ID            ; * JMK157
            VIN<8>=PRO.ID                ; * JMK157
            VOUT=''                      ; * JMK157
            CALL GET.FB.INFO(VIN,VOUT,CLIENT.ITM,CARRIER.REC,PRO.REC)  ; * JMK157
            MESSAGE='On ':oconv(DATE(),'D2/'):' at ':OCONV(TIME(),'MTHS'):', ':USER.NAME:' entered a MISC code in the FB Details for:'       ; * JMK157
            MESSAGE<1,-1>=' '            ; * JMK157
            MESSAGE<1,-1>=VOUT           ; * JMK157
            SUBJECT=CLIENT.NAME:' - ':CLIENT.ID:', ':SLSMAN.NAME:', ':PRO.ID:' MISC FB Details'      ; * JMK157
            FROM_ADD='FB_Entry@afs.net'  ; * JMK157
            TO_ADD=''                    ; * JMK157
            CC_ADD=''                    ; * JMK157
            BCC_ADD=''                   ; * JMK157
*           TO_ADD<1,-1>='OHolman@afs.net'         ; * JMK157
***            TO_ADD<1,-1>='MButts@afs.net'          ; * JMK157
            TO_ADD<1,-1>='McMkay@afs.net'          ; * JMK157
*           BCC_ADD<1,-1>='MKerbow@afs.net'        ; * JMK157
            EMAIL.OUT=''                 ; * JMK157
            EMAIL.OUT<1>=TO_ADD          ; * JMK157
            EMAIL.OUT<2>=CC_ADD          ; * JMK157
            EMAIL.OUT<3>=BCC_ADD         ; * JMK157
            EMAIL.OUT<4>=FROM_ADD        ; * JMK157
            EMAIL.OUT<5>=SUBJECT         ; * JMK157
            EMAIL.OUT<6>=MESSAGE         ; * JMK157
            EMAIL.OUT<7>=1               ; * JMK157
            CALL SENDMAIL(EMAIL.OUT,RESULT)        ; * JMK157
         END                             ; * JMK158
      END                                ; * JMK157
      IF CLIENT.ID='00664' THEN          ; * JMK105
         EXP.LIST=PRO.REC<31>            ; * JMK105
         GOOD.TO.GO=1                    ; * JMK105
         NEXP=DCOUNT(EXP.LIST,@VM)       ; * JMK105
         IF ORIG.ZIP='' THEN GOOD.TO.GO=0          ; * JMK105
         IF DEST.ZIP='' THEN GOOD.TO.GO=0          ; * JMK105
         IF IN.OUT='' THEN GOOD.TO.GO=0  ; * JMK105
         IF VC.ID='' THEN GOOD.TO.GO=0   ; * JMK105
         IF EXP.LIST='' THEN GOOD.TO.GO=0          ; * JMK105
         IF NEXP > 1 THEN GOOD.TO.GO=0   ; * JMK105
         IF GOOD.TO.GO THEN              ; * JMK105
            EXP.MAT.ID=ORIG.ZIP:'*':DEST.ZIP:'*':IN.OUT:'*':VC.ID      ; * JMK105
            READU EXP.MAT.REC FROM F.EXP.MAT,EXP.MAT.ID ELSE EXP.MAT.REC=''      ; * JMK105
            EXP.MAT.ORG=EXP.MAT.REC      ; * JMK105
            LOCATE EXP.LIST IN EXP.MAT.REC<1> SETTING EPOS ELSE        ; * JMK105
               EXP.MAT.REC<1,-1>=EXP.LIST          ; * JMK105
            END                          ; * JMK105
            IF EXP.MAT.REC#EXP.MAT.ORG THEN        ; * JMK105
               WRITE EXP.MAT.REC ON F.EXP.MAT,EXP.MAT.ID     ; * JMK105
            END                          ; * JMK105
            RELEASE F.EXP.MAT,EXP.MAT.ID           ; * JMK105
         END                             ; * JMK105
      END                                ; * JMK105
      GOSUB GET.ALLOW.DISCOUNTS          ; * JMK34
*     IF ALLOW.DISCOUNTS=0 AND PRO.REC<10>+0#0 THEN          ; * JMK34; * JMK38
      IF ALLOW.DISCOUNTS=0 AND PRO.REC<10>+0#0 AND VERSION=0 THEN      ; * JMK34; * JMK38
         SLSMAN.NAME=SALESMAN.REC<1>     ; * JMK34
         DISC.AMT=-PRO.REC<10>           ; * JMK34
         VIN<1>=PROG.NAME                ; * JMK34
         VIN<2>=PROG.DESC                ; * JMK34
         VIN<3>=PACK.NAME                ; * JMK34
         VIN<4>=CO.NAME                  ; * JMK34
         VIN<5>=OCONV(TIME(),'MTH'):' ':OCONV(DATE(),'D2/')  ; * JMK34
         VIN<6>=CLIENT.ID                ; * JMK34
         VIN<7>=CARRIER.ID               ; * JMK34
         VIN<8>=PRO.ID                   ; * JMK34
         VOUT=''                         ; * JMK34
         CALL GET.FB.INFO(VIN,VOUT,CLIENT.ITM,CARRIER.REC,PRO.REC)     ; * JMK34
         MESSAGE=VOUT                    ; * JMK34
         MESSAGE<1,-1>=' '               ; * JMK34
*        MESSAGE<1,-1>='Explanation to management for discount : ':PRO.REC<166>  ; * JMK34 ; * JMK58
         MESSAGE<1,-1>='Explanation to management for discount : ':DISC.DESC     ; * JMK34 ; * JMK58
         SUBJECT=CLIENT.NAME:' - ':CLIENT.ID:', ':SLSMAN.NAME:', ':CL.AUDITOR:' for $':DISC.AMT'R26,'          ; * JMK34
         FROM_ADD='CustomerService@afs.net'        ; * JMK34
         TO_ADD=''                       ; * JMK34
         CC_ADD=''                       ; * JMK34
         BCC_ADD=''                      ; * JMK34
         TO_ADD<1,-1>=USER.EMAIL         ; * JMK34
         CC_ADD<1,-1>='BBarker@afs.net'  ; * JMK34
         CC_ADD<1,-1>='KGilbert@afs.net'           ; * JMK34
         CC_ADD<1,-1>='OHolman@afs.net'  ; * JMK34
***         CC_ADD<1,-1>='MButts@afs.net'   ; * JMK34
         CC_ADD<1,-1>='SMatthews@afs.net'          ; * JMK34
         CC_ADD<1,-1>='BPBarker@afs.net'           ; * JMK34
*        BCC_ADD<1,-1>='mkerbow@afs.net'  ; * JMK34
         EMAIL.OUT=''                    ; * JMK34
         EMAIL.OUT<1>=TO_ADD             ; * JMK34
         EMAIL.OUT<2>=CC_ADD             ; * JMK34
         EMAIL.OUT<3>=BCC_ADD            ; * JMK34
         EMAIL.OUT<4>=FROM_ADD           ; * JMK34
         EMAIL.OUT<5>=SUBJECT            ; * JMK34
         EMAIL.OUT<6>=MESSAGE            ; * JMK34
         EMAIL.OUT<7>=1                  ; * JMK34
         CALL SENDMAIL(EMAIL.OUT,RESULT)           ; * JMK34
      END                                ; * JMK34
      IF LOOKUP.ONLY THEN
*df         IF LOOKUP.ONLY.REASON='This carrier is not Active.  Lookup Only.' OR LOOKUP.ONLY.REASON='Old Pro Format - Lookup Item only' THEN
         IF CARRIER.REC<89>='I' THEN
            IF PRO[PRO.LEN-1,2]='AD' OR PRO[PRO.LEN-1,2]='BD' THEN
               FBVIN=''
               FBVIN<1>=PROG.NAME
               FBVIN<2>=PROG.DESC
               FBVIN<3>=PACK.NAME
               FBVIN<4>=CO.NAME
               FBVIN<5>=OCONV(TIME(),'MTH'):' ':OCONV(DATE(),'D2/')
               FBVIN<6>=CLIENT.ID
               FBVIN<7>=CARRIER.ID
               FBVIN<8>=PRO.ID
               FBVOUT=''
               CALL GET.FB.INFO(FBVIN,FBVOUT,CLIENT.ITM,CARRIER.REC,PRO.REC)
               NTEXT=FBVOUT
               NTEXT<1,-1>=' '
               MVIN=''
***               MVIN<1>='MButts@afs.net'
               MVIN<2>='OHolman@afs.net'
               MVIN<4>='AFS'
               SUBJ=USER:' entered a bill for an inactive carrier.'
               MVIN<5>=SUBJ
               MVIN<6>=NTEXT
               CALL SENDMAIL(MVIN,MVOUT)
            END
         END
      END
*     COS.UPD=1                          ; * JMK03; * JMK06
*     IF PRO.REC<37>="" THEN COS.UPD=0   ; * JMK03; * JMK06
*     IF PRO.REC<39>="R" THEN COS.UPD=0  ; * JMK03; * JMK06
*     IF FIELD(PRO.ID,'*',3)#"0" THEN COS.UPD=0    ; * JMK03; * JMK06
*     IF COS.UPD THEN                    ; * JMK03; * JMK06
*        WRITE PRO.REC ON F.COGNOS.UPDATE,CARRIER.ID:'*':PRO           ; * JMK03; * JMK06
*     END                                ; * JMK03; * JMK06
      IF USER='OWEN' THEN
         CRT @(0,23):'Owen press break!':
         INPUT NUL
      END

      VIN=USER                           ; * User 'MCU' That Gets Credit
      VIN<2>=TIME()                      ; * Current Time
      VIN<3>=DATE()                      ; * Bill Date (Use Today)
      VIN<4>='E'                         ; * "E"ntered
      VIN<5>=CLIENT.ID                   ; * Client entered
      VIN<6>=CC                          ; * Characters Keyed
      IF OLD.PRO.REC='' THEN VIN<7>=1    ; * New Bill (Not Changed)
      IF OLD.PRO.REC<39>='R' AND PRO.REC<39>#'R' THEN VIN<7>=1         ; * Give them Credit for "Approving" a rejected bill
      VIN<8>=LAST.CLIENT.KEYED
      VIN<9>=CLIENT.START.TIME
      VIN<10>=CHR.START.TIME             ; * JMK27
      VIN<11>=TIME()                     ; * JMK27
      CALL EMP.PERF.UPDATE(VIN,VOUT,F.EMP.HR.PERF,F.EMP.DY.PERF)
      LAST.CLIENT.KEYED=VOUT
      IF CLIENT.ID = '00000' THEN
*DF         WRITE PRO.REC ON F.OPEN.BILLS,PRO.ID
      END
      CC=0
      CHR.START.TIME=TIME()              ; * JMK27
*
* NPR14 Start Changes
*
      IF CHANGED.TO.EVENTUAL.PAY THEN
         READ TPRO.REC FROM F.BILLS,PRO.ID ELSE TPRO.REC = PRO.REC     ; * NPR14

         TPRO.REC<66> = "E"              ; * NPR14
         TPRO.REC<37> = ""               ; * NPR14
         WRITE TPRO.REC TO F.BILLS, PRO.ID         ; * NPR14
      END
*
* NPR14 End Changes
*

*NPR033 Start Changes to update UPS.SCHED and UPS.SCHED.HIST files
      IF CARRIER.ID = '00041' THEN
         ACTIVITY.CODE = 1
         ACT.TRANS.DATE = BILL.DATE
         GOSUB UPD.UPS.SCHED

         IF DUE.DATE = "" THEN DUE.DATE = BILL.DATE + 11     ; * Default For UPS
         ACTIVITY.CODE = 2
         ACT.TRANS.DATE = DUE.DATE
         GOSUB UPD.UPS.SCHED
      END
*NPR033 End changes

      IF CHANGE.FLAG THEN
         IF PRO.REC<37> # '' THEN
*DF         IF PRO.REC<37> # '' AND PRO.REC<14>='' THEN
            READ DFOX FROM F.FOX,PRO.REC<37> ELSE DFOX=''
            FOX.ID=CLIENT.ID:"*":OLD.PRO.ID
            LOCATE FOX.ID IN DFOX SETTING POS THEN
               DEL DFOX<POS>
            END
            IF PRO.REC<8>#0 THEN
               READ TEST.REC FROM F.PRE.OPEN, CLIENT.ID:'*':PRO.ID ELSE          ; *NPR01
                  DFOX<-1>=CLIENT.ID:"*":PRO.ID
                  WRITE DFOX ON F.FOX,PRO.REC<37>
                  PRO.REC<133>=DOPEN.REC<133>
                  PRO.REC<134>=DOPEN.REC<134>
                  PRO.REC<135>=DOPEN.REC<135>
                  WRITE PRO.REC ON F.OPEN,CLIENT.ID:'*':PRO.ID
               END                       ; *NPR01
            END ELSE
               DELETE F.OPEN,CLIENT.ID:'*':PRO.ID
               DELETE F.PRE.OPEN,CLIENT.ID:'*':PRO.ID        ; * Check if OK
               IF CARRIER.ID = "00642" OR CARRIER.ID = "03029" OR CARRIER.ID = "08519" THEN          ; *NPR09
                  GOSUB SEND.ZERO.EMAIL  ; *NPR09
               END                       ; *NPR09
            END
            CHANGE = (PRO.REC<8>+PRO.REC<42>+PRO.REC<43>+PRO.REC<44>)-(OLD.PRO.REC<8>+OLD.PRO.REC<42>+OLD.PRO.REC<43>+OLD.PRO.REC<44>)
*DF            IF CHANGE # 0 THEN
            IF (PRO.REC<8>#OLD.PRO.REC<8>) OR (PRO.REC<10>#OLD.PRO.REC<10>) OR (PRO.REC<11>#OLD.PRO.REC<11>) OR (PRO.REC<12>#OLD.PRO.REC<12>) THEN
               GOSUB WRITE.MODS
            END
         END
      END
*
* Update Fedex invoice file
*
      IF VERSION=0 THEN
         IF PRO.REC<94>#'' THEN
            READ DINV.XREF FROM F.INV.XREF,PRO.REC<94> ELSE DINV.XREF=''
            LOCATE PRO.ID IN DINV.XREF BY 'AR' SETTING INV.POS ELSE
               INS PRO.ID BEFORE DINV.XREF<INV.POS>
               WRITE DINV.XREF ON F.INV.XREF,PRO.REC<94>
            END
         END
         IF CHANGE.FLAG THEN
            IF OLD.PRO.ID#PRO.ID OR OLD.INV#PRO.REC<94> THEN
               IF OLD.INV#PRO.REC<94> THEN
                  READ DINV.XREF FROM F.INV.XREF,OLD.INV THEN
                     LOCATE OLD.PRO.ID IN DINV.XREF BY 'AR' SETTING INV.POS THEN
                        DEL DINV.XREF<INV.POS>
                        IF DINV.XREF='' THEN
                           DELETE F.INV.XREF,OLD.INV
                        END ELSE
                           WRITE DINV.XREF ON F.INV.XREF,OLD.INV
                        END
                     END
                  END
               END ELSE
                  IF OLD.PRO.ID#PRO.ID THEN
                     READ DINV.XREF FROM F.INV.XREF,PRO.REC<94> THEN
                        LOCATE OLD.PRO.ID IN DINV.XREF BY 'AR' SETTING INV.POS THEN
                           DEL DINV.XREF<INV.POS>
                           IF DINV.XREF='' THEN
                              DELETE F.INV.XREF,PRO.REC<94>
                           END ELSE
                              WRITE DINV.XREF ON F.INV.XREF,PRO.REC<94>
                           END
                        END
                     END
                  END
               END
            END
         END
      END

*
* Update freight bill cross reference (skeletal) record
*
      IF SEQ.FLAG ELSE
         REC = ''
         REC<1> = CLIENT.ID
         REC<2> = BILL.DATE
         REC<7> = PRO.REC<7>
         REC<8> = PRO.REC<8>
         REC<10> = PRO.REC<10>
         REC<11> = PRO.REC<11>
         REC<12> = PRO.REC<12>
         REC<30> = PRO.REC<30>
         REC<37> = PRO.REC<37>
         REC<39> = PRO.REC<39>
         REC<41> = PRO.REC<41>
         REC<53> = PRO.REC<53>
         REC<54> = PRO.REC<54>
         REC<55> = PRO.REC<55>
         REC<63> = PRO.REC<63>
         IF CLIENT.ID[1,2]='99' ELSE
            WRITE REC ON F.CRX,PRO.ID
         END
      END
      IF PRO.REC<37>#'' THEN             ; * JMK82
         STMT='COGNOS OLEDBAFS ':CLIENT.ID:' ':PRO.REC<37>'D2/':' ':PRO.REC<37>'D2/':' ':PRO.ID      ; * JMK82
*        STMT='UPDATE.SQL.FBHIST OLEDBAFS ':CLIENT.ID:' ':PRO.REC<37>'D2/':' ':PRO.REC<37>'D2/':' ':PRO.ID     ; * JMK144
         EXECUTE STMT                    ; * JMK82
         IF CLIENT.ID='10356' THEN       ; * JMK123
            SVIN=''                      ; * JMK02
            SVOUT=''                     ; * JMK02
            SVIN<1>=CLIENT.ID            ; * JMK02
            SVIN<2>=PRO.ID               ; * JMK02
            SVIN<3>='D'                  ; * JMK02
            CALL UPDATE.FB.SUMMARY(SVIN,SVOUT,OLD.PRO.REC,F.SUMM)      ; * JMK02
            SVIN=''                      ; * JMK02
            SVOUT=''                     ; * JMK02
            SVIN<1>=CLIENT.ID            ; * JMK02
            SVIN<2>=PRO.ID               ; * JMK02
            SVIN<3>='A'                  ; * JMK02
            CALL UPDATE.FB.SUMMARY(SVIN,SVOUT,PRO.REC,F.SUMM)          ; * JMK02
         END                             ; * JMK123
         OPEN '','EDI.BILLS.HIST,':CLIENT.ID TO F.EDI.BILLS.HIST THEN  ; * JMK145
            READ EDI.HIST.REC FROM F.EDI.BILLS.HIST,PRO.ID ELSE        ; * JMK145
               EDI.HIST.REC=''           ; * JMK145
            END                          ; * JMK145
         END ELSE                        ; * JMK145
            EDI.HIST.REC=''              ; * JMK145
         END                             ; * JMK145
         IF CL.DIV.FLAG='Y' THEN         ; * JMK145
            READ DIV.ITM FROM F.DIV,DIVISION ELSE DIV.ITM=''           ; * JMK145
         END ELSE                        ; * JMK145
            DIV.ITM=''                   ; * JMK145
         END                             ; * JMK145
         SQLVIN=''                       ; * JMK145
         SQLVIN<1>=USER                  ; * JMK145
         SQLVIN<2>=CLIENT.ID             ; * JMK145
         SQLVIN<3>=PRO.ID                ; * JMK145
         SQLVIN<5>=LI.CODES<1>           ; * JMK145
         SQLVIN<6>=LI.CODES<3>           ; * JMK145
         SQLVOUT=''                      ; * JMK145
         CALL UPD.SQL.FBHIST.SUB(SQLVIN,SQLVOUT,CLIENT.ITM,DIV.ITM,VC.REC,PRO.REC,EDI.HIST.REC)      ; * JMK145
      END                                ; * JMK82
      RETURN

*----
*---- INTERNAL SUBROUTINES
*----


INITIALIZE.GENERAL.VARIABLES: ***
      BELL=CHAR(7)
      SENT.TO.PCMILER=0
      CARRIER.NAME='' ; CARRIER.STREET='' ; CARRIER.CITY=''
      CARRIER.STATE=''
      TRANS.MODE='' ; MISC.CHARGE='' ; T.MODE.BY.WGT=''
      DATE.BY.CARRIER=0
      START.DATE=''
      OVERCHARGE.DATE=''
      PROMPT''
      LAST.PRO=''                        ; * The Last Pro Number you were looking at
      LAST.ORIG.ZIP=''
      LAST.ORIG.CITY=''
      LAST.ORIG.STATE=''
      LAST.DEST.ZIP=''
      LAST.DEST.CITY=''
      LAST.DEST.STATE=''
      SU.FLAG=0
      FRT.FLAG=0
      PROG.NAME='FB.2.1.NW'
      PROG.DESC='FREIGHT BILL ENTRY - NEW WAY'
      PACK.NAME='FREIGHT BILLING'
      CALL CHANNEL(CH.NUM)
      CALL GET.USER(USER)

      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'FB.2.1.NW' ; UPL.VOUT = ''      ; * NPR_UPL 04/23/2010
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)       ; * NPR_UPL 04/23/2010

      IF DATE()=13338 AND USER='OWEN' THEN USER='EECK'       ; * For testing a reject
      IF DATE()=14766 AND USER='DAVID' THEN USER='SMICHALIK'
      IF USER='OWEN' THEN OWEN=1 ELSE OWEN=0
      SPECIAL.NIKKI.VACATION=0
      IF USER='SMICHALIK' AND DATE() < 14787 THEN SPECIAL.NIKKI.VACATION=1
      IF USER='SGARVIN' AND DATE() < 14787 THEN SPECIAL.NIKKI.VACATION=1
      IF USER='AWILLIAMS' AND DATE() < 14787 THEN SPECIAL.NIKKI.VACATION=1
      IF USER='CSTEVENS' AND DATE() < 14787 THEN SPECIAL.NIKKI.VACATION=1
      IF USER='DAVID' THEN SPECIAL.NIKKI.VACATION=1
      CO.NAME='AFS Logistics, LLC'
      EXP.DIST='' ; BAL.DUE=0 ; CLIENT.ID=''
      CLIENT.NAME='' ; CARRIER.ID=''
      PRO.REC=''
      BACK.FLAG=0 ; CHANGE.FLAG=0 ; VOIDED=0 ; DELETE.FLAG=0
      F.DIV=''
      NOT.PROCESSED=0
      MAT DIV.REC=''
      MAT CHECK.REC=''
      NUM.EQUIP.TYPES=0
      MAT CLIENT.REC=''
      EXP.CODE.XREF=0
      USER.MODIFY=1
      INV.NUM=''
      NUM.OF.PRO=0
      TOT.NUM.OF.PRO=0
      CC=0                               ; * Initalize Character Count to Zero
      CHR.START.TIME=TIME()              ; * JMK27
**      CARR.FSC = ""  ;* NPR08  ????
      CL.STATUS = ""                     ; * NPR08
      PRE.AUD.FROM.DT = ""               ; * NPR08
      PRE.AUD.TO.DT = ""                 ; * NPR08
      NEW.AUDITOR.TEXT = ""              ; * NPR08
      ACCT.MGR = ''                      ; * NPR08
      ACCT.MGR.NAME = ''                 ; * NPR08
      ACCT.MGR.EMAIL = ''                ; * NPR08
      HLB = '' ; HLA = ''                ; * NPR13

      ORIG.ON.FILE = ''
      HUSSEY.ERRORS = 0                  ; * NPR021

      M.BOL.REC = ''                     ; *NPR028
      ID.BOL.CRX = ''                    ; *NPR028
      ID.BOL.CRX2 = ''                   ; *NPR028
      BOL.POP.VER.ARR = ''               ; *NPR777

      RETURN


INITIALIZE.BILL.VARIABLES: ***
      QV.VALID=0                         ; * JMK24
      DISC.DESC=''                       ; * JMK34
      AUDIT='N'
      AMOUNT.MATCH=''
      IF CLIENT.ID='' THEN
         AUDITOR.TEXT=''
      END ELSE
* NPR08         AUDITOR.TEXT='Auditor: ':CL.AUDITOR
         AUDITOR.TEXT = CL.AUDITOR       ; * NPR08
      END
      NEW.AUDITOR.TEXT = ''              ; * NPR08
      RULES.OUTPUT = '0'                 ; *NPR08
      PRO='' ; BILL.DATE='' ; DUE.DATE='' ; PROC.DATE=''
      IN.OUT='' ; DIVISION='' ; MISSING.DATA=''
*     EXP.CODE='' ; VC.DESC='' ; EXP.CODE.DESC='' ; BOL='' ; * JMK84
      EXP.CODE='' ; VC.DESC='' ; EXP.CODE.DESC='' ; BOL='' ; BOL.DIST=''         ; * JMK84
      WEIGHT='' ; CARRIER.CHG='' ; ACTUAL.CHG='' ; VARIANCE=''
      VAR.ARR='' ; DTAB='' ; CHECK.NUM='' ; ZIP.ARR=''
      CHECK.AMT='' ; CHECK.DATE=''
      ORIG.ZIP='' ; DEST.ZIP='' ; ORIG.CITY='' ; DEST.CITY=''
      ORIG.STATE='' ; DEST.STATE='' ; VOID.DESC='' ; MILEAGE=''
      DISC.DET='' ; DISC.PERC=0 ; DISC.FLAG='' ; MIN.CHG=''
      VAR.REC='' ; CLASS='' ; BANK.ID='' ; AIR.PIECES='' ; VC.REC = ''

      DIM.WEIGHT='' ; AIR.CHRG.CODES='' ; AIR.CHRG.AMTS='' ; SERVICE.LEVEL=''

      INTL.CHRG.CODES = '' ; INTL.CHRG.AMTS = ''   ; * NPR031

      CLASSES='' ; WEIGHTS=''
      AUDITOR.VIEWED=''
      MISC.CHG.CODES='' ; CONTR.MISC.CHG.AMTS='' ; BENCH.MISC.CHG.AMTS=''
      AIR.CHRG.CODES='' ; AIR.CHRG.AMTS=''         ; * JMK148
      INTL.CHRG.CODES='' ; INTL.CHRG.AMTS=''       ; * NPR031
      DTL.CHRG.CODES='' ; DTL.CHRG.AMTS=''         ; * JMK148
      MISC.REASON=''                     ; * JMK157
      FRT.ARRAY='' ; MIS.ARRAY=''        ; * JMK148
      AVOUT=''                           ; * JMK149
      CONTR.FSC.PARMS='' ; BENCH.FSC.PARMS='' ; AFS.FSC.PARMS=''       ; * JMK61
      VERIFIED='' ; AUDITOR=''
      CUST.VEND.ADDR=''
      MISROUTE.AMOUNT='' ; VC.CODE='' ; VC.ID='' ; VC.OVERRIDE=''
      VC.TYPE=''                         ; * JMK28
      VC.REJECT=0                        ; * JMK28
      WT.REJECT=0
      MISROUTE.CARRIER='' ; MISROUTE.NAME=''
      LCC.AMOUNT=''
      LCC.CARRIER=''
      LCC.OVR.AMOUNT=''                  ; * JMK188
      LCC.OVR.CARRIER=''                 ; * JMK188
      LCC.NAME=''
      LCC.ARRAY=''
      MISROUTE.ARRAY=''
      TRANS.MODE='' ; MISC.CHARGE=''
      MAILING.ADDR=''
      REJECT.REASONS=''
      REJECT.FLAG=''
      REJECTION.ALTERED=''
      VERSION=''
      ENTRY.DATE=''
      NUM.MULTI.PROS=0                   ; * Number of Multiple Pros from Reject System
      MULTI.PRO.ID=''                    ; * (MV) Pro ID(s) from Reject system
      MULTI.PRO.CHG=''                   ; * (MV) (ACTUAL)Carrier Amount(s) from Reject System
      MULTI.PRO.DATE=''                  ; * (MV) Bill Date(s) from Reject System
      MULTI.PRO.REJ=''                   ; * (MV) Rejection Type(s) from Reject System
      REJ.TYPE=''                        ; * Rejection Type from Reject System
      BILL.STATUS='4'
      OVERRIDE.STATUS=''
      OLA.AMT=''
      OVERRIDE.FIELD=''
      OVERRIDE.OPERATOR=''
      OVERRIDE.INFO=''
      FLAT.RATE=0
      DIFFERENCE=''
      OLD.CLASS=''
      ORIG.EXP.CODE=''
      MULTI.CODE=''
      MULTI.PERCENT=''
      ADDRESS.CORRECTION.CHARGE=0        ; * This value is used for UPS and placed in PRO.REC<123>
      UPS.FEE.CHARGE=0                   ; * This value is used for UPS and placed in PRO.REC<148>; * JMK11
      INV.NUM = ''                       ; * NPR034
      NUM.OF.PRO=''                      ; * NPR034
      TOT.NUM.OF.PRO=''                  ; * NPR034
*     DTL.CHRG.CODES=''                  ; * JMK12
*     DTL.CHRG.AMTS=''                   ; * JMK12
      FRT.ARRAY=''                       ; * JMK19
      MIS.ARRAY=''                       ; * JMK19
      AVOUT=''                           ; * JMK149
      TL.BILL.MILES=''                   ; * JMK12
      DTL.OUT=''                         ; * JMK18
      DIDUTY=''
      DODUTY=''
      PREV.SELECTED=''
      BEEN.THRU=0
      LCC.AMOUNT=''
      UFLDS=''                           ; * JMK49
      FIRST.TIME.THRU=1
      FB.NOTE=''                         ; * JMK111
*
      BOL.ACCRUAL.COST = ""              ; * NPR10
      ADD.NOTE.REC = ""                  ; * NPR12
      CHANGED.TO.EVENTUAL.PAY = 0        ; * NPR14
      TRANSIT.TIME=''                    ; * JMK175
      CAPACITY.LOAD=''
      CHECK.FOR.CAPACITY=1
      VC.REC = ''

      COUNTRY.LIST = ""                  ; *NPR020
      ORIG.COUNTRY.CD = ""               ; *NPR020
      ORIG.COUNTRY.NAME = ""             ; *NPR020
      DEST.COUNTRY.CD = ""               ; *NPR020
      DEST.COUNTRY.NAME = ""             ; *NPR020

      ENTERED.BY = ''                    ; *NPR024
      VERIFIED.BY = ''                   ; *NPR024

      RETURN

OPEN.GENERAL.FILES: ***
      OPEN 'EMP.HR.PERF' TO F.EMP.HR.PERF ELSE
         CALL OPEN.ABORT("EMP.HR.PERF",PROG.NAME)
      END
      OPEN 'EMP.DY.PERF' TO F.EMP.DY.PERF ELSE
         CALL OPEN.ABORT("EMP.DY.PERF",PROG.NAME)
      END
      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         CALL OPEN.ABORT("CLIENTS",PROG.NAME)
      END
      OPEN '','FB.MILEAGE' TO F.MILEAGE ELSE
         CALL OPEN.ABORT("FB.MILEAGE",PROG.NAME)
      END
      OPEN '','FB.RATE.TABLES' TO F.RATE.TABLES ELSE
         CALL OPEN.ABORT("RATE.TABLES",PROG.NAME)
      END
      OPEN 'DICT','CLIENTS' TO F.DICT.CLIENTS ELSE
         CALL OPEN.ABORT("DICT CLIENTS",PROG.NAME)
      END
      OPEN '','CARRIERS' TO F.CARRIERS ELSE
         CALL OPEN.ABORT("CARRIERS",PROG.NAME)
      END
      OPEN 'DICT','CARRIERS' TO F.DICT ELSE
         CALL OPEN.ABORT("DICT CARRIERS",PROG.NAME)
      END
      OPEN '','FB.ADJUSTS' TO F.ADJUSTS ELSE
         CALL OPEN.ABORT("FB.ADJUSTS",PROG.NAME)
      END
*     OPEN '','FB.CHECKS' TO F.CHECKS ELSE          ; * JCW01
*        CALL OPEN.ABORT("FB.CHECKS",PROG.NAME)     ; * JCW01
*     END                                           ; * JCW01
      OPEN '','FB.CHECKS.HDR' TO F.CHECKS ELSE     ; * JCW01
         CALL OPEN.ABORT("FB.CHECKS.HDR",PROG.NAME)          ; * JCW01
      END                                ; * JCW01
      OPEN '','STARTUP.DATE' TO F.SU.DATE ELSE
         CALL OPEN.ABORT("STARTUP.DATE",PROG.NAME)
      END
      OPEN '','EDI.REMITTANCE' TO EDI.REMIT ELSE
         CALL OPEN.ABORT("EDI.REMITTANCE",PROG.NAME)
      END

      OPEN '','FB.BILLS.CRX' TO F.CRX ELSE
         EXECUTE 'CREATE-FILE FB.BILLS.CRX 1 103' CAPTURING OUTPUT
         OPEN '','FB.BILLS.CRX' TO F.CRX ELSE
            CALL OPEN.ABORT("FB.BILLS.CRX",PROG.NAME)
         END
      END
*
*
      OPEN '','FB.INQUIRE' TO F.INQUIRE ELSE
         CALL OPEN.ABORT("FB.INQUIRE",PROG.NAME)
      END
      OPEN '','FB.INQUIRE.HIST' TO F.INQUIRE.HIST ELSE
         CALL OPEN.ABORT("FB.INQUIRE.HIST",PROG.NAME)
      END
      OPEN '','FB.MODS' TO F.MODS ELSE
         CALL OPEN.ABORT("FB.MODS",PROG.NAME)
      END
      OPEN '','BR.OPEN.BILLS.1000.1' TO F.OPEN.BILLS ELSE
         CALL OPEN.ABORT("BR.OPEN.BILLS.1000.1",PROG.NAME)
      END
      OPEN '','FB.OPEN.BILLS' TO F.OPEN ELSE
         CALL OPEN.ABORT("FB.OPEN.BILLS",PROG.NAME)
      END
      OPEN '','FB.PRE.OPEN.BILLS' TO F.PRE.OPEN ELSE         ; *NPR01
         CALL OPEN.ABORT("FB.PRE.OPEN.BILLS",PROG.NAME)      ; *NPR01
      END                                ; *NPR01
      OPEN '','FB.PAY' TO F.PAY ELSE
         CALL OPEN.ABORT("FB.PAY",PROG.NAME)
      END
      OPEN '','FB.TRANSPORT' TO F.TRANSPORT ELSE
         CALL OPEN.ABORT("FB.TRANSPORT",PROG.NAME)
      END
      OPEN '','FED.INV.XREF' TO F.INV.XREF ELSE
         CALL OPEN.ABORT("FED.INV.XREF",PROG.NAME)
      END
      OPEN '','EDI.TEST' TO F.EDI.TEST ELSE
         CALL OPEN.ABORT("EDI.TEST",PROG.NAME)
      END
      OPEN '','DELETED.BILLS' TO F.DEL.BILLS ELSE
         CALL OPEN.ABORT('DELETED.BILLS',PROG.NAME)
      END
      OPEN '','FB.NFSC' TO F.NFSC ELSE
         CALL OPEN.ABORT('FB.NFSC',PROG.NAME)
      END
      OPEN '','FB.NFSC.SUB' TO F.NFSC.SUB ELSE
         CALL OPEN.ABORT('FB.NFSC.SUB',PROG.NAME)
      END
      OPEN '','FB.FSC' TO F.FSC ELSE
         CALL OPEN.ABORT('FB.FSC',PROG.NAME)
      END
      OPEN '','FB.ADJUST.HIST' TO F.ADJUST.HIST ELSE
         CALL OPEN.ABORT('FB.ADJUST.HIST',PROG.NAME)
      END
      OPEN '','FB.TABLES' TO F.TABLES ELSE
         CALL OPEN.ABORT('FB.TABLES',PROG.NAME)
      END
      OPEN '','FB.COUNTRIES' TO F.COUNTRIES ELSE   ; * NPR020
         CALL OPEN.ABORT('FB.COUNTRIES',PROG.NAME)           ; * NPR020
      END                                ; * NPR020
      OPEN '','FB.CAR.CTRL' TO F.CONTROL ELSE
         CALL OPEN.ABORT('FB.CAR.CTRL',PROG.NAME)
      END
      OPEN '','FB.REJ.CTRL' TO F.REJ.CTRL ELSE     ; * JMK46
         CALL OPEN.ABORT('FB.REJ.CTRL',PROG.NAME)  ; * JMK46
      END                                ; * JMK46
      OPEN '','CC.DAYS' TO F.CCDAYS ELSE           ; * JMK46
         CALL OPEN.ABORT('CC.DAYS',PROG.NAME)      ; * JMK46
      END                                ; * JMK46
      OPEN '','BCTRL' TO F.BCTRL ELSE
         CALL OPEN.ABORT('BCTRL',PROG.NAME)
      END
      READ DBCTRL FROM F.BCTRL,USER ELSE DBCTRL=''
      USER.NAME=DBCTRL<13>               ; * JMK19
      USER.DPT=DBCTRL<15>                ; * JMK140

      READ AVAL.EQUIP.TYPES FROM F.TABLES,"TL.EQUIPMENT.TYPES" ELSE
         AVAL.EQUIP.TYPES = ''
      END

      READ AVAL.ACC.CODES FROM F.TABLES,"TL.ACCESSORIAL.CHRGS" ELSE
         AVAL.ACC.CODES = ''
      END

      OPEN '','AR.SLSMAN.1000.1' TO F.SLSMAN ELSE
         CALL OPEN.ABORT('AR.SLSMAN.1000.1',PROG.NAME)
      END

      OPEN '','FB.ON.SCREEN' TO F.ONSCREEN ELSE    ; * JMK01
         CALL OPEN.ABORT("FB.ONSCREEN",PROG.NAME)  ; * JMK01
      END                                ; * JMK01
*     OPEN '','COGNOS.UPDATE' TO F.COGNOS.UPDATE ELSE        ; * JMK03; * JMK06
*        CALL OPEN.ABORT("COGNOS .UPDATE",PROG.NAME)          ; * JMK03; * JMK06
*     END                                ; * JMK03; * JMK06
      OPEN '','FB.TAG.BLOCK' TO F.TAG.BLOCK ELSE   ; * JMK19
         CALL OPEN.ABORT('FB.TAG.BLOCK',PROG.NAME)           ; * JMK19
      END                                ; * JMK19
      OPEN '','FB.QUICK.VERIFY' TO F.QV ELSE       ; * JMK24
         CALL OPEN.ABORT('FB.QUICK.VERIFY',PROG.NAME)        ; * JMK24
      END                                ; * JMK24
      OPEN '','CLIENT.SCAC' TO F.CSCAC ELSE        ; * JMK54
         CALL OPEN.ABORT('CLIENT.SCAC',PROG.NAME)  ; * JMK54
      END                                ; * JMK54
*---- Open mileage input and output files

      OPEN '','PCIN' TO F.PCIN ELSE
         CALL OPEN.ABORT('PCIN',PROG.NAME)
      END
      OPEN '','PCOUT' TO F.PCOUT ELSE
         CALL OPEN.ABORT('PCOUT',PROG.NAME)
      END
      OPEN '','EDI.BILLS' TO F.EDI.BILLS ELSE
         CALL OPEN.ABORT('EDI.BILLS',PROG.NAME)
      END
      OPEN '','ZIPS.CODES' TO F.ZIPS ELSE
         CALL OPEN.ABORT('ZIPS.CODES',PROG.NAME)
      END
      OPEN '','FB.OVERRIDE' TO F.OVERRIDE ELSE
         CALL OPEN.ABORT('FB.OVERRIDE',PROG.NAME)
      END
      OPEN '','AIRGAS.LOC.ZIP' TO F.ALOC.ZIP ELSE  ; * JMK154
         CALL OPEN.ABORT('AIRGAS.LOC.ZIP',PROG.NAME)         ; * JMK154
      END                                ; * JMK154
*
      OPEN '','FB.NOTES' TO F.NOTES ELSE           ; *NPR11
         CALL OPEN.ABORT("FB.NOTES",PROG.NAME)     ; *NPR11
      END                                ; *NPR11

      OPEN '','FB.PRO.FORMAT' TO F.PRO.FORMAT ELSE           ; *NPR026
         CALL OPEN.ABORT("FB.PRO.FORMAT",PROG.NAME)          ; *NPR026
      END                                ; *NPR026
*
      OPEN '','&SAVEDLISTS&' TO F.SL ELSE          ; * JMK186
         CALL OPEN.ABORT('&SAVEDLISTS&',PROG.NAME)           ; * JMK186
      END                                ; * JMK186

*NPR033 Start Changes
      OPEN '','UPS.SCHED' TO F.UPS.SCHED ELSE
         CALL OPEN.ABORT('UPS.SCHED',PROG.NAME)
      END

      OPEN '','UPS.SCHED.HIST' TO F.UPS.SCHED.HIST ELSE
         CALL OPEN.ABORT('UPS.SCHED.HIST',PROG.NAME)
      END
*NPR033 End Changes

*
      RETURN


OPEN.CLIENT.FILES: ***
*     GOSUB CLOSE.CLIENT.FILES
      START.OVER=0
      OPEN '','FB.BILLS,':CLIENT.ID TO F.BILLS ELSE
         CALL ELINE("ERROR - Cannot open FB.BILLS for client ":CLIENT.ID)
         CC+=1 ; GOSUB PRINT.CC
         START.OVER=1
         RETURN
      END
      IF CLIENT.ID='00761' THEN          ; * JMK143
         OPEN '','EDI.BILLS.HIST,':CLIENT.ID TO F.EDI.BILLS.HIST ELSE  ; * JMK143
            CALL ELINE("ERROR - Cannot open EDI.BILLS.HIST for client ":CLIENT.ID)         ; * JMK143
            CC+=1 ; GOSUB PRINT.CC       ; * JMK143
            START.OVER=1                 ; * JMK143
            RETURN                       ; * JMK143
         END                             ; * JMK143
      END                                ; * JMK143
      OPEN '','FB.OPEN.DATE.XREF,':CLIENT.ID TO F.FOX ELSE
         EXECUTE 'CREATE-FILE DATA FB.OPEN.DATE.XREF,':CLIENT.ID:' 23,1' CAPTURING OUTPUT    ; * NKH01
         OPEN '','FB.OPEN.DATE.XREF,':CLIENT.ID TO F.FOX ELSE
            CALL ELINE("Cannot Create FB.OPEN.DATE.XREF,":CLIENT.ID)
            CC+=1 ; GOSUB PRINT.CC
            START.OVER=1
            RETURN
         END
      END
      OPEN '','FB.CLIENTS.CUSTS,':CLIENT.ID TO F.CLIENTS.CUST ELSE
         F.CLIENTS.CUST=''
      END
      OPEN '','FB.BILLS.HIST,':CLIENT.ID TO F.HIST ELSE
         CALL ELINE("Cannot open FB.BILLS.HIST for client ":CLIENT.ID)
         CC+=1 ; GOSUB PRINT.CC
         START.OVER=1
         RETURN
      END
      IF CLIENT.ID='10356' THEN          ; * JMK123
         OPEN '','FB.BILLS.SUMMARY,':CLIENT.ID TO F.SUMM ELSE          ; * JMK123
            EXECUTE 'CREATE-FILE DATA FB.BILLS.SUMMARY,':CLIENT.ID:' 31,1' CAPTURING OUTPUT          ; * JMK123      NKH01
            OPEN '','FB.BILLS.SUMMARY,':CLIENT.ID TO F.SUMM ELSE       ; * JMK123
               CALL ELINE("Cannot Create FB.BILLS.SUMMARY,":CLIENT.ID)           ; * JMK123
               CC+=1 ; GOSUB PRINT.CC    ; * JMK123
               START.OVER=1              ; * JMK123
               RETURN                    ; * JMK123
            END                          ; * JMK123
         END                             ; * JMK123
      END                                ; * JMK123
      IF CLIENT.ID='00664' THEN          ; * JMK105
         OPEN '','EXPENSE.MATRIX,':CLIENT.ID TO F.EXP.MAT ELSE         ; * JMK105
            CALL ELINE("Cannot open EXPENSE.MATRIX for client ":CLIENT.ID)       ; * JMK105
            CC+=1 ; GOSUB PRINT.CC       ; * JMK105
            START.OVER=1                 ; * JMK105
            RETURN                       ; * JMK105
         END                             ; * JMK105
      END                                ; * JMK105
      BOL.OPEN=0                         ; * JMK133
      IF CLIENT.ID='00761' THEN BOL.OPEN=1         ; * JMK138
      IF CLIENT.ID='01311' THEN BOL.OPEN=1         ; * JMK135
      IF CLIENT.ID='01460' THEN BOL.OPEN=1         ; * JMK135
      IF CLIENT.ID='01529' THEN BOL.OPEN=1         ; * JMK133
*NPR04       IF CLIENT.ID='01529' AND CARRIER.ID NE "12440" THEN BOL.OPEN=1         ; * JMK133 ;* NPR04
      IF CLIENT.ID='01613' THEN BOL.OPEN=1
      IF CLIENT.ID='01636' THEN BOL.OPEN=1         ; * JMK152
      IF BOL.OPEN THEN                   ; * JMK133
         OPEN '','FB.BOL.CRX,':CLIENT.ID TO F.BOL.CRX ELSE   ; * JMK133
            CALL OPEN.ABORT("FB.BOL.CRX,":CLIENT.ID,PROG.NAME)         ; * JMK133
         END                             ; * JMK133
      END                                ; * JMK133
      MISROUTE.FLG=0
      CLIENT.AUDIT=1
* tbs 6/23/99 reads to see if there is a alternate substitute audit files that can be used
      OPEN '','FB.AUDIT,':CLIENT.ID TO F.AUDIT THEN
         READV SUB.CLIENT FROM F.AUDIT,'SUBSTITUTE',1 THEN
            AUDIT.CLIENT.ID = SUB.CLIENT
            OPEN '','FB.AUDIT,':AUDIT.CLIENT.ID TO F.AUDIT ELSE CLIENT.AUDIT=0
         END ELSE
            AUDIT.CLIENT.ID = CLIENT.ID
         END
      END ELSE CLIENT.AUDIT=0

      IF CLIENT.AUDIT THEN
         READ TEST FROM F.AUDIT,'DISABLE' THEN CLIENT.AUDIT=0
      END

      IF CLIENT.AUDIT THEN
         OPEN '','FB.AUDIT.TABLES,':AUDIT.CLIENT.ID TO F.AUDIT.TABLES ELSE
            EXECUTE 'CREATE-FILE DATA FB.AUDIT.TABLES,':AUDIT.CLIENT.ID:' 503,1' CAPTURING OUTPUT     ; * NKH01
            OPEN '','FB.AUDIT.TABLES,':AUDIT.CLIENT.ID TO F.AUDIT.TABLES ELSE
               CALL ELINE('Error Cannot open FB.AUDIT.TABLES,':AUDIT.CLIENT.ID:' No On-Line Audit Allowed!')
               CC+=1 ; GOSUB PRINT.CC
               CLIENT.AUDIT=0
            END
         END
      END
      IF CLIENT.AUDIT THEN
         OPEN '','FB.AUDIT.PP,':AUDIT.CLIENT.ID TO F.AUDIT.PP ELSE
            EXECUTE 'CREATE-FILE DATA FB.AUDIT.PP,':AUDIT.CLIENT.ID:' 7,1' CAPTURING OUTPUT
            OPEN '','FB.AUDIT.PP,':AUDIT.CLIENT.ID TO F.AUDIT.PP ELSE
               CALL ELINE('Error Cannot open FB.AUDIT.PP,':AUDIT.CLIENT.ID:' No On-Line Audit Allowed!')
               CC+=1 ; GOSUB PRINT.CC
               CLIENT.AUDIT=0
            END
         END
      END

      IF CLIENT.AUDIT THEN
         OPEN '','FB.AUDIT.ZIPS,':AUDIT.CLIENT.ID TO F.AUDIT.ZIPS ELSE
            EXECUTE 'CREATE-FILE DATA FB.AUDIT.ZIPS,':AUDIT.CLIENT.ID:' 101,1' CAPTURING OUTPUT    ; * NKH01
            OPEN '','FB.AUDIT.ZIPS,':AUDIT.CLIENT.ID TO F.AUDIT.ZIPS ELSE
               CALL ELINE('Error Cannot open FB.AUDIT.ZIPS,':AUDIT.CLIENT.ID:' No On-Line Audit Allowed!')
               CC+=1 ; GOSUB PRINT.CC
               CLIENT.AUDIT=0
            END
         END
      END
      CARRIER.AUDIT=0
      AUDIT='N'
      AUDIT.TYPE=''
      IF CL.VAR.FLAG = 'Y' OR CL.VAR.FLAG = 'A' THEN
         OPEN '','VARIANCE.CODES,':CLIENT.ID TO F.VAR ELSE
            CALL ELINE("Cannot open VARIANCE.CODES for client ":CLIENT.ID)
            CC+=1 ; GOSUB PRINT.CC
            START.OVER=1
            RETURN
         END
      END
      IF CL.DIV.FLAG = 'Y' THEN
         OPEN '','DIVISION.CODES,':CLIENT.ID TO F.DIV ELSE
            CALL ELINE("Cannot open DIVISION.CODES for client ":CLIENT.ID)
            CC+=1 ; GOSUB PRINT.CC
            START.OVER=1
            RETURN
         END
         IF CLIENT.ID='00761' THEN       ; * JMK99
            OPEN '','DIV.CODE.XREF,':CLIENT.ID TO F.DIV.CODE.XREF THEN           ; * JMK99
               DIV.CODE.XREF=1           ; * JMK99
            END ELSE                     ; * JMK99
               DIV.CODE.XREF=0           ; * JMK99
            END                          ; * JMK99
         END                             ; * JMK99
         ZIP.DIV.XREF=1
         OPEN 'ZIP.DIV.XREF,':CLIENT.ID TO F.ZIP.DIV.XREF ELSE ZIP.DIV.XREF=0
      END
      IF CL.EXP.FLAG = 'Y' THEN
         CHECK.EXP.CODES=1
         OPEN '','EXPENSE.CODES,':CLIENT.ID TO F.EXP ELSE
            CALL ELINE("Cannot open EXPENSE.CODES for client ":CLIENT.ID)
            CC+=1 ; GOSUB PRINT.CC
            START.OVER=1
            RETURN
         END
         OPEN '','EXPENSE.CODE.XREF,':CLIENT.ID TO F.EXP.CODE.XREF THEN
            EXP.CODE.XREF=1
         END ELSE
            EXP.CODE.XREF=0
         END
      END ELSE CHECK.EXP.CODES=0
      IF CL.VEND.FLAG = 'Y' ! CL.CUST.FLAG = 'Y' THEN
         OPEN '','VEND.CUST,':CLIENT.ID TO F.VEND.CUST ELSE
            EXECUTE 'CREATE-FILE DATA VEND.CUST,':CLIENT.ID:' 1009,2' CAPTURING OUTPUT    ; * NKH01
            OPEN '','VEND.CUST,':CLIENT.ID TO F.VEND.CUST ELSE
               CALL ELINE("Cannot open VEND.CUST for client ":CLIENT.ID)
               CC+=1 ; GOSUB PRINT.CC
               START.OVER=1
               RETURN
            END
         END
         OPEN '','VEND.CUST.NAMES,':CLIENT.ID TO F.VCN ELSE  ; * JCW02
            EXECUTE 'CREATE-FILE DATA SDX.VCN,':CLIENT.ID:' 139,1' CAPTURING OUTPUT           ; * JCW02     NKH01
            EXECUTE 'CREATE-FILE DATA VEND.CUST.NAMES,':CLIENT.ID:' 601,1' CAPTURING OUTPUT   ; * JCW02     NKH01
            OPEN '','VEND.CUST.NAMES,':CLIENT.ID TO F.VCN ELSE         ; * JCW02
               CALL ELINE("Cannot open VEND.CUST.NAMES for client ":CLIENT.ID)   ; * JCW02
               CC+=1 ; GOSUB PRINT.CC    ; * JCW02
               START.OVER=1              ; * JCW02
               RETURN                    ; * JCW02
            END                          ; * JCW02
         END                             ; * JCW02
         OPEN '','VEND.CUST.XREF,':CLIENT.ID TO F.VC.XREF ELSE
            EXECUTE 'CREATE-FILE DATA VEND.CUST.XREF,':CLIENT.ID:' 401,1' PASSLIST CAPTURING OUTPUT      ; * NKH01
            OPEN '','VEND.CUST.XREF,':CLIENT.ID TO F.VC.XREF ELSE
               CALL ELINE("Cannot open VEND.CUST.XREF for client ":CLIENT.ID)
               CC+=1 ; GOSUB PRINT.CC
               START.OVER=1
               RETURN
            END
         END

         OPEN '','VEND.CUST.ZIPS,':CLIENT.ID TO F.VC.ZIPS ELSE
            EXECUTE 'CREATE-FILE DATA VEND.CUST.ZIPS,':CLIENT.ID:' 131,1' PASSLIST CAPTURING OUTPUT      ; * NKH01
            OPEN '','VEND.CUST.ZIPS,':CLIENT.ID TO F.VC.ZIPS ELSE
               CALL ELINE("Cannot open VEND.CUST.ZIPS for client ":CLIENT.ID)
               CC+=1 ; GOSUB PRINT.CC
               START.OVER=1
               RETURN
            END
         END
      END
      OPEN '','FB.APRVD.CARRS,':CLIENT.ID TO F.APRVD.CARRS THEN
         APRVD.CARRS = 1
      END ELSE
         APRVD.CARRS = 0
         APRVD.CARRIER = ''              ; * Set Individual Switch to '' (Skip Entry)
      END

      IF CLIENT.ID[1,2]#'99' THEN        ; * JMK140
         OPEN '','FB.BILLS.ACCESS,':CLIENT.ID TO F.ACCESS ELSE         ; * JMK140
            EXECUTE 'CREATE-FILE DATA FB.BILLS.ACCESS,':CLIENT.ID:' 1009,1' CAPTURING OUTPUT          ; * JMK140     NKH01
            OPEN '','FB.BILLS.ACCESS,':CLIENT.ID TO F.ACCESS ELSE      ; * JMK140
               CALL ELINE("Cannot Create FB.BILLS.ACCESS,":CLIENT.ID)  ; * JMK140
               CC+=1 ; GOSUB PRINT.CC    ; * JMK140
               START.OVER=1              ; * JMK140
               RETURN                    ; * JMK140
            END                          ; * JMK140
         END                             ; * JMK140
      END                                ; * JMK140
      RETURN

*
CLOSE.CLIENT.FILES: *
*
      CLOSE F.ACCESS
      CLOSE F.APRVD.CARRS
      CLOSE F.AUDIT
      CLOSE F.AUDIT.PP
      CLOSE F.AUDIT.TABLES
      CLOSE F.AUDIT.ZIPS
      CLOSE F.BILLS
      CLOSE F.BOL.CRX
      CLOSE F.CLIENTS.CUST
      CLOSE F.DIV
      CLOSE F.DIV.CODE.XREF
      CLOSE F.EDI.BILLS.HIST
      CLOSE F.EXP
      CLOSE F.EXP.CODE.XREF
      CLOSE F.EXP.MAT
      CLOSE F.FOX
      CLOSE F.HIST
      CLOSE F.SUMM
      CLOSE F.VAR
      CLOSE F.VC.XREF
      CLOSE F.VC.ZIPS
      CLOSE F.VCN
      CLOSE F.VEND.CUST
      RETURN

*---- Display screen

8100: ***
*NPR08      CALL AFS.SCR.REFRESH(PROG.NAME, PROG.DESC, PACK.NAME, CO.NAME,TIME.DATE, 1)
      CLR.SCR = 1 ; GOSUB DISP.SCREEN.HEADING      ; *NPR08

      GOSUB GET.SCREEN.DSP               ; * NPR034

      CRT SCREEN.DSP

      IF CHANGE.FLAG THEN GOSUB 8200

      RETURN


*---- Display screen to send to subroutine
GET.SCREEN.DSP: ***
*NPR08      SCREEN.DSP =@(0, 3):'Client : '
*NPR08      SCREEN.DSP:=@(0, 4):'Carrier: '
      SCREEN.DSP =@(0,1):'Client : '     ; * NPR08
      SCREEN.DSP:=@(0,2):'Carrier: '     ; * NPR08
      SCREEN.DSP:=@(0,3):'       : '     ; * NPR08
      SCREEN.DSP:=@(0,4):'PreAud : '     ; * NPR08
      SCREEN.DSP:=@(19,4):'to'           ; * NPR08
      SCREEN.DSP:=@(31,4):'Cl Stat.: '   ; * NPR08
      SCREEN.DSP:=@(49,1):'Salesman : '  ; * NPR08
      SCREEN.DSP:=@(49,2):'Acc.Mgr. : '  ; * NPR08
      SCREEN.DSP:=@(49,3):'Auditor  : '  ; * NPR08
      SCREEN.DSP:=@(49,4):'OverRide : '  ; * NPR08
      SCREEN.DSP:=@(63,4):'Stack : '     ; * NPR08

      SCREEN.DSP:=@(0, 5):STR('-',79)
*NPR034      SCREEN.DSP:=@(0, 6):'Pro..'
      SCREEN.DSP:=@(0, 6):'Pro..' : SPACE(76)      ; * NPR034
*     IF CARRIER.ID='00015' OR CARRIER.ID='00143' OR CARRIER.ID='00365' OR CARRIER.ID='04226' THEN   ; * Federal Express ; * JMK106
* NPR034      IF CAPTURE.INVOICE             ; * JMK106
      IF CAPTURE.INVOICE OR CARRIER.ID='00041' THEN          ; * JMK106  ;* NPR034
*NPR034         SCREEN.DSP:=@(40,6):'Inv Num: ':INV.NUM'L#11'
         SCREEN.DSP:=@(36,7):'Inv Num: '           ; * NPR034
*NPR034         SCREEN.DSP:=@(65,6):NUM.OF.PRO'R#4':' of ':TOT.NUM.OF.PRO'R#4'
         SCREEN.DSP:=@(65,7): STR("-",4):' of ':STR("-",4)   ; * NPR034
      END
      IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN     ; * United Parcel Service
*NPR034         SCREEN.DSP:=@(46,6):'UPS Addr Correc Chrg: ':ADDRESS.CORRECTION.CHARGE'R26,'
*NPR034         SCREEN.DSP:=@(46,7):'UPS Fees Charge     : ':UPS.FEE.CHARGE'R26,'       ; * JMK11
         SCREEN.DSP:=@(46,8):'UPS Addr Correc Chrg: '        ; * NPR034
         SCREEN.DSP:=@(46,9):'UPS Fees Charge     : '        ; * NPR034
      END
      SCREEN.DSP:=@(0, 7):'Date.'
      SCREEN.DSP:=@(0, 8):'IOT..'
      SCREEN.DSP:=@(0, 9):'Div..'
      SCREEN.DSP:=@(0,10):'Orig.'
      SCREEN.DSP:=@(0,11):'Dest.'
      SCREEN.DSP:=@(0,12):'Exp..'
      SCREEN.DSP:=@(0,14):'Clas.'
      SCREEN.DSP:=@(0,15):'Mile.'
      SCREEN.DSP:=@(0,16):'        Carrier   Actual         '
      SCREEN.DSP:=@(0,17):'  Wght  Charges  Charges   Var              Charges    Approved Carrier'
      SCREEN.DSP:=@(0,18):' ----- -------- -------- -------           ---------- --------'
      SCREEN.DSP:=@(33,19):'Misroute: '
      SCREEN.DSP:=@(33,20):'LCC: '
      IF (CLIENT.ID='01323' OR CLIENT.ID='01324' OR CLIENT.ID='01325' OR CLIENT.ID='01326') AND (USER='MYRA' OR USER='JAUDIT' OR USER='SMICHALIK' OR USER='DAVID' OR SPECIAL.NIKKI.VACATION) THEN
         SCREEN.DSP:=@(8,20):' Dim Wgt':@(-4)
      END ELSE
         SCREEN.DSP:=@(0,20):' Dimensional Wgt':@(-4)
      END
      SCREEN.DSP:=@(33,20):'LCC: '
*     SCREEN.DSP:=@(0,20):'Air Pcs':@(-4)
      IF BAL.DUE THEN SCREEN.DSP := @(25,16):'Bal Due'
      RETURN


GET.RELATED.BILLS: ***
      DA=''
      LOOKPRO=PRO
      LOOP UNTIL INDEX(LOOKPRO[LEN(LOOKPRO)-1,2],'AD',1)=0 DO
         LOOKPRO=LOOKPRO[1,LEN(LOOKPRO)-2]
      REPEAT
      LOOP UNTIL INDEX(LOOKPRO[LEN(LOOKPRO)-1,2],'BD',1)=0 DO
         LOOKPRO=LOOKPRO[1,LEN(LOOKPRO)-2]
      REPEAT
      LOOP UNTIL INDEX(LOOKPRO[LEN(LOOKPRO)-1,2],'-I',1)=0 DO          ; * JMK85
         LOOKPRO=LOOKPRO[1,LEN(LOOKPRO)-2]
      REPEAT
      LOOP UNTIL INDEX(LOOKPRO[LEN(LOOKPRO)-1,2],'-O',1)=0 DO          ; * JMK85
         LOOKPRO=LOOKPRO[1,LEN(LOOKPRO)-2]
      REPEAT
      LOOP UNTIL INDEX(LOOKPRO[LEN(LOOKPRO)-1,2],'-T',1)=0 DO          ; * JMK85
         LOOKPRO=LOOKPRO[1,LEN(LOOKPRO)-2]
      REPEAT
*OH   LOOP UNTIL NOT(LOOKPRO[LEN(LOOKPRO)-1,2] MATCHES "0X'-'1N") DO
*OH     LOOKPRO=LOOKPRO[1,LEN(LOOKPRO)-2]
*OH   REPEAT
      EXIT.LOOP=0
      LOOP
      UNTIL NOT(LOOKPRO[LEN(LOOKPRO)-1,2] MATCHES "'-'1N") OR EXIT.LOOP DO
         TESTPRO=LOOKPRO[1,LEN(LOOKPRO)-2]
         LOOK.ID=CARRIER.ID:'*':TESTPRO:'*0'
         READV TEST FROM F.CRX,LOOK.ID,1 THEN
            LOOKPRO=TESTPRO
         END ELSE EXIT.LOOP=1
      REPEAT
      LOOK.ID=CARRIER.ID:'*':LOOKPRO:'*':0
      PRO.EXT='orig'
      READ DLOOK FROM F.HIST,LOOK.ID THEN GOSUB ADD.LINE ELSE
         READ DLOOK FROM F.CRX,LOOK.ID THEN
            DLOOK<1>=DLOOK<2>
            GOSUB ADD.LINE
         END ELSE
            NULL
         END
      END
*
* Look for AD, ADAD, ADADAD
*
      PRO.EXT=''
      DONE=0
      LOOP UNTIL DONE=1 DO
         IF USER='OWEN' THEN
            CRT @(0,23):"OWEN PRESS BREAK... AD ROUTINE":
            INPUT NUL:
         END
         PRO.EXT:='AD'
         LOOK.ID=CARRIER.ID:'*':LOOKPRO:PRO.EXT:'*':0
         READ DLOOK FROM F.HIST,LOOK.ID THEN
            GOSUB ADD.LINE
** Check for ADBD
            SAVE.PRO.EXT=PRO.EXT
            PRO.EXT:='BD'
            LOOK.ID=CARRIER.ID:'*':LOOKPRO:PRO.EXT:'*':0
            READ DLOOK FROM F.HIST,LOOK.ID THEN GOSUB ADD.LINE ELSE NULL
            PRO.EXT=SAVE.PRO.EXT
         END ELSE
            READ DLOOK FROM F.CRX,LOOK.ID THEN
               DLOOK<1>=DLOOK<2>
               GOSUB ADD.LINE
            END ELSE
               DONE=1
            END
         END
      REPEAT
*
* Look for BD, BDBD, BDBDBD
*
      PRO.EXT=''
      DONE=0
      LOOP UNTIL DONE=1 DO
         PRO.EXT:='BD'
         LOOK.ID=CARRIER.ID:'*':LOOKPRO:PRO.EXT:'*':0
         READ DLOOK FROM F.HIST,LOOK.ID THEN GOSUB ADD.LINE ELSE
            READ DLOOK FROM F.CRX,LOOK.ID THEN
               DLOOK<1>=DLOOK<2>
               GOSUB ADD.LINE
            END ELSE
               DONE=1
            END
         END
      REPEAT
*
* Look for -1, -2, -3,
*
      PRO.EXT=''
      DONE=0
      CTR=0
      LOOP CTR+=1 UNTIL DONE=1 DO
         PRO.EXT='-':CTR
         LOOK.ID=CARRIER.ID:'*':LOOKPRO:PRO.EXT:'*':0
         READ DLOOK FROM F.HIST,LOOK.ID THEN GOSUB ADD.LINE ELSE
            READ DLOOK FROM F.CRX,LOOK.ID THEN
               DLOOK<1>=DLOOK<2>
               GOSUB ADD.LINE
            END ELSE
               DONE=1
            END
         END
      REPEAT
* Look for /1, /2, /3,
*
      PRO.EXT=''
      DONE=0
      CTR=0
      LOOP CTR+=1 UNTIL DONE=1 DO
         PRO.EXT='/':CTR
         LOOK.ID=CARRIER.ID:'*':LOOKPRO:PRO.EXT:'*':0
         READ DLOOK FROM F.HIST,LOOK.ID THEN GOSUB ADD.LINE ELSE
            READ DLOOK FROM F.CRX,LOOK.ID THEN
               DLOOK<1>=DLOOK<2>
               GOSUB ADD.LINE
            END ELSE
               DONE=1
            END
         END
      REPEAT
*
* Look for -1, -1-1, -1-1-1
*
      PRO.EXT='-1'                       ; * Already found -1's look for -1-1 next
      DONE=0
      LOOP UNTIL DONE=1 DO
         PRO.EXT:='-1'
         LOOK.ID=CARRIER.ID:'*':LOOKPRO:PRO.EXT:'*':0
         READ DLOOK FROM F.HIST,LOOK.ID THEN GOSUB ADD.LINE ELSE
            READ DLOOK FROM F.CRX,LOOK.ID THEN
               DLOOK<1>=DLOOK<2>
               GOSUB ADD.LINE
            END ELSE
               DONE=1
            END
         END
      REPEAT
*
* Look for -I, -O, -T ; * JMK85
*
      PRO.EXT='-I'                       ; * JMK85
      LOOK.ID=CARRIER.ID:'*':LOOKPRO:PRO.EXT:'*':0           ; * JMK85
      READ DLOOK FROM F.HIST,LOOK.ID THEN          ; * JMK85
         GOSUB ADD.LINE
         NO.DASH.O=1
      END ELSE
         READ DLOOK FROM F.CRX,LOOK.ID THEN        ; * JMK85
            DLOOK<1>=DLOOK<2>            ; * JMK85
            GOSUB ADD.LINE               ; * JMK85
            NO.DASH.O=1
         END                             ; * JMK85
      END                                ; * JMK85
      PRO.EXT='-O'                       ; * JMK85
      LOOK.ID=CARRIER.ID:'*':LOOKPRO:PRO.EXT:'*':0           ; * JMK85
      READ DLOOK FROM F.HIST,LOOK.ID THEN          ; * JMK85
         GOSUB ADD.LINE
         DASH.O=1
      END ELSE
         READ DLOOK FROM F.CRX,LOOK.ID THEN        ; * JMK85
            DLOOK<1>=DLOOK<2>            ; * JMK85
            GOSUB ADD.LINE               ; * JMK85
            DASH.O=1
         END                             ; * JMK85
      END                                ; * JMK85
      PRO.EXT='-T'                       ; * JMK85
      LOOK.ID=CARRIER.ID:'*':LOOKPRO:PRO.EXT:'*':0           ; * JMK85
      READ DLOOK FROM F.HIST,LOOK.ID THEN          ; * JMK85
         GOSUB ADD.LINE
         NO.DASH.O=1
      END ELSE
         READ DLOOK FROM F.CRX,LOOK.ID THEN        ; * JMK85
            DLOOK<1>=DLOOK<2>            ; * JMK85
            GOSUB ADD.LINE               ; * JMK85
            NO.DASH.O=1
         END                             ; * JMK85
      END                                ; * JMK85

      IF DA#'' THEN
         RELATED.BILLS=1
      END ELSE
         RELATED.BILLS=0
      END
      RETURN


DISPLAY.RELATED.BILLS: ***
      IF DA#'' THEN
         GOSUB DA.TO.PA                  ; * JCW07
         PRINT @(0,7):@(-3):@(0,8):"Pro#":
         PRINT @(6,8):"Shp Date":
         PRINT @(15,8):"Carr Billed":
         PRINT @(27,8):"Amount Paid":
         PRINT @(39,8):"Proc Date":
         PRINT @(49,8):"Check Dt":
         PRINT @(58,8):"Check #":
         PRINT @(67,8):"Check Amt":
         PRINT @(77,8):"A/C"             ; * NPR15
         PRINT @(0,9):"----":
         PRINT @(6,9):"--------":
         PRINT @(15,9):"-----------":
         PRINT @(27,9):"-----------":
         PRINT @(39,9):"---------":
         PRINT @(49,9):"--------":
         PRINT @(58,9):"-------":
         PRINT @(66,9):"----------":
         PRINT @(77,9):"---"             ; * NPR15

*** Added, 05/21/07, JCW07
         LINES = DCOUNT(PA,@AM)
         START.POS = 1
         DONE = 0
         LOOP UNTIL DONE DO
*NPR15            FOR I = 1 TO 12
            FOR I = 1 TO 13              ; *NPR15
               CRT @(0,9+I):PA<START.POS+I-1>:@(-4)
            NEXT X
ENTER.SELECTION:
            IF LINES <= 12 THEN
               MASK = '--'
               HELP = '[Return] to display bill'
               CALL GEN.IN(0,22,MASK,'',Q,0,20,'','',0,2,22,1,QI,HELP,0,23)
            END ELSE
               MASK = 'Enter Selection: '
               HELP = REV.ON:'More Notes:':REV.OFF:' [F]orward  [B]ack  [Return] to display bill'
               CALL GEN.IN(0,22,MASK,'',Q,0,20,'','',0,17,22,1,QI,HELP,0,23)
            END
            Q = OCONV(Q,'MCU')
            BEGIN CASE
               CASE Q = 'F'
                  START.POS += 12
                  IF START.POS > LINES THEN START.POS = 1
               CASE Q = 'B'
                  START.POS -= 12
                  IF START.POS < 1 THEN START.POS = DIV(LINES,12) * 12 + 1
               CASE Q = ''
                  DONE = 1
               CASE 1
                  CALL ELINE('Invalid entry! You must enter "F", "B", or "".')
                  GOTO ENTER.SELECTION
            END CASE
            CC+=LEN(QI)+1 ; GOSUB PRINT.CC
         REPEAT
         CRT @(0,10):@(-3)
      END
      RETURN
*** End JCW07
*        TIMES=DCOUNT(DA<1>,@VM)  ; * JCW07
*        DA4TOT=0                 ; * JCW07
*        FOR X = 1 TO TIMES              ; * JMK111
*           PRINT @(0,9+X):DA<1,X>'L#6':           ; * JMK111
*           IF INDEX(DA<1,X>,'BD',1) THEN PRINT BELL:        ; * JMK111
*           PRINT @(6,9+X):DA<2,X>'D2-':           ; * JMK111
*           PRINT @(15,9+X):DA<3,X>'R26,#11':      ; * JMK111
*           DA4TOT+=DA<4,X>              ; * JMK111
*           PRINT @(27,9+X):DA<4,X>'R26,#10':      ; * JMK111
*           PRINT @(39,9+X):DA<5,X>'D2-':          ; * JMK111
*DF          IF REJECT.FLAG='R' OR DA<9,X>='R' THEN
*           IF DA<9,X>='R' THEN          ; * JMK111
*              IF INDEX(DA<1,X+1>,'BD',1) THEN     ; * JMK111
*                 PRINT @(50,9+X):DA<6,X>'D2-':              ; * JMK111
*                 PRINT @(60,9+X):DA<7,X>'R#7':              ; * JMK111
*                 PRINT @(69,9+X):DA<8,X>'R26,Z#10':         ; * JMK111
*              END ELSE                  ; * JMK111
*                 PRINT @(50,9+X):'* * * R E J E C T E D * * *':       ; * JMK111
*              END                       ; * JMK111
*           END ELSE                     ; * JMK111
*              PRINT @(50,9+X):DA<6,X>'D2-':       ; * JMK111
*              PRINT @(60,9+X):DA<7,X>'R#7':       ; * JMK111
*              PRINT @(69,9+X):DA<8,X>'R26,Z#10':            ; * JMK111
*           END                          ; * JMK111
*        NEXT X                          ; * JMK111
*        PRINT @(27,9+X):"-----------":            ; * JMK111
*        PRINT @(27,9+X+1):DA4TOT'R26,#10'         ; * JMK111
*
* Display any variances that my have be added.
*
*        PRINT @( 0,11+X):'DISCOUNT'     ; * JMK111
*        PRINT @( 5,12+X):OLD.PRO.REC<41,1>        ; * JMK111
*        PRINT @(50,11+X):0-OLD.PRO.REC<10>'R26#12'          ; * JMK111
*        PRINT @( 0,14+X):'OVERCHARGE'             ; * JMK111
*        PRINT @( 5,15+X):OLD.PRO.REC<41,2>        ; * JMK111
*        PRINT @(50,14+X):0-OLD.PRO.REC<11>'R26#12'          ; * JMK111
***
*** Commented Out, 05/21/07, JCW07
***
*         ROW.CNT=9                       ; * JMK111
*         FOR X = 1 TO TIMES
*           ROW.CNT+=1                   ; * JMK111
*           CRT @(0,ROW.CNT):DA<1,X>'L#6':         ; * JMK111
*           IF INDEX(DA<1,X>,'BD',1) THEN CRT BELL:          ; * JMK111
*           CRT @(6,ROW.CNT):DA<2,X>'D2-':         ; * JMK111
*           CRT @(15,ROW.CNT):DA<3,X>'R26,#11':    ; * JMK111
*           DA4TOT+=DA<4,X>              ; * JMK111
*           CRT @(27,ROW.CNT):DA<4,X>'R26,#10':    ; * JMK111
*           CRT @(39,ROW.CNT):DA<5,X>'D2-':        ; * JMK111
*           IF DA<9,X>='R' THEN          ; * JMK111
*              IF INDEX(DA<1,X+1>,'BD',1) THEN     ; * JMK111
*                 CRT @(50,ROW.CNT):DA<6,X>'D2-':  ; * JMK111
*                 CRT @(60,ROW.CNT):DA<7,X>'R#7':  ; * JMK111
*                 CRT @(69,ROW.CNT):DA<8,X>'R26,Z#10':       ; * JMK111
*              END ELSE                  ; * JMK111
*                 CRT @(50,ROW.CNT):'* * * R E J E C T E D * * *':     ; * JMK111
*              END                       ; * JMK111
*           END ELSE                     ; * JMK111
*              CRT @(50,ROW.CNT):DA<6,X>'D2-':     ; * JMK111
*              CRT @(60,ROW.CNT):DA<7,X>'R#7':     ; * JMK111
*              CRT @(69,ROW.CNT):DA<8,X>'R26,Z#10':          ; * JMK111
*           END                          ; * JMK111
*           IF DA<10,X>#'' THEN          ; * JMK111
*              NSVAL=DCOUNT(DA<10,X>,@SVM)         ; * JMK119
*              FOR SVAL=1 TO NSVAL       ; * JMK119
*                 ROW.CNT+=1             ; * JMK111
*                 ROW=9+ROW.CNT          ; * JMK111
*                 CRT @( 6,ROW.CNT):'NOTE: ':DA<10,X>'L#70'     ; * JMK111 ; * JMK119
*                 CRT @( 6,ROW.CNT):'NOTE: ':DA<10,X,SVAL>'L#70'       ; * JMK111 ; * JMK119
*              NEXT SVAL                 ; * JMK119
*           END                          ; * JMK111
*        NEXT X                          ; * JMK111
*        ROW.CNT+=1                      ; * JMK111
*        CRT @(27,ROW.CNT):"-----------":          ; * JMK111
*        ROW.CNT+=1                      ; * JMK111
*        CRT @(27,ROW.CNT):DA4TOT'R26,#10'         ; * JMK111
*
* Display any variances that my have be added.
*
*        ROW.CNT+=1                      ; * JMK111
*        CRT @( 0,ROW.CNT):'DISCOUNT'    ; * JMK111
*        CRT @(50,ROW.CNT):0-OLD.PRO.REC<10>'R26#12'         ; * JMK111
*        ROW.CNT+=1                      ; * JMK111
*        CRT @( 5,ROW.CNT):OLD.PRO.REC<41,1>       ; * JMK111
*        ROW.CNT+=2                      ; * JMK111
*        CRT @( 0,ROW.CNT):'OVERCHARGE'  ; * JMK111
*        CRT @(50,ROW.CNT):0-OLD.PRO.REC<11>'R26#12'         ; * JMK111
*        ROW.CNT+=1                      ; * JMK111
*        CRT @( 5,ROW.CNT):OLD.PRO.REC<41,2>       ; * JMK111
*     END
*     RETURN
***
*** End Comment Out, JCW07
***


DA.TO.PA:
*** Write all related bills data to another array for displaying purposes
*** Added, 05/21/07, JCW07
      AMT.TOT = 0
      PA = ''
      DA.CNT = DCOUNT(DA<1>,CHAR(253))
      FOR I = 1 TO DA.CNT
         LINE = ''
         LINE = DA<1,I>'L#6'
         LINE := OCONV(DA<2,I>,'D2-')'R#8'
         LINE := OCONV(DA<3,I>,'MR2,')'R#12'
         LINE := OCONV(DA<4,I>,'MR2,')'R#11'
         LINE := OCONV(DA<5,I>,'D2-')'R#10'
         IF DA<9,I> = 'R' THEN
            IF INDEX(DA<1,I+1>,'BD',1) THEN
               LINE := OCONV(DA<6,I>,'D2-')'R#11'
               LINE := DA<7,I>'R#9'
               LINE := OCONV(DA<8,I>,'MR2,')'RZ#12'
            END ELSE
               LINE := '* * * R E J E C T E D * * *''R#30'
            END
         END ELSE
*NPR15            LINE := OCONV(DA<6,I>,'D2-')'R#11'
*NPR15            LINE := DA<7,I>'R#9'
*NPR15            LINE := OCONV(DA<8,I>,'MR2,')'R#11'
            LINE := OCONV(DA<6,I>,'D2-')'R#10'
            LINE := DA<7,I>'R#8'
            LINE := OCONV(DA<8,I>,'MR2,')'R#11'
            LINE := SPACE(2):DA<11,I>
         END
         PA<-1> = LINE
*** Add bill notes to display
         IF DA<10,I> # '' THEN
            NSVAL=DCOUNT(DA<10,I>,@SVM)
            FOR J = 1 TO NSVAL
               PA<-1> = 'NOTE: ':DA<10,I,J>
            NEXT J
         END
*** Accumulate Amount Paid to total field
         AMT.TOT += DA<4,I>
      NEXT I
*** Add total field to display
      PA<-1> = '-----------''R#38'
      PA<-1> = OCONV(AMT.TOT,'MD2,')'R#37'
*** Add Variance data to display (discount)
      IF (OLD.PRO.REC<10>+0) # 0 THEN
         PA<-1> = 'DISCOUNT -- ':OCONV(0-OLD.PRO.REC<10>,'MR2')
         VAR.NOTE = '     ':OLD.PRO.REC<41,1>
         VAR.NOTE.LEN = LEN(VAR.NOTE)
         IF VAR.NOTE # '' THEN
            DONE = 0
            LOOP UNTIL DONE DO
               PA<-1> = VAR.NOTE[1,80]
               VAR.NOTE = VAR.NOTE[81,9999]
               VAR.NOTE.LEN -= 80
               IF VAR.NOTE.LEN < 0 THEN DONE = 1
            REPEAT
         END
      END
*** Add Variance data to display (overcharge)
      IF (OLD.PRO.REC<11>+0) # 0 THEN
         PA<-1> = 'OVERCHARGE -- ':OCONV(0-OLD.PRO.REC<11>,'MR2')
         VAR.NOTE = '     ':OLD.PRO.REC<41,2>
         VAR.NOTE.LEN = LEN(VAR.NOTE)
         IF VAR.NOTE # '' THEN
            DONE = 0
            LOOP UNTIL DONE DO
               PA<-1> = VAR.NOTE[1,80]
               VAR.NOTE = VAR.NOTE[81,9999]
               VAR.NOTE.LEN -= 80
               IF VAR.NOTE.LEN < 0 THEN DONE = 1
            REPEAT
         END
      END
*
*NPR12
      GOSUB CHECK.FOR.ADD.NOTES          ; * NPR12
* NPR99      NOTE.VIN = ADD.NOTE.REC<4>         ; * NPR12

      NOTE.VIN = ''                      ; * NPR99
      N.NOTES = DCOUNT(ADD.NOTE.REC<4>,@VM)        ; * NPR99
      FOR NN = 1 TO N.NOTES              ; * NPR99
         NOTE.STR = ADD.NOTE.REC<4,NN>:" (":ADD.NOTE.REC<1,NN>:" ":OCONV(ADD.NOTE.REC<2,NN>,'D2/'):")"         ; * NPR99
         NOTE.VIN<1,-1> = NOTE.STR       ; * NPR99
      NEXT NN                            ; * NPR99

      IF NOTE.VIN NE "" THEN             ; * NPR12
         CONVERT @VM TO " " IN NOTE.VIN  ; * NPR12
         CONVERT @SVM TO " " IN NOTE.VIN           ; * NPR12
         NOTE.VIN = TRIM(NOTE.VIN)       ; * NPR12
         NOTE.VIN<2> = 75                ; * NPR12
         CALL WRAP.TEXT(NOTE.VIN,NOTE.VOUT)        ; * NPR12
         N.NOTES = NOTE.VOUT<2>          ; * NPR12
         FOR I=1 TO N.NOTES              ; * NPR12
            IF I = 1 THEN PA<-1> = STR("-",24):" A D D I T I O N A L  N O T E S ":STR("-",24)        ; * NPR12
            ADD.NOTE=NOTE.VOUT<1,I>      ; * NPR12
            PA<-1> = "  ":ADD.NOTE       ; * NPR12
         NEXT I                          ; * NPR12
      END
*NPR12
*
      RETURN
*** End JCW07


SPILL.REJECT.GUTS: ***
      REJECT.REASONS<1>=OLD.PRO.REC<59>
      REJECT.REASONS<2>=OLD.PRO.REC<60>
      REJECT.REASONS<3>=OLD.PRO.REC<61>
      REJECT.REASONS<4>=OLD.PRO.REC<62>
      REJ.TYPE = OLD.PRO.REC<66>

*NPR08      CALL AFS.SCR.REFRESH(PROG.NAME, PROG.DESC, PACK.NAME, CO.NAME,TIME.DATE, 1)
      CLR.SCR = 1 ; GOSUB DISP.SCREEN.HEADING      ; *NPR08
*
*NPR08      CRT @(29,1):AUDITOR.TEXT'L#25'
*NPR08      CRT @(0, 3):'Client : ':CLIENT.ID:' ':CLIENT.NAME:@(-4)
*NPR08      TEXT=CARRIER.ID:' ':CARRIER.NAME:' ':CARRIER.STREET:' ':CARRIER.CITY
*NPR08      CRT @(0, 4):'Carrier: ':TEXT[1,70]
*
*     CRT @(59,3):AUDITOR.TEXT           ; * NPR08 ; * JMK161
      CRT @(59,3):AUDITOR.TEXT'L#20':    ; * NPR08 ; * JMK161
      CRT @(9, 1):HLB:CLIENT.ID:' ':CLIENT.NAME:HLA          ; * NPR08  ;* NPR13
      TEXT=CARRIER.ID:' ':CARRIER.NAME:' ':CARRIER.STREET:' ':CARRIER.CITY
      CARRIER.TEXT = TRIM(CARRIER.ID:' ':CARRIER.NAME)
      CRT @(9,2):CARRIER.TEXT[1,38]
*
      CRT @(0, 5):STR('-',79)
      DISP=PRO
      IF VERSION#'' THEN
         DISP:=' Version ':VERSION
      END
      IF REJECT.FLAG='R' THEN DISP:=' (REJECTED'
      IF REJ.TYPE#'N' THEN
         DISP:='-PAYABLE'
      END ELSE
         DISP:='-NEVER PAY'
      END
      DISP:=')'
      CRT @(0, 6):'Pro#:':DISP
      CRT @(0, 7):'Date:'
      IF OLD.PRO.REC<1> THEN             ; * BILL DATE
         DISP=OLD.PRO.REC<1>'D2/'
      END ELSE
         DISP='(none)'
      END
      CRT @(5,7):DISP
      IF OLD.PRO.REC<38> # '' THEN CRT @(14, 7):'Due:':OLD.PRO.REC<38>'D2/'
      CRT @(40, 7):'Amnt:'

      IF OLD.PRO.REC<7> THEN             ; * CARRIER CHARGE
         DISP=OLD.PRO.REC<7>'R26#8'
      END ELSE
         DISP='(none)'
      END
      CRT @(45,7):DISP
      CRT @(0, 8):STR('-',79):
      CRT @(0,21):STR('-',79):
      CRT @(28,8):' REJECT PAYMENT REASONS '

      LINE = 1
      LINE.NUM=1
      VIN=74                             ; * MAX LINE LEN
      VIN<2>='ALL'                       ; * SHOW ALL REASONS (INCLUDING 'REM:')
      CALL FORMAT.REJECT.REASONS(VIN, OLD.PRO.REC, VOUT)
      IF VOUT<1> = -1 THEN
         VOUT<1> = 1                     ; * Error happened. Print it with the ForLoop
      END ELSE
         IF VOUT<1> = 0 THEN
            CALL ELINE("Contact Jim or Owen - This bill's rejection reasons are missing")
         END
      END
*
* Will the display hold all reasons?
*
      LINE.NUM = VOUT<1>
      IF LINE.NUM > 8 THEN
*
* Break reasons on screen - Only show FULL reasons -
* Don't break between lines.
*
         LINE.NUM = 8
         LOOP
         UNTIL (VOUT<2,LINE.NUM+1>#'' OR LINE.NUM < 3)
            LINE.NUM-=1
         REPEAT
      END
*
* Display the MoFos
*
      FOR RX = 1 TO LINE.NUM
         NUM = VOUT<2,RX>
         IF NUM THEN NUM=NUM'R#2':')' ELSE NUM = '   '
         TEXT.LINE = NUM:VOUT<3,RX>
         CRT @(0,9+RX):TEXT.LINE'L#79'
      NEXT
*
* If there were more reasons than what was displayed
* let the user know (Spell it out for them)
*
      IF LINE.NUM < VOUT<1> THEN
         MSG = @(18,19)
         MSG:= TERM.ESC.SEQ:CHAR(TERM.BLINK)
         MSG:= "* MORE REJECT REASONS ON FILE FOR THIS BILL *"
         MSG:= TERM.ESC.SEQ:CHAR(TERM.NORMAL)
         MSG:=@(20,20)
         MSG:= "* PRESS 'R' TO VIEW ALL REJECT REASONS *"
         CRT MSG
      END ELSE
         CRT @(20,20):"* PRESS 'R' TO VIEW A DETAILED LISTING *"
      END

      IF REJ.TYPE='N' THEN
         CALL ELINE('NOTICE! This bill is a NEVER PAY reject!')
      END
      RETURN

*---- Display data
8200: ***
*
*NPR08      DATA.DSP = @(29,1):AUDITOR.TEXT'L#25'
      DATA.DSP = ""                      ; * NPR08
*NOTE KM Tested here and this is where stack# after screen refresh comes out
*NOTE KM Determine here if override rules are in place and if so display them

*NPR08      IF PRO.REC<116> #'' AND INDEX(DATA.DSP,'*',1) THEN ;* NPR08
*NPR08      IF PRO.REC<116> #'' THEN ;* NPR08
*NPR08         OVERRIDE.RULES.COUNT = DCOUNT(PRO.REC<116>,@VM)
*NPR08         OVERRIDE.RULES.TEXT = '*'
*NPR08         FOR KM = 1 TO OVERRIDE.RULES.COUNT
*NPR08            RULES.TEXT = PRO.REC<116,KM>:'_':PRO.REC<117,KM>:'_':PRO.REC<118,KM>:'__'
*NPR08            OVERRIDE.RULES.TEXT := RULES.TEXT
*NPR08         NEXT KM
*NPR08         RULES.OUTPUT = 1
*NPR08      END ELSE
*NPR08         RULES.OUTPUT = 0
*NPR08      END

*NPR08      IF RULES.OUTPUT = '1' THEN
*NPR08         DATA.DSP := @(0,2):OVERRIDE.RULES.TEXT[1,79]
*NPR08      END

      IF CARR.FSC='Y' THEN               ; * JMK107
*NPR08         DATA.DSP := @(9,3):CLIENT.ID:'*':CLIENT.NAME:@(-4)
         DATA.DSP := @(9,1):CLIENT.ID:'*':HLB:CLIENT.NAME[1,35]:HLA    ; *NPR08  ;*NPR13
      END ELSE                           ; * JMK107
*NPR08         DATA.DSP := @(9,3):CLIENT.ID:' ':CLIENT.NAME:@(-4)
         DATA.DSP := @(9,1):CLIENT.ID:' ':HLB:CLIENT.NAME[1,35]:HLA    ; *NPR08  ;*NPR13
      END                                ; * JMK107
*
*         DATA.DSP := @(55,17):'Initiating Rep:':TRIM(LEAD.SALESMAN.NUMBER.NAME)  ;*NPR08
*
      DATA.DSP := @(59,1):SECOND.SALESMAN.NUMBER.NAME[1,20]  ; *NPR08
*
*NPR08      TEXT=CARRIER.ID:' ':CARRIER.NAME:' ':CARRIER.STREET:' ':CARRIER.CITY
      CARRIER.TEXT=CARRIER.ID:' ':CARRIER.NAME     ; *NPR08
      CARRIER.ADDR = CARRIER.STREET:' ':CARRIER.CITY
*NPR08      DATA.DSP := @(9,4):TEXT[1,70]
*NPR08      DATA.DSP := @(10,3):TEXT[1,45]    ;*NPR08
      DATA.DSP := @(9,2):CARRIER.TEXT[1,38]        ; *NPR08
      DATA.DSP := @(9,3):CARRIER.ADDR[1,40]        ; *NPR08
      DATA.DSP := @(59,2):ACCT.MGR: " " :ACCT.MGR.NAME[1,20]           ; *NPR08
      IF AUDITOR.TEXT = "" AND CL.AUDITOR NE "" THEN AUDITOR.TEXT = CL.AUDITOR   ; * NPR08
*     DATA.DSP := @(59,3):AUDITOR.TEXT   ; *NPR08 ; * JMK161
      DATA.DSP := @(59,3):AUDITOR.TEXT'L#20'       ; *NPR08 ; * JMK161
      DATA.DSP := @(9,4):OCONV(PRE.AUD.FROM.DT,"D2/")        ; *NPR08
      DATA.DSP := @(22,4):OCONV(PRE.AUD.TO.DT,"D2/")         ; *NPR08
      DATA.DSP := @(41,4):CL.STATUS      ; *NPR08
*
      DATA.DSP := @(70,4):NEW.AUDITOR.TEXT         ; *NPR08
*
      DISP=PRO
      IF VERSION#'' THEN
         DISP:=' Version ':VERSION
      END
      IF REJECT.FLAG='R' THEN DISP:=' (REJECTED)'

      IF ENTERED.BY#'' THEN DISP:='   Entered by : ':ENTERED.BY        ; * NPR024
      IF VERIFIED.BY # '' THEN DISP:='   Verified by : ':VERIFIED.BY   ; * NPR024

*NPR034      DATA.DSP := @(5,6):DISP            ; * NPR024
*NPR034      DATA.DSP := @(5,6):DISP : SPACE(75-LEN(DISP))          ; * NPR024  ; *NPR034

      DATA.DSP := @(5,6):DISP : @(-4)    ; * NPR024  ; NPR034

*NPR034&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
      IF CAPTURE.INVOICE OR CARRIER.ID='00041' THEN
         DATA.DSP := @(46,7) : INV.NUM'L#20'
         IF NUM.OF.PRO GE "0" THEN
            DATA.DSP := @(65,7):NUM.OF.PRO'R#4' : @(73,7) : TOT.NUM.OF.PRO'R#4'
         END
      END
*NPR034      IF CARRIER.ID='01075' AND INV.NUM#'' THEN
*NPR034         DATA.DSP := @(40,6):"Inv Num: ":INV.NUM'L#11'
*NPR034      END
*NPR034      IF CARRIER.ID='20114' AND INV.NUM#'' THEN
*NPR034         DATA.DSP := @(40,6):"Inv Num: ":INV.NUM'L#11'
*NPR034      END
      IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN     ; * United Parcel Service
         DATA.DSP := @(46,8):'UPS Addr Correc Chrg: '
         IF ADDRESS.CORRECTION.CHARGE NE '' THEN DATA.DSP := ADDRESS.CORRECTION.CHARGE 'R26,'
         DATA.DSP := @(46,9):'UPS Fees Charge     : '
         IF UPS.FEE.CHARGE NE '' THEN DATA.DSP := UPS.FEE.CHARGE 'R26,'
      END
*NPR034&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

      IF BILL.DATE#'' THEN DATA.DSP:=@(5,7):BILL.DATE'D2/'
      IF DUE.DATE#'' THEN
         DATA.DSP := @(14,7):'Due ':DUE.DATE'D2/'
         DATA.DSP := @(14,8):'Ent ':ENTRY.DATE 'D2/'         ; * NPRZZ
      END ELSE
         IF ENTRY.DATE#'' THEN DATA.DSP := @(14,7):'Ent ':ENTRY.DATE 'D2/'       ; * NPRZZ
      END

      DATA.DSP := @(5,8):IN.OUT'L#5'
      IF DIVISION # '' THEN
         IF DIVISION # '-' THEN
            IF CLIENT.ID='01638' THEN
               DATA.DSP := @(5,9):DIVISION'R%6'
            END ELSE
               DATA.DSP := @(5,9):DIVISION'R%5'
            END
         END ELSE
            DATA.DSP := @(5,9):DIVISION:SPACE(4)
         END
      END

* NPR028 Start Changes
      IF DO.BOL.POP THEN
         IF M.BOL.REC NE "" THEN
            DATA.DSP := @(11,8) : "BOL # ":ID.BOL.CRX
         END
      END
* NPR028 End Changes

      IF ORIG.ZIP # '' THEN
         DESC = ORIG.ZIP ZIP.MASK
         IF ZIP.LEN = '5' OR ZIP.LEN = 'C' THEN DESC = DESC:' ':ORIG.CITY:', '
         DESC = DESC:ORIG.STATE
         IF ORIG.ZIP = "99999" AND ORIG.COUNTRY.CD NE "" THEN
*            READV ORIG.COUNTRY.NAME FROM F.COUNTRIES,ORIG.COUNTRY.CD, 1 THEN      ;* NPR020
*               DATA.DSP := @(5,10):ORIG.ZIP ZIP.MASK:" ":ORIG.COUNTRY.NAME:@(-4)  ;* NPR020
*            END                                                                   ;* NPR020
            DATA.DSP := @(5,10):DESC:" (":ORIG.COUNTRY.CD:")"          ; * NPR020
         END ELSE                        ; * NPR020
            DATA.DSP := @(5,10):DESC:@(-4)
         END
      END
      IF DEST.ZIP # '' THEN
         DESC = DEST.ZIP ZIP.MASK
         IF ZIP.LEN = '5' OR ZIP.LEN = 'C' THEN DESC = DESC:' ':DEST.CITY:', '
         DESC = DESC:DEST.STATE
         IF DEST.ZIP = "99999" AND DEST.COUNTRY.CD NE "" THEN
*            READV DEST.COUNTRY.NAME FROM F.COUNTRIES,DEST.COUNTRY.CD, 1 THEN      ;* NPR020
*               DATA.DSP := @(5,11):DEST.ZIP ZIP.MASK:" ":DEST.COUNTRY.NAME:@(-4)  ;* NPR020
*            END                                                                   ;* NPR020
            DATA.DSP := @(5,11):DESC:" (":DEST.COUNTRY.CD:")"          ; * NPR020
         END ELSE                        ; * NPR020
            DATA.DSP := @(5,11):DESC:@(-4)
         END
      END

      DATA.DSP := @(5,12):EXP.CODE:' ':EXP.CODE.DESC:@(-4)
      IF VC.DESC # '' THEN
         BEGIN CASE
            CASE IN.OUT='O'
               LN = 'Cust.':VC.DESC
            CASE IN.OUT='I'
               LN = 'Vend.':VC.DESC
            CASE IN.OUT='T'
               LN = 'Shpr.':VC.DESC
         END CASE
         DATA.DSP := @(0,13):LN
      END

      DATA.DSP := @(5,14):CLASS<1,1>
      DATA.DSP := @(5,15):MILEAGE'L1,#10'
      IF (CLIENT.ID='01323' OR CLIENT.ID='01324' OR CLIENT.ID='01325' OR CLIENT.ID='01326') AND (USER='MYRA' OR USER='JAUDIT' OR USER='SMICHALIK' OR USER='DAVID' OR SPECIAL.NIKKI.VACATION) THEN
         DATA.DSP := @(0,20) : WEIGHT'R#7' : '  Dim'
         DATA.DSP := @(0,19) : '      '
      END ELSE
         DATA.DSP := @(0,19) : WEIGHT'R#6'
      END
      DATA.DSP := CARRIER.CHG'R26#9'
      DATA.DSP := ACTUAL.CHG'R26#9'
      IF FLAT.RATE THEN
         DATA.DSP := 'F'
      END ELSE
         DATA.DSP := ' '
      END
*DF      DATA.DSP := VARIANCE'R26#7' : MISROUTE.AMOUNT'R26#11'
      DATA.DSP := VARIANCE'R26#7'
      DATA.DSP := @(43,19) : MISROUTE.AMOUNT'R26#10'
      LOCATE 'A' IN VERIFIED<1> SETTING NUL THEN
         DATA.DSP := @(8,20):"|--From On-Line Audit--|"
      END ELSE
         IF ENTRY.DATE#'' AND ENTRY.DATE < "11140" THEN
            DATA.DSP := @(8,20):"|-Entered on ":ENTRY.DATE'D2/':" -|"
*DF        END ELSE
*DF           DATA.DSP := @(8,20):SPACE(24)
         END
      END
*
      DATA.DSP := @(37,13):"Class: "
      DATA.DSP := @(37,14):"Weight:"
      N.CLASSES = DCOUNT(CLASSES<1>,@VM)           ; * NPR08
*
      IF N.CLASSES GT "5" THEN CLC = 5 ELSE CLC = N.CLASSES  ; * NPR08
*NPR08         FOR XX = 1 TO 5
      FOR XX = 1 TO CLC
         DATA.DSP := @(37+XX*7,13):CLASSES<1,XX>'R#7'
         DATA.DSP := @(37+XX*7,14):WEIGHTS<1,XX>'R#7'
      NEXT XX
      IF CLASSES<1,6>#'' THEN DATA.DSP := @(75,15):'more'
*
      IF MISROUTE.CARRIER#'' THEN
         READV MISROUTE.NAME FROM F.CARRIERS,MISROUTE.CARRIER,1 ELSE
            MISROUTE.NAME='Unknown Carrier'
         END
         DATA.DSP := @(56,19):MISROUTE.CARRIER'R%5':' ':MISROUTE.NAME'L#11'
      END ELSE
         DATA.DSP := @(56,19):SPACE(16)
      END
      DATA.DSP := @(43,20) : LCC.AMOUNT'R26#10'
      IF LCC.CARRIER#'' THEN
         READV LCC.NAME FROM F.CARRIERS,LCC.CARRIER,1 ELSE
            LCC.NAME='Unknown Carrier'
         END
         DATA.DSP := @(56,20):LCC.CARRIER'R%5':' ':LCC.NAME'L#11'
      END ELSE
         DATA.DSP := @(56,20):SPACE(16)
      END
      DATA.DSP := @(0,21):AIR.PIECES'R#7'
      DATA.DSP := @(0,21):DIM.WEIGHT'R#7'
*     IF VOID.DESC # '' THEN DATA.DSP := @(0,21):'Voided - ':VOID.DESC'L#60'
*
      IF RULES.OUTPUT = '1' THEN         ; *NPR08
         DATA.DSP := @(59,4):'Y'         ; *NPR08
      END ELSE                           ; *NPR08
         DATA.DSP := @(59,4):'N'         ; *NPR08
      END
*
      CRT DATA.DSP
*
      RETURN

*---- Select inquire options
8250: ***
*
*NPR06      IF QI = 'I' OR QI = '3' THEN
      IF QI = 'I' OR QI = '3' OR QI = 'ADJ' OR QI = 10 THEN  ; *NPR06
         LOOP
*           HELP = "[cr]=Exit B=Bills/Lading C=Class D=Disc V=Var E=Exp L=Logis " ; * JMK119
*           IF OLD.PRO.REC<88>#'' THEN HELP:= "I=EDI Info " ; * JMK119
            HELP = "[cr]=Exit [B]OLs [C]lass [D]isc [V]ar [E]xp [L]ogis "        ; * JMK119
*NPR08            IF OLD.PRO.REC<88>#'' THEN HELP:= "ED[I] Info "  ; * JMK119
            IF OLD.PRO.REC<88>#'' THEN HELP:= "ED[I] "       ; * JMK119 ; * NPR08
            IF OLD.PRO.REC<213>#'' THEN HELP:= "[N]otes "    ; * JMK119
            IF OLD.PRO.REC<116>#'' THEN HELP:= "[O]verRds"   ; * NPR08
            CALL GEN.IN(0,22,'Enter inquiry options. -','',Q,0,1,'','',1,-1,22,1,QI,HELP,0,23)
            CC+=LEN(QI) ; GOSUB PRINT.CC
         UNTIL QI = '' DO
            QI = OCONV(QI,'MCU')
            BEGIN CASE
               CASE QI = ''
                  NULL
               CASE QI = 'B'
                  VIN=0
                  VIN<2>=USER
                  VIN<4>=IN.OUT          ; * Send In / Out Flag Every Time
                  VIN<5>=CARRIER.ID
                  VIN<12>=ACTUAL.CHG     ; * JMK84
                  VIN<13>=BOL.DIST       ; * JMK84
                  CALL FB.2.1.BOL.NEW(VIN,VOUT,CLIENT.ID,MAT CLIENT.REC,BOL,QI,'I')
                  CC+=VOUT<1> ; GOSUB PRINT.CC
                  GOSUB 8100             ; * NPR024
                  GOSUB 8200             ; * NPR024
               CASE QI = 'D'
                  CALL FB.2.1.DISC(DISC.PERC,DISC.DET,NET,'I')
                  CALL FB.CLEAR.WINDOW
               CASE QI = 'C'
                  CALL FB.2.1.CLASS(CLASS,QI,'I')
                  CALL FB.CLEAR.WINDOW
                  GOSUB 8100             ; * NPR024
                  GOSUB 8200             ; * NPR024
               CASE QI = 'V'
                  VIN=0                  ; * Starting Characters
                  VIN<2>=USER
                  GOSUB GET.ALLOW.DISCOUNTS
                  VIN<3>=ALLOW.DISCOUNTS
                  VIN<4>=CLIENT.ID
                  VIN<5>=CARRIER.ID
                  CALL FB.2.1.VARIANCE.NEW(VIN,VOUT,MAT CLIENT.REC,BAL.DUE,VARIANCE,VAR.ARR,'I')
                  CC+=VOUT<1> ; GOSUB PRINT.CC
                  DISC.DESC=VOUT<2>      ; * JMK34
                  GOSUB 8100
                  GOSUB 8200
               CASE QI = 'E'
                  VIN=0                  ; * Starting Characters for Subroutine
                  VIN<2>=USER
                  CALL FB.2.1.DIST.NEW(VIN,VOUT,F.DIV,F.EXP,ACTUAL.CHG,DTAB,'I')
                  CC+=VOUT<1> ; GOSUB PRINT.CC
                  CALL FB.CLEAR.WINDOW
                  GOSUB 8100             ; * NPR024
                  GOSUB 8200             ; * NPR024
               CASE QI = 'L'
                  VIN=0
                  VIN<2>=USER
                  CALL FB.2.1.VAR.DIST.NEW(VIN,VOUT,F.VAR,VAR.ARR<3>,VAR.REC,'I')
                  CC+=VOUT<1> ; GOSUB PRINT.CC
                  CALL FB.CLEAR.WINDOW
                  GOSUB 8100             ; * NPR024
                  GOSUB 8200             ; * NPR024
               CASE QI = 'I' AND OLD.PRO.REC<88>#''
                  EDI.VIN=''
                  EDI.VIN<1>=CLIENT.ID
                  EDI.VIN<2>=CARRIER.ID
                  EDI.VIN<3>=PRO
                  EDI.VOUT=''
                  CALL FB.2.1.EDI(EDI.VIN,EDI.VOUT,OLD.PRO.REC)
                  QI=''
                  GOSUB 8100
                  GOSUB 8200
               CASE QI = 'N' AND OLD.PRO.REC<213>#''         ; * JMK119
                  CALL FB.2.1.NOTES(FB.NOTE,QI,1)  ; * JMK119
                  GOSUB 8100             ; * JMK119
                  GOSUB 8200             ; * JMK119
               CASE QI = 'O' AND OLD.PRO.REC<116>#''         ; * NPR08
                  GOSUB DISPLAY.OVERRIDE.RULES     ; * NPR08
                  GOSUB 8100             ; * NPR08
                  GOSUB 8200             ; * NPR08
            END CASE
         REPEAT
      END

      RETURN
*
DISP.SCREEN.HEADING: * DISPLAY SCREEN HEADING ;*  NPR08
*
      IF CLR.SCR THEN
         CRT @(-1):
      END ELSE
         CRT @(0,0):@(-4):
         CRT @(0,1):@(-4):
      END
*
      CRT @(0,0):STR("-",23):" F R E I G H T  B I L L  E N T R Y ":STR("-",22)   ; * NPR08
*
      RETURN                             ; * NPR08
*
*---- Assign data
8300: ***
      BILL.DATE = PRO.REC<1>
      INV.NUM = PRO.REC<94>
      DUE.DATE = PRO.REC<38>
      IN.OUT = PRO.REC<2>
      ORIG.ZIP = PRO.REC<3>
      DEST.ZIP = PRO.REC<4>
      EXP.CODE = PRO.REC<5>
      WEIGHT = PRO.REC<6>
      CARRIER.CHG = PRO.REC<7>
      ACTUAL.CHG = PRO.REC<8>
      DIVISION = PRO.REC<9>

      VAR.ARR<1> = -PRO.REC<10>
      VAR.ARR<2> = -PRO.REC<11>
      VAR.ARR<3> = -PRO.REC<12>

      BOL = PRO.REC<16>
      BOL.DIST = PRO.REC<205>            ; * JMK84
      VC.ID = PRO.REC<17>
      IF CL.VEND.FLAG = 'Y' ! CL.CUST.FLAG = 'Y' THEN
         IF VC.ID MATCHES "5N" THEN
            IF VC.ID #'' AND VC.DESC = '' THEN
*DF               READV VC.DESC FROM F.VEND.CUST,VC.ID,1 ELSE DESC = ''
               READ VC.REC FROM F.VEND.CUST,VC.ID ELSE VC.REC = ''
               VC.DESC=VC.REC<1>
               VC.OVERRIDE=VC.REC<10>
            END
         END ELSE
            VC.DESC = VC.ID
            VC.ID = ''
         END
      END

      MILEAGE = PRO.REC<19>
      ORIG.STATE = PRO.REC<25>
      DEST.STATE = PRO.REC<26>
      ORIG.CITY = PRO.REC<27>
      DEST.CITY = PRO.REC<28>
      IF PRO.REC<39>='A' THEN AUDIT='Y' ELSE AUDIT='N'
*DF      DISC.FLAG = PRO.REC<45>
      MIN.CHG = PRO.REC<46>
*DF      CLASS<1> = PRO.REC<50>

*NPR123
      ENTERED.BY = PRO.REC<53>           ; * NPR123
      VERIFIED.BY = PRO.REC<54>          ; * NPR123
*NPR123

      CLASS<2> = PRO.REC<58>
      AIR.PIECES = PRO.REC<57>
      BILL.STATUS = PRO.REC<68>
      CLASSES = PRO.REC<74>
      WEIGHTS = PRO.REC<75>
      FRT.ARRAY=''                       ; * JMK14
      MIS.ARRAY=''                       ; * JMK14
      MISC.CHG.CODES=''
      MISC.CHG.TIMES=DCOUNT(PRO.REC<70>,@VM)
      FOR MISC.CHG.COUNT=1 TO MISC.CHG.TIMES
         IF WEIGHTS<1,MISC.CHG.COUNT>='' & CLASSES<1,MISC.CHG.COUNT>='' THEN
            MISC.CHG.POS=DCOUNT(MISC.CHG.CODES<1>,@VM)+1
            MISC.CHG.CODES<1,MISC.CHG.POS>=PRO.REC<70,MISC.CHG.COUNT>
            CONTR.MISC.CHG.AMTS<1,MISC.CHG.POS>=PRO.REC<77,MISC.CHG.COUNT>
            BENCH.MISC.CHG.AMTS<1,MISC.CHG.POS>=PRO.REC<79,MISC.CHG.COUNT>
         END
      NEXT MISC.CHG.COUNT

      DTAB<1> = PRO.REC<31>
*DF      DTAB<2> = PRO.REC<32>
      DTAB<3> = PRO.REC<33>
      VAR.ARR<4> = -PRO.REC<34>
      VAR.ARR<5> = -PRO.REC<35>
      VAR.ARR<6> = -PRO.REC<36>
      VAR.ARR<7> = PRO.REC<41,1>
      VAR.ARR<8> = PRO.REC<41,2>
      VAR.ARR<9> = PRO.REC<41,3>
*     VOID.DESC = PRO.REC<42>
      VERIFIED = PRO.REC<45>             ; * MV with Codes to indicate "Good" Fields
      VAR.REC<1> = PRO.REC<51>
      VAR.REC<2> = PRO.REC<52>
      VAR.REC<3> = PRO.REC<56>
      LOGISTIC.AMT = PRO.REC<52>
      VARIANCE = CARRIER.CHG-ACTUAL.CHG
      IF VARIANCE = 0 THEN VAR.ARR = ''

*      X = DCOUNT(PRO.REC<22>,CHAR(253))
*      FOR I = 1 TO X
*         DISC.DET<I,1> = PRO.REC<22,I>
*         DISC.DET<I,2> = PRO.REC<23,I>
*      NEXT I
*      DISC.PERC = PRO.REC<24>
*     IF VOID.DESC # '' THEN VOIDED = 1 ELSE VOIDED = 0
      MISROUTE.ARRAY = PRO.REC<22>
      MISROUTE.ARRAY<2> = PRO.REC<23>
      MISROUTE.ARRAY<3> = PRO.REC<202>   ; * JMK62

*     ZIP.ARR<1> = PRO.REC<3>            ; * JMK12
*     ZIP.ARR<1,-1> = PRO.REC<18>        ; * JMK12
*     ZIP.ARR<1,-1> = PRO.REC<4>         ; * JMK12
      ZIP.ARR<1> = PRO.REC<120>          ; * JMK12
      ZIP.ARR<2> = PRO.REC<121>
      ZIP.ARR<3> = PRO.REC<122>
      ZIP.ARR<7> = PRO.REC<149>          ; * JMK12
*     ZIP.ARR<2,1> = PRO.REC<27>         ; * JMK12
*     ZIP.ARR<3,1> = PRO.REC<25>         ; * JMK12
      NUM.ZIPS = DCOUNT( ZIP.ARR<1>, @VM )
      ZIP.ARR<2,NUM.ZIPS> = PRO.REC<28>
      ZIP.ARR<3,NUM.ZIPS> = PRO.REC<26>
      IF CLIENT.ID='00574' THEN
         IF USER='DAVID' THEN CALL ELINE('PRESS BREAK')
         ZIP.ARR<4>=@VM:PRO.REC<136>
         ZIP.ARR<5>=@VM:PRO.REC<140>
         ZIP.ARR<6>=@VM:PRO.REC<142>
      END
      TRANS.MODE=PRO.REC<65>             ; ** From On-Line Audit
      IF VC.OVERRIDE='Y' THEN            ; * JMK55
         MISROUTE.AMOUNT = PRO.REC<189>  ; * JMK55
         MISROUTE.CARRIER = PRO.REC<190>           ; * JMK55
      END ELSE                           ; * JMK55
         MISROUTE.AMOUNT = PRO.REC<63>
         MISROUTE.CARRIER = PRO.REC<69>
      END                                ; * JMK55
      REJECT.REASONS=''
      REJECT.REASONS<1>=PRO.REC<59>
      REJECT.REASONS<2>=PRO.REC<60>
      REJECT.REASONS<3>=PRO.REC<61>
      REJECT.REASONS<4>=PRO.REC<62>
      MAILING.ADDR<1>=PRO.REC<64,1>
      MAILING.ADDR<2>=PRO.REC<64,2>
      MAILING.ADDR<3>=PRO.REC<64,3>
      MAILING.ADDR<4>=PRO.REC<64,4>
      REJ.TYPE = PRO.REC<66>
      SERVICE.LEVEL = PRO.REC<65>
      DIM.WEIGHT = PRO.REC<106>
      AIR.CHRG.CODES<1> = PRO.REC<107>
      AIR.CHRG.AMTS<1> = PRO.REC<108>
      INTL.CHRG.CODES<1> = PRO.REC<207>  ; * NPR031
      INTL.CHRG.AMTS<1> = PRO.REC<208>   ; * NPR031
      TRANS.MODE = PRO.REC<21>
      ENTRY.DATE=PRO.REC<30>
      MISSING.DATA=PRO.REC<93>
      AUDITOR=PRO.REC<89>
      VC.CODE=PRO.REC<90>
      OLA.AMT=PRO.REC<99>
      IF PRO.REC<100>#'' THEN
         VC.ID=PRO.REC<100>
      END
      CUST.VEND.ADDR<1> = PRO.REC<101>   ; * Name
      CUST.VEND.ADDR<2> = PRO.REC<102>   ; * Address1,Address2 (MV)
      CUST.VEND.ADDR<3> = PRO.REC<103>   ; * City
      CUST.VEND.ADDR<4> = PRO.REC<104>   ; * State
      CUST.VEND.ADDR<5> = PRO.REC<105>   ; * Zip
      IF PRO.REC<39>='R' THEN REJECT.FLAG = PRO.REC<39>
      OVERRIDE.STATUS=PRO.REC<96>
      OVERRIDE.FIELD=PRO.REC<116>
      OVERRIDE.OPERATOR=PRO.REC<117>
      OVERRIDE.INFO=PRO.REC<118>
      FLAT.RATE=PRO.REC<119>
      ADDRESS.CORRECTION.CHARGE=PRO.REC<123>
      UPS.FEE.CHARGE=PRO.REC<148>        ; * JMK11
      TL.BILL.MILES=PRO.REC<150>         ; * JMK12
      IF AIR.CAR THEN                    ; * JMK164
         AIR.CHRG.CODES=PRO.REC<151>     ; * JMK12
         AIR.CHRG.AMTS=PRO.REC<152>      ; * JMK12
      END ELSE                           ; * JMK164
         DTL.CHRG.CODES=PRO.REC<151>     ; * JMK12
         DTL.CHRG.AMTS=PRO.REC<152>      ; * JMK12
      END                                ; * JMK164
      TL.CHG.AMTS=PRO.REC<152>           ; * JMK12
*DF      IF (IN.OUT='I' AND CLIENT.ID#'01105') OR (IN.OUT='O' AND CLIENT.ID='01105') THEN
*     IF ORIG.ZIP MATCH('1A1N1A1N1A1N') AND (CLIENT.ID='00978' OR CLIENT.ID='01105') THEN ; * JMK112
      IF ORIG.ZIP MATCH('1A1N1A1N1A1N') AND (CLIENT.ID='00978' OR CLIENT.ID='01105' OR CLIENT.ID='01428') THEN           ; * JMK112
         DIDUTY<2,1>=PRO.REC<124>
      END
*DF      IF (IN.OUT='O' AND CLIENT.ID#'01105') OR (IN.OUT='I' AND CLIENT.ID='01105') THEN
*     IF DEST.ZIP MATCH('1A1N1A1N1A1N') AND (CLIENT.ID='00978' OR CLIENT.ID='01105') THEN ; * JMK112
      IF DEST.ZIP MATCH('1A1N1A1N1A1N') AND (CLIENT.ID='00978' OR CLIENT.ID='01105' OR CLIENT.ID='01428') THEN           ; * JMK112
         DODUTY<2,1>=PRO.REC<125>
         DODUTY<2,2>=PRO.REC<126>
         DODUTY<2,3>=PRO.REC<127>
         DODUTY<2,4>=PRO.REC<128>
      END
      IF (ORIG.ZIP MATCH('1A1N1A1N1A1N') OR DEST.ZIP MATCH('1A1N1A1N1A1N')) AND (CLIENT.ID='01460') THEN       ; * JMK112
         DODUTY<2,1>=PRO.REC<125>        ; * JMK112
         DODUTY<2,2>=PRO.REC<126>        ; * JMK112
         DODUTY<2,3>=PRO.REC<127>        ; * JMK112
         DODUTY<2,4>=PRO.REC<128>        ; * JMK112
      END                                ; * JMK112
      LCC.AMOUNT=PRO.REC<143>
      LCC.CARRIER=PRO.REC<147>
      DISC.DESC=PRO.REC<166>             ; * JMK58
      FOR UATT=1 TO 6                    ; * JMK49
         UFLDS<UATT>=PRO.REC<182+UATT>   ; * JMK49
      NEXT UATT                          ; * JMK49
      CONTR.FSC.PARMS=PRO.REC<199>       ; * JMK61
      BENCH.FSC.PARMS=PRO.REC<200>       ; * JMK61
      AFS.FSC.PARMS=PRO.REC<201>         ; * JMK61
      FB.NOTE=PRO.REC<213>               ; * JMK111
      MISC.REASON=PRO.REC<218>           ; * JMK157

      ORIG.COUNTRY.CD = PRO.REC<222>     ; *NPR020
      DEST.COUNTRY.CD = PRO.REC<223>     ; *NPR020

      TEMP.CLIENT.ID=CLIENT.ID
      RETURN


*---- Get next sequential pro number
8400: ***
      READVU NEXT.NUM FROM F.DICT.CLIENTS, 'SEQ', 1 ELSE NEXT.NUM = ''
      NEXT.NUM = NEXT.NUM 'R0'
      IF NEXT.NUM = 0 THEN NEXT.NUM = 1
      NEXT.NUM += 1
      WRITEV NEXT.NUM ON F.DICT.CLIENTS, 'SEQ', 1
      Q = NEXT.NUM 'R%5'
      RETURN


*---- SET BILL-OF-LADING CROSS REFERENCE
SET.BOL.CRX: ***
      OPEN '','FB.BOL.CRX,':CLIENT.ID TO F.BOL.CRX ELSE
         CALL OPEN.ABORT("FB.BOL.CRX,":CLIENT.ID,PROG.NAME)
      END
      IF USER='DAVID' THEN CALL ELINE('BOL - PRESS BREAK')
      BEGIN CASE                         ; * JMK135
         CASE CLIENT.ID='01311'          ; * JMK135
            PRO.ATT=10                   ; * JMK135
         CASE CLIENT.ID='01460'          ; * JMK135
            PRO.ATT=10                   ; * JMK135
         CASE CLIENT.ID='01613'
            PRO.ATT=3
         CASE 1
            PRO.ATT=1                    ; * JMK135
      END CASE                           ; * JMK135
      IF VERSION=0 THEN
         IF CHANGE.FLAG THEN
            IF OLD.PRO.ID#PRO.ID OR OLD.BOL#PRO.REC<16> THEN
               IF OLD.BOL#PRO.REC<16> THEN
                  X = DCOUNT(OLD.BOL<1>,CHAR(253))
                  FOR I = 1 TO X
                     IF OLD.BOL<1,I>#'' THEN
                        IF (CLIENT.ID#'00057' OR OLD.BOL<1,I>#'99999') AND (CLIENT.ID#'00057' OR OLD.BOL<1,I>#'88888') THEN
                           IF CLIENT.ID='01053' THEN
                              IF OLD.PRO.REC<2>='T' THEN
*DF                                 BOL.ID='I*':OLD.BOL<1,I>
                                 BOL.ID='O*':OLD.BOL<1,I>
                              END ELSE
                                 BOL.ID=OLD.PRO.REC<2>:'*':OLD.BOL<1,I>
                              END
                           END ELSE
                              BOL.ID=OLD.BOL<1,I>
                           END
*DF                    READ TEMP FROM F.BOL.CRX,OLD.BOL<1,I> THEN
                           READ TEMP FROM F.BOL.CRX,BOL.ID THEN
                              TEMP.PRO.NUM=FIELD(OLD.PRO.ID,'*',2)
*                             LOCATE TEMP.PRO.NUM IN TEMP<1> SETTING POS THEN    ; * JMK135
*                                DEL TEMP<1,POS>   ; * JMK135
*                                DEL TEMP<2,POS>   ; * JMK135
*                                DEL TEMP<3,POS>   ; * JMK135
*                                IF TEMP<1>='' AND CLIENT.ID#'01053' THEN ; * JMK133; * JMK135
*                                IF TEMP<1>='' AND CLIENT.ID#'01053' AND CLIENT.ID#'01529' THEN      ; * JMK133; * JMK135
                              LOCATE TEMP.PRO.NUM IN TEMP<PRO.ATT> SETTING POS THEN        ; * JMK135
                                 DEL TEMP<PRO.ATT,POS>       ; * JMK135
                                 DEL TEMP<PRO.ATT+1,POS>     ; * JMK135
                                 DEL TEMP<PRO.ATT+2,POS>     ; * JMK135
                                 IF TEMP<PRO.ATT>='' AND CLIENT.ID#'01053' AND CLIENT.ID#'01529' AND CLIENT.ID#'01613' THEN        ; * JMK133; * JMK135
                                    IF CLIENT.ID#'00981' AND CLIENT.ID#'01053' AND CLIENT.ID#'01311' AND CLIENT.ID#'01460' AND CLIENT.ID#'01613' THEN
*DF                              DELETE F.BOL.CRX,OLD.BOL<1,I>
                                       DELETE F.BOL.CRX,BOL.ID
                                    END
                                 END ELSE
*DF                            WRITE TEMP ON F.BOL.CRX,OLD.BOL<1,I>
                                    WRITE TEMP ON F.BOL.CRX,BOL.ID
                                 END
                              END
                           END
                        END
                     END
                  NEXT I
               END ELSE
                  IF OLD.PRO.ID#PRO.ID THEN
                     X=DCOUNT(BOL<1>,CHAR(253))
                     FOR I = 1 TO X
                        IF BOL<1,I>#'' THEN
                           IF (CLIENT.ID#'00057' OR BOL<1,I>#'99999') AND (CLIENT.ID#'00057' OR BOL<1,I>#'88888') THEN
                              IF CLIENT.ID='01053' THEN
                                 IF IN.OUT='T' THEN
                                    BOL.ID='I*':BOL<1,I>
                                 END ELSE
                                    BOL.ID=IN.OUT:'*':BOL<1,I>
                                 END
                              END ELSE
                                 BOL.ID=BOL<1,I>
                              END
*DF                      READ TEMP FROM F.BOL.CRX,BOL<1,I> THEN
                              READ TEMP FROM F.BOL.CRX,BOL.ID THEN
                                 TEMP.PRO.NUM=FIELD(OLD.PRO.ID,'*',2)
*                                LOCATE TEMP.PRO.NUM IN TEMP<1> SETTING POS THEN; * JMK135
*                                   DEL TEMP<1,POS>; * JMK135
*                                   DEL TEMP<2,POS>; * JMK135
*                                   DEL TEMP<3,POS>; * JMK135
*                                   IF TEMP<1>='' AND CLIENT.ID#'01053' THEN ; * JMK133
*                                   IF TEMP<1>='' AND CLIENT.ID#'01053' AND CLIENT.ID#'01529' THEN   ; * JMK133; * JMK135
                                 LOCATE TEMP.PRO.NUM IN TEMP<PRO.ATT> SETTING POS THEN     ; * JMK135
                                    DEL TEMP<PRO.ATT,POS>    ; * JMK135
                                    DEL TEMP<PRO.ATT+1,POS>  ; * JMK135
                                    DEL TEMP<PRO.ATT+2,POS>  ; * JMK135
                                    IF TEMP<PRO.ATT>='' AND CLIENT.ID#'01053' AND CLIENT.ID#'01529' THEN       ; * JMK133; * JMK135
                                       IF CLIENT.ID#'00981' AND CLIENT.ID#'01053' AND CLIENT.ID#'01613' THEN
*DF                               DELETE F.BOL.CRX,BOL<1,I>
                                          DELETE F.BOL.CRX,BOL.ID
                                       END
                                    END ELSE
*DF                             WRITE TEMP ON F.BOL.CRX,BOL<1,I>
                                       WRITE TEMP ON F.BOL.CRX,BOL.ID
                                    END
                                 END
                              END
                           END
                        END
                     NEXT I
                  END
               END
            END
         END
         IF DELETE.FLAG THEN
            X = DCOUNT(OLD.PRO.REC<16>,CHAR(253))
            FOR I = 1 TO X
               IF OLD.PRO.REC<16,I>#'' THEN
                  IF (CLIENT.ID#'00057' OR OLD.PRO.REC<16,I>#'99999') AND (CLIENT.ID#'00057' OR OLD.PRO.REC<16,I>#'88888') THEN
                     IF CLIENT.ID='01053' THEN
                        IF OLD.PRO.REC<2>='T' THEN
                           BOL.ID='I*':OLD.PRO.REC<16,I>
                        END ELSE
                           BOL.ID=OLD.PRO.REC<2>:'*':OLD.PRO.REC<16,I>
                        END
                     END ELSE
                        BOL.ID=OLD.PRO.REC<16,I>
                     END
*DF                READ TEMP FROM F.BOL.CRX,OLD.PRO.REC<16,I> THEN
                     READ TEMP FROM F.BOL.CRX,BOL.ID THEN
                        TEMP.PRO.NUM=FIELD(OLD.PRO.ID,'*',2)
*                       LOCATE TEMP.PRO.NUM IN TEMP<1> SETTING POS THEN          ; * JMK135
*                          DEL TEMP<1,POS>         ; * JMK135
*                          DEL TEMP<2,POS>         ; * JMK135
*                          DEL TEMP<3,POS>         ; * JMK135
*                          IF TEMP<1>='' AND CLIENT.ID#'01053' THEN ; * JMK133
*                          IF TEMP<1>='' AND CLIENT.ID#'01053' AND CLIENT.ID#'01529' THEN  ; * JMK133; * JMK135
                        LOCATE TEMP.PRO.NUM IN TEMP<PRO.ATT> SETTING POS THEN    ; * JMK135
                           DEL TEMP<PRO.ATT,POS>   ; * JMK135
                           DEL TEMP<PRO.ATT+1,POS>           ; * JMK135
                           DEL TEMP<PRO.ATT+2,POS>           ; * JMK135
                           IF TEMP<PRO.ATT>='' AND CLIENT.ID#'01053' AND CLIENT.ID#'01529' AND CLIENT.ID#'01613' THEN    ; * JMK133; * JMK135
                              IF CLIENT.ID#'00981' AND CLIENT.ID#'01053' AND CLIENT.ID#'01613' THEN
*DF                          DELETE F.BOL.CRX,OLD.PRO.REC<16,I>
                                 DELETE F.BOL.CRX,BOL.ID
                              END
                           END ELSE
*DF                        WRITE TEMP ON F.BOL.CRX,OLD.PRO.REC<16,I>
                              WRITE TEMP ON F.BOL.CRX,BOL.ID
                           END
                        END
                     END
                  END
               END
            NEXT I
         END ELSE
            X = DCOUNT(BOL<1>,CHAR(253))
            FOR I = 1 TO X
               IF BOL<1,I>#'' THEN
                  IF (CLIENT.ID#'00057' OR BOL<1,I>#'99999') AND (CLIENT.ID#'00057' OR BOL<1,I>#'88888') THEN
                     IF CLIENT.ID='01053' THEN
                        IF IN.OUT='T' THEN
                           BOL.ID='I*':BOL<1,I>
                        END ELSE
                           BOL.ID=IN.OUT:'*':BOL<1,I>
                        END
                     END ELSE
                        BOL.ID=BOL<1,I>
                     END
*DF                READ TEMP FROM F.BOL.CRX,BOL<1,I> THEN
                     READ TEMP FROM F.BOL.CRX,BOL.ID THEN
                        TEMP.PRO.NUM=FIELD(PRO.ID,'*',2)
*                       LOCATE TEMP.PRO.NUM IN TEMP<1> SETTING POS ELSE          ; * JMK135
*                          TEMP<1,-1>=TEMP.PRO.NUM           ; * JMK135
*                          TEMP<2,-1>=FIELD(PRO.ID,'*',1)    ; * JMK135
*                          TEMP<3,-1>=DATE()       ; * JMK135
                        LOCATE TEMP.PRO.NUM IN TEMP<PRO.ATT> SETTING POS ELSE    ; * JMK135
                           TEMP<PRO.ATT,-1>=TEMP.PRO.NUM     ; * JMK135
                           TEMP<PRO.ATT+1,-1>=FIELD(PRO.ID,'*',1)      ; * JMK135
                           TEMP<PRO.ATT+2,-1>=DATE()         ; * JMK135
*DF                     WRITE TEMP ON F.BOL.CRX,BOL<1,I>
                           WRITE TEMP ON F.BOL.CRX,BOL.ID
                        END
                     END ELSE
                        TEMP = ''
*                       TEMP<1> = FIELD(PRO.ID,'*',2)        ; * JMK135
*                       TEMP<2> = FIELD(PRO.ID,'*',1)        ; * JMK135
*                       TEMP<3> = DATE()           ; * JMK135
                        TEMP<PRO.ATT> = FIELD(PRO.ID,'*',2)  ; * JMK135
                        TEMP<PRO.ATT+1> = FIELD(PRO.ID,'*',1)          ; * JMK135
                        TEMP<PRO.ATT+2> = DATE()   ; * JMK135
*DF                  WRITE TEMP ON F.BOL.CRX,BOL<1,I>
                        WRITE TEMP ON F.BOL.CRX,BOL.ID
                     END
                  END
               END
            NEXT I
         END
      END
      RETURN


*---- SET APPROVED CARRIER FLAG
SET.APRVD.CARR: ***
      READ X FROM F.APRVD.CARRS,CARRIER.ID THEN
         BEGIN CASE
            CASE X<1> = '' AND X<2> = ''
               APRVD.CARRIER = 'Y'
            CASE X<1> # '' & X<2> NE ''
               IF PRO.REC<1> LT X<1> OR PRO.REC<1> GT X<2> ELSE
                  APRVD.CARRIER = 'Y'
               END
            CASE X<1> # '' AND X<2> = ''
               IF PRO.REC<1> GE X<1> THEN APRVD.CARRIER = 'Y'
            CASE X<1> = '' AND X<2> # ''
               IF PRO.REC<1> LE X<2> THEN APRVD.CARRIER = 'Y'
         END CASE
      END

      RETURN


*---- WRITE MODIFICATIONS
WRITE.MODS: ***
      IF USER='DEBBIE' OR USER='OWEN' THEN
         LOOP
            HELP = "[Y]=Post adjustment. [N]=Do not post adjustment."
*OH         HELP = "[N]=Do not post adjustment."
            CALL GEN.IN(0,22,'Post adjustment? N','',Q,0,1,'','',1,-1,22,1,QI,HELP,0,23)
            CC+=LEN(QI) ; GOSUB PRINT.CC
            QI = OCONV(QI,'MCU')
            IF QI = '' THEN QI = 'N'
         UNTIL QI = 'Y' ! QI = 'N' DO
*OH      UNTIL QI = 'N' DO
         REPEAT
      END ELSE
         QI='N'
      END
      ADJ.REC = ''
      ADJ.REC<1> = DATE()
      ADJ.REC<2> = (PRO.REC<8>+PRO.REC<42>+PRO.REC<43>+PRO.REC<44>)-(OLD.PRO.REC<8>+OLD.PRO.REC<42>+OLD.PRO.REC<43>+OLD.PRO.REC<44>)
      ADJ.REC<3> = CARRIER.ID
      ADJ.REC<4> = CLIENT.ID
      ADJ.REC<5> = PRO
      ADJ.REC<6> = PREV.SELECTED

*---- Post carrier adjustment if requested

      IF QI = 'Y' THEN
         DONE = 0
         SEQ = 1
         LOOP
            ADJ.ID = DATE():'*':CLIENT.ID:'*':SEQ
            READ DUMMY FROM F.ADJUSTS,ADJ.ID ELSE DONE = 1
         UNTIL DONE DO
            SEQ = SEQ+1
         REPEAT
         WRITE ADJ.REC ON F.ADJUSTS,ADJ.ID
      END

*---- Post freight bill modification record

      DONE = 0
      SEQ = 1
      ADJ.REC<2> = PRO.REC<8>-OLD.PRO.REC<8>
      ADJ.REC<7> = OLD.PRO.REC<8>
      ADJ.REC<8> = PRO.REC<8>
*
* Reset attribute to the difference in the actual charge for the
* FB.MOD file as this is used to balance and the adjustment should
* not contain commission differences.
*
      LOOP
         ADJ.ID = DATE():'*':CLIENT.ID:'*':SEQ
         READ DUMMY FROM F.MODS,ADJ.ID ELSE DONE = 1
      UNTIL DONE DO
         SEQ = SEQ+1
      REPEAT
      WRITE ADJ.REC ON F.MODS,ADJ.ID

      RETURN


ADD.LINE: ****
      ADD.COUNT=DCOUNT(DA<1>,@VM)+1
      DA<1,ADD.COUNT>=PRO.EXT
      DA<2,ADD.COUNT>=DLOOK<1>
*     DA<3,ADD.COUNT>=DLOOK<7>
*     Brian Wanted to See the Carrier Amount Billed!
      DA<3,ADD.COUNT>=DLOOK<8>-DLOOK<11>-DLOOK<10>
      DA<4,ADD.COUNT>=DLOOK<8>
      DA<5,ADD.COUNT>=DLOOK<37>          ; ** Process Date
      DA<6,ADD.COUNT>=DLOOK<15>          ; ** Check Date
      CHECK.ID=DLOOK<14>                 ; ** Check Number
      CHECK.NUM=FIELD(CHECK.ID,"*",1)
      MATREAD CHECK.REC FROM F.CHECKS , CHECK.ID ELSE
         MAT CHECK.REC=''
      END
      CHECK.AMT = FCK.AMT
      DA<7,ADD.COUNT>=CHECK.NUM
      DA<8,ADD.COUNT>=CHECK.AMT
*     CRT @(0,23):"STOP NOW ":DLOOK<39> ; INPUT NUL
      DA<9,ADD.COUNT>=DLOOK<39>          ; *REJECT.FLAG
*     DA<10,ADD.COUNT>=DLOOK<213>        ; * JMK111 ; * JMK119
      DA<10,ADD.COUNT>=CHANGE(DLOOK<213>,@VM,@SVM)           ; * JMK119

      ACH.CHECK.FLAG = "C"               ; * NPR15
      IF CHECK.NUM NE '' THEN            ; * NPR15
         IF CHECK.REC(26) NE "" THEN ACH.CHECK.FLAG = "A"    ; * NPR15
      END ELSE                           ; * NPR15
         IF CARRIER.REC<102> = "A" THEN ACH.CHECK.FLAG = "A"           ; * NPR15
      END                                ; * NPR15
      DA<11,ADD.COUNT> = ACH.CHECK.FLAG  ; * NPR15
      RETURN


PRINT.CARRIER.ADDRESS.LETTER: ***
      RVIN = CARRIER.ID
      RVIN<2> = CLIENT.ID
      RVIN<3> = PRO.ID
      RVOUT=''
      CALL FB.2.1.CARRIER.LETTER(RVIN, RVOUT)
      RETURN


INIT.REJECT.INFO: ***
      REJECT.FLAG = OLD.PRO.REC<39>
      REJECT.REASONS<1>=OLD.PRO.REC<59>
      REJECT.REASONS<2>=OLD.PRO.REC<60>
      REJECT.REASONS<3>=OLD.PRO.REC<61>
      REJECT.REASONS<4>=OLD.PRO.REC<62>
      MAILING.ADDR<1>=OLD.PRO.REC<64,1>
      MAILING.ADDR<2>=OLD.PRO.REC<64,2>
      MAILING.ADDR<3>=OLD.PRO.REC<64,3>
      MAILING.ADDR<4>=OLD.PRO.REC<64,4>
      RETURN


*---- Routine to add and remove codes from VERIFIED
UPDATE.VERIFY: ***
*  VER.CODE - Code to manulipate
*             P  - Pro Number
*             A  - Actual Charge
*             E  - Expense Code
*             DC - Division Code
*             CC -  Carrier Charge
*             VD -  Variance Distribution
*             M  - Misroute information
*             LD - Logistics Distribution
*  VER.TYPE - 'R'emove Code, 'A'dd Code
      BEGIN CASE
         CASE VER.TYPE='R'
            LOCATE VER.CODE IN VERIFIED<1> SETTING POS THEN
               DEL VERIFIED<1,POS>
            END
         CASE VER.TYPE='A'
            LOCATE VER.CODE IN VERIFIED<1> BY 'AL' SETTING POS ELSE
               INS VER.CODE BEFORE VERIFIED<1,POS>
            END
         CASE 1
            CALL ELINE("Invalid VER.TYPE of '":VER.TYPE:"'  Stop and Call Programming!")
            CC+=1 ; GOSUB PRINT.CC
      END CASE
      RETURN


CHECK.XREF.CARRIERS: ****
*     Input:   XREF.CARRIERS multi Valued
*              CHK.PRO ; * Pro Nuber to Check (For Multiple Styles)
*     Purpose: Checks Pro Numbers Across Multi Carriers in List
*              if one is found flags user as duplicate and returns to pro
*     LOCATE CARRIER.ID IN XREF.CARRIERS<1> SETTING POS THEN
*       DEL XREF.CARRIERS<1,POS>; * Remove This One Already Checked
      TIMES=DCOUNT(XREF.CARRIERS<1>,@VM)
      FOR XCHK = 1 TO TIMES
         CHK.ID = XREF.CARRIERS<1,XCHK>:'*':CHK.PRO:"*":VERSION
         READ DUMMY FROM F.CRX,CHK.ID THEN
            IF DUMMY<2> > XREF.CHECK.DATE THEN     ; * JMK124
               PRO.REC = DUMMY
               PRO.REC<1>=DUMMY<2>       ; * Correct the Position of the Date ; * JMK166
               PRO.REC<2>=''             ; * Correct the I/O Flag (Not on CRX File) ; * JMK166
               DUM.CL=DUMMY<1>           ; * JMK166
               GOSUB 8100                ; * Display screen
               GOSUB 8300                ; * Assign data
               GOSUB 8200                ; * Display data
               LN1 = 'Duplicate! '
               LN1 := ' Client: ':DUMMY<1>
               LN1 := '  Carrier: ':XREF.CARRIERS<1,XCHK>
               LN1 := '  Pro: ':CHK.PRO
               LN1 := ' ent on ':DUMMY<30>'D2/'
               CRT @(0,21):LN1:@(-4)
               VAR = DUMMY<7>-DUMMY<8>
               IF DUMMY<37>='' THEN DUM.PROC='' ELSE
                  DUM.PROC='Proc ':DUMMY<37>'D2/':' '
               END
               LN2 = DUM.PROC:'Pd ':DUMMY<15>'D2/':' Ck# ':FIELD(DUMMY<14>,"*",1):' for '
               LN2 := DUMMY<13>'L26,':' act chgs ':DUMMY<8>'L26,'
               LN2 := ' var ':VAR'L26,'
               CALL ELINE(LN2)
               CC+=1 ; GOSUB PRINT.CC
               CRT @(0,21):@(-3):
               PRO.REC = ''
               RETURN TO 300             ; * ENTER PRO
            END                          ; * JMK124
         END
      NEXT XCHK
*     END
      RETURN


*---- Execute DATA stmt and reduce CC
SEND.DATA: ****
      CC-=(LEN(SND.DATA)+1)
      DATA SND.DATA
      RETURN


PRINT.CC: ***
      IF USER#'OWEN' THEN RETURN
      PRINT @(0,0):@(-4):'Characters: ':CC'R#4':
      RETURN


*---- Find all Good Carriers on a Misrouted Bill
FIND.GOOD.CARRIER: ***
      MISROUTE.ARRAY=''                  ; *<1>=Amount (MV Lowest to Highest) <2>=Carrier #
      BAD.MISROUTE.ARRAY=''              ; * JMK115
      IF CLIENT.ID='10225' AND CARRIER.ID='00510' THEN
*      Secial Override for R&M Energy & Levinge .. No Misroutes
         RETURN
      END
      IF CLIENT.ID='01148' AND CARRIER.ID='09743' THEN       ; * JMK162
*      Secial Override for Bell Sports & Standard Fordwarding .. No Misroutes    ; * JMK162
         RETURN                          ; * JMK162
      END                                ; * JMK162
      IF IN.OUT='T' THEN
*      Do not "Compute" Misroutes on Third Party Bills
         RETURN
      END

*DF      IF VAR.ARR<3>+0 > 0 THEN
*DF*    Do not "Compute" Misroutes on shipments that have logisitics
*DF*    commission. DRF
*DF         RETURN
*DF      END
* Removed the logistics part so misroutes can now be calculated even
* if there is logistics. DRF 04/14/09
*
      IF FLAT.RATE THEN
*    Do not "Compute" Misroutes on flat rate shipments
         RETURN
      END
      STMT= 'SELECT FB.AUDIT,':AUDIT.CLIENT.ID
      STMT:=' WITH 1 = "LTLALL"'
      STMT:=' AND WITH 11 = "ENABLE"'
      STMT:=' AND WITH 13 = "Y"'         ; * Core Carrier Flag = "Y"
      EXECUTE STMT RTNLIST MISR.LIST CAPTURING OUTPUT
      IF NOT(@SELECTED) THEN RETURN
GET.NEXT.CARRIER:
      READNEXT MISR.CARRIER.ID FROM MISR.LIST ELSE
         MISROUTE.AMOUNT=MISROUTE.ARRAY<1,1>
         MISROUTE.CARRIER=MISROUTE.ARRAY<2,1>
*DF       IF MISROUTE.CARRIER=CARRIER.ID THEN
         LOCATE CARRIER.ID IN MISROUTE.ARRAY<2> SETTING MISROUTE.POS THEN
** If misroute carrier is the same as the
** current carrier set misroute to null
            MISROUTE.AMOUNT=''
            MISROUTE.CARRIER=''
            MISROUTE.ARRAY=''
         END
         IF MISROUTE.CARRIER#'' THEN
            READV MISROUTE.NAME FROM F.CARRIERS,MISROUTE.CARRIER,1 ELSE
               MISROUTE.NAME='Unkown Carrier'
            END
            VER.CODE='M' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
         END
*** PICK BEST (IF ANY) CARRIER
         RETURN
      END
      IF MISR.CARRIER.ID = CARRIER.ID THEN GOTO GET.NEXT.CARRIER
      READ MISR.CARRIER.REC FROM F.CARRIERS,MISR.CARRIER.ID ELSE       ; * JMK115
         MISR.CARRIER.REC='~~ Not On File ~~'      ; * JMK115
      END                                ; * JMK115
      MISR.CARRIER.SCAC = MISR.CARRIER.REC<12>     ; * JMK115
      MISR.CARRIER.TYPE = 'A'            ; * JMK115
      IF MISR.CARRIER.REC<44>='6' THEN   ; * JMK115
         MISR.CARRIER.TYPE='B'           ; * JMK115
      END                                ; * JMK115
      READ DMRA.AUDIT FROM F.AUDIT,MISR.CARRIER.ID ELSE GOTO GET.NEXT.CARRIER
      IF DMRA.AUDIT<11>='DISABLE' THEN GOTO GET.NEXT.CARRIER:
      IF OWEN THEN CALL ELINE('Processing Misroute for Carrier ':MISR.CARRIER.ID)
      MRA.VIN=SAVE.AVOUT
      MRA.VIN<10>=MISR.CARRIER.ID        ; * Correct to "Test" Carrier Number
      MRA.VIN<16>=USER                   ; * JMK999
      MRA.VIN<17>=1                      ; * Looking for misroute flag
      NUM.OF.MISC.CHARGES=DCOUNT(MRA.VIN<21>,@VM)
      FOR XX = 1 TO NUM.OF.MISC.CHARGES
         IF MRA.VIN<21,XX>='FSC' THEN
            DEL MRA.VIN<21,XX>
            DEL MRA.VIN<22,XX>
            DEL MRA.VIN<23,XX>
         END
      NEXT XX
*     MRA.VIN<24>=CL.LOGISTICS='Y'
*     MRA.VIN<24>=0                      ; ** No Logistics Calcs Needed on Misroutes ; * JMK170
*     MRA.VIN<24>=CL.LOGISTICS='Y'       ; * JMK170
      MRA.VIN<24>=(CL.LOGISTICS='Y') & (BILL.DATE >= CLIENT.REC(149))  ; * JMK170
      MRA.VIN<25>=''
      MRA.VIN<46>=MAX.LTL                ; * JMK07
      MRA.VIN<48>=CLIENT.REC(188)        ; * JMK62 - FORCE BENCHMARK MINIMUM
      MRA.VIN<49>=CARR.FSC               ; * JMK62 - CARRIER ONLY FSC
      MRA.VIN<50>= MISR.CARRIER.SCAC     ; * JMK115
      MRA.VIN<51>= MISR.CARRIER.TYPE     ; * JMK115
      MRA.VIN<52>=SAVE.AVOUT<3>
      IF ENTRY.DATE#'' THEN
         MRA.VIN<3>=ENTRY.DATE
      END ELSE
         MRA.VIN<3>=DATE()
      END
*
* DRF04 Added the above 6 lines for calculations of FSC.
*
      READ DMRA.BENCH.FSC FROM F.NFSC,MISR.CARRIER.ID ELSE DMRA.BENCH.FSC=''
      READ DMRA.CONTR.FSC FROM F.NFSC,MISR.CARRIER.ID:"*":AUDIT.CLIENT.ID ELSE DMRA.CONTR.FSC=DMRA.BENCH.FSC
      IF DMRA.BENCH.FSC<30>='DISABLE' THEN
         DMRA.BENCH.FSC=''               ; ** No Effect
         DMRA.CONTR.FSC=''
      END
*     IF CLIENT.REC(27) < 13455 THEN     ; * JMK45
*     IF CARR.FSC # "Y" THEN        ; * JMK45; * JMK61
*        DMRA.BENCH.FSC=DMRA.CONTR.FSC   ; * JMK61
*     END                                ; * JMK61
      IF OWEN THEN CALL ELINE('Now Sending Carrier# ':MISR.CARRIER.ID)
      IF USER='DAVID' AND MISR.CARRIER.ID='00018' THEN
         CALL ELINE('PRESS BREAK')
      END
*DF     CALL FB.2.1.AUDIT.AUTO(MRA.VIN,MRA.VOUT,DMRA.AUDIT,DMRA.FSC,DTARIFFS,DTARIFF.DATE.XREF,LI.CODES,F.AUDIT.TABLES,F.AUDIT.ZIPS,F.PCIN,F.PCOUT)
      CALL FB.AUTO(MRA.VIN,MRA.VOUT,DMRA.AUDIT,DMRA.CONTR.FSC,DMRA.BENCH.FSC,DTARIFFS,DTARIFF.DATE.XREF,LI.CODES,F.AUDIT.TABLES,F.AUDIT.ZIPS,F.PCIN,F.PCOUT,F.TABLES)
      IF OWEN AND MRA.VOUT<2>#'Y' THEN CALL ELINE(MRA.VOUT<1>)
      MRA.VOUT<24>=''                    ; * Kill Why
*DFPRINT @(0,23):@(-3):MISR.CARRIER.ID:" ":MRA.OUT
*DFINPUT NUL
      TRANSIT.TIME=MRA.VOUT<49>          ; * JMK115
      ORIG.DIRECT.FLAG=MRA.VOUT<50>      ; * JMK115
      DEST.DIRECT.FLAG=MRA.VOUT<51>      ; * JMK115
      COMB.DIRECT.FLAG=MRA.VOUT<52>      ; * JMK115
      IF COMB.DIRECT.FLAG='I' AND IN.OUT='I' THEN  ; * JMK115
         REASON="Not Considered - Indirect Shipment"         ; * JMK115
         BAD.MISROUTE.ARRAY<1,-1>="~"    ; * JMK115
         BAD.MISROUTE.ARRAY<2,-1>=MISR.CARRIER.ID  ; * JMK115
         BAD.MISROUTE.ARRAY<3,-1>=MISROUTE.NAME    ; * JMK115
         BAD.MISROUTE.ARRAY<4,-1>=REASON           ; * JMK115
         BAD.MISROUTE.ARRAY<5,-1>=TRANSIT.TIME     ; * JMKXXX
         GO GET.NEXT.CARRIER             ; * JMK115
      END                                ; * JMK115
      IF MRA.VOUT<2>='Y' THEN
         MIS.CONTR.AMT=MRA.VOUT<8>
         IF MIS.CONTR.AMT > 2000 THEN    ; * JMK89 - DON'T INCLUDE LOW FB TOTALS
*           MIS.BENCH.AMT=MRA.VOUT<48,4>           ; * JMK62 - RETRIEVE BENCHMARK FROM FSC PARMS FOR BENCHMARK ; * JMK167
*           IF CARR.FSC='Y' THEN         ; * JMK62 ; * JMK167
*              MIS.BENCH.AMT=MRA.VOUT<47,4>        ; * JMK62 ; * JMK167
*           END                          ; * JMK62 ; * JMK167
            MIS.BENCH.AMT=MRA.VOUT<9>    ; * JMK167
            MIS.CONSULT.AMT=MIS.BENCH.AMT-MIS.CONTR.AMT      ; * JMK62
            NXT.PROC.DT=DATE()           ; * JMK167
            CALL NEXT.PROCESS.DATE(NXT.PROC.DT,CLIENT.DOW)   ; * JMK167
            LOCATE NXT.PROC.DT IN CLIENT.ITM<84> BY 'AR' SETTING POS ELSE        ; * JMK167
               POS=POS-1                 ; * JMK167
            END                          ; * JMK167
            IF POS<1 THEN                ; * JMK167
               LOG.COMM=0                ; * JMK167
            END ELSE                     ; * JMK167
               COMM.PERC = CLIENT.ITM<85,POS>/100  ; * JMK167
               SAVINGS = MIS.BENCH.AMT-MIS.CONTR.AMT         ; * JMK167
               LOG.COMM = (SAVINGS*COMM.PERC/100)'R0'        ; * JMK167
            END                          ; * JMK167
*           LOCATE MIS.CONTR.AMT IN MISROUTE.ARRAY<1> BY 'AR' SETTING POS ELSE NULL ; * JMK167
*           INS MIS.CONTR.AMT BEFORE MISROUTE.ARRAY<1,POS> ; * JMK167
            LOCATE (MIS.CONTR.AMT+LOG.COMM) IN MISROUTE.ARRAY<1> BY 'AR' SETTING POS ELSE NULL       ; * JMK167
            INS (MIS.CONTR.AMT+LOG.COMM) BEFORE MISROUTE.ARRAY<1,POS>  ; * JMK167
            INS MISR.CARRIER.ID BEFORE MISROUTE.ARRAY<2,POS>
            INS MIS.CONSULT.AMT BEFORE MISROUTE.ARRAY<3,POS>           ; * JMK62
            INS TRANSIT.TIME BEFORE MISROUTE.ARRAY<5,POS>    ; * JMKXXX
         END                             ; * JMK89
      END
      GOTO GET.NEXT.CARRIER
      RETURN


GET.ALLOW.DISCOUNTS: ***
*DF      IF START.DATE #'' THEN OVERCHARGE.DATE = START.DATE ELSE OVERCHARGE.DATE = CL.PRE.DATE+45
      IF START.DATE #'' THEN
         OVERCHARGE.DATE=START.DATE
      END ELSE
         IF CLIENT.REC(149)#'' THEN
            OVERCHARGE.DATE=CLIENT.REC(149)+45
         END ELSE
            OVERCHARGE.DATE=CL.PRE.DATE+45
         END
      END
* 05-21-01 Changed to 30 days per Brian Barker via Chris
*DF     IF OVERCHARGE.DATE < DATE() THEN ; * (More than 90 Days past)
*
*  Changed to use the ship date instead of todays date
*  8/6/02 DRF
*
      IF OVERCHARGE.DATE < BILL.DATE THEN          ; * (More than 90 Days past)
         BEGIN CASE
            CASE CLIENT.ID='00244'       ; * Indel Davis
               ALLOW.DISCOUNTS=1
            CASE CLIENT.ID='00418'       ; * Sunbelt Plastics
               ALLOW.DISCOUNTS=1
            CASE CLIENT.ID='00373'       ; * Station Wholesale
               ALLOW.DISCOUNTS=1
            CASE CLIENT.ID='00910'       ; * Booth Crystal Tips Per Brian
               ALLOW.DISCOUNTS=1
            CASE CLIENT.ID='00903'       ; * PT Coupling
               ALLOW.DISCOUNTS=1
            CASE CLIENT.ID='00873'       ; * Southland Rebuilders
               ALLOW.DISCOUNTS=1
            CASE CLIENT.ID='00875'       ; * Hi-Tach Oil
               ALLOW.DISCOUNTS=1
            CASE CLIENT.ID='01365'       ; * ATK ; * JMK90
               ALLOW.DISCOUNTS=1         ; * JMK90
            CASE CLIENT.ID='01530'       ; * ATK ; * JMK122
               ALLOW.DISCOUNTS=1         ; * JMK122
            CASE 1
               ALLOW.DISCOUNTS=0
         END CASE
      END ELSE
         ALLOW.DISCOUNTS=1
      END
      RETURN
*
CHECK.FOR.ADJ: ***  NPR06  Start of changes
*
      ADJ.ID.ARRAY = ""
*
      N.TOUCHES = DCOUNT(OLD.PRO.REC<85>,@VM)
      FOR I.TOUCH = 1 TO N.TOUCHES
         W.TIME = OLD.PRO.REC<85,I.TOUCH>
         W.DATE = OLD.PRO.REC<86,I.TOUCH>
         ID.ADJ = CLIENT.ID:"*":PRO.ID:"*":W.DATE:"*":W.TIME:"*OLD"
         READ W.ADJ.REC FROM F.ADJUST.HIST, ID.ADJ THEN
            ADJ.ID.ARRAY<-1> = ID.ADJ
         END
      NEXT I.TOUCH
*
      RETURN
*
DISPLAY.ADJ.DATA: *** Display Adjustments
*
*NPR08      CALL AFS.SCR.REFRESH(PROG.NAME, PROG.DESC, PACK.NAME, CO.NAME,TIME.DATE, 1)
      CLR.SCR = 1 ; GOSUB DISP.SCREEN.HEADING      ; *NPR08
*
      CRT @(0, 3):'Client : ' : CLIENT.ID:' ':HLB:CLIENT.NAME:HLA      ; *NPR13
      CRT @(0, 4):'Carrier: ' : CARRIER.ID:' ':CARRIER.NAME
      DISPP = PRO:' Version ':VERSION
      CRT @(0, 5):'Pro #  : ' : DISPP
*
      IF OLD.PRO.REC<1> THEN             ; * BILL DATE
         DDISP=OLD.PRO.REC<1>'D2/'
      END ELSE
         DDISP='(none)'
      END
      CRT @(35, 5):'Date : ' :DDISP:" ":
*IF OLD.PRO.REC<38> # '' THEN
*   CRT 'Due : ':OLD.PRO.REC<38>'D2/'
*END
      CRT "ADJUSTMENT Date : ":OCONV(FIELD(ID.ADJ,"*",5),"D2/")
*
      CRT @(0,6):STR("-",79)
*
      CRT @(22,7):"--- Now ---  "
      CRT @(35,7):"--- Prior to Adj ---"
      CRT @(61,7):"--- Difference ---"
*
      CRT @(0,8):"Carrier Charges ": "....." : OCONV(OLD.PRO.REC<7>,"MR2") "R#12":"  ":
      CRT @(39,8): OCONV(W.ADJ.REC<7>,"MR2") "R#12"
      W.DIFF = OLD.PRO.REC<7> - W.ADJ.REC<7>
      CRT @(62,8):OCONV(W.DIFF,"MR2") "R#12"
*
      CRT @(0,9):"Actual Charges  ": "....." : OCONV(OLD.PRO.REC<8>,"MR2") "R#12":"  ":
      CRT @(39,9): OCONV(W.ADJ.REC<8>,"MR2") "R#12"
      W.DIFF = OLD.PRO.REC<8> - W.ADJ.REC<8>
      CRT @(62,9):OCONV(W.DIFF,"MR2") "R#12"
*
      CRT @(0,10):"Overcharge Var  ": "....." :OCONV(OLD.PRO.REC<11>,"MR2") "R#12":"  ":
      CRT @(39,10): OCONV(W.ADJ.REC<11>,"MR2") "R#12"
      W.DIFF = OLD.PRO.REC<11> - W.ADJ.REC<11>
      CRT @(62,10):OCONV(W.DIFF,"MR2") "R#12"
*
      CRT @(0,11):"Consult Var.    ": "....." :OCONV(OLD.PRO.REC<12>,"MR2") "R#12":"  ":
      CRT @(39,11): OCONV(W.ADJ.REC<12>,"MR2") "R#12"
      W.DIFF = OLD.PRO.REC<12> - W.ADJ.REC<12>
      CRT @(62,11):OCONV(W.DIFF,"MR2") "R#12"
*
      CRT @(0,12):"Variance Code   ": "....." :OLD.PRO.REC<51> "R#12":"  ":
      CRT @(39,12): W.ADJ.REC<51> "R#12"
*
      CRT @(0,13):"Variance Amt.   ": "....." :OCONV(OLD.PRO.REC<52>,"MR2") "R#12":"  ":
      CRT @(39,13): OCONV(W.ADJ.REC<52>,"MR2") "R#12"
      W.DIFF = OLD.PRO.REC<52> - W.ADJ.REC<52>
      CRT @(62,13):OCONV(W.DIFF,"MR2") "R#12"
*
      CRT @(0,15):"Notes Now : "
      CRT @(1,16):OLD.PRO.REC<41,1>
      CRT @(1,17):OLD.PRO.REC<41,2>
*
      CRT @(0,18):"Notes Prior to Adjustment : "
      CRT @(1,19):W.ADJ.REC<41,1>
      CRT @(1,20):W.ADJ.REC<41,2>
*
      CALL ELINE("")
*
      RETURN
*
* NPR06   End of changes
*
CHECK.FOR.ADD.NOTES: *                                                 ;* NPR12
*
      ID.NOTES = CLIENT.ID:"*":PRO.ID    ; * NPR12
*
      READ ADD.NOTE.REC FROM F.NOTES, ID.NOTES ELSE ADD.NOTE.REC = ""  ; * NPR12
*
      RETURN                             ; * NPR12
*
DISPLAY.ADD.NOTES: * NPR12
*
      CALL FB.DRAW.BOX(28,4,52,7,' ','')           ; * NPR12
      CALL FB.DRAW.BOX(29,5,50,3,' ','+=+|+=+|')   ; * NPR12
      CALL FB.DRAW.BOX(29,7,50,7,' ','+=+|+=+|')   ; * NPR12
      CALL FB.PRINT.CENT(29,78,6,"A D D I T I O N A L  N O T E S")     ; * NPR12
      NOTE.VIN = ADD.NOTE.REC<4>         ; * NPR12
      CONVERT @VM TO " " IN NOTE.VIN     ; * NPR12
      CONVERT @SVM TO " " IN NOTE.VIN    ; * NPR12
      NOTE.VIN = TRIM(NOTE.VIN)          ; * NPR12
      NOTE.VIN<2> = 47                   ; * NPR12
      CALL WRAP.TEXT(NOTE.VIN,NOTE.VOUT)           ; * NPR12
      N.NOTES = NOTE.VOUT<2>             ; * NPR12
      CRT REV.ON:
      FOR I=1 TO N.NOTES                 ; * NPR12
         ADD.NOTE=NOTE.VOUT<1,I> 'L#47'  ; * NPR12
         ROW=I+7                         ; * NPR12
         IF ROW GT 11 THEN               ; * NPR12
            CRT @(56,ROW):">>> More notes ....."   ; * NPR12
            I = N.NOTES                  ; * NPR12
         END ELSE                        ; * NPR12
            CRT @(31,ROW):ADD.NOTE       ; * NPR12
         END                             ; * NPR12
      NEXT I                             ; * NPR12
      CRT REV.OFF:                       ; * NPR12
*
      RETURN                             ; * NPR12
*
DISPLAY.OVERRIDE.RULES: *** Display OverRide rules   ;* NPR08  Start of changes
*
      CRT @(57,6):"|--- Overide Info ---|"
      CRT @(60,7):"Field"
      CRT @(68,7):"Optr"
      CRT @(75,7):"Info"
*
      OVERRIDE.RULES.COUNT = DCOUNT(PRO.REC<116>,@VM)
      IF OVERRIDE.RULES.COUNT GT 13 THEN ORC = 13 ELSE ORC = OVERRIDE.RULES.COUNT
      FOR LN = 1 TO ORC
         CRT @(58,7+LN) :
         IF PRO.REC<116,LN> NE "" THEN
            OVR.FIELD = PRO.REC<116,LN>
            OVR.OPER = PRO.REC<117,LN>
            OVR.INFO = PRO.REC<118,LN>
            CRT @(59,7+LN) : OVR.FIELD "L#8"
            CRT @(69,7+LN) : OVR.OPER
            CRT @(73,7+LN) : OVR.INFO "R#6"
         END
      NEXT LN
      IF OVERRIDE.RULES.COUNT GT 13 THEN CRT @(59,21):"More Overide Info <<<"
*
      CALL ELINE("")
*
      RETURN                             ; * NPR08 End Changes
*
PROCESS.INQUIRE: ***
      INQUIRE.SEQ=0
      INQUIRE.DONE=0
      LOOP
         INQUIRE.SEQ+=1
      UNTIL INQUIRE.DONE=1 DO
         INQUIRE.HIST.ID=CLIENT.ID:'*':PRO.ID:'*':INQUIRE.SEQ
         READV NUL FROM F.INQUIRE.HIST,INQUIRE.HIST.ID,1 ELSE INQUIRE.DONE=1
      REPEAT
      INQUIRE.REC=OLD.PRO.REC
      INQUIRE.REC<34>=USER
      INQUIRE.REC<35>=DATE()
      INQUIRE.REC<36>=TIME()
      WRITE INQUIRE.REC ON F.INQUIRE,INQUIRE.HIST.ID
      INQUIRE.HIST=''
      INQUIRE.HIST<7>=USER
      INQUIRE.HIST<8>=DATE()
      INQUIRE.HIST<9>=TIME()
      WRITE INQUIRE.HIST ON F.INQUIRE.HIST,INQUIRE.HIST.ID
      GOSUB 8100                         ; * Display screen
      RETURN
GET.TL.ROUTE: *
      IF ZIP.ARR='' THEN
         ZIP.ARR<1,1>=ORIG.ZIP
         ZIP.ARR<2,1>=ORIG.CITY
         ZIP.ARR<3,1>=ORIG.STATE
         ZIP.ARR<7,1>=''
         ZIP.ARR<1,2>=DEST.ZIP
         ZIP.ARR<2,2>=DEST.CITY
         ZIP.ARR<3,2>=DEST.STATE
         ZIP.ARR<7,2>=MILEAGE
      END
      RVIN=''
      RVIN<1> = ZIP.ARR<1>
      RVIN<2> = ZIP.ARR<2>
      RVIN<3> = ZIP.ARR<3>
      RVIN<4> = TL.BILL.MILES
      RVIN<5> = CH.NUM
      RVIN<6> = IN.OUT
      RVIN<7> = CC
      ORIG = ORIG.ZIP'L#6':' ':ORIG.CITY:', ': ORIG.STATE
      RVIN<8> = ORIG
      DEST = DEST.ZIP'L#6':' ':DEST.CITY:', ': DEST.STATE
      RVIN<9> = DEST
      RVIN<10> = ZIP.ARR<7>
      BEGIN CASE
         CASE LOOKUP.ONLY ; RVIN<11>='V'
         CASE CHANGE.FLAG ; RVIN<11>='E'
         CASE 1 ; RVIN<11>='I'
      END CASE
      RVIN<12> = MILEAGE
      RVIN<13>=USER
      RVIN<14>=CLIENT.ID
      RVIN<15>=CLIENT.NAME
      RVIN<16>=CARRIER.ID
      RVIN<17>=CARRIER.NAME
      RVIN<18>=PRO.ID
      RVOUT=''

      IF USER = "YNPRATT" THEN
         CALL FB.2.1.TL.ROUTE.NP(RVIN,RVOUT,F.PCIN,F.PCOUT,F.MILEAGE,QI,MAT CLIENT.REC)
      END ELSE
         CALL FB.2.1.TL.ROUTE(RVIN,RVOUT,F.PCIN,F.PCOUT,F.MILEAGE,QI,MAT CLIENT.REC)
      END

      IF FP.CO='00002' THEN MILEAGE=RVOUT<6>       ; * JMK67

***IF USER = "NPRATT" THEN
      MILEAGE=SUM(RVOUT<4>)              ; * NPR888
***   DEBUG
***END

      CC+=RVOUT<5> ; GOSUB PRINT.CC
      QI = OCONV(QI,'MCU')
      RETURN
GET.FB.DETAILS: *

*IF CLIENT.ID = "01334" AND USER = "NPRATT" THEN  DEBUG ;* NPR022

      PARCEL.FLAG = 0                    ; * NPR031
      IF CARRIER.ID='00041' OR CARRIER.ID='01075' THEN PARCEL.FLAG = 1           ; * NPR031

      BEGIN CASE                         ; * JMK91
         CASE AIR.CAR                    ; * JMK91
            CVIN=''                      ; * JMK91
            IF AIR.CHRG.CODES='' THEN    ; * JMK91
               AIR.CHRG.CODES<1,1>='BASE'          ; * JMK91
               AIR.CHRG.AMTS<1,1>=ACTUAL.CHG       ; * JMK91
               IF MISC.CHG.CODES#'' THEN           ; * JMK91
                  AIR.CHRG.CODES<1,-1>=MISC.CHG.CODES        ; * JMK91
                  AIR.CHRG.AMTS<1,-1>=CONTR.MISC.CHG.AMTS    ; * JMK91
                  MISC.CHG=SUM(CONTR.MISC.CHG.AMTS)          ; * JMK91
                  AIR.CHRG.AMTS<1,1>=ACTUAL.CHG-MISC.CHG     ; * JMK91
               END                       ; * JMK91
            END                          ; * JMK91
            CVIN<1> = SERVICE.LEVEL      ; * JMK91
            CVIN<2> = AIR.PIECES         ; * JMK91
            CVIN<3> = AIR.CHRG.CODES     ; * JMK91
            CVIN<4> = AIR.CHRG.AMTS      ; * JMK91
            CVIN<5> = DIM.WEIGHT         ; * JMK91
            CVIN<6> = WEIGHT             ; * JMK91
            CVIN<7> = CARRIER.ID         ; * JMK91
            CVIN<8> = CARRIER.NAME       ; * JMK91
            ORIG = ORIG.ZIP:' ':ORIG.CITY:', ': ORIG.STATE   ; * JMK91
            CVIN<9> = ORIG               ; * JMK91
            DEST = DEST.ZIP:' ':DEST.CITY:', ': DEST.STATE   ; * JMK91
            CVIN<10> = DEST              ; * JMK91
            CVIN<11> = ACTUAL.CHG        ; * JMK91
            CVIN<12> = CC                ; * JMK91
            IF CHANGE.FLAG THEN CVIN<13> = 'E' ELSE CVIN<13> = 'I'     ; * JMK91
            CVIN<14> = USER              ; * JMK91
            CVIN<15> = MISC.REASON       ; * JMK157
            ID = 'AIR.SERVLEV*':CARRIER.ID
            READ SERVICE.LEV FROM F.TABLES,ID ELSE
               CALL ELINE('There must be a service level table set up for this carrier.')
               GOTO 100
            END
            CVOUT=''                     ; * JMK91
            CALL FB.2.1.AIR.FREIGHT(CVIN,CVOUT,AIR.CODES,SERVICE.LEV,QI)         ; * JMK91
            CC+=CVOUT<5> ; GOSUB PRINT.CC          ; * JMK91
            IF CVOUT # '' THEN           ; * JMK91
               SERVICE.LEVEL = CVOUT<1>  ; * JMK91
               AIR.PIECES = CVOUT<2>     ; * JMK91
               AIR.CHRG.CODES = CVOUT<3>           ; * JMK91
               AIR.CHRG.AMTS = CVOUT<4>  ; * JMK91
               MISC.REASON = CVOUT<6>    ; * JMK157
            END                          ; * JMK91
*NPR031 Start Changes

         CASE INTL.CAR OR ORIG.ZIP = "99999" OR DEST.ZIP = "99999"
            IF NOT(PARCEL.FLAG) THEN
               CVIN = ''
               CVIN<1> = ''
               CVIN<2> = ''
               CVIN<3> = INTL.CHRG.CODES
               CVIN<4> = INTL.CHRG.AMTS
***                 CVIN<5> = DIM.WEIGHT
***                 CVIN<6> = WEIGHT
               CVIN<7> = CARRIER.ID
               CVIN<8> = CARRIER.NAME
               ORIG = ORIG.ZIP:' ':ORIG.CITY:', ': ORIG.STATE
               CVIN<9> = ORIG
               DEST = DEST.ZIP:' ':DEST.CITY:', ': DEST.STATE
               CVIN<10> = DEST
               CVIN<11> = ACTUAL.CHG
               CVIN<12> = CC
               IF CHANGE.FLAG THEN CVIN<13> = 'E' ELSE CVIN<13> = 'I'
               CVIN<14> = USER
               CVOUT=''
               CALL FB.2.1.INTL.FREIGHT(CVIN,CVOUT,INTL.CODES,QI)
               CC+=CVOUT<5> ; GOSUB PRINT.CC
               IF CVOUT # '' THEN
                  INTL.CHRG.CODES = CVOUT<3>
                  INTL.CHRG.AMTS = CVOUT<4>
               END
               QI = OCONV(QI,'MCU')
               BEGIN CASE
                  CASE QI = 'X'
                     BACK.FLAG = 1
                     GOSUB 8100
                     GOSUB 8200
                     GOTO 2001
                  CASE QI = 'EX'
                     STOP
               END CASE
               GOSUB 8100
               GOSUB 8200
            END
*NPR031 End Changes

         CASE 1                          ; * JMK91
            CVIN=''
            IF DTL.CHRG.CODES='' THEN
               DTL.CHRG.CODES<1,1>='FRT'
               DTL.CHRG.AMTS<1,1>=ACTUAL.CHG
               IF MISC.CHG.CODES#'' THEN
                  DTL.CHRG.CODES<1,-1>=MISC.CHG.CODES
                  DTL.CHRG.AMTS<1,-1>=CONTR.MISC.CHG.AMTS
                  MISC.CHG=SUM(CONTR.MISC.CHG.AMTS)
                  DTL.CHRG.AMTS<1,1>=ACTUAL.CHG-MISC.CHG
               END
            END
            CVIN<3> = DTL.CHRG.CODES
            CVIN<4> = DTL.CHRG.AMTS
            CVIN<6> = WEIGHT
            CVIN<7> = CARRIER.ID
            CVIN<8> = CARRIER.NAME
            ORIG = ORIG.ZIP:' ':ORIG.CITY:', ': ORIG.STATE
            CVIN<9> = ORIG
            DEST = DEST.ZIP:' ':DEST.CITY:', ': DEST.STATE
            CVIN<10> = DEST
            CVIN<11> = ACTUAL.CHG
            CVIN<12> = CC
            BEGIN CASE
               CASE LOOKUP.ONLY ; CVIN<13>='V'
               CASE CHANGE.FLAG ; CVIN<13>='E'
               CASE 1 ; CVIN<13>='I'
            END CASE
            CVIN<14> = USER
            CVIN<15> = MISC.REASON       ; * JMK157
            CVOUT=''
            CALL FB.2.1.TL.FREIGHT(CVIN,CVOUT,LI.CODES,QI)
            CC+=CVOUT<5> ; GOSUB PRINT.CC
            IF CVOUT # '' THEN
               DTL.CHRG.CODES = CVOUT<3>
               DTL.CHRG.AMTS = CVOUT<4>
               MISC.REASON = CVOUT<6>    ; * JMK157
            END

* NPR022 Start of Changes
*            IF CLIENT.ID = "01334" AND (USER = "NPRATT" OR USER = "MARY" OR USER = "MYRA" OR USER = "MKERBOW" OR USER = "OWEN" OR USER = "SMATTHEWS" OR USER = "ZZ AWILLIAMS") THEN   ;* NPR022
            IF CLIENT.ID = "01334" THEN
               IF CVOUT # '' THEN
                  N.CDX = DCOUNT(CVOUT<3>,@VM)
                  SIT.AMT = 0
                  FOR I.CDX = 1 TO N.CDX
                     W.CD = CVOUT<3,I.CDX>
                     IF W.CD = "SIT" THEN
                        SIT.AMT = CVOUT<4,I.CDX>
                     END
                  NEXT I.CDX
                  N.RT.ZIPS = DCOUNT(ZIP.ARR<1>,@VM)
                  IF N.RT.ZIPS LE 2 AND SIT.AMT NE "0" THEN
                     CALL ELINE("Stop in Transit points need to be entered for SIT code with Amount")
                     GOTO GET.FB.DETAILS
                  END
                  IF N.RT.ZIPS GT 2 AND SIT.AMT EQ "0" THEN
                     CALL ELINE("Stop in Transit points have been entered - Must have an SIT code with Amount")
                     GOTO GET.FB.DETAILS
                  END
               END
            END
* NPR022 End of Changes

      END CASE                           ; * JMK91
      QI = OCONV(QI,'MCU')
      RETURN
RECALC.FB.DETAILS: *
      NVAL=DCOUNT(DTL.OUT<40>,@VM)       ; * JMK14
      FOR VAL=1 TO NVAL                  ; * JMK14
         TRAN.TYPE=DTL.OUT<40,VAL>       ; * JMK14
         BEGIN CASE                      ; * JMK14
*NPR031            CASE TRAN.TYPE='FRT'         ; * JMK14
            CASE TRAN.TYPE='FRT' OR TRAN.TYPE = 1 OR TRAN.TYPE = 2     ; * JMK14  ;* NPR031
               NXT.VAL=DCOUNT(FRT.ARRAY<1>,@VM)+1  ; * JMK14
               FOR ATT=1 TO 6            ; * JMK14
                  FRT.ARRAY<ATT,NXT.VAL>=DTL.OUT<39+ATT,VAL>           ; * JMK14
               NEXT ATT                  ; * JMK14
            CASE TRAN.TYPE='MIN'         ; * JMK14
               NXT.VAL=DCOUNT(FRT.ARRAY<1>,@VM)+1  ; * JMK14
               FOR ATT=1 TO 6            ; * JMK14
                  FRT.ARRAY<ATT,NXT.VAL>=DTL.OUT<39+ATT,VAL>           ; * JMK14
               NEXT ATT                  ; * JMK14
            CASE TRAN.TYPE='DEF'         ; * JMK14
               NXT.VAL=DCOUNT(FRT.ARRAY<1>,@VM)+1  ; * JMK14
               FOR ATT=1 TO 6            ; * JMK14
                  FRT.ARRAY<ATT,NXT.VAL>=DTL.OUT<39+ATT,VAL>           ; * JMK14
               NEXT ATT                  ; * JMK14
            CASE TRAN.TYPE='BASE'        ; * JMK81
               NXT.VAL=DCOUNT(FRT.ARRAY<1>,@VM)+1  ; * JMK81
               FOR ATT=1 TO 6            ; * JMK81
                  FRT.ARRAY<ATT,NXT.VAL>=DTL.OUT<39+ATT,VAL>           ; * JMK81
               NEXT ATT                  ; * JMK81
            CASE 1                       ; * JMK14
               LOCATE(TRAN.TYPE,MIS.ARRAY,1;MPOS) THEN       ; * JMK14
                  FOR ATT=5 TO 6         ; * JMK14
                     IF NUM(DTL.OUT<39+ATT,VAL>) THEN        ; * JMK14
                        MIS.ARRAY<ATT,MPOS>+=DTL.OUT<39+ATT,VAL>+0     ; * JMK14
                     END                 ; * JMK14
                  NEXT ATT               ; * JMK14
               END ELSE                  ; * JMK14
                  NXT.VAL=DCOUNT(MIS.ARRAY<1>,@VM)+1         ; * JMK14
                  FOR ATT=1 TO 4         ; * JMK14
                     MIS.ARRAY<ATT,NXT.VAL>=DTL.OUT<39+ATT,VAL>        ; * JMK14
                  NEXT ATT               ; * JMK14
                  FOR ATT=5 TO 6         ; * JMK14
                     IF NUM(DTL.OUT<39+ATT,VAL>) THEN        ; * JMK14
                        MIS.ARRAY<ATT,MPOS>+=DTL.OUT<39+ATT,VAL>+0     ; * JMK14
                     END                 ; * JMK14
                  NEXT ATT               ; * JMK14
               END                       ; * JMK14
         END CASE                        ; * JMK14
      NEXT VAL                           ; * JMK14
      RETURN

ADD.NEW.VCN: ***                                     ; * JCW02
      TABLE.ID = 'VCN*':CLIENT.ID        ; * JCW02
      READ TABLE.REC FROM F.TABLES, TABLE.ID ELSE  ; * JCW02
         TABLE.REC = ''                  ; * JCW02
         TABLE.REC<1> = 0                ; * JCW02
      END                                ; * JCW02
      DONE = 0                           ; * JCW02
      LOOP UNTIL DONE DO                 ; * JCW02
         VCN.ID = TABLE.REC<1>'R%5'      ; * JCW02
         TABLE.REC<1> += 1               ; * JCW02
         READ TEST FROM F.VCN, VCN.ID ELSE         ; * JCW02
            WRITE TABLE.REC ON F.TABLES, TABLE.ID  ; * JCW02
            DONE = 1                     ; * JCW02
         END                             ; * JCW02
      REPEAT                             ; * JCW02
      RETURN                             ; * JCW02

GET.QV.OPTS: *       ; * JMK24
      CLIENT.QV=''
      IF CL.DUE.VER='Y' THEN             ; * JMK24
         CLIENT.QV<1,-1>='DD'            ; * JMK24
      END                                ; * JMK24
      IF CL.IO.VER='Y' THEN              ; * JMK24
         CLIENT.QV<1,-1>='IO'            ; * JMK24
      END                                ; * JMK24
      IF CL.DIV.VER='Y' THEN             ; * JMK24
         CLIENT.QV<1,-1>='DC'            ; * JMK24
      END                                ; * JMK24
      IF CL.EXP.VER='Y' THEN             ; * JMK24
         CLIENT.QV<1,-1>='EC'            ; * JMK24
      END                                ; * JMK24
      IF CL.ORIG.VER='Y' THEN            ; * JMK24
         CLIENT.QV<1,-1>='ORIG'          ; * JMK24
      END                                ; * JMK24
      IF CL.DEST.VER='Y' THEN            ; * JMK24
         CLIENT.QV<1,-1>='DEST'          ; * JMK24
      END                                ; * JMK24
      IF CL.WT.VER='Y' THEN              ; * JMK24
         CLIENT.QV<1,-1>='WT'            ; * JMK24
      END                                ; * JMK24
      IF CL.ZIP.VER='Y' THEN             ; * JMK24
         CLIENT.QV<1,-1>='Z'             ; * JMK24
      END                                ; * JMK24
      IF CL.BOL.VER='Y' THEN             ; * JMK24
         CLIENT.QV<1,-1>='BL'            ; * JMK24
      END                                ; * JMK24
      IF CL.PO.VER='Y' THEN              ; * JMK24
         CLIENT.QV<1,-1>='PO'            ; * JMK24
      END                                ; * JMK24
      IF CL.VEND.VER='Y' THEN            ; * JMK24
         CLIENT.QV<1,-1>='V'             ; * JMK24
      END                                ; * JMK24
      IF CL.CUST.VER='Y' THEN            ; * JMK24
         CLIENT.QV<1,-1>='C'             ; * JMK24
      END                                ; * JMK24
      IF CL.EXP.DIST.VER='Y' THEN        ; * JMK24
         CLIENT.QV<1,-1>='ED'            ; * JMK24
      END                                ; * JMK24
      IF CL.DATE.VER='Y' THEN            ; * JMK24
         CLIENT.QV<1,-1>='PD'            ; * JMK24
      END                                ; * JMK24
      IF CL.PRO.VER='Y' THEN             ; * JMK24
         CLIENT.QV<1,-1>='P'             ; * JMK24
      END                                ; * JMK24
      IF CL.DISC.VER='Y' THEN            ; * JMK24
         CLIENT.QV<1,-1>='DISC'          ; * JMK24
      END                                ; * JMK24
      IF CL.LOG.VER='Y' THEN             ; * JMK24
         CLIENT.QV<1,-1>='LD'            ; * JMK24
      END                                ; * JMK24
      IF CL.CLS.VER='Y' THEN             ; * JMK24
         CLIENT.QV<1,-1>='CLS'           ; * JMK24
      END                                ; * JMK24
      IF CL.AIR.VER='Y' THEN             ; * JMK24
         CLIENT.QV<1,-1>='AP'            ; * JMK24
      END                                ; * JMK24
      RETURN                             ; * JMK24
*
QUICK.VERIFY: * ; * JMK24
*
* FIRST CHECK THE CLIENT FOR PROPER PROFILE
      PRO.LIST=''
      PRO.LIST<1>=PRO
      PRO.LIST<2>=1
      AMT.LIST=''
      AMT.LIST<1>=ACTUAL.CHG
      AMT.LIST<2>=1
      PRO.VERIFY='N'
      AMT.VERIFY='N'
*
9300: * DISPLAY NEW SCREEN
*
      QV.PROG.DESC="QUICK VERIFICATION - NEW WAY"
*NPR08      CALL AFS.SCR.REFRESH(PROG.NAME,QV.PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      CLR.SCR = 1 ; GOSUB DISP.SCREEN.HEADING      ; *NPR08
      CRT @(0,3):'Client number  ':CLIENT.ID:' ':CL.NAME:@(-4)
      CRT @(70,3):' Stack ':BILL.STATUS'R#2'
      CRT @(0,4):'Carrier number ':CARRIER.ID:' ':CARRIER.NAME:' ':CARRIER.CITY:', ':CARRIER.STATE:@(-4):
      CRT @(0,5):STR('-',79)
      CRT @(0,6):'Pro..'
      CRT @(0,7):'Amt..'
*********************************************************************
9310: * START PRO ENTRY
      IF PRO.MASKS<1,1>#'' THEN
         MASK=PRO.MASKS<1,1>
         IF PRO.MASKS<1,2>#'' THEN
            OTHER.MASKS=PRO.MASKS
            DEL OTHER.MASKS<1,1>         ; ** Remove the First one (already used)
            TEXT='Other Valid Masks: ':CHANGE(OTHER.MASKS<1>,@VM,' ')
            CRT @(0,22):@(-4):TEXT[1,59]:
         END ELSE OTHER.MASKS=''
      END ELSE
         OTHER.MASKS=''
         MASK=STR('-',20)
      END
*********************************************************************
      QV.PRO=''
      BACK.FLAG=0
      HELP="Enter Pro. [S]=Scan Carrier. [X]=Back. [EX]=Exit."
      CALL GEN.IN(5,6,MASK,'',Q,0,20,'','',2,5,6,0,QI,HELP,0,23)
      CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      IF OTHER.MASKS#'' THEN PRINT @(0,22):@(-4):
      IF QI='' THEN GO 9310              ; * Do Nothing Per Brian 12/2/97
      IF INDEX(QI,'*',1) THEN
         CALL ELINE('ERROR! Pro Number cannot contain an *')
         CC+=1 ; GOSUB PRINT.CC
         GO 9300
      END
      PLUS.POS=INDEX(QI,'+',1)
**************************************************************
      IF PLUS.POS THEN
         QI=CHANGE(QI,"+","-")
         Q=QI
         CRT @(5,6):QI:
      END
      IF QI[LEN(QI),1]='-' AND (CARRIER.ID='00093' OR CARRIER.ID='00017') THEN
         QI=QI[1,LEN(QI)-1]:'X'
         Q=QI
         CRT @(5,6):QI:
      END
**************************************************************
      IF INDEX(QI,'+',1) THEN
         CALL ELINE('ERROR! Pro Number cannot contain an +')
         CC+=1 ; GOSUB PRINT.CC
         GO 9300
      END
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='S'
            CRT @(0,0):@(-3)
            CALL FB.DRAW.BOX(8,3,67,16,' ','')
            CALL FB.DRAW.BOX(9,4,65,12,' ','+=+|+=+|')
            CALL FB.DRAW.BOX(9,4,65,3,' ','+=+|+=+|')
            CALL FB.PRINT.CENT(9,74,8,"C A R R I E R   C O M M E N T S")
            FOR I=1 TO 8
               COMMENT=CARRIER.REC<45,I>'L#60'
               ROW=I+6
               CRT @(10,ROW):I'R#2':'|':COMMENT
            NEXT I
            CALL ELINE('')
            GOTO 9300
         CASE QI='X'
            CRT @(5,6):SPACE(20)
            GOTO 9450
         CASE QI='EX'
            STOP
      END CASE
      QV.PRO=OCONV(Q,'MCU')
      CALL CLR.CONTROL(QV.PRO)
      VIN=QV.PRO
*     CALL CHECK.PRO(VIN,CARRIER.REC,VOUT)         ; * JMK165
      CALL CHECK.PRO.NEW(VIN,CARRIER.REC,VOUT)     ; * JMK165
      QV.CHK.MSG = TRIM(VOUT<1>)
      CHK.OLD.QV.PRO = VOUT<3>           ; * Mv with Old Pro Number to check
      IF QV.CHK.MSG # '' THEN
         CALL ELINE('Error! ':QV.CHK.MSG)
         CC+=1 ; GOSUB PRINT.CC
         GO 9310
      END
      QV.PRO.LEN=LEN(QV.PRO)
      IF QV.PRO[QV.PRO.LEN-1,2]='BD' THEN QV.BAL.DUE=1 ELSE QV.BAL.DUE=0
*
9320: * END OF PRO CHECK
*
      LOCATE(QV.PRO,PRO.LIST,1;CKPOS) THEN
         PRO.LIST<2,CKPOS>+=1
         IF PRO.LIST<2,CKPOS>>1 THEN
            IF QV.PRO=PRO THEN
               PRO.VERIFY='Y'
            END ELSE
               CALL ELINE('Your verified pro does not match original entry - Please re-enter.')
               GO 9450
            END
         END
      END ELSE
         PRO.LIST<1,-1>=QV.PRO
         PRO.LIST<2,-1>=1
         PRO.CNT=DCOUNT(PRO.LIST<1>,@VM)
         IF PRO.CNT > 3 THEN
            CALL ELINE('You have entered too many pros that do not match - Please re-enter.')
            GO 9450
         END
         CALL ELINE('This pro does not match original entry - Please re-verify.')
         GO 9300
      END
      DISP=QV.PRO:' Version ':VERSION
      CRT @(5,6):DISP
*
*NPR12
*      IF USER = "NPRATT" OR USER = "AMY" THEN
*         GOSUB CHECK.FOR.ADD.NOTES                             ; * NPR12
*         IF ADD.NOTE.REC NE "" THEN                            ; * NPR12
*            GOSUB DISPLAY.ADD.NOTES                            ; * NPR12
*            CALL ELINE("")                                     ; * NPR12
*            CALL FB.DRAW.BOX(28,4,52,7,' ','')                 ; * NPR12
*            CRT @(0,5):STR("-",79)                             ; * NPR12
*         END                                                   ; * NPR12
*      END                                                      ; * NPR12
*NPR12
*
*
* VERIFY AMOUNT
*
9400: * Enter actual charge
*
      LOCATE 'A' IN VERIFIED<1> BY 'AL' SETTING DUMMY.POS THEN
         AMT.VERIFIED=1
         CRT @(5,7):ACTUAL.CHG'R26#9'
         AMT.VERIFY='Y'
         GO 9450
      END ELSE
         AMT.VERIFIED=0
      END
      HELP="Enter the Actual Charge. [X]=Back. [EX]=Exit."
      MASK=0'R26,#9'
      FLAT.RATE=0                        ; * JMK26
      CALL GEN.IN(5,7,MASK'R26#9','AMT2',Q,0,9,'','',2,-9,7,0,QI,HELP,0,23)
      CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      QI=OCONV(QI,'MCU')
      IF QI[LEN(QI),1]='+' THEN          ; * JMK26
         FLAT.RATE=1                     ; * JMK26
         QI=QI[1,LEN(QI)-1]              ; * JMK26
      END                                ; * JMK26
      BEGIN CASE
         CASE QI='X'
            CRT @(5,7):'         ':
            BACK.FLAG=1
            GOTO 9300
         CASE QI='EX'
            STOP
      END CASE
      IF Q[LEN(Q),1]='+' THEN Q=Q[1,LEN(Q)-1]
      QV.ACTUAL.CHG=Q'R0'
      LOCATE(QV.ACTUAL.CHG,AMT.LIST,1;CKPOS) THEN
         AMT.LIST<2,CKPOS>+=1
         IF AMT.LIST<2,CKPOS> > 1 THEN
            IF QV.ACTUAL.CHG=ACTUAL.CHG THEN
               AMT.VERIFY='Y'
               CRT @(5,7):QV.ACTUAL.CHG'R26#9'
               GO 9450
            END ELSE
               CALL ELINE('Your verified amount does not match original entry - Please re-enter.')
               GO 9450
            END
         END
      END ELSE
         AMT.LIST<1,-1>=QV.ACTUAL.CHG
         AMT.LIST<2,-1>=1
         AMT.CNT=DCOUNT(AMT.LIST<1>,@VM)
         IF AMT.CNT > 3 THEN
            CALL ELINE('You have entered too many amts that do not match - Please re-enter.')
            GO 9450
         END
         CALL ELINE('This amount does not match original entry - Please re-verify.')
         GO 9400
      END
      FLAT.RATE.MATCH=1                  ; * JMK26
      IF FLAT.RATE THEN                  ; * JMK26
         IF PRO.REC<119>#1 THEN FLAT.RATE.MATCH=0  ; * JMK26
      END ELSE                           ; * JMK26
         IF PRO.REC<119>=1 THEN FLAT.RATE.MATCH=0  ; * JMK26
      END                                ; * JMK26
      IF QV.ACTUAL.CHG NE PRO.REC<8> OR NOT(FLAT.RATE.MATCH) THEN      ; * JMK26
         IF DATE()=12112 AND QV.ACTUAL.CHG = PRO.REC<7> ELSE           ; * JMK26
* Special override for Xpedx on 2/27/01; * JMK26
            CALL ELINE('Invalid Actual Charge.')   ; * JMK26
            GOTO 9400                    ; * JMK26
         END                             ; * JMK26
      END                                ; * JMK26
      CRT @(5,7):QV.ACTUAL.CHG'R26#9'
      IF FLAT.RATE THEN                  ; * JMK26
         CRT @(5,19):'F'                 ; * JMK26
      END ELSE                           ; * JMK26
         CRT @(5,19):' '                 ; * JMK26
      END                                ; * JMK26
*
9450: * DETERMINE SUCCESS
*
      IF PRO.VERIFY='Y' AND AMT.VERIFY='Y' THEN
         QV.VALID=1
      END
      RETURN                             ; * JMK24
9500: *   CHECK FOR QUICK PAY BLOCKING TAG
      BLOCKIT=0                          ; * JMK31
      BLOCKIT.YES=0                      ; * JMK172
      BLOCKIT.NO=0                       ; * JMK172
      BLOCKIT.MAYBE=0                    ; * JMK72
*DF      IF USER.TYPE='A' THEN GOTO 9520    ; * JMK19
*DF      IF CARRIER.ID='00642' THEN GOTO 9520         ; * JMK19
*DF      IF CARRIER.ID='08519' THEN GOTO 9520
*DF      IF CARRIER.ID='03029' THEN GOTO 9520
*DF*DF   IF USER='SROSALIES' THEN GOTO 9520        ; * JMKXXXXX
      IF USER.TYPE='A' THEN RETURN       ; * JMK19
      IF CARRIER.ID='00642' THEN RETURN  ; * JMK19
      IF CARRIER.ID='08519' THEN RETURN
      IF CARRIER.ID='03029' THEN RETURN
      IF CLIENT.ID='10356' THEN RETURN   ; * JMK71
      IF CLIENT.ID='01078' THEN RETURN   ; * JMK71
*DF   IF USER='SROSALIES' THEN RETURN        ; * JMKXXXXX
*     TAG.ID=ORIG.CITY:'*':ORIG.STATE:'*':DEST.CITY:'*':DEST.STATE  ; * JMK19; * JMK21
      TLVIN=''                           ; * JMK21
      TLVOUT=''                          ; * JMK21
      TLVIN<1>=ORIG.CITY                 ; * JMK21
      TLVIN<2>=ORIG.STATE                ; * JMK21
      CALL SET.CITY(TLVIN,TLVOUT)        ; * JMK21
      TL.ORIG.CITY=TLVOUT<1>             ; * JMK21
      TL.ORIG.STATE=TLVOUT<2>            ; * JMK21
      TLVIN=''                           ; * JMK21
      TLVOUT=''                          ; * JMK21
      TLVIN<1>=DEST.CITY                 ; * JMK21
      TLVIN<2>=DEST.STATE                ; * JMK21
      CALL SET.CITY(TLVIN,TLVOUT)        ; * JMK21
      TL.DEST.CITY=TLVOUT<1>             ; * JMK21
      TL.DEST.STATE=TLVOUT<2>            ; * JMK21
      TAG.ID=TL.ORIG.CITY:'*':TL.ORIG.STATE:'*':TL.DEST.CITY:'*':TL.DEST.STATE   ; * JMK19; * JMK21
      TAG.ID=CHANGE(TAG.ID,' ','_')      ; * JMK19
      READU TAG.REC FROM F.TAG.BLOCK,TAG.ID THEN   ; * JMK19
         LOCATE(PRO.ID,TAG.REC,16;PPOS) THEN       ; * JMK21
            IF TAG.REC<21,PPOS>='D' THEN GO 9520   ; * JMK21
         END                             ; * JMK21
         NVAL=DCOUNT(TAG.REC<1>,@VM)     ; * JMK19
         FOR VAL=1 TO NVAL               ; * JMK19
            BLOCKIT=1                    ; * JMK19
            TAG.CHG=TAG.REC<1,VAL>       ; * JMK19
            TAG.PU.DT=TAG.REC<2,VAL>     ; * JMK19
            TAG.LOAD.NO=TAG.REC<10,VAL>  ; * JMK19
            TAG.EXP.DT=TAG.PU.DT+TAG.LIFESPAN      ; * JMK19
            TAG.CHG.VAR=TAG.CHG*TAG.CHG.PCT        ; * JMK19
            TAG.CHG.LO=ICONV(TAG.CHG-TAG.CHG.VAR,'MR0')      ; * JMK19
            TAG.CHG.HI=ICONV(TAG.CHG+TAG.CHG.VAR,'MR0')      ; * JMK19
            IF ACTUAL.CHG < TAG.CHG.LO THEN BLOCKIT=0        ; * JMK19
*           IF ACTUAL.CHG > TAG.CHG.HI THEN BLOCKIT=0        ; * JMK19
*           IF BILL.DATE < TAG.PU.DT-7 THEN BLOCKIT=0        ; * JMK19
*           IF BILL.DATE > TAG.EXP.DT THEN BLOCKIT=0         ; * JMK19
            IF BLOCKIT THEN              ; * JMK19
               IF (USER='MARY' OR USER='MYRA'OR USER='DAVID' OR USER='SROSALIES') AND CLIENT.ID='00949' THEN   ; * JMK40
9505: *      ; * JMK40
                  HELP='Is this a Direct Dispatch? (Y or 1/N or 0)'    ; * JMK40
                  CALL GEN.IN(0,22,'Direct Dispatch? N ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)      ; * JMK40
                  QI=OCONV(QI,'MCU')     ; * JMK40
                  IF QI='' THEN QI='N'   ; * JMK40
                  BEGIN CASE             ; * JMK40
                     CASE QI='Y' OR QI='1'         ; * JMK40
                        BLOCKIT=0        ; * JMK40
                        GOTO 9520        ; * JMK40
                     CASE QI='N' OR QI='0'         ; * JMK40
                     CASE 1              ; * JMK40
                        GOTO 9505        ; * JMK40
                  END CASE               ; * JMK40
               END                       ; * JMK40
9507: * VERIFY LOAD MATCH                ; * JMK72
               VERIFY.MATCH=1            ; * JMK139
               SHIP.PASS=0               ; * JMK171
               TAG.AMT=TAG.REC<1,VAL>    ; * JMK72
               TAG.PU.DT=TAG.REC<2,VAL>  ; * JMK72
               TAG.DEL.DT=TAG.REC<3,VAL>           ; * JMK72
               TAG.CARRIER=TAG.REC<4,VAL>          ; * JMK72
               READ TAG.CARRIER.REC FROM F.CARRIERS,TAG.CARRIER ELSE TAG.CARRIER.REC=''    ; * JMK72
               TAG.CLIENT=TAG.REC<5,VAL>           ; * JMK72
               READ TAG.CLIENT.REC FROM F.CLIENTS,TAG.CLIENT ELSE TAG.CLIENT.REC=''        ; * JMK72
               TAG.ORIG.ZIP=TAG.REC<6,VAL>         ; * JMK72
               ZIP.VAR = TAG.ORIG.ZIP    ; * JMK72
               CALL FB.READ.ZIP(ZIP.VAR,CITY,STATE)          ; * JMK72
               TAG.ORIG.CITY=CITY        ; * JMK72
               TAG.ORIG.STATE=STATE      ; * JMK72
               TAG.DEST.ZIP=TAG.REC<7,VAL>         ; * JMK72
               ZIP.VAR = TAG.DEST.ZIP    ; * JMK72
               CALL FB.READ.ZIP(ZIP.VAR,CITY,STATE)          ; * JMK72
               TAG.DEST.CITY=CITY        ; * JMK72
               TAG.DEST.STATE=STATE      ; * JMK72
               TAG.WEIGHT=TAG.REC<8,VAL>           ; * JMK72
               TAG.MILES=TAG.REC<9,VAL>  ; * JMK72
               TAG.LOAD.NO=TAG.REC<10,VAL>         ; * JMK72
               TAG.INV.NO=TAG.REC<11,VAL>          ; * JMK72
               TAG.DEPT=TAG.REC<12,VAL>  ; * JMK72
               CRT @(0,22):BELL:         ; * JMK72
               CRT @(05,08):'+':STR('-',68):'+':   ; * JMK72
               FOR LX=9 TO 20            ; * JMK72
                  CRT @(05,LX):'|':SPACE(68):'|':  ; * JMK72
               NEXT LX                   ; * JMK72
               CRT @(05,21):'+':STR('-',68):'+':   ; * JMK72
               CRT @(10,08):'Potential Transportation Bill':           ; * JMK72
               IF NVAL>1 THEN            ; * JMK171
                  CRT @(49,08):VAL:' of ':NVAL     ; * JMK171
               END                       ; * JMK171
               CRT @(07,09):'Est. Charges  : ':TAG.AMT'L26#12':        ; * JMK72
               CRT @(07,10):'Pick Up Date  : ':TAG.PU.DT'D2/':         ; * JMK72
               CRT @(07,11):'Delivery Date : ':TAG.DEL.DT'D2/':        ; * JMK72
               CRT @(07,12):'Carrier Name  : ':(TAG.CARRIER:' ':TAG.CARRIER.REC<1>)'L#45':           ; * JMK72
               CRT @(07,13):'Client Name   : ':(TAG.CLIENT:' ':TAG.CLIENT.REC<2>)'L#45':   ; * JMK72
               CRT @(07,14):'Origin Zip    : ':TAG.ORIG.ZIP:' ':TAG.ORIG.CITY:' ':TAG.ORIG.STATE     ; * JMK72
               CRT @(07,15):'Dest. Zip     : ':TAG.DEST.ZIP:' ':TAG.DEST.CITY:' ':TAG.DEST.STATE     ; * JMK72
               CRT @(07,16):'Est. Weight   : ':TAG.WEIGHT:   ; * JMK72
               CRT @(07,17):'Est. Miles    : ':TAG.MILES:    ; * JMK72
               CRT @(07,18):'Load Number   : ':TAG.LOAD.NO:  ; * JMK72
               CRT @(07,19):'Inv. Number   : ':TAG.INV.NO:   ; * JMK72
               CRT @(07,20):'Dept/User     : ':TAG.DEPT:     ; * JMK72
*              HELP='Are you absolutely sure the FB is NOT this anticipated load? (Yes/No/Ex)'       ; * JMK72 ; * JMK74
*              CALL GEN.IN(0,22,'Load Does NOT Match? ###','',Q,0,4,'','',2,-3,22,1,QI,HELP,0,23)    ; * JMK72 ; * JMK74
               HELP='[Y]es-everything is identical [M]aybe-not sure [N]o-definitely not [Ex]it'      ; * JMK72 ; * JMK74
               CALL GEN.IN(0,22,'Does this load match? ###','',Q,0,4,'','',2,-3,22,1,QI,HELP,0,23)   ; * JMK72 ; * JMK74
               QI=OCONV(QI,'MCU')        ; * JMK72
               IF QI='Y' THEN QI='YES'   ; * JMK74
               IF QI='N' THEN QI='NO'    ; * JMK74
               IF QI='M' THEN QI='MAYBE'           ; * JMK74
               BEGIN CASE                ; * JMK72
                  CASE QI='EX'           ; * JMK72
                     STOP                ; * JMK72
                  CASE QI='YES'          ; * JMK72
*                    BLOCKIT=0           ; * JMK72 ; * JMK74
*                    RELEASE F.TAG.BLOCK,TAG.ID    ; * JMK72 ; * JMK74
                     BLOCKIT.YES=1       ; * JMK172
                     BLOCKIT.NO=0        ; * JMK172
                     BLOCKIT.MAYBE=0     ; * JMK172
                     GO 9520             ; * JMK172
                  CASE QI='NO'           ; * JMK72
*                    BLOCKIT=0           ; * JMK72 ; * JMK74 ; * JMK171
                     SHIP.PASS=1         ; * JMK72 ; * JMK74 ; * JMK171
                     BLOCKIT.YES=0       ; * JMK172
                     BLOCKIT.NO=1        ; * JMK172
                     BLOCKIT.MAYBE=0     ; * JMK172
                  CASE QI='MAYBE'        ; * JMK74
                     BLOCKIT.YES=0       ; * JMK172
                     BLOCKIT.NO=0        ; * JMK172
                     BLOCKIT.MAYBE=1     ; * JMK172
                  CASE 1                 ; * JMK72
                     GOTO 9507
               END CASE                  ; * JMK72
               GOSUB 8100                ; * Display screen ; * JMK72
               GOSUB 8200                ; * Display data   ; * JMK72
*              IF BLOCKIT THEN           ; * JMK72 ; * JMK139
               IF BLOCKIT OR VERIFY.MATCH THEN     ; * JMK72 ; * JMK139
                  LOCATE(PRO.ID,TAG.REC,16;TPOS) ELSE        ; * JMK23
                     NVAL1=DCOUNT(TAG.REC<16>,@VM)           ; * JMK23
                     TAG.REC<16,NVAL1+1>=PRO.ID    ; * JMK23
                     TAG.REC<17,NVAL1+1>=USER      ; * JMK23
                     TAG.REC<18,NVAL1+1>=TIME()    ; * JMK23
                     TAG.REC<19,NVAL1+1>=DATE()    ; * JMK23
                     TAG.REC<20,NVAL1+1>=ACTUAL.CHG          ; * JMK23
                     TAG.REC<21,NVAL1+1>=''        ; * JMK23
                     WRITE TAG.REC ON F.TAG.BLOCK,TAG.ID     ; * JMK23
                  END                    ; * JMK23
                  RELEASE F.TAG.BLOCK,TAG.ID       ; * JMK23
                  SUBJ='TL Block Triggered'        ; * JMK19
                  TEXT=''
                  TEXT<1,-1>='On ':DATE()'D2/':' at ':OCONV(TIME(),'MTH'):', ':USER.NAME   ; * JMK19
                  TEXT:=' attempted to enter a bill which appears to match Load ':TAG.LOAD.NO:'.'    ; * JMK19
*                 IF BLOCKIT=0 THEN      ; * JMK139 ; * JMK171
                  IF SHIP.PASS=1 THEN    ; * JMK139 ; * JMK171
                     TEXT<1,-1>=' '      ; * JMK139
                     TEXT<1,-1>=USER.NAME:' chose not to block this shipment.'   ; * JMK139
                  END                    ; * JMK139
                  TEXT<1,-1>=' '
                  TEXT<1,-1>='This load is defined as follows:'        ; * JMK19
                  TEXT<1,-1>='Origin         : ':ORIG.ZIP:' - ':ORIG.CITY:', ':ORIG.STATE  ; * JMK19
                  TEXT<1,-1>='Destination    : ':DEST.ZIP:' - ':DEST.CITY:', ':DEST.STATE  ; * JMK19
                  TEXT<1,-1>='Client         : ':CLIENT.ID:' - ':CLIENT.NAME     ; * JMK19
                  TEXT<1,-1>='Carrier        : ':CARRIER.ID:' - ':CARRIER.NAME   ; * JMK19
                  TEXT<1,-1>='Pro Number     : ':PRO         ; * JMK19
                  TEXT<1,-1>='Load Amount    : ':TAG.CHG'R26#8'        ; * JMK19
                  TEXT<1,-1>='Entered Amount : ':ACTUAL.CHG'R26#8'     ; * JMK19
                  TEXT<1,-1>='Ship Date      : ':BILL.DATE'D2/'        ; * JMK19
                  TEXT<1,-1>=' '         ; * JMK30
                  TEXT<1,-1>='For in-house use only.  FB.2.1.NW - Label 9500'    ; * JMK30
                  MVIN=''                ; * JMK19
*                 MVIN<1>='PBeason@AFSLogistics.Com'         ; * JMK19 ; * JMK73
                  MVIN<1>='TL_Block_Notify@AFSLogistics.Com'           ; * JMK73
*                 MVIN<2>='RKeyes@AFSLogistics.com'          ; * JMK104
*                 MVIN<2>='GAllison@AFSLogistics.com'        ; * JMK104
*                 MVIN<2,-1>='OHolman@AFSLogistics.Com'      ; * JMK19 ; * JMK19 ; * JMK30
*                 MVIN<2,-1>='MKerbow@AFSLogistics.Com'      ; * JMK19 ; * JMK30
                  MVIN<4>='AFS'          ; * JMK19
                  MVIN<5>=SUBJ           ; * JMK19
                  MVIN<6>=TEXT           ; * JMK19
                  CALL SENDMAIL(MVIN,MVOUT)        ; * JMK19
*                 BLOCK.MSG='Potential Transportation Bill - Forward to Trans. Dept.'      ; * JMK19 ; * JMK72
*                 CALL ELINE(BLOCK.MSG)  ; * JMK19 ; * JMK72
*                 LOOP                   ; * JMK19 ; * JMK72
*                    CRT @(0,22):@(-4):BELL:'Enter TL to Continue.':   ; * JMK19 ; * JMK72
*                    INPUT BLK.ACT       ; * JMK19 ; * JMK72
*                    BLK.ACT=OCONV(BLK.ACT,'MCU')  ; * JMK19 ; * JMK72
*                 UNTIL BLK.ACT='TL' DO  ; * JMK19 ; * JMK72
*                 REPEAT                 ; * JMK19 ; * JMK72
                  IF BLOCKIT=0 THEN      ; * JMK171
                     GO 9520             ; * JMK19 ; * JMK72
                  END                    ; * JMK171
               END                       ; * JMK72
            END                          ; * JMK19 ; * JMK72
         NEXT VAL                        ; * JMK19 ; * JMK72
      END ELSE                           ; * JMK19
         RELEASE F.TAG.BLOCK,TAG.ID      ; * JMK19
         TAG.ID=TL.DEST.CITY:'*':TL.DEST.STATE:'*':TL.ORIG.CITY:'*':TL.ORIG.STATE          ; * JMK19
         TAG.ID=CHANGE(TAG.ID,' ','_')   ; * JMK19
         READ TAG.REC FROM F.TAG.BLOCK,TAG.ID THEN           ; * JMK19
            LOCATE(PRO.ID,TAG.REC,16;PPOS) THEN    ; * JMK21
               IF TAG.REC<21,PPOS>='D' THEN GO 9520          ; * JMK21
            END                          ; * JMK21
            NVAL=DCOUNT(TAG.REC<1>,@VM)  ; * JMK19
            FOR VAL=1 TO NVAL            ; * JMK19
               BLOCKIT=1                 ; * JMK19
               TAG.CHG=TAG.REC<1,VAL>    ; * JMK19
               TAG.PU.DT=TAG.REC<2,VAL>  ; * JMK19
               TAG.LOAD.NO=TAG.REC<10,VAL>         ; * JMK19
               TAG.EXP.DT=TAG.PU.DT+TAG.LIFESPAN   ; * JMK19
               TAG.CHG.VAR=TAG.CHG*TAG.CHG.PCT     ; * JMK19
               TAG.CHG.LO=ICONV(TAG.CHG-TAG.CHG.VAR,'MR0')   ; * JMK19
               TAG.CHG.HI=ICONV(TAG.CHG+TAG.CHG.VAR,'MR0')   ; * JMK19
               IF ACTUAL.CHG < TAG.CHG.LO THEN BLOCKIT=0     ; * JMK19
*              IF ACTUAL.CHG > TAG.CHG.HI THEN BLOCKIT=0        ; * JMK19
*              IF BILL.DATE < TAG.PU.DT-7 THEN BLOCKIT=0     ; * JMK19
*              IF BILL.DATE > TAG.EXP.DT THEN BLOCKIT=0      ; * JMK19
               IF BLOCKIT THEN           ; * JMK19
                  IF (USER='MARY' OR USER='MYRA'OR USER='DAVID' OR USER='SROSALIES') AND CLIENT.ID='00949' THEN          ; * JMK40
9510: *      ; * JMK40
                     HELP='Is this a Direct Dispatch? (Y/N)'           ; * JMK40
                     CALL GEN.IN(0,22,'Direct Dispatch? N ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)   ; * JMK40
                     QI=OCONV(QI,'MCU')  ; * JMK40
                     IF QI='' THEN QI='N'          ; * JMK40
                     BEGIN CASE          ; * JMK40
                        CASE QI='Y'      ; * JMK40
                           BLOCKIT=0     ; * JMK40
                           GOTO 9520     ; * JMK40
                        CASE QI='N'      ; * JMK40
                        CASE 1           ; * JMK40
                           GOTO 9510     ; * JMK40
                     END CASE            ; * JMK40
                  END                    ; * JMK40
9512: * VERIFY LOAD MATCH                ; * JMK72
                  VERIFY.MATCH=1         ; * JMK139
                  SHIP.PASS=0            ; * JMK171
                  TAG.AMT=TAG.REC<1,VAL>           ; * JMK72
                  TAG.PU.DT=TAG.REC<2,VAL>         ; * JMK72
                  TAG.DEL.DT=TAG.REC<3,VAL>        ; * JMK72
                  TAG.CARRIER=TAG.REC<4,VAL>       ; * JMK72
                  READ TAG.CARRIER.REC FROM F.CARRIERS,TAG.CARRIER ELSE TAG.CARRIER.REC=''           ; * JMK72
                  TAG.CLIENT=TAG.REC<5,VAL>        ; * JMK72
                  READ TAG.CLIENT.REC FROM F.CLIENTS,TAG.CLIENT ELSE TAG.CLIENT.REC=''     ; * JMK72
                  TAG.ORIG.ZIP=TAG.REC<6,VAL>      ; * JMK72
                  ZIP.VAR = TAG.ORIG.ZIP           ; * JMK72
                  CALL FB.READ.ZIP(ZIP.VAR,CITY,STATE)       ; * JMK72
                  TAG.ORIG.CITY=CITY     ; * JMK72
                  TAG.ORIG.STATE=STATE   ; * JMK72
                  TAG.DEST.ZIP=TAG.REC<7,VAL>      ; * JMK72
                  ZIP.VAR = TAG.DEST.ZIP           ; * JMK72
                  CALL FB.READ.ZIP(ZIP.VAR,CITY,STATE)       ; * JMK72
                  TAG.DEST.CITY=CITY     ; * JMK72
                  TAG.DEST.STATE=STATE   ; * JMK72
                  TAG.WEIGHT=TAG.REC<8,VAL>        ; * JMK72
                  TAG.MILES=TAG.REC<9,VAL>         ; * JMK72
                  TAG.LOAD.NO=TAG.REC<10,VAL>      ; * JMK72
                  TAG.INV.NO=TAG.REC<11,VAL>       ; * JMK72
                  TAG.DEPT=TAG.REC<12,VAL>         ; * JMK72
                  CRT @(0,22):BELL:      ; * JMK72
                  CRT @(05,08):'+':STR('-',68):'+':          ; * JMK72
                  FOR LX=9 TO 20         ; * JMK72
                     CRT @(05,LX):'|':SPACE(68):'|':         ; * JMK72
                  NEXT LX                ; * JMK72
                  CRT @(05,21):'+':STR('-',68):'+':          ; * JMK72
                  CRT @(10,08):'Potential Transportation Bill':        ; * JMK72
                  IF NVAL>1 THEN         ; * JMK171
                     CRT @(49,08):VAL:' of ':NVAL  ; * JMK171
                  END                    ; * JMK171
                  CRT @(07,09):'Est. Charges  : ':TAG.AMT'L26#12':     ; * JMK72
                  CRT @(07,10):'Pick Up Date  : ':TAG.PU.DT'D2/':      ; * JMK72
                  CRT @(07,11):'Delivery Date : ':TAG.DEL.DT'D2/':     ; * JMK72
                  CRT @(07,12):'Carrier Name  : ':(TAG.CARRIER:' ':TAG.CARRIER.REC<1>)'L#45':        ; * JMK72
                  CRT @(07,13):'Client Name   : ':(TAG.CLIENT:' ':TAG.CLIENT.REC<2>)'L#45':          ; * JMK72
                  CRT @(07,14):'Origin Zip    : ':TAG.ORIG.ZIP:' ':TAG.ORIG.CITY:' ':TAG.ORIG.STATE  ; * JMK72
                  CRT @(07,15):'Dest. Zip     : ':TAG.DEST.ZIP:' ':TAG.DEST.CITY:' ':TAG.DEST.STATE  ; * JMK72
                  CRT @(07,16):'Est. Weight   : ':TAG.WEIGHT:          ; * JMK72
                  CRT @(07,17):'Est. Miles    : ':TAG.MILES:           ; * JMK72
                  CRT @(07,18):'Load Number   : ':TAG.LOAD.NO:         ; * JMK72
                  CRT @(07,19):'Inv. Number   : ':TAG.INV.NO:          ; * JMK72
                  CRT @(07,20):'Dept/User     : ':TAG.DEPT:  ; * JMK72
*                 HELP='Are you absolutely sure the FB is NOT this anticipated load? (Yes/No/Ex)'    ; * JMK72 ; * JMK74
*                 CALL GEN.IN(0,22,'Load Does NOT Match? ###','',Q,0,4,'','',2,-3,22,1,QI,HELP,0,23) ; * JMK72 ; * JMK74
                  HELP='[Y]es-everything is identical [M]aybe-not sure [N]o-definitely not [Ex]it'   ; * JMK72 ; * JMK74
                  CALL GEN.IN(0,22,'Does this load match? ###','',Q,0,4,'','',2,-3,22,1,QI,HELP,0,23)          ; * JMK72 ; * JMK74
                  QI=OCONV(QI,'MCU')     ; * JMK72
                  IF QI='Y' THEN QI='YES'          ; * JMK74
                  IF QI='N' THEN QI='NO'           ; * JMK74
                  IF QI='M' THEN QI='MAYBE'        ; * JMK74
                  BEGIN CASE             ; * JMK72
                     CASE QI='EX'        ; * JMK72
                        STOP             ; * JMK72
                     CASE QI='YES'       ; * JMK72
*                       BLOCKIT=0        ; * JMK72 ; * JMK74
*                       RELEASE F.TAG.BLOCK,TAG.ID           ; * JMK72 ; * JMK74
                        BLOCKIT.YES=1    ; * JMK172
                        BLOCKIT.NO=0     ; * JMK172
                        BLOCKIT.MAYBE=0  ; * JMK172
                        GO 9520          ; * JMK172
                     CASE QI='NO'        ; * JMK72
*                       BLOCKIT=0        ; * JMK72 ; * JMK74 ; * JMK171
                        SHIP.PASS=1      ; * JMK72 ; * JMK74 ; * JMK171
                        BLOCKIT.YES=0    ; * JMK172
                        BLOCKIT.NO=1     ; * JMK172
                        BLOCKIT.MAYBE=0  ; * JMK172
                     CASE QI='MAYBE'     ; * JMK74
                        BLOCKIT.YES=0    ; * JMK172
                        BLOCKIT.NO=0     ; * JMK172
                        BLOCKIT.MAYBE=1  ; * JMK172
                     CASE 1              ; * JMK72
                        GOTO 9512        ; * JMK72
                  END CASE               ; * JMK72
                  GOSUB 8100             ; * Display screen ; * JMK72
                  GOSUB 8200             ; * Display data   ; * JMK72
*                 IF BLOCKIT THEN        ; * JMK72 ; * JMK139
                  IF BLOCKIT OR VERIFY.MATCH THEN  ; * JMK72 ; * JMK139
                     LOCATE(PRO.ID,TAG.REC,16;TPOS) ELSE     ; * JMK23
                        NVAL1=DCOUNT(TAG.REC<16>,@VM)        ; * JMK23
                        TAG.REC<16,NVAL1+1>=PRO.ID           ; * JMK23
                        TAG.REC<17,NVAL1+1>=USER   ; * JMK23
                        TAG.REC<18,NVAL1+1>=TIME()           ; * JMK23
                        TAG.REC<19,NVAL1+1>=DATE()           ; * JMK23
                        TAG.REC<20,NVAL1+1>=ACTUAL.CHG       ; * JMK23
                        TAG.REC<21,NVAL1+1>=''     ; * JMK23
                        WRITE TAG.REC ON F.TAG.BLOCK,TAG.ID  ; * JMK23
                     END                 ; * JMK23
                     RELEASE F.TAG.BLOCK,TAG.ID    ; * JMK23
                     SUBJ='TL Block Triggered - Verify Direction'      ; * JMK19
                     TEXT=''
                     TEXT<1,-1>='On ':DATE()'D2/':' at ':OCONV(TIME(),'MTH'):', ':USER.NAME          ; * JMK19
                     TEXT:=' attempted to enter a bill which appears to match Load ':TAG.LOAD.NO     ; * JMK19
                     TEXT:=' when Origin and Destination are reversed.'          ; * JMK19
*                    IF BLOCKIT=0 THEN   ; * JMK139 ; * JMK171
                     IF SHIP.PASS=1 THEN           ; * JMK139 ; * JMK171
                        TEXT<1,-1>=' '   ; * JMK139
                        TEXT<1,-1>=USER.NAME:' chose not to block this shipment.'          ; * JMK139
                     END                 ; * JMK139
                     TEXT<1,-1>=' '
                     TEXT<1,-1>='This load is defined as follows:'     ; * JMK19
                     TEXT<1,-1>='Origin         : ':DEST.ZIP:' - ':DEST.CITY:', ':DEST.STATE         ; * JMK19
                     TEXT<1,-1>='Destination    : ':ORIG.ZIP:' - ':ORIG.CITY:', ':ORIG.STATE         ; * JMK19
                     TEXT<1,-1>='Client         : ':CLIENT.ID:' - ':CLIENT.NAME  ; * JMK19
                     TEXT<1,-1>='Carrier        : ':CARRIER.ID:' - ':CARRIER.NAME          ; * JMK19
                     TEXT<1,-1>='Pro Number     : ':PRO      ; * JMK19
                     TEXT<1,-1>='Load Amount    : ':TAG.CHG'R26#8'     ; * JMK19
                     TEXT<1,-1>='Entered Amount : ':ACTUAL.CHG'R26#8'  ; * JMK19
                     TEXT<1,-1>='Ship Date      : ':BILL.DATE'D2/'     ; * JMK19
                     TEXT<1,-1>=' '      ; * JMK30
                     TEXT<1,-1>='For in-house use only.  FB.2.1.NW - Label 9500'           ; * JMK30
                     MVIN=''             ; * JMK19
*                    MVIN<1>='PBeason@AFSLogistics.Com'         ; * JMK19 ; * JMK73
                     MVIN<1>='TL_Block_Notify@AFSLogistics.Com'        ; * JMK73
*                    MVIN<2>='RKeyes@AFSLogistics.Com'       ; * JMK104
*                    MVIN<2>='GAllison@AFSLogistics.Com'     ; * JMK104
*                    MVIN<2,-1>='OHolman@AFSLogistics.Com'      ; * JMK19; * JMK30
*                    MVIN<2,-1>='MKerbow@AFSLogistics.Com'   ; * JMK19; * JMK30
                     MVIN<4>='AFS'       ; * JMK19
                     MVIN<5>=SUBJ        ; * JMK19
                     MVIN<6>=TEXT        ; * JMK19
                     CALL SENDMAIL(MVIN,MVOUT)     ; * JMK19
*                    CRT @(0,22):BELL:   ; * JMK19 ; * JMK72
*                    CALL ELINE('Potential Transportation Bill - Verify Origin and Destination.')    ; * JMK19 ; * JMK72
*                    LOOP                ; * JMK19 ; * JMK72
*                       CRT @(0,22):@(-4):BELL:'Enter TL to Continue.':          ; * JMK19 ; * JMK72
*                       INPUT BLK.ACT    ; * JMK19 ; * JMK72
*                       BLK.ACT=OCONV(BLK.ACT,'MCU')         ; * JMK19 ; * JMK72
*                    UNTIL BLK.ACT='TL' DO         ; * JMK19 ; * JMK72
*                    REPEAT              ; * JMK19 ; * JMK72
                     IF BLOCKIT=0 THEN   ; * JMK171
                        GO 9520          ; * JMK19
                     END                 ; * JMK171
                  END                    ; * JMK72
               END                       ; * JMK19
            NEXT VAL                     ; * JMK19
         END                             ; * JMK19
      END                                ; * JMK19
9520: *** END OF TRAFFIC LANE CHECKING   ; * JMK21
      RELEASE F.TAG.BLOCK,TAG.ID         ; * JMK19
      RETURN

UPD.UPS.SCHED: *** NPR033 Added subroutine

      UPS.VIN = '' ; UPS.VOUT = ''

      UPS.VIN<1> = CLIENT.ID:"*":PRO.ID
      UPS.VIN<2> = ACTIVITY.CODE
      UPS.VIN<3> = ACT.TRANS.DATE
      UPS.VIN<4> = ""                    ; * No longer used
      UPS.VIN<5> = USER.NAME
      UPS.VIN<6> = DATE()
      UPS.VIN<7> = TIME()

      CALL FB.UPD.UPS.SCHED(UPS.VIN,UPS.VOUT,F.UPS.SCHED,F.UPS.SCHED.HIST)

      RETURN
*
TL.BLOCK.EMAIL: *** NPR03 - Routine originally added by NPR Jan 2008.
*
      TEXT =''
      TEXT<1,-1>='On ':DATE()'D2/':' at ':OCONV(TIME(),'MTH'):', ':USER.NAME
      TEXT<1,-1>='  attempted to enter a bill with PO/BOL Number : ':W.BOL
      TEXT<1,-1>='  This might conflict with the TL system and was not allowed'
      TEXT<1,-1>=' '
      TEXT<1,-1>='Client         : ':CLIENT.ID:' - ':CLIENT.NAME
      TEXT<1,-1>='Carrier        : ':CARRIER.ID:' - ':CARRIER.NAME
      TEXT<1,-1>='Pro Number     : ':PRO
      TEXT<1,-1>=' '
      TEXT<1,-1>='For in-house use only.  FB.2.1.NW - TL.BLOCK.EMAIL Internal call'
      SUBJ=USER.NAME:' Attempted to enter a bill with PO/BOL Number : ':W.BOL
      MVIN=''
      MVIN<1>='TL_Block_Notify@AFSLogistics.Com'
***      MVIN<1,-1>= 'mbutts@afs.net'
******      MVIN<1,-1>='npratt@afs.net'
      MVIN<4>='AFS'
      MVIN<5>=SUBJ
      MVIN<6>=TEXT
      CALL SENDMAIL(MVIN,MVOUT)
*
      RETURN
*
SEND.ZERO.EMAIL: *** NPR09 - Routine originally added by NPR Oct 2008.
*
      TEXT =''
      TEXT<1,-1>='On ':DATE()'D2/':' at ':OCONV(TIME(),'MTH'):', ':USER.NAME: '  Zeroed bill ':PRO
      TEXT<1,-1>=' '
      TEXT<1,-1>='Client         : ':CLIENT.ID:' - ':CLIENT.NAME
      TEXT<1,-1>='Carrier        : ':CARRIER.ID:' - ':CARRIER.NAME
      TEXT<1,-1>=' '
      TEXT<1,-1>='For in-house use only.  FB.2.1.NW - See SEND.ZERO.EMAIL Internal subroutine call'
      SUBJ=USER.NAME:' Zeroed bill ':PRO
      MVIN=''
***      MVIN<1>= 'mbutts@afs.net'
      MVIN<1,-1>='MMcKay@afs.net'
      MVIN<1,-1>='smatthews@afs.net'
      MVIN<1,-1>='gallison@afs.net'
*      MVIN<1,-1>='KJohnson@afs.net'
******      MVIN<2>='npratt@afs.net'
      MVIN<4>='AFS'
      MVIN<5>=SUBJ
      MVIN<6>=TEXT
      CALL SENDMAIL(MVIN,MVOUT)
*
      RETURN
*
SEND.THRESHOLD.EMAIL: *** NPR16 - Send email to Acct Manager if assigned Threshold for client has been reached (Forcing Audit regardless of any other factors)
*

      READV T.MODE FROM F.TRANSPORT,CARRIER.MODE,1 ELSE T.MODE = ''

      TEXT =''
      TEXT<1,-1>='Entry Date Time  : ':DATE()'D2/':' at ':OCONV(TIME(),'MTH')
      TEXT<1,-1>=' '
      TEXT<1,-1>='Client           : ':CLIENT.ID:' - ':CLIENT.NAME
      TEXT<1,-1>='Carrier          : ':CARRIER.ID:' - ':CARRIER.NAME
      TEXT<1,-1>='Pro #            : ':PRO
      TEXT<1,-1>='Entered by       : ':USER.NAME
      TEXT<1,-1>=' '
      TEXT<1,-1>= TCH.NOTE1
      TEXT<1,-1>=' '
      TEXT<1,-1>= TCH.NOTE2
      TEXT<1,-1>=' '
      TEXT<1,-1>= "Changed Stack # from ":BILL.STATUS:" to ":NEW.BILL.STATUS:" - Forced bill to go to Auditor ":CL.AUDITOR
      TEXT<1,-1>=' '
      TEXT<1,-1>=' '
      TEXT<1,-1>='For in-house use only : Message generated in  FB.2.1.NW - See SEND.THRESHOLD.EMAIL Internal subroutine call'
      SUBJ=USER.NAME:' ACCT.MGR.EMAIL = ':ACCT.MGR.EMAIL:"  ":PRO
      SUBJ = "Bill  ":PRO:" for client ":CLIENT.ID:" - ":CLIENT.NAME:" The Amount of ":OCONV(ACTUAL.CHG,"MR2$"):" exceeds set threshold of ":OCONV(THRESHOLD.AMT,"MR2$")
      MVIN=''
******      MVIN<1>= 'npratt@afs.net'          ; * ZZ Remove
      MVIN<1>= 'mbutts@afs.net'
      MVIN<1,-1>='MMcKay@afs.net'
      MVIN<1,-1>=ACCT.MGR.EMAIL
*ZZ      MVIN<2>='npratt@afs.net'
      MVIN<4>='AFS'
      MVIN<5>=SUBJ
      MVIN<6>=TEXT
      CALL SENDMAIL(MVIN,MVOUT)
*
      RETURN
