      $OPTIONS HEADER.EJECT
      ERRMSG=''
*
      $OPTIONS EXEC.EQ.PERF
      $OPTIONS INFO.ABORT
*
* PROGRAM CARRIER.RATER
*
* Front end query routine to input values to be used in calculating a carrier rate.
*
*  Originally for FedEx
*
* FREIGHT BILLING PACKAGE
*
* AUTHOR: N.C.G. Pratt
* DATE  :   July 2009
*
      OPEN '','FB.CARR.RATES,ZONES' TO F.FEDEX.ZONES ELSE ERRORS = 'CANT OPEN NP.FEDEX.ZONES' ; RETURN
      OPEN '','FB.CARR.RATES,INDEX' TO F.FEDEX.ZONES.IDX ELSE ERRORS = 'CANT OPEN NP.FEDEX.ZONES,INDEX' ; RETURN
      OPEN '','FB.CARR.RATES' TO F.FEDEX.ZONES.RATES ELSE ERRORS = 'CANT OPEN NP.FEDEX.ZONES,RATES' ; RETURN

*QQ OPEN '','NP.FEDEX.ZONES' TO F.FEDEX.ZONES ELSE ERRORS = 'CANT OPEN NP.FEDEX.ZONES' ; RETURN
*QQ OPEN '','NP.FEDEX.ZONES,INDEX' TO F.FEDEX.ZONES.IDX ELSE ERRORS = 'CANT OPEN NP.FEDEX.ZONES,INDEX' ; RETURN
*QQ OPEN '','NP.FEDEX.ZONES,RATES' TO F.FEDEX.ZONES.RATES ELSE ERRORS = 'CANT OPEN NP.FEDEX.ZONES,RATES' ; RETURN
*QQ OPEN '','FEDEX.ZONES' TO F.FEDEX.ZONES ELSE ERRORS = 'CANT OPEN FEDEX.ZONES' ; RETURN
*QQ OPEN '','FEDEX.RATES' TO F.FEDEX.RATES ELSE ERRORS = 'CANT OPEN FEDEX.RATES' ; RETURN

      OPEN '','ZIPS.CODES' TO F.ZIPS ELSE ERRORS = 'CANT OPEN ZIPS.CODES' ; RETURN
      OPEN '','FB.TABLES' TO F.TABLES ELSE ERRORS = 'CANT OPEN FB.TABLES' ; RETURN

      PROMPT''
      PROG.NAME='CARRIER.RATER'
      PROG.DESC='Carrier Rater'
      PACK.NAME='Freight Billing'
*
      UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'CARRIER.RATER' ; UPL.VOUT = ''                    ;* NPR_UPL 04/22/2010
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/22/2010
      CALL GET.USER(USER)

*************************************************
*
*SERVICE.LVL.ARRAY     = "FIRST_OVERNIGHT"
*SERVICE.LVL.ARRAY<2>  = "2DAY"
*SERVICE.LVL.ARRAY<3>  = "2DAY_FREIGHT"
*SERVICE.LVL.ARRAY<4>  = "3DAY_FREIGHT"
*SERVICE.LVL.ARRAY<5>  = "EXPRESS_SAVER"
*SERVICE.LVL.ARRAY<6>  = "1DAY_FREIGHT"
*SERVICE.LVL.ARRAY<7>  = "GROUND_COMM"
*SERVICE.LVL.ARRAY<8>  = "HOME_DELIVERY"
*SERVICE.LVL.ARRAY<9>  = "PRIORITY_OVERNIGHT"
*SERVICE.LVL.ARRAY<10> = "STANDARD_OVERNIGHT"

*** Order of Service Levels for FedEx as per Brian P.  - These should probably be in a table but are hard coded for now

* 1) First Overnight
* 2) Priority Overnight
* 3) Standard Overnight
* 4) (skip this one)
* 5) 2 Day
* 6) Express Saver
* 7) Ground Commercial
* 8) Home Delivery

      SERVICE.LVL.ARRAY= ""

      SERVICE.LVL.ARRAY<1,1>  = "First Overnight"
      SERVICE.LVL.ARRAY<2,1>  = "Priority Overnight"
      SERVICE.LVL.ARRAY<3,1> = "Standard Overnight"
      SERVICE.LVL.ARRAY<4,1>  = "2 Day"
      SERVICE.LVL.ARRAY<5,1>  = "Express Saver"
      SERVICE.LVL.ARRAY<6,1>  = "Ground Commercial"
      SERVICE.LVL.ARRAY<7,1>  = "Home Delivery"

*SERVICE.LVL.ARRAY<9,1>  = "1 Day"
*SERVICE.LVL.ARRAY<9,1>  = "1 Day Freight"
*SERVICE.LVL.ARRAY<9,1>  = "2 Day Freight"
*SERVICE.LVL.ARRAY<9,1>  = "3 Day Freight"
******
      SERVICE.LVL.ARRAY<1,2>  = "1STON"
      SERVICE.LVL.ARRAY<2,2>  = "PRIO_ON"
      SERVICE.LVL.ARRAY<3,2> = "STD_ON"
      SERVICE.LVL.ARRAY<4,2>  = "2DAY"
      SERVICE.LVL.ARRAY<5,2>  = "EXP_SVER"
      SERVICE.LVL.ARRAY<6,2>  = "GR_COMM"
      SERVICE.LVL.ARRAY<7,2>  = "HOME_DEL"

*SERVICE.LVL.ARRAY<9,2>  = "2DAY"
*SERVICE.LVL.ARRAY<9,2>  = "1DAY_FR"
*SERVICE.LVL.ARRAY<9,2>  = "2DAY_FR"
*SERVICE.LVL.ARRAY<9,2>  = "3DAY_FR"

*********************************************************************************************************

      WEIGHT   = ''
      EFF.DATE = ''
      ORIG.ZIP = ''
      DEST.ZIP = ''
      LET.PACKAGE = ''
      RESIDENTIAL = ''
      D.ZONE = ""

10    :
*
      GOSUB BUILD.SCREEN.LAYOUT
*

      GET.ORIG.ZIP :

      BACK.FLAG = 0
      ZIP.LEN   = 5

      HELP = "Enter the Origination Zip Code. [S]=Search. [X]=Back. [EX]=Exit."
      VIN=0                                                                     ; * Starting Zip Character Count
      VIN<2>=18                                                                 ; * Column For Input
      VOUT=''

      CALL FB.2.1.CSZ.NEW(VIN,VOUT,4,ORIG.ZIP,HELP,ZIP.LEN,BACK.FLAG,ORIG.CITY,ORIG.STATE)
      IF BACK.FLAG THEN
         STOP
      END
      ORIG.ZIP=OCONV(ORIG.ZIP,'MCU')
      IF HELP = 'S' ! HELP = '' THEN
         CRT SCR
         CALL AFS.SCR.HEAD(CO.ID,FILE.ID,PERIOD,PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,0)
      END
      IF ORIG.CITY # '' THEN
         ORIG.DESC = ORIG.CITY:', ':ORIG.STATE
      END ELSE
         ORIG.DESC = ORIG.STATE
      END

*         CRT SCR

      CRT @(18,4):ORIG.ZIP'L#6':' ':ORIG.DESC'L#25'

      GET.DEST.ZIP :

      HELP = "Enter the Destination Zip Code. [S]=Search. [X]=Back. [EX]=Exit."
      VIN=0                              ; * Starting Zip Character Count
      VIN<2>=18                          ; * Column For Input
      VOUT=''

      CALL FB.2.1.CSZ.NEW(VIN,VOUT,5,DEST.ZIP,HELP,ZIP.LEN,BACK.FLAG,DEST.CITY,DEST.STATE)
      IF BACK.FLAG THEN
         BACK.FLAG=''
         GO GET.ORIG.ZIP
      END
      DEST.ZIP=OCONV(DEST.ZIP,'MCU')
      IF HELP = 'S' ! HELP = '' THEN
         CRT SCR
         CALL AFS.SCR.HEAD(CO.ID,FILE.ID,PERIOD,PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,0)
         CRT @(18,4):ORIG.ZIP'L#6':' ':ORIG.DESC'L#25'
      END
      IF DEST.CITY # '' THEN
         DEST.DESC = DEST.CITY:', ':DEST.STATE
      END ELSE
         DEST.DESC = DEST.STATE
      END

*         CRT SCR

      CRT @(18,5):DEST.ZIP'L#6':' ':DEST.DESC'L#25'
      IF DEST.ZIP = ORIG.ZIP THEN
         CALL ELINE('Warning - Origin and destination zip are the same.')
         GOTO GET.DEST.ZIP
      END


*****************************************************************************************

      GET.EFF.DATE :

      IF EFF.DATE # '' THEN
         MASK = EFF.DATE'D2.'
      END ELSE
         MASK = DATE()'D2.'
      END
      BACK.FLAG=0

      HELP = "Enter the Effective Date. [T]=Today [X]=Back to Destination Zip [EX]=Exit"

      CALL GEN.IN(18,6,MASK,'DATE',Q,0,8,'','',2,-8,6,0,QI,HELP,0,23)

      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE EFF.DATE NE "" & QI = ''
            Q = EFF.DATE
         CASE QI = 'T'
            Q = DATE()
         CASE QI = 'X'
            CRT @(18,6):@(-4):
            BACK.FLAG=1
            GOTO GET.DEST.ZIP
         CASE QI = 'EX'
            STOP
         CASE NOT( NUM(Q) )
            GOTO GET.EFF.DATE
      END CASE
      EFF.DATE = Q
      CRT @(18,6):EFF.DATE'D2/'


* CRT @(18, 9): ; INPUT EFF.DATE

*****************************************************************************************

      GET.WEIGHT :

      BACK.FLAG = 0
      HELP = 'Enter the shipment Weight'
      REQ = 0

      IF WEIGHT # '' THEN
         MASK = WEIGHT
      END ELSE
         MASK = ""
      END

      CALL GEN.IN(18,7,WEIGHT'R#7','',Q,REQ,7,'','',2,-7,7,0,QI,HELP,0,23)

      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI = 'X'
            CRT @(18,7):'       ':
            BACK.FLAG = 1
            GOTO GET.EFF.DATE
         CASE QI = 'EX'
            STOP
         CASE QI = ''
            Q = WEIGHT
         CASE NUM(QI)
            IF QI GT "0" THEN
               Q = QI
            END ELSE
               CALL ELINE("Invalid selection - weight must be a positive value")
            END
         CASE 1
            CALL ELINE("Invalid selection")
            GOTO GET.WEIGHT
      END CASE

      WEIGHT = OCONV(Q*100,"MR2")
      CRT @(18,7):WEIGHT

*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
GET.RESIDENTIAL: *** Enter Residential "Y" or "N"
***********************************************************************

      IF RESIDENTIAL # '' THEN MASK = RESIDENTIAL 'L#2' ELSE MASK = "##" 'L#2'

      HELP = 'Enter [Y]es, [N]o,  [X]=Back Enter a weight [EX]=Exit'

      CALL GEN.IN(61,07,MASK,'',Q,0,2,'','',2,-2,7,0,QI,HELP,0,23)

      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI = ''
            Q = RESIDENTIAL
         CASE QI = 'X'
            CRT @(61,07):' ':
            GOTO GET.WEIGHT
         CASE QI = 'EX'
            CHAIN "G"
         CASE QI = 'Y'
            Q = 'Y'
         CASE QI = 'N'
            Q = 'N'
         CASE QI = ''
            IF RESIDENTIAL # '' THEN Q = RESIDENTIAL ELSE
               CALL ELINE("Invalid Entry - Enter [Y]es or [N]o !")
               GOTO GET.RESIDENTIAL
            END
         CASE 1
            CALL ELINE("Invalid Entry !")
            GOTO GET.RESIDENTIAL
      END CASE
      RESIDENTIAL = Q

      IF RESIDENTIAL = "Y" THEN
         RESIDENTIAL.STR = "Yes"
      END ELSE
         RESIDENTIAL.STR = "No"
      END

      CRT @(61,07):RESIDENTIAL.STR


GET.LET.PACKAGE: *** Enter "L"etter or "P"ackage
***********************************************************************

      IF LET.PACKAGE # '' THEN MASK = LET.PACKAGE 'L#2' ELSE MASK = "##" 'L#2'

      HELP = 'Enter [L]etter or [P]ackage  [X]=Back Enter Residential [EX]=Exit'

      CALL GEN.IN(61,08,MASK,'',Q,0,2,'','',2,-2,8,0,QI,HELP,0,23)

      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI = ''
            Q = "P"
         CASE QI = 'X'
            CRT @(61,08):' ':
            GOTO GET.WEIGHT
         CASE QI = 'EX'
            CHAIN "G"
         CASE QI = 'L'
            Q = 'L'
            IF WEIGHT GT "0.5" THEN
               CALL ELINE("Recommended weight for FedEx Envelope/Letter should not exceed .5 lbs ")
               GOTO GET.WEIGHT
            END
         CASE QI = 'P'
            Q = 'P'
         CASE QI = ''
            IF LET.PACKAGE # '' THEN Q = LET.PACKAGE ELSE
               CALL ELINE("Invalid Entry - Enter [L]etter or [P]ackage !")
               GOTO GET.LET.PACKAGE
            END
         CASE 1
            CALL ELINE("Invalid Entry !")
            GOTO GET.LET.PACKAGE
      END CASE
      LET.PACKAGE = Q

      IF LET.PACKAGE = "L" THEN
         LET.PACKAGE.STR = "Letter"
      END ELSE
         LET.PACKAGE.STR = "Package"
      END

      CRT @(61,08):LET.PACKAGE.STR


*&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

*****************************************************************************************


      DETAIL.ARRAY = ''

      N.SVL = DCOUNT(SERVICE.LVL.ARRAY,@AM)

      FOR SRVC.CNT = 1 TO N.SVL
         I.EFF.DATE    = EFF.DATE
         RATE.EFF.DATE = I.EFF.DATE

* CRT @(-1) ; CRT " I.EFF.DATE ":I.EFF.DATE  ; DEBUG

         SERVICE.LVL = SERVICE.LVL.ARRAY<SRVC.CNT,2>

         ID.CARRIER = "00015"  ;* Federal Express Corporation

         IF SERVICE.LVL = "GR_COMM" OR SERVICE.LVL = "HOME_DEL" THEN
            ID.CARRIER = "01075"
         END

         ID.IDX = ID.CARRIER
*
         GOSUB CALC.RATE

      NEXT SRVC.CNT

      GOSUB DISPLAY.RESULTS

      CALL ELINE("")

      GOTO 10
*
      CALC.RATE :

      DEBUG.FLAG = 0
* IF USER = "NPRATT" THEN DEBUG.FLAG = 1

*IF DEBUG.FLAG THEN
*   RESIDENTIAL = "Y" ; * Force "Y" for now - Add prompts later
*   LET.PACKAGE = "L"       ; * Force "P" for now - Add prompts later
*END
*
      IF FIELD(WEIGHT,".",2) NE "0" THEN W.WEIGHT = INT(WEIGHT) + 1 ELSE W.WEIGHT = WEIGHT

*
      VIN    = ORIG.ZIP
      VIN<2> = DEST.ZIP
      VIN<3> = I.EFF.DATE
* VIN<4> = W.WEIGHT
      VIN<4> = WEIGHT
      VIN<5> = RATE.EFF.DATE
      VIN<6> = SERVICE.LVL
      VIN<7> = ID.CARRIER
      VIN<8> = RESIDENTIAL
      VIN<9> = LET.PACKAGE

      IF DEBUG.FLAG THEN
         CRT @(-1)
         CRT "CARRIER.RATER GOING TO  CALC.CARRIER.RATE" ; CRT
         CRT "VIN   ":VIN
         CRT; CRT
         CRT "VOUT  ":VOUT
         CALL ELINE("")
      END

      CALL CALC.CARRIER.RATE(VIN,VOUT,SERVICE.LVL.ARRAY,ERRORS)

      IF DEBUG.FLAG THEN
         CRT @(-1)
         CRT "CARRIER.RATER  COMING FROM CALC.CARRIER.RATE" ; CRT
         CRT "VIN    ":VIN
         CRT; CRT
         CRT "VOUT   ":VOUT
         CRT "ERRORS ":ERRORS
         CALL ELINE("")
      END
*
      IF ERRORS NE "" THEN
         ERR.LINE = ERRORS
         CONVERT @VM TO " " IN ERR.LINE
*   CALL ELINE(ERR.LINE)
*   RETURN
      END

      IF D.ZONE = "" THEN D.ZONE     = VOUT<1>
      D.BASE.RATE     = VOUT<2> * 1
      D.FSC.PERC = VOUT<3> * 1
      D.FSC.AMT  = VOUT<4> * 1
      D.FINAL.RATE  = VOUT<5> * 1
      ADD.CHARGE = VOUT<10> * 1

      DETAIL.ARRAY<1,-1> = D.ZONE
      DETAIL.ARRAY<2,-1> = D.BASE.RATE
      DETAIL.ARRAY<3,-1> = D.FSC.PERC
      DETAIL.ARRAY<4,-1> = D.FSC.AMT
      DETAIL.ARRAY<5,-1> = D.FINAL.RATE
      DETAIL.ARRAY<6,-1> = ADD.CHARGE

      RETURN
*
*
BUILD.SCREEN.LAYOUT:
*
      CRT @(-1)

      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,PERIOD,PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)

      SCR = @(-1)
* SCR  = @(0,03):"Carrier #       : "      ;*                      Weight Pkg Height Width Length
      SCR := @(0,04):"Origination Zip : "        ;*                    ========     ====== ===== ======
      SCR := @(0,05):"Destination Zip : "        ;*                    99999.99     999999 99999 999999
      SCR := @(0,06):"Effective Date  : "        ;*                    99999.99     999999 99999 999999
      SCR := @(0,07):"Weight          : "
      SCR := @(0,08):"Zone            : "
      SCR := @(45,07):"Residential    : "
      SCR := @(45,08):"Package/Letter : "

      SCR := @(0,10):"Service Level           Base Rate  + Res. SChrg + FSC Amount =       Rate  FSC %"
      SCR := @(0,11):"---------------------   ---------  ------------ ------------ ------------  -----"

      N.SVL = DCOUNT(SERVICE.LVL.ARRAY,@AM)
      FOR LVL = 1 TO N.SVL
         SCR := @(0,11+LVL):LVL "R#2" : " ": SERVICE.LVL.ARRAY<LVL,1>[1,21]
      NEXT LVL

      CRT SCR
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,PERIOD,PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,0)
*
      RETURN
*
      DISPLAY.RESULTS :
*
*ZONE     = VOUT<1>
*RATE     = VOUT<2>
*FSC.PERC = VOUT<3>
*FSC.AMT  = VOUT<4>
*FINAL.RATE  = VOUT<5>

      IF RESIDENTIAL = "Y" THEN
         RESIDENTIAL.STR = "Yes"
      END ELSE
         RESIDENTIAL.STR = "No"
      END

      LET.PACKAGE.STR = ""
      IF LET.PACKAGE = "L" THEN LET.PACKAGE.STR = "Letter"
      IF LET.PACKAGE = "P" THEN LET.PACKAGE.STR = "Package"

      CRT @(61,07): RESIDENTIAL.STR
      CRT @(61,08): LET.PACKAGE.STR

      D.AMT = 0

* N.DET = DCOUNT(DETAIL.ARRAY<1>,@VM)
      N.DET = "7"

      FOR I.DET = 1 TO N.DET
         D.ZONE     = DETAIL.ARRAY<1,I.DET>
         D.BASE.RATE     = DETAIL.ARRAY<2,I.DET> * 1
         D.FSC.PERC = DETAIL.ARRAY<3,I.DET> * 1
         D.FSC.AMT  = DETAIL.ARRAY<4,I.DET> * 1
         D.FINAL.RATE  = DETAIL.ARRAY<5,I.DET> * 1
         D.ADD.CHRG = DETAIL.ARRAY<6,I.DET> * 1
         CRT @(18,8):D.ZONE "R#2"

* SCR := @(0,11):"---------------------   ---------  ------------ ------------  ------------ ------"
         IF D.FINAL.RATE NE "0" THEN
            CRT @(24,I.DET+11):OCONV(D.BASE.RATE,"MR2,") "R#9"
            CRT @(37,I.DET+11):OCONV(D.ADD.CHRG,"MR2,") "R#10"
            CRT @(50,I.DET+11):OCONV(D.FSC.AMT,"MR2,") "R#10"
            CRT @(61,I.DET+11):OCONV(D.FINAL.RATE,"MR2,") "R#12"
            CRT @(74,I.DET+11):OCONV(D.FSC.PERC,"MR2") "R#5"
         END ELSE
            CRT @(24,I.DET+11):"Not Applicable/Available .."
         END
      NEXT I.DET

*
      RETURN
