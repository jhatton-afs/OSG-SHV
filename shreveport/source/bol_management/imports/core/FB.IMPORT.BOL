*******************************************************
* Program name : FB.IMPORT.BOL
* Author       : UNKNOWN
* Date written : UNKNOWN
* Library      : FBBP
* COPYRIGHT (C) 2016 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED.
*
* Last updated by afs (AFSLOGISTICS\nmeddaugh) at 09:22:51 on 04/01/2019.
*
* Start modification history
* 04/01/19 : NKH01 : ACCU-316 Modified CREATE-FILE file sizes
* End modification history
*
*******************************************************

*  USER=OCONV(SYSTEM(19),'MCL')
      CALL GET.USER.NEW(USER,CH.NUM)
      USER=OCONV(USER,'MCL')
*
      TAB=CHAR(9)
      PROMPT''
      ERRMSG=''
      PROG.NAME='Import BOL Codes'
      PROG.DESC="Import BOL Codes from Text File"
      PACK.NAME="Freight Billing"
    
       UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.IMPORT.BOL' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
       UPL.VIN<3> = USER
       UPL.VIN<4> = CH.NUM
       CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010

      WIDTH.LIMIT = 400        ;* Max number of chars to import

      TESTING = 0
*
* Open Files
*
      OPEN '','FB.TABLES' TO F.TABLES ELSE
         CALL OPEN.ABORT('FB.TABLES',PROG.NAME)
      END

      OPEN '','FBWORK':CH.NUM TO F.WORK ELSE
         EXECUTE 'CREATE-FILE DATA FBWORK':CH.NUM:' 1001,1' CAPTURING OUTPUT     ; * NKH01
         OPEN '','FBWORK':CH.NUM TO F.WORK ELSE
            CALL OPEN.ABORT('FBWORK':CH.NUM, PROG.NAME)
         END
      END
      OPEN 'CLIENTS' TO F.CLIENTS ELSE ABORT
      TAB=CHAR(9)
      CLEARFILE F.WORK

      YN.ANSWER = ''
      YN.MSG=''
      CLIENT=''

      IF TESTING THEN
         CALL ELINE('TESTING MODE ACTIVE! - All data stored to FBWORK':CH.NUM)
      END

************************************************
ENTER.CLIENT: ***
**************************************************
      CALL AFS.SCR.HEAD(CO.ID, FILE.ID, '', PROG.NAME, PROG.DESC, PACK.NAME, CO.NAME, TIME.DATE, 1)
      HELP="Enter client number. Word of name for search. X=Exit. EX=Exit."
      IF CLIENT='' THEN
         MASK='#####'
      END ELSE
         MASK=CLIENT'R%5'
      END
      CALL GEN.IN(0,3,'Enter Client Number       : ':MASK,'',Q,0,20,'','',2,-5,3,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX' ! QI='X'
            STOP
         CASE QI = ''
            CALL ELINE('ENTRY REQUIRED')
            GO ENTER.CLIENT
         CASE NOT(QI MATCHES "0N")
            CALL SOUNDEX.DISPLAY(QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            BEGIN CASE
               CASE ITEM.LIST=''
                  GOTO ENTER.CLIENT
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                  GOTO ENTER.CLIENT
               CASE ITEM.LIST NE ''
                  IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
                  GOTO ENTER.CLIENT
            END CASE
         CASE NUM(QI)
            Q=QI'R%5'
         CASE 1
            GOTO ENTER.CLIENT
      END CASE
      CLIENT=Q

      READ CLIENT.REC FROM F.CLIENTS,Q ELSE
         CALL ELINE('ERROR - Client ':CLIENT:' not on file.')
         GOTO ENTER.CLIENT
      END
      CLIENT.NAME=CLIENT.REC<2>
      CRT @(0,3):'Enter Client Number       : ':CLIENT'R%5':
      CRT ' ':CLIENT.NAME:@(-4):

OPEN.CLIENTS.FILES:
      OPEN '','FB.BOL.CRX,':CLIENT TO F.BOL.CRX ELSE
         CALL OPEN.ABORT("FB.BOL.CRX,":CLIENT,PROG.NAME)
      END

**************************************************
ASK.ABOUT.FILE: ***
**************************************************
      CALL AFS.SCR.HEAD(CO.ID, FILE.ID, '', PROG.NAME, PROG.DESC, PACK.NAME, CO.NAME, TIME.DATE, 1)

      MASK=''
      CRT @(8,10):'Have you already saved your BOL CODE file to the directory'
      CRT @(8,11):' named U:\':USER:' as a ".TXT" Text file from Excel?'
      CRT @(10,13):'Answer :'
      Q=''
      HELP = CHAR(7):"Entry Options: [Y]-Yes [N]-No [EX]-Exit"
      CALL GEN.IN(18,13,MASK,'',Q,0,2,'','',2,18,13,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX' OR QI='X'
            STOP
         CASE QI='Y'
         CASE 1
            CALL ELINE('Please save your file BEFORE using this program!')
            GOTO ASK.ABOUT.FILE
      END CASE

      FILENAME=''               ;* Init default entry...
**************************************************
ENTER.FILENAME: ***
**************************************************
      CALL AFS.SCR.HEAD(CO.ID, FILE.ID, '', PROG.NAME, PROG.DESC, PACK.NAME, CO.NAME, TIME.DATE, 1)
      HELP="Enter File Name in BillData to Import. X=Exit. EX=Exit."
      IF FILENAME='' THEN
         MASK='#####'
      END ELSE
         MASK=FILENAME
      END

      CALL GEN.IN(0,6,'Enter File Name     :':MASK,'',Q,0,20,'','',2,-LEN(MASK),6,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=FILENAME; Q=FILENAME
      BEGIN CASE
         CASE QI=''
            GOTO ENTER.FILENAME
         CASE QI='EX' OR QI='X'
            STOP
      END CASE

      FILENAME=Q

      VIN='BILLDATA'                  ;* VOC Pointer to Source Location on AFS
      VIN<2>=USER                     ;* Sub Folder on AFS that has the file
      VIN<3>=FILENAME                 ;* FileName to Load
      CALL READ.PCFILE(VIN,VOUT)      ;* Read File

      IF VOUT[1,5]='ERROR' THEN
         GOTO ENTER.FILENAME
      END
      IMPORT.FILE = VOUT
      NEW.BOLS = ''
      FAILURE = 0

      DEL IMPORT.FILE<1>
*DF   DEL IMPORT.FILE<1>

*
* Read Import File into Dynamic Array and check for valid entries
*
      NUM.LINES = DCOUNT(IMPORT.FILE,@AM)

      POS = 0
      ERRORS = ''
      FOR LINE = 2 TO NUM.LINES-1
         CUR.LINE = IMPORT.FILE<1>

         GOSUB EXTRACT.LINE
         DATA.OK= (BOL MATCHES "6N")
         DATA.OK+=(EXPENSE.CODE MATCHES "15N")
         IF DATA.OK # 2 THEN
            ERRORS<-1> = 'Invalid Data, please try again':' ':POS
            POS = POS + 1
            GO SKIP.IMPORT
         END

         POS = POS + 1
         IF BOL='' AND EXPENSE.CODE='' THEN ;* Skip the line - Allowable blank line...

            POS = POS - 1
         END ELSE
            IF BOL#'' AND EXPENSE.CODE='' THEN
               CALL ELINE('Line # ':POS+1:' has a blank CODE but has a BOL. DO YOU WANT IMPORT.')
               YN.MASK = 'N '
               GOSUB ASK.Y.OR.N
               IF YN.ANSWER='N' THEN
                  POS = POS + 1
                  GO SKIP.IMPORT
               END
               BOL.REC = ''
               BOL.REC<4> = EXPENSE.CODE
               IF TESTING THEN
                  WRITE BOL.REC ON F.WORK,BOL
               END ELSE
                  WRITE BOL.REC ON F.BOL.CRX,BOL
               END

            END ELSE
               BOL.REC = ''
               BOL.REC<4> = EXPENSE.CODE
               IF TESTING THEN
                  WRITE BOL.REC ON F.WORK,BOL
               END ELSE
                  WRITE BOL.REC ON F.BOL.CRX,BOL
               END
            END


         END
         DEL IMPORT.FILE<1>
SKIP.IMPORT:
      NEXT NUM.LINES

      CALL ELINE('Import complete')
      WRITE ERRORS ON F.TABLES,"BOL ERRORS"

      STOP
**************************************************
EXTRACT.LINE:
**************************************************
      BOL = CUR.LINE[14,6]                ;* BOL COLUMN
      EXPENSE.CODE = CUR.LINE[64,15]      ;* EXPENSE CODE COLUMN

      RETURN

**************************************************
ASK.Y.OR.N: ***
**************************************************
      YN.ANSWER = ''

Y.OR.N:

      HELP = CHAR(7):"Entry Options: [Y]-Yes [N]-No [X]-Back"
      CRT @(0,22):YN.MSG:@(-4)
      MASK = YN.MASK
      Q=''
      CALL GEN.IN(LEN(YN.MSG)+1,22,MASK,'',Q,0,2,'','',2,LEN(YN.MSG)+1,22,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')

      IF QI='' THEN QI=TRIM(MASK)
      BEGIN CASE
         CASE QI = '1'
            QI='Y'
         CASE QI = '0'
            QI='N'
         CASE QI = 'Y'
         CASE QI = 'N'
         CASE QI = 'X'
         CASE QI = 'EX'
         CASE 1
            CALL ELINE('Invalid entry.')
            GOTO Y.OR.N
      END CASE

      CRT @(0,22):@(-4):
      CRT @(0,23):@(-4):
      YN.ANSWER = QI

      RETURN
*
*
