*********************************************************************
* Program name : FB.5.16
* Author       : David R Friend
* Date written : August 3, 2007
* Library      : FBBP
* COPYRIGHT (c) : AFS, LLC 2016, All Rights Reserved.
*
* modify claims client master
* Last updated by afs (AFSLOGISTICS\nmeddaugh) at 17:59:13 on 09/29/2021.

* Start modification history
* 121707 - JMK01 - C070443 - Create process to update SQL data tables from Universe
* 012208 - NPR01 - Added number of Bills zeroed to email message
* 081408 - JMK02 - C081954 - Remove Rcason from Client processing emails
* 112008 - JMK03 - C082563 - Grant permission to zero bills from SS report
* 011309 - JMK04 - T090062 - Add more information on the email (below) that is genreated from the zero bill process
* 040909 - NPR02 - T090485 - Added the Servicing Salesman and the Account Manager as recipients to email message plus additional wording
* 051809 - NPR03 - T099999 - Added additional wording to zero bill email.
* 072409 - NPR04 - T090941 - Set Misroute and LCC amounts to zero.
* 073009 - NPR05 - T090941 - Set other Misroute and LCC related fields to NULL.
* 101211 - RLM01 - Project 80 - Retrieve Account Manager ID from file CLIENTS instead of salesman file
* 020513 - JMK05 - SysAid#5163 - OHolman@afs,net
* 092413 - JMK06 - Project - SHV/SLC Integration for adjustment data transfer
* 070214 - DRF01 - SysAid 10481 - Gave CPEOPLES the same access as DRABORN
* 081314 - JMK07 - SysAid#11359 - Mary Ann Rose access
* 081514 - DRF02 - SysAid 11416 - Gave KMCQUISTON the same access as DRABORN
* 090814 - DRF03 - SysAid 11961 - Gave TGREEN the same access as DRABORN
* 120314 - DRF04 - SysAid 14019 - Gave NTAYLOR the same access as DRABORN
* 012615 - JMK08 - SysAid#14916 - Add Universe access for Kealey Barnes
* 031516 - DRF05 - SysAid # 22958 - Allow commision to be removed also
* 010518 - GRB01 - ME # 9502 - Remove swinstead and brian jeppson
* 042821 - NKH01 - ACCU-1164 Lock FB Bills modification
* 092021 - NKH02 - ACCU-1342 AFSmartPay modifications
* End modification history
***********************************************************************

* Instructions to create file
*  Get an Excel file save as U:\-USER-\00000-ZERO.txt
*    where 00000 is the client number
*    '-ZERO' is a literal
*    and .txt is the Formatted Text TAB Delmited option
*    Keywords to search on: ZERO ; ZERO FREIGHT BILLS

$INCLUDE PROG.ADMIN INC_OPTIONS
$INCLUDE FILE.DEFS INC_CLIENTS

      SEQ=0
      PROMPT''
      CALL GET.USER.NEW(USER,CH.NUM)

*
* ASK FOR CLIENT
*
      PROG.NAME='FB.5.16'
      PROG.DESC="Zero out Frieght Bills from SS Spec 1"
      PACK.NAME="Freight Billing"

      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'FB.5.16' ; UPL.VOUT = ''        ; * NPR_UPL 04/23/2010
      UPL.VIN<3> = USER
      UPL.VIN<4> = CH.NUM
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)       ; * NPR_UPL 04/23/2010
      CALL AFS.SCR.HEAD(CO.ID, FILE.ID, '', PROG.NAME, PROG.DESC, PACK.NAME, CO.NAME, TIME.DATE, 1)
      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         CALL OPEN.ABORT("CLIENTS",PROG.NAME)
      END
      OPEN '','BCTRL' TO F.BCTRL ELSE
         CALL OPEN.ABORT("BCTRL",PROG.NAME)
      END
      OPEN '','FB.ZERO.LOG' TO F.ZERO.LOG ELSE
         CALL OPEN.ABORT("FB.ZERO.LOG",PROG.NAME)
      END
      OPEN '','VOC' TO F.VOC ELSE
         CALL OPEN.ABORT("VOC",PROG.NAME)
      END

      OPEN '','AR.SLSMAN.1000.1' TO F.AR.SLSMAN ELSE         ; *NPR02
         CALL OPEN.ABORT('AR.SLSMAN.1000.1',PROG.NAME)       ; *NPR02
      END                                ; *NPR02
      OPEN '','OPERATOR' TO F.OP ELSE CALL OPEN.ABORT("OPERATOR",PROG.NAME)      ; * GRB01

      READV BILL.LOCK.OVERRIDE FROM F.OP,USER,79 ELSE BILL.LOCK.OVERRIDE = 0        ; * NKH02  
      IF BILL.LOCK.OVERRIDE = 'Y' THEN BILL.LOCK.OVERRIDE = 1                       ; * NKH02

      OK=0

      REASON=''
      CLEAR.COMM='N'                     ; * DRF05
      READV OP.FLG FROM F.OP,USER,37 ELSE
         OP.FLG = "N"
      END
      IF OP.FLG = "Y" THEN
         ****     BEGIN CASE
         ****    CASE USER='DAVID'
         ****CASE USER='RWHITT'              ; * JMK03
         ****  CASE USER='DTAYLOR'             ; * Ticket 082298 DRF 10/10/08
         ****  CASE USER='DEBBIE'              ; *10/18/07 - Matt, per Sandy, ticket# 070916
         ****  CASE USER='BROSE'               ; * sYSAID #1666 ACCESS FOR BRIGETTE ROSE
         ****    CASE USER='JERVIN'              ; * Ticket 091260 DRF 10/16/09
         ****    CASE USER='DRABORN'
         ****      CASE USER='SCASWELL'
         ****       CASE USER='AHUGGS'
         ****        CASE USER='MMILLS'
         ****      CASE USER='MAWILLIAMS'          ; * Ticket 6946 - DRF - 09/06/13
         ****        CASE USER='CPEOPLES'            ; * DRF01
         ****        CASE USER='KMCQUISTON'          ; * DRF02
         ****       CASE USER='MROSE'               ; * JMK07
         ****        CASE USER='NTAYLOR'             ; * DRF04
         ****        CASE USER='TGREEN'              ; * DRF01
         ****        CASE USER='KBARNES'             ; * JMK08
         ****       CASE 1
      END ELSE
         TEMP='**  This is a restricted access application - Access Denied  **'
         CALL CENTER(TEMP,80)
         CRT @(0,12):TEMP
         CALL ELINE('')
         STOP
         ****     END CASE
      END
      READV USER.NAME FROM F.BCTRL,USER,13 ELSE USER.NAME='Unknown User'

100:  HELP='Enter the Client Number or [EX]it'
      CRT @(0,03):@(-3):
      CRT @(0,05):'Instructions for use BEFORE Continuing:'
      CRT @(0,06):'Step  1 Create a Spreadsheet of bills using Spec 1'
      CRT @(0,07):'Step  2 Open Excel THEN Open the Spreadsheet (its located in your U:\':USER:'\ Drive)'
      CRT @(0,08):'Step  3 On the Excel Text Import Wizard CLICK [Next] then [Next] again'
      CRT @(0,09):'Step  4 Scroll to the right and click (Highlight) the Pro # Column'
      CRT @(0,10):"Step  5 CLICK the 'Text' Button at the top right of the screen"
      CRT @(0,11):'Step  6 Select Finish'
      CRT @(0,12):'Step  7 Remove the bills from this spreadsheet that you do not want to ZERO'
      CRT @(0,13):'Step  8 When finished you have a list of the bills to ZERO'
      CRT @(0,14):"Step  9 CLICK File, CLICK Save As, 'Change Save as type:' to:"
      CRT @(0,15):'        Text (Tab Delimited)(*.txt)'
      CRT @(0,16):'Step 10 Name the file CLIENT#-zero.txt (Example: 99999-zero.txt)'
      CRT @(0,17):"        Ignore the 'Not Compatible' messages you receive and click OK, then YES"

      CALL GEN.IN(0,3,'Enter Client Number #####','',Q,0,20,'','',1,-5,3,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='' ! QI='EX' ! QI='X'
            GOTO EXIT.PROGRAM
         CASE NOT(NUM(QI))
            CALL ELINE('CLIENT MUST BE NUMERIC')
            GOTO 100
      END CASE
      CLIENT=Q'R%5'
      MATREAD CLIENT.REC FROM F.CLIENTS,CLIENT ELSE
         CALL ELINE("Invalid client number ":CLIENT)
         GO 100
      END
      CLIENT.NAME=CLIENT.REC(2)
      CRT @(20,3):CLIENT:" - ":CLIENT.NAME:@(-4):

      OPEN '','AR-BRIDGE' TO F.BRIDGE ELSE
         CALL OPEN.ABORT("AR-BRIDGE","CLEAR.AMOUNT.IN.BILL")
         STOP
      END
      READ DUMMY FROM F.BRIDGE,CLIENT THEN
         IF DUMMY<1>='' THEN

            CALL ELINE('Error! Cannot process as freight payment account is being processed.')
            STOP
         END
      END ELSE
         NULL
      END
      OPEN '','FB.BILLS.HIST,':CLIENT TO F.HIST ELSE
         CALL OPEN.ABORT("FB.BILLS.HIST,":CLIENT,PROG.NAME)
         STOP
      END
      OPEN '','FB.BILLS.CRX' TO F.CRX ELSE
         CALL OPEN.ABORT("FB.BILLS.CRX","CLEAR.AMOUNT.IN.BILL")
         STOP
      END
      OPEN '','FB.MODS' TO F.MODS ELSE
         CALL OPEN.ABORT("FB.MODS","CLEAR.AMOUNT.IN.BILL")
         STOP
      END
      OPEN '','FB.ADJUSTS' TO F.ADJUSTS ELSE
         CALL OPEN.ABORT("FB.ADJUSTS",PROG.NAME)
         STOP
      END
      OPEN '','FB.ADJUST.HIST' TO F.ADJUST.HIST ELSE
         CALL OPEN.ABORT('FB.ADJUST.HIST',"CLEAR.AMOUNT.IN.BILL")
         STOP
      END
      OPEN '','FB.OPEN.BILLS' TO F.OPEN ELSE
         CALL OPEN.ABORT("FB.OPEN","CLEAR.AMOUNT.IN.BILL")
         STOP
      END
      OPEN '','FB.OPEN.DATE.XREF,':CLIENT TO F.OPEN.DATE.XREF ELSE
         CALL OPEN.ABORT("FB.OPEN.DATE.XREF,":CLIENT,"CLEAR.AMOUNT.IN.BILL")
         STOP
      END
      OPEN '','FB.BILLS,':CLIENT TO F.BILLS ELSE
         CALL OPEN.ABORT("FB.BILLS,":CLIENT,PROG.NAME)
         STOP
      END
      OPEN '','EDI.BILLS.HIST,':CLIENT TO F.EDI.BILLS.HIST THEN        ; * JMK145
         EDI.FOUND=1                     ; * JMK01
      END ELSE                           ; * JMK145
         EDI.FOUND=0                     ; * JMK01
      END                                ; * JMK145
      IF CL.DIV.FLAG='Y' THEN            ; * JMK01
         OPEN '','DIVISION.CODES,':CLIENT TO F.DIV ELSE      ; * JMK01
            CALL OPEN.ABORT("FB.OPEN.DATE.XREF,":CLIENT,"CLEAR.AMOUNT.IN.BILL")  ; * JMK01
            STOP                         ; * JMK01
         END                             ; * JMK01
      END                                ; * JMK01
*
* OPEN FILE
*
      READ BILLDATA.REC FROM F.VOC,"BILLDATA" ELSE
         GOSUB CALL.NET.ADMIN
         CALL ELINE('UNABLE TO OPEN "VOC BILLDATA"')
         STOP
      END

      BILLDATA.REC<2>:='\':USER
      WRITE BILLDATA.REC ON F.VOC,"BILLDATA.":USER ELSE
         CALL ELINE('UNABLE TO WRITE VOC "BILLDATA.":USER')
         GOSUB CALL.NET.ADMIN
         STOP
      END
      OPEN '','BILLDATA.':USER TO F.BILLDATA ELSE
         CALL ELINE(USER:" is not a folder in U:\Billdata. Add the folder and try again")
         GOSUB CALL.NET.ADMIN
         STOP
      END

*
* READ RAW.DATA
*
      RAW.ID=CLIENT:"-ZERO.txt"
      READ RAW.DATA FROM F.BILLDATA,RAW.ID ELSE
         CALL ELINE('U:\':USER:'\':RAW.ID:' is not on file.  Must be present to zero bills')
         GOTO 100
      END
      RAW.DATA=CHANGE(RAW.DATA,CHAR(9),@VM)        ; * Replace Tabs with Values
*
* GET INFO
*
      NUM.LINES=DCOUNT(RAW.DATA,@AM)

*
* Verify selection criteria is correct.
*
ENTER.CLEAR.COMM:***     ; * DRF05

      CRT @(0,18):"Clear Commission: "   ; * DRF05
      HELP="X=Back, EX= Exit."           ; * DRF05
      IF CLEAR.COMM='' THEN              ; * DRF05
         CLEAR.COMM='N'                  ; * DRF05
      END                                ; * DRF05
      MASK=CLEAR.COMM'L#2'               ; * DRF05
      CALL GEN.IN(18,18,MASK,'',Q,0,2,'','',0,-2,18,1,QI,HELP,0,23)    ; * DRF05
      QI=OCONV(QI,'MDU')                 ; * DRF05
      IF QI='' AND CLEAR.COMM#'' THEN QI=CLEAR.COMM          ; * DRF05
      BEGIN CASE                         ; * DRF05
         CASE QI='X' OR QI='x'           ; * DRF05
            CRT @(0,18):@(-3):           ; * DRF05
            GOTO 100                     ; * DRF05
         CASE QI='EX' OR QI='ex' OR QI='Ex' OR QI='eX'       ; * DRF05
            STOP                         ; * DRF05
         CASE QI='' AND CLEAR.COMM=''    ; * DRF05
            CALL ELINE('Entry is required')        ; * DRF05
            GO ENTER.CLEAR.COMM          ; * DRF05
         CASE QI#'Y' AND QI#'N'          ; * DRF05
            CALL ELINE('Must be either [Y]es or [N]o')       ; * DRF05
            GO ENTER.CLEAR.COMM          ; * DRF05
      END CASE                           ; * DRF05
      IF QI#'' THEN                      ; * DRF05
         CLEAR.COMM=QI                   ; * DRF05
      END                                ; * DRF05
      CRT @(18,18):CLEAR.COMM'L#2'       ; * DRF05
ENTER.REASON:***


      CRT @(0,19):"Reason: "             ; * DRF05
      HELP="X=Back, EX= Exit."
      IF REASON='' THEN
         MASK='---------------------------------------------------------------------'
      END ELSE
         MASK=REASON'L#69'
      END

      CALL GEN.IN(10,19,MASK,'',Q,0,69,'','',0,-69,19,1,QI,HELP,0,23)  ; * DRF05
      BEGIN CASE
         CASE QI='X' OR QI='x'
            CRT @(0,18):@(-3):           ; * DRF05
            CRT @(0,19):@(-3):           ; * DRF05

            GOTO ENTER.CLEAR.COMM        ; * DRF05
         CASE QI='EX' OR QI='ex' OR QI='Ex' OR QI='eX'
            STOP
         CASE QI='' AND REASON=''
            CALL ELINE('Entry is required')
            GO ENTER.REASON
      END CASE
      IF QI#'' THEN
         REASON=QI
      END

      CRT @(10,19):REASON'L#69'          ; * DRF05
VERIFY.SELECTION:***
      CRT @(0,19):"By typing [I-UNDERSTAND] I agree to PERMANENTLY zeroing ":NUM.LINES-3:" Freight Bills"
      CRT @(0,20):"from the account ":CLIENT:"-":CLIENT.NAME
      HELP="X=Change. EX=Exit. [I-UNDERSTAND]=Continue."
      CALL GEN.IN(0,22,'Enter selection please. ------------','',Q,0,12,'','',0,-12,22,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            CRT @(0,19):@(-3):
            GOTO ENTER.REASON
         CASE QI='EX'
            STOP
         CASE QI='I-UNDERSTAND'
            NULL
         CASE 1
            CALL ELINE('Invalid entry. Must be [X], [EX], or [I-UNDERSTAND].')
            GOTO VERIFY.SELECTION
      END CASE
      CRT @(0,22)

      FOR X = 1 TO NUM.LINES
         IF X < 4 THEN GO SKIP.LINE.1
         LINE=RAW.DATA<1>
         IF TRIM(LINE)='' THEN GO SKIP.LINE.1
         CARRIER=LINE<1,1>'R%5'
         PRO=LINE<1,5>
         PRO.ID=CARRIER:"*":PRO:"*0"
         CONVERT " " TO "" IN PRO.ID
         READ DHIST FROM F.HIST,PRO.ID THEN
            IF DHIST<14>#'' THEN
               CALL ELINE('On line ':X:' PRO.ID ':PRO.ID:' has a check #')
               STOP
            END
            IF DHIST<292> = "Y" AND NOT(BILL.LOCK.OVERRIDE) THEN                                                ; * NKH01   NKH02
               CALL ELINE('On line ':X:' PRO.ID ':PRO.ID:' is locked for editing')  ; * NKH01   
               STOP                                                                 ; * NKH01
            END                                                                     ; * NKH01
            IF DHIST<39>#'O' THEN
               CALL ELINE('On line ':X:' PRO.ID ':PRO.ID:' is not OK')
               STOP
            END
            IF DHIST<37>='' THEN
               CALL ELINE('On line ':X:' PRO.ID ':PRO.ID:' has not been processed')
               STOP
            END
            IF DHIST<8>#ICONV(LINE<1,17>,'MR2') THEN
               CALL ELINE('On line ':X:' PRO.ID ':PRO.ID:' has a different amount than the spreadsheet')
               STOP
            END
         END ELSE
            CALL ELINE('On Line ':X:' PRO.ID ':PRO.ID:' is missing from FB.BILLS.HIST File!')
            STOP
         END
         READ DBILLS FROM F.BILLS,PRO.ID THEN
            CALL ELINE('On Line ':X:' PRO.ID ':PRO.ID:' is on file in FB.BILLS File!')
            STOP
         END
         OPEN.ID=CLIENT:"*":PRO.ID
         READ DUMMY FROM F.OPEN,OPEN.ID ELSE
            CALL ELINE('Open item ':OPEN.ID:' missing from FB.OPEN file')
            STOP
         END
SKIP.LINE.1:***
         DEL RAW.DATA<1>
      NEXT X
      RAW.ID=CLIENT:"-zero.txt"
      READ RAW.DATA FROM F.BILLDATA,RAW.ID ELSE
         CALL ELINE('U:\':USER:'\':RAW.ID:' is not on file.  Must be present to zero bills')
         GOTO 100
      END
      ATTACH.ID=CLIENT:'-ZERO.XLS'       ; * JMK04
      WRITE RAW.DATA ON F.BILLDATA,ATTACH.ID       ; * JMK04
      RAW.DATA=CHANGE(RAW.DATA,CHAR(9),@VM)        ; * Replace Tabs with Values
*
* WRITE INFO
*
      NUM.LINES=DCOUNT(RAW.DATA,@AM)
      TOTAL.AMT=0
      LOST.LOG.COMM=0                    ; * JMK04
      LOST.LOG.CNT=0                     ; * JMK04
      LOST.OVR.COMM=0                    ; * JMK04
      LOST.OVR.CNT=0                     ; * JMK04

      ALL.IDS=''
      FOR X = 1 TO NUM.LINES
         IF X < 4 THEN GO SKIP.LINE
         LINE=RAW.DATA<1>
         IF TRIM(LINE)='' THEN GO SKIP.LINE
         CARRIER=LINE<1,1>'R%5'
         PRO=LINE<1,5>
         PRO.ID=CARRIER:"*":PRO:"*0"
         CONVERT " " TO "" IN PRO.ID
         READ DHIST FROM F.HIST,PRO.ID THEN
            IF DHIST<14>#'' THEN
               CALL ELINE('On line ':X:' PRO.ID ':PRO.ID:' has a check # Skipping')
               GOTO SKIP.LINE
            END
            IF DHIST<292> = "Y" AND NOT(BILL.LOCK.OVERRIDE) THEN                                                         ; * NKH01   NKH02
               CALL ELINE('On line ':X:' PRO.ID ':PRO.ID:' is locked for editing skipping')  ; * NKH01   
               GOTO SKIP.LINE                                                                ; * NKH01
            END                                                                              ; * NKH01            
            IF DHIST<39>#'O' THEN
               CALL ELINE('On line ':X:' PRO.ID ':PRO.ID:' is not OK Skipping')
               GOTO SKIP.LINE
            END
            IF DHIST<37>='' THEN
               CALL ELINE('On line ':X:' PRO.ID ':PRO.ID:' has not been processed Skipping')
               GOTO SKIP.LINE
            END
            IF DHIST<8>#ICONV(LINE<1,17>,'MR2') THEN
               CALL ELINE('On line ':X:' PRO.ID ':PRO.ID:' has a different amount than the ss Skipping')
               GOTO SKIP.LINE
            END
         END ELSE
            CALL ELINE('On Line ':X:' PRO.ID ':PRO.ID:' is missing from FB.BILLS.HIST Skipping')
            GOTO SKIP.LINE
         END
         READ DBILLS FROM F.BILLS,PRO.ID THEN
            CALL ELINE('On Line ':X:' PRO.ID ':PRO.ID:' is on file in FB.BILLS Skipping')
            GOTO SKIP.LINE
         END
         OPEN.ID=CLIENT:"*":PRO.ID
         READ DUMMY FROM F.OPEN,OPEN.ID ELSE
            CALL ELINE('Open item ':OPEN.ID:' missing from FB.OPEN file Skipping')
            GOTO SKIP.LINE
         END
         PRO.REC=DHIST
         OLD.PRO.REC=PRO.REC
         TOTAL.AMT=TOTAL.AMT+PRO.REC<8>
         IF OLD.PRO.REC<43>+0#0 THEN     ; * JMK04
            LOST.OVR.COMM+=OLD.PRO.REC<43>         ; * JMK04
            LOST.OVR.CNT+=1              ; * JMK04
         END                             ; * JMK04
         IF OLD.PRO.REC<44>+0#0 THEN     ; * JMK04
            LOST.LOG.COMM+=OLD.PRO.REC<44>         ; * JMK04
            LOST.LOG.CNT+=1              ; * JMK04
         END                             ; * JMK04
         ALL.IDS<1,-1>=PRO.ID
         ORIG.OVERCHARGE=0-PRO.REC<11>
         IF CLEAR.COMM='Y' THEN          ; * DRF05
            PRO.REC<10>=0                ; * DRF05
            PRO.REC<11>=0                ; * DRF05
            PRO.REC<12>=0                ; * DRF05
            PRO.REC<42>=0                ; * DRF05
            PRO.REC<43>=0                ; * DRF05
            PRO.REC<44>=0                ; * DRF05
            PRO.REC<32>=0
         END                             ; * DRF05
         PRO.REC<7>=1+ (0 - PRO.REC<10> - PRO.REC<11> - PRO.REC<12>)
         PRO.REC<8>=0
         PRO.REC<11>=PRO.REC<11>-1
         IF PRO.REC<12>+0#'0' THEN
            PRO.REC<29>='OC'
         END ELSE
            PRO.REC<29>='O'
         END
         IF PRO.REC<10>+0#'0' THEN
            PRO.REC<29>='D':PRO.REC<29>
         END
         PRO.REC<33>=0
         IF PRO.REC<41,2>='' THEN
            PRO.REC<41,2>=REASON
         END ELSE
            PRO.REC<41,2>=PRO.REC<41,2>:' for ':ORIG.OVERCHARGE'R26':', ':REASON
         END

         PRO.REC<22>=0                   ; * NPR05 - Added as per JMK   - Good carrier amounts
         PRO.REC<23>=""                  ; * NPR05 - Added as per JMK

         PRO.REC<63>=0                   ; * NPR04 - Misroute Amt set to zero
         PRO.REC<69>=""                  ; * NPR05 - Added as per JMK

         PRO.REC<84,-1>=USER             ; * JMK06
         PRO.REC<85,-1>=TIME()           ; * JMK06
         PRO.REC<86,-1>=DATE()           ; * JMK06

         PRO.REC<143>=0                  ; * NPR04 - LCC Amt set to zero
         PRO.REC<145>=""                 ; * NPR05 - Added as per JMK
         PRO.REC<146>=""                 ; * NPR05 - Added as per JMK
         PRO.REC<147>=""                 ; * NPR05 - Added as per JMK

         NUM.OF.CODES=DCOUNT(PRO.REC<151>,@VM)
         FOR XX = 1 TO NUM.OF.CODES
            PRO.REC<152,XX>=0
         NEXT XX
         NUM.OF.CODES=DCOUNT(PRO.REC<153>,@VM)
         FOR XX = 1 TO NUM.OF.CODES
            PRO.REC<157,XX>=0
         NEXT XX
         NUM.OF.CODES=DCOUNT(PRO.REC<159>,@VM)
         FOR XX = 1 TO NUM.OF.CODES
            PRO.REC<163,XX>=0
         NEXT XX
         PRO.REC<213>='Original Amount of $':OLD.PRO.REC<8>'R26,':', changed on ':OCONV(DATE(),'D2/')
         PRO.REC<213,2>='by ':USER:' in Accounting'
         WRITE PRO.REC ON F.HIST,PRO.ID
         READ CLIENT.ITM FROM F.CLIENTS,CLIENT ELSE CLIENT.ITM=''      ; * JMK01
         IF EDI.FOUND THEN               ; * JMK01
            READ EDI.HIST.REC FROM F.EDI.BILLS.HIST,PRO.ID ELSE        ; * JMK01
               EDI.HIST.REC=''           ; * JMK01
            END                          ; * JMK01
         END ELSE                        ; * JMK01
            EDI.HIST.REC=''              ; * JMK01
         END                             ; * JMK01
         IF CL.DIV.FLAG='Y' THEN         ; * JMK01
            READ DIV.ITM FROM F.DIV,PRO.REC<9> ELSE DIV.ITM=''         ; * JMK01
         END ELSE                        ; * JMK01
            DIV.ITM=''                   ; * JMK01
         END                             ; * JMK01
         OPEN '','VEND.CUST,':CLIENT TO F.VC THEN  ; * JMK01
            READ VC.ITM FROM F.VC,PRO.REC<17> ELSE           ; * JMK01
               VC.ITM=''                 ; * JMK01
            END                          ; * JMK01
         END ELSE                        ; * JMK01
            VC.ITM=''                    ; * JMK01
         END                             ; * JMK01
         SQLVIN=''                       ; * JMK01
         SQLVIN<1>=USER                  ; * JMK01
         SQLVIN<2>=CLIENT                ; * JMK01
         SQLVIN<3>=PRO.ID                ; * JMK01
         SQLVOUT=''                      ; * JMK01
         CALL UPD.SQL.FBHIST.SUB(SQLVIN,SQLVOUT,CLIENT.ITM,DIV.ITM,VC.ITM,PRO.REC,EDI.HIST.REC)      ; * JMK01
         REC = ''
         REC<1> = CLIENT
         REC<2> = PRO.REC<1>
         REC<7> = PRO.REC<7>
         REC<8> = PRO.REC<8>
         REC<10> = PRO.REC<10>
         REC<11> = PRO.REC<11>
         REC<12> = PRO.REC<12>
         REC<30> = PRO.REC<30>
         REC<37> = PRO.REC<37>
         REC<39> = PRO.REC<39>
         REC<41> = PRO.REC<41>
         REC<53> = PRO.REC<53>
         REC<54> = PRO.REC<54>
         REC<55> = PRO.REC<55>
         REC<63> = PRO.REC<63>
         IF CLIENT[1,2]='99' ELSE
            WRITE REC ON F.CRX,PRO.ID
         END
         ADJ.REC = ''
         ADJ.REC<1> = DATE()
         ADJ.REC<2> = PRO.REC<8>-OLD.PRO.REC<8>
         ADJ.REC<3> = FIELD(PRO.ID,'*',1)
         ADJ.REC<4> = CLIENT
         ADJ.REC<5> = FIELD(PRO.ID,'*',2)
         ADJ.DONE = 0
         MOD.DONE = 0
         SEQ = 1
         LOOP
            ADJ.ID = DATE():'*':CLIENT:'*':SEQ
            READ DUMMY FROM F.MODS,ADJ.ID ELSE MOD.DONE = 1
         UNTIL MOD.DONE DO
            SEQ = SEQ+1
         REPEAT
         WRITE ADJ.REC ON F.MODS,ADJ.ID
         POST.YTD='A'
         T.DATE=DATE()
         T.TIME=TIME()
         ADJUST.HIST.ID=CLIENT:'*':PRO.ID:'*':T.DATE:'*':T.TIME:'*OLD'
         WRITE OLD.PRO.REC ON F.ADJUST.HIST,ADJUST.HIST.ID
         ADJUST.HIST.ID=CLIENT:'*':PRO.ID:'*':T.DATE:'*':T.TIME:'*NEW'
         WRITE PRO.REC ON F.ADJUST.HIST,ADJUST.HIST.ID
         ADJUST.VIN=POST.YTD
         ADJUST.VIN<2>=PRO.ID
         ADJUST.VIN<3>=CLIENT
         CALL FB.ADJUST(ADJUST.VIN,ADJUST.VOUT,MAT CLIENT.REC,OLD.PRO.REC,PRO.REC)
         READ D.OPEN.XREF FROM F.OPEN.DATE.XREF,PRO.REC<37> THEN
            LOCATE OPEN.ID IN D.OPEN.XREF SETTING XREF.POS THEN
               DEL D.OPEN.XREF<XREF.POS>
               IF D.OPEN.XREF='' THEN
                  DELETE F.OPEN.DATE.XREF,PRO.REC<37>
               END ELSE
                  WRITE D.OPEN.XREF ON F.OPEN.DATE.XREF,PRO.REC<37>
               END
            END
         END
         DELETE F.OPEN,OPEN.ID
         CRT PRO.ID:' zeroed'
SKIP.LINE:*
         DEL RAW.DATA<1>
      NEXT X
      ZERO.REC=CLIENT
      ZERO.REC<2>=TOTAL.AMT
      ZERO.REC<3>=ALL.IDS
      ZERO.ID=DATE():'*':TIME():'*':USER
      WRITE ZERO.REC ON F.ZERO.LOG,ZERO.ID

      BILL.CNT = DCOUNT(ZERO.REC<3>,@VM)

      SERV.SLSMAN=CLIENT.REC(115)        ; * NPR02
      READ SERV.SLSMAN.REC FROM F.AR.SLSMAN,SERV.SLSMAN ELSE SERV.SLSMAN.REC = ""          ; * NPR02
      SERV.SLSMAN.EMAIL=SERV.SLSMAN.REC<8>         ; * NPR02
      ACCT.MGR = CLIENT.REC(264)         ; * NPR02  ; * RLM01
      READV ACCT.MGR.EMAIL FROM F.AR.SLSMAN,ACCT.MGR,8 ELSE ACCT.MGR.EMAIL = ""
      EMAIL.OUT=''
      EMAIL.OUT<1>='AR@AFS.net'
      *****     EMAIL.OUT<2,-1>='BJeppson@afs.net'           ; * GRB01
      EMAIL.OUT<2,-1>='SSelman@afs.net'  ; * JMK04
      ****     EMAIL.OUT<2,-1>='SWinstead@afs.net'          ; * GRB01
      IF CLIENT.REC(92) = '00002' THEN   ; * NPR02
         EMAIL.OUT<2,-1> = 'smatthews@afs.net'     ; * NPR02
      END                                ; * NPR02
      IF SERV.SLSMAN.EMAIL NE "" THEN    ; * NPR02
         EMAIL.OUT<2,-1> = SERV.SLSMAN.EMAIL       ; * NPR02
      END                                ; * NPR02
      IF ACCT.MGR.EMAIL NE "" THEN       ; * NPR02
         EMAIL.OUT<2,-1> = ACCT.MGR.EMAIL          ; * NPR02
      END                                ; * NPR02
      EMAIL.OUT<2,-1> = 'MMcKay@afs.net'           ; * NPR99
      EMAIL.OUT<4>='Reports@afs.net'     ; * From Email address
      EMAIL.OUT<5>='Zero Bill Program Processing Completed for ':CLIENT:'-':CLIENT.NAME
      EMAIL.OUT<6,-1>=USER:' - ':USER.NAME:' zeroed ': BILL.CNT :' bills for client ':CLIENT:' ':CLIENT.NAME   ; * NPR99
      EMAIL.OUT<6,-1>='For the total amount of $':TOTAL.AMT'R26,':' an adjustment will need to be made in the AR for the carrier charges'
      EMAIL.OUT<6,-1>=' '                ; * NPR01
      EMAIL.OUT<6,-1> = "Reason for zeroing is - ":REASON
      EMAIL.OUT<6,-1>=' '                ; * NPR01
      EMAIL.OUT<6,-1>='POSSIBLE Lost Logistics Commissions  :':LOST.LOG.COMM'R26$,#12':' (':LOST.LOG.CNT'R#5':' Bills)'  ; * JMK04
      EMAIL.OUT<6,-1>='POSSIBLE Lost Overcharge Commissions :':LOST.OVR.COMM'R26$,#12':' (':LOST.OVR.CNT'R#5':' Bills)'  ; * JMK04
      EMAIL.OUT<6,-1>='POSSIBLE Total Lost Commissions ----->':(LOST.LOG.COMM+LOST.OVR.COMM)'R26$,#12' :' *'   ; * JMK04
      EMAIL.OUT<6,-1>=' '                ; * JMK04

      EMAIL.OUT<6,-1>= "NOTE:  Zeroing freight bills removes those bills visibility from our systems, including AFSi."   ; *NPR02
      EMAIL.OUT<6,-1>= "It is NOT recommended unless a bill was processed and it didn't belong to the client it was processed under."        ; *NPR02
      EMAIL.OUT<6,-1>= "Zeroing bills will result in inaccurate freight history."          ; *NPR02
      EMAIL.OUT<6,-1>=' '

      EMAIL.OUT<6,-1>= "*At this time we don't know if the client will deduct the commissions on these bills or not. "   ; *NPR03
      EMAIL.OUT<6,-1>= "This is simply an indication of how much commission we might lose if the client chooses"         ; *NPR03
      EMAIL.OUT<6,-1>= "to deduct the commission(s). "       ; *NPR03
      EMAIL.OUT<6,-1>=' '
      EMAIL.OUT<6,-1>='This email was generated by program FB.5.16'
      EMAIL.OUT<11>='E:\Ardent\public\BillData\':USER:'\':ATTACH.ID    ; * JMK04
      VIN=EMAIL.OUT
      VOUT=''
      CALL SENDMAIL(VIN,VOUT)
      IF VOUT<1>='ERROR' THEN
         CALL ELINE('Email failure occurred for the  zero bills program process completed')
      END
      CRT
      CRT 'Press [ENTER] to Continue':
      INPUT NUL
      GO EXIT.PROGRAM
CALL.NET.ADMIN:***
      CALL ELINE("CALL NETWORK ADMINISTRATOR!")
      CALL ELINE("CALL NETWORK ADMINISTRATOR!!!!!")
      RETURN
*
EXIT.PROGRAM:*
*
      STOP
