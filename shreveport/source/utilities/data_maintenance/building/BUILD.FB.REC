      SUBROUTINE BUILD.FB.REC(VIN,VOUT)
*******************************************************************************
*
* 020215 - JMK01 - SysAid#14923 - Airgas Safety coding change
*******************************************************************************
      CLIENT.ID=VIN<1>
      CARRIER.ID=VIN<2>
      LOAD.NO=VIN<3>
      MANIFEST.DATE=VIN<4>
      IN.OUT=VIN<5>
      CALC.EXP.CODE=VIN<6>
      ORIG.ZIP=VIN<7>
      DEST.ZIP=VIN<8>
      WEIGHT=VIN<9>
      CARRIER.CHG=VIN<10>
      ACTUAL.CHG=VIN<11>
      DIVISION=VIN<12>
      DISCOUNT.VAR=VIN<13>
      OVERCHARGE.VAR=VIN<14>
      CONSULTING.VAR=VIN<15>
      BOL=VIN<16>
      CUST=VIN<17>
      MILEAGE=VIN<18>
      TRANS.MODE=VIN<19>
      ORIG.ST=VIN<20>
      DEST.ST=VIN<21>
      ORIG.CITY=VIN<22>
      DEST.CITY=VIN<23>
      MULTI.EXP.CODE=VIN<24>
      MULTI.AMT=VIN<25>
      DUE.DATE=VIN<26>
      ENTERED.BY=VIN<27>
      VERIFIED.BY=VIN<28>
      EDI.ID=VIN<29>
      INV.NUM=VIN<30>
      ORIG.COUNTRY=VIN<31>
      DEST.COUNTRY=VIN<32>
      TOTAL.HANDLING.UNITS=VIN<33>
      USER=VIN<34>
      VC.DESC=VIN<35>
      VC.CODE=VIN<36>
      VC.TYPE=VIN<37>
      DIV.CROSS.REF=VIN<38>
      DIV.REGION=VIN<39>
      DIV.DESC=VIN<40>
      CARRIER.NAME=VIN<41>
      PRO.ID=CARRIER.ID:'*':LOAD.NO:'*0'
      OPEN '','FB.BILLS.CRX' TO F.CRX ELSE
         EXECUTE 'CREATE-FILE FB.BILLS.CRX 1 103' CAPTURING OUTPUT
         OPEN '','FB.BILLS.CRX' TO F.CRX ELSE
            CALL OPEN.ABORT("FB.BILLS.CRX",PROG.NAME)
         END
      END
      OPEN '','FED.INV.XREF' TO F.INV.XREF ELSE
         CALL OPEN.ABORT("FED.INV.XREF",PROG.NAME)
      END
      OPEN '','FB.BILLS,':CLIENT.ID TO F.BILLS ELSE
         CALL OPEN.ABORT("ERROR - Cannot open FB.BILLS for client ":CLIENT.ID)
      END
      OPEN '','FB.BILLS.HIST,':CLIENT.ID TO F.HIST ELSE
         CALL OPEN.ABORT("Cannot open FB.BILLS.HIST for client ":CLIENT.ID)
      END
      OPEN '','DIVISION.CODES,':CLIENT.ID TO F.DIV ELSE      ; * JMK01
         CALL OPEN.ABORT("Cannot open DIVISION.CODES for client ":CLIENT.ID)     ; * JMK01
      END                                ; * JMK01
      OPEN '','VEND.CUST,':CLIENT.ID TO F.VC ELSE  ; * JMK02
         CALL OPEN.ABORT("Cannot open VEND.CUST for client ":CLIENT.ID)          ; * JMK01
      END                                ; * JMK01
      IF CALC.EXP.CODE THEN
         OPEN '','EXPENSE.CODES,':CLIENT.ID TO F.EXPENSE ELSE
            CALL OPEN.ABORT("Cannot open EXPENSE.CODES for client ":CLIENT.ID)
         END
      END
WRITE.PRO.INFO:***
      PRO.REC = ''
      PRO.REC<1> = MANIFEST.DATE
      PRO.REC<2> = IN.OUT
      PRO.REC<3>=ORIG.ZIP
      PRO.REC<4>=DEST.ZIP
*DF      PRO.REC<5> = EXP.CODE
      PRO.REC<6> = WEIGHT
      PRO.REC<7> = CARRIER.CHG
      PRO.REC<8> = ACTUAL.CHG
      PRO.REC<9> = DIVISION
      PRO.REC<10> = DISCOUNT.VAR
      PRO.REC<11> = OVERCHARGE.VAR
      PRO.REC<12> = CONSULTING.VAR
      PRO.REC<16> = BOL
      PRO.REC<17> = CUST
      PRO.REC<19> = MILEAGE
      PRO.REC<20> = CARRIER.ID

      PRO.REC<25>=ORIG.ST
      PRO.REC<26>=DEST.ST
      PRO.REC<27>=ORIG.CITY
      PRO.REC<28>=DEST.CITY
      PRO.REC<33>=ACTUAL.CHG
      PRO.REC<38> = DUE.DATE

      NEW.BILL.DATE=DATE()


      IF PRO.REC<30>='' THEN PRO.REC<30>=NEW.BILL.DATE
*DF      PRO.REC<40> = BANK.ID
      PRO.REC<68> = '1'                  ; * Bill status
      PRO.REC<88> = EDI.ID
      PRO.REC<94>=INV.NUM
      PRO.REC<39>='O'

      PRO.REC<53>=ENTERED.BY
      PRO.REC<54>=VERIFIED.BY
      PRO.REC<21>=TRANS.MODE
      PRO.REC<84>=USER
      PRO.REC<85>=TIME()
      PRO.REC<86>=DATE()
      PRO.REC<197>='N'
      PRO.REC<222>=ORIG.COUNTRY
      PRO.REC<223>=DEST.COUNTRY
      PRO.REC<235>=TOTAL.HANDLING.UNITS
      IF CALC.EXP.CODE THEN
         EXPENSE.VIN=''
         EXPENSE.VIN<1>=VC.DESC
         EXPENSE.VIN<2>=ACTUAL.CHG+0
         EXPENSE.VIN<3>=0
         EXPENSE.VIN<5>=LOAD.NO
         IF CLIENT.ID='01457' THEN       ; * JMK01
            READ VC.REC FROM F.VC,CUST ELSE VC.REC=''        ; * JMK01
            READ DIV.REC FROM F.DIV,DIVISION ELSE DIV.REC=''           ; * JMK01
            BEGIN CASE                   ; * JMK01
               CASE IN.OUT='I'           ; * JMK01
                  OADDR=VC.REC<3,1>      ; * JMK01
                  DADDR=DIV.REC<14,1>    ; * JMK01
               CASE IN.OUT='O'           ; * JMK01
                  OADDR=DIV.REC<14,1>    ; * JMK01
                  DADDR=VC.REC<3,1>      ; * JMK01
               CASE IN.OUT='T'           ; * JMK01
                  OADDR=VC.REC<3,1>      ; * JMK01
                  DADDR=DIV.REC<14,1>    ; * JMK01
            END CASE                     ; * JMK01
            EXPENSE.VIN<15>=OCONV(DADDR,'MCU')     ; * JMK01
            EXPENSE.VIN<16>=OCONV(OADDR,'MCU')     ; * JMK01
         END                             ; * JMK01
         CALL NEW.GET.EXPENSE(EXPENSE.VIN,CLIENT.ID,CARRIER.ID,PRO.REC,F.EXPENSE,EXPENSE.VOUT)

         IF EXPENSE.VOUT<1>#'' THEN
            EXP.CODE=EXPENSE.VOUT<1>
         END
         IF EXPENSE.VOUT<1>='' THEN
            VIN = CLIENT.ID
*DF            IF CL.DIV.FLAG = 'Y' AND DIVISION #'' THEN
            IF DIVISION #'' THEN
               VIN<2> = DIVISION
               VIN<3> = DIV.CROSS.REF
               VIN<21>=DIV.DESC
               VIN<31> = DIV.REGION
            END
            VIN<4> = CARRIER.ID
            VIN<5> = CARRIER.NAME
            VIN<6> = TRANS.MODE          ; * Transportation Mode
            VIN<7> = IN.OUT
            VIN<8> = VC.CODE
            VIN<9> = VC.DESC
            VIN<10> = ORIG.ZIP
            VIN<11> = ORIG.ST
            VIN<12> = DEST.ZIP
            VIN<13> = DEST.ST
            VIN<14> = 'DEFAULT'
*DF            VIN<15> = EXP.CODE
            VIN<15> = ''
*DF             VIN<16> = BACK.FLAG
            VIN<16> = ''
            VIN<17> = ''                 ; * USED FOR EDI
            VIN<19> = MANIFEST.DATE
            VIN<20>=INV.NUM
            VIN<22>=CUST
            VIN<23>=LOAD.NO
            VIN<18>=BOL                  ; * Only user for Daws (01084) right now Alcon division 5 and (10225) R & M and (01163) MD Building and (01196) JM CLipper for division 1 and (01202) Lowen and (01225) May & Company and (01240) Isco Inc and (01000) Qualico and (00984) Orschelin and (01361) Fairbanks Morse and (01320) Precision Kidd and (01305) Future Metals (01285) Solideal Tire (01472) Rexel-Rocky Mountain Division (01491) Form + Surface (01488) Green Light or (01525) REMCO (01554) Power and Pumps (01567) Betts Springs
            VIN<30>=VC.TYPE
            VIN<32>=DEST.CITY
            VIN<33>=ORIG.CITY
            CALL GET.EXPENSE(VIN,VOUT)
            EXP.CODE = VOUT<1>
         END

         IF EXP.CODE#'' THEN
            PRO.REC<5>=EXP.CODE
         END ELSE
            CALL ELINE('No expense code was calculated using 99999')
            PRO.REC<5>='99999'
         END
         PRO.REC<31>=PRO.REC<5>
      END

      READ DUMMY FROM F.HIST,PRO.ID THEN
         CALL ELINE(PRO.ID:' already exists in the history - update aborted')
         STOP
      END
      READ DUMMY FROM F.CRX,PRO.ID THEN
         CALL ELINE(PRO.ID:' already exists in the cross reference - update aborted')
         STOP
      END
      WRITE PRO.REC ON F.HIST,PRO.ID
      WRITE PRO.REC TO F.BILLS, PRO.ID

*
* Update Fedex invoice file
*
      IF PRO.REC<94>#'' THEN
         READ DINV.XREF FROM F.INV.XREF,PRO.REC<94> ELSE DINV.XREF=''
         LOCATE PRO.ID IN DINV.XREF BY 'AR' SETTING INV.POS ELSE
            INS PRO.ID BEFORE DINV.XREF<INV.POS>
            WRITE DINV.XREF ON F.INV.XREF,PRO.REC<94>
         END
      END

*
* Update freight bill cross reference (skeletal) record
*
      REC = ''
      REC<1> = CLIENT.ID
      REC<2> = MANIFEST.DATE
      REC<7> = PRO.REC<7>
      REC<8> = PRO.REC<8>
      REC<10> = PRO.REC<10>
      REC<11> = PRO.REC<11>
      REC<12> = PRO.REC<12>
      REC<30> = PRO.REC<30>
      REC<37> = PRO.REC<37>
      REC<39> = PRO.REC<39>
      REC<41> = PRO.REC<41>
      REC<53> = PRO.REC<53>
      REC<54> = PRO.REC<54>
      REC<55> = PRO.REC<55>
      REC<63> = PRO.REC<63>
      IF CLIENT.ID[1,2]='99' ELSE
         WRITE REC ON F.CRX,PRO.ID
      END
