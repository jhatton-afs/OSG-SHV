****************************************
* Program : FB.OVERRIDE.1
* Author  : Jim T. Row
* Date written : 10/12/99
* Library      : FBBP
* COPYRIGHT (c) : AFS, LLC 2016, All Rights Reserved.
*
*
* Override Setup
* Last updated by afs (AFSLOGISTICS\gbino) at 08:45:02 on 01/31/2018.
*
* Start modification history
* Mod nn  mm/dd/yy, init, req #, description
* 111111 - JMK01 - Adjust video attributes for Accuterm and future use
* End modification history
*
*******************************************
      $INCLUDE PROG.ADMIN INC_OPTIONS
      $INCLUDE FILE.DEFS INC_CLIENTS
      $INCLUDE FILE.DEFS INC_ADDS60.CODES     ;* These require specific PROCOMM settings!

      TERM.TYPE=SYSTEM(7)                ; * JMK01
      BEGIN CASE                         ; * JMK01
         CASE TERM.TYPE='REGENT60'       ; * JMK01
            REV.RED.ON = TERM.ESC.SEQ:CHAR(TERM.REV+TERM.BLINK)
            REV.GRN.ON = TERM.ESC.SEQ:CHAR(TERM.REV)
            TERM.NORM = TERM.ESC.SEQ:CHAR(TERM.NORMAL)
         CASE 1                          ; * JMK01
            REV.RED.ON = @(-13):@(-5)    ; * JMK01
            REV.GRN.ON = @(-13)          ; * JMK01
            TERM.NORM = @(-14):@(-6)     ; * JMK01
      END CASE                           ; * JMK01

      EQU REV.ON           TO REV.GRN.ON   ;* Reverse Text ON
      EQU REV.OFF          TO TERM.NORM  ;* Reverse Text OFF

      EQU TRUE                TO 1
      EQU FALSE               TO 0

      EQU ENABLE.STR          TO "ENABLE"
      EQU DISABLE.STR         TO "DISABLE"

      EQU PAGE.SIZE           TO 13
      EQU START.Y             TO 7

      EQU WRITE.DATA          TO TRUE            ;* SET TO FALSE FOR TESTING...

*
* Initialize GENERAL APPLICATION variables
*
      PROMPT''
      PROG.NAME='FB.OVERRIDE.1'
      PROG.DESC='Carrier Override Setup'
      PACK.NAME='USER :':USER.NAME            ;* Might want to change this.
      CO.NAME='AFS Logistics, LLC'
      UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.OVERRIDE.1' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
CALL GET.USER.NEW(USER.NAME,CH.NUM)
 UPL.VIN<3> = USER.NAME
 UPL.VIN<4> = CH.NUM
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
      DEBUG.MSG = ''

      WIDTH = 80
      CTR = INT(WIDTH/2)
      REVON = REV.ON
      REVOFF = REV.OFF
      EXIT.IT = FALSE
      PAGE.NUM = 1
      ADD.MODE = FALSE
      LAST.EDIT.MASK = "1"
      EDIT.NUMBER = 1

      CARRIER.NAME='' ; CARRIER.ID = '' ; CARRIER.CITY='' ; CARRIER.STATE=''
      CLIENT.NAME='' ; CLIENT.ID = '' ; CLIENT.CITY='' ; CLIENT.STATE=''

      METHODS=''
      METHODS<1>='GROSS'
      METHODS<2>='NET'
      NUM.METHODS = DCOUNT(METHODS,@AM)

      STATS=''
      STATS<1>=ENABLE.STR
      STATS<2>=DISABLE.STR
      NUM.STATS = 2

      EDIT.HELP.LINE = 1
      EDIT.HELP=''
      EDIT.HELP<-1> = "EDIT: [A]dd [D]el [E]dit [NEW] [P]rint [B]ack [F]wd [X]-Back [T]op [L]ast [>]"
      EDIT.HELP<-1> = "EDIT: [REVON]-Enable Highlight [REVOFF]-Disable Highligh [EX]it           [>]"
      NUM.EDIT.HLP.LINES = DCOUNT(EDIT.HELP,@AM)

      BEGIN CASE
         CASE USER.NAME='DAVID'
         CASE USER.NAME='JAMES'
         CASE USER.NAME='WPARDUE'
         CASE USER.NAME='GBINO'   
         CASE 1
            CALL ELINE("NOT AUTHORIZED into this program!")
            STOP
      END CASE

*
* Open Files
*
      OPEN '','FB.OVERRIDE' TO F.OVERRIDE ELSE
         CALL OPEN.ABORT('FB.OVERRIDE',PROG.NAME)
      END
      OPEN '','CARRIERS' TO F.CARRIERS ELSE
         CALL OPEN.ABORT("CARRIERS",PROG.NAME)
      END
      OPEN 'DICT','CARRIERS' TO F.DICT ELSE
         CALL OPEN.ABORT("DICT CARRIERS",PROG.NAME)
      END
      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         CALL OPEN.ABORT("CLIENTS",PROG.NAME)
      END
      OPEN 'DICT','CLIENTS' TO F.DICT.CLIENTS ELSE
         CALL OPEN.ABORT("DICT CLIENTS",PROG.NAME)
      END
************************************************
CHOOSE.CARRIER:
************************************************
      GOSUB GET.CLIENT.CARRIER
      IF EXIT.IT THEN GOTO TRASH.PROGRAM
      GOSUB DSP.EDIT.SCN

MAIN.START:

      PAGE = 1                                ;* Current Page Number

UD.1:

      GOSUB UPDATE.DISPLAY

UD.2:
      MASK = '########'
      HELP = EDIT.HELP<EDIT.HELP.LINE>
      CRT @(0,22):'Option :':@(-4):
      CALL GEN.IN(8,22,MASK,'',Q,0,15,'','',2,8,22,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'
*
* Exit Program
*
            EXIT.IT = TRUE

         CASE QI='X' OR QI=''
*
* Go back and change carrier
*
            GOSUB SAVE.IT.ALL
            GOTO CHOOSE.CARRIER

         CASE QI='>' OR QI='.'
*
* Next Help Line
*
            IF EDIT.HELP.LINE >=NUM.EDIT.HLP.LINES THEN
               EDIT.HELP.LINE =1
            END ELSE
               EDIT.HELP.LINE+=1
            END
            GOTO UD.2

         CASE QI='<' OR QI=','
*
* Prior Help Line
*
            IF EDIT.HELP.LINE =1 THEN
               EDIT.HELP.LINE =NUM.EDIT.HLP.LINES
            END ELSE
               EDIT.HELP.LINE-=1
            END
            GOTO UD.2

         CASE QI='T' OR QI='TOP'          ;* Top Page
*
* Top Page
*
            IF NUM.LINES > 0 THEN
               PAGE = 1
            END ELSE
               CALL ELINE('*** Top ***')
               GOTO UD.2
            END

         CASE QI='L' OR QI='LAST'          ;* Last Page
*
* Last Page
*
            IF NUM.LINES > 0 THEN
               PAGE=INT(NUM.LINES/PAGE.SIZE)
               IF REM(NUM.LINES,PAGE.SIZE) THEN PAGE+=1
            END ELSE
               CALL ELINE('*** Bottom ***')
               GOTO UD.2
            END

         CASE QI='B' OR QI='-'
*
* Go Back 1 Page
*
            IF PAGE > 1 THEN
               PAGE-=1
            END ELSE
               CALL ELINE('*** Top ***')
               GOTO UD.2
            END

         CASE QI='F' OR QI='+'
*
* Go forward 1 Page
*
            IF NUM.LINES>PAGE*PAGE.SIZE THEN
               PAGE+=1
            END ELSE
               CALL ELINE('*** Bottom ***')
               GOTO UD.2
            END
         CASE QI='?' OR QI='HELP' OR QI='H'
*
* Help - List all Commands
*
            CALL FB.DRAW.BOX(0,4,80,17,' ',' ')
            CRT @(19, 6):'HELP SCREEN - List of Commands'
            CRT @( 3, 8):'B  - Go Back 1 Page'
            CRT @( 3, 9):'-  - Go Back 1 Page'
            CRT @( 3,10):'T  - Goto Top of Table (TOP)'
            CRT @( 3,11):'A  - Add '
            CRT @( 3,12):'E  - Enter '
            CRT @( 3,13):'>  - Scroll to next Help Line'
            CRT @( 3,14):'X  - Exit current Table {Saves}'
            CRT @(40, 8):'F  - Go Forward 1 Page'
            CRT @(40, 9):'+  - Go Forward 1 Page'
            CRT @(40,10):'L  - Goto Last Page'
            CRT @(40,11):'R  - Remove Selected Reasons'
            CRT @(40,13):'<  - Scroll to prior Help Line'
            CRT @(40,14):'EX - Exit {Lose changes}'
            CRT @(17,16):'PRINT - Prints Current Table'
            CRT @(17,17):'NEW   - Erases the entire table'
            CRT @(17,18):'HELP  - This help screen'
            CALL ELINE('Viewing HELP Screen.')
            GOSUB DSP.EDIT.SCN
            GOTO UD.1

         CASE QI = 'DEBUG'

            CALL FB.DRAW.BOX(0,4,80,17,' ','')
            CRT @(19, 6):'DEBUG SCREEN'
            CRT @(0,7):OVERRIDE.REC

            CALL ELINE('Viewing DEBUG Screen.')
            GOSUB DSP.EDIT.SCN

         CASE QI='PRINT'                 ;* Print Table to printer
*
* Print
*
            IF NUM.LINES > 0 THEN
               YN.MSG = 'Print table to currently selected printer?'
               YN.MASK = 'Y '
               GOSUB ASK.Y.OR.N
               IF YN.ANSWER = 'Y' THEN
                  GOSUB PRINT.TABLE
               END
            END ELSE
               CALL ELINE('Nothing to print! Unable to print.')
               GOTO UD.2
            END

         CASE QI='REVON'
*
* Turn Reverse ON
*
            IF REVON = '' THEN
               REVON = REV.ON
               REVOFF = REV.OFF
               CALL ELINE("Reverse Screen Highlighting is now ON!")
            END ELSE
               CALL ELINE("*** Reverse Screen Highlighting is already ON.")
            END
            GOTO UD.1

         CASE QI='REVOFF'
*
* Turn Reverse OFF
*
            IF REVON # '' THEN
               REVON = ''
               REVOFF = ''
               CALL ELINE("Reverse Screen Highlighting is now OFF")
            END ELSE
               CALL ELINE("*** Reverse Screen Highlighting is already OFF.")
            END
            GOTO UD.1

         CASE QI='A'
*
* ADD - Add an entry.
*
            GOSUB ADD.OVERRIDE.ENTRY
            GOTO UD.1

         CASE QI='E'
*
* EDIT - Edit an entry.
*
            GOSUB EDIT.OVERRIDE.ENTRY
            GOTO UD.1
         CASE QI='D'
            GOSUB DELETE.OVERRIDE.ENTRY
            GOTO UD.1

         CASE QI='NEW'
*
* NEW - Clears All
*
            YN.MSG = 'Clear ALL Override entries?  Are you sure? :'
            YN.MASK = 'N '
            GOSUB ASK.Y.OR.N
            IF YN.ANSWER = 'Y' THEN
               PAGE = 1
               NUM.LINES = 0
               OVERRIDE.REC=''
            END ELSE
               GOTO UD.2
            END

         CASE 1
            CALL ELINE('Invalid entry.')
            GOTO UD.2
      END CASE
************************************************
EXIT.POINT:
************************************************
      IF NOT (EXIT.IT) THEN GOTO UD.1
      GOSUB SAVE.IT.ALL

TRASH.PROGRAM:
      CRT @(-1):

      STOP

**********************************************************
DELETE.OVERRIDE.ENTRY:
**********************************************************
      IF NUM.LINES < 1 THEN
         CALL ELINE("No entries to DELETE.")
         RETURN
      END

      AFN.MSG = "Select Entry to Delete :"
      AFN.MIN = 1
      AFN.MAX = NUM.LINES
      AFN.MASK = LAST.EDIT.MASK
      GOSUB ASK.FOR.NUM
      IF QI = 'EX' THEN EXIT.IT = TRUE ; RETURN
      IF QI = 'X' THEN RETURN
      LAST.EDIT.MASK = AFN.ANSWER:' '
      EDIT.NUMBER = AFN.ANSWER
      DSP.PAGE = INT(EDIT.NUMBER/PAGE.SIZE)
      IF DSP.PAGE*PAGE.SIZE < EDIT.NUMBER THEN DSP.PAGE+=1
      EDIT.Y = EDIT.NUMBER-(DSP.PAGE*PAGE.SIZE)+PAGE.SIZE
      PAGE = DSP.PAGE
      DSP.NUM.LINES = NUM.LINES
      GOSUB DISPLAY.PAGE

      DESC = REVON:'>':EDIT.NUMBER'R%2':SPACE(2)
      DESC:= OVERRIDE.REC<2,EDIT.NUMBER>'D2/':SPACE(3)
      IF OVERRIDE.REC<3,EDIT.NUMBER> THEN
         DESC:= OVERRIDE.REC<3,EDIT.NUMBER>'D2/'
      END ELSE
         DESC:= ' {OPEN} '
      END
      DESC:= SPACE(3)
      DESC:= OVERRIDE.REC<4,EDIT.NUMBER>'R26(#6)':SPACE(2)
      DESC:= OVERRIDE.REC<6,EDIT.NUMBER>'R26(#6)':SPACE(1)
      DESC:= OVERRIDE.REC<7,EDIT.NUMBER>'R26(#6)':SPACE(3)
      DESC:= OVERRIDE.REC<8,EDIT.NUMBER>'R26(#6)':SPACE(1)
      DESC:= OVERRIDE.REC<9,EDIT.NUMBER>'R26(#6)':SPACE(1)
      DESC:= METHODS<OVERRIDE.REC<5,EDIT.NUMBER>>'R#5':SPACE(2)
      DESC:= OVERRIDE.REC<1,EDIT.NUMBER>:REVOFF
      CRT @(0,START.Y+EDIT.Y):DESC:@(-4)         ;* Draw screen line

      YN.MSG = 'Delete this entry?  Are you sure? :'
      YN.MASK = 'N '
      GOSUB ASK.Y.OR.N
      IF YN.ANSWER = 'Y' THEN
         DEL OVERRIDE.REC<1,EDIT.NUMBER>
         DEL OVERRIDE.REC<2,EDIT.NUMBER>
         DEL OVERRIDE.REC<3,EDIT.NUMBER>
         DEL OVERRIDE.REC<4,EDIT.NUMBER>
         DEL OVERRIDE.REC<5,EDIT.NUMBER>
         DEL OVERRIDE.REC<6,EDIT.NUMBER>
         DEL OVERRIDE.REC<7,EDIT.NUMBER>
         DEL OVERRIDE.REC<8,EDIT.NUMBER>
         DEL OVERRIDE.REC<9,EDIT.NUMBER>
         NUM.LINES-=1
         GOSUB COMPUTE.REC.SIZE
      END

      RETURN

**********************************************************
ADD.OVERRIDE.ENTRY:
**********************************************************

      FOR T = 1 TO NUM.LINES
         IF OVERRIDE.REC<3,T>='' THEN
            CALL ELINE("A Prior date range is open.  Close it and try again.")
            RETURN
         END
      NEXT
      DSP.NUM.LINES = NUM.LINES+1
      EDIT.NUMBER = NUM.LINES+1
      DSP.PAGE = INT(DSP.NUM.LINES/PAGE.SIZE)
      IF DSP.NUM.LINES > DSP.PAGE*PAGE.SIZE THEN DSP.PAGE+=1
      PAGE = DSP.PAGE
      GOSUB DISPLAY.PAGE
      Y.POS = START.Y+LAST.Y
      TEMP.REC = ''
      BEGIN.DATE = '' ; END.DATE='' ; STATUS=''

      FIELD.POS = 1
      EXIT.IT = FALSE
      DONE    = FALSE

      LOOP
      WHILE (NOT(DONE OR EXIT.IT))
         FAILURE = FALSE
         STAY.PUT = FALSE
         BEGIN CASE
            CASE FIELD.POS = 0
               DONE = TRUE
               FAILURE = TRUE

            CASE FIELD.POS = 1
               GOSUB GET.BEG.DATE
               IF NOT(FAILURE) THEN
                  FOR T = 1 TO NUM.LINES
                     IF BEGIN.DATE => OVERRIDE.REC<2,T> AND BEGIN.DATE <= OVERRIDE.REC<3,T> THEN
                        CALL ELINE("Beginning Date resides within a prior date range. Try again.")
                        STAY.PUT = TRUE
                     END
                  NEXT
               END
               TEMP.REC<2>=BEGIN.DATE

            CASE FIELD.POS = 2
               GOSUB GET.END.DATE
               TEMP.REC<3>=END.DATE

            CASE FIELD.POS = 3
               GOSUB GET.STATUS
               TEMP.REC<1>=STATUS

*
* Done PAL!
*
            CASE FIELD.POS = 4
               FOR T=1 TO 3
                  OVERRIDE.REC<T,NUM.LINES+1>=TEMP.REC<T>
               NEXT
               GOSUB COMPUTE.REC.SIZE
               DONE = TRUE

         END CASE

*
* Handle various states
*
         BEGIN CASE
            CASE EXIT.IT = TRUE
            CASE DONE = TRUE
            CASE STAY.PUT = TRUE
            CASE FAILURE = TRUE
               FIELD.POS-=1
            CASE 1
               FIELD.POS+=1
         END CASE
      REPEAT
      RETURN

**********************************************************
EDIT.OVERRIDE.ENTRY:
**********************************************************

      IF NUM.LINES < 1 THEN
         CALL ELINE("No entries to edit.  Try adding first.")
         RETURN
      END
**********************************************************
SELECT.ENTRY:
**********************************************************
      AFN.MSG = "Select Entry to Edit :"
      AFN.MIN = 1
      AFN.MAX = NUM.LINES
      AFN.MASK = LAST.EDIT.MASK
      GOSUB ASK.FOR.NUM
      IF OCONV(AFN.ANSWER,"MCU") = 'X' THEN RETURN
      EDIT.NUMBER = AFN.ANSWER
      DSP.PAGE = INT(EDIT.NUMBER/PAGE.SIZE)
      IF DSP.PAGE*PAGE.SIZE < EDIT.NUMBER THEN DSP.PAGE+=1
      EDIT.Y = EDIT.NUMBER-(DSP.PAGE*PAGE.SIZE)+PAGE.SIZE
      IF DSP.PAGE*PAGE.SIZE < EDIT.NUMBER THEN DSP.PAGE+=1
      PAGE = DSP.PAGE
      LAST.EDIT.MASK = AFN.ANSWER:' '
      DSP.NUM.LINES = NUM.LINES
      GOSUB DISPLAY.PAGE
      Y.POS = START.Y+EDIT.Y
      TEMP.REC=''
      TEMP.REC<1> = OVERRIDE.REC<1,EDIT.NUMBER> ; STATUS     = TEMP.REC<1>
      TEMP.REC<2> = OVERRIDE.REC<2,EDIT.NUMBER> ; BEGIN.DATE = TEMP.REC<2>
      TEMP.REC<3> = OVERRIDE.REC<3,EDIT.NUMBER> ; END.DATE   = TEMP.REC<3>

      FIELD.POS = 1
      EXIT.IT = FALSE
      DONE    = FALSE

      LOOP
      WHILE (NOT(DONE))

         FAILURE = FALSE

         BEGIN CASE
            CASE FIELD.POS = 0
               GOTO SELECT.ENTRY

            CASE FIELD.POS = 1
               GOSUB GET.BEG.DATE
               IF NOT(FAILURE) THEN
                  FOR T = 1 TO NUM.LINES
                     IF BEGIN.DATE => OVERRIDE.REC<2,T> AND BEGIN.DATE <= OVERRIDE.REC<3,T> THEN
                        CALL ELINE("Beginning Date resides within a prior date range. Try again.")
                        STAY.PUT = TRUE
                     END
                  NEXT
               END
               TEMP.REC<2>=BEGIN.DATE

            CASE FIELD.POS = 2
               GOSUB GET.END.DATE
               TEMP.REC<3>=END.DATE

            CASE FIELD.POS = 3
               GOSUB GET.STATUS
               TEMP.REC<1>=STATUS

*
* Done PAL!
*
            CASE FIELD.POS = 4
               FOR T=1 TO 3
                  OVERRIDE.REC<T,EDIT.NUMBER>=TEMP.REC<T>
               NEXT
               GOSUB COMPUTE.REC.SIZE
               DONE = TRUE

         END CASE

         IF NOT(DONE) THEN
            IF FAILURE THEN
               FIELD.POS-=1
            END ELSE
               FIELD.POS+=1
            END
         END
         IF EXIT.IT THEN RETURN

      REPEAT

      GOTO SELECT.ENTRY

      RETURN

**********************************************************
GET.BEG.DATE:
**********************************************************
      X.POS = 5
      OLD.BEGIN.DATE = BEGIN.DATE
      IF BEGIN.DATE THEN
         MASK=OCONV(BEGIN.DATE,"D2/")
      END ELSE
         MASK = 'MM/DD/YY'
      END
      CRT @(0,22):"Enter a Begining Date for the new Override.":@(-4)
      HELP = "OPTIONS: [T]=TDay [X]=Back [EX]=Exit Program"
      CALL GEN.IN(X.POS,Y.POS,MASK,'DATE',Q,0,8,'','',2,X.POS,Y.POS,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      IF BEGIN.DATE AND QI='' THEN QI=MASK
      BEGIN CASE

         CASE QI = 'EX'
            FAILURE=TRUE
            EXIT.IT=TRUE
            RETURN

         CASE QI = 'T'
            Q = DATE()

         CASE QI = 'X'
            FAILURE=TRUE
            RETURN

         CASE NUM(Q) AND QI # ''

         CASE 1
            CALL ELINE("Invalid option.  Try again")
            GOTO GET.BEG.DATE
      END CASE

      BEGIN.DATE = Q
      CRT @(X.POS,Y.POS):OCONV(BEGIN.DATE,"D2/")

      IF NOT(FAILURE) AND BEGIN.DATE # OLD.BEGIN.DATE THEN
         FOR T = 1 TO NUM.LINES
            IF T # EDIT.NUMBER THEN           ;* Don't Check the line that you are working on.
               IF BEGIN.DATE => OVERRIDE.REC<2,T> AND BEGIN.DATE <= OVERRIDE.REC<3,T> THEN
                  CALL ELINE("Beginning Date resides within a prior date range. Try again.")
                  BEGIN.DATE = OLD.BEGIN.DATE
                  GOTO GET.BEG.DATE
               END
            END
         NEXT
      END
 
**********************************************************
GET.END.DATE:
**********************************************************
      X.POS = 16
      OLD.END.DATE = END.DATE
      IF END.DATE THEN
         MASK=OCONV(END.DATE,"D2/")
      END ELSE
         MASK = 'MM/DD/YY'
      END
      CRT @(0,22):"Enter a Ending Date for the new Override.":@(-4)
      HELP = "OPTIONS: [T]=TDay [O]=Leave Open [X]=Back [EX]=Exit Program"
      CALL GEN.IN(X.POS,Y.POS,MASK,'DATE',Q,0,8,'','',2,X.POS,Y.POS,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      IF END.DATE AND QI='' THEN QI=MASK
      BEGIN CASE

         CASE QI = 'EX'
            FAILURE=TRUE
            EXIT.IT=TRUE
            RETURN

         CASE QI = 'X'
            FAILURE=TRUE
            IF END.DATE THEN
               T = MASK
            END ELSE
               T = SPACE(8)
            END
            CRT @(X.POS, Y.POS):T
            RETURN

         CASE QI = '' OR QI='O' OR QI='0'
            CRT @(X.POS, Y.POS):" {OPEN} "
            END.DATE = ''

         CASE NUM(Q)
            END.DATE = Q
            IF END.DATE < BEGIN.DATE THEN
               CALL ELINE('The Closing Date ':END.DATE:' is before ':BEGIN.DATE:'.')
               GOTO GET.END.DATE
            END
            CRT @(X.POS, Y.POS):OCONV(END.DATE,"D2/")

         CASE 1
            CALL ELINE("Invalid option.  Try again")
            GOTO GET.END.DATE
      END CASE

      IF NOT(FAILURE) AND OLD.END.DATE # END.DATE THEN
         FOR T = 1 TO NUM.LINES
            IF T # EDIT.NUMBER THEN           ;* Don't Check the line that you are working on.
               IF END.DATE => OVERRIDE.REC<2,T> AND END.DATE <= OVERRIDE.REC<3,T> THEN
                  CALL ELINE("Ending Date resides within a prior date range.  Try again.")
                  END.DATE = OLD.END.DATE
                  GOTO GET.END.DATE
               END
               IF BEGIN.DATE < OVERRIDE.REC<2,T> AND END.DATE => OVERRIDE.REC<2,T> AND END.DATE => OVERRIDE.REC<3,T> THEN
                  CALL ELINE("Ending Date includes a prior date range.  Try again.")
                  END.DATE = OLD.END.DATE
                  GOTO GET.END.DATE
               END
            END
         NEXT
      END

      RETURN

**********************************************************
GET.STATUS:
**********************************************************
      X.POS = 26
      IF STATUS THEN
         LOCATE STATUS IN STATS SETTING WHERE THEN
            MASK = WHERE:' '
         END ELSE
            MASK = '1 '
         END
      END ELSE
         MASK = '1 '
      END
      CRT @(0,22):"Choose a Status Mode for this carrier entry"
      HELP = "OPTIONS: [1]=Enable [2]=Disable [X]=Back [EX]=Exit Program"
      CRT @(X.POS, Y.POS):SPACE(7)
      CALL GEN.IN(X.POS,Y.POS,MASK,'',Q,0,2,'','',2,X.POS,Y.POS,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      IF QI='' THEN QI=TRIM(MASK)
      BEGIN CASE

         CASE QI = 'EX'
            FAILURE=TRUE
            EXIT.IT=TRUE
            RETURN

         CASE QI = 'X'
            FAILURE=TRUE
            IF STATUS THEN
               T = MASK
            END ELSE
               T = SPACE(7)
            END
            CRT @(X.POS, Y.POS):T
            RETURN

         CASE NUM(QI) AND QI > 0 AND QI<= NUM.STATS
            STATUS = STATS<QI>

         CASE 1
            CALL ELINE("Invalid option.  Try again")
            GOTO GET.STATUS
      END CASE

      CRT @(X.POS,Y.POS):STATUS
      RETURN

**********************************************************
UPDATE.DISPLAY:
**********************************************************

      IF NUM.LINES = 0 THEN
         CALL FB.DRAW.BOX(0,8,80,PAGE.SIZE,' ','')
         CALL FB.PRINT.CENT(0,78,12,'Carrier ':CARRIER.ID'R#5':', ':CARRIER.NAME:' (':CARRIER.CITY:', ':CARRIER.STATE:')')
         CALL FB.PRINT.CENT(0,78,13,'does not have any Overrides setup')
         RETURN
      END
      DSP.PAGE=PAGE
      DSP.NUM.LINES = NUM.LINES
      GOSUB DISPLAY.PAGE

      RETURN

**********************************************************
DISPLAY.PAGE:
**********************************************************

      STR.OUT = '(Page ':DSP.PAGE'R#1':' of ':NUM.PAGES:')'
      CRT @(78-LEN(STR.OUT),3):STR.OUT

      Y = 0
      LAST.Y = 0
      LINE = (DSP.PAGE-1)*PAGE.SIZE+1

      LOOP
      UNTIL (Y=>PAGE.SIZE)
         BEGIN CASE
            CASE LINE > DSP.NUM.LINES

               DESC=''

            CASE OVERRIDE.REC<2,LINE>=''
               DESC = ' '
               DESC:= LINE'R%2'
               LINE+=1
               IF LAST.Y = 0 THEN LAST.Y = Y+1

            CASE 1
               DESC = ' '
               DESC:= LINE'R%2':SPACE(2)
               DESC:= OVERRIDE.REC<2,LINE>'D2/':SPACE(3)
               IF OVERRIDE.REC<3,LINE> THEN
                  DESC:= OVERRIDE.REC<3,LINE>'D2/'
               END ELSE
                  DESC:= ' {OPEN} '
               END
               DESC:= SPACE(3)
               DESC:= OVERRIDE.REC<1,LINE>
               LINE+=1
         END CASE

         Y+=1                            ;* Inc Y screen position
         CRT @(0,START.Y+Y):DESC:@(-4)         ;* Draw screen line
      REPEAT

      RETURN

**********************************************************
INIT.SCREEN: ***
**********************************************************

      CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      CRT @(0,2):STR('=',79):

      RETURN

**********************************************************
DSP.CARRIER.SCN: ***
**********************************************************
      GOSUB INIT.SCREEN
      CRT @(0, 3):'CARRIER : ':@(-4)
      CRT @(0, 4):'CLIENT  : ':@(-4)
      CRT @(0, 5):STR('=',79):
      CRT @(0,21):STR('=',79):
      CRT @(0,22):@(-4):
      CRT @(0,23):@(-4):

      RETURN

**********************************************************
DSP.EDIT.SCN:
**********************************************************
      GOSUB DSP.CARRIER.SCN
      IF CARRIER.ID THEN
         TEMP = CARRIER.ID'R%5':', ':CARRIER.NAME:' (':CARRIER.CITY:', ':CARRIER.STATE:')'
      END ELSE
         TEMP = ''
      END
      CRT @(0, 3):'CARRIER : ':TEMP:@(-4)

      IF CLIENT.ID THEN
         TEMP = CLIENT.ID'R%5':', ':CLIENT.NAME:' (':CLIENT.CITY:', ':CLIENT.STATE:')'
      END ELSE
         IF CARRIER.ID THEN
            TEMP = '(All Clients)'
         END ELSE
            TEMP = ''
         END
      END
      CRT @(0, 4):'CLIENT  : ':TEMP:@(-4)
      CRT @(0, 6):' ## Begin Date  End Date   Status'
      CRT @(0, 7):' -- ---------- ----------  ------'

      RETURN

**********************************************************
PRINT.TABLE:
**********************************************************
      PRINTER ON
      PAGE 1

      L.TAB=CTR-(LEN(PROG.DESC)/2)
      L.TAB=L.TAB-LEN(PROG.NAME)
      TEMP=PROG.NAME:SPACE(L.TAB):PROG.DESC
      R.TAB=WIDTH-LEN(TEMP)
      R.TAB=R.TAB-LEN(TIMEDATE())
      HEAD1=PROG.NAME:SPACE(L.TAB):PROG.DESC:SPACE(R.TAB):TIMEDATE():"'L'"
*
      TITLE='Override Entries'
      L.TAB=CTR-(LEN(TITLE)/2)
      L.TAB=L.TAB-LEN(CO.NAME)
      TEMP=CO.NAME:SPACE(L.TAB):TITLE

      R.TAB=(WIDTH-LEN(TEMP))-20
      HEAD2=TEMP:SPACE(R.TAB):USER.NAME'L(#10 )':"PAGE 'PL'"
*
      HEAD3 = STR('-',WIDTH-1):"'L'"
*
      TEMP = 'CARRIER : ':CARRIER.ID'R#5':', ':CARRIER.NAME:' (':CARRIER.CITY:', ':CARRIER.STATE:')'
      HEAD4 = TEMP:"'L'"

      IF CLIENT.ID THEN
         TEMP = 'CLIENT  : ':CLIENT.ID'R#5':', ':CLIENT.NAME:' (':CLIENT.CITY:', ':CLIENT.STATE:')'
         HEAD4:= TEMP:"'L'"
      END
*
      TEMP = '  ##  Begin Date  End Date   Status'
      HEAD5 = TEMP:"'L'"
*

      HEAD6 = '  --  ----------  --------  --------'
*

      HED=HEAD1:HEAD2:HEAD3:HEAD4:HEAD5:HEAD6
      PAGE 0
      HEADING HED
      DONE=FALSE

      FOR LINE = 1 TO NUM.LINES
         DESC = '  '
         DESC:= LINE'R%2':SPACE(3)
         DESC:= OVERRIDE.REC<2,LINE>'D2/':SPACE(3)
         IF OVERRIDE.REC<3,LINE> THEN
            DESC:= OVERRIDE.REC<3,LINE>'D2/'
         END ELSE
            DESC:= ' {OPEN} '
         END
         DESC:= SPACE(3)
         DESC:= OVERRIDE.REC<1,LINE>
         PRINT DESC
      NEXT

      PRINTER OFF
      CALL ELINE("Table printed.")

      RETURN

**********************************************************
SAVE.IT.ALL:
**********************************************************
      IF WRITE.DATA THEN
*
* Make sure the record contains at least 1 VALID record....
*
         T.ID = CARRIER.ID
         IF CLIENT.ID THEN T.ID:='*':CLIENT.ID
         IF OVERRIDE.REC<2,1> # "" THEN
            WRITE OVERRIDE.REC ON F.OVERRIDE,T.ID
         END ELSE
            DELETE F.OVERRIDE,T.ID
         END
      END

      RETURN

**********************************************************
GET.CLIENT.CARRIER:
**********************************************************
      GOSUB DSP.EDIT.SCN

GC.1:
      IF CARRIER.ID THEN
         MASK = CARRIER.ID'R%5'
      END ELSE
         MASK = '#####'
      END
      HELP = "Enter the carrier number. 'L'=List Setup Carriers/Clients 'X'=Back 'EX'=Exit"
      CRT @(10,3):@(-4)
      CALL GEN.IN(10,3,MASK,'',Q,0,20,'','',2,10,3,1,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      IF QI='' AND CARRIER.ID THEN QI=CARRIER.ID
      BEGIN CASE
         CASE QI = 'N'
            DONE = 0
            READVU X FROM F.DICT,'NEXT',1 ELSE X = 0
            LOOP
            UNTIL DONE DO
               X = X+1
               READ DUMMY FROM F.CARRIERS,X'R%5' ELSE DONE = 1
            REPEAT

         CASE QI = 'X' OR QI='EX' OR QI=''
            EXIT.IT = TRUE
            RETURN

         CASE QI='L'
            GOSUB LIST.CARRIERS
            GOTO GET.CLIENT.CARRIER

         CASE NOT(QI MATCHES "0N")
            CALL SOUNDEX.DISPLAY(QI,'CARRIERS','SDX.CARRIER,NAME','1,3,4',ITEM.LIST)
            BEGIN CASE
               CASE ITEM.LIST = ''
                  GOTO GET.CLIENT.CARRIER
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                  GOTO GET.CLIENT.CARRIER
               CASE ITEM.LIST # ''
                  IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
                  GOTO GET.CLIENT.CARRIER
            END CASE

         CASE NUM(QI)
            T.CARRIER.ID = QI'R%5'
            CALL CLR.CONTROL(T.CARRIER.ID)
            GOSUB GET.CARRIER.INFO
            IF T.CARRIER.ID = '' THEN GOTO GC.1
            CARRIER.ID = T.CARRIER.ID

         CASE 1
            GOTO GC.1
      END CASE

      IF CARRIER.ID THEN
         TEMP = CARRIER.ID'R%5':', ':CARRIER.NAME:' (':CARRIER.CITY:', ':CARRIER.STATE:')'
      END ELSE
         TEMP = ''
      END
      CRT @(0, 3):'CARRIER : ':TEMP:@(-4)

**********************************************************
GC.2:* Enter Client Id/Name
**********************************************************
      MASK = '#####'
      HELP = "Enter the client number. 'L'=List Setup Carriers/Clients 'X'=Back 'EX'=Exit"
      CRT @(10,4):@(-4)
      CALL GEN.IN(10,4,MASK,'',Q,0,20,'','',2,10,4,1,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI = 'X'
            GOTO GC.1

         CASE QI='EX'
            EXIT.IT = TRUE
            RETURN

         CASE QI = ''

         CASE QI='L'
            GOSUB LIST.CARRIERS
            GOSUB DSP.EDIT.SCN
            GOTO GC.2

         CASE NOT(QI MATCHES "0N")
            CALL SOUNDEX.DISPLAY(QI,'CLIENTS','SDX.CLIENTS,NAME','1,3,4',ITEM.LIST)
            BEGIN CASE
               CASE ITEM.LIST = ''
                  GOSUB DSP.EDIT.SCN
                  GOTO GC.2
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                  GOSUB DSP.EDIT.SCN
                  GOTO GC.2
               CASE ITEM.LIST # ''
                  IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
                  GOSUB DSP.EDIT.SCN
                  GOTO GC.2
            END CASE

         CASE NUM(QI)
         CASE 1
            GOTO GC.2
      END CASE

*
* Get the optional client info
*
      IF QI # '' THEN
         T.CLIENT.ID = QI'R%5'
         GOSUB GET.CLIENT.INFO
         IF T.CLIENT.ID = '' THEN GOTO GC.2
         CLIENT.ID = T.CLIENT.ID
         TEMP = CLIENT.ID'R%5':', ':CLIENT.NAME:' (':CLIENT.CITY:', ':CLIENT.STATE:')'
      END ELSE
         CLIENT.ID = ''
         TEMP = '(All Clients)'
      END

      CRT @(0, 4):'CLIENT  : ':TEMP:@(-4)

*
* Load OVERRIDE Record
*
      T.ID = CARRIER.ID
      IF CLIENT.ID THEN T.ID:='*':CLIENT.ID
      READ OVERRIDE.REC FROM F.OVERRIDE,T.ID ELSE
         OVERRIDE.REC=''
      END
      GOSUB COMPUTE.REC.SIZE

      RETURN

**********************************************************
LIST.CARRIERS:
**********************************************************
      CRT @(0,0):@(-1)
      EXECUTE 'SORT FB.OVERRIDE CARRIER CLIENT'
      CALL ELINE('')
      CALL FB.DRAW.BOX(0,5,80,PAGE.SIZE+2,' ','')

      RETURN

**********************************************************
COMPUTE.REC.SIZE:
**********************************************************
      NUM.LINES = DCOUNT(OVERRIDE.REC<2>,@VM)
      NUM.PAGES = INT(NUM.LINES/PAGE.SIZE)
      IF NUM.PAGES < NUM.LINES*PAGE.SIZE THEN NUM.PAGES+=1
      IF EDIT.NUMBER > NUM.LINES THEN EDIT.NUMBER = NUM.LINES

      RETURN

**********************************************************
GET.CLIENT.INFO: ***
**********************************************************
      MATREAD CLIENT.REC FROM F.CLIENTS,T.CLIENT.ID THEN
         CLIENT.NAME = CL.NAME
         CLIENT.CITY = CL.CITY
         CLIENT.STATE = CL.ST
         ZIP.LEN = CL.ZIP.FLAG
      END ELSE
         CALL ELINE("ERROR - Client ":T.CLIENT.ID:" is not a valid client.")
         T.CLIENT.ID = ''
      END

      RETURN

**********************************************************
GET.CARRIER.INFO: ***
**********************************************************
      READ CARRIER.REC FROM F.CARRIERS,T.CARRIER.ID THEN
         CARRIER.NAME = CARRIER.REC<1>
         CARRIER.CITY = CARRIER.REC<3>
         CARRIER.STATE = CARRIER.REC<4>
      END ELSE
         CALL ELINE("ERROR - Carrier ":T.CARRIER.ID:" is not a valid carrier.")
         T.CARRIER.ID = ''
      END

      RETURN

**********************************************************
ASK.FOR.NUM: ***
**********************************************************
      AFN.ANSWER = ''

AFN.1:
      HELP = "Entry Options: [":AFN.MIN:"-":AFN.MAX:"] [X]-Back"
      CRT @(0,22):AFN.MSG:@(-4)
      MASK = AFN.MASK:' '
      Q=''
      CALL GEN.IN(LEN(AFN.MSG)+1,22,MASK,'',Q,0,LEN(AFN.MAX),'','',2,LEN(AFN.MSG)+1,22,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      IF QI='' THEN QI=MASK

      BEGIN CASE
         CASE QI = 'X' OR QI='EX'
         CASE QI>=AFN.MIN AND QI<=AFN.MAX
         CASE 1
            CALL ELINE('Invalid entry.')
            GOTO AFN.1
      END CASE

      AFN.ANSWER=QI
      CRT @(0,22):@(-4):
      CRT @(0,23):@(-4):

      RETURN

**********************************************************
ASK.Y.OR.N: ***
**********************************************************
      YN.ANSWER = ''

Y.OR.N:

      HELP = "Entry Options: [Y]-Yes [N]-No [X]-Back [EX]-Exit program"
      CRT @(0,22):YN.MSG:@(-4)
      MASK = YN.MASK'L#1'
      Q=''
      CALL GEN.IN(LEN(YN.MSG)+1,22,MASK,'',Q,0,1,'','',2,LEN(YN.MSG)+1,22,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')

      IF QI='' THEN QI=MASK

      BEGIN CASE
         CASE QI = 'Y'
         CASE QI = 'N'
         CASE QI = 'X' OR QI='EX'
         CASE 1
            CALL ELINE('Invalid entry.')
            GOTO Y.OR.N
      END CASE

      CRT @(0,22):@(-4):
      CRT @(0,23):@(-4):
      YN.ANSWER = QI

      RETURN

**********************************************************
DEBUG:
**********************************************************
*
* Was a special debug message passed? If not, Use the default.
*
      IF DEBUG.MSG = '' THEN DEBUG.MSG='DEBUG POINT - BREAK IT!':CHAR(7)
      CRT @(0,0):DEBUG.MSG:
      INPUT NULL,1
      CRT @(0,0):SPACE(LEN(DEBUG.MSG)):
      DEBUG.MSG=''            ;* Clear it to prevent reuse of special.

      RETURN


