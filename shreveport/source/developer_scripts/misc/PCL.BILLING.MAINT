********************************************************************************
* COPYRIGHT (C) 2011 by AFS LOGISTICS LLC. -- ALL RIGHTS RESERVED
*       ----------------------------------------------------
* This program is the sole property of AFS Logistics, LLC (AUTOMATED
* FREIGHT SYSTEMS) and may not be used, copied, or modified without
* the express written consent of Brian Barker of AFS Logistics, LLC.
*
* FREIGHT BILLING PACKAGE
* PROGRAM PCL.BILLING.MAINT
*
* AUTHOR : MIKE KERBOW
* DATE   : JANUARY 2013
*
* Program to allow updates to all AFS employee-related data in the CLIENTS
* file record as specfied in Information Technology Projects 80 and 87.
*       ----------------------------------------------------
*
* EDIT HISTORY:
* 060415 : DRF01 : SysAid 17839 - Gave Laura Metz access to this program
* 110515 : DRF02 : SysAid 20988 - Gave Mary Ann Rose, Denise Raborn,
*                  Kealey Barnes, and Nakisha Taylor
* 060316 - GRB01 - SysAid 24996 Add CDUNGAN
*
*
********************************************************************************
* PICK COMPILER INFORMATION
* ~~~~~~~~~~~~~~~~~~~~~~~~~
*  ~PICK-FILE  : FBBP
*  ~PICK-RECORD: PCL.BILLING.MAINT
*  ~COMPILE-REC: YES
*  ~AUTO-ANSWER: NO
*  ~RUN-REC    : NO
********************************************************************************
*
********************************************************************************
$OPTIONS EXEC.EQ.PERF
$OPTIONS INFO.ABORT
$OPTIONS HEADER.EJECT
$INCLUDE FILE.DEFS INC_ADDS60.CODES
*
* Initialize general variables
*
      PROMPT''
      CALL GET.USER(USER)
      TERM.TYPE=SYSTEM(7)
      BEGIN CASE
         CASE TERM.TYPE='REGENT60'
            REV.ON = TERM.ESC.SEQ:CHAR(TERM.REV)   ; * JCW07
            REV.OFF = TERM.ESC.SEQ:CHAR(TERM.NORMAL)         ; * JCW07
         CASE 1
            REV.ON=@(-13)
            REV.OFF=@(-14)
      END CASE
      POSITION.HOLDER='* Holds Position in DA *'
      MASK.CHAR='-'
      REDSPLY=0
      ALREADY.ADDED=0
      ALREADY.DELETED=0
      SELECTION=''
      SALESMAN.LIST=''                   ; * Initially null, but loaded only once if needed
      DASH=STR('-',132)
      DDASH=STR('=',132)
      PROG.DESC='PCL Billing Maintenance - SLC Fields'
      PACK.NAME='Freight Billing'
      PROG.NAME='PCL.BILLING.MAINT'
      BILL.FREQ=''
      BILL.FREQ<1,1>='1' ; BILL.FREQ<2,1>='Weekly'
      BILL.FREQ<1,2>='2' ; BILL.FREQ<2,2>='Monthly'
      BILL.TERM=''
      BILL.TERM<1,1>='1' ; BILL.TERM<2,1>='Net 15'
      BILL.TERM<1,2>='2' ; BILL.TERM<2,2>='Net 30'
      BILL.TERM<1,3>='3' ; BILL.TERM<2,3>='Net 45'
      BILL.TERM<1,4>='4' ; BILL.TERM<2,4>='Net 60'
      BILL.TERM<1,5>='5' ; BILL.TERM<2,5>='Due on Receipt'
*
* Display page heading
*
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,PERIOD,PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
*
* Open files
*
      OPEN '','BCTRL' TO F.BCTRL ELSE CALL OPEN.ABORT("BCTRL",PROG.NAME)
      OPEN '','BCUST' TO F.CLIENT ELSE CALL OPEN.ABORT("BCUST",PROG.NAME)
      OPEN '','PCL.BILLING' TO F.PCL.BILL ELSE CALL OPEN.ABORT("PCL.BILLING",PROG.NAME)
      OPEN '','PCL.BILLING.HIST' TO F.PCL.BILL.HIST ELSE CALL OPEN.ABORT("PCL.BILLING.HIST",PROG.NAME)
      OPEN '','PCL.BILLING.XREF' TO F.PCL.BILL.NDX ELSE CALL OPEN.ABORT("PCL.BILLING.XREF",PROG.NAME)
      OPEN '','PCL.BILL.DATE.XREF' TO F.PCL.BILL.DATE.NDX ELSE CALL OPEN.ABORT("PCL.BILL.DATE.XREF",PROG.NAME)
      OPEN '','AR.SALES.CODE.1000.1' TO F.SLS.CODE ELSE CALL OPEN.ABORT("AR.SALES.CODE.1000.1",PROG.NAME)
      OPEN '','OPERATOR' TO F.OP ELSE CALL OPEN.ABORT("OPERATOR",PROG.NAME)      ; * GRB01	
*
* Get company file information
*

      	READV OP.FLG FROM F.OP,USER,26 ELSE
         OP.FLG = "N"
      END
      IF OP.FLG # "Y" THEN
  ****    BEGIN CASE
 ****         CASE USER='BRIAN'
 ****         CASE USER='BRIANP'
 ****         CASE USER='BROSE'
  ****        CASE USER='BFRANKLIN'
  ****        CASE USER='DAVID'
  ****        CASE USER='GBINO'
  ****        CASE USER='PBASS'
 ****         CASE USER='ABROOKS'
  ****        CASE USER='AMOULDING'
 ****         CASE USER='DRABORN'      ; * DRF02
 ****         CASE USER='JWHITING'
   ****       CASE USER='KBARNES'      ; * DRF02
 ****         CASE USER='KMCQUISTON'
  ****        CASE USER='NTAYLOR'    ; * DRF02
 ****         CASE USER='LMETZ'     ;  * DRF01
  ****        CASE USER='MARY'
  ****        CASE USER='MROSE'     ; * DRF02
  ****        CASE USER='CDUNGAN' ; * GRB01
  ****        CASE USER='RWHITT'
  ****        CASE 1
            CALL ELINE("Unauthorized Access")
            STOP
  ****     END CASE
    END
*
* Enter client number.
*
100:  CRT @(0,2):@(-3)
      HELP="Enter client number or name to search. [EX]=Exit"
      CALL GEN.IN(0,22,'Enter Client Number : #####','',Q,0,20,'','',2,-5,22,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X' OR QI='EX' OR QI=''
            STOP
         CASE NOT(QI MATCHES "0N")
            CALL SOUNDEX.DISPLAY(QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            IF ITEM.LIST='' ! DCOUNT(ITEM.LIST<1>,@VM) > 1 THEN GOTO 100
            IF NOT(NUM(ITEM.LIST<1,1>)) THEN GOTO 100
            Q=ITEM.LIST<1,1>'R%5'
            READ TEST.REC FROM F.CLIENT,Q ELSE
               TEST.REC=''
               CALL ELINE("Not a valid client. Have Frt Pymt enter client first")
               GOTO 100
            END
         CASE NUM(QI)
            Q = QI'R%5'
            READ TEST.REC FROM F.CLIENT,Q ELSE
               TEST.REC=''
               CALL ELINE("Not a valid client. Have Frt Pymt enter client first")
               GOTO 100
            END
         CASE 1
            GOTO 100
      END CASE
      BCLIENT.ID=Q
      BCLIENT.REC=TEST.REC
      CRT @(0,3):'Bill Client : ':BCLIENT.ID:' ':BCLIENT.REC<2>
*
* Enter invoice date.
*
200:  *
      HELP = "Enter Invoice Date. [T]oday [X]=Bck [EX]it"
      CALL GEN.IN(0,22,'Enter Invoice Date : MM/DD/YY','DATE',Q,0,8,'','',2,-8,22,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI = 'T'
            Q = DATE()
         CASE QI = 'X'
            GOTO 100                     ; * ENTER BILL CLIENT
         CASE QI = 'EX'
            STOP
         CASE NOT(NUM(Q)) OR Q GT DATE() ! Q = ''
            CALL ELINE('ERROR - Invalid Date.')
            GOTO 200
      END CASE
      IF Q < DATE()-730 THEN
         CALL ELINE("Warning! Invoice was created more than 2 years ago!")
         CC+=1
      END
      IF Q > DATE() THEN
         CALL ELINE("Error Invoice date can't be in the future!")
         CC+=1
         GOTO 200
      END
      INV.DATE=Q
      CRT @(60,3):'Inv Date : ':INV.DATE 'D2/'
      PCL.BILL.NDX.ID=BCLIENT.ID:'*':INV.DATE
      READ PCL.BILL.NDX.REC FROM F.PCL.BILL.NDX,PCL.BILL.NDX.ID ELSE
         CALL ELINE('No Billing Transactions for ':BCLIENT.ID:' on ':INV.DATE'D2/':'.')
         GO 200
      END
      GOSUB DISPLAY.RELATED.TRANS
      IF Q='X' THEN
         CRT @(0,4):@(-3):
         GO 200
      END
*
* Read client item
*
      PCL.BILL.ORG=PCL.BILL.REC
*
* Setup screen
300:  ***
      CRT @(0,3):@(-3)
*
305:  ***
*
      CRT @(0,3):'Bill Client : ':BCLIENT.ID:' ':BCLIENT.REC<2>
      CRT @(60,3):'Inv Date : ':INV.DATE 'D2/'
      CRT @(0,4):STR('=',79)
      CRT @(0,20):STR('=',79)
      LNO=FIELD(PCL.BILL.ID,'*',3)
      CRT @(2,20):'(LINE = ':LNO:')':

      CRT @( 0, 5):' 1 Parent CLient Name: ':PCL.BILL.REC<1>
      CRT @( 0, 6):' 2 Client Name       : ':PCL.BILL.REC<2>
      CRT @( 0, 7):' 3 Invoice Number    : ':PCL.BILL.REC<3>
      CRT @( 0, 8):' 4 Total Savings     : ':PCL.BILL.REC<4>'R26,'
      CRT @( 0, 9):' 5 Control Number    : ':PCL.BILL.REC<5>
      CRT @( 0,10):' 6 PO #              : ':PCL.BILL.REC<6>
      CRT @( 0,11):' 7 Service Date      : ':PCL.BILL.REC<7>'D4/'
      CRT @( 0,12):' 8 Type              : ':PCL.BILL.REC<8>
      CRT @( 0,13):' 9 Savings           : ':PCL.BILL.REC<9>'R37,'
      CRT @( 0,14):'10 Packages          : ':PCL.BILL.REC<10>'R0,'
      CRT @( 0,15):'11 Transactions      : ':PCL.BILL.REC<11>'R0,'
      CRT @( 0,16):'12 Billing Option    : ':PCL.BILL.REC<12>
      CRT @( 0,17):'13 Billing Code      : ':PCL.BILL.REC<13>
      CRT @( 0,18):'14 Description       : ':PCL.BILL.REC<14>

      CRT @(50, 5):'15 Rate        : ':PCL.BILL.REC<15>'R37,'
      CRT @(50, 6):'16 Quantity    : ':PCL.BILL.REC<16>'R26,'
      CRT @(50, 7):'17 Amount Due  : ':PCL.BILL.REC<17>'R26,'
      CRT @(50, 8):'18 Terms       : ':PCL.BILL.REC<18>
      CRT @(50, 9):'19 Invoice Date: ':PCL.BILL.REC<19>'D4/'
      CRT @(50,10):'20 Due Date    : ':PCL.BILL.REC<20>'D4/'
      CRT @(50,11):'21 Account Rep : ':PCL.BILL.REC<21>
      CRT @(50,12):'22 Client#     : ':PCL.BILL.REC<22>
      CRT @(50,13):'23 Division#   : ':PCL.BILL.REC<23>
      CRT @(50,14):'24 Sales Code  : ':PCL.BILL.REC<24>
      CRT @(50,15):'25 Bill Client#: ':PCL.BILL.REC<25>

*
310:  ***
*
      IF PCL.BILL.REC#PCL.BILL.ORG THEN
         PCL.UPD=1
      END ELSE
         PCL.UPD=0
      END
      IF PCL.UPD THEN
         HELP='Enter number to edit. [U]pdate [EX]it'
      END ELSE
         HELP='Enter number to edit. [EX]it'
      END
      CALL GEN.IN(0,22,'Enter Selection: --','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'                    ; * Exit without changes (abandon all changes)
            STOP

         CASE QI='U' AND PCL.UPD
            REQ.FIELDS=''
            IF REQ.FIELDS#'' THEN
               REQ.NVAL=DCOUNT(REQ.FIELDS<1>,@VM)
               IF REQ.NVAL=1 THEN
                  CALL ELINE(REQ.FIELDS<1,1>:' is required. Please re-enter.')
               END ELSE
                  CALL ELINE('Several required fields are missing. Please review.')
               END
               GOTO 310
            END

320:*
            HELP='Please enter adjustment reason. [EX]it'
            CALL GEN.IN(0,22,'','',Q,0,75,'','',2,0,22,1,QI,HELP,0,23)
            ANSWER=TRIM(Q)
            IF LEN(ANSWER)<5 THEN
               CALL ELINE('Need more information.')
               GO 320
            END
            WORDS=DCOUNT(ANSWER,' ')
            IF WORDS<5 THEN
               CALL ELINE('Need more information.')
               GO 320
            END

            WRITE PCL.BILL.REC ON F.PCL.BILL,PCL.BILL.ID
            PCL.BILL.HIST.ID=PCL.BILL.ID:'*':INV.DATE
            SEQ=0
            LOOP
               SEQ+=1
               TEST.ID=PCL.BILL.HIST.ID:'*':SEQ
               READ TEST.REC FROM F.PCL.BILL.HIST,TEST.ID ELSE TEST.REC=''
            UNTIL TEST.REC='' DO
            REPEAT
            PCL.BILL.HIST.ID=TEST.ID
            PCL.BILL.HIST.REC=PCL.BILL.REC
            PCL.BILL.HIST.REC<27>=ANSWER
            PCL.BILL.HIST.REC<28>=USER
            PCL.BILL.HIST.REC<29>=TIME()
            PCL.BILL.HIST.REC<30>=DATE()
            WRITE PCL.BILL.HIST.REC ON F.PCL.BILL.HIST,PCL.BILL.HIST.ID
            GOTO 200

         CASE QI='' AND PCL.UPD=0
            CRT @(0,4):@(-3):
            GOTO 200

         CASE QI=''
            CALL ELINE('Invalid entry - Command not recognized.')
            GOTO 310

         CASE NUM(QI)                    ; * Edit numbered item
            IF QI<1 OR QI>25 THEN
               CALL ELINE('Invalid entry - Number out of range.')
               GOTO 310
            END ELSE
               ON QI GOSUB 1000,2000,3000,4000,5000,6000,7000,8000,9000,10000,11000,12000,13000,14000,15000,16000,17000,18000,19000,20000,21000,22000,23000,24000,25000
               GOTO 305
            END

         CASE 1
            CALL ELINE('Invalid entry - Command not recognized.')
            GOTO 310
      END CASE


1000: * 1 Enter parent client name
      RETURN

2000: * 2 Client Name
      RETURN

3000: * 3 Invoice Number
      RETURN

4000: * 4 Total Savings
      HELP = "Enter the total savings. [X]=Back [EX]=Exit"
      IF PCL.BILL.REC<4> = '' THEN REQ = 1 ELSE REQ = 0
      CALL GEN.IN(23,8,PCL.BILL.REC<4>'R26,','AMT2',Q,REQ,12,'','',2,23,8,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI = ''
            Q = PCL.BILL.REC<4>
         CASE QI = 'X'
            CRT @(23,8):PCL.BILL.REC<4>'R26,':
            RETURN
         CASE QI = 'EX'
            STOP
         CASE NUM(QI) AND QI#''
         CASE 1
            GOTO 4000
      END CASE
      PCL.BILL.REC<4> = Q'R0'
      RETURN

5000: * 5 Control Number
      RETURN

6000: * 6 PO #
      RETURN

7000: * 7 Service Date
      RETURN

8000: * 8 Type (Always "Invoice")
      RETURN

9000: * 9 Savings
      HELP = "Enter the savings. [X]=Back [EX]=Exit"
      IF PCL.BILL.REC<9> = '' THEN REQ = 1 ELSE REQ = 0
      CALL GEN.IN(23,13,PCL.BILL.REC<9>'R37,','AMT3',Q,REQ,12,'','',2,23,13,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI = ''
            Q = PCL.BILL.REC<9>
         CASE QI = 'X'
            CRT @(23,13):PCL.BILL.REC<9>'R37,':
            RETURN
         CASE QI = 'EX'
            STOP
         CASE NUM(QI) AND QI#''
         CASE 1
            GOTO 9000
      END CASE
      PCL.BILL.REC<9> = Q'R0'
      RETURN


10000:* 10 Packages
      RETURN

11000:* 11 Transactions
      RETURN

12000:* 12 Billing Option
      HELP = "Enter the billing option. [X]=Back [EX]=Exit"
      IF PCL.BILL.REC<12> = '' THEN REQ = 1 ELSE REQ = 0
      CALL GEN.IN(23,16,PCL.BILL.REC<12>,'',Q,REQ,65,'','',2,23,16,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI = ''
            Q = PCL.BILL.REC<12>
         CASE QI = 'X'
            CRT @(23,16):PCL.BILL.REC<12>:
            RETURN
         CASE QI = 'EX'
            STOP
         CASE LEN(TRIM(QI))>10
         CASE 1
            GOTO 12000
      END CASE
      PCL.BILL.REC<12> = TRIM(Q)
      VIN=PCL.BILL.REC<12>               ; * Billing Option
      VIN<2>=PCL.BILL.REC<13>            ; * Billing Code
      VIN<3>=PCL.BILL.REC<14>            ; * Description
      CALL GET.SLC.SALES.CODE(VIN,VOUT)
      PCL.BILL.REC<24>=VOUT<1>
      RETURN

13000:* 13 Billing Code
      HELP = "Enter the billing code. [X]=Back [EX]=Exit"
      IF PCL.BILL.REC<13> = '' THEN REQ = 1 ELSE REQ = 0
      CALL GEN.IN(23,17,PCL.BILL.REC<13>,'',Q,REQ,65,'','',2,23,17,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI = ''
            Q = PCL.BILL.REC<13>
         CASE QI = 'X'
            CRT @(23,17):PCL.BILL.REC<13>:
            RETURN
         CASE QI = 'EX'
            STOP
         CASE LEN(TRIM(QI))>10
         CASE 1
            GOTO 13000
      END CASE
      PCL.BILL.REC<13> = TRIM(Q)
      VIN=PCL.BILL.REC<12>               ; * Billing Option
      VIN<2>=PCL.BILL.REC<13>            ; * Billing Code
      VIN<3>=PCL.BILL.REC<14>            ; * Description
      CALL GET.SLC.SALES.CODE(VIN,VOUT)
      PCL.BILL.REC<24>=VOUT<1>
      RETURN

14000:* 14 Description
      HELP = "Enter the billing description. [X]=Back [EX]=Exit"
      IF PCL.BILL.REC<14> = '' THEN REQ = 1 ELSE REQ = 0
      CALL GEN.IN(23,18,PCL.BILL.REC<14>,'',Q,REQ,65,'','',2,23,18,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI = ''
            Q = PCL.BILL.REC<14>
         CASE QI = 'X'
            CRT @(23,18):PCL.BILL.REC<14>:
            RETURN
         CASE QI = 'EX'
            STOP
         CASE LEN(TRIM(QI))>10
         CASE 1
            GOTO 14000
      END CASE
      PCL.BILL.REC<14> = TRIM(Q)
      VIN=PCL.BILL.REC<12>               ; * Billing Option
      VIN<2>=PCL.BILL.REC<13>            ; * Billing Code
      VIN<3>=PCL.BILL.REC<14>            ; * Description
      CALL GET.SLC.SALES.CODE(VIN,VOUT)
      PCL.BILL.REC<24>=VOUT<1>
      RETURN

15000:* 15 Rate
      HELP = "Enter the rate. [X]=Back [EX]=Exit"
      IF PCL.BILL.REC<15> = '' THEN REQ = 1 ELSE REQ = 0
      CALL GEN.IN(67,5,PCL.BILL.REC<15>'R37','AMT3',Q,REQ,10,'','',2,67,5,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI = ''
            Q = PCL.BILL.REC<15>
         CASE QI = 'X'
            CRT @(67,5):PCL.BILL.REC<15>'R37,':
            GOTO 14000
         CASE QI = 'EX'
            STOP
         CASE NUM(QI) AND QI#''
         CASE 1
            GOTO 15000
      END CASE
      PCL.BILL.REC<15> = Q'R0'
      RETURN

16000:* 16 Quantity
      HELP = "Enter the quantity. [X]=Back [EX]=Exit"
      IF PCL.BILL.REC<16> = '' THEN REQ = 1 ELSE REQ = 0
      CALL GEN.IN(67,6,PCL.BILL.REC<16>'R26','AMT2',Q,REQ,10,'','',2,67,6,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI = ''
            Q = PCL.BILL.REC<16>
         CASE QI = 'X'
            CRT @(67,6):PCL.BILL.REC<16>'R26,':
            GOTO 15000
         CASE QI = 'EX'
            STOP
         CASE NUM(QI) AND QI#''
         CASE 1
            GOTO 16000
      END CASE
      PCL.BILL.REC<16> = Q'R0'
      RETURN

17000:* 17 Amount Due
      HELP = "Enter the amount due. [X]=Back [EX]=Exit"
      IF PCL.BILL.REC<17> = '' THEN REQ = 1 ELSE REQ = 0
      CALL GEN.IN(67,7,PCL.BILL.REC<17>'R26','AMT2',Q,REQ,12,'','',2,67,7,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI = ''
            Q = PCL.BILL.REC<17>
         CASE QI = 'X'
            CRT @(67,7):PCL.BILL.REC<17>'R26,':
            GOTO 16000
         CASE QI = 'EX'
            STOP
         CASE NUM(QI) AND QI#''
         CASE 1
            GOTO 17000
      END CASE
      PCL.BILL.REC<17> = Q'R0'
      RETURN

18000:* 18 Terms
      RETURN

19000:* 19 Invoice Date
      RETURN

20000:* 20 Due Date
      RETURN

21000:* 21 Account Rep
      RETURN

22000:* 22 Client#
      HELP="Enter client number or name to search. [EX]=Exit"
      CALL GEN.IN(0,22,'Enter Client Number : #####','',Q,0,25,'','',2,-5,22,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X' OR QI='EX' OR QI=''
            STOP
         CASE NOT(QI MATCHES "0N")
            CALL SOUNDEX.DISPLAY(QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            IF ITEM.LIST='' ! DCOUNT(ITEM.LIST<1>,@VM) > 1 THEN GOTO 1000
            IF NOT(NUM(ITEM.LIST<1,1>)) THEN GOTO 1000
            Q=ITEM.LIST<1,1>'R%5'
            READ TEST.REC FROM F.CLIENT,Q ELSE
               TEST.REC=''
               CALL ELINE("Not a valid client. Have Frt Pymt enter client first")
               GOTO 1000
            END
         CASE NUM(QI)
            Q = QI'R%5'
            READ TEST.REC FROM F.CLIENT,Q ELSE
               TEST.REC=''
               CALL ELINE("Not a valid client. Have Frt Pymt enter client first")
               GOTO 1000
            END
         CASE 1
            GOTO 1000
      END CASE
      PCL.BILL.REC<22>=Q
      RETURN

23000:* 23 Division#
      MASK = PCL.BILL.REC<23>
      HELP = 'Enter Division. [X]=Back [EX]=Exit'
      IF BCLIENT.ID='01638' OR BCLIENT.ID = "01267" THEN
         CALL GEN.IN(67,13,MASK,'',Q,0,6,'R','0',2,67,13,0,QI,HELP,0,23)
      END ELSE
         CALL GEN.IN(67,13,MASK,'',Q,0,5,'R','0',2,67,13,0,QI,HELP,0,23)
      END
      QI = OCONV(QI,'MCU')
      Q = OCONV(Q,'MCU')
      BEGIN CASE
         CASE QI = 'X'
            CRT @(67,13):PCL.BILL.REC<23>
            GOTO 22000
         CASE QI = 'EX'
            STOP
         CASE QI = ''
            Q = PCL.BILL.REC<23>
      END CASE
      IF BCLIENT.ID='01638' OR BCLIENT.ID = "01267" THEN
         PCL.BILL.REC<23>=Q'R%6'
      END ELSE
         PCL.BILL.REC<23>=Q'R%5'
      END
      RETURN

24000:* 24 Sales Code
      HELP = "Enter the AFS sales code. [X]=Back [EX]=Exit"
      CALL GEN.IN(67,14,PCL.BILL.REC<24>,'',Q,1,4,'','',2,67,14,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI = ''
            Q = PCL.BILL.REC<24>
         CASE QI = 'X'
            CRT @(67,14):PCL.BILL.REC<24>:
            RETURN
         CASE QI = 'EX'
            STOP
         CASE QI>=7000 AND QI<=7999
            READ TEST FROM F.SLS.CODE,QI ELSE
               CALL ELINE('Invalid sales code. Retry.')
               GOTO 24000
            END
         CASE 1
            GOTO 24000
      END CASE
      PCL.BILL.REC<24> = Q
      RETURN

25000:* 25 Bill Client#
      HELP="Enter client number or name to search. [EX]=Exit"
      CALL GEN.IN(0,22,'Enter Client Number : #####','',Q,0,25,'','',2,-5,22,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X' OR QI='EX' OR QI=''
            STOP
         CASE NOT(QI MATCHES "0N")
            CALL SOUNDEX.DISPLAY(QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            IF ITEM.LIST='' ! DCOUNT(ITEM.LIST<1>,@VM) > 1 THEN GOTO 1000
            IF NOT(NUM(ITEM.LIST<1,1>)) THEN GOTO 1000
            Q=ITEM.LIST<1,1>'R%5'
            READ TEST.REC FROM F.CLIENT,Q ELSE
               TEST.REC=''
               CALL ELINE("Not a valid client. Have Frt Pymt enter client first")
               GOTO 1000
            END
         CASE NUM(QI)
            Q = QI'R%5'
            READ TEST.REC FROM F.CLIENT,Q ELSE
               TEST.REC=''
               CALL ELINE("Not a valid client. Have Frt Pymt enter client first")
               GOTO 1000
            END
         CASE 1
            GOTO 1000
      END CASE
      PCL.BILL.REC<25>=Q
      RETURN
DISPLAY.RELATED.TRANS:***
      IF PCL.BILL.NDX.REC<1>#'' THEN
         GOSUB DA.TO.PA
         CRT @(0,3):@(-3):
         CRT @(0,3):'Bill Client : ':BCLIENT.ID:' ':BCLIENT.REC<2>
         CRT @(60,3):'Inv Date : ':INV.DATE 'D2/'
         CRT @(0,4):"Ln"'R#2 ':"Description"'L#41 ':"Value"'R#10 ':"Rate"'R#10 ':"Amount Due"'R#12':
         CRT @(0,5):DASH'R#2 ':DASH'L#41 ':DASH'L#10 ':DASH'L#10 ':DASH'L#12':

         LINES = DCOUNT(PA,@AM)
         IF LINES=1 THEN
            PCL.BILL.ID=PCL.BILL.NDX.ID:'*':PCL.BILL.NDX.REC<1,1>
            READ PCL.BILL.REC FROM F.PCL.BILL,PCL.BILL.ID ELSE
               CALL ELINE('Invalid entry! Line number does not exist')
               GOTO DISPLAY.RELATED.TRANS
            END
            RETURN
         END
         START.POS = 1
         DONE = 0
         LOOP UNTIL DONE DO
            FOR I = 1 TO 15
               CRT @(0,5+I):PA<START.POS+I-1>:@(-4)
            NEXT X
            CRT @(0,21):DDASH'R#2 ':DDASH'L#41 ':DDASH'L#10 ':DDASH'L#10 ':DDASH'L#12':
            CRT @(0,22):'''R#2 ':'''L#41 ':'''L#10 ':'''L#10 ':AMT.TOT'R26,#12':
ENTER.SELECTION:
            MASK = 'Enter Selection: '
            HELP = '[F]orward  [B]ack  [T]op [X] to leave [EX]it [##] to display trans'
            CALL GEN.IN(0,22,MASK,'',Q,0,20,'','',0,17,22,1,QI,HELP,0,23)
            Q = OCONV(Q,'MCU')
            BEGIN CASE
               CASE Q = 'X'
                  DONE=1
                  PCL.BILL.NDX.REC=''
                  CRT @(0,10):@(-3)
                  RETURN
               CASE Q = 'EX'
                  STOP
               CASE Q = 'T'
                  START.POS = 1
               CASE Q = 'F'
                  START.POS += 14
                  IF START.POS > LINES THEN START.POS = 1
               CASE Q = 'B'
                  START.POS -= 14
                  IF START.POS < 1 THEN START.POS = DIV(LINES,14) * 14 + 1
               CASE Q # '' AND NUM(Q)
                  DONE=1
                  PCL.BILL.ID=PCL.BILL.NDX.ID:'*':PCL.BILL.NDX.REC<1,Q>
                  READ PCL.BILL.REC FROM F.PCL.BILL,PCL.BILL.ID ELSE
                     CALL ELINE('Invalid entry! Line number does not exist')
                     GOTO ENTER.SELECTION
                  END
                  RETURN
               CASE 1
                  CALL ELINE('Invalid entry! You must enter "EX", "X", "F", "B" or ##.')
                  GOTO ENTER.SELECTION
            END CASE
         REPEAT
         CRT @(0,10):@(-3)
      END
      RETURN

DA.TO.PA:
      AMT.TOT = 0
      PA = ''
      DA.CNT = DCOUNT(PCL.BILL.NDX.REC<1>,@VM)
      FOR I = 1 TO DA.CNT
         LINE = ''
         LINE = PCL.BILL.NDX.REC<1,I>'R#2 '
         LNO=PCL.BILL.NDX.REC<1,I>
         PCL.BILL.ID=PCL.BILL.NDX.ID:'*':LNO
         READ PCL.BILL.REC FROM F.PCL.BILL,PCL.BILL.ID ELSE
            PCL.BILL.REC=''
            PCL.BILL.REC<14>='**Unknown**'
         END
         LINE := PCL.BILL.REC<14>'L#41 '
         LINE := PCL.BILL.REC<16>'R26,#10 '
         LINE := PCL.BILL.REC<15>'R37,#10 '
         LINE := PCL.BILL.REC<17>'R26,#12'
         AMT.TOT+=PCL.BILL.REC<17>
         PA<-1> = LINE
      NEXT I
      RETURN
*
EXIT.PROGRAM:*
*
   END
