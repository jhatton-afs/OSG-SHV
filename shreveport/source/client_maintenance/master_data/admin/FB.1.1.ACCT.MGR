*********************************************************************
* Program name : FB.1.1.ACCT.MGR
* Author       : Steve Barbee
* Date written : 05/24/12
* Library      : FBBP
* COPYRIGHT (C) 2018 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED.
*
* CLIENT UPS EMAIL ADDRESS MAINTENANCE
*
* Last updated by afs (AFSLOGISTICS\gbino) at 06:41:27 on 06/22/2018.
*
* Start modification history
* 092612 - JMK01 - HelpDesk#4051 - Lynda Garcia
* 021313 - JMK02 - SysAid#5259 - Account Manager Client Maintenance
* 051613 - JMK03 - SysAid#5973 - Employee Access
* 021714 - JMK04 - SysAid#8619 - Josh Clark Position Change
* 082014 - DRF01 - SysAid 11580 - Gave Elizabeth and Cindy access. I
*                  show that Cindy already has access.
* 020215 - DRF02 - SysAid 15109 - Gave Kathy Hendrickson access. I show
*                  that Elizabeth was given access under ticket 11580
*                  and Cindy already had access.
*                  added Rheina and Christian to have access.
* 050515 - DRF03 - SysAid 10652 - Update client list of changes for SAGE export
* 081115 - DRF04 - SysAid 19293 - Gave Cynthia access
* 070516 - GRB01 - SysAid 25575 - add operator table
* 062518 - GRB02 - ME 13337  - add UPS pdf email
* End modification history
*
************************************************************************

      GOSUB INITIALIZATION
      GOSUB OPEN.FILES
      GOSUB CHECK.AUTHORIZATION

      GOSUB DISPLAY.SCREEN
      GOSUB MAIN.PROCESS

      STOP
*****************************************************************
MAIN.PROCESS:
*****************************************************************
      LOOP
         GOSUB GET.CLIENT.INFO
      UNTIL CLIENT.QI = 'EX' DO
         GOSUB DISPLAY.SCREEN
         GOSUB PROMPT.FOR.CHANGES
      REPEAT

      RETURN
*****************************************************************
DISPLAY.SCREEN:
*****************************************************************

      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,PERIOD,PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)

      CRT @(0, 3):CLIENT.NUMBER.TEXT:@(-3)

      CRT @(0, 5):' 1 % Inb Sav Quoted.':
      IF CLIENT.REC<136>#'' THEN CRT @(32):CLIENT.REC<136>'R26,#6'
      CRT @(0, 6):' 2 % Out Sav Quoted.':
      IF CLIENT.REC<137>#'' THEN CRT @(32):CLIENT.REC<137>'R26,#6'
      CRT @(0, 7):' 3 % T/P Sav Quoted.':
      IF CLIENT.REC<138>#'' THEN CRT @(32):CLIENT.REC<138>'R26,#6'

      CRT @(0, 8):' 4 Outbound  Quote % Increase...':OCONV(CLIENT.REC<227>,"MR2")'R#6'
      CRT @(0, 9):' 5 Inbound   Quote % Increase...':OCONV(CLIENT.REC<228>,"MR2")'R#6'
      CRT @(0,10):' 6 3rd Party Quote % Increase...':OCONV(CLIENT.REC<229>,"MR2")'R#6'

      CRT @(0,11):' 7 Vendor Quote Limit % ..':@(32):OCONV(CLIENT.REC<262>,"MR2") "R#6"
      CRT @(0,12):' 8 Number Limit .......... ':@(37):CLIENT.REC<263>

      CRT @(41, 5):' 9 Automated Misroute          ':@(77):CLIENT.REC< 94>'L#1':@(-4)
      CRT @(41, 6):'10 Automated Misroute Letters  ':@(77):CLIENT.REC<139>'L#1':@(-4)
      CRT @(41, 7):'11 Number of Warning Letters   ':@(77):CLIENT.REC<140>'L#1':@(-4)
      CRT @(41, 8):'12 Type of Debit Memo          ':@(77):CLIENT.REC<142>'L#1':@(-4)
      CRT @(41, 9):'13 Misroute Minimum Difference ':CLIENT.REC< 95>'R26#6':@(-4)
      CRT @(41,10):'14 Misroute Minimum Debit Amt  ':CLIENT.REC<141>'R26#6':@(-4)
      CRT @(41,11):'15 Misroute Throw Away Amount  ':CLIENT.REC<143>'R26#6':@(-4)
      CRT @(41,12):'16 LCC Minimum Difference      ':CLIENT.REC<148>'R26#6':@(-4)
      CRT @(41,13):'17 Automated Misroute Emails   ':@(77):CLIENT.REC<171>'L#1':@(-4)
      CRT @(41,14):'18 Misroute Email address.....':@(75)
      CRT @(41,15):'19 UPS pdf Email address.....':@(75)     ; * GRB02
      RETURN
*****************************************************************
GET.CLIENT.INFO:
*****************************************************************
* Enter client number. If not on file then create if desired.
*
      CRT @(0,2):@(-3)
      CLIENT.NUMBER.TEXT = ''
      HELP="Enter client number or name to search. [N]=New [NT]=New-Traf-Surv [EX]=Exit"
      CALL GEN.IN(0,3,'Enter Client Number : #####','',Q,0,20,'','',2,-5,3,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X' OR QI='EX' OR QI=''
            CLIENT.QI = 'EX'
            RETURN
         CASE NOT(QI MATCHES "0N")
            CALL SOUNDEX.DISPLAY(QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            IF ITEM.LIST='' ! DCOUNT(ITEM.LIST<1>,@VM) > 1 THEN GOTO GET.CLIENT.INFO
            IF NOT(NUM(ITEM.LIST<1,1>)) THEN GOTO GET.CLIENT.INFO
            Q=ITEM.LIST<1,1>'R%5'
         CASE NUM(QI)
            Q = QI'R%5'
            READ CLIENT.REC FROM F.CLIENTS,Q ELSE
               IF Q[1,1] = "8" OR Q[1,1] = "9" OR Q[1,1] = "7" THEN
                  NULL
               END ELSE
                  IVIN = "S" ; IVIN<2> = QI
                  IVIN<3> = USER ; IVIN<4> = 1
                  IVOUT = "" ; FB.CUST = ""
                  CALL BUILD.GLOBAL.CUST.NOS(IVIN,IVOUT,F.CLIENTS,FB.CUST)
                  ID = IVOUT<1>
                  BF.ERR = IVOUT<2>
                  IF BF.ERR NE "" THEN
                     CALL ELINE(BF.ERR)
                     GOTO GET.CLIENT.INFO
                  END
*
                  IF ID = "" THEN
                     CALL ELINE("Unable to determine a valid client number")
                     GOTO GET.CLIENT.INFO
                  END
                  Q = ID'R%5'
               END
            END
         CASE 1
            GOTO GET.CLIENT.INFO
      END CASE
*
* Read client item
*
      CLIENT.ID=Q
*****************************************************************
CLIENT.READU:
*****************************************************************
      READU CLIENT.REC FROM F.CLIENTS,Q LOCKED
         WL.VIN = STATUS()
         WL.VOUT = ''
         CALL WHOS.LOCKING(WL.VIN, WL.VOUT)
         CALL ELINE('Client ':Q:' is locked by ':WL.VOUT<1>:'. (':WL.VOUT<2>:')')
         EXECUTE 'SLEEP 3'
         GOTO CLIENT.READU
      END THEN
         CLIENT.NAME = CLIENT.REC<2>
         ORIG.CLIENT.REC=CLIENT.REC
      END ELSE
         CLIENT.NAME = 'NOF'
         ORIG.CLIENT.REC = ''
      END
*
* Display menu and client data
*
      CBVIN=''
      CBVIN<1>=Q
      CALL CLIENT.BLOCK(CBVIN,CBVOUT,F.CAR.CTRL)
      CLIENT.NUMBER.TEXT='Client Number ':Q
      CLIENT.NUMBER.TEXT=CBVOUT<1>:'Client Number ':Q:'  -  ':CLIENT.NAME:@(-6)
      CRT @(0, 3):CLIENT.NUMBER.TEXT

      RETURN
*****************************************************************
PROMPT.FOR.CHANGES:
*****************************************************************
      PROMPT.NUM = 0

      LOOP
         EDIT.MASK = '##'
         HELP = 'Enter Line # to change, [EX]it'
         CRT @(0,22):'Enter Selection Number :':@(-4):
         CALL GEN.IN(25,22,EDIT.MASK,'',Q,0,15,'','',2,25,22,0,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
      UNTIL QI = 'EX' DO
         BEGIN CASE
            CASE QI = 'X'
               RETURN
            CASE QI = 'EX'
*This won't ever get executed because of Main loop conditional
            CASE QI = '' OR QI = ' '
               GOSUB 99000
               RETURN
            CASE QI < 1 OR QI > MAX.PROMPTS
            CASE QI # INT(QI)
            CASE 1
               PROMPT.NUM = QI
               GOSUB WHICH.PROMPT
         END CASE
      REPEAT
      IF QI='EX' THEN STOP

      RETURN
*****************************************************************
WHICH.PROMPT:
*****************************************************************
      ON PROMPT.NUM GOSUB INBOUND.PCT.SAVINGS.QUOTED, OUTBOUND.PCT.SAVINGS.QUOTED, THIRD.PARTY.PCT.SAVINGS.QUOTED, OUTBOUND.QUOTE.PCT.MARKUP, INBOUND.QUOTE.PCT.MARKUP, THIRD.PARTY.QUOTE.PCT.MARKUP, VEND.QUOTE.LIMIT.PCT, MAX.CARRIERS, AUTO.MISROUTE.OLA, AUTO.MISROUTE.LETTERS, NUM.WARNING.LETTERS, DEBIT.MEMO.TYPE, MISROUTE.MIN.DIFF, MISROUTE.DEBIT.MEMO.MIN.AMT, MISROUTE.THROW.AWAY.AMT, LCD.MIN.DIFF, AUTO.MISROUTE.EMAILS.YN, MISROUTE.EMAIL.ADDRESSES,UPS.EMAIL.ADDRESSES

      RETURN
*****************************************************************
OUTBOUND.QUOTE.PCT.MARKUP:
*****************************************************************
      HELP="Increase Outbound Quotes by this Percentage"
*
      CALL GEN.IN(32,8,CLIENT.REC<227>'R26,#6','AMT2',Q,0,6,'','',1,-6,8,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            Q=CLIENT.REC<227>
         CASE QI=' ' OR QI='NO' OR QI = 'N'
            Q='0'                        ; * NPR999
         CASE QI='X'
            RETURN
         CASE QI='EX'
            STOP
         CASE NUM(QI)
            IF (Q LT 100 OR Q GT 10000) AND Q # 0 THEN
               CALL ELINE('MUST BE 0 OR BETWEEN 1 AND 100%')
               GOTO OUTBOUND.QUOTE.PCT.MARKUP
            END
         CASE 1
            CALL ELINE('Invalid entry.')
            GOTO OUTBOUND.QUOTE.PCT.MARKUP
      END CASE
      CLIENT.REC<227>=Q
      CRT @(32,8):CLIENT.REC<227>'R26,#6':SPACE(3):
      RETURN
******************************************************************
INBOUND.QUOTE.PCT.MARKUP:
******************************************************************
      HELP="Increase Inbound Quotes by this Percentage"
      CALL GEN.IN(32,9,CLIENT.REC<228>'R26,#6','AMT2',Q,0,6,'','',1,-6,9,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            Q=CLIENT.REC<228>
         CASE QI=' ' OR QI='NO' OR QI = 'N'
            Q='0'                        ; * NPR999
         CASE QI='X'
            RETURN
         CASE QI='EX'
            STOP
         CASE NUM(QI)
            IF (Q LT 100 OR Q GT 10000) AND Q # 0 THEN
               CALL ELINE('MUST BE 0 OR BETWEEN 1 AND 100%')
               GOTO INBOUND.QUOTE.PCT.MARKUP
            END
         CASE 1
            CALL ELINE('Invalid entry.')
            GOTO INBOUND.QUOTE.PCT.MARKUP
      END CASE
      CLIENT.REC<228>=Q
      CRT @(32,9):CLIENT.REC<228>'R26,#6':SPACE(3):
      RETURN
******************************************************************
THIRD.PARTY.QUOTE.PCT.MARKUP:
******************************************************************
      HELP="Increase Third Party Quotes by this Percentage"
*
      CALL GEN.IN(32,10,CLIENT.REC<229>'R26,#6','AMT2',Q,0,6,'','',1,-6,10,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            Q=CLIENT.REC<229>
         CASE QI=' ' OR QI='NO' OR QI = 'N'
            Q='0'                        ; * NPR999
         CASE QI='X'
            RETURN
         CASE QI='EX'
            STOP
         CASE NUM(QI)
            IF (Q LT 100 OR Q GT 10000) AND Q # 0 THEN
               CALL ELINE('MUST BE 0 OR BETWEEN 1 AND 100%')
               GOTO THIRD.PARTY.QUOTE.PCT.MARKUP
            END
         CASE 1
            CALL ELINE('Invalid entry.')
            GOTO THIRD.PARTY.QUOTE.PCT.MARKUP
      END CASE
      CLIENT.REC<229>=Q
      CRT @(32,10):CLIENT.REC<229>'R26,#6':SPACE(3):
      RETURN
*****************************************************************
VEND.QUOTE.LIMIT.PCT:HELP="Enter The Max Vendor Quote Percentage over the Lowest Cost Carrier"
******************************************************************
      CALL GEN.IN(32,11,CLIENT.REC<262>'R26,#6','AMT2',Q,0,6,'','',1,32,11,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            Q=CLIENT.REC<262>
         CASE QI=' ' OR QI='NO' OR QI = 'N'
            Q='0'                        ; * NPR999
         CASE QI='X'
            RETURN
         CASE QI='EX'
            STOP
         CASE NUM(QI)
            IF (Q LT 1 OR Q GT 999999) AND Q # 0 THEN
               CALL ELINE('MUST BE 0 OR BETWEEN 1 AND 999%')
               GOTO VEND.QUOTE.LIMIT.PCT
            END
         CASE 1
            CALL ELINE('Invalid entry.')
            GOTO VEND.QUOTE.LIMIT.PCT
      END CASE
      CLIENT.REC<262>=Q
      CRT @(32,11):CLIENT.REC<262>'R26,#6':SPACE(3):
      RETURN
*****************************************************************
MAX.CARRIERS:
*****************************************************************
      HELP="Enter The Max number of carriers"
*
      CALL GEN.IN(37,12,CLIENT.REC<263>,'AMT0',Q,0,1,'','',1,37,12,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            Q=CLIENT.REC<263>
         CASE QI=' ' OR QI='NO' OR QI = 'N'
            Q='0'                        ; * NPR999
         CASE QI='X'
            RETURN
         CASE QI='EX'
            STOP
         CASE NUM(QI)
            IF (Q LT 1 OR Q GT 9) AND Q # 0 THEN
               CALL ELINE('MUST BE 0 OR BETWEEN 1 AND 9')
               GOTO MAX.CARRIERS
            END
         CASE 1
            CALL ELINE('Invalid entry.')
            GOTO MAX.CARRIERS
      END CASE
      CLIENT.REC<263>=Q
      CRT @(37,12):CLIENT.REC<263>:SPACE(3):
      RETURN
*****************************************************************
INBOUND.PCT.SAVINGS.QUOTED:
*****************************************************************
      HELP="Enter the inbound % of Savings to Quote or 'NO' for no quotes"
      IF CLIENT.REC<136> = 'NO' THEN
         CALL GEN.IN(32,5,'NO    ','',Q,1,6,'','',1,-6,5,0,QI,HELP,0,23)
      END ELSE
         CALL GEN.IN(32,5,CLIENT.REC<136>'R26,#6','AMT2',Q,0,6,'','',1,-6,5,0,QI,HELP,0,23)
      END
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            Q=CLIENT.REC<136>
         CASE QI=' ' OR QI='NO' OR QI = 'N'
            Q='NO'
         CASE QI='X'
            RETURN
         CASE QI='EX'
            STOP
         CASE NUM(QI)
            IF (Q LT 100 OR Q GT 10000) AND Q # 0 THEN
               CALL ELINE('MUST BE 0 OR BETWEEN 1 AND 100%')
               GOTO INBOUND.PCT.SAVINGS.QUOTED
            END
         CASE 1
            CALL ELINE('Invalid entry.')
            GOTO INBOUND.PCT.SAVINGS.QUOTED
      END CASE
      CLIENT.REC<136>=Q
      CRT @(32,5):CLIENT.REC<136>'R26,#6':SPACE(3):
      RETURN
*****************************************************************
OUTBOUND.PCT.SAVINGS.QUOTED:
*****************************************************************
      HELP="Enter the outbound % of Savings to Quote or 'NO' for no quotes"
      IF CLIENT.REC<137> = 'NO' THEN
         CALL GEN.IN(32,6,'NO    ','',Q,1,6,'','',1,-6,6,0,QI,HELP,0,23)
      END ELSE
         CALL GEN.IN(32,6,CLIENT.REC<137>'R26,#6','AMT2',Q,0,6,'','',1,-6,6,0,QI,HELP,0,23)
      END
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            Q=CLIENT.REC<137>
         CASE QI=' ' OR QI='NO' OR QI = 'N'
            Q='NO'
         CASE QI='X'
            RETURN
         CASE QI='EX'
            STOP
         CASE NUM(QI)
            IF (Q LT 100 OR Q GT 10000) AND Q # 0 THEN
               CALL ELINE('MUST BE 0 OR BETWEEN 1 AND 100%')
               GOTO OUTBOUND.PCT.SAVINGS.QUOTED
            END
         CASE 1
            CALL ELINE('Invalid entry.')
            GOTO OUTBOUND.PCT.SAVINGS.QUOTED
      END CASE
      CLIENT.REC<137>=Q
      CRT @(32,6):CLIENT.REC<137>'R26,#6':SPACE(3):
      RETURN
*****************************************************************
THIRD.PARTY.PCT.SAVINGS.QUOTED:
*****************************************************************
      HELP="Enter the third party % of Savings to Quote or 'NO' for no quotes"
      IF CLIENT.REC<138> = 'NO' THEN
         CALL GEN.IN(32,7,'NO    ','',Q,1,6,'','',1,-6,7,0,QI,HELP,0,23)
      END ELSE
         CALL GEN.IN(32,7,CLIENT.REC<138>'R26,#6','AMT2',Q,0,6,'','',1,-6,7,0,QI,HELP,0,23)
      END
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            Q=CLIENT.REC<138>
         CASE QI=' ' OR QI='NO' OR QI = 'N'
            Q='NO'
         CASE QI='X'
            RETURN
         CASE QI='EX'
            STOP
         CASE NUM(QI)
            IF (Q LT 100 OR Q GT 10000) AND Q # 0 THEN
               CALL ELINE('MUST BE 0 OR BETWEEN 1 AND 100%')
               GOTO THIRD.PARTY.PCT.SAVINGS.QUOTED
            END
         CASE 1
            CALL ELINE('Invalid entry.')
            GOTO THIRD.PARTY.PCT.SAVINGS.QUOTED
      END CASE
      CLIENT.REC<138>=Q
      CRT @(32,7):CLIENT.REC<138>'R26,#6':SPACE(3):
      RETURN

AUTO.MISROUTE.OLA:***
      MASK=CLIENT.REC<94>
      HELP='Automate misroutes in On-Line Audit? [Y]es [N]o [X]=Back'
      CALL GEN.IN(77,5,MASK,'',Q,0,1,'','',2,77,5,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=CLIENT.REC<94>
      BEGIN CASE
         CASE QI='X'
            RETURN
         CASE QI='Y' OR QI='1'
            CLIENT.REC<94>='Y'
         CASE QI='N' OR QI='0'
            CLIENT.REC<94>='N'
         CASE 1
            GOTO AUTO.MISROUTE.OLA
      END CASE
      CRT @(77,5):CLIENT.REC<94>:SPACE(2):
      RETURN
*****************************************************************
AUTO.MISROUTE.LETTERS:***
*****************************************************************
      MASK=CLIENT.REC<139>
      HELP='Automate misroute letters? [Y]es [N]o [X]=Back'
      CALL GEN.IN(77,6,MASK,'',Q,0,1,'','',2,77,6,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=CLIENT.REC<139>
      BEGIN CASE
         CASE QI='X'
            RETURN
         CASE QI='Y' OR QI='1'
            CLIENT.REC<139>='Y'
         CASE QI='N' OR QI='0'
            CLIENT.REC<139>='N'
         CASE 1
            GOTO AUTO.MISROUTE.LETTERS
      END CASE
      CRT @(77,6):CLIENT.REC<139>:SPACE(2):
      RETURN
*****************************************************************
NUM.WARNING.LETTERS:***
*****************************************************************      MASK=CLIENT.REC<140>
      HELP='Enter number of warning letters before debit memos. [1] [2] [N]o DM [X]=Back'
      CALL GEN.IN(77,7,MASK,'AMT2',Q,0,1,'','',2,77,7,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='X' THEN RETURN
      IF QI='' THEN Q=CLIENT.REC<140>
      IF NOT(Q=0 OR Q=1 OR Q=2 OR Q='N') THEN GOTO NUM.WARNING.LETTERS
      CLIENT.REC<140>=Q
      CRT @(77,7):CLIENT.REC<140>:SPACE(2):
      RETURN
*****************************************************************
DEBIT.MEMO.TYPE:***
*****************************************************************
      MASK=CLIENT.REC<142>
      HELP='Type of debit memos? [T]otal Freight Bill [O]ver Amount [X]=Back'
      CALL GEN.IN(77,8,MASK,'',Q,0,1,'','',2,77,8,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=CLIENT.REC<142>
      BEGIN CASE
         CASE QI='X'
            RETURN
         CASE QI='T' OR QI=1
            QI='T'
         CASE QI='O' OR QI=0
            QI='O'
         CASE 1
            GOTO DEBIT.MEMO.TYPE
      END CASE
      CLIENT.REC<142>=QI
      CRT @(77,8):CLIENT.REC<142>:SPACE(2):
      RETURN
*****************************************************************
MISROUTE.MIN.DIFF:***
*****************************************************************
      MASK=CLIENT.REC<95>
      HELP='Enter the core carrier minimum difference. [X]=Back'
      CALL GEN.IN(72,9,MASK,'AMT2',Q,0,6,'','',2,72,9,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='X' THEN RETURN
      IF QI='' THEN Q=CLIENT.REC<95>
      IF NOT(NUM(Q)) THEN GOTO MISROUTE.MIN.DIFF
      CLIENT.REC<95>=Q
      CRT @(72,9):CLIENT.REC<95>'R26,#6':SPACE(2):
      RETURN
*****************************************************************
MISROUTE.DEBIT.MEMO.MIN.AMT:***
*****************************************************************
      MASK=CLIENT.REC<141>
      HELP='Enter minimum amount for debit memos. [X]=Back'
      CALL GEN.IN(72,10,MASK,'AMT2',Q,0,6,'','',2,72,10,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='X' THEN RETURN
      IF QI='' THEN Q=CLIENT.REC<141>
      IF NOT(NUM(Q)) THEN GOTO MISROUTE.DEBIT.MEMO.MIN.AMT
      CLIENT.REC<141>=Q
      CRT @(72,10):CLIENT.REC<141>'R26,#6':SPACE(2):
      RETURN
*****************************************************************
MISROUTE.THROW.AWAY.AMT:***
*****************************************************************
      MASK=CLIENT.REC<143>
      HELP='Enter the amount too low to do a letter on. [X]=Back'
      CALL GEN.IN(72,11,MASK,'AMT2',Q,0,6,'','',2,72,11,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='X' THEN RETURN
      IF QI='' THEN Q=CLIENT.REC<143>
      IF NOT(NUM(Q)) THEN GOTO MISROUTE.THROW.AWAY.AMT
      CLIENT.REC<143>=Q
      CRT @(72,11):CLIENT.REC<143>'R26,#6':SPACE(2):
      RETURN
*****************************************************************
LCD.MIN.DIFF:***
*****************************************************************
      MASK=CLIENT.REC<148>
      HELP='Enter the LCC minimum difference. [X]=Back'
      CALL GEN.IN(72,12,MASK,'AMT2',Q,0,6,'','',2,72,12,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')                 ; * JMK01
      IF QI='X' THEN RETURN              ; * JMK01
      IF QI='' THEN Q=CLIENT.REC<148>    ; * JMK01
      IF NOT(NUM(Q)) THEN GOTO LCD.MIN.DIFF        ; * JMK01
      CLIENT.REC<148>=Q                  ; * JMK01
      CRT @(72,12):CLIENT.REC<148>'R26,#6':SPACE(2):
      RETURN

AUTO.MISROUTE.EMAILS.YN:***
      MASK=CLIENT.REC<171>               ; * JMK02
      HELP='Automated misroute emails? [Y]es [N]o [X]=Back'  ; * JMK02
      CALL GEN.IN(77,13,MASK,'',Q,0,1,'','',2,77,13,0,QI,HELP,0,23)    ; * JMK02
      QI=OCONV(QI,'MCU')                 ; * JMK02
      IF QI='' THEN QI=CLIENT.REC<171>   ; * JMK02
      BEGIN CASE                         ; * JMK02
         CASE QI='X'                     ; * JMK02
            RETURN                       ; * JMK02
         CASE QI='Y' OR QI='1'           ; * JMK02
            CLIENT.REC<171>='Y'          ; * JMK02
         CASE QI='N' OR QI='0'           ; * JMK02
            CLIENT.REC<171>='N'          ; * JMK02
         CASE 1                          ; * JMK02
            GOTO AUTO.MISROUTE.EMAILS.YN           ; * JMK02
      END CASE                           ; * JMK02
      CRT @(77,13):CLIENT.REC<171>:SPACE(2):
      RETURN
*****************************************************************
MISROUTE.EMAIL.ADDRESSES:
*****************************************************************
      HDG.TXT='Misrouting Notification'  ; * JMK01; * JMK02
      ETYPE = 'M'
      VIN = ''
      VOUT = ''
      IF CLIENT.REC<179>#'' THEN         ; * JMK09
         HDG.TXT=HDG.TXT:' Disabled for Troubleshooting'     ; * JMK09
      END                                ; * JMK09
      FOR ATT=1 TO 18                    ; * JMK02
         VOUT<ATT>=CLIENT.REC<152+ATT>   ; * JMK01; * JMK02
      NEXT ATT                           ; * JMK02
      VIN<1>=PROG.DESC                   ; * JMK01
      VIN<2>=PACK.NAME                   ; * JMK01
      VIN<3>=HDG.TXT                     ; * JMK01
      VIN<4>=DISPLAY.MODE                ; * JMK01
      VIN<5>=2                           ; * JMK01 PROC LVL 1=TO 2=CC 3=BCC
      IF ETYPE='M' THEN                  ; * JMK02
         VIN<5>=1                        ; * JMK31
         VIN<6>='Y'                      ; * JMK02
         VIN<7>='Y'                      ; * JMK02
         VIN<8>='Y'                      ; * JMK02
         VIN<9>='Y'                      ; * JMK02
      END                                ; * JMK02

      CALL FB.EMAIL(VIN,VOUT)            ; * JMK01

      FOR ATT=1 TO 18                    ; * JMK02
         CLIENT.REC<152+ATT>=VOUT<ATT>   ; * JMK01; * JMK02
      NEXT ATT                           ; * JMK02
      IF CLIENT.REC<153>#'' THEN         ; * JMK03; * JMK06
         IF CLIENT.REC<171>='' THEN      ; * JMK06
            CLIENT.REC<171>='Y'          ; * JMK03
         END                             ; * JMK06
      END                                ; * JMK03
      IF CLIENT.REC<154>#'' THEN         ; * JMK03; * JMK06
         IF CLIENT.REC<171>='' THEN      ; * JMK06
            CLIENT.REC<171>='Y'          ; * JMK03
         END                             ; * JMK06
      END                                ; * JMK03
      IF CLIENT.REC<155>#'' THEN         ; * JMK03; * JMK06
         IF CLIENT.REC<171>='' THEN      ; * JMK06
            CLIENT.REC<171>='Y'          ; * JMK03
         END                             ; * JMK06
      END                                ; * JMK03

      CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      GOSUB DISPLAY.SCREEN
      RETURN
      * Begin GRB02
*****************************************************************
UPS.EMAIL.ADDRESSES:
*****************************************************************
      WRITE CLIENT.REC ON F.CLIENTS,CLIENT.ID
      RELEASE F.CLIENTS,CLIENT.ID
      CALL UPS.EMAIL.MAINT(CLIENT.ID)
      READ CLIENT.REC FROM F.CLIENTS,CLIENT.ID ELSE NULL

      CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      GOSUB DISPLAY.SCREEN
      RETURN
      * End GRB02
*****************************************************************
INITIALIZATION:
*****************************************************************
      CALL GET.USER.NEW(USER,CH.NUM)
      PROMPT ''
      PROG.NAME='FB.1.1.ACCT.MGR'
      PROG.DESC='CLIENT MAINTENANCE for Acct. Managers'
      PACK.NAME='FREIGHT BILLING'
      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'FB.1.1.ACCT.MGR' ; UPL.VOUT = ''
      UPL.VIN<3> = USER
      UPL.VIN<4> = CH.NUM
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)
      EQU TRUE TO 1
      EQU FALSE TO 0
      DISPLAY.MODE = FALSE
      MASK.CHAR='-'
      CLIENT.REC = ''
      MAX.PROMPTS = 19                   ; * GRB02
      CLIENT.NUMBER.TEXT = ''
      CLIENT.QI = ''

      RETURN
*****************************************************************
CHECK.AUTHORIZATION:
*****************************************************************

      * Begin GRB01
      READV OP.FLG FROM F.OP,USER,16 ELSE
         OP.FLG = "N"
      END
      IF OP.FLG = "Y" THEN

      END ELSE
         STOP
      END

      RETURN

*****************************************************************
OPEN.FILES:
*****************************************************************

      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         CALL OPEN.ABORT('CLIENTS', PROG.NAME)
      END
      OPEN '','FB.ADJUST.CLIENT' TO F.ADJUST.CLIENT ELSE
         CALL OPEN.ABORT('FB.ADJUST.CLIENT', PROG.NAME)
      END
      OPEN '','AR.SLSMAN.1000.1' TO F.SLSMAN ELSE
         CALL OPEN.ABORT('AR.SLSMAN.1000.1',PROG.NAME)
      END
      OPEN '','BCTRL' TO F.BCTRL ELSE
         CALL OPEN.ABORT('BCTRL', PROG.NAME)
      END
      OPEN '','FB.CAR.CTRL' TO F.CAR.CTRL ELSE
         CALL OPEN.ABORT("FB.CAR.CTRL",PROG.NAME)
      END
      OPEN '','&SAVEDLISTS&' TO F.SL ELSE          ; * DRF03
         CALL OPEN.ABORT("&SAVEDLISTS&",PROG.NAME)           ; * DRF03
      END                                ; * DRF03

      OPEN '','OPERATOR' TO F.OP ELSE CALL OPEN.ABORT("OPERATOR",PROG.NAME)      ; * GRB01

      RETURN
*****************************************************************
99000:
*****************************************************************
* Any changes to what fields this program updates or any
*changes to this routine may require changes to FB.1.1, the
*subroutines called by FB.1.1 and in particular, the 99000 routine
*in FB.1.1.
      IF ORIG.CLIENT.REC # CLIENT.REC AND NOT(DISPLAY.MODE) THEN
         HELP='Options:  [Y]es [N]o'
         LN='Client information changed. Update? -'
         CALL GEN.IN(0,22,LN,'',Q,1,1,'','',2,-1,22,1,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI='Y'

               IF CLIENT.REC<93>='N' THEN
                  NVAL=DCOUNT(CLIENT.REC<84>,@VM)
                  IF CLIENT.REC<94>='Y' THEN
                     CALL ELINE('For Automated Misroute to be YES, Logistics Client must be YES. Contact Myra.')
                     RETURN
                  END
                  IF CLIENT.REC<139>='Y' THEN
                     CALL ELINE('For Misroute Letters to be YES, Logistics Client must be YES. Contact Myra.')
                     RETURN
                  END
                  IF CLIENT.REC<171>='Y' THEN

                     CALL ELINE('For Misroute Emails to be YES, Logistics Client must be YES. Contact Myra.')
                     RETURN
                  END
               END

               IF CLIENT.REC<139>='Y' THEN
                  IF CLIENT.REC<20>='N' THEN
                     CALL ELINE('For Misroute Letters to be YES, Vendors must be YES. Contact Myra.')
                     RETURN
                  END
               END

               IF CLIENT.REC<153>#'' THEN
                  IF CLIENT.REC<171>='' THEN
                     CLIENT.REC<171>='Y'
                  END
               END
               IF CLIENT.REC<154>#'' THEN
                  IF CLIENT.REC<171>='' THEN
                     CLIENT.REC<171>='Y'
                  END
               END
               IF CLIENT.REC<155>#'' THEN
                  IF CLIENT.REC<171>='' THEN
                     CLIENT.REC<171>='Y'
                  END
               END

               WRITE CLIENT.REC ON F.CLIENTS,CLIENT.ID
               IF CLIENT.ID[1,2]#'99' THEN         ; * DRF03
                  SAGE.VIN=''            ; * DRF03
                  SAGE.VIN<1>='NEW.SAGE.CLIENT'    ; * DRF03
                  SAGE.VIN<2>=CLIENT.ID  ; * DRF03
                  SAGE.VOUT=''           ; * DRF03
                  CALL UPD.SAGE.CHANGE.REC(SAGE.VIN,SAGE.VOUT,F.SL)    ; * DRF03
               END                       ; * DRF03
*
99010:
*
               SQLVIN=''
               SQLVIN<1>=USER
               SQLVIN<2>=CLIENT.ID
               SQLVOUT=''
               CALL UPD.SQL.CLIENT.SUB(SQLVIN,SQLVOUT,CLIENT.REC)
               CALL UPD.SQL.QCLIENT.SUB(SQLVIN,SQLVOUT,CLIENT.REC,F.SLSMAN)

SKIP.DIV:      ***
               ADJUST.CLIENT.ID=CLIENT.ID:'*':DATE():'*':TIME():'*':USER
               WRITE CLIENT.REC ON F.ADJUST.CLIENT,ADJUST.CLIENT.ID

               RETURN
            CASE QI='N'
               RELEASE F.CLIENTS,CLIENT.ID
               RETURN
            CASE 1
               GOTO 99000
         END CASE
      END

      CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      RELEASE F.CLIENTS,CLIENT.ID
      RETURN

99999:CALL ELINE('Invalid selection - View Only')
      RETURN

   END
