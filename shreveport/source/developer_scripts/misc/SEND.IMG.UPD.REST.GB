***      SUBROUTINE SEND.IMG.UPD.REST(VIN,VOUT)
***********************************************************************
* Program name : SEND.IMG.UPD.REST
* Author       : Greg Bino
* Date written : 01-11-2019
* Library      : FBBP
* COPYRIGHT (C) 2019 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED.
*
* SEND IMAGE USED UPDATE TO OCR WEBSERVICE INTERFACE
*
* Last updated by afs (AFSLOGISTICS\gbino) at 08:54:28 on 03/28/2019.
*
* Start modification history
* Mod 00 01-10-19, grb, 21092.0000  New program
* End modification history
*
************************************************************************
*
* Initialize variables
*
$INCLUDE PROG.ADMIN INC_OPTIONS
$INCLUDE UNIVERSE.INCLUDE UDO.H

      STATUS = 0
VIN=''
      IMAGE.NO = VIN<1>
      KEYER = VIN<2>
      IMAGE.NO = 35750933
      IMAGE.NO = 37029409
      KEYER = "MARY"
      ACTION = "U"
      CLIENT.ID = VIN<3>
    ****  ACTION = VIN<4>
****ACTION = "D"
      PRO = VIN<5>
      RESP.CNT=1
      RESP = ''
      VOUT=''
      TIME.LINE=''
      ST.TIME = TIME()
      TIME.LINE<1,1,1>=TIME()            ; * start time
      PROMPT ''
      TIMEOUT = 3000
      PROG.NAME='SEND.IMG.UPD.REST'

      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'SEND.IMG.UPD.REST' ; UPL.VOUT = ''
      ***    CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)
      OPEN 'CONTROL' TO FILE.CNTL ELSE
         CALL ELINE('UNABLE TO OPEN CONTROL FILE')
         RETURN
      END
      OPEN 'OCR.LOG' TO F.OCR ELSE
         CALL ELINE('UNABLE TO OPEN GRB FILE')
         RETURN
      END

      READ XMLPARAMS FROM FILE.CNTL,"CLIENT.OCR.IMG.UPDT" THEN
         URL = XMLPARAMS<1>
         SERVER = XMLPARAMS<2>

         LOGGING = XMLPARAMS<4>          ; * Y/N
         LOGFILE = XMLPARAMS<5>
         EMAIL.RECIP = XMLPARAMS<6>
         TEST.FLG = XMLPARAMS<7>
      END ELSE
***         URL = 'https://imagingws.qa.afs.net/images/update?imageKey=':IMAGE.NO:"&keyerName=":KEYER
         URL = 'https://imagingws.afs.net/images/update?imageKey=':IMAGE.NO:"&keyerName=":KEYER
         LOGFILE="IMG.UPD.LOG"
         LOGGING = "Y"
         EMAIL.RECIP = 'gbino@afs.net'
         TEST.FLG = @FALSE
      END
      
      EXECUTE "GET-LIST IMAGE"
      EOJ1=0
      LOOP
      	READNEXT IMAGE.NO ELSE EOJ1=1
      	UNTIL EOJ1 DO
      IF ACTION = "U" THEN
         URL = 'http://imagingws.afs.net/images/update?imageKey=':IMAGE.NO:"&keyerName=":KEYER
      END
      IF ACTION = "D" THEN
         URL = 'http://imagingws.afs.net/images/imported-date/remove?imageKey=':IMAGE.NO
      END

      IF LOGGING = "Y" OR LOGGING = 1 THEN
         LOGGING = @TRUE
      END ELSE
         LOGGING = @FALSE
      END
      IF LOGGING THEN
         STAT = PROTOCOLLOGGING(LOGFILE, "ON", 10)
      END

      TESTING = 0

      EMAIL.OUT=''
      EMAIL.OUT<1,-1>='GBINO@afs.net'
      EMAIL.OUT<1,-1>='NMEDDAUGH@afs.net'
      EMAIL.OUT<2,-1>= EMAIL.RECIP
      EMAIL.OUT<4>='FBBP_SEND.IMG.UPD.REST@afs.net'
      EMAIL.OUT<5>='Error while trying to update SEND.IMG.UPD.REST Web-Service .'

      GOSUB SEND.REST.REQUEST
      GOSUB PARSE.RESULTS

      TIME.LINE<1,1,1>=TIME()            ; * finish time
REPEAT
9999: * THE END
      IF LOGGING THEN
         LOG.RET = PROTOCOLLOGGING(LOGFILE,"OFF",10)
      END
      **    WRITE RESP ON F.GRB,"OCR.IMG.UPDT.RESP*":DATE():"*":TIME()
      IF FAILED THEN
         WRITE RESP ON F.OCR,"IMG.UPDT*":DATE():"*":TIME()
      END
      RETURN
**********************************************************************
SEND.REST.REQUEST:
**********************************************************************
      METHOD="GET"
*
      STAT = SETHTTPDEFAULT("VERSION", "1.1")
    **  STAT = CREATESECURITYCONTEXT(CTX, "TLSv1.2")
   **   STAT = CREATESECUREREQUEST(URL, METHOD, RESTGET,CTX)
      STAT = CREATEREQUEST(URL, METHOD, RESTGET)
      STAT = SETREQUESTHEADER(RESTGET, "Content-Type", "application/json;charset=utf-8")
      STAT = SUBMITREQUEST(RESTGET, 30000, "", HEADER, RESTDATA, HTTPSTATUS)
      RESP = ""
      RESP<1> = CLIENT.ID
      RESP<2> = IMAGE.NO
      RESP<3> = RESTDATA

      RETURN

************************************************************************
PARSE.RESULTS:
************************************************************************
      FAILED="??"
DEBUG
  RESP.SER = INDEX(RESTDATA, "has already been imported",1)
      BEGIN CASE
         CASE TRIM(RESTDATA) = 'Failed to Update'
            FAILED = 1
         CASE TRIM(RESTDATA) = 'Updated Successfully'
            FAILED = 0
         CASE TRIM(RESTDATA) = "OK"
            FAILED = 0
          
            CASE RESP.SER GT 0
            FAILED = 0
         CASE TRIM(RESTDATA)[34,25]= 'has already been imported'
         FAILED = 0
         CASE TRIM(RESTDATA)[1,24]= 'Error: This image (key #'
            FAILED = 9
            
         CASE 1
            FAILED = 1
      END CASE

      IF FAILED THEN
         VOUT = 'FAILED'
         GOSUB REPORT.INTERNAL.ERROR
      END ELSE
         VOUT = 'SUCESS'
      END
      RETURN

************************************************************************
REPORT.INTERNAL.ERROR:
************************************************************************
      EMAIL.START.TIME = TIME()

      EMAIL.OUT<6, -1> = 'URL = ':URL
      EMAIL.OUT<6, -1> = ' '
      EMAIL.OUT<6, -1> = 'IMAGE = ':IMAGE.NO
      IF TRIM(IMAGE.NO) = "" THEN
         EMAIL.OUT<6, -1> = 'NO IMAGE KEY PASSED '
      END
      EMAIL.OUT<6, -1> = ' '
      EMAIL.OUT<6, -1> = ' '
      EMAIL.OUT<6, -1> = 'ERROR = ':VOUT
      EMAIL.OUT<6, -1> = ' '
      EMAIL.OUT<6, -1> = 'CLIENT = ':CLIENT.ID
      EMAIL.OUT<6, -1> = ' '
      EMAIL.OUT<6, -1> = 'PRO = ':PRO
      EMAIL.OUT<6, -1> = ' '
      EVIN=EMAIL.OUT
      EVOUT=''
      CALL SENDMAIL(EVIN,EVOUT)

      RETURN
************************************************************************
REPORT.FATAL.ERROR:
************************************************************************
      EMAIL.START.TIME = TIME()
      EMAIL.OUT<1>=EMAIL.RECIP
      EMAIL.OUT<1,-1> = 'gbino@afs.net'
      EMAIL.OUT<1,-1> = 'dfriend@afs.net'
      EMAIL.OUT<1,-1> = 'nmeddaugh@afs.net'
      FATAL.ERROR.SUBJ = 'REST IMAGE UPDATE ERROR'
      EMAIL.OUT<5>=FATAL.ERROR.SUBJ
      EMAIL.OUT<6,-1> = 'URL = ':URL
      EVIN=EMAIL.OUT
      EVOUT=''
      CALL SENDMAIL(EVIN,EVOUT)
      IDATE=DATE()
      ITIME=TIME()
      TIME.BLOCK=INT(ITIME/600)
      *  VOUT<1> = "ERROR"
      RETURN
   END
