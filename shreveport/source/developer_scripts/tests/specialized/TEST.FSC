********
*  This is a complex program to TEST FSC!  It is not a Quick Utility
*  Do not Delete this program
********
*
* 012609 - NPR01 - T090105 - Add calcs for Percentage adjustments per state and take into account caps set if any.
*
      PROG.NAME='TEST.FSC'
      PACK.NAME='FREIGHT BILLING'
      PROG.DESC='Test Fuel Sur Charges'
       UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'TEST.FSC' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
       CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
      CO.NAME='AFS Logistics'

      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         CALL OPEN.ABORT("CLIENTS",PROG.NAME)
         STOP
      END

      OPEN '','FB.TABLES' TO F.TABLES ELSE
         CALL OPEN.ABORT("TABLES",PROG.NAME)
         STOP
      END
      OPEN '','CARRIERS' TO F.CARRIERS ELSE
         CALL OPEN.ABORT("CARRIERS",PROG.NAME)
      END
      OPEN '','FB.BC.FSC' TO F.NFSC ELSE
         CALL OPEN.ABORT('FB.BC.FSC',PROG.NAME)
      END
      READV LEGAL.STATES FROM F.TABLES,'LEGAL.STATES',1 ELSE
         CALL ELINE('Unable to read TABLES LEGAL.STATES')
         ABORT
      END
      BILL.DATE=''
      CLIENT.ID=''
      CLIENT.ID.HOLD=''
      CARRIER.ID=''
      FREIGHT.AMT=''
      FSC.AMT=0
      WEIGHT=0
      CARRIER.ID=''
      CARRIER.NAME=''
      CARRIER.STREET=''
      CARRIER.CITY=''
      ORIG.STATE=''
      DEST.STATE=''
      STATE.ADJ.ARRAY=''

*---- Enter client number

      GOSUB GET.SCREEN.DSP
100:
      GOSUB 8100                         ; * Display screen
      SEQ.FLAG = 0
      HELP = "Enter the client number [X] = Exit [EX] = Exit"
      IF CLIENT.ID = '' THEN
         MASK='#####'
      END ELSE
         MASK = CLIENT.ID'R%5'
      END
      CALL GEN.IN(9,3,MASK,'',Q,0,20,'','',2,-5,3,1,QI,HELP,0,23)
105:***
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE OCONV(QI,'MCU') = 'EX' ! QI = 'X'
            STOP
*        CASE QI = '' & CLIENT.ID = '' ; ** Null IS a valid Client... for Carrier only FSC
*           STOP
         CASE QI = ''
            Q = CLIENT.ID
            CLIENT.NAME=''
            IF CLIENT.ID.HOLD = "" THEN GO 200
         CASE NOT(QI MATCHES "0N")
            VIN=0                        ; * Starting Chars In
            VOUT=''
            CALL SOUNDEX.DISPLAY.NEW(VIN,VOUT,QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,
               TIME.DATE,1)
            BEGIN CASE
               CASE ITEM.LIST = ''

                  GO 100                 ; * START OVER
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                  GO 100                 ; * START OVER
               CASE 1
                  IF NUM(ITEM.LIST<1,1>) THEN
                     QI=ITEM.LIST<1,1>
                     Q =QI
                     GO 105
                  END
                  GO 100
            END CASE
         CASE NUM(QI)
            Q = QI'R%5'
         CASE 1
            GO 100                       ; * START OVER
      END CASE

*---- Get client name

      IF CLIENT.ID # Q THEN CLIENT.ID = Q'R%5'
      READ DCLIENT FROM F.CLIENTS,CLIENT.ID ELSE
         CALL ELINE("ERROR - Client ":CLIENT.ID:" not on file.")
         GO 100                          ; * START OVER
      END
      CLIENT.NAME = DCLIENT<2>
      CLIENT.CITY = DCLIENT<4>
      CLIENT.STATE = DCLIENT<5>
      CRT @(9,3):CLIENT.ID:' ':CLIENT.NAME:@(-4)
*
      CLIENT.ID.HOLD = CLIENT.ID
*
*----
* Enter carrier
*

200:
      IF CARRIER.ID # '' THEN MASK = CARRIER.ID'R%5' ELSE MASK = '#####'
      HELP = "Enter the carrier number. [X]=Back [EX]=Exit"
      CALL GEN.IN(9,4,MASK,'',Q,0,20,'','',2,-5,4,0,QI,HELP,0,23)
205:***
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE OCONV(QI,'MCU') = 'X'
            CRT @(9,4):@(-4):
            GO 100
         CASE QI = 'EX'
            STOP
         CASE NOT(QI MATCHES "0N")
            VIN=0                        ; * Starting Chars In
            VOUT=''
            CALL SOUNDEX.DISPLAY.NEW(VIN,VOUT,QI,'CARRIERS','SDX.CARRIER,NAME','1,2,3,4',ITEM.LIST)
            GOSUB 8100                   ; * Display screen
            GOSUB 8200
            BEGIN CASE
               CASE ITEM.LIST = ''
                  GO 200                 ; * ENTER CARRIER
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                  GO 200                 ; * ENTER CARRIER
               CASE ITEM.LIST # ''
                  IF NUM(ITEM.LIST<1,1>) THEN
                     QI = ITEM.LIST<1,1>
                     Q = QI
                     GO 205
                  END
                  GO 200                 ; * ENTER CARRIER
            END CASE
         CASE QI = ''
            Q = CARRIER.ID
         CASE NUM(QI)
            Q = QI'R%5'
         CASE 1
            GO 200                       ; * ENTER CARRIER
      END CASE
      CARRIER.ID=Q
      READ CARRIER.REC FROM F.CARRIERS,CARRIER.ID ELSE
         CALL ELINE("ERROR - Carrier ":CARRIER.ID:" not on file.")
         GO 200                          ; * ENTER CARRIER
      END
      CARRIER.NAME = CARRIER.REC<1>
      CARRIER.STREET = TRIM(CHANGE(CARRIER.REC<2>,@VM,' '))
      CARRIER.CITY = CARRIER.REC<3>
      CARRIER.STATE = CARRIER.REC<4>
      TEXT=TRIM(CARRIER.ID:' ':CARRIER.NAME:' ':CARRIER.STREET:' ':CARRIER.CITY)
      CRT @(9,4):TEXT[1,70]:
*****************************************************************
      READ DFSC FROM F.NFSC,"B*":CARRIER.ID ELSE DFSC=''
      READ DFSC FROM F.NFSC,"C*":CARRIER.ID:"*":CLIENT.ID ELSE NULL
      IF DFSC='' THEN
         CALL ELINE("Error! No FSC setup for Carrier: ":CARRIER.ID:" or Carrier/Client ":CARRIER.ID:"*":CLIENT.ID)
         GO 200
      END
*****************************************************************
300:***
      IF BILL.DATE # '' THEN
         MASK = BILL.DATE'D2/'
      END ELSE
         MASK = 'MM/DD/YY'
      END
      HELP = "Enter Pro Date. [T]oday "
      CALL GEN.IN(16,7,MASK,'DATE',Q,0,8,'','',2,-8,7,0,QI,HELP,0,23)
      IF OCONV(QI,'MCU')='X' THEN
         CRT @(16,7):@(-4)
         GO 200
      END
      IF OCONV(QI,'MCU')='T' THEN
         Q=DATE()
      END
      IF OCONV(QI,'MCU')='EX' THEN STOP
      IF QI='' AND BILL.DATE='' THEN
         CALL ELINE('Entry is required')
         GO 300
      END
      IF QI='' THEN
         QI=BILL.DATE
         Q =QI
      END
      BILL.DATE=Q
      CRT @(16,7):OCONV(BILL.DATE,'D2/'):
400:*** Enter Bill Amount
************ Enter Carrier Charges
      HELP='Enter Freight Charges (May Include FSC AMOUNTS)'
      CALL GEN.IN(16,8,FREIGHT.AMT'R26#9','AMT2',Q,0,9,'','',2,-9,
         8,0,QI,HELP,0,23)
      IF OCONV(QI,'MCU')='X' THEN
         CRT @(16,8):@(-4)
         GO 300
      END
      IF OCONV(QI,'MCU')='EX' THEN STOP
      IF QI='' AND FREIGHT.AMT='' THEN
         CALL ELINE('Entry is required')
         GO 400
      END
      IF QI='' THEN
         QI=FREIGHT.AMT
         Q =QI
      END
      FREIGHT.AMT=Q
      CRT @(16,8):FREIGHT.AMT'R26#9':
500:*** Enter FSC Amount
************ Enter Carrier's FSC Charges
      HELP='Enter the FSC amount on the Bill (Will be subtracted from Freight Charge'
      CALL GEN.IN(16,9,FSC.AMT'R26#9','AMT2',Q,0,9,'','',2,-9,
         9,0,QI,HELP,0,23)
      IF OCONV(QI,'MCU')='X' THEN
         CRT @(16,9):@(-4)
         GO 400
      END
      IF OCONV(QI,'MCU')='EX' THEN STOP
      IF QI='' AND FSC.AMT='' THEN
         CALL ELINE('Entry is required')
         GO 500
      END
      IF QI='' THEN
         QI=FSC.AMT
         Q =QI
      END
      FSC.AMT=Q
      CRT @(16,9):FSC.AMT'R26#9':
600:*** Enter Weight
************ Enter the Weight of the shipment (Used to Flip to TL Mode)
      HELP='Enter the Weight of the Shipment - Used to Switch to TL Calculation table'
      CALL GEN.IN(16,10,WEIGHT'R#9','',Q,0,9,'','',2,-9,
         10,0,QI,HELP,0,23)
      IF OCONV(QI,'MCU')='X' THEN
         CRT @(16,10):@(-4)
         GO 500
      END
      IF OCONV(QI,'MCU')='EX' THEN STOP
*       IF QI='' AND WEIGHT='' THEN
*         CALL ELINE('Entry is required')
*         GO 600
*       END
      IF QI='' THEN
         QI=WEIGHT
         Q =QI
      END
      IF Q < 0 THEN
         CALL ELINE("Weight must be a positive number")
         GO 600
      END
      WEIGHT=Q
      CRT @(16,10):WEIGHT'R#9':
700:*** Enter Origin State
************ Enter the Origin State (Used for Xpedx XP code)
      HELP="Enter the Origin State Abbreviation... Used for Xpedx's XP Code"
      CALL GEN.IN(16,11,ORIG.STATE'R#2','',Q,0,10,'','',2,-2,11,0,QI,HELP,0,23)
      IF OCONV(QI,'MCU')='X' THEN
         CRT @(16,11):@(-4)
         GO 600
      END
      IF OCONV(QI,'MCU')='EX' THEN STOP
      IF QI=' ' AND ORIG.STATE#'' THEN QI='' ; ORIG.STATE=''
      IF QI='' THEN
         QI=ORIG.STATE
         Q =QI
      END
      IF Q # '' THEN
         Q=OCONV(Q,'MCU')
         LOCATE Q IN LEGAL.STATES<1> SETTING POS ELSE
            CALL ELINE(Q:' is not a valid state abbreviation')
            GO 700
         END
      END
      ORIG.STATE=Q
      CRT @(16,11):ORIG.STATE'R#2':

      LOCATE ORIG.STATE IN DFSC<31> SETTING ORIG.ST.POS THEN
         ADJ.VAL = DFSC<32,ORIG.ST.POS> + 0
         BA.FLAG = DFSC<33,ORIG.ST.POS>
         IO.FLAG = DFSC<37,ORIG.ST.POS>
         BEGIN CASE
            CASE IO.FLAG = "I"
               IO.STR = "Inbound Only"
            CASE IO.FLAG = "O"
               IO.STR = "Outbound Only"
            CASE 1
               IO.STR = "In & Outbound"
         END CASE
         CRT @(20,11):"Adj. ":DFSC<32,ORIG.ST.POS> 'R37' :" %"
         IF BA.FLAG = "A" THEN
            CRT @(20,12):"After  Cap " :" ":IO.STR
         END
         IF BA.FLAG = "B" THEN
            CRT @(20,12):"Before Cap ":" ":IO.STR
         END
*         CRT @(20,11):"Adj. ":DFSC<32,ORIG.ST.POS> 'R37#6' :" %":
*         IF BA.FLAG = "A" THEN CRT " After  Cap" :
*         IF BA.FLAG = "B" THEN CRT " Before Cap" :
*         IO.FLAG = DFSC<37,ORIG.ST.POS>
*         IF IO.FLAG NE "" THEN
*            CRT "<":IO.FLAG:">"
*         END ELSE
*            CRT
*         END
      END

800:*** Enter Destination State
************ Enter the Destination State
      HELP="Enter the Destination State Abbreviation."
      CALL GEN.IN(16,13,DEST.STATE'R#2','',Q,0,10,'','',2,-2,13,0,QI,HELP,0,23)
      IF OCONV(QI,'MCU')='X' THEN
         CRT @(16,13):@(-4)
         GO 700
      END
      IF OCONV(QI,'MCU')='EX' THEN STOP
      IF QI=' ' AND DEST.STATE#'' THEN QI='' ; DEST.STATE=''
      IF QI='' THEN
         QI=DEST.STATE
         Q =QI
      END
      IF Q # '' THEN
         Q=OCONV(Q,'MCU')
         LOCATE Q IN LEGAL.STATES<1> SETTING POS ELSE
            CALL ELINE(Q:' is not a valid state abbreviation')
            GO 800
         END
      END
      DEST.STATE=Q
      CRT @(16,13):DEST.STATE'R#2':

      LOCATE DEST.STATE IN DFSC<31> SETTING DEST.ST.POS THEN
         ADJ.VAL = DFSC<32,DEST.ST.POS> + 0
         BA.FLAG = DFSC<33,DEST.ST.POS>
         IO.FLAG = DFSC<37,DEST.ST.POS>
         BEGIN CASE
            CASE IO.FLAG = "I"
               IO.STR = "Inbound Only"
            CASE IO.FLAG = "O"
               IO.STR = "Outbound Only"
            CASE 1
               IO.STR = "In & Outbound"
         END CASE
         CRT @(20,13):"Adj. ":DFSC<32,DEST.ST.POS> 'R37#6' :" %"
         IF BA.FLAG = "A" THEN
            CRT @(20,14):"After  Cap ":" ":IO.STR
         END
         IF BA.FLAG = "B" THEN
            CRT @(20,14):"Before Cap ":" ":IO.STR
         END
      END

900:  *** Everything OK?
      CRT @(0,23):"Press [Enter] to Calculate FSC: ":
      INPUT NUL:
      IF OCONV(NUL,'MCU')='EX' THEN STOP
      IF OCONV(NUL,'MCU')='X' THEN
         CRT @(0,23):@(-4):
         GO 800
      END
      CRT @(0,23):@(-4):
***********************************************************************
* Calculate the FSC Charge
***********************************************************************
      FREIGHT.AMOUNT=FREIGHT.AMT-FSC.AMT
      VIN=''
      VIN<1>=BILL.DATE
      VIN<2>=WEIGHT
      VIN<3>=''                          ; * Don't Have Miles
      VIN<6>=FREIGHT.AMOUNT
      VIN<7>=ORIG.STATE                  ; * Special for Xpedx
      VIN<8>=DEST.STATE                  ; * Special for AFS
*
*
      CALL CALC.FSC(VIN,VOUT,DFSC,F.TABLES)
*
* NPR01
*
      STATE.ADJ.ARRAY    = VOUT<22>  ;* Adjust State - CA,AZ etc
      STATE.ADJ.ARRAY<2> = VOUT<23>  ;* Adjustment Value
      STATE.ADJ.ARRAY<3> = VOUT<24>  ;* Add before or after cap
      STATE.ADJ.ARRAY<4> = VOUT<25>  ;* Cap amount actually applied
      STATE.ADJ.ARRAY<5> = VOUT<26>  ;* Post cap Adjustment for State, to be applied
*
*      STATE.ADJ.PERC = SUM(STATE.ADJ.ARRAY<2>)
      STATE.ADJ.PERC = VOUT<28>                 ;*State Adjustment applied

      STATE.ADJ.IO.FLAG = VOUT<29>  ;* Apply State Adj. to Inbound/Outbound or both types of shipments
*
      ACTUAL.ST.ADJ.PERC = STATE.ADJ.PERC       ;* May be different if Cap applied
*
      N.ADJ = DCOUNT(STATE.ADJ.ARRAY<1>,@VM)
      IF N.ADJ GT 2 THEN
         CALL ELINE("More than one destination and or Originating State ??")
         N.ADJ = 2
      END
*
      CAP.APPLIED = STATE.ADJ.ARRAY<4>

      IF VOUT<3> = CAP.APPLIED THEN
         ACTUAL.ADJ.PERC = CAP.APPLIED - VOUT<27>     ;* Cap Perc less Pre Cap Perc
      END ELSE
         ACTUAL.ADJ.PERC = ACTUAL.ST.ADJ.PERC
      END

*
*
* NPR01
*
      LTL.PERC.CAP = DFSC<34> + 0
      TL.PERC.CAP  = DFSC<35> + 0
      TL.MILE.CAP  = DFSC<36> + 0


      MODE = VOUT<17>
      BEGIN CASE
         CASE MODE = "LTL"
            CAP.VALUE = LTL.PERC.CAP
         CASE MODE = "TL"
            CAP.VALUE = TL.PERC.CAP
         CASE 1
            CAP.VALUE = ""
      END CASE

*
      IF VOUT<2>=1 THEN MIN.FLAG='YES' ELSE MIN.FLAG='NO'
      BEGIN CASE
         CASE VOUT<4> # ''               ; * Error Condition
            CRT @(0,13):"The Following Errors have occoured:"
            CRT @(0,14):VOUT<4>
         CASE VOUT<16>=0                 ; * Lookup Method
            CRT @(0,15):STR("=",45)
            CRT @(0,16):"Method              : Lookup":
            CRT @(0,17):"FSC Calc Eff Date   : ":VOUT<15>'D2/':
            CRT @(0,18):"National Index Name : ":VOUT<19>:
            CRT @(0,19):"Delay Days          : ":VOUT<11>:
            CRT @(0,20):"Nat Index Price Date: ":VOUT<12>'D2/'
            CRT @(0,21):"FSC Minimum         : ":MIN.FLAG
            CRT @(0,22):MODE "L#3": " Cap Percentage  : ":CAP.VALUE 'R37#6'
            CRT @(49,06):"National Fuel Price : ":VOUT<13>'R37#6'
            CRT @(49,07):"Converted Nat Price : ":VOUT<14>'R37#6'
            CRT @(49,08):"Table Mode          : ":VOUT<17> 'R#6'
            CRT @(49,09):"FSC Calc %          : ":VOUT<3>'R37#6'
            CRT @(49,10):"Calculated FSC      : ":VOUT<6>'R37#6'
            CRT @(49,12):"FSC Calc %  Pre Adj : ":VOUT<27>'R37#6'
            CRT @(49,16):"NET Fuel Sur Charge : ":
         CASE VOUT<16>=1                 ; * Formula Method
            CRT @(0,15):STR("=",45)
            CRT @(0,16):"Method              : Formula":
            CRT @(0,17):"FSC Calc Eff Date   : ":VOUT<15>'D2/':
            CRT @(0,18):"National Index Name : ":VOUT<19>:
            CRT @(0,19):"Delay Days          : ":VOUT<11>:
            CRT @(0,20):"Nat Index Price Date: ":VOUT<12>'D2/'
            CRT @(0,21):"FSC Minimum         : ":MIN.FLAG
            CRT @(0,22):MODE "L#3": " Cap Percentage  : ":CAP.VALUE 'R37#6'

             CRT @(49,06):"National Fuel Price : ":VOUT<13>'R37#6'
             CRT @(49,07):"Converted Nat Price : ":VOUT<14>'R37#6'
             CRT @(49,08):"Formula Mode        : ":VOUT<17> 'R#6'
             CRT @(49,09):"Base Fuel Price     : ":VOUT<18>'R37#6'
             CRT @(49,10):"Fuel Over Amount    : ":VOUT<7>'R37#6'
             CRT @(49,11):"Fuel Increments Over: ":VOUT<8> 'R#6'
             CRT @(49,12):"Starting Percentage : ":VOUT<9>'R37#6'
             CRT @(49,13):"Over Percentage     : ":VOUT<10>'R37#6'
             CRT @(49,14):"FSC Calc %  Pre Adj : ":VOUT<27>'R37#6'

             IF VOUT<3> = CAP.APPLIED THEN
                CRT @(49,15) : "FSC Adj. %          : ":ACTUAL.ADJ.PERC 'R37#6'
                CRT @(49,16) : CAP.APPLIED 'R37#6' :" % Cap Applied "
             END ELSE
                CRT @(49,15):"FSC State Adj. %    : ":ACTUAL.ADJ.PERC 'R37#6'
*                CRT @(49,16):"Cap Applied ":CAP.APPLIED  'R37#6'
             END

            CRT @(49,20):"FSC Calc Percent    : ":VOUT<3>'R37#6'     ;*NPR01
            CRT @(49,21):"Calculated FSC      : ":VOUT<6>'R37#6'     ;*NPR01
*NPR02            CRT @(49,22):"NET Fuel Sur Charge : ":VOUT<1>'R37#6'     ;*NPR01
            CRT @(49,22):"NET Fuel Sur Charge : ":OCONV(VOUT<1>,'MR2') 'R#6'     ;*NPR01 ; *NPR02
      END CASE
      CRT @(0,23):"Press [Enter] to continue: ":
      INPUT NUL:
      GOSUB 8100
      GOSUB 8200
      GO 300
GET.SCREEN.DSP:***
*---- Display screen to send to subroutine
*
      SCREEN.DSP = @(0, 3):'Client : '
      SCREEN.DSP := @(0, 4):'Carrier: '
      SCREEN.DSP := @(0, 5):STR('-',79)
      SCREEN.DSP := @(0, 7):'Date          :'
      SCREEN.DSP := @(0, 8):'Freight Amount:'
      SCREEN.DSP := @(0, 9):'FSC Amount    :'
      SCREEN.DSP := @(0,10):'Weight        :'
      SCREEN.DSP := @(0,11):'Orig State    :'
      SCREEN.DSP := @(0,13):'Dest State    :'
      RETURN
8100:
*---- Display screen
*

      CALL AFS.SCR.REFRESH(PROG.NAME, PROG.DESC, PACK.NAME, CO.NAME,TIME.DATE, 1)
      CRT SCREEN.DSP

      CRT @(20,2):".......N E W E R  W A Y......."

      RETURN
8200:
*---- Display data
*

      DATA.DSP = @(9,3):CLIENT.ID:' ':CLIENT.NAME:@(-4)
      TEXT=CARRIER.ID:' ':CARRIER.NAME:' ':CARRIER.STREET:' ':CARRIER.CITY
      DATA.DSP := @(9,4):TEXT[1,70]

      IF BILL.DATE#'' THEN DATA.DSP := @(16,7):BILL.DATE'D2/'
      CRT DATA.DSP
      RETURN
   END
