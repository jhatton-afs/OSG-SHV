***************************************************
* Program name : BUILD.DF.NW
* Author       : David R. Friend
* Date written : August 6, 1997
* Library      : FBBP
* COPYRIGHT (C) 2016 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED.
*
* Freight Billing/EDI Package
*
* Last updated by afs (AFSLOGISTICS\gbino) at 07:06:22 on 05/13/2019.
*
* DESCRIPTION  : This program is the front-end for building a delimited
*                file for all the bills paid during the specified dates
*                so data can be worked with under excel.  This program
*                collects the input then calls BUILD.DF.SUB to actually
*                create the tab-delimited file.
*
* Start modification history
* 03/24/99 Tami Seago
* 08/15/02 James Barberousse
* 11/01/02 JMK01 - ADD LCC FOR FILTER
* 01/21/03 JMK02 - ADD EMAIL OPTIONS FOR ALL CLIENTS
* 11/13/03 JMK03 - ADD FILTERS TO SS FROM BCTRL
* 11/25/03 JMK04 - ADJUST FILTERS FROM BCTRL
* 11/26/03 JMK05 - FILTER ADJUSTMENTS FROM BCTRL
* 01/30/04 JMK06 - ADJUST SUPER USER ACCESS
* 02/05/04 JMK07 - ADD RERATE FOR DARLING 00850
* 02/10/04 JMK08 - ADD TRB EMAIL OVERRIDE
* 02/11/04 JMK09 - REMOVE COMM.ACCESS FROM SUPER.USER
* 04/06/04 JMK10 - ADD ACCESS FOR DWIMBERLY
* 06/17/04 JMK11 - ADD ACCESS FOR MWADE
* 06/21/04 JMK12 - ADD ACCESS FOR MPACE
* 07/26/04 JMK13 - ADD ACCESS FOR SSHAFER
* 11/05/04 JMK14 - ADD COMPANY SELECTION OPTION FOR CLIENT
* 11/18/04 JMK15 - RESOLVE VNAV ERROR WITH CLIENT.REC
* 04/08/05 JMK16 - ADD SELECT LIST FOR CLIENTS
* 04/21/05 JMK17 - ADD TL FILTER OPTIONS
* 04/21/05 JMK18 - ADD PERIOD DEFINED OPTIONS
* 04/21/05 JMK19 - CHANGE ACCESS NOTIFICATION MESSAGES
* 04/29/05 JMK20 - ADD JOHN ESPOSITO TO ACCESS LIST
* 06/14/05 JMK21 - ADD NICK RATH TO ACCESS LIST FOR PARCEL AIR AND GROUND
* 08/04/05 JMK22 - ADD ELECTRONIC BILLS INC/EXC OPTION
* 08/04/05 JMK23 - CHECK FOR LAST PROCESSED DATE AGAINST BEG DATE
* 08/30/05 JMK24 - ADD ACCESS FOR RRANEY
* 12/07/05 JMK25 - CHANGE SUBJECT FOR ACCESS VIOLATIONS
* 02/28/06 JMK26 - ADD SAMPLE ONE OPTION FOR EXPEDITES PROCESSING
* 05/01/06 JCW01 - ADD INBOUND/OUTBOUND/THIRD PARTY OPTION
* 05/22/06 JMK27 - ADD REJ FILTER OPTIONS
* 07/27/06 JMK28 - ALLOW NON-NUMERIC DIVISION IDS
* 01/16/07 JCW02 - C200611150003 ADD "FEDEX" CARRIER OPTION
* 05/29/08 NPR01 - C081365 SELECT ALL 'CHILDREN' FOR CORP CLIENTS 80000 - 89999
* 06/23/08 JMK29 - C200611060006 /required by 11/10/06  / SS Report Delay Option Request
* 06/23/08 JMK30 - C081534 - Special SS report for saving spread between pricing arrangements
* 05/29/08 NPR02 - CHANGED SAVEDLIST ID WHEN SELECTING ALL 'CHILDREN' FOR CORP CLIENTS 80000 - 89999
* 11/17/08 JMK31 - C081905 - Allow multiple discounts on BM in OLA
* 12/05/08 JMK32 - C082639 - Add option to remove file breaks for Excel 2007 format
* 12/17/08 JMK33 - C082708 - Grant access to run SS reports
* 01/23/09 JMK34 - C090114 - Carrier Cox - SS Reports
* 02/05/09 JMK35 - SSMITH ACCESS TO COMMISSIONS FOR REXEL FAMILY OF CLIENTS
* 03/09/09 JMK36 - C090341 - Grant DWILLIAMS access to SS reports
* 03/17/09 JMK37 - C090272 - Report Reqest: only shipments to/from HI, AK and PR for specified time period.
* 032609 - JMK38 - C090422 - Grant ability to run SS reports
* 040109 - JMK39 - ADD THE NAME OF THE FORM FOR INFORMATION
* 042709 - JMK40 - C090559 - Grant access to run SS reports for Leslie Smalley
* 060809 - NPR03 - T090622 - Added STACK filter
* 061709 - JMK41 - C090791 - Jennifer Peters needs access to SS reports
* 081209 - NPR04 - T091032 - Laci Corkern and Aunna Herbel needed access to SS reports as per Joe Darwin
* 081809 - NPR05 - T091057 - Replace Sandra Long with Stacy Rittenbach wherever the former occurs
* 082009 - JMK42 - T091068 - SS Reports not arriving in email
* 091409 - JMK43 - allow for AFS500 re-rating by using "A" instead of "L" or "S"
* 101309 - JMK44 - Shane Oneal SS Access
* 101909 - JMK45 - C091272 - SS reports for TL and LTL
* 121609 - JMK46 - C091509 - Grant access to run SS without commissions for Nikki Fasone
* 021710 - JMK47 - C091468 - New columns on the BLS file
* 070710 - JMK48 - C100608 - Request: SS report for current bills
* 071310 - JMK49 - R100672 - Unitrans Auditors: Procomm Access
* 080210 - JMK50 - T100760 - Grant Andrea Stephens ability to run SS reports
* 080610 - JMK51 - C100787 - Traffic Survey SS Report for Peter Marquardt
* 082610 - JMK52 - ADD COMPANY OPTION FOR 'UNI' UNITRANS CLIENTS
* 102210 - JMK53 - ADD CARRIER PAYEE NUMBER FOR UNITRANS CLIENTS
* 112930 - JMK54 - GIVE RAJU FULL ACCESS PER OWEN
* 120710 - JMK55 - R101174 - Grant TMEALER SS access
* 041211 - JMK56 - R110320 - Access to run SS Report for Jamar and Lee
* 050411 - JMK57 - ADD OPTION FOR REGIONS
* 050611 - NPR06 - T101205 - Add option to select only Bills with accessorial charges other than FSC type 'M' on LI.CODES
* 051611 - JMK58 - T110496 - Accessorials Only "E"xclude not working
* 091811 - JMK59 - T110516 - SS Report error "Cannot open file - Region.Codes,01429 ....
* 061411 - JMK60 - R110681 - Garrett Curiole should have the same procomm access as Jennifer Peters
* 082911 - JMK61 - R111089 - SS Report access for Ralph and Amos
* 090811 - PKB01 - R111141 - SS Report access for Holly Engle
* 110211 - DS001 - PROJ092 - SS Report option for multi division numbers
* 111213 - PKB02 - SYS923  - SS Report access for Ronald Stalvey
* 111215 - PKB03 - sYS924  - Change Error message from "contact Owen for access" to " contact the Help Desk for access"
* 111220 - PKB04 - SYS1034 - SS Report access for Jessica Hill
* 120118 - PKB05 - Sys1403 - SS Report access for Cs Members, per Kristy
* 020312 - pkb06 - per Randy/Owen provide Laura Vale with basic SS access.
* 020312 - JMK62 - SysAid#1676 - Multi Division error when running SS report for Wabtec Canada
* 030912 - pkb07 - Grant Brennon Young access to run SS reports per Kristy.
* 032712 - PKB08 - Grant Vanessa Britton access to run SS reports per Kristy.
* 060412 - JMK63 - SysAid#2835 - ss Report access for NKELLY and EGERARD
* 060812 - JMK64 - SysAid#2884 - Access to SS Report
* 061212 - JMK65 - Add option to run for UFM
* 072312 - RLM01 - Sysaid #3073 - Replace former employees' email addresseswith current employees
* 081312 - JMK66 - SysAid#3524 - Cindy Lindsey
* 092612 - JMK67 - hELPdESK#4051 - Lynda Garcia
* 100212 - JMK68 - Add John Demoss to Authorized Users
* 110512 - JMK69 - SysAid#4429 - Tracking the BD resolution process
* 120412 - JMK70 - SysAid#4694 - SS Reporting access
* 121212 - PKB09 - SysAid#4818 - SS access for Ron Boehnlein
* 021213 - JMK71 - SysAid#5229 - Jennifer and Martha need access to SS reports
* 022213 - JMK72 - SysAid#5224 - Transit TIme Advantage
* 022613 - JMK73 - SysAid#5348 - problems with systems
* 041213 - JMK74 - SysAid#5683 - Kenya needs SS report access and Intranet access
* 061113 - JMK75 - SyaAid#6158 - Andrea Gafford SS report access
* 072913 - JMK76 - QlikView Tariff options
* 110813 - JMK77 - SysAid#7636 - Kaeli Darnell
* 121213 - JMK78 - SysAid#7984 - Chandra Washington
* 010614 - JMK79 - SysAid#7614 - BLS report for Lund
* 012314 - DRF01 - SysAid 8388 - Added Sarah Lynch
* 040114 - DRF02 - SysAid 9188 - Added Jennifer Lain and Lisa Shampine
* 050214 - JMK80 - SysAid#9620 - Julie Darnell Access to run SS reports
* 052814 - JMK81 - SysAid#9923 - AccuTerm SS Reports
* 052914 - DRF03 - SysAid 9931 - Gave Kayli and LaJuanyka access
* 061014 - JMK82 - SysAid#10115 - Grant basic SS access
* 061714 - DRF04 - SysAid 10243 - Gave PMOSLEY same access as JATTAWAY
* 070214 - DRF05 - SysAid 10481 - Gave CPEOPLES same access as DRABORN
* 071514 - DRF06 - SysAid 10520 - Name change from CWASHINGTON to CWILLIAMS
* 080814 - DRF07 - SysAid 11237 - Add Dina and Kim access.
* 081314 - JMK83 - SysAid#11359 - Mary Ann Rose access
* 081414 - DRF08 - SysAid 11408 - Andi and Mindy access
* 090814 - DRF09 - SysAid 11961 - Gave TGREEN same access as DRABORN
* 100114 - DRF10 - SysAid 12490 - Gave SRICHARDSON same access as KWINDWEEDLE
* 100214 - DRF11 - SysAid 12534 - Gave GCASSADA the same access as SSELMAN
*                   in running a traffic survey client.
* 102414 - DRF12 - SyaAid 13020 - Melinda Feaster SS report access
* 111714 - DRF13 - SysAid 13621 - Christian Cox SS report access
* 120114 - DRF14 - SysAid 13888 - Nakisha Taylor SS report access
* 121514 - DRF15 - SysAid 14176 - Kourtney Norman SS report access
* 010515 - DRF16 - SysAid 14456 - Stephanie Ivy SS report access
* 012215 - DRF17 - SysAid 14856 Gave Ken access
* 012615 - JMK84 - SysAid#14916 - Add Universe Access for Kealey Barnes
* 021815 - SWB01 - SysAid#9955  - New version 600 for Cutback Reconcilliation
* 022515 - JMK85 - SysAid#15566 - SS Report
* 030915 - JMK86 - SysAid#15817 - New CS rep Courtney Evans not able to run SS report
* 031015 - DRF18 - SysAid 15838 - Gave Deanna Moore same access as Jennifeer Petes
* 031315 - DRF19 - SysAid 15959 - Gave April Sexton - audit access this program
* 031715 - DRF20 - SysAid 16042 - Gave CBULGER same access as JDARNELL
* 031815 - DRF21 - SysAid 16105 - Gave AMPARKER same access as SLYNCH
* 032515 - SWB02 - SysAid#12480 - New version 610 for emphasis on Accessorials
* 041715 - JMK87 - SysAid#16734 - Cs reps unable to run SS report
* 050615 - DRF22 - SysAid 17158 - Gave Greg Neargarth access
* 060315 - DRF23 - SysAid 17831 - Gave user KDAVIS access
* 060515 - DRF24 - SysAid 17893 - Gave user EHAMILTON access
* 062915 - DRF25 - SysAid 18393 - Gave user RJESTER access
* 121015 - DRF26 - SysAid 21469 - Gave user HWEGGELAND access
* 022316 - DRF27 - SysAid 22920 - Gave user PFRECHOU access
* 031616 - GRB01 - SysAid 22964 - Gave user MWYNN access
* 032916 - GRB02 - SysAid 23614 - Gave user RGONZALES access
* 042216 - DRF28 - SysAid 24082 - Gave Mingshu similar access as Scott Matthews
* 042616 - DRF29 - SysAid 24228 - Commission on SS report for support staff
* 051616 - DRF30 - SysAid 24597 - Gave Christina access to SS report
* 052316 - GRB03 - SysAid 24720 - Gave KEN PERCIAVALLE access to SS report
* 063016 - GRB04 - SysAid 25575 - add operator table
* 111317 - DRF31 - Ticket 7398 - special subroutine for the 460 report for 01706 Rexel
* 031518 - NKH01 - Added restart option
* 051319 - GRB05 - Add client to log
* 083122 - NKH02 - ACCU-1885 Add JADAMS and JADAMSAUDIT to file selection
* 102622 - NKH03 - ACCU-1932 Added automated processs
* 011623 - NKH04 - ACCU-2003 Added monthly automated process
* End modification history.
*******************************************************

$INCLUDE PROG.ADMIN INC_OPTIONS

* Initialize variables

      PROMPT'' ; DIV.SEL = ''
      CALL GET.USER.NEW(USER,CH.NUM)
      IF SYSTEM(7) = 'REGENT60' THEN     ; *DS001
         LISTBOX = 0                     ; *DS001
      END ELSE                           ; *DS001
         LISTBOX = 1                     ; *DS001
      END                                ; *DS001
      USER=OCONV(USER,'MCU')
*DFIF USER='DAVID' THEN USER='LWELLS'
      USER.SV=0                           ; * NKH03
      IF USER[1,3]='SV.' THEN USER.SV=1   ; * NKH03
      RESTRICT.ACCESS=1

      PROG.NAME='BUILD.DF.NW'
      PROG.DESC='Build File of Freight Bills by Client by Carrier'
      PACK.NAME='Freight Billing'
      TAB=CHAR(9)

      MASK.CHAR='-'
      BACK.FLAG=0
      PAGE.NUM=1 ; PROMPT.NUM=1
      CLIENT.HOLD=''                      ; * NKH03
      MONTHLY.RUN = 0                     ; * NKH04

      TYPE.OF.REPORT='STD'

*     CLIENT.ID='ALL' ; CLIENT.NAME='' ; DIVISION='N'        ; *  100; * JMK15
      CLIENT.ID='ALL' ; CLIENT.NAME='' ; CLIENT.REC='' ; DIVISION='N'  ; *  100; * JMK15
      REGION='N'                         ; * JMK57
      LOGISTICS.ONLY='NO' ; LOG.ONLY=0   ; *  200
      SEPARATE.DIVISIONS='NO' ; SEP.DIVISIONS=0    ; *  300
      DIVISIONAL.ID='ALL' ; CITY.STATE='' ; DIV.EMAIL.ADDR=''          ; *  400
      CARRIER.ID='ALL' ; CARRIER.NAME=''           ; *  500
      MODE='ALL' ; MODE.DESC=''          ; *  600
      FILE.SEL='2' ; FILE.DESC='History' ; AUTO=0  ; *  700
      BEG.DATE=DATE()                    ; *  800
      END.DATE=DATE() ; DAYS=0           ; *  900
      DUPLICATES.ONLY='NO'               ; * 1000
      CUT.BACK.CODE='' ; CUT.DESC=''     ; * 1100
      MISROUTE.INFO='N' ; MISROUTE.DESC=''         ; * 1200
      OVERCHARGE.INFO='N' ; OVERCHARGE.DESC=''     ; * 1300
      INCLUDE.BD='NO'                    ; * 1400
      INCLUDE.IOT = 'N' ; INCLUDE.IOT.DESC=''      ; * 1500  JCW01
      IOT.INFO='' ; IOT.DESC = ''        ; * 1600  JCW01
      LOGISTICS.INFO='N' ; LOGISTICS.DESC=''       ; * 1700
      DISCOUNT.INFO='N' ; DISCOUNT.DESC=''         ; * 1800
      VERSION='1'                        ; * 1900
      SORT='1'                           ; * 2000
      EMAIL.REPORT='NO' ; MANUAL.EMAIL=0           ; * 2100
      NEW.EMAIL.ADDR=''                  ; * 2200
      LCC.INFO='N' ; LCC.DESC=''         ; * 2300
      TL.INFO='N' ; TL.DESC=''           ; * 2400 ; * JMK17
      EBILL.INFO='N' ; EBILL.DESC=''     ; * 2500 ; * JMK22
      REJ.INFO='N' ; REJ.DESC=''         ; * 2700 ; * JMK27
      SAMPLE.ONE='N'                     ; * 2600 ; * JMK26
      DELAY.OPT='N'                      ; * 2800 ; * JMK29
      ROW.LIMIT='N'                      ; * 2900 ; * JMK32
      RR.EFF.DATE=DATE()                 ; * 3700 ; * JMK30
      RR.CARRIER.ID='L' ; RR.CARRIER.NAME=''       ; * 3800 ; * JMK30
      RR.FAK.1=''                        ; * 3900 ; * JMK30
      RR.FAK.2=''                        ; * 4000 ; * JMK30
      RR.FAK.3=''                        ; * 4100 ; * JMK30
      RR.FAK.4=''                        ; * 4200 ; * JMK30
      RR.FAK.5=''                        ; * 4300 ; * JMK30
      RR.ZIP.1=''                        ; * 4400 ; * JMK30
      RR.ZIP.2=''                        ; * 4500 ; * JMK30
      RR.ZIP.3=''                        ; * 4600 ; * JMK30
      RR.ZIP.4=''                        ; * 4700 ; * JMK30
      RR.ZIP.5=''                        ; * 4800 ; * JMK30
      RR.ZIP.6=''                        ; * 4900 ; * JMK30
      RR.ZIP.7=''                        ; * 5000 ; * JMK30
      RR.ZIP.8=''                        ; * 5100 ; * JMK30
      RR.ZIP.9=''                        ; * 5200 ; * JMK30
      RR.ZIP.10=''                       ; * 5300 ; * JMK30
      ST.FILTER=''                       ; * 3000 ; * JMK37
      STACK.FILTER=''                    ; * 3100 ; * NPR03
      RPT.STYLE='T'                      ; * 3200 ; * JMK47
      ACCESS.ONLY = 'N'                  ; * 3300 ; * NPR06
      BD.ONLY = 'N'                      ; * 3400 ; * JMK69
      HDG.ONLY = 'I'                     ; * JMK79
      DIV.LISTING = ''                   ; * DS001

* Open general files

      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         CALL OPEN.ABORT('CLIENTS',PROG.NAME)
      END
      OPEN '','CARRIERS' TO F.CARRIERS ELSE
         CALL OPEN.ABORT('CARRIERS',PROG.NAME)
      END
      OPEN '','FB.BUILD.SPEC' TO F.BUILD.SPEC ELSE
         CALL OPEN.ABORT('FB.BUILD.SPEC',PROG.NAME)
      END
      OPEN '','FB.TRANSPORT' TO F.TRANSPORT ELSE
         CALL OPEN.ABORT('FB.TRANSPORT',PROG.NAME)
      END
      OPEN '','FB.CUT.BACKS' TO F.CUT.BACKS ELSE
         CALL OPEN.ABORT('FB.CUT.BACKS',PROG.NAME)
      END
      OPEN '','FB.TABLES' TO F.TABLES ELSE
         CALL OPEN.ABORT('FB.TABLES',PROG.NAME)
      END
      OPEN '','BUILD.DF.RPTS' TO F.BUILD.DF.RPTS ELSE        ; * JMK29
         CALL OPEN.ABORT('BUILD.DF.RPTS',PROG.NAME)          ; * JMK29
      END                                ; * JMK29
      READ LI.CODES FROM F.TABLES,'LI.CODES' ELSE
         CALL ELINE('Cannot read LI.CODES from FB.TABLES.')
         GOTO THE.END
      END

      @USER3 = LI.CODES<1>               ; * MV list of Accessorial codes  Used by I-type routine FB.ACCESS      ;* NPR06
      @USER4 = LI.CODES<3>               ; * MV list of Accessorial code types relating to attr. 1               ;* NPR06

      READ REJ.CODES FROM F.TABLES,'REJECT.CODES' ELSE       ; * JMK27
         CALL ELINE('Cannot read REJECT.CODES from FB.TABLES.')        ; * JMK27
         GOTO THE.END                    ; * JMK27
      END                                ; * JMK27
      READ AFS.SERV.LEV FROM F.TABLES,'AIR.SERVLEV*BASE' ELSE
         CALL ELINE('Cannot read AIR.SERVLEV*BASE from FB.TABLES.')
         GOTO THE.END
      END
      OPEN '','VOC' TO F.VOC ELSE
         CALL ELINE('Unable to open VOC file - Call IS Department.')
         GOTO THE.END
      END
      IF NOT(USER.SV) THEN    ; * NKH03
         READ BILLDATA.REC FROM F.VOC,'BILLDATA' ELSE
            CALL ELINE('Unable to open VOC BILLDATA - Call IS Department.')
            GOTO THE.END
         END
         BILLDATA.REC<2>:='\':USER
         WRITE BILLDATA.REC ON F.VOC,'BILLDATA.':USER ELSE
            CALL ELINE('Your user name ':USER:' is not in the BILLDATA folder - Call IS Department.')
            GOTO THE.END
         END
      END                     ; * NKH03
      OPEN '','AR.SLSMAN.1000.1' TO F.SLSMAN ELSE  ; * JMK19
         CALL OPEN.ABORT('AR.SLSMAN.1000.1',PROG.NAME)       ; * JMK19
      END                                ; * JMK19
      OPEN '','BCTRL' TO F.BCTRL ELSE    ; * JMK86
         CALL OPEN.ABORT('BCTRL',PROG.NAME)        ; * JMK86
      END                                ; * JMK86
      OPEN '','OPERATOR' TO F.OP ELSE CALL OPEN.ABORT("OPERATOR",PROG.NAME)      ; * GRB04
      READ STATES.REC FROM F.TABLES,'LEGAL.STATES' ELSE STATES.REC=''  ; * JMK37
      READ BCTRL.REC FROM F.BCTRL,USER ELSE BCTRL.REC=''     ; * JMK87
      USER.DPT=BCTRL.REC<15>             ; * JMK87
      USER.STATUS=BCTRL.REC<16>          ; * JMK87
* Display heading
*
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      CRT @(0,2):STR('=',79)
      GOSUB SET.DISPLAY.VARIABLE

*   * Begin GRB04
      IF NOT(USER.SV) THEN       ; * NKH03
         READV OP.FLG FROM F.OP,USER,2 ELSE
            OP.FLG = "N"
         END
         OP.FLG2 = OP.FLG<1,2>
         IF OP.FLG<1,1> = "Y" OR (USER.DPT = 'CC' AND USER.STATUS # "I" ) THEN



*
* Authorized Departments
*

*
* Authorized Users
*


*
* Restrict the other
*
         END ELSE

            CALL FB.PRINT.CENT(1,80,12,'Restricted Access Application')
            CALL FB.PRINT.CENT(1,80,14,'Access Denied! Contact your Supervisor for Access')
            CALL ELINE('')
            SUBJ='User ':USER:' tried to access BUILD.DF.NW'
            TEXT=USER:' tried to access BUILD.DF.NW'
            GOSUB ACCESS.NOTIFY             ; * JMK05
            STOP
         END
      END                        ; *  NKH03
      * End GRB04
      CALL SS.ACCESS(VIN,VOUT)           ; * JMK03
      CLIENT.ACCESS=VOUT<1>              ; * JMK03
      CARRIER.ACCESS=VOUT<2>             ; * JMK03
      SALES.ACCESS=VOUT<3>               ; * JMK03
      COMM.ACCESS=VOUT<4>                ; * JMK03
      SUPER.USER='Y'                     ; * JMK06
      IF CLIENT.ACCESS#'ALL' THEN SUPER.USER='N'   ; * JMK06
      IF CARRIER.ACCESS#'ALL' THEN SUPER.USER='N'  ; * JMK06
      IF SALES.ACCESS#'ALL' THEN SUPER.USER='N'    ; * JMK06
*     IF COMM.ACCESS#'ALL' THEN SUPER.USER='N'     ; * JMK06 ; * JMK09
      CLIENT.ACCESS.TIMES=0              ; * JMK03
      CARRIER.ACCESS.TIMES=0             ; * JMK03
      SALES.ACCESS.TIMES=0               ; * JMK03
      ACCESS.LIMIT=1                     ; * JMK03
      
      * Begin NKH03
      IF USER.SV THEN 
         DELAY.OPT='N'
         * Begin NKH04
         T.DATE = OCONV(DATE(),'D2-')
         T.DAY = FIELD(T.DATE,'-',2,1)
         Y.YEAR = FIELD(T.DATE,'-',3,1)
         T.MONTH = FIELD(T.DATE,'-',1,1)
         IF T.DAY = "1" OR T.DAY = "01" THEN        
            MONTHLY.RUN = 1
            BEGIN CASE
               CASE T.MONTH = '01'
                  SUB.DAYS = '31'   ; * DEC
               CASE T.MONTH = '02'
                  SUB.DAYS = '31'   ; * JAN
               CASE T.MONTH = '03'
                  LY.DATE = DATE()-29
                  LYM = FIELD(OCONV(LY.DATE,'D2-'),'-',1,1)
                  IF LYM = '01' THEN
                     SUB.DAYS = '28'
                  END ELSE
                     SUB.DAYS = '29'
                  END
               CASE T.MONTH = '04'
                  SUB.DAYS = '30'   ; * MAR
               CASE T.MONTH = '05'
                  SUB.DAYS = '31'   ; * APR
               CASE T.MONTH = '06'                                                            
                  SUB.DAYS = '31'   ; * MAY
               CASE T.MONTH = '07'
                  SUB.DAYS = '30'   ; * JUNE
               CASE T.MONTH = '08'               
                  SUB.DAYS = '31'   ; * JULY
               CASE T.MONTH = '09'
                  SUB.DAYS = '31'   ; * AUG
               CASE T.MONTH = '10'
                  SUB.DAYS = '30'   ; * SEPT
               CASE T.MONTH = '11'
                  SUB.DAYS = '31'   ; * OCT
               CASE T.MONTH = '12'                                                            
                  SUB.DAYS = '30'   ; * NOV
            END CASE
         END
         IF MONTHLY.RUN THEN
*            SUB.DAYS += 1
            AUTO.FROM.DATE = DATE()-SUB.DAYS
            AUTO.TO.DATE = DATE()-1         
            GOTO AUTO.RUN
50:
            AUTO.FROM.DATE = DATE()-7
            AUTO.TO.DATE = DATE()-1
            GOTO AUTO.RUN                
         END ELSE 
            AUTO.FROM.DATE = DATE()-7
            AUTO.TO.DATE = DATE()-1
            GOTO AUTO.RUN    
         END
      END
      * End NKH04
      * End NKH03
      
* Enter client ID
100:  ***
      PAGE.NUM=1
      PROMPT.NUM=1
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      CORP.DATA = ""                     ; * NPR01
      NUM.CORP = ""                      ; * NPR01
      GOSUB DISPLAY.SCREEN
      CL.LST=''                          ; * JMK16
      CLIENT.HOLD = ""
      MASK=CLIENT.ID:STR(MASK.CHAR,5-LEN(CLIENT.ID))

      HELP='Client#, name for search. [AFS] [SCT] [UNI] [UFM] [LGI] [ALL] E[X]it [EX]it'   ; * JMK52 ; * JMK65 ; * JMK72
      CALL GEN.IN(27,3,MASK,'',Q,0,20,'','',2,27,3,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=CLIENT.ID
      BEGIN CASE
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOSUB DISPLAY.SCREEN
            GOTO THE.END
         CASE QI='ALL'
         CASE QI[1,1]='('                ; * JMK16
            CL.LST=QI[2,9999]            ; * JMK16
            CLIENT.HOLD = CLIENT.ID
            CLIENT.ID='ALL'              ; * JMK16
            QI='ALL'                     ; * JMK16
         CASE QI='AFS'                   ; * JMK14
         CASE QI='SCT'                   ; * JMK14
         CASE QI='UNI'                   ; * JMK52
         CASE QI='UFM'                   ; * JMK65
         CASE QI='LGI'                   ; * JMK72
         CASE NOT(QI MATCHES '0N')
            CALL SOUNDEX.DISPLAY(QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            BEGIN CASE
               CASE ITEM.LIST=''
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
               CASE ITEM.LIST NE ''
                  IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
            END CASE
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            CRT @(0,2):STR('=',79)
            GOTO 100
         CASE NUM(QI)

            IF QI GE "80000" AND QI LE "89999" THEN
               

               CL.LST = "CORP.LIST.":CH.NUM
               STMT = \SSELECT CLIENTS WITH 147 = "\:QI:\"\
               EXECUTE STMT RTNLIST CORP.LIST CAPTURING OUTPUT
               NUM.CORP = @SELECTED
               IF NUM.CORP THEN
                  EXECUTE "SAVE-LIST ":CL.LST PASSLIST CORP.LIST CAPTURING OUTPUT

                  CL.LST = "CORP.LIST.":CH.NUM     ; *NPR02
                  CORP.DATA<1> = QI 'R%5'
                  CORP.DATA<2> = NUM.CORP
                 CLIENT.HOLD = QI
                  CLIENT.ID='ALL'        ; * NPR01
                  QI='ALL'               ; * NPR01
               
               END ELSE
                  QI=QI'R%5'
               END
            END ELSE
               QI=QI'R%5'
            END

         CASE 1
            GOTO 100
      END CASE
      CLIENT.ID=QI
      * Begin GRB05
      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'BUILD.DF.NW' ; UPL.VOUT = ''    ; * NPR_UPL 04/22/2010
      UPL.VIN<3> = USER
      UPL.VIN<4> = CH.NUM
      UPL.VIN<8> = CLIENT.ID
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)       ; * NPR_UPL 04/22/2010
      * End GRB05

      IF (CLIENT.ID#'ALL' AND CLIENT.ID#'AFS' AND CLIENT.ID#'SCT' AND CLIENT.ID#'UNI' AND CLIENT.ID#'UFM' AND CLIENT.ID#'LGI') THEN          ; * JMK14 ; * JMK52 ; * JMK65 ; * JMK72
         READ CLIENT.REC FROM F.CLIENTS,CLIENT.ID ELSE
            CALL ELINE('ERROR: Client ':CLIENT.ID:' not on file.')
            GOTO 100
         END
         
         CLIENT.NAME=CLIENT.REC<2>
         INI.SLS=CLIENT.REC<114>         ; * JMK19
         READ INI.SLS.REC FROM F.SLSMAN,INI.SLS ELSE INI.SLS.REC=''    ; * JMK19
         INI.SLS.NAME=INI.SLS.REC<1>     ; * JMK19
         SVC.SLS=CLIENT.REC<115>         ; * JMK03
         READ SVC.SLS.REC FROM F.SLSMAN,SVC.SLS ELSE SVC.SLS.REC=''    ; * JMK19
         SVC.SLS.NAME=SVC.SLS.REC<1>     ; * JMK19
         IF SALES.ACCESS#'ALL' THEN      ; * JMK03
            LOCATE(SVC.SLS,SALES.ACCESS,1;SPOS) ELSE         ; * JMK03
               CALL ELINE('ERROR: You may not process this client.')
               SALES.ACCESS.TIMES=SALES.ACCESS.TIMES+1       ; * JMK03
               IF SALES.ACCESS.TIMES >= ACCESS.LIMIT THEN    ; * JMK03
*                 SUBJ='User ':USER:' tried to access BUILD.DF.NW'     ; * JMK25
                  SUBJ='ACCESS VIOLATION: User ':USER:' tried to access BUILD.DF.NW with insufficient Sales Access'      ; * JMK25
                  TEXT=USER:' tried to access BUILD.DF.NW ':SALES.ACCESS.TIMES'.'          ; * JMK05
*                 TEXT:='  SALES.ACCESS does not comply with servicing salesman for client ':CLIENT.ID         ; * JMK05 ; * JMK19
                  TEXT<1,-1>='  SALES.ACCESS does not comply with servicing salesman for client '    ; * JMK05 ; * JMK19
                  TEXT:=CLIENT.ID:' - ':CLIENT.NAME          ; * JMK19
                  TEXT<1,-1>=' '         ; * JMK19
                  TEXT<1,-1>='Initial Salesman: ':INI.SLS:' - ':INI.SLS.NAME     ; * JMK19
                  TEXT<1,-1>=' '         ; * JMK19
                  TEXT<1,-1>='Servicing Salesman: ':SVC.SLS:' - ':SVC.SLS.NAME   ; * JMK19
                  GOSUB ACCESS.NOTIFY    ; * JMK05
               END                       ; * JMK03
               GOTO 100                  ; * JMK03
            END                          ; * JMK03
         END                             ; * JMK03
         IF CLIENT.REC<179>#'' THEN      ; * JMK42
            CLIENT.NAME=CLIENT.NAME:' (TS)'        ; * JMK42
         END                             ; * JMK42
         
      END ELSE
         BEGIN CASE                      ; * JMK14
            CASE CLIENT.ID='ALL'         ; * JMK14
               CLIENT.NAME='All Clients'           ; * JMK14
               
            CASE CLIENT.ID='AFS'         ; * JMK14
               CLIENT.NAME='AFS Clients'           ; * JMK14
               
            CASE CLIENT.ID='SCT'         ; * JMK14
               CLIENT.NAME='Scott Clients'         ; * JMK14
            CASE CLIENT.ID='UNI'         ; * JMK52
               CLIENT.NAME='Unitrans Clients'      ; * JMK52
            CASE CLIENT.ID='UFM'         ; * JMK65
               CLIENT.NAME='UFM Clients'           ; * JMK65
            CASE CLIENT.ID='LGI'         ; * JMK72
               CLIENT.NAME='Logica Clients'        ; * JMK72
            CASE 1                       ; * JMK14
               CLIENT.NAME=''
         END CASE                        ; * JMK14
         IF CL.LST#'' THEN CLIENT.NAME:=' for list name ':CL.LST
      END
      GOSUB DISPLAY.SCREEN


      IF CLIENT.ID#'ALL' AND CLIENT.ID#'AFS' AND CLIENT.ID#'SCT' AND CLIENT.ID#'UNI' AND CLIENT.ID#'UFM' AND CLIENT.ID#'LGI' THEN  ; * JMK14 ; * JMK52 ; * JMK65 ; * JMK72
         OPEN '','FB.BILLS.HIST,':CLIENT.ID TO F.HIST ELSE
            CALL OPEN.ABORT('FB.BILLS.HIST,':CLIENT.ID,PROG.NAME)
         END
         DIVISION=CLIENT.REC<12>
         IF DIVISION='Y' THEN
            OPEN '','DIVISION.CODES,':CLIENT.ID TO F.DIVISION ELSE
               CALL OPEN.ABORT('DIVISION.CODES,':CLIENT.ID,PROG.NAME)
            END
            OPEN '','REGION.CODES,':CLIENT.ID TO F.REGION ELSE         ; * JMK57
*              CALL OPEN.ABORT('REGION.CODES,':CLIENT.ID,PROG.NAME)    ; * JMK57 ;  * JMK59
               EXECUTE 'CREATE-FILE DATA REGION.CODES,':CLIENT.ID:' 7'           ; * JMK59
               OPEN '','REGION.CODES,':CLIENT.ID TO F.REGION ELSE      ; * JMK57
                  CALL OPEN.ABORT('REGION.CODES,':CLIENT.ID,PROG.NAME)           ; * JMK59
               END                       ; * JMK57
            END                          ; * JMK57
            LOGISTICS.ONLY='NO'
            GOTO 200
         END ELSE
            LOGISTICS.ONLY='NO'
            SEPARATE.DIVISIONS='NO'
            DIVISIONAL.ID=''
            CITY.STATE=''
            DIV.EMAIL.ADDR=''
            GOTO 500
         END
      END

* Include bills from logistics clients (Y/N)?

400:  ***
      PAGE.NUM=1
      PROMPT.NUM=4
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 100
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      IF CLIENT.ACCESS='LG' THEN         ; * JMK03
         LOGISTICS.ONLY='YES'            ; * JMK03
      END                                ; * JMK03
      MASK=LOGISTICS.ONLY:STR(MASK.CHAR,4-LEN(LOGISTICS.ONLY))
      HELP='Only include bills from logistics clients? [Y]es [N]o [X]=Back [EX]it'
      CALL GEN.IN(27,6,MASK,'',Q,0,6,'','',2,27,6,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=LOGISTICS.ONLY
      BEGIN CASE
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOTO 100
         CASE QI='N' OR QI='NO' OR QI='0'
            IF CLIENT.ACCESS='LG' THEN   ; * JMK03
               CALL ELINE('ERROR: You may only process logistics clients.')      ; * JMK03
               CLIENT.ACCESS.TIMES=CLIENT.ACCESS.TIMES+1     ; * JMK03
               IF CLIENT.ACCESS.TIMES > ACCESS.LIMIT THEN    ; * JMK03
*                 SUBJ='User ':USER:' tried to access BUILD.DF.NW'               ; * JMK25
                  SUBJ='ACCESS VIOLATION: User ':USER:' tried to access BUILD.DF.NW with insufficient Client Access'     ; * JMK25
                  TEXT=USER:' tried to access BUILD.DF.NW ':CLIENT.ACCESS.TIMES'.'         ; * JMK05
*                 TEXT:='  CLIENT.ACCESS does not comply with logistics only for client ':CLIENT.ID  ; * JMK05 ; * JMK19
                  TEXT:='  CLIENT.ACCESS does not comply with logistics only for client '  ; * JMK05 ; * JMK19
                  TEXT:=CLIENT.ID:' - ':CLIENT.NAME          ; * JMK19
                  GOSUB ACCESS.NOTIFY    ; * JMK03
               END                       ; * JMK03
               GO 200                    ; * JMK03
            END                          ; * JMK03
            QI='NO'
         CASE QI='Y' OR QI='YE' OR QI='YES' OR QI='1'
            QI='YES'
         CASE 1
            GOTO 200
      END CASE
      LOGISTICS.ONLY=QI
      GOSUB DISPLAY.SCREEN

      IF (CLIENT.ID='ALL' OR CLIENT.ID='AFS' OR CLIENT.ID='SCT' OR CLIENT.ID='UNI' OR CLIENT.ID='UFM' OR CLIENT.ID='LGI') THEN     ; * JMK14 ; * JMK52 ; * JMK65 ; * JMK72
         SEPARATE.DIVISIONS='NO'
         DIVISIONAL.ID=''
         CITY.STATE=''
         DIV.EMAIL.ADDR=''
         GOTO 500
      END

* Do separate divisional reports (Y/N)?

300:  ***
      PAGE.NUM=1
      PROMPT.NUM=3
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 200
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=SEPARATE.DIVISIONS:STR(MASK.CHAR,4-LEN(SEPARATE.DIVISIONS))
      HELP='Build a separate report for each division? [Y]es [N]o [X]=Back [EX]it'
      CALL GEN.IN(27,5,MASK,'',Q,0,4,'','',2,27,5,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=SEPARATE.DIVISIONS
      IF QI[1,1]='D' THEN                ; * JMK62
         REGION='N'                      ; * JMK62
         QI=QI[2,999]                    ; * JMK62
      END                                ; * JMK62
      IF QI[1,1]='R' THEN                ; * JMK57
         REGION='Y'                      ; * JMK57
         QI=QI[2,999]                    ; * JMK57
      END                                ; * JMK57
      BEGIN CASE
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOTO 200
         CASE QI='N' OR QI='NO' OR QI='0'
            QI='NO'
         CASE QI='Y' OR QI='YE' OR QI='YES' OR QI='1'
            QI='YES'
         CASE 1
            GOTO 300
      END CASE
      SEPARATE.DIVISIONS=QI
* DS001      GOSUB DISPLAY.SCREEN
      IF SEPARATE.DIVISIONS='NO' THEN
         IF MUL.SEL=0 THEN               ; * JMK62
            DIVISIONAL.ID='ALL'
         END                             ; * JMK62
         CITY.STATE=''
         DIV.EMAIL.ADDR=''
         GOTO 500
      END
      GOTO 500                           ; *DS001

* Enter divisional ID

200:  ***
      PAGE.NUM=1
      PROMPT.NUM=2
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 300
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=DIVISIONAL.ID:STR(MASK.CHAR,5-LEN(DIVISIONAL.ID))
      IF REGION='Y' THEN                 ; * JMK57
         HELP='Enter region number. [ALL] [L]ist [X]=Back [EX]it'
      END ELSE                           ; * JMK57
         IF SYSTEM(7) = 'REGENT60' THEN  ; *DS001
            HELP='Enter division number. [ALL] [M]=List [X]=Back [EX]it'
         END ELSE                        ; *DS001
            HELP='Enter division number. [ALL] [M]ulti-Select [X]=Back [EX]it'   ; *DS001
         END                             ; *DS001
      END                                ; * JMK57
      IF DIV.SEL # '' THEN
         DATA 'M'
      END
      CALL GEN.IN(27,4,MASK,'',Q,0,5,'','',2,27,4,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=DIVISIONAL.ID
      IF QI[1,1]='D' THEN                ; * JMK62
         REGION='N'                      ; * JMK62
         QI=QI[2,999]                    ; * JMK62
      END                                ; * JMK62
      IF QI[1,1]='R' THEN                ; * JMK62
         REGION='Y'                      ; * JMK62
         QI=QI[2,999]                    ; * JMK62
      END                                ; * JMK62
      MUL.SEL=0                          ; * JMK62
      BEGIN CASE
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOTO 100                     ; *DS001
         CASE QI='M'                     ; *DS001
*           IF REGION='Y' THEN           ; * JMK57 ; * JMK62
*              EXECUTE 'SORT REGION.CODES,':CLIENT.ID:' CITY.STATE HEADING "List of all Region Codes for ':CLIENT.ID:' - ':CLIENT.NAME:"'CL'":'"'      ; * JMK57 ; * JMK62
*           END ELSE                     ; * JMK57 ; * JMK62
            IF NOT(LISTBOX) THEN         ; *DS001
               IF REGION='Y' THEN        ; * JMK62
                  EXECUTE 'SORT REGION.CODES,':CLIENT.ID:' CITY.STATE HEADING "List of all Region Codes for ':CLIENT.ID:' - ':CLIENT.NAME:"'CL'":'"'   ; * JMK62
               END ELSE                  ; * JMK62
                  EXECUTE 'SORT DIVISION.CODES,':CLIENT.ID:' CITY.STATE HEADING "List of all Division Codes for ':CLIENT.ID:' - ':CLIENT.NAME:"'CL'":'"'
               END                       ; * JMK62
*DS001 Start Changes
               CALL ELINE("MULTILISTBOX AVAILABLE TO ACCUTERM USERS ONLY")
               GOTO 200
            END ELSE
               DIN = '' ; DIN<1> = CLIENT.ID ; DIN<2> = 1
               DIN<3> = @VM ; DOUT = ''
               IF REGION='Y' THEN        ; * JMK62
                  TITLE = 'BUILD.DF.NW - Region Selection'   ; * JMK62
                  PRMPT = 'ID'"L#8"      ; * JMK62
                  PRMPT := ''"L#8"       ; * JMK62
                  PRMPT := 'ADDRESS#1'"L#30"       ; * JMK62
                  PRMPT := 'ADDR2'"L#30"           ; * JMK62
                  PRMPT := 'CITY'"L#25"  ; * JMK62
                  PRMPT := 'ST'"L#3"     ; * JMK62
                  PRINT @(0,23):"BUILDING REGION CODE LISTING":        ; * JMK62
                  CALL GET.REGION.CODES(DIN,DOUT)  ; * JMK62
               END ELSE                  ; * JMK62
                  TITLE = 'BUILD.DF.NW - Division Selection'
                  PRMPT = 'ID'"L#8"
                  PRMPT := 'REGION'"L#8"
                  PRMPT := 'ADDRESS#1'"L#30"
                  PRMPT := 'ADDR2'"L#30"
                  PRMPT := 'CITY'"L#25"
                  PRMPT := 'ST'"L#3"
                  PRINT @(0,23):"BUILDING DIVISION CODE LISTING":
                  CALL GET.DIVISION.CODES(DIN,DOUT)
               END                       ; * JMK62
               PRINT @(0,23):STR(' ',30):
               CALL MULTILISTBOX(TITLE,PRMPT,DOUT<1>,112,12,@VM,DIV.SEL)
               DIV.SEL = TRIM(DIV.SEL,' ','E')
               SEL.CNT = DCOUNT(DIV.SEL,' ')
               BEGIN CASE
                  CASE SEL.CNT = 1
                     ITM.SEL = FIELD(DIV.SEL,' ',1)
                     QI = FIELD(DOUT<1,ITM.SEL+1>,' ',1)
                     DIV.LISTING = '' ; DIV.SEL = '' ; ITM.SEL = ''
                     DIVISIONAL.ID = QI
                  CASE SEL.CNT > 1
*                        QI="MULTI-SELECTION"'l#15'
                     DOUT.MAX = DCOUNT(DOUT<1>,@VM)
                     ITM = '' ; DIV.LISTING = ''
                     DIVISIONAL.ID = ''
                     FOR BB = 1 TO SEL.CNT
                        ITM.SEL = FIELD(DIV.SEL,' ',BB)
                        ITM.SEL += 1
                        ITM = DOUT<1,ITM.SEL>
                        DIV.LISTING := '"':FIELD(ITM,' ',1):'"'
                        IF BB = SEL.CNT AND SEL.CNT <= 8 THEN
                           DIVISIONAL.ID := FIELD(ITM,' ',1)
                        END ELSE
                           IF BB < 8 THEN
                              DIVISIONAL.ID := FIELD(ITM,' ',1):','
                           END
                        END
                        IF BB = 8 AND BB < SEL.CNT THEN
                           DIVISIONAL.ID := "MORE..."
                        END
                     NEXT BB
                     QI=DIVISIONAL.ID
                     MUL.SEL=1           ; * JMK62
                  CASE SEL.CNT = 0
                     DIVISIONAL.ID = ''
                     QI=DIVISIONAL.ID
                     GOTO 200
                  CASE 1
                     QI = 'ALL'
                     DIV.LISTING = ''
                     DIV.SEL = '' ; ITM.SEL = ''

               END CASE
            END
*           END                          ; * JMK57 ; * JMK62
            IF NOT(LISTBOX) THEN
               CALL ELINE('')
               CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
               CRT @(0,2):STR('=',79)

            END
         CASE QI='ALL'
            DIV.SEL = '' ; DIVISIONAL.ID = QI
         CASE REGION='Y'                 ; * JMK57
         CASE NUM(QI) AND QI # ''
            QI=QI'R%5'
            DIV.SEL = ''
         CASE 1
            GOTO 200
      END CASE
      DIVISIONAL.ID=QI
      CITY.STATE=''
      IF DIVISION='Y' AND DIVISIONAL.ID#'ALL' AND NOT(LISTBOX) THEN
         IF REGION='Y' THEN              ; * JMK57
            READ DDIV FROM F.REGION,DIVISIONAL.ID THEN       ; * JMK57
               ZIP.VAR=DDIV<1>           ; * JMK57
               CALL FB.READ.ZIP(ZIP.VAR,CITY,STATE)          ; * JMK57
               CITY.STATE=CITY:', ':STATE          ; * JMK57
               DIV.EMAIL.ADDR=DDIV<9>    ; * JMK57
            END ELSE                     ; * JMK57
               CALL ELINE('Region ':DIVISIONAL.ID:' has not been set up.')       ; * JMK57
               GOTO 400                  ; * JMK57
            END                          ; * JMK57
         END ELSE                        ; * JMK57
            READ DDIV FROM F.DIVISION,DIVISIONAL.ID THEN
               ZIP.VAR=DDIV<1>
               CALL FB.READ.ZIP(ZIP.VAR,CITY,STATE)
               CITY.STATE=CITY:', ':STATE
               DIV.EMAIL.ADDR=DDIV<9>
            END ELSE
               CALL ELINE('Division ':DIVISIONAL.ID:' has not been set up.')
               GOTO 400
            END
         END                             ; * JMK57
      END
      IF NUM(DIVISIONAL.ID) THEN         ; *DS001
         SEPARATE.DIVISIONS='YES'        ; *DS001
         GOTO 500                        ; *DS001
      END ELSE                           ; *DS001
         GOTO 300                        ; *DS001
      END                                ; *DS001
*      DS GOSUB DISPLAY.SCREEN

* Enter carrier ID

500:  ***
      PAGE.NUM=1
      PROMPT.NUM=5
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 400
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=CARRIER.ID:STR(MASK.CHAR,5-LEN(CARRIER.ID))
*     HELP='Enter carrier number or name for search. [ALL] [X]=Back [EX]it'         ; * JCW02
      HELP='Enter carrier number or name for search. [ALL] [FEDEX] [X]=Back [EX]it'        ; * JCW02
      CALL GEN.IN(27,7,MASK,'',Q,0,20,'','',2,27,7,0,QI,HELP,0,23)

      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=CARRIER.ID
      BEGIN CASE
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOTO 300                     ; *DS001
         CASE QI='ALL'
         CASE QI='FEDEX'                 ; * JCW02
         CASE QI='UPSDTL'
         CASE NOT(QI MATCHES '0N')
            CALL SOUNDEX.DISPLAY(QI,'CARRIERS','SDX.CARRIER,NAME',1,ITEM.LIST)
            BEGIN CASE
               CASE ITEM.LIST=''
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
               CASE ITEM.LIST NE ''
                  IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
            END CASE
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            CRT @(0,2):STR('=',79)
            GOSUB DISPLAY.SCREEN
            GOTO 500
         CASE NUM(QI)
            QI=QI'R%5'
         CASE 1
            GOTO 500
      END CASE
      CARRIER.ID=QI
*     IF CARRIER.ID#'ALL' THEN                        ; * JCW02
*     IF CARRIER.ID#'ALL' AND CARRIER.ID#'FEDEX' THEN        ; * JCW02 ; * JMKXXX
      IF CARRIER.ID#'ALL' AND CARRIER.ID#'FEDEX' AND CARRIER.ID#'UPSDTL' THEN    ; * JCW02 ; * JMKXXX
         READ CARRIER.REC FROM F.CARRIERS,CARRIER.ID ELSE
            CALL ELINE('ERROR: Carrier ':CARRIER.ID:' not on file.')
            GOTO 500
         END
         CARRIER.NAME=CARRIER.REC<1>
      END ELSE
         CARRIER.NAME=''
      END
      GOSUB DISPLAY.SCREEN

      IF CARRIER.ID#'ALL' THEN
         MODE=''
         MODE.DESC=''
         GOTO 700
      END

* Enter transportation mode

600:  ***
      PAGE.NUM=1
      PROMPT.NUM=6
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 500
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=MODE:STR(MASK.CHAR,4-LEN(MODE))
      HELP='Enter transportation mode. [ALL] [L]ist [X]=Back [EX]it'
      CALL GEN.IN(27,8,MASK,'',Q,0,4,'','',2,27,8,0,QI,HELP,0,23)

      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=MODE
      BEGIN CASE
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOTO 500
         CASE QI='L'

            IF CARRIER.ACCESS='ALL' AND (CLIENT.ID#'ALL' AND CLIENT.ID#'AFS' AND CLIENT.ID#'SCT' AND CLIENT.ID#'UNI' AND CLIENT.ID#'UFM' AND CLIENT.ID#'LGI') THEN         ; * JMK03 ; * JMK05 ; * JMK14 ; * JMK52 ; * JMK65 ; * JMK72
               EXECUTE 'SORT FB.TRANSPORT BY MODE MODE 1 (I'
            END ELSE                     ; * JMK03
               TRANS.LST=CHANGE(CARRIER.ACCESS,@VM,'""')     ; * JMK03
               IF TRANS.LST='ALL' THEN
                  EXECUTE 'SORT FB.TRANSPORT BY MODE MODE 1 (I'
               END ELSE
                  EXECUTE 'SORT FB.TRANSPORT WITH @ID = "':TRANS.LST:'" BY MODE MODE 1 (I'           ; * JMK03
               END
            END                          ; * JMK03
            CALL ELINE('')
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            CRT @(0,2):STR('=',79)
            GOSUB DISPLAY.SCREEN
            GOTO 600
         CASE QI='ALL'

            IF (CLIENT.ID='ALL' OR CLIENT.ID='AFS' OR CLIENT.ID='SCT' OR CLIENT.ID='UNI' OR CLIENT.ID='UFM' OR CLIENT.ID='LGI') AND CARRIER.ID='ALL' AND SUPER.USER='N' THEN         ; * JMK05; * JMK06 ; * JMK14 ; * JMK52 ; * JMK65 ; * JMK72
               IF CL.LST='' THEN
                  CALL ELINE('ERROR: You do not have access to all transport modes for all clients.')          ; * JMK03
                  CARRIER.ACCESS.TIMES=CARRIER.ACCESS.TIMES+1          ; * JMK03
                  IF CARRIER.ACCESS.TIMES > ACCESS.LIMIT THEN          ; * JMK03
*                 SUBJ='User ':USER:' tried to access BUILD.DF.NW'               ; * JMK25
                     SUBJ='ACCESS VIOLATION: User ':USER:' tried to access BUILD.DF.NW with insufficient Carrier Access'           ; * JMK25
                     TEXT=USER:' tried to access BUILD.DF.NW ':CARRIER.ACCESS.TIMES'.'     ; * JMK05
                     TEXT:='  CARRIER.ACCESS does not have access to all transport modes for all clients.'     ; * JMK05
                     GOSUB ACCESS.NOTIFY           ; * JMK05
                  END                    ; * JMK03
                  GOTO 500               ; * JMK03
               END
            END                          ; * JMK05
         CASE NUM(QI)
            IF CARRIER.ACCESS#'ALL' THEN           ; * JMK03
               LOCATE(QI,CARRIER.ACCESS,1;CPOS) ELSE         ; * JMK03
                  CALL ELINE('ERROR: You do not have access to this mode.')      ; * JMK03
                  CARRIER.ACCESS.TIMES=CARRIER.ACCESS.TIMES+1          ; * JMK03
                  IF CARRIER.ACCESS.TIMES > ACCESS.LIMIT THEN          ; * JMK03
*                    SUBJ='User ':USER:' tried to access BUILD.DF.NW'  ; * JMK25
                     SUBJ='ACCESS VIOLATION: User ':USER:' tried to access BUILD.DF.NW with insufficient Carrier Access'           ; * JMK25
                     TEXT=USER:' tried to access BUILD.DF.NW ':CARRIER.ACCESS.TIMES'.'     ; * JMK05
                     TEXT:='  CARRIER.ACCESS does not have access for transport mode ':QI  ; * JMK05
                     GOSUB ACCESS.NOTIFY           ; * JMK05
                  END                    ; * JMK03
                  GOTO 500               ; * JMK03
               END                       ; * JMK03
            END                          ; * JMK03
         CASE 1
            GOTO 600
      END CASE
      MODE=QI
      IF MODE#'ALL' THEN
         READ TRANS.REC FROM F.TRANSPORT,MODE ELSE
            CALL ELINE('ERROR: Transportation Code ':MODE:' not on file.')
            GOTO 600
         END
         MODE.DESC=TRANS.REC<1>
      END ELSE
         MODE.DESC=''
      END
      GOSUB DISPLAY.SCREEN


      IF (CLIENT.ID='ALL' OR CLIENT.ID='AFS' OR CLIENT.ID='SCT' OR CLIENT.ID='UNI' OR CLIENT.ID='UFM' OR CLIENT.ID='LGI') THEN     ; * JMK14 ; * JMK52 ; * JMK65 ; * JMK72
         FILE.SEL='2'
         FILE.DESC='History'
         AUTO=0
        
         IF USER='WPARDUE' THEN GO 700   ; * JMK48
         IF USER='DAVID' THEN GO 700     ; * JMK48
         IF USER='JADAMS' THEN GO 700        ; * NKH02
         IF USER='JADAMSAUDIT' THEN GO 700   ; * NKH02
         IF USER='NMEDDAUGH' THEN GO 700     ; * NKH02
         GOTO 800
      END

* Enter file selection

700:  ***
      IF CLIENT.ID[1,2]='99' THEN
         FILE.SEL='1' ; FILE.DESC='Current' ; AUTO=0
      END
      PAGE.NUM=1
      PROMPT.NUM=7
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 600
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=FILE.SEL:STR(MASK.CHAR,4-LEN(FILE.SEL))
      IF CLIENT.ID='00574' THEN
         HELP='[1]=Current [2]=History [3]=Last Processed [4]=Accrual [5]=UnProcessed [X]=Back [EX]it'
      END ELSE
         IF CLIENT.ID='01706' THEN
            HELP='[1]=Current [2]=History [3]=Last Processed [5]=UnProcessed [6]=Unp History'
         END ELSE
            HELP='[1]=Current [2]=History [3]=Last Processed [5]=UnProcessed [X]=Back [EX]it'
         END
      END
      CALL GEN.IN(27,9,MASK,'',Q,0,4,'','',0,27,9,0,QI,HELP,0,23)
      IF QI='' THEN QI=FILE.SEL
      QI=OCONV(QI,'MCU')
      AUTO=0
      BEGIN CASE
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOTO 600
         CASE QI=1
            FILE='FB.BILLS,':CLIENT.ID
            FILE.DESC='Current'
         CASE QI=2
            FILE='FB.BILLS.HIST,':CLIENT.ID
            FILE.DESC='History'
         CASE QI=3
            OPEN '','FB.UNPROCESS,':CLIENT.ID TO F.UP ELSE
               CALL ELINE('Cannot open FB.UNPROCESS,':CLIENT.ID:'. "Last" option not available.')
               GOTO 700
            END
            READ DDATES FROM F.UP,'PROCESS.DATES' ELSE
               CALL ELINE('FB.UNPROCESS,':CLIENT.ID:' PROCESS.DATES not on file.  "Last" option not available.')
               GOTO 700
            END
            FILE='FB.BILLS.HIST,':CLIENT.ID
            FILE.DESC='Last Processed'
            BEG.DATE=DDATES<1>
            END.DATE=DDATES<2>
            DAYS=END.DATE-BEG.DATE+1
            AUTO=1
         CASE QI=4 AND CLIENT.ID='00574'
            FILE='FB.BILLS.HIST,':CLIENT.ID
            FILE.DESC='Accrual'
         CASE QI=5
            FILE='FB.BILLS,':CLIENT.ID
            FILE.DESC='Unprocessed'
         CASE QI=6 AND CLIENT.ID='01706'
            FILE='FB.BILLS.HIST,':CLIENT.ID
            FILE.DESC='Unprocess History'
         CASE 1
            GOTO 700
      END CASE

      IF (CLIENT.ID#'ALL' AND CLIENT.ID#'AFS' AND CLIENT.ID#'SCT' AND CLIENT.ID#'UNI' AND CLIENT.ID#'UFM' AND CLIENT.ID#'LGI') THEN          ; * JMK14 ; * JMK52 ; * JMK65 ; * JMK72
         OPEN FILE TO FB.BILLS ELSE CALL OPEN.ABORT(FILE,PROG.NAME)
      END
      FILE.SEL=QI

      IF AUTO THEN
         DISPLAY<PROMPT.NUM+1>=1
         DISPLAY<PROMPT.NUM+2>=1
         GOSUB DISPLAY.SCREEN
         GOTO 1000
      END ELSE
         GOSUB DISPLAY.SCREEN
      END

* Enter beginning date

800:  ***
      PER.OPT=''                         ; * JMK18
      PAGE.NUM=1
      PROMPT.NUM=8
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 700
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=BEG.DATE'D4-'
      HELP='Enter beginning date. [T]oday [X]=Back [EX]it'
      CRT @(50,10):"+-Other Options----+"          ; * JMK18
      CRT @(50,11):"| LW=Last Week     |"          ; * JMK18
      CRT @(50,12):"| LM=Last Month    |"          ; * JMK18
      CRT @(50,13):"| LQ=Last Quarter  |"          ; * JMK18
      CRT @(50,14):"| L6=Last 6 Months |"          ; * JMK18
      CRT @(50,15):"| LY=Last Year     |"          ; * JMK18
      CRT @(50,16):"+------------------+"          ; * JMK18
      CALL GEN.IN(27,10,MASK,'',Q,0,10,'','',2,27,10,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=BEG.DATE'D4-'
      BEGIN CASE
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOTO 700
         CASE QI='T'
            QI=DATE()'D4-'
         CASE QI='LW'                    ; * JMK18
            PER.OPT=QI                   ; * JMK18
         CASE QI='LM'                    ; * JMK18
            PER.OPT=QI                   ; * JMK18
         CASE QI='LQ'                    ; * JMK18
            PER.OPT=QI                   ; * JMK18
         CASE QI='L6'                    ; * JMK18
            PER.OPT=QI                   ; * JMK18
         CASE QI='LY'                    ; * JMK18
            PER.OPT=QI                   ; * JMK18
         CASE QI MATCHES '0N'
            BEGIN CASE
               CASE LEN(QI)=4
                  QI=QI[1,2]:'.':QI[3,2]:'.':(DATE()'D4/')[7,4]
               CASE LEN(QI)=6
                  IF QI[5,2]<50 THEN
                     QI=QI[1,2]:'.':QI[3,2]:'.':(DATE()'D4/')[7,2]:QI[5,2]
                  END ELSE
                     QI=QI[1,2]:'.':QI[3,2]:'.':'19':QI[5,2]           ; * ((DATE()-365)'D4/')[7,2]:QI[5,2]
                  END
               CASE LEN(QI)=8
                  QI=QI[1,2]:'.':QI[3,2]:'.':QI[5,4]
               CASE 1
                  CALL ELINE('Use one of the following formats: MMDD or MMDDYY or MMDDYYYY.')
                  GOTO 800
            END CASE
      END CASE
      IF PER.OPT#'' THEN                 ; * JMK18
         TODAY=OCONV(DATE(),'D2/')       ; * JMK18
         TMO=FIELD(TODAY,'/',1)          ; * JMK18
         TDA=FIELD(TODAY,'/',2)          ; * JMK18
         TYR=FIELD(TODAY,'/',3)          ; * JMK18
         PMO=TMO                         ; * JMK18
         PDA=TDA                         ; * JMK18
         PYR=TYR                         ; * JMK18
         BEGIN CASE                      ; * JMK18
            CASE PER.OPT='LW'            ; * JMK18
               PER.DATE=DATE()-7         ; * JMK18
               PER.ODATE=OCONV(PER.DATE,'D2/')     ; * JMK18
               PMO=FIELD(PER.ODATE,'/',1)          ; * JMK18
               PDA=FIELD(PER.ODATE,'/',2)          ; * JMK18
               PYR=FIELD(PER.ODATE,'/',3)          ; * JMK18
            CASE PER.OPT='LM'            ; * JMK18
               PMO=TMO-1
            CASE PER.OPT='LQ'            ; * JMK18
               PMO=TMO-3
            CASE PER.OPT='L6'            ; * JMK18
               PMO=TMO-6
            CASE PER.OPT='LY'            ; * JMK18
               PYR=TYR-1
         END CASE                        ; * JMK18
         IF PMO < 1 THEN                 ; * JMK18
            PMO=PMO+12                   ; * JMK18
            PYR=PYR-1                    ; * JMK18
         END                             ; * JMK18
         IF PMO=2 AND PDA > 28 THEN PDA=28
         IF PMO=4 OR PMO=6 OR PMO=9 OR PMO=11 THEN
            IF PDA >30 THEN PDA=30
         END
         PER.DATE=PMO'R%2':'/':PDA'R%2':'/':PYR'R%2'         ; * JMK18
         QI=PER.DATE                     ; * JMK18
      END
      IF CLIENT.ID#'ALL' AND CLIENT.ID#'AFS' AND CLIENT.ID#'STC' THEN  ; * JMK23
         IF CLIENT.REC<82>#'' AND ICONV(QI,'D')>CLIENT.REC<82> THEN     ; * JMK23
            CALL ELINE('Last processed date was ':CLIENT.REC<82>'D4-':'. No bills to process.')      ; * JMK23
            GOTO 800                     ; * JMK23
         END                             ; * JMK23
      END                                ; * JMK23
      BEG.DATE=ICONV(QI,'D')
      IF BEG.DATE='' THEN
         CALL ELINE('Invalid date.')
         GOTO 800
      END
      GOSUB DISPLAY.SCREEN
      FOR CLR=10 TO 16                   ; * JMK18
         CRT @(50,CLR):@(-4):            ; * JMK18
      NEXT CLR                           ; * JMK18

* Enter ending date

900:  ***
      PAGE.NUM=1
      PROMPT.NUM=9
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 800
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      IF PER.OPT#'' THEN                 ; * JMK18
         END.DATE=(DATE()-1)'D4-'        ; * JMK18
      END                                ; * JMK18
      MASK=END.DATE'D4-'
      HELP='Enter ending date. [T]oday [X]=Back [EX]it'
      CALL GEN.IN(27,11,MASK,'',Q,0,10,'','',2,27,11,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=END.DATE'D4'
      BEGIN CASE
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOTO 800
         CASE QI='T'
            QI=DATE()'D4-'
         CASE QI MATCHES '0N'
            BEGIN CASE
               CASE LEN(QI)=4
                  QI=QI[1,2]:'.':QI[3,2]:'.':(DATE()'D4/')[7,4]
               CASE LEN(QI)=6
                  IF QI[5,2]<50 THEN
                     QI=QI[1,2]:'.':QI[3,2]:'.':(DATE()'D4/')[7,2]:QI[5,2]
                  END ELSE
                     QI=QI[1,2]:'.':QI[3,2]:'.':'19':QI[5,2]           ; * ((DATE()-365)'D4/')[7,2]:QI[5,2]
                  END
               CASE LEN(QI)=8
                  QI=QI[1,2]:'.':QI[3,2]:'.':QI[5,4]
               CASE 1
                  CALL ELINE('Use one of the following formats: MMDD or MMDDYY or MMDDYYYY.')
                  GOTO 900
            END CASE
      END CASE
      END.DATE=ICONV(QI,'D')
      IF END.DATE='' THEN
         CALL ELINE('Invalid date.')
         GOTO 900
      END
      IF BEG.DATE GT END.DATE THEN
         CALL ELINE('Beginning date cannot exceed ending date.')
         GOTO 900
      END
      GOSUB DISPLAY.SCREEN
      DAYS=END.DATE-BEG.DATE+1

* Duplicates only (Y/N)?

1000: ***
      PAGE.NUM=1
      PROMPT.NUM=10
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 900
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=DUPLICATES.ONLY:STR(MASK.CHAR,4-LEN(DUPLICATES.ONLY))
      HELP='Duplicates only? (No means NON Duplicates only) [Y]es [N]o [X]=Back [EX]it'
      CALL GEN.IN(27,12,MASK,'',Q,0,4,'','',0,27,12,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=DUPLICATES.ONLY
      BEGIN CASE
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            IF AUTO THEN
               DISPLAY<PROMPT.NUM-1>=0
               DISPLAY<PROMPT.NUM-2>=0
            END
            GOTO 900
         CASE QI='N' OR QI='NO' OR QI='0'
            QI='NO'
         CASE QI='Y' OR QI='YE' OR QI='YES' OR QI='1'
            QI='YES'
         CASE 1
            GOTO 1000
      END CASE
      DUPLICATES.ONLY=QI
      GOSUB DISPLAY.SCREEN

      IF DUPLICATES.ONLY='YES' THEN
         CUT.BACK.CODE=''
         CUT.DESC=''
         MISROUTE.INFO='N'
         MISROUTE.DESC=''
         OVERCHARGE.INFO='N'
         OVERCHARGE.DESC=''
         INCLUDE.BD='NO'
         LOGISTICS.INFO='N'
         LOGISTICS.DESC=''
         DISCOUNT.INFO='N'
         DISCOUNT.DESC=''
         GOTO 1700
      END

* Enter cut back code

1100: ***
      PAGE.NUM=1
      PROMPT.NUM=11
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 1000
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=CUT.BACK.CODE:STR(MASK.CHAR,4-LEN(CUT.BACK.CODE))
*     HELP='Enter cut-back code. [ ]=Clear [L]ist [X]=Back [EX]it'  ; * SWB01
      HELP='Enter cut-back code. [I]nclude Cutbacks only [E]xclude Cutbackss only [ ]=Clear [L]ist [X]=Back [EX]it'      ; * SWB01
      CALL GEN.IN(27,13,MASK,'',Q,0,4,'','',0,27,13,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=CUT.BACK.CODE
      IF QI=' ' THEN QI=''
      BEGIN CASE
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOTO 1000
         CASE QI='L'
            EXECUTE 'SORT FB.CUT.BACKS 1'
            CALL ELINE('')
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            CRT @(0,2):STR('=',79)
            GOSUB DISPLAY.SCREEN
            GOTO 1100
         CASE QI='I'                     ; * SWB01
         CASE QI='E'                     ; * SWB01
         CASE QI=''
         CASE NUM(QI)
            QI=QI'R%4'
      END CASE
      CUT.BACK.CODE=TRIM(QI)

      BEGIN CASE                         ; * SWB01
         CASE CUT.BACK.CODE = 'I'        ; * SWB01
            CUT.DESC='Include Only'      ; * SWB01
         CASE CUT.BACK.CODE = 'E'        ; * SWB01
            CUT.DESC='Exclude Only'      ; * SWB01
         CASE CUT.BACK.CODE # ''         ; * SWB01
            READV CUT.DESC FROM F.CUT.BACKS,CUT.BACK.CODE,1 ELSE
               CALL ELINE('Code ':CUT.BACK.CODE:' not on file.')
               GOTO 1100
            END

         CASE 1                          ; * SWB01
            CUT.DESC='No Preference'     ; * SWB01

      END CASE                           ; * SWB01
      GOSUB DISPLAY.SCREEN

* Enter misroute information

1200: ***
      PAGE.NUM=1
      PROMPT.NUM=12
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 1100
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=MISROUTE.INFO:STR(MASK.CHAR,4-LEN(MISROUTE.INFO))
      HELP='[I]nclude misroute only [E]xclude misroute only [N]o pref [X]=Back [EX]it'
      CALL GEN.IN(27,14,MASK,'',Q,0,4,'','',0,27,14,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=MISROUTE.INFO
      BEGIN CASE
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOTO 1100
         CASE QI='N'
         CASE QI='E'
         CASE QI='I'
         CASE QI='-'                     ; * Hidden
         CASE QI='B'                     ; * Hidden
         CASE 1
            GOTO 1200
      END CASE
      IF QI='-' OR QI='B' THEN
         IF USER#'BRIAN'  THEN
            GOTO 1200
         END
      END
      MISROUTE.INFO=QI
      BEGIN CASE
         CASE MISROUTE.INFO='N'
            MISROUTE.DESC='No Preference'
         CASE MISROUTE.INFO='E'
            MISROUTE.DESC='Exclude Only'
         CASE MISROUTE.INFO='I'
            MISROUTE.DESC='Include Only'
         CASE MISROUTE.INFO='-'
            MISROUTE.DESC='Negative Misroutes Only'
         CASE MISROUTE.INFO='B'
            MISROUTE.DESC='Include Negative Misroutes'
      END CASE
      GOSUB DISPLAY.SCREEN

* Enter overcharge information

1300: ***
      PAGE.NUM=1
      PROMPT.NUM=13
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 1200
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=OVERCHARGE.INFO:STR(MASK.CHAR,4-LEN(OVERCHARGE.INFO))
      HELP='[I]nclude overcharge only [E]xclude overcharge only [N]o pref [X]=Back [EX]it'
      CALL GEN.IN(27,15,MASK,'',Q,0,4,'','',0,27,15,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=OVERCHARGE.INFO
      BEGIN CASE
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOTO 1200
         CASE QI='N'
         CASE QI='E'
         CASE QI='I'
         CASE 1
            GOTO 1300
      END CASE
      OVERCHARGE.INFO=QI
      BEGIN CASE
         CASE OVERCHARGE.INFO='N'
            OVERCHARGE.DESC='No Preference'
         CASE OVERCHARGE.INFO='E'
            OVERCHARGE.DESC='Exclude Only'
         CASE OVERCHARGE.INFO='I'
            OVERCHARGE.DESC='Include Only'
      END CASE
      GOSUB DISPLAY.SCREEN
      IF OVERCHARGE.INFO#'I' THEN
         INCLUDE.BD='NO'
         GOTO 1500
      END

* Include balance due (Y/N)?

1400: ***
      PAGE.NUM=1
      PROMPT.NUM=14
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 1300
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=INCLUDE.BD:STR(MASK.CHAR,4-LEN(INCLUDE.BD))
      HELP='Include balance dues paid on overcharges selected? [Y]es [N]o [X]=Back [EX]it'
      CALL GEN.IN(27,16,MASK,'',Q,0,4,'','',0,27,16,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=INCLUDE.BD
      BEGIN CASE
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOTO 1300
         CASE QI='N' OR QI='NO' OR QI='0'
            QI='NO'
         CASE QI='Y' OR QI='YE' OR QI='YES' OR QI='1'
            QI='YES'
         CASE 1
            GOTO 1400
      END CASE
      INCLUDE.BD=QI
      GOSUB DISPLAY.SCREEN

* Include or Exlcude Inbound/Outbound/Third-Party information ; * JCW01

1500: ***
      PAGE.NUM=1
      PROMPT.NUM=15
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 1400
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=INCLUDE.IOT:STR(MASK.CHAR,4-LEN(INCLUDE.IOT))
      HELP='Inbound/Outbound/ThirdParty [I]nclude [E]xclude [N]o Preference [X]=Back [EX]it'
      CALL GEN.IN(27,17,MASK,'',Q,0,4,'','',0,27,17,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=INCLUDE.IOT
      BEGIN CASE
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOTO 1400
         CASE QI='N' OR QI='NO' OR QI='0'
            QI='N'
         CASE QI='I' OR QI='E'
         CASE 1
            GOTO 1500
      END CASE
      INCLUDE.IOT=QI
      BEGIN CASE
         CASE QI = 'I'
            INCLUDE.IOT.DESC = 'Include'
         CASE QI = 'E'
            INCLUDE.IOT.DESC = 'Exclude'
         CASE QI = 'N'
            INCLUDE.IOT.DESC = 'No Preference'
      END CASE
      GOSUB DISPLAY.SCREEN
      IF INCLUDE.IOT = 'N' THEN GOTO 1700

* Enter Inbound/Outbound/Third-Party information ; * JCW01

1600: ***
      PAGE.NUM=1
      PROMPT.NUM=16
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 1500
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=IOT.INFO:STR(MASK.CHAR,4-LEN(IOT.INFO))
      IF INCLUDE.IOT = 'I' THEN
         HELP = 'Include '
      END ELSE
         HELP = 'Exclude '
      END
      HELP=HELP:'[I]nbound [O]utbound [T]hird Party [X]=Back [EX]it'
      CALL GEN.IN(27,18,MASK,'',Q,0,4,'','',0,27,18,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=IOT.INFO
      BEGIN CASE
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOTO 1500
         CASE QI='I' OR QI='O' OR QI='T'
         CASE 1
            GOTO 1600
      END CASE
      IOT.INFO=QI
      BEGIN CASE
         CASE QI = 'I'
            IOT.DESC = 'Inbound Only'
         CASE QI = 'O'
            IOT.DESC = 'Outbound Only'
         CASE QI = 'T'
            IOT.DESC = 'Third Party Only'
         CASE QI = 'NO'
            IOT.DESC = 'No Preference'
      END CASE
      GOSUB DISPLAY.SCREEN

* Enter logistics information

1700: ***
      PAGE.NUM=1
      PROMPT.NUM=17
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 1600
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=LOGISTICS.INFO:STR(MASK.CHAR,4-LEN(LOGISTICS.INFO))
      HELP='[I]nclude logistics only [E]xclude logistics only [N]o pref [X]=Back [EX]it'
      CALL GEN.IN(27,19,MASK,'',Q,0,4,'','',0,27,19,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=LOGISTICS.INFO
      BEGIN CASE
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOTO 1600
         CASE QI='N'
         CASE QI='E'
         CASE QI='I'
         CASE 1
            GOTO 1700
      END CASE
      LOGISTICS.INFO=QI
      BEGIN CASE
         CASE LOGISTICS.INFO='N'
            LOGISTICS.DESC='No Preference'
         CASE LOGISTICS.INFO='E'
            LOGISTICS.DESC='Exclude Only'
         CASE LOGISTICS.INFO='I'
            LOGISTICS.DESC='Include Only'
      END CASE
      GOSUB DISPLAY.SCREEN

* Enter discount information

1800: ***
      PAGE.NUM=1
      PROMPT.NUM=18
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 1700
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=DISCOUNT.INFO:STR(MASK.CHAR,4-LEN(DISCOUNT.INFO))
      HELP='[I]nclude discount only [E]xclude discount only [N]o pref [X]=Back [EX]it'
      CALL GEN.IN(27,20,MASK,'',Q,0,4,'','',0,27,20,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=DISCOUNT.INFO
      BEGIN CASE
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOTO 1700
         CASE QI='N'
         CASE QI='E'
         CASE QI='I'
         CASE 1
            GOTO 1800
      END CASE
      DISCOUNT.INFO=QI
      BEGIN CASE
         CASE DISCOUNT.INFO='N'
            DISCOUNT.DESC='No Preference'
         CASE DISCOUNT.INFO='E'
            DISCOUNT.DESC='Exclude Only'
         CASE DISCOUNT.INFO='I'
            DISCOUNT.DESC='Include Only'
      END CASE
      GOSUB DISPLAY.SCREEN

* Enter version number

1900: ***
      PAGE.NUM=2
      PROMPT.NUM=19
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 1800
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN

      IF (CLIENT.ID#'ALL' AND CLIENT.ID#'AFS' AND CLIENT.ID#'SCT' AND CLIENT.ID#'UNI' AND CLIENT.ID#'UFM' AND CLIENT.ID#'LGI') THEN VERSION=CLIENT.REC<134>      ; * JMK14 ; * JMK52 ; * JMK65 ; * JMK72
      IF CLIENT.ID[1,2]='99' THEN VERSION=8
      MASK=VERSION:STR(MASK.CHAR,4-LEN(VERSION))
      HELP='Enter version number. [L]ist [X]=Back [EX]it'
      CALL GEN.IN(27,3,MASK,'',Q,0,4,'','',0,27,3,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=VERSION
      IF QI='LCC' THEN QI='522'          ; * JMK72
      IF QI='MRS' THEN QI='677'          ; * JMK72
      IF QI='MSR' THEN QI='677'          ; * JMK72
      BEGIN CASE
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOTO 1800
         CASE QI='L'
            STMT='SORT FB.BUILD.SPEC BY FMT BY CLIENT.ID FMT CLIENT.ID 1 (I'
            EXECUTE STMT
            CALL ELINE('')
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            CRT @(0,2):STR('=',79)
            GOSUB DISPLAY.SCREEN
            GOTO 1900
         CASE QI=''
            GOTO 1900
         CASE 1
            IF CLIENT.ID[1,2]='99' AND QI#8 AND QI#808 AND QI#733 AND QI#734 THEN
               * Begin GRB04
               * BEGIN CASE
               IF OP.FLG2 = "Y" THEN

               END ELSE
                  CALL ELINE('Must use version 8, 808, 733, or 734 for client ':CLIENT.ID:'.')
                  GOTO 1900
               END

               ****  END CASE
            END
            * End GRB04
            ID='FMT*':CLIENT.ID:'*':QI
            READ DSPECS FROM F.BUILD.SPEC,ID ELSE
               ID='FMT**':QI
               READ DSPECS FROM F.BUILD.SPEC,ID ELSE
                  CALL ELINE('Version ':QI:' has not been setup.')
                  GOTO 1900
               END
            END
      END CASE
      IF QI='155' THEN                   ; * JMK30
         IF SEPARATE.DIVISIONS='Y' THEN  ; * JMK30
            IF DIVISIONAL.ID='ALL' THEN  ; * JMK30
               IF REGION='Y' THEN        ; * JMK57
                  CALL ELINE('Re-rate option is not available for multiple regions.')      ; * JMK57
               END ELSE                  ; * JMK57
                  CALL ELINE('Re-rate option is not available for multiple divisions.')    ; * JMK30
               END                       ; * JMK57
               GO 1900                   ; * JMK30
            END                          ; * JMK30
         END                             ; * JMK30
      END                                ; * JMK30
      VERSION=QI
*
      GOSUB DISPLAY.SCREEN

* Enter sort criteria

2000: ***
      PAGE.NUM=2
      PROMPT.NUM=20
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 1900
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN

      IF (CLIENT.ID#'ALL' AND CLIENT.ID#'AFS' AND CLIENT.ID#'SCT' AND CLIENT.ID#'UNI' AND CLIENT.ID#'UFM' AND CLIENT.ID#'LGI') THEN SORT=CLIENT.REC<135>         ; * JMK14 ; * JMK52 ; * JMK65 ; * JMK72
      MASK=SORT:STR(MASK.CHAR,4-LEN(SORT))
      HELP='Enter sort version number. [X]=Back [EX]it'
      CALL GEN.IN(27,4,MASK,'',Q,0,4,'','',0,27,4,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=SORT
      BEGIN CASE
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOTO 1900
         CASE QI=''
            GOTO 2000
         CASE 1
            ID='DF.SORT*':QI
            READ D.SORT FROM F.TABLES,ID ELSE
               CALL ELINE('Sort Version ':QI:' has not been setup.')
               GOTO 2000
            END
      END CASE
      SORT=QI
      GOSUB DISPLAY.SCREEN


* Email report (Y/N)?

2100: ***
      PAGE.NUM=2
      PROMPT.NUM=21
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 2000
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=EMAIL.REPORT:STR(MASK.CHAR,4-LEN(EMAIL.REPORT))
      HELP='Email this report automatically? [Y]es [N]o [X]=Back [EX]it'
      CALL GEN.IN(27,5,MASK,'',Q,0,4,'','',0,27,5,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=EMAIL.REPORT
      BEGIN CASE
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOTO 2000
         CASE QI='N' OR QI='NO' OR QI='0'
            QI='NO'
         CASE QI='Y' OR QI='YE' OR QI='YES' OR QI='1'
            QI='YES'
         CASE 1
            GOTO 2100
      END CASE
      EMAIL.REPORT=QI
      GOSUB DISPLAY.SCREEN
      BEGIN CASE
         CASE EMAIL.REPORT='NO'
            OPEN '','BILLDATA.':USER TO F.BILLDATA ELSE
               CALL ELINE('Unable to open BILLDATA.':USER:'.')
               GOTO THE.END
            END
            NEW.EMAIL.ADDR=''
*           GOTO VERIFY.SELECTION        ; * JMK01
            GOTO 2300                    ; * JMK01
         CASE EMAIL.REPORT='YES'
            OPEN '','EMAILDATA' TO F.BILLDATA ELSE
               CALL ELINE('Unable to open EMAILDATA.')
               GOTO THE.END
            END
      END CASE

* Enter email address

2200: ***
      PAGE.NUM=2
      PROMPT.NUM=22
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 2100
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      IF SEPARATE.DIVISIONS='YES' THEN
         IF DIVISIONAL.ID='ALL' THEN
            DIV.EMAIL.ADDR=''
            NEW.EMAIL.ADDR=''
            IF REGION='Y' THEN           ; * JMK57
               MASK='REGIONAL EMAIL ADDRESS'       ; * JMK57
            END ELSE                     ; * JMK57
               MASK='DIVISIONAL EMAIL ADDRESS'
            END                          ; * JMK57
         END ELSE
            NEW.EMAIL.ADDR=DIV.EMAIL.ADDR
            MASK=NEW.EMAIL.ADDR
         END
      END ELSE
         NEW.EMAIL.ADDR=CLIENT.REC<125,1>
         MASK=NEW.EMAIL.ADDR
      END
      IF CLIENT.REC<179>#'' THEN         ; * JMK08
         NEW.EMAIL.ADDR=CLIENT.REC<179,1>          ; * JMK08
         MASK=NEW.EMAIL.ADDR             ; * JMK08
         CRT @(60,6):"Troubleshoot Mode"           ; * JMK42
      END                                ; * JMK08
      MASK:=STR(MASK.CHAR,30-LEN(MASK))
      HELP='Enter email address. [ ]=Clear [X]=Back [EX]it'
      CALL GEN.IN(27,6,MASK,'',Q,0,30,'','',0,27,6,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=NEW.EMAIL.ADDR
      IF QI=' ' THEN QI=''
      BEGIN CASE
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOTO 2100
         CASE 1
            NEW.EMAIL.ADDR=QI
            DIV.EMAIL.ADDR=QI
      END CASE

* Enter LCC information

2300: ***; * JMK01
      PAGE.NUM=2                         ; * JMK01
      PROMPT.NUM=23                      ; * JMK01
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 2200         ; * JMK01
      BACK.FLAG=0                        ; * JMK01
      DISPLAY<PROMPT.NUM>=1              ; * JMK01
      GOSUB DISPLAY.SCREEN               ; * JMK01
      MASK=LCC.INFO:STR(MASK.CHAR,4-LEN(LCC.INFO))           ; * JMK01
      HELP='[I]nclude LCC only [E]xclude LCC only [N]o pref [X]=Back [EX]it'     ; * JMK01
      CALL GEN.IN(27,7,MASK,'',Q,0,4,'','',0,27,7,0,QI,HELP,0,23)      ; * JMK01
      QI=OCONV(QI,'MCU')                 ; * JMK01
      IF QI='' THEN QI=LCC.INFO          ; * JMK01
      BEGIN CASE                         ; * JMK01
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'     ; * JMK01
            GOTO THE.END                 ; * JMK01
         CASE QI='X'                     ; * JMK01
            BACK.FLAG=1                  ; * JMK01
            DISPLAY<PROMPT.NUM>=0        ; * JMK01
            GOTO 2200                    ; * JMK01
         CASE QI='N'                     ; * JMK01
         CASE QI='E'                     ; * JMK01
         CASE QI='I'                     ; * JMK01
*           IF MISROUTE.INFO='I' THEN    ; * JMK01
*              CALL ELINE('Cannot include with misroutes. Please run separately.')         ; * JMK01
*           END                          ; * JMK01
         CASE 1                          ; * JMK01
            GOTO 2300                    ; * JMK01
      END CASE                           ; * JMK01
      LCC.INFO=QI                        ; * JMK01
      BEGIN CASE                         ; * JMK01
         CASE LCC.INFO='N'               ; * JMK01
            LCC.DESC='No Preference'     ; * JMK01
         CASE LCC.INFO='E'               ; * JMK01
            LCC.DESC='Exclude Only'      ; * JMK01
         CASE LCC.INFO='I'               ; * JMK01
            LCC.DESC='Include Only'      ; * JMK01
         CASE LCC.INFO='-'               ; * JMK01
            LCC.DESC='Negative Misroutes Only'     ; * JMK01
         CASE LCC.INFO='B'               ; * JMK01
            LCC.DESC='Include Negative Misroutes'  ; * JMK01
      END CASE                           ; * JMK01
      GOSUB DISPLAY.SCREEN               ; * JMK01

2400: * Enter TL Options ; * JMK17
      PAGE.NUM=2                         ; * JMK17
      PROMPT.NUM=24                      ; * JMK17
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 2300         ; * JMK17
      BACK.FLAG=0                        ; * JMK17
      DISPLAY<PROMPT.NUM>=1              ; * JMK17
      GOSUB DISPLAY.SCREEN               ; * JMK17
      MASK=TL.INFO:STR(MASK.CHAR,4-LEN(TL.INFO))   ; * JMK17
      HELP='[I]nclude TL only [N]o pref [X]=Back [EX]it'     ; * JMK17
      CALL GEN.IN(27,8,MASK,'',Q,0,4,'','',0,27,8,0,QI,HELP,0,23)      ; * JMK17
      QI=OCONV(QI,'MCU')                 ; * JMK17
      IF QI='' THEN QI=TL.INFO           ; * JMK17
      BEGIN CASE                         ; * JMK17
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'     ; * JMK17
            GOTO THE.END                 ; * JMK17
         CASE QI='X'                     ; * JMK17
            BACK.FLAG=1                  ; * JMK17
            DISPLAY<PROMPT.NUM>=0        ; * JMK17
            GOTO 2300                    ; * JMK17
         CASE QI='N'                     ; * JMK17
         CASE QI='I'                     ; * JMK17
         CASE 1                          ; * JMK17
            GOTO 2400                    ; * JMK17
      END CASE                           ; * JMK17
      TL.INFO=QI                         ; * JMK17
      BEGIN CASE                         ; * JMK17
         CASE TL.INFO='N'                ; * JMK17
            TL.DESC='No Preference'      ; * JMK17
         CASE TL.INFO='I'                ; * JMK17
            TL.DESC='Include Only'       ; * JMK17
      END CASE                           ; * JMK17
      GOSUB DISPLAY.SCREEN               ; * JMK17

2500: * Enter electronic bill Options ; * JMK22
      PAGE.NUM=2                         ; * JMK22
      PROMPT.NUM=25                      ; * JMK22
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 2400         ; * JMK22
      BACK.FLAG=0                        ; * JMK22
      DISPLAY<PROMPT.NUM>=1              ; * JMK22
      GOSUB DISPLAY.SCREEN               ; * JMK22
      MASK=EBILL.INFO:STR(MASK.CHAR,4-LEN(EBILL.INFO))       ; * JMK22
      HELP='[I]nclude EBILL only [E]xclude EBILL only [N]o pref [X]=Back [EX]it'           ; * JMK22
      CALL GEN.IN(27,9,MASK,'',Q,0,4,'','',0,27,9,0,QI,HELP,0,23)      ; * JMK22
      QI=OCONV(QI,'MCU')                 ; * JMK22
      IF QI='' THEN QI=EBILL.INFO        ; * JMK22
      BEGIN CASE                         ; * JMK22
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'     ; * JMK22
            GOTO THE.END                 ; * JMK22
         CASE QI='X'                     ; * JMK22
            BACK.FLAG=1                  ; * JMK22
            DISPLAY<PROMPT.NUM>=0        ; * JMK22
            GOTO 2400                    ; * JMK22
         CASE QI='N'                     ; * JMK22
         CASE QI='I'                     ; * JMK22
         CASE QI='E'                     ; * JMK22
         CASE 1                          ; * JMK22
            GOTO 2500                    ; * JMK22
      END CASE                           ; * JMK22
      EBILL.INFO=QI                      ; * JMK22
      BEGIN CASE                         ; * JMK22
         CASE EBILL.INFO='N'             ; * JMK22
            EBILL.DESC='No Preference'   ; * JMK22
         CASE EBILL.INFO='E'             ; * JMK22
            EBILL.DESC='Exclude Only'    ; * JMK22
         CASE EBILL.INFO='I'             ; * JMK22
            EBILL.DESC='Include Only'    ; * JMK22
      END CASE                           ; * JMK22
      GOSUB DISPLAY.SCREEN               ; * JMK22

2600: * Enter electronic bill Options ; * JMK26
      PAGE.NUM=2                         ; * JMK26
      PROMPT.NUM=26                      ; * JMK26
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 2500         ; * JMK26
      BACK.FLAG=0                        ; * JMK26
      DISPLAY<PROMPT.NUM>=1              ; * JMK26
      GOSUB DISPLAY.SCREEN               ; * JMK26
      MASK=SAMPLE.ONE:STR(MASK.CHAR,4-LEN(SAMPLE.ONE))       ; * JMK26
      HELP='ONLY Process ONE bill per client [Y]=Yes [N]=No [X]=Back [EX]it'     ; * JMK26
      CALL GEN.IN(27,10,MASK,'',Q,0,4,'','',0,27,10,0,QI,HELP,0,23)    ; * JMK26
      QI=OCONV(QI,'MCU')                 ; * JMK26
      IF QI='' THEN QI=SAMPLE.ONE        ; * JMK26
      BEGIN CASE                         ; * JMK26
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'     ; * JMK26
            GOTO THE.END                 ; * JMK26
         CASE QI='X'                     ; * JMK26
            BACK.FLAG=1                  ; * JMK26
            DISPLAY<PROMPT.NUM>=0        ; * JMK26
            GOTO 2500                    ; * JMK26
         CASE QI='N'                     ; * JMK26
         CASE QI='Y'                     ; * JMK26
         CASE 1                          ; * JMK26
            GOTO 2600                    ; * JMK26
      END CASE                           ; * JMK26
      SAMPLE.ONE=QI                      ; * JMK26
      GOSUB DISPLAY.SCREEN               ; * JMK26

2700: * Enter reject bill Options        ; * JMK27
      PAGE.NUM=2                         ; * JMK27
      PROMPT.NUM=27                      ; * JMK27
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 2600         ; * JMK27
      BACK.FLAG=0                        ; * JMK27
      DISPLAY<PROMPT.NUM>=1              ; * JMK27
      GOSUB DISPLAY.SCREEN               ; * JMK27
      MASK=SAMPLE.ONE:STR(MASK.CHAR,4-LEN(SAMPLE.ONE))       ; * JMK27
      HELP='[I]nclude Rejects only [E]xclude Rejects only [N]o pref [X]=Back [EX]it'       ; * JMK27
      CALL GEN.IN(27,11,MASK,'',Q,0,4,'','',0,27,11,0,QI,HELP,0,23)    ; * JMK27
      QI=OCONV(QI,'MCU')                 ; * JMK27
      IF QI='' THEN QI=REJ.INFO          ; * JMK27
      BEGIN CASE                         ; * JMK27
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'     ; * JMK27
            GOTO THE.END                 ; * JMK27
         CASE QI='X'                     ; * JMK27
            BACK.FLAG=1                  ; * JMK27
            DISPLAY<PROMPT.NUM>=0        ; * JMK27
            GOTO 2600                    ; * JMK27
         CASE QI='I'                     ; * JMK27
         CASE QI='E'                     ; * JMK27
         CASE QI='N'                     ; * JMK27
         CASE 1                          ; * JMK27
            GOTO 2700                    ; * JMK27
      END CASE                           ; * JMK27
      REJ.INFO=QI                        ; * JMK27
      BEGIN CASE                         ; * JMK27
         CASE REJ.INFO='N'               ; * JMK27
            REJ.DESC='No Preference'     ; * JMK27
         CASE REJ.INFO='E'               ; * JMK27
            REJ.DESC='Exclude Only'      ; * JMK27
         CASE REJ.INFO='I'               ; * JMK27
            REJ.DESC='Include Only'      ; * JMK27
      END CASE                           ; * JMK27
      GOSUB DISPLAY.SCREEN               ; * JMK27

2800: * Enter Delayed Report Options     ; * JMK29
      PAGE.NUM=2                         ; * JMK29
      PROMPT.NUM=28                      ; * JMK29
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 2700         ; * JMK29

2900: *
      PAGE.NUM=2
      PROMPT.NUM=29

      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 2800         ; * JMK32
      BACK.FLAG=0                        ; * JMK32
      DISPLAY<PROMPT.NUM>=1              ; * JMK32
      GOSUB DISPLAY.SCREEN               ; * JMK32
      MASK=ROW.LIMIT:STR(MASK.CHAR,4-LEN(ROW.LIMIT))         ; * JMK32
      HELP='Excel Row Limit [O]<65000 [N]>65000 [X]=Back [EX]it'       ; * JMK32
      CALL GEN.IN(27,13,MASK,'',Q,0,4,'','',0,27,13,0,QI,HELP,0,23)    ; * JMK32
      QI=OCONV(QI,'MCU')                 ; * JMK32
      IF QI='' THEN QI=ROW.LIMIT         ; * JMK32
      BEGIN CASE                         ; * JMK32
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'     ; * JMK32
            GOTO THE.END                 ; * JMK32
         CASE QI='X'                     ; * JMK32
            BACK.FLAG=1                  ; * JMK32
            DISPLAY<PROMPT.NUM>=0        ; * JMK32
            GOTO 2700                    ; * JMK32
         CASE QI='N'                     ; * JMK32
         CASE QI='O'                     ; * JMK32
         CASE 1                          ; * JMK32
            GOTO 2900                    ; * JMK32
      END CASE                           ; * JMK32
      ROW.LIMIT=QI                       ; * JMK32
      GOSUB DISPLAY.SCREEN

3000: * Enter state filter.
      PAGE.NUM=2
      PROMPT.NUM=30

      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 2900
      BACK.FLAG=0                        ; * JMK37
      DISPLAY<PROMPT.NUM>=1              ; * JMK37
      GOSUB DISPLAY.SCREEN               ; * JMK37
      MASK=ST.FILTER:STR(MASK.CHAR,30-LEN(ST.FILTER))        ; * JMK37
      HELP='Enter State Filter ST{ ST ST} [X]=Back [EX]it'   ; * JMK37
      CALL GEN.IN(27,14,MASK,'',Q,0,30,'','',0,27,14,0,QI,HELP,0,23)   ; * JMK37
      QI=OCONV(QI,'MCU')                 ; * JMK37

      IF QI='' THEN QI=ST.FILTER         ; * JMK37
      BEGIN CASE                         ; * JMK37
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'     ; * JMK37
            GOTO THE.END                 ; * JMK37
         CASE QI='X'                     ; * JMK37
            BACK.FLAG=1                  ; * JMK37
            DISPLAY<PROMPT.NUM>=0        ; * JMK37
            GOTO 2900                    ; * JMK37
         CASE QI=''                      ; * JMK37
         CASE 1                          ; * JMK37
            NSTVAL=DCOUNT(QI,' ')        ; * JMK37
            FOR STVAL=1 TO NSTVAL        ; * JMK37
               TST=FIELD(QI,' ',STVAL)   ; * JMK37
               LOCATE TST IN STATES.REC<1> SETTING SPOS ELSE           ; * JMK37
                  CALL ELINE(TST:' is an invalid state!')    ; * JMK37
                  GO 3000                ; * JMK37
               END                       ; * JMK37
            NEXT STVAL                   ; * JMK37
      END CASE                           ; * JMK37
      ST.FILTER=QI                       ; * JMK37
      GOSUB DISPLAY.SCREEN

3100: *
      PAGE.NUM=2
      PROMPT.NUM=31

      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 3000
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
*
      MASK=STACK.FILTER:STR(MASK.CHAR,30-LEN(STACK.FILTER))  ; * NPR03
      HELP='Enter Stack Filter - STACK#{ 1 2 ..} [N]o pref [X]=Back [EX]it'      ; * NPR03
      CALL GEN.IN(27,15,MASK,'',Q,0,30,'','',0,27,15,0,QI,HELP,0,23)   ; * NPR03
      QI = TRIM(QI)                      ; * NPR03
      QI=OCONV(QI,'MCU')                 ; * NPR03
      IF QI='' THEN QI=STACK.FILTER      ; * NPR03
      BEGIN CASE                         ; * NPR03
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'     ; * NPR03
            GOTO THE.END                 ; * NPR03
         CASE QI='X'                     ; * NPR03
            BACK.FLAG=1                  ; * NPR03
            DISPLAY<PROMPT.NUM>=0        ; * NPR03
            GOTO 3000                    ; * NPR03
         CASE QI='' OR QI = 'N'          ; * NPR03
         CASE 1                          ; * NPR03
            NSTVAL=DCOUNT(QI,' ')        ; * NPR03
            FOR STVAL=1 TO NSTVAL        ; * NPR03
               W.STACK = FIELD(QI,' ',STVAL)       ; * NPR03
               IF W.STACK GE 1 AND W.STACK LE 4 THEN         ; * NPR03
                  NULL                   ; * NPR03
               END ELSE                  ; * NPR03
                  CALL ELINE(W.STACK:' is an invalid Stack # - Only 1 2 3 & 4 are valid choices!')   ; * NPR03
                  GO 3100                ; * NPR03
               END                       ; * NPR03
            NEXT STVAL                   ; * NPR03
      END CASE                           ; * NPR03
      STACK.FILTER=QI                    ; * NPR03
      GOSUB DISPLAY.SCREEN
*

3200: *
      PAGE.NUM=2
      PROMPT.NUM=32

      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 3100
      IF VERSION = '610' THEN            ; * SWB02
         RPT.STYLE = 'T'                 ; * SWB02
         DISPLAY<PROMPT.NUM>=1           ; * SWB02
         GOSUB DISPLAY.SCREEN            ; * SWB02
         GOTO 3300                       ; * SWB02
      END                                ; * SWB02
      BACK.FLAG=0                        ; * JMK32
      DISPLAY<PROMPT.NUM>=1              ; * JMK32
      GOSUB DISPLAY.SCREEN               ; * JMK32
      MASK=RPT.STYLE:STR(MASK.CHAR,4-LEN(RPT.STYLE))         ; * JMK32

      HELP='Output Format Style [T]=Text [C]=CSV [H]=HTML [X]=Back [EX]it'       ; * JMK32 ; * JMK79
      CALL GEN.IN(27,16,MASK,'',Q,0,4,'','',0,27,16,0,QI,HELP,0,23)    ; * JMK32
      QI=OCONV(QI,'MCU')                 ; * JMK32
      IF QI='' THEN QI=RPT.STYLE         ; * JMK32
      BEGIN CASE                         ; * JMK32
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'     ; * JMK32
            GOTO THE.END                 ; * JMK32
         CASE QI='X'                     ; * JMK32
            BACK.FLAG=1                  ; * JMK32
            DISPLAY<PROMPT.NUM>=0        ; * JMK32
            GOTO 3100                    ; * JMK32
         CASE QI='C'                     ; * JMK79
         CASE QI='T'                     ; * JMK32
         CASE QI='H'                     ; * JMK32
         CASE 1                          ; * JMK32
            GOTO 3200                    ; * JMK32
      END CASE                           ; * JMK32
      RPT.STYLE=QI                       ; * JMK32
      GOSUB DISPLAY.SCREEN

3300: * Accessorials Only

      PAGE.NUM=2
      PROMPT.NUM=33

      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 3200
      BACK.FLAG=0                        ; * NPR06
      DISPLAY<PROMPT.NUM>=1              ; * NPR06
      ACCESS.ONLY.DISPLAY = ""           ; * NPR06
      GOSUB DISPLAY.SCREEN               ; * NPR06

      MASK=ACCESS.ONLY:STR(MASK.CHAR,30-LEN(ACCESS.ONLY))    ; * NPR06
      HELP='[I]nclude Accessorial only [E]xclude them [N]o pref [X]=Back [EX]it'           ; * NPR06
      CALL GEN.IN(27,17,MASK,'',Q,0,30,'','',0,27,17,0,QI,HELP,0,23)   ; * NPR06
      QI = TRIM(QI)                      ; * NPR06
      QI=OCONV(QI,'MCU')                 ; * NPR06
      IF QI='' THEN QI=ACCESS.ONLY       ; * NPR06
      BEGIN CASE                         ; * NPR06
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'     ; * NPR06
            GOTO THE.END                 ; * NPR06
         CASE QI='X'                     ; * NPR06
            BACK.FLAG=1                  ; * NPR06
            DISPLAY<PROMPT.NUM>=0        ; * NPR06
            IF VERSION='610' THEN        ; * SWB02
               DISPLAY<PROMPT.NUM-1>=0   ; * SWB02
            END                          ; * SWB02
            GOTO 3200                    ; * NPR06
         CASE QI='' OR QI = 'N'          ; * NPR06
            QI = 'N'                     ; * JMK58
            ACCESS.ONLY.DISPLAY='No Preference'    ; * JMK58
         CASE QI = 'I'                   ; * NPR06
            ACCESS.ONLY.DISPLAY='Include Only'     ; * JMK58
         CASE QI = 'E'                   ; * NPR06
            ACCESS.ONLY.DISPLAY='Exclude Only'     ; * JMK58
         CASE 1                          ; * NPR06
            GOTO 3300                    ; * NPR06
      END CASE                           ; * NPR06
      ACCESS.ONLY=QI                     ; * NPR06
      GOSUB DISPLAY.SCREEN

3400: *
      PAGE.NUM=2                         ; * JMK69
      PROMPT.NUM=34                      ; * JMK69
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 3300         ; * JMK69
      BACK.FLAG=0                        ; * JMK69
      DISPLAY<PROMPT.NUM>=1              ; * JMK69
      BD.ONLY.DISPLAY=''                 ; * JMK69
      GOSUB DISPLAY.SCREEN               ; * JMK69
      MASK=BD.ONLY:STR(MASK.CHAR,30-LEN(BD.ONLY))  ; * JMK69
      HELP='[I]nclude Balance Dues only [E]xclude them [N]o pref [X]=Back [EX]it'          ; * JMK69
      CALL GEN.IN(27,18,MASK,'',Q,0,4,'','',0,27,18,0,QI,HELP,0,23)    ; * JMK69
      QI=OCONV(QI,'MCU')                 ; * JMK69
      IF QI='' THEN QI=BD.ONLY           ; * JMK69
      BEGIN CASE                         ; * JMK69
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'     ; * JMK69
            GOTO THE.END                 ; * JMK69
         CASE QI='X'                     ; * JMK69
            BACK.FLAG=1                  ; * JMK69
            DISPLAY<PROMPT.NUM>=0        ; * JMK69
            GOTO 3300                    ; * JMK69
         CASE QI='' OR QI = 'N'          ; * JMK69
            QI = 'N'                     ; * JMK69
            BD.ONLY.DISPLAY='No Preference'        ; * JMK69
         CASE QI = 'I'                   ; * JMK69
            BD.ONLY.DISPLAY='Include Only'         ; * JMK69
         CASE QI = 'E'                   ; * JMK69
            BD.ONLY.DISPLAY='Exclude Only'         ; * JMK69
         CASE 1                          ; * JMK69
            GOTO 3400                    ; * JMK69
      END CASE                           ; * JMK69
      BD.ONLY=QI                         ; * JMK69
      GOSUB DISPLAY.SCREEN               ; * JMK69

3500: *
      PAGE.NUM=2
      PROMPT.NUM=35
      DISPLAY<PROMPT.NUM>=0
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 3400
      BACK.FLAG=0                        ; * JMK69
      DISPLAY<PROMPT.NUM>=1              ; * JMK69
      HDG.ONLY.DISPLAY=''                ; * JMK69
      GOSUB DISPLAY.SCREEN               ; * JMK69
      MASK=HDG.ONLY:STR(MASK.CHAR,30-LEN(HDG.ONLY))          ; * JMK69
      HELP='[I]nclude Headings [E]xclude them [X]=Back [EX]it'         ; * JMK69
      CALL GEN.IN(27,19,MASK,'',Q,0,4,'','',0,27,19,0,QI,HELP,0,23)    ; * JMK69
      QI=OCONV(QI,'MCU')                 ; * JMK69
      IF QI='' THEN QI=HDG.ONLY          ; * JMK69
      BEGIN CASE                         ; * JMK69
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'     ; * JMK69
            GOTO THE.END                 ; * JMK69
         CASE QI='X'                     ; * JMK69
            BACK.FLAG=1                  ; * JMK69
            DISPLAY<PROMPT.NUM>=0        ; * JMK69
            GOTO 3400                    ; * JMK69
         CASE QI='' OR QI = 'I'          ; * JMK69
            QI = 'I'                     ; * JMK69
            HDG.ONLY.DISPLAY='Include Headings'    ; * JMK69
         CASE QI = 'E'                   ; * JMK69
            HDG.ONLY.DISPLAY='Exclude Headings'    ; * JMK69
         CASE 1                          ; * JMK69
            GOTO 3500                    ; * JMK69
      END CASE                           ; * JMK69
      HDG.ONLY=QI                        ; * JMK69
      GOSUB DISPLAY.SCREEN

3600: *
      PAGE.NUM=2
      PROMPT.NUM=36
      DISPLAY<PROMPT.NUM>=0
      IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 3500
      GOSUB DISPLAY.SCREEN

      IF VERSION='155' THEN              ; * JMK30

* Enter rerate effective date

3700:    ***
         PAGE.NUM=3
         PROMPT.NUM=37
         IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 3600
         BACK.FLAG=0
         DISPLAY<PROMPT.NUM>=1
         GOSUB DISPLAY.SCREEN
         MASK=RR.EFF.DATE'D4-'
         HELP='Enter re-rating effective date. [T]oday [S]ame [X]=Back [EX]it'
         CALL GEN.IN(27,3,MASK,'',Q,0,10,'','',2,27,3,0,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         IF QI='' THEN QI=RR.EFF.DATE'D4'
         BEGIN CASE
            CASE QI='EX' OR QI='EXI' OR QI='EXIT'
               GOTO THE.END
            CASE QI='X'
               BACK.FLAG=1
               DISPLAY<PROMPT.NUM>=0
               GOTO 3600
            CASE QI='T'
               QI=DATE()'D4-'
            CASE QI='S'                  ; * JMK31
            CASE QI MATCHES '0N'
               BEGIN CASE
                  CASE LEN(QI)=4
                     QI=QI[1,2]:'.':QI[3,2]:'.':(DATE()'D4/')[7,4]
                  CASE LEN(QI)=6
                     IF QI[5,2]<50 THEN
                        QI=QI[1,2]:'.':QI[3,2]:'.':(DATE()'D4/')[7,2]:QI[5,2]
                     END ELSE
                        QI=QI[1,2]:'.':QI[3,2]:'.':'19':QI[5,2]        ; * ((DATE()-365)'D4/')[7,2]:QI[5,2]
                     END
                  CASE LEN(QI)=8
                     QI=QI[1,2]:'.':QI[3,2]:'.':QI[5,4]
                  CASE 1
                     CALL ELINE('Use one of the following formats: MMDD or MMDDYY or MMDDYYYY.')
                     GOTO 3700
               END CASE
         END CASE
         IF QI='S' THEN                  ; * JMK31
            RR.EFF.DATE='S'              ; * JMK31
         END ELSE                        ; * JMK31
            RR.EFF.DATE=ICONV(QI,'D')
         END                             ; * JMK31
         IF RR.EFF.DATE='' THEN
            CALL ELINE('Invalid date.')
            GOTO 3700
         END
         GOSUB DISPLAY.SCREEN

* Enter re-rate Carrier control

3800:    ***
         PAGE.NUM=3
         PROMPT.NUM=38
         IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 3700
         BACK.FLAG=0
         DISPLAY<PROMPT.NUM>=1
         GOSUB DISPLAY.SCREEN
         MASK=RR.CARRIER.ID:STR(MASK.CHAR,2-LEN(RR.CARRIER.ID))

         HELP='Re-rate based on Carrier# [L]CC [S]ame [A]FS500 [O]LA Analysis [X]=Back [EX]it'       ; * JMK43
         CALL GEN.IN(27,4,MASK,'',Q,0,30,'','',0,27,4,0,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')              ; * JMK01
         IF QI='' THEN QI=RR.CARRIER.ID  ; * JMK01
         BEGIN CASE
            CASE QI='EX' OR QI='EXI' OR QI='EXIT'
               GOTO THE.END
            CASE QI='X'
               BACK.FLAG=1
               DISPLAY<PROMPT.NUM>=0
               GOTO 3700
            CASE QI='L'
            CASE QI='S'
            CASE QI='O'
            CASE QI='A'                  ; * JMK43
            CASE QI='Q'                  ; * JMK76
            CASE NOT(QI MATCHES '0N')
               CALL SOUNDEX.DISPLAY(QI,'CARRIERS','SDX.CARRIER,NAME',1,ITEM.LIST)
               BEGIN CASE
                  CASE ITEM.LIST=''
                  CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                  CASE ITEM.LIST NE ''
                     IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
               END CASE
               CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
               CRT @(0,2):STR('=',79)
               GOSUB DISPLAY.SCREEN
               GOTO 3800
            CASE NUM(QI)
               QI=QI'R%5'
            CASE 1
               GOTO 3800
         END CASE
         RR.CARRIER.ID=QI                ; * JMK01
         READ RR.CARRIER.REC FROM F.CARRIERS,RR.CARRIER.ID ELSE RR.CARRIER.REC=''
         RR.CARRIER.NAME=RR.CARRIER.REC<1>
         GOSUB DISPLAY.SCREEN

* Enter re-rate FAK Assignment 1

3900:    ***
*        IF USER#'MKERBOW' THEN GO 5900
         PAGE.NUM=3
         PROMPT.NUM=39
         IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 3800
         BACK.FLAG=0
         DISPLAY<PROMPT.NUM>=1
         GOSUB DISPLAY.SCREEN
         MASK=RR.FAK.1
         MASK:=STR(MASK.CHAR,30-LEN(MASK))
         HELP='Enter FAK Assignment 1 FC1{-FC2};FAK [X]=Back [EX]it'
         CALL GEN.IN(27,5,MASK,'',Q,0,30,'','',0,27,5,0,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         IF QI='' THEN QI=RR.FAK.1
         BEGIN CASE
            CASE QI='EX' OR QI='EXI' OR QI='EXIT'
               GOTO THE.END
            CASE QI='X'
               BACK.FLAG=1
               DISPLAY<PROMPT.NUM>=0
               GOTO 3800
            CASE 1
               IF QI#'' THEN
                  FC.RANGE=FIELD(QI,';',1)
                  IF FC.RANGE='' THEN
                     CALL ELINE('Missing Freight Class')
                     GO 3900
                  END
                  FC.LOW=FIELD(FC.RANGE,'-',1)
                  FC.HIGH=FIELD(FC.RANGE,'-',2)
                  FAK.CLS=FIELD(QI,';',2)
                  IF FAK.CLS='' THEN
                     CALL ELINE('Missing FAK Class')
                     GO 3900
                  END
               END
         END CASE
         RR.FAK.1=QI
         GOSUB DISPLAY.SCREEN

* Enter re-rate FAK Assignment 2

4000:    ***
         PAGE.NUM=3
         PROMPT.NUM=40
         IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 3900
         BACK.FLAG=0
         DISPLAY<PROMPT.NUM>=1
         GOSUB DISPLAY.SCREEN
         MASK=RR.FAK.2
         MASK:=STR(MASK.CHAR,30-LEN(MASK))
         HELP='Enter FAK Assignment 2 FC1{-FC2};FAK [X]=Back [EX]it'
         CALL GEN.IN(27,6,MASK,'',Q,0,30,'','',0,27,6,0,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         IF QI='' THEN QI=RR.FAK.2
         BEGIN CASE
            CASE QI='EX' OR QI='EXI' OR QI='EXIT'
               GOTO THE.END
            CASE QI='X'
               BACK.FLAG=1
               DISPLAY<PROMPT.NUM>=0
               GOTO 3900
            CASE 1
               IF QI#'' THEN
                  FC.RANGE=FIELD(QI,';',1)
                  IF FC.RANGE='' THEN
                     CALL ELINE('Missing Freight Class')
                     GO 4000
                  END
                  FC.LOW=FIELD(FC.RANGE,'-',1)
                  FC.HIGH=FIELD(FC.RANGE,'-',2)
                  FAK.CLS=FIELD(QI,';',2)
                  IF FAK.CLS='' THEN
                     CALL ELINE('Missing FAK Class')
                     GO 4000
                  END
               END
         END CASE
         RR.FAK.2=QI
         GOSUB DISPLAY.SCREEN

* Enter re-rate FAK Assignment 3

4100:    ***
         PAGE.NUM=3
         PROMPT.NUM=41
         IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 4000
         BACK.FLAG=0
         DISPLAY<PROMPT.NUM>=1
         GOSUB DISPLAY.SCREEN
         MASK=RR.FAK.3
         MASK:=STR(MASK.CHAR,30-LEN(MASK))
         HELP='Enter FAK Assignment 3 FC1{-FC2};FAK [X]=Back [EX]it'
         CALL GEN.IN(27,7,MASK,'',Q,0,30,'','',0,27,7,0,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         IF QI='' THEN QI=RR.FAK.3
         BEGIN CASE
            CASE QI='EX' OR QI='EXI' OR QI='EXIT'
               GOTO THE.END
            CASE QI='X'
               BACK.FLAG=1
               DISPLAY<PROMPT.NUM>=0
               GOTO 4000
            CASE 1
               IF QI#'' THEN
                  FC.RANGE=FIELD(QI,';',1)
                  IF FC.RANGE='' THEN
                     CALL ELINE('Missing Freight Class')
                     GO 4100
                  END
                  FC.LOW=FIELD(FC.RANGE,'-',1)
                  FC.HIGH=FIELD(FC.RANGE,'-',2)
                  FAK.CLS=FIELD(QI,';',2)
                  IF FAK.CLS='' THEN
                     CALL ELINE('Missing FAK Class')
                     GO 4100
                  END
               END
         END CASE
         RR.FAK.3=QI
         GOSUB DISPLAY.SCREEN

* Enter re-rate FAK Assignment 4

4200:    ***
         PAGE.NUM=3
         PROMPT.NUM=42
         IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 4100
         BACK.FLAG=0
         DISPLAY<PROMPT.NUM>=1
         GOSUB DISPLAY.SCREEN
         MASK=RR.FAK.4
         MASK:=STR(MASK.CHAR,30-LEN(MASK))
         HELP='Enter FAK Assignment 4 FC1{-FC2};FAK [X]=Back [EX]it'
         CALL GEN.IN(27,8,MASK,'',Q,0,30,'','',0,27,8,0,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         IF QI='' THEN QI=RR.FAK.4
         BEGIN CASE
            CASE QI='EX' OR QI='EXI' OR QI='EXIT'
               GOTO THE.END
            CASE QI='X'
               BACK.FLAG=1
               DISPLAY<PROMPT.NUM>=0
               GOTO 4100
            CASE 1
               IF QI#'' THEN
                  FC.RANGE=FIELD(QI,';',1)
                  IF FC.RANGE='' THEN
                     CALL ELINE('Missing Freight Class')
                     GO 4200
                  END
                  FC.LOW=FIELD(FC.RANGE,'-',1)
                  FC.HIGH=FIELD(FC.RANGE,'-',2)
                  FAK.CLS=FIELD(QI,';',2)
                  IF FAK.CLS='' THEN
                     CALL ELINE('Missing FAK Class')
                     GO 4200
                  END
               END
         END CASE
         RR.FAK.4=QI
         GOSUB DISPLAY.SCREEN

* Enter re-rate FAK Assignment 5

4300:    ***
         PAGE.NUM=3
         PROMPT.NUM=43
         IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 4200
         BACK.FLAG=0
         DISPLAY<PROMPT.NUM>=1
         GOSUB DISPLAY.SCREEN
         MASK=RR.FAK.5
         MASK:=STR(MASK.CHAR,30-LEN(MASK))
         HELP='Enter FAK Assignment 5 FC1{-FC2};FAK [X]=Back [EX]it'
         CALL GEN.IN(27,9,MASK,'',Q,0,30,'','',0,27,9,0,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         IF QI='' THEN QI=RR.FAK.5
         BEGIN CASE
            CASE QI='EX' OR QI='EXI' OR QI='EXIT'
               GOTO THE.END
            CASE QI='X'
               BACK.FLAG=1
               DISPLAY<PROMPT.NUM>=0
               GOTO 4200
            CASE 1
               IF QI#'' THEN
                  FC.RANGE=FIELD(QI,';',1)
                  IF FC.RANGE='' THEN
                     CALL ELINE('Missing Freight Class')
                     GO 4300
                  END
                  FC.LOW=FIELD(FC.RANGE,'-',1)
                  FC.HIGH=FIELD(FC.RANGE,'-',2)
                  FAK.CLS=FIELD(QI,';',2)
                  IF FAK.CLS='' THEN
                     CALL ELINE('Missing FAK Class')
                     GO 4300
                  END
               END
         END CASE
         RR.FAK.5=QI
         GOSUB DISPLAY.SCREEN

* Enter re-rate Distribution Zip 1

4400:    ***
         PAGE.NUM=3
         PROMPT.NUM=44
         IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 4300
         IF RR.CARRIER.ID#'O' THEN
            BACK.FLAG=0
            DISPLAY<PROMPT.NUM>=1
            GOSUB DISPLAY.SCREEN
            MASK=RR.ZIP.1
            MASK:=STR(MASK.CHAR,6-LEN(MASK))
            HELP='Enter distribution zip 1 (must be valid OLA routing zip) [X]=Back [EX]it'
            CALL GEN.IN(27,10,MASK,'',Q,0,6,'','',0,27,10,0,QI,HELP,0,23)
            QI=OCONV(QI,'MCU')
            IF QI='' THEN QI=RR.ZIP.1
            BEGIN CASE
               CASE QI='EX' OR QI='EXI' OR QI='EXIT'
                  GOTO THE.END
               CASE QI='X'
                  BACK.FLAG=1
                  DISPLAY<PROMPT.NUM>=0
                  GOTO 4300
               CASE 1
                  IF QI#'' THEN
                     CALL FB.READ.ZIP(QI,CITY,STATE)         ; * JMK30
                     CITY.STATE=CITY:', ':STATE    ; * JMK30
                     IF INDEX(CITY.STATE,'unknown',1) OR TRIM(CITY.STATE)=',' THEN         ; * JMK30
                        CALL ELINE('Invalid zip. Please retry again.')           ; * JMK30
                        GO 4400          ; * JMK30
                     END                 ; * JMK30
                  END
            END CASE
            RR.ZIP.1=QI
         END
         GOSUB DISPLAY.SCREEN

* Enter re-rate Distribution Zip 2

4500:    ***
         PAGE.NUM=3
         PROMPT.NUM=45
         IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 4400
         IF RR.CARRIER.ID#'O' THEN
            BACK.FLAG=0
            DISPLAY<PROMPT.NUM>=1
            GOSUB DISPLAY.SCREEN
            MAK=RR.ZIP.2
            MASK:=STR(MASK.CHAR,6-LEN(MASK))
            HELP='Enter distribution zip 2 (must be valid OLA routing zip) [X]=Back [EX]it'
            CALL GEN.IN(27,11,MASK,'',Q,0,6,'','',0,27,11,0,QI,HELP,0,23)
            QI=OCONV(QI,'MCU')
            IF QI='' THEN QI=RR.ZIP.2
            BEGIN CASE
               CASE QI='EX' OR QI='EXI' OR QI='EXIT'
                  GOTO THE.END
               CASE QI='X'
                  BACK.FLAG=1
                  DISPLAY<PROMPT.NUM>=0
                  GOTO 4400
               CASE 1
                  IF QI#'' THEN
                     CALL FB.READ.ZIP(QI,CITY,STATE)         ; * JMK30
                     CITY.STATE=CITY:', ':STATE    ; * JMK30
                     IF INDEX(CITY.STATE,'unknown',1) OR TRIM(CITY.STATE)=',' THEN         ; * JMK30
                        CALL ELINE('Invalid zip. Please retry again.')           ; * JMK30
                        GO 4500          ; * JMK30
                     END                 ; * JMK30
                  END
            END CASE
            RR.ZIP.2=QI
         END
         GOSUB DISPLAY.SCREEN

* Enter re-rate Distribution Zip 3

4600:    ***
         PAGE.NUM=3
         PROMPT.NUM=46
         IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 4500
         IF RR.CARRIER.ID#'O' THEN
            BACK.FLAG=0
            DISPLAY<PROMPT.NUM>=1
            GOSUB DISPLAY.SCREEN
            MASK=RR.ZIP.3
            MASK:=STR(MASK.CHAR,6-LEN(MASK))
            HELP='Enter distribution zip 3 (must be valid OLA routing zip) [X]=Back [EX]it'
            CALL GEN.IN(27,12,MASK,'',Q,0,6,'','',0,27,12,0,QI,HELP,0,23)
            QI=OCONV(QI,'MCU')
            IF QI='' THEN QI=RR.ZIP.3
            BEGIN CASE
               CASE QI='EX' OR QI='EXI' OR QI='EXIT'
                  GOTO THE.END
               CASE QI='X'
                  BACK.FLAG=1
                  DISPLAY<PROMPT.NUM>=0
                  GOTO 4500
               CASE 1
                  IF QI#'' THEN
                     CALL FB.READ.ZIP(QI,CITY,STATE)         ; * JMK30
                     CITY.STATE=CITY:', ':STATE    ; * JMK30
                     IF INDEX(CITY.STATE,'unknown',1) OR TRIM(CITY.STATE)=',' THEN         ; * JMK30
                        CALL ELINE('Invalid zip. Please retry again.')           ; * JMK30
                        GO 4600          ; * JMK30
                     END                 ; * JMK30
                  END
            END CASE
            RR.ZIP.3=QI
         END
         GOSUB DISPLAY.SCREEN

* Enter re-rate Distribution Zip 4

4700:    ***
         PAGE.NUM=3
         PROMPT.NUM=47
         IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 4600
         IF RR.CARRIER.ID#'O' THEN
            BACK.FLAG=0
            DISPLAY<PROMPT.NUM>=1
            GOSUB DISPLAY.SCREEN
            MASK=RR.ZIP.4
            MASK:=STR(MASK.CHAR,6-LEN(MASK))
            HELP='Enter distribution zip 4 (must be valid OLA routing zip) [X]=Back [EX]it'
            CALL GEN.IN(27,13,MASK,'',Q,0,6,'','',0,27,13,0,QI,HELP,0,23)
            QI=OCONV(QI,'MCU')
            IF QI='' THEN QI=RR.ZIP.4
            BEGIN CASE
               CASE QI='EX' OR QI='EXI' OR QI='EXIT'
                  GOTO THE.END
               CASE QI='X'
                  BACK.FLAG=1
                  DISPLAY<PROMPT.NUM>=0
                  GOTO 4600
               CASE 1
                  IF QI#'' THEN
                     CALL FB.READ.ZIP(QI,CITY,STATE)         ; * JMK30
                     CITY.STATE=CITY:', ':STATE    ; * JMK30
                     IF INDEX(CITY.STATE,'unknown',1) OR TRIM(CITY.STATE)=',' THEN         ; * JMK30
                        CALL ELINE('Invalid zip. Please retry again.')           ; * JMK30
                        GO 4700          ; * JMK30
                     END                 ; * JMK30
                  END
            END CASE
            RR.ZIP.4=QI
         END
         GOSUB DISPLAY.SCREEN

* Enter re-rate Distribution Zip 5

4800:    ***
         PAGE.NUM=3
         PROMPT.NUM=48
         IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 4700
         IF RR.CARRIER.ID#'O' THEN
            BACK.FLAG=0
            DISPLAY<PROMPT.NUM>=1
            GOSUB DISPLAY.SCREEN
            MASK=RR.ZIP.5
            MASK:=STR(MASK.CHAR,6-LEN(MASK))
            HELP='Enter distribution zip 5 (must be valid OLA routing zip) [X]=Back [EX]it'
            CALL GEN.IN(27,14,MASK,'',Q,0,6,'','',0,27,14,0,QI,HELP,0,23)
            QI=OCONV(QI,'MCU')
            IF QI='' THEN QI=RR.ZIP.5
            BEGIN CASE
               CASE QI='EX' OR QI='EXI' OR QI='EXIT'
                  GOTO THE.END
               CASE QI='X'
                  BACK.FLAG=1
                  DISPLAY<PROMPT.NUM>=0
                  GOTO 4700
               CASE 1
                  IF QI#'' THEN
                     CALL FB.READ.ZIP(QI,CITY,STATE)         ; * JMK30
                     CITY.STATE=CITY:', ':STATE    ; * JMK30
                     IF INDEX(CITY.STATE,'unknown',1) OR TRIM(CITY.STATE)=',' THEN         ; * JMK30
                        CALL ELINE('Invalid zip. Please retry again.')           ; * JMK30
                        GO 4800          ; * JMK30
                     END                 ; * JMK30
                  END
            END CASE
            RR.ZIP.5=QI
         END
         GOSUB DISPLAY.SCREEN

* Enter re-rate Distribution Zip 6

4900:    ***
         PAGE.NUM=3
         PROMPT.NUM=49
         IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 4800
         IF RR.CARRIER.ID#'O' THEN
            BACK.FLAG=0
            DISPLAY<PROMPT.NUM>=1
            GOSUB DISPLAY.SCREEN
            MASK=RR.ZIP.6
            MASK:=STR(MASK.CHAR,6-LEN(MASK))
            HELP='Enter distribution zip 6 (must be valid OLA routing zip) [X]=Back [EX]it'
            CALL GEN.IN(27,15,MASK,'',Q,0,6,'','',0,27,15,0,QI,HELP,0,23)
            QI=OCONV(QI,'MCU')
            IF QI='' THEN QI=RR.ZIP.6
            BEGIN CASE
               CASE QI='EX' OR QI='EXI' OR QI='EXIT'
                  GOTO THE.END
               CASE QI='X'
                  BACK.FLAG=1
                  DISPLAY<PROMPT.NUM>=0
                  GOTO 4800
               CASE 1
                  IF QI#'' THEN
                     CALL FB.READ.ZIP(QI,CITY,STATE)         ; * JMK30
                     CITY.STATE=CITY:', ':STATE    ; * JMK30
                     IF INDEX(CITY.STATE,'unknown',1) OR TRIM(CITY.STATE)=',' THEN         ; * JMK30
                        CALL ELINE('Invalid zip. Please retry again.')           ; * JMK30
                        GO 4900          ; * JMK30
                     END                 ; * JMK30
                  END
            END CASE
            RR.ZIP.6=QI
         END
         GOSUB DISPLAY.SCREEN

* Enter re-rate Distribution Zip 7

5000:    ***
         PAGE.NUM=3
         PROMPT.NUM=50
         IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 4900
         IF RR.CARRIER.ID#'O' THEN
            BACK.FLAG=0
            DISPLAY<PROMPT.NUM>=1
            GOSUB DISPLAY.SCREEN
            MAK=RR.ZIP.7
            MASK:=STR(MASK.CHAR,6-LEN(MASK))
            HELP='Enter distribution zip 7 (must be valid OLA routing zip) [X]=Back [EX]it'
            CALL GEN.IN(27,16,MASK,'',Q,0,6,'','',0,27,16,0,QI,HELP,0,23)
            QI=OCONV(QI,'MCU')
            IF QI='' THEN QI=RR.ZIP.7
            BEGIN CASE
               CASE QI='EX' OR QI='EXI' OR QI='EXIT'
                  GOTO THE.END
               CASE QI='X'
                  BACK.FLAG=1
                  DISPLAY<PROMPT.NUM>=0
                  GOTO 4900
               CASE 1
                  IF QI#'' THEN
                     CALL FB.READ.ZIP(QI,CITY,STATE)         ; * JMK30
                     CITY.STATE=CITY:', ':STATE    ; * JMK30
                     IF INDEX(CITY.STATE,'unknown',1) OR TRIM(CITY.STATE)=',' THEN         ; * JMK30
                        CALL ELINE('Invalid zip. Please retry again.')           ; * JMK30
                        GO 5000          ; * JMK30
                     END                 ; * JMK30
                  END
            END CASE
            RR.ZIP.7=QI
         END
         GOSUB DISPLAY.SCREEN

* Enter re-rate Distribution Zip 8

5100:    ***
         PAGE.NUM=3
         PROMPT.NUM=51
         IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 5000
         IF RR.CARRIER.ID#'O' THEN
            BACK.FLAG=0
            DISPLAY<PROMPT.NUM>=1
            GOSUB DISPLAY.SCREEN
            MASK=RR.ZIP.8
            MASK:=STR(MASK.CHAR,6-LEN(MASK))
            HELP='Enter distribution zip 8 (must be valid OLA routing zip) [X]=Back [EX]it'
            CALL GEN.IN(27,17,MASK,'',Q,0,6,'','',0,27,17,0,QI,HELP,0,23)
            QI=OCONV(QI,'MCU')
            IF QI='' THEN QI=RR.ZIP.8
            BEGIN CASE
               CASE QI='EX' OR QI='EXI' OR QI='EXIT'
                  GOTO THE.END
               CASE QI='X'
                  BACK.FLAG=1
                  DISPLAY<PROMPT.NUM>=0
                  GOTO 5000
               CASE 1
                  IF QI#'' THEN
                     CALL FB.READ.ZIP(QI,CITY,STATE)         ; * JMK30
                     CITY.STATE=CITY:', ':STATE    ; * JMK30
                     IF INDEX(CITY.STATE,'unknown',1) OR TRIM(CITY.STATE)=',' THEN         ; * JMK30
                        CALL ELINE('Invalid zip. Please retry again.')           ; * JMK30
                        GO 5100          ; * JMK30
                     END                 ; * JMK30
                  END
            END CASE
            RR.ZIP.8=QI
         END
         GOSUB DISPLAY.SCREEN

* Enter re-rate Distribution Zip 9

5200:    ***
         PAGE.NUM=3
         PROMPT.NUM=52
         IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 5100
         IF RR.CARRIER.ID#'O' THEN
            BACK.FLAG=0
            DISPLAY<PROMPT.NUM>=1
            GOSUB DISPLAY.SCREEN
            MASK=RR.ZIP.9
            MASK:=STR(MASK.CHAR,6-LEN(MASK))
            HELP='Enter distribution zip 9 (must be valid OLA routing zip) [X]=Back [EX]it'
            CALL GEN.IN(27,18,MASK,'',Q,0,6,'','',0,27,18,0,QI,HELP,0,23)
            QI=OCONV(QI,'MCU')
            IF QI='' THEN QI=RR.ZIP.9
            BEGIN CASE
               CASE QI='EX' OR QI='EXI' OR QI='EXIT'
                  GOTO THE.END
               CASE QI='X'
                  BACK.FLAG=1
                  DISPLAY<PROMPT.NUM>=0
                  GOTO 5100
               CASE 1
                  IF QI#'' THEN
                     CALL FB.READ.ZIP(QI,CITY,STATE)         ; * JMK30
                     CITY.STATE=CITY:', ':STATE    ; * JMK30
                     IF INDEX(CITY.STATE,'unknown',1) OR TRIM(CITY.STATE)=',' THEN         ; * JMK30
                        CALL ELINE('Invalid zip. Please retry again.')           ; * JMK30
                        GO 5200          ; * JMK30
                     END                 ; * JMK30
                  END
            END CASE
            RR.ZIP.9=QI
         END
         GOSUB DISPLAY.SCREEN

* Enter re-rate Distribution Zip 10

5300:    ***
         PAGE.NUM=3
         PROMPT.NUM=53
         IF BACK.FLAG AND NOT(DISPLAY<PROMPT.NUM>) THEN GOTO 5200
         IF RR.CARRIER.ID#'O' THEN
            BACK.FLAG=0
            DISPLAY<PROMPT.NUM>=1
            GOSUB DISPLAY.SCREEN
            MASK=RR.ZIP.10
            MASK:=STR(MASK.CHAR,6-LEN(MASK))
            HELP='Enter distribution zip 10 (must be valid OLA routing zip) [X]=Back [EX]it'
            CALL GEN.IN(27,19,MASK,'',Q,0,6,'','',0,27,19,0,QI,HELP,0,23)
            QI=OCONV(QI,'MCU')
            IF QI='' THEN QI=RR.ZIP.10
            BEGIN CASE
               CASE QI='EX' OR QI='EXI' OR QI='EXIT'
                  GOTO THE.END
               CASE QI='X'
                  BACK.FLAG=1
                  DISPLAY<PROMPT.NUM>=0
                  GOTO 5200
               CASE 1
                  IF QI#'' THEN
                     CALL FB.READ.ZIP(QI,CITY,STATE)         ; * JMK30
                     CITY.STATE=CITY:', ':STATE    ; * JMK30
                     IF INDEX(CITY.STATE,'unknown',1) OR TRIM(CITY.STATE)=',' THEN         ; * JMK30
                        CALL ELINE('Invalid zip. Please retry again.')           ; * JMK30
                        GO 5300          ; * JMK30
                     END                 ; * JMK30
                  END
            END CASE
            RR.ZIP.10=QI
         END
         GOSUB DISPLAY.SCREEN
5900:    *
      END                                ; * JMK30


* Verify selection criteria is correct

VERIFY.SELECTION:***
      HELP='ENTER to continue. [X]=Back [EX]it'
      CALL GEN.IN(0,22,'Enter Selection : ----','',Q,0,4,'','',0,-4,22,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX' OR QI='EXI' OR QI='EXIT'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            CRT @(0,22):@(-3)

            IF VERSION='155' THEN        ; * JMK30
               GOTO 5300                 ; * JMK30
            END ELSE                     ; * JMK30

               GOTO 3300                 ; * NPR06
            END                          ; * JMK30
         CASE QI=''
         CASE 1
            GOTO VERIFY.SELECTION
      END CASE

START.BUILD:***

      IF VERSION='111' THEN
         READ BILLDATA.REC FROM F.VOC,'BILLDATA' ELSE
            CALL ELINE('Unable to open VOC BILLDATA.')
            GOTO THE.END
         END
         USER='cognas'
         BILLDATA.REC<2>:='\':USER
         WRITE BILLDATA.REC ON F.VOC,'BILLDATA.':USER ELSE
            CALL ELINE('Your user name ':USER:' is not in the BILLDATA folder - Call IS Department.')
            GOTO THE.END
         END
         OPEN '','BILLDATA.':USER TO F.BILLDATA ELSE
            CALL ELINE('Unable to open BILLDATA.':USER:'.')
            GOTO THE.END
         END
      END

* Set up for call to BUILD.DF.SUB

      LOG.ONLY=(LOGISTICS.ONLY='YES')
      MANUAL.EMAIL=(EMAIL.REPORT='YES')
      SEP.DIVISIONS=(SEPARATE.DIVISIONS='YES')
      DUP.ONLY=(DUPLICATES.ONLY='YES')
      INC.BD=(INCLUDE.BD='YES')

* Begin Mod NKH01
      IF RR.EFF.DATE # "" THEN
         EXISTING.FILE = 0
         EXISTING.FILE2 = 0
         BILLDATA.USER = SYSTEM(19)
         IF (CLIENT.ID='ALL' OR CLIENT.ID='AFS' OR CLIENT.ID='SCT' OR CLIENT.ID='UNI' OR CLIENT.ID='UFM' OR CLIENT.ID='LGI') THEN
            RECORD.NAME=CLIENT.ID
         END ELSE
            RECORD.NAME=CLIENT.ID'R%5'
         END
         RECORD.NAME:='-'
         D=BEG.DATE'D2/'
         RECORD.NAME:=D[1,2]:D[4,2]
         D=END.DATE'D2/'
         RECORD.NAME:=D[1,2]:D[4,2]
         RECORD.NAME:='.XLS'

         OPENSEQ 'BILLDATA.':BILLDATA.USER, RECORD.NAME TO TESTSEQ.FILE THEN
            EXISTING.FILE = 1
         END ELSE
         END
         TEST.ID ='RR-':RR.CARRIER.ID:'-':RECORD.NAME
         OPENSEQ 'BILLDATA.':BILLDATA.USER, TEST.ID TO TEST2SEQ.FILE THEN
            EXISTING.FILE2 =1
         END
         IF EXISTING.FILE AND EXISTING.FILE2 THEN
            MASK = "_"
            HELP='Existing rerate files !!  continue with the rerate process ? [Y]es [N]o '
            CALL GEN.IN(73,22,MASK,'',Q,0,1,'','',2,73,22,1,QI,HELP,0,22)
         END
         IF QI = "Y" THEN
            CLOSESEQ TESTSEQ.FILE
            CLOSESEQ TEST2SEQ.FILE
            SSNAME = RECORD.NAME
            RR.CONT = 1
            GO RERATE.RESTART            ; * skip SS build go restart
         END
      END
* End Mod NKH01

      VIN=''
      VIN<1>=CLIENT.ID
      IF CL.LST#'' THEN                  ; * JMK16
         VIN<1>='(':CL.LST               ; * JMK16
      END                                ; * JMK16
      VIN<2>=LOG.ONLY
      VIN<3>=CARRIER.ID
      VIN<4>=MODE
      VIN<5>=FILE.SEL
      VIN<6>=BEG.DATE
      VIN<7>=END.DATE
      VIN<8>=CUT.BACK.CODE
      VIN<9>=MISROUTE.INFO
      VIN<10>=OVERCHARGE.INFO
      VIN<11>=LOGISTICS.INFO
      VIN<12>=DISCOUNT.INFO
      VIN<13>=VERSION
      VIN<14>=TYPE.OF.REPORT
      VIN<15>=SEP.DIVISIONS
      IF INDEX(DIVISIONAL.ID,',',1) THEN           ; * JMK62
         VIN<16>=CHANGE(DIVISIONAL.ID,',',@VM)     ; * JMK62
      END ELSE                           ; * JMK62
         VIN<16>=DIVISIONAL.ID           ; * JMK62
      END                                ; * JMK62
      VIN<17>=SORT
      VIN<18>=MANUAL.EMAIL
      VIN<19>=NEW.EMAIL.ADDR
      VIN<20>=DIV.EMAIL.ADDR
      VIN<21>=USER
      VIN<22>=CH.NUM
      VIN<23>=AUTO
      VIN<24>=CUT.DESC
      VIN<25>=''
*DFIF USER='DAVID' THEN VIN<25>='FROM FB.3.1.NEW'
      VIN<26>='0'
      VIN<27>=DUP.ONLY
      VIN<28>=INC.BD
      VIN<29>=LCC.INFO                   ; * JMK01
      VIN<31>=CLIENT.ACCESS              ; * JMK03
      VIN<32>=CARRIER.ACCESS             ; * JMK03
      VIN<33>=SALES.ACCESS               ; * JMK03
      VIN<34>=COMM.ACCESS                ; * JMK03
      VIN<35>=TL.INFO                    ; * JMK17
      VIN<36>=EBILL.INFO                 ; * JMK22
      VIN<37>=SAMPLE.ONE                 ; * JMK26
      VIN<38>=INCLUDE.IOT                ; * JCW01
      VIN<39>=IOT.INFO                   ; * JCW01
      VIN<40>=REJ.INFO                   ; * JMK27
      VIN<41>=ROW.LIMIT                  ; * JMK29
      VIN<42>=ST.FILTER                  ; * JMK37
      VIN<43>=STACK.FILTER               ; * NPR03
      VIN<44>=RPT.STYLE                  ; * JMKXXX
      VIN<45>=''                         ; * JMKXXX - HELD FOR ONCE OPTION IN FP PROCESSING
      VIN<46>=ACCESS.ONLY                ; * NPR06
      VIN<47>=BD.ONLY                    ; * JMK69
      VIN<48>=HDG.ONLY                   ; * JMK98
AUTO.RUN:                                ; * NKH03
      IF DELAY.OPT='Y' THEN              ; * JMK29
         VIN<51>=RR.EFF.DATE             ; * JMK30
         VIN<52>=RR.CARRIER.ID           ; * JMK30
         IF RR.FAK.1#'' THEN             ; * JMK30
            VIN<53,1>=RR.FAK.1           ; * JMK30
         END                             ; * JMK30
         IF RR.FAK.2#'' THEN             ; * JMK30
            VIN<53,2>=RR.FAK.2           ; * JMK30
         END                             ; * JMK30
         IF RR.FAK.3#'' THEN             ; * JMK30
            VIN<53,3>=RR.FAK.3           ; * JMK30
         END                             ; * JMK30
         IF RR.FAK.4#'' THEN             ; * JMK30
            VIN<53,4>=RR.FAK.4           ; * JMK30
         END                             ; * JMK30
         IF RR.FAK.5#'' THEN             ; * JMK30
            VIN<53,5>=RR.FAK.5           ; * JMK30
         END                             ; * JMK30
         IF RR.ZIP.1#'' THEN             ; * JMK30
            VIN<54,1>=RR.ZIP.1           ; * JMK30
         END                             ; * JMK30
         IF RR.ZIP.2#'' THEN             ; * JMK30
            VIN<54,2>=RR.ZIP.2           ; * JMK30
         END                             ; * JMK30
         IF RR.ZIP.3#'' THEN             ; * JMK30
            VIN<54,3>=RR.ZIP.3           ; * JMK30
         END                             ; * JMK30
         IF RR.ZIP.4#'' THEN             ; * JMK30
            VIN<54,4>=RR.ZIP.4           ; * JMK30
         END                             ; * JMK30
         IF RR.ZIP.5#'' THEN             ; * JMK30
            VIN<54,5>=RR.ZIP.5           ; * JMK30
         END                             ; * JMK30
         IF RR.ZIP.6#'' THEN             ; * JMK30
            VIN<54,6>=RR.ZIP.6           ; * JMK30
         END                             ; * JMK30
         IF RR.ZIP.7#'' THEN             ; * JMK30
            VIN<54,7>=RR.ZIP.7           ; * JMK30
         END                             ; * JMK30
         IF RR.ZIP.8#'' THEN             ; * JMK30
            VIN<54,8>=RR.ZIP.8           ; * JMK30
         END                             ; * JMK30
         IF RR.ZIP.9#'' THEN             ; * JMK30
            VIN<54,9>=RR.ZIP.9           ; * JMK30
         END                             ; * JMK30
         IF RR.ZIP.10#'' THEN            ; * JMK30
            VIN<54,10>=RR.ZIP.10         ; * JMK30
         END                             ; * JMK30
         RPT.DTL.REC=VIN                 ; * JMK29
         RPT.SEQ=0                       ; * JMK29
         RPT.TEST=0                      ; * JMK29
         LOOP
            RPT.DTL.ID=DATE():'_':TIME():'_':RPT.SEQ         ; * JMK29
            READ TEST FROM F.BUILD.DF.RPTS,RPT.DTL.ID THEN   ; * JMK29
               RPT.SEQ+=1                ; * JMK29
            END ELSE                     ; * JMK29
               RPT.TEST=1                ; * JMK29
            END                          ; * JMK29
         UNTIL RPT.TEST DO               ; * JMK29
         REPEAT                          ; * JMK29
         WRITE RPT.DTL.REC ON F.BUILD.DF.RPTS,RPT.DTL.ID     ; * JMK29
         READU RPT.REC FROM F.BUILD.DF.RPTS,'PROC.LIST' ELSE RPT.REC=''          ; * JMK29
         NATT=DCOUNT(RPT.REC,@AM)        ; * JMK29
         RPT.REC<NATT+1>=RPT.DTL.ID      ; * JMK29
         WRITE RPT.REC ON F.BUILD.DF.RPTS,'PROC.LIST'        ; * JMK29
         RELEASE F.BUILD.DF.RPTS,'PROC.LIST'       ; * JMK29
      END ELSE                           ; * JMK29
         IF USER.SV THEN 
            GOSUB GET.AUTO.INPUT
         END
         VOUT=''
         VIN<44>=RPT.STYLE
         VIN<55> = DIV.LISTING
         IF REGION='Y' THEN              ; * JMK57
            CALL BUILD.DF.REG(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.BILLDATA,VIN,VOUT)         ; * JMK57
         END ELSE                        ; * JMK57
            IF DIV.SEL # '' AND SEPARATE.DIVISIONS = 'YES' THEN        ; *DS001
               DIV.ITMS = DIV.LISTING    ; *DS001
               CONVERT '"' TO ' ' IN DIV.ITMS      ; *DS001
               DIV.ITMS = TRIM(DIV.ITMS,' ','D')   ; *DS001
               DIVSELCNT = DCOUNT(DIV.ITMS,' ')    ; *DS001
               FOR BB = 1 TO DIVSELCNT   ; *DS001
                  VIN<16> = FIELD(DIV.ITMS,' ',BB)           ; *DS001
                  IF CLIENT.ID= '01706' AND VERSION='460' THEN         ; * DRF31
                     CALL BUILD.DF.01706.SUB(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.BILLDATA,VIN,VOUT)    ; *DRF31
                  END ELSE               ; * DRF31
                     IF CLIENT.HOLD = '89997' THEN VIN<60> = CLIENT.HOLD
                     CALL BUILD.DF.SUB(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.BILLDATA,VIN,VOUT)          ; *DS001
                  END                    ; * DRF31
               NEXT BB                   ; *DS001
            END ELSE
               IF CLIENT.ID= '01706' AND VERSION='460' THEN  ; * DRF31
                  CALL BUILD.DF.01706.SUB(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.BILLDATA,VIN,VOUT)       ; *DRF31
               END ELSE                  ; * DRF31
                  IF CLIENT.HOLD = '89997' THEN VIN<60> = CLIENT.HOLD
                  CALL BUILD.DF.SUB(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.BILLDATA,VIN,VOUT)
               END                       ; * DRF31
            END                          ; * JMK57
         END
         SSNAME=VOUT<1>                  ; * JMK07

         IF CLIENT.ID='NO-00850' AND SSNAME#'ERROR' THEN     ; * JMK07
*           RQM ; RQM                    ; * LET THE FILE HAVE TIME TO GET TO THE DISK; * JMK07
            RVIN=''                      ; * JMK07
            RVIN<1>=USER                 ; * JMK07
            RVIN<2>=SSNAME               ; * JMK07
            RVIN<3>=CLIENT.ID            ; * JMK07
            RVOUT=''                     ; * JMK07
            CALL RERATE.DARLING(RVIN,RVOUT)        ; * JMK07
         END                             ; * JMK07     
* Begin NKH01
**********************************************************************
RERATE.RESTART:
**********************************************************************
* End NKH01
         IF VERSION='155' THEN           ; * JMK30
            IF SSNAME#'ERROR' THEN       ; * JMK30
               SLEEP 3                   ; * JMK30 - Let the file have time to get to the disk drive
               RVIN=''                   ; * JMK30
               RVIN<1>=USER              ; * JMK30
               RVIN<2>=SSNAME            ; * JMK30
               RVIN<3>=CLIENT.ID         ; * JMK30
               RVIN<4>=RR.EFF.DATE       ; * JMK30
               RVIN<5>=RR.CARRIER.ID     ; * JMK30
               IF RR.FAK.1#'' THEN       ; * JMK30
                  RVIN<6,1>=RR.FAK.1     ; * JMK30
               END                       ; * JMK30
               IF RR.FAK.2#'' THEN       ; * JMK30
                  RVIN<6,2>=RR.FAK.2     ; * JMK30
               END                       ; * JMK30
               IF RR.FAK.3#'' THEN       ; * JMK30
                  RVIN<6,3>=RR.FAK.3     ; * JMK30
               END                       ; * JMK30
               IF RR.FAK.4#'' THEN       ; * JMK30
                  RVIN<6,4>=RR.FAK.4     ; * JMK30
               END                       ; * JMK30
               IF RR.FAK.5#'' THEN       ; * JMK30
                  RVIN<6,5>=RR.FAK.5     ; * JMK30
               END                       ; * JMK30
               IF RR.ZIP.1#'' THEN       ; * JMK30
                  RVIN<7,1>=RR.ZIP.1     ; * JMK30
               END                       ; * JMK30
               IF RR.ZIP.2#'' THEN       ; * JMK30
                  RVIN<7,2>=RR.ZIP.2     ; * JMK30
               END                       ; * JMK30
               IF RR.ZIP.3#'' THEN       ; * JMK30
                  RVIN<7,3>=RR.ZIP.3     ; * JMK30
               END                       ; * JMK30
               IF RR.ZIP.4#'' THEN       ; * JMK30
                  RVIN<7,4>=RR.ZIP.4     ; * JMK30
               END                       ; * JMK30
               IF RR.ZIP.5#'' THEN       ; * JMK30
                  RVIN<7,5>=RR.ZIP.5     ; * JMK30
               END                       ; * JMK30
               IF RR.ZIP.6#'' THEN       ; * JMK30
                  RVIN<7,6>=RR.ZIP.6     ; * JMK30
               END                       ; * JMK30
               IF RR.ZIP.7#'' THEN       ; * JMK30
                  RVIN<7,7>=RR.ZIP.7     ; * JMK30
               END                       ; * JMK30
               IF RR.ZIP.8#'' THEN       ; * JMK30
                  RVIN<7,8>=RR.ZIP.8     ; * JMK30
               END                       ; * JMK30
               IF RR.ZIP.9#'' THEN       ; * JMK30
                  RVIN<7,9>=RR.ZIP.9     ; * JMK30
               END                       ; * JMK30
               IF RR.ZIP.10#'' THEN      ; * JMK30
                  RVIN<7,10>=RR.ZIP.10   ; * JMK30
               END                       ; * JMK30
               IF RR.CARRIER.ID='Q' THEN           ; * JMK76
                  RVIN<8>=BEG.DATE       ; * JMK76
                  RVIN<9>=END.DATE       ; * JMK76
               END                       ; * JMK76
               RVOUT=''                  ; * JMK30
****               CALL RERATE.SS.SUB(RVIN,RVOUT)      ; * JMK30
               IF USER = 'GBINO' THEN
                  CALL RERATE.SS.RESTART.GB(RVIN,RVOUT)         ; * JMK30
               END ELSE
                  CALL RERATE.SS.RESTART(RVIN,RVOUT)         ; * JMK30
               END
               CALL ELINE('Re-rated SS is on your "U:\" drive as ':RVOUT<1>)     ; * JMK30
            END ELSE                     ; * JMK30
               CALL ELINE('Original SS did not create. Please try again.')       ; * JMK30
            END                          ; * JMK30
         END                             ; * JMK30
      END                                ; * JMK29

      GOTO THE.END


********************************************************************************
* Begin NKH03
GET.AUTO.INPUT:***

      * Begin NKH04
      IF MONTHLY.RUN THEN
         OPEN '','SS.MTHLY.REPORT.AUTO' TO F.BILLDATA ELSE
            CALL ELINE('Unable to open the SS.MTHLY.REPORT.AUTO out file')
            GOTO THE.END
         END                     
      END ELSE   
      * End NKH04
         OPEN '','SS.REPORT.AUTO' TO F.BILLDATA ELSE         
            CALL ELINE('Unable to open the SS.REPORT.AUTO out file')
            GOTO THE.END
         END                     
      END      ; * NKH04
*      AUTO.FROM.DATE = DATE()-7
*      AUTO.TO.DATE = DATE()-1
      VIN=''
      VIN<1> ='ALL'
*VIN<1>='01015'
      VIN<2> =0
      VIN<3> ='ALL'
      VIN<4> ='ALL'
      VIN<5> ='2'
      VIN<6> =AUTO.FROM.DATE
      VIN<7> =AUTO.TO.DATE
      VIN<8> =''
      VIN<9> ='N'
      VIN<10>='N'
      VIN<11>='N'
      VIN<12>='N'
      VIN<13>=1
      VIN<14>='STD'
      VIN<15>='0'
      VIN<16>='ALL'
      VIN<17>=1
      VIN<18>=0
      VIN<19>=''
      VIN<20>=''
      VIN<21>=USER
      VIN<22>='03492'
      VIN<23>=0
      VIN<24>='No Preference'
      VIN<25>=''
      VIN<26>=0
      VIN<27>=0
      VIN<28>=0
      VIN<29>='N'
      VIN<30>=''
      VIN<31>='ALL'
      VIN<32>='ALL'
      VIN<33>='ALL'
      VIN<34>='Y'
      VIN<35>='N'
      VIN<36>='N'
      VIN<37>='N'
      VIN<38>='N'
      VIN<39>=''
      VIN<40>='N'
      VIN<41>='N'
      VIN<42>=''
      VIN<43>=''
      VIN<44>='T'
      VIN<45>=''
      VIN<46>='N'
      VIN<47>='N'
      VIN<48>='I'  
      
      RETURN
* End NKH03      
********************************************************************************
DISPLAY.SCREEN:***
      CRT @(0,3):@(-3)
      BEGIN CASE
         CASE PAGE.NUM=1
            IF DISPLAY<1> THEN
               CRT @( 0, 3):'Client Number            : ':CLIENT.ID:STR(' ',6-LEN(CLIENT.ID)):CLIENT.NAME
            END
            IF CORP.DATA<1> NE "" THEN   ; * NPR01
               CRT @(46,3):" >> ": CORP.DATA<2> :" Children for Client ":CORP.DATA<1>      ; * NPR01
            END                          ; * NPR01
            IF DISPLAY<4> THEN           ; *DS001
               CRT @( 0, 6):'Logistics Clients Only   : ':LOGISTICS.ONLY         ; *DS001
            END                          ; *DS001
            IF DISPLAY<3> THEN
               CRT @( 0, 5):'Build Separate Report    : ':SEPARATE.DIVISIONS
            END
            IF DISPLAY<2> THEN           ; *DS001
               IF REGION='Y' THEN        ; * JMK57          ; *DS001
                  CRT @( 0, 4):'Region                   : ':DIVISIONAL.ID:STR(' ',6-LEN(DIVISIONAL.ID)):CITY.STATE      ; * JMK57          ; *DS001
               END ELSE                  ; * JMK57
                  IF NOT(LISTBOX) THEN   ; *DS001
                     CRT @( 0, 4):'Division                 : ':DIVISIONAL.ID:STR(' ',6-LEN(DIVISIONAL.ID)):CITY.STATE   ; *DS001
                  END ELSE               ; *DS001
                     CRT @( 0, 4):'Division                 : ':DIVISIONAL.ID:STR(' ',12-LEN(DIVISIONAL.ID))   ; *DS001
                  END                    ; *DS001
               END                       ; * JMK57
            END
            IF DISPLAY<5> THEN
               CRT @( 0, 7):'Carrier Number           : ':CARRIER.ID:STR(' ',6-LEN(CARRIER.ID)):CARRIER.NAME
            END
            IF DISPLAY<6> THEN
               CRT @( 0, 8):'Transportation Mode      : ':MODE:STR(' ',6-LEN(MODE)):MODE.DESC
            END
            IF DISPLAY<7> THEN
               CRT @( 0, 9):'File Selection           : ':FILE.SEL:STR(' ',6-LEN(FILE.SEL)):FILE.DESC
            END
            IF DISPLAY<8> THEN
               CRT @( 0,10):'Beginning Date           : ':BEG.DATE'D4-'
            END
            IF DISPLAY<9> THEN
               CRT @( 0,11):'Ending Date              : ':END.DATE'D4-'
            END
            IF DISPLAY<10> THEN
               CRT @( 0,12):'Duplicate Bills Only     : ':DUPLICATES.ONLY
            END
            IF DISPLAY<11> THEN
               CRT @( 0,13):'Bills With Cut-Back Code : ':CUT.BACK.CODE:STR(' ',6-LEN(CUT.BACK.CODE)):CUT.DESC
            END
            IF DISPLAY<12> THEN
               CRT @( 0,14):'Bills With Misroutes     : ':MISROUTE.INFO:STR(' ',6-LEN(MISROUTE.INFO)):MISROUTE.DESC
            END
            IF DISPLAY<13> THEN
               CRT @( 0,15):'Bills With Overcharges   : ':OVERCHARGE.INFO:STR(' ',6-LEN(OVERCHARGE.INFO)):OVERCHARGE.DESC
            END
            IF DISPLAY<14> THEN
               CRT @( 0,16):'Include Balance Dues     : ':INCLUDE.BD
            END
            IF DISPLAY<15> THEN          ; * JCW01
               CRT @( 0,17):'Include or Exclude I/O/T : ':INCLUDE.IOT:STR(' ',6-LEN(INCLUDE.IOT)):INCLUDE.IOT.DESC       ; * JCW01
            END                          ; * JCW01
            IF DISPLAY<16> THEN          ; * JCW01
               CRT @( 0,18):'Inbound/Outbound/Third   : ':IOT.INFO:STR(' ',6-LEN(IOT.INFO)):IOT.DESC           ; * JCW01
            END                          ; * JCW01
            IF DISPLAY<17> THEN
               CRT @( 0,19):'Bills With Logistics     : ':LOGISTICS.INFO:STR(' ',6-LEN(LOGISTICS.INFO)):LOGISTICS.DESC
            END
            IF DISPLAY<18> THEN
               CRT @( 0,20):'Bills With Discounts     : ':DISCOUNT.INFO:STR(' ',6-LEN(DISCOUNT.INFO)):DISCOUNT.DESC
            END
         CASE PAGE.NUM=2
            IF DISPLAY<19> THEN
*              CRT @( 0, 3):'Version Specs            : ':VERSION      ; * JMK39
               BSPEC.ID='FMT*':CLIENT.ID:'*':VERSION         ; * JMK39
               READ BSPEC.REC FROM F.BUILD.SPEC,BSPEC.ID ELSE          ; * JMK39
                  BSPEC.ID='FMT**':VERSION         ; * JMK39
                  READ BSPEC.REC FROM F.BUILD.SPEC,BSPEC.ID ELSE       ; * JMK39
                     BSPEC.REC='Unknown'           ; * JMK39
                  END                    ; * JMK39
               END                       ; * JMK39
               CRT @( 0, 3):'Version Specs            : ':VERSION'L#4':' - ':BSPEC.REC<1>'L#35':@(-4):         ; * JMK39
            END
            IF DISPLAY<20> THEN
*              CRT @( 0, 4):'Sort Specs               : ':SORT         ; * JMK39
               DSORT.ID='DF.SORT*':SORT  ; * JMK39
               READ DSORT.REC FROM F.TABLES,DSORT.ID ELSE DSORT.REC=''           ; * JMK39
               CRT @( 0, 4):'Sort Specs               : ':SORT'L#4':' - ':DSORT.REC<2>'L#35':@(-4):  ; * JMK39
            END
            IF DISPLAY<21> THEN
               CRT @( 0, 5):'Email this Report        : ':EMAIL.REPORT
            END
            IF DISPLAY<22> THEN
               CRT @( 0, 6):'Email To                 : ':NEW.EMAIL.ADDR
            END
            IF DISPLAY<23> THEN          ; * JMK01
               CRT @( 0, 7):'Bills With LCC           : ':LCC.INFO:STR(' ',6-LEN(LCC.INFO)):LCC.DESC
            END                          ; * JMK01
            IF DISPLAY<24> THEN          ; * JMK17
               CRT @( 0, 8):'Bills With TL Parameters : ':TL.INFO:STR(' ',6-LEN(TL.INFO)):TL.DESC    ; * JMK17
            END                          ; * JMK17
            IF DISPLAY<25> THEN          ; * JMK22
               CRT @( 0, 9):'Electronic Bills         : ':EBILL.INFO:STR(' ',6-LEN(EBILL.INFO)):EBILL.DESC     ; * JMK22
            END                          ; * JMK22
            IF DISPLAY<26> THEN          ; * JMK26
               CRT @( 0,10):'1 Bill Per Client(Faster): ':SAMPLE.ONE   ; * JMK26
            END                          ; * JMK26
            IF DISPLAY<27> THEN          ; * JMK27
               CRT @( 0,11):'Reject Bills             : ':REJ.INFO:STR(' ',6-LEN(REJ.INFO)):REJ.DESC           ; * JMK27
            END                          ; * JMK27
            IF DISPLAY<28> THEN          ; * JMK29
               CRT @( 0,12):'Delayed Report Option    : ':DELAY.OPT    ; * JMK29
            END                          ; * JMK29
            IF DISPLAY<29> THEN          ; * JMK32
               CRT @( 0,13):'Excel Row Limit          : ':ROW.LIMIT    ; * JMK32
            END                          ; * JMK32
            IF DISPLAY<30> THEN
               CRT @( 0,14):'State Filter             : ':ST.FILTER    ; * JMK37
            END
            IF DISPLAY<31> THEN          ; * NPR03
               IF STACK.FILTER = '' OR STACK.FILTER = 'N' THEN         ; * NPR03
*                  STACK.DISPLAY = "No Preference"                      ; * NPR03
                  STACK.DISPLAY = ""     ; * NPR03
               END ELSE                  ; * NPR03
                  STACK.DISPLAY = STACK.FILTER     ; * NPR03
               END                       ; * NPR03
               CRT @( 0,15):'Stack Filter             : ':STACK.DISPLAY          ; * NPR03
            END                          ; * NPR03
            IF DISPLAY<32> THEN
               RPT.STYLE.DESC='Text for Excel'     ; * JMK47
               IF RPT.STYLE='H' THEN RPT.STYLE.DESC='HTML for Browser'           ; * JMK47
               IF RPT.STYLE='C' THEN RPT.STYLE.DESC='CSV for Import'   ; * JMK79
               CRT @( 0,16):'Output Style Format      : ':RPT.STYLE'L#4':' - ':RPT.STYLE.DESC        ; * JMK47
            END
            IF DISPLAY<33> THEN
               CRT @( 0,17):'Accessorials Only        : ':ACCESS.ONLY:STR(' ',6-LEN(ACCESS.ONLY)):ACCESS.ONLY.DISPLAY    ; * NPR06
            END
            IF DISPLAY<34> THEN
               CRT @( 0,18):'Balance Dues Only        : ':BD.ONLY:STR(' ',6-LEN(BD.ONLY)):BD.ONLY.DISPLAY      ; * JMK69
            END
            IF DISPLAY<35> THEN
               CRT @( 0,19):'Report Headings          : ':HDG.ONLY:STR(' ',6-LEN(HDG.ONLY)):HDG.ONLY.DISPLAY   ; * JMK79
            END
            IF DISPLAY<36> THEN
            END
         CASE PAGE.NUM=3                 ; * JMK30
            IF VERSION='155' THEN        ; * JMK30
               IF DISPLAY<37> THEN       ; * JMK30
                  IF RR.EFF.DATE='S' THEN          ; * JMK31
                     CRT @( 0, 3):'Re-rate Effective Date   : ':'Same Date'      ; * JMK30
                  END ELSE               ; * JMK31
                     CRT @( 0, 3):'Re-rate Effective Date   : ':RR.EFF.DATE'D4-'           ; * JMK30
                  END                    ; * JMK31
               END                       ; * JMK30
               IF DISPLAY<38> THEN       ; * JMK30
                  BEGIN CASE
                     CASE RR.CARRIER.ID='A'        ; * JMK43
                        CRT @( 0, 4):'Re-rate Carrier Use      : ':'A  AFS500'   ; * JMK43 - EITHER 'SAME' OR 'LCC' OR 'AFS'
                     CASE RR.CARRIER.ID='S'
                        CRT @( 0, 4):'Re-rate Carrier Use      : ':'S  Same Carrier'       ; * JMK30 - EITHER 'SAME' OR 'LCC'
                     CASE RR.CARRIER.ID='L'
                        CRT @( 0, 4):'Re-rate Carrier Use      : ':'L  Least Cost Carrier'           ; * JMK30 - EITHER 'SAME' OR 'LCC'
                     CASE RR.CARRIER.ID='O'
                        CRT @( 0, 4):'Re-rate Carrier Use      : ':'O  OLA Analysis Set'   ; * JMK30 - EITHER 'SAME' OR 'LCC'
                     CASE RR.CARRIER.ID='Q'
                        CRT @( 0, 4):'Re-rate Carrier Use      : ':'S  Same Carrier (For QlikView Rate Analysis)'        ; * JMK30 - EITHER 'SAME' OR 'LCC'
                     CASE NUM(RR.CARRIER.ID)
                        CRT @( 0, 4):'Re-rate Carrier Use      : ':RR.CARRIER.ID:STR(' ',6-LEN(RR.CARRIER.ID)):RR.CARRIER.NAME     ; * JMK30 - EITHER 'SAME' OR 'LCC'
                  END CASE
               END                       ; * JMK30
               IF DISPLAY<39> THEN       ; * JMK30
                  CRT @( 0, 5):'Re-rate FAK Assignment 1 : ':RR.FAK.1  ; * JMK30
               END                       ; * JMK30
               IF DISPLAY<40> THEN       ; * JMK30
                  CRT @( 0, 6):'Re-rate FAK Assignment 2 : ':RR.FAK.2  ; * JMK30
               END                       ; * JMK30
               IF DISPLAY<41> THEN       ; * JMK30
                  CRT @( 0, 7):'Re-rate FAK Assignment 3 : ':RR.FAK.3  ; * JMK30
               END                       ; * JMK30
               IF DISPLAY<42> THEN       ; * JMK30
                  CRT @( 0, 8):'Re-rate FAK Assignment 4 : ':RR.FAK.4  ; * JMK30
               END                       ; * JMK30
               IF DISPLAY<43> THEN       ; * JMK30
                  CRT @( 0, 9):'Re-rate FAK Assignment 5 : ':RR.FAK.5  ; * JMK30
               END                       ; * JMK30
               IF DISPLAY<44> THEN       ; * JMK30
                  CRT @( 0,10):'OLA Distribution Zip 1   : ':RR.ZIP.1  ; * JMK30
                  IF RR.ZIP.1#'' THEN    ; * JMK30
                     CALL FB.READ.ZIP(RR.ZIP.1,CITY,STATE)   ; * JMK30
                     CITY.STATE=CITY:', ':STATE    ; * JMK30
                     CRT @( 0,10):'OLA Distribution Zip 1   : ':RR.ZIP.1:' - ':CITY.STATE  ; * JMK30
                  END                    ; * JMK30
               END                       ; * JMK30
               IF DISPLAY<45> THEN       ; * JMK30
                  CRT @( 0,11):'OLA Distribution Zip 2   : ':RR.ZIP.2  ; * JMK30
                  IF RR.ZIP.2#'' THEN    ; * JMK30
                     CALL FB.READ.ZIP(RR.ZIP.2,CITY,STATE)   ; * JMK30
                     CITY.STATE=CITY:', ':STATE    ; * JMK30
                     CRT @( 0,11):'OLA Distribution Zip 2   : ':RR.ZIP.2:' - ':CITY.STATE  ; * JMK30
                  END                    ; * JMK30
               END                       ; * JMK30
               IF DISPLAY<46> THEN       ; * JMK30
                  CRT @( 0,12):'OLA Distribution Zip 3   : ':RR.ZIP.3  ; * JMK30
                  IF RR.ZIP.3#'' THEN    ; * JMK30
                     CALL FB.READ.ZIP(RR.ZIP.3,CITY,STATE)   ; * JMK30
                     CITY.STATE=CITY:', ':STATE    ; * JMK30
                     CRT @( 0,12):'OLA Distribution Zip 3   : ':RR.ZIP.3:' - ':CITY.STATE  ; * JMK30
                  END                    ; * JMK30
               END                       ; * JMK30
               IF DISPLAY<47> THEN       ; * JMK30
                  CRT @( 0,13):'OLA Distribution Zip 4   : ':RR.ZIP.4  ; * JMK30
                  IF RR.ZIP.4#'' THEN    ; * JMK30
                     CALL FB.READ.ZIP(RR.ZIP.4,CITY,STATE)   ; * JMK30
                     CITY.STATE=CITY:', ':STATE    ; * JMK30
                     CRT @( 0,13):'OLA Distribution Zip 4   : ':RR.ZIP.4:' - ':CITY.STATE  ; * JMK30
                  END                    ; * JMK30
               END                       ; * JMK30
               IF DISPLAY<48> THEN       ; * JMK30
                  CRT @( 0,14):'OLA Distribution Zip 5   : ':RR.ZIP.5  ; * JMK30
                  IF RR.ZIP.5#'' THEN    ; * JMK30
                     CALL FB.READ.ZIP(RR.ZIP.5,CITY,STATE)   ; * JMK30
                     CITY.STATE=CITY:', ':STATE    ; * JMK30
                     CRT @( 0,14):'OLA Distribution Zip 5   : ':RR.ZIP.5:' - ':CITY.STATE  ; * JMK30
                  END                    ; * JMK30
               END                       ; * JMK30
               IF DISPLAY<49> THEN       ; * JMK30
                  CRT @( 0,15):'OLA Distribution Zip 6   : ':RR.ZIP.6  ; * JMK30
                  IF RR.ZIP.6#'' THEN    ; * JMK30
                     CALL FB.READ.ZIP(RR.ZIP.6,CITY,STATE)   ; * JMK30
                     CITY.STATE=CITY:', ':STATE    ; * JMK30
                     CRT @( 0,15):'OLA Distribution Zip 6   : ':RR.ZIP.6:' - ':CITY.STATE  ; * JMK30
                  END                    ; * JMK30
               END                       ; * JMK30
               IF DISPLAY<50> THEN       ; * JMK30
                  CRT @( 0,16):'OLA Distribution Zip 7   : ':RR.ZIP.7  ; * JMK30
                  IF RR.ZIP.7#'' THEN    ; * JMK30
                     CALL FB.READ.ZIP(RR.ZIP.7,CITY,STATE)   ; * JMK30
                     CITY.STATE=CITY:', ':STATE    ; * JMK30
                     CRT @( 0,16):'OLA Distribution Zip 7   : ':RR.ZIP.7:' - ':CITY.STATE  ; * JMK30
                  END                    ; * JMK30
               END                       ; * JMK30
               IF DISPLAY<51> THEN       ; * JMK30
                  CRT @( 0,17):'OLA Distribution Zip 8   : ':RR.ZIP.8  ; * JMK30
                  IF RR.ZIP.8#'' THEN    ; * JMK30
                     CALL FB.READ.ZIP(RR.ZIP.8,CITY,STATE)   ; * JMK30
                     CITY.STATE=CITY:', ':STATE    ; * JMK30
                     CRT @( 0,17):'OLA Distribution Zip 8   : ':RR.ZIP.8:' - ':CITY.STATE  ; * JMK30
                  END                    ; * JMK30
               END                       ; * JMK30
               IF DISPLAY<52> THEN       ; * JMK30
                  CRT @( 0,18):'OLA Distribution Zip 9   : ':RR.ZIP.9  ; * JMK30
                  IF RR.ZIP.9#'' THEN    ; * JMK30
                     CALL FB.READ.ZIP(RR.ZIP.9,CITY,STATE)   ; * JMK30
                     CITY.STATE=CITY:', ':STATE    ; * JMK30
                     CRT @( 0,18):'OLA Distribution Zip 9   : ':RR.ZIP.9:' - ':CITY.STATE  ; * JMK30
                  END                    ; * JMK30
               END                       ; * JMK30
               IF DISPLAY<53> THEN       ; * JMK30
                  CRT @( 0,19):'OLA Distribution Zip 10  : ':RR.ZIP.10           ; * JMK30
                  IF RR.ZIP.10#'' THEN   ; * JMK30
                     CALL FB.READ.ZIP(RR.ZIP.10,CITY,STATE)  ; * JMK30
                     CITY.STATE=CITY:', ':STATE    ; * JMK30
                     CRT @( 0,19):'OLA Distribution Zip 10  : ':RR.ZIP.10:' - ':CITY.STATE           ; * JMK30
                  END                    ; * JMK30
               END                       ; * JMK30
            END                          ; * JMK30
      END CASE
      RETURN

********************************************************************************
SET.DISPLAY.VARIABLE:***
      NUM.PROMPTS=27
      DISPLAY=''
      FOR X=1 TO NUM.PROMPTS
         DISPLAY<X>=0
      NEXT X
      RETURN

********************************************************************************
ACCESS.NOTIFY:***
      MVIN=''                            ; * JMK03
*     MVIN<1>='OHolman@afs.net'          ; * JMK03  ; * RLM01
      MVIN<1>='BFranklin@afs.net'        ; * JMK03
      MVIN<1,-1>='KGilbert@afs.net'
      MVIN<2>='DFriend@afs.net'
      MVIN<4>='AFS'                      ; * JMK03
      MVIN<5>=SUBJ                       ; * JMK03
      MVIN<6>=TEXT                       ; * JMK03
      CALL SENDMAIL(MVIN,MVOUT)          ; * JMK03
      RETURN
THE.END:***
      IF MONTHLY.RUN THEN                ; * NKH04
         MONTHLY.RUN = 0                 ; * NKH04
         GOTO 50                         ; * NKH04
      END                                ; * NKH04
      CRT @(0,23):@(-4):
      STOP
   END
