*************************************************************************
* Program : TARIFF.DATE.XREF (Originally FB.1.7)
* Desc: Program To Xref Tariffs With Eff Dates
* Author  : CODY HENDERSON
* Date    : OCT 7, 1996
*
* Copyright (c) 2016 by AFS Logistics, LLC. - All Rights Reserved


* Last updated by afs (AFSLOGISTICS\gbino) at 07:41:17 on 04/16/2018.



* Start modification history
* 122016 - TAG01 - SysAid 29327 Increase entry lines to 360 from 216
* 082713 - JMK02 - Project# 377 - RateWareXL integration
* 010711 - NPR01 - Added option to get Mode - Either "E"dit or "S"elect A tariff.
* 121009 - JMK01 - UPDATE SQL WHEN THIS TABLE CHANGES
* 082117 - NKH01 - Replaced Tom Gorton with Nicole Meddaugh
* End modification history
*************************************************************************
*
*
* Initialize variables.
*
$OPTIONS HEADER.EJECT
$OPTIONS EXEC.EQ.PERF
$OPTIONS INFO.ABORT
      ERRMSG=''
      PROG.NAME='TARIFF.DATE.XREF'
      PROG.DESC='XREFING TARIFFS WITH EFFECTIVE DATES'
      PACK.NAME='FREIGHT AUDITING'
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      CALL GET.USER.NEW(USER.NAME,CH.NUM)
      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'TARIFF.DATE.XREF' ; UPL.VOUT = ''         ; * NPR_UPL 04/23/2010
      UPL.VIN<3> = USER.NAME
      UPL.VIN<4> = CH.NUM
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)       ; * NPR_UPL 04/23/2010
      PROMPT''
      ADD.FLAG=0
      FIND.LOCKED.NAME=''
      MAX.PAGE=18
*     MAX.PAGE=21   ;* NPR99
*
      INPUT MODE                         ; * NPR01
*
* Open files.
*
      OPEN '','FB.TABLES' TO F.FB.TABLES ELSE CALL OPEN.ABORT("FB.TABLES",PROG.NAME)
      OPEN '','OPERATOR' TO F.OP ELSE CALL OPEN.ABORT("OPERATOR",PROG.NAME)      ; * GRB01
*
* GET TARIFF TABLE
*
      READU TARIFF.REC FROM F.FB.TABLES,'TARIFF.DATE.XREF' LOCKED
         FIND.LOCKED.NAME='FB.TABLES,TARIFF.DATE.XREF'
         GOSUB FIND.LOCKED
         CALL ELINE(FL.USER:' has ':FIND.LOCKED.NAME:' locked. Press enter to exit program.')
         GOTO 9999
      END ELSE
         TARIFF.REC=''
      END
      TARIFF.ORG=TARIFF.REC              ; * JMK01
      READU PROG.TARIFF.REC FROM F.FB.TABLES,'TARIFFS' LOCKED
         FIND.LOCKED.NAME='FB.TABLES,TARIFFS'
         GOSUB FIND.LOCKED
         CALL ELINE(FL.USER:' has ':FIND.LOCKED.NAME:' locked. Press enter to exit program.')
         GOTO 9999
      END ELSE
         PROG.TARIFF.REC=''
      END
      ISN.TABLE=PROG.TARIFF.REC<1>
*
* First page of codes.
*
      PAGE=1
      GOSUB 9000
*
* CHECK FOR PROPER USER
*
      READV OP.FLG FROM F.OP,USER.NAME,61 ELSE
         OP.FLG = "N"
      END
      IF OP.FLG = "Y" THEN

         ***    BEGIN CASE
*
* Authorized Users
*
         ***    CASE USER.NAME = 'DAVID'

         ***    CASE USER.NAME = 'GBINO'

         ***     CASE USER.NAME = 'NMEDDAUGH'  ;* NKH01
*
* Restrict the other MoFo's
*
         ***     CASE 1
      END ELSE
         OK=0
         SUBJ="Unauthorized OLA Access Attempt by ":USER.NAME
         TEXT=''
         TEXT<1,-1>=USER.NAME:' ':DATE()'D2/':' ':OCONV(TIME(),'MTHS'):' ':PROG.NAME
         TEXT<1,-1>='User ':USER.NAME:' tried to access Tariff Date Cross Reference'
         TEXT<1,-1>="(This user's name was not included in the program to allow access)"
         MVIN=''
         MVIN<1>='nmeddaugh@afs.net':@VM:'dfriend@afs.net':@VM:'SMatthews@afs.net'

         MVIN<4>='AFS'
         MVIN<5>=SUBJ
         MVIN<6>=TEXT
         CALL SENDMAIL(MVIN,MVOUT)

         CALL FB.PRINT.CENT(1,80,12,'Restricted Access Application')
         CALL FB.PRINT.CENT(1,80,14,'Access Denied! See Mike OR David for Access')
         CALL ELINE('')
         STOP
         ***    END CASE
      END
*
*
* Enter selection code.
*
100:

      HELP="Enter line number. [B]ack. [T]op, [P]rint, ''=Next page."
      IF MODE = "E" THEN
         HELP:=" [E]nd. [EX]it."
      END ELSE
         HELP:=" [EX]it."
      END
      CALL GEN.IN(0,22,"Enter line number please. ###",'',Q,0,3,'','',0,-3,22,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            IF TARIFF.REC<1,PAGE*MAX.PAGE>='' THEN
               CALL ELINE('Error! You are on the last page!')
               GO 100
            END
            PAGE=PAGE+1
            GOSUB 9000
         CASE QI='B'
            PAGE=PAGE-1
            IF PAGE=0 THEN PAGE=1
            GOSUB 9000
         CASE QI='T'
            PAGE=1
            GOSUB 9000
         CASE QI='P'                     ; * JMK02
            GOSUB 9100                   ; * JMK02
            GOSUB 9000
         CASE QI='EX'
            STOP
         CASE NUM(QI)
            SEL=QI
            IF SEL LT START ! SEL GT STOP THEN
               CALL ELINE('Invalid selection.')
               GOTO 100
            END
            IF SEL = 1 ELSE
               IF TARIFF.REC<1,SEL-1> = '' THEN
                  CALL ELINE('Invalid entry. Use next available line.')
                  GOTO 100
               END
            END
            IF MODE = "S" THEN           ; * NPR01
               CRT @(0,22):@(-4)         ; * NPR01
               HELP="Select this tariff " : TARIFF.REC<1,SEL> : " . 'Y'=Yes. 'N'o."        ; * NPR01
               CALL GEN.IN(0,22,'','',Q,0,2,'','',0,LEN(HELP) + 1,22,0,QI,HELP,0,22)       ; * NPR01
               QI=OCONV(QI,'MCU')        ; * NPR01
               BEGIN CASE                ; * NPR01
                  CASE QI='EX'           ; * NPR01
                     STOP                ; * NPR01
                  CASE QI = "Y"          ; * NPR01
                     TARIFF.SELECTED = TARIFF.REC<1,SEL>     ; * NPR01
                     DATA TARIFF.SELECTED          ; * NPR01
                     GOTO 9999           ; * NPR01
                  CASE QI = "N"          ; * NPR01
                     GOTO 100            ; * NPR01
                  CASE 1                 ; * NPR01
                     GOTO 100            ; * NPR01
               END CASE
            END ELSE                     ; * NPR01
               GOSUB 8000
            END                          ; * NPR01
*NPR01         CASE QI='E'
         CASE QI='E' AND MODE = "E"      ; * NPR01
            X=DCOUNT(TARIFF.REC<1>,CHAR(253))
            FOR I=X TO 1 STEP -1
               IF TARIFF.REC<1,I>='' THEN
                  TARIFF.REC=DELETE(TARIFF.REC,1,I)
                  TARIFF.REC=DELETE(TARIFF.REC,2,I)
                  TARIFF.REC=DELETE(TARIFF.REC,3,I)
                  TARIFF.REC=DELETE(TARIFF.REC,4,I)
                  TARIFF.REC=DELETE(TARIFF.REC,5,I)
               END
            NEXT I
            VIN=''
            VIN<1>=1
            VIN<2>='L'
            AIN=TARIFF.REC
            CALL SORT.ARRAY(VIN,VOUT,AIN,AOUT)
            TARIFF.REC=AOUT
            WRITE TARIFF.REC ON F.FB.TABLES,'TARIFF.DATE.XREF'
            IF TARIFF.REC#TARIFF.ORG THEN          ; * JMK01
               TARIFF.LIST=''            ; * JMK01
               TARIFF.LIST<1,-1>='AACTCZ'          ; * JMK01
               TARIFF.LIST<2,-1>='AACTCZ02'        ; * JMK01
               TARIFF.LIST<1,-1>='ABF504'          ; * JMK01
               TARIFF.LIST<2,-1>='ABF50401'        ; * JMK01
               TARIFF.LIST<1,-1>='AFS500'          ; * JMK01
               TARIFF.LIST<2,-1>='AFS50002'        ; * JMK01
               TARIFF.LIST<1,-1>='AFS525'          ; * JMK01
               TARIFF.LIST<2,-1>='AFS52502'        ; * JMK01
               TARIFF.LIST<1,-1>='AFS95'           ; * JMK01
               TARIFF.LIST<2,-1>='AFS50002'        ; * JMK01
               TARIFF.LIST<1,-1>='ARFW500'         ; * JMK01
               TARIFF.LIST<2,-1>='ARF50001'        ; * JMK01
               TARIFF.LIST<1,-1>='ARFWCZ'          ; * JMK01
               TARIFF.LIST<2,-1>='ARFWCZ02'        ; * JMK01
               TARIFF.LIST<1,-1>='CENFUS'          ; * JMK01
               TARIFF.LIST<2,-1>='CENFUS01'        ; * JMK01
               TARIFF.LIST<1,-1>='CFW555'          ; * JMK01
               TARIFF.LIST<2,-1>='CFW55504'        ; * JMK01
               TARIFF.LIST<1,-1>='CTS599'          ; * JMK01
               TARIFF.LIST<2,-1>='CTS59901'        ; * JMK01
               TARIFF.LIST<1,-1>='INTPCZ'          ; * JMK01
               TARIFF.LIST<2,-1>='INTPCZ02'        ; * JMK01
               TARIFF.LIST<1,-1>='LITECZ'          ; * JMK01
               TARIFF.LIST<2,-1>='LITECZ02'        ; * JMK01
               TARIFF.LIST<1,-1>='LINT'  ; * JMK01
               TARIFF.LIST<2,-1>='LINT0002'        ; * JMK01
               TARIFF.LIST<1,-1>='MASCCZ'          ; * JMK01
               TARIFF.LIST<2,-1>='MASCCZ02'        ; * JMK01
               TARIFF.LIST<1,-1>='ODF559'          ; * JMK01
               TARIFF.LIST<2,-1>='ODF55901'        ; * JMK01
               TARIFF.LIST<1,-1>='RDW507'          ; * JMK01
               TARIFF.LIST<2,-1>='RDW50703'        ; * JMK01
               TARIFF.LIST<1,-1>='SAI500'          ; * JMK01
               TARIFF.LIST<2,-1>='SAI50001'        ; * JMK01
               TARIFF.LIST<1,-1>='SMC519'          ; * JMK01
               TARIFF.LIST<2,-1>='SMC51906'        ; * JMK01
               TARIFF.LIST<1,-1>='VIKNIN'          ; * JMK01
               TARIFF.LIST<2,-1>='VIKNIN02'        ; * JMK01
               TARIFF.LIST<1,-1>='VIKNUS'          ; * JMK01
               TARIFF.LIST<2,-1>='VIKNUS01'        ; * JMK01
               TARIFF.LIST<1,-1>='YFS500'          ; * JMK01
               TARIFF.LIST<2,-1>='YFS50001'        ; * JMK01
               NVAL=DCOUNT(TARIFF.REC<1>,@VM)      ; * JMK01
               IF DCOUNT(TARIFF.ORG<1>,@VM)>NVAL THEN NVAL=DCOUNT(TARIFF.ORG<1>,@VM)       ; * JMK01
               FOR VAL=1 TO NVAL         ; * JMK01
                  IF TARIFF.REC<1,VAL>#TARIFF.ORG<1,VAL> THEN          ; * JMK01
                     TARIFF.REC=''       ; * JMK01
                     TARIFF.REC<1>=TARIFF.REC<1,VAL>         ; * JMK01
                     TARIFF.NAME=TARIFF.REC<2,VAL>           ; * JMK01
                     LOCATE(TARIFF.NAME,TARIFF.LIST,1;TPOS) THEN       ; * JMK01
                        TARIFF.REC<2>=TARIFF.LIST<2,TPOS>    ; * JMK01
                     END ELSE            ; * JMK01
                        TARIFF.REC<2>=TARIFF.NAME  ; * JMK01
                     END                 ; * JMK01
                     TARIFF.REC<3>=TARIFF.REC<3,VAL>         ; * JMK01

* DEFINE FIELDS TO UPDATE FROM TARIFF.REC HERE

                     SQLVIN=''           ; * JMK01
                     SQLVIN<1>=USER.NAME           ; * JMK01
                     SQLVOUT=''          ; * JMK01
                     CALL UPD.SQL.TARIFF.SUB(SQLVIN,SQLVOUT,TARIFF.REC)          ; * JMK01
                  END                    ; * JMK01
               NEXT VAL                  ; * JMK01
            END                          ; * JMK01
            STOP
      END CASE
      GOTO 100
*
*-----------------------------------------------------------------------
* INTERNAL SUBROUTINES
*-----------------------------------------------------------------------
*
* EDIT TARIFFS
*
8000: ROW=3+REM(SEL,MAX.PAGE)
      IF ROW=3 THEN ROW=21
      AFS.TARIFF=TARIFF.REC<1,SEL>
      TARIFF=TARIFF.REC<2,SEL>
      DATE=TARIFF.REC<3,SEL>
      DESC=TARIFF.REC<4,SEL>
      FACTOR=TARIFF.REC<5,SEL>
*
8010: CRT@(0,22):@(-4)
      HELP="Enter the AFS tariff name. ''=Accept. 'D'=Delete. 'X'=Exit."
      IF AFS.TARIFF='' THEN MASK=STR('-',15) ELSE MASK=AFS.TARIFF'L#15'
      CALL GEN.IN(5,ROW,MASK,'',Q,0,15,'','',2,-15,ROW,0,QI,HELP,0,23)
      IF QI='' THEN QI=AFS.TARIFF
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            CRT @(5,ROW):AFS.TARIFF'L#15'
            RETURN
         CASE QI='EX'
            GOTO 9999
         CASE QI='D'
            TARIFF.REC=DELETE(TARIFF.REC,1,SEL)
            TARIFF.REC=DELETE(TARIFF.REC,2,SEL)
            TARIFF.REC=DELETE(TARIFF.REC,3,SEL)
            TARIFF.REC=DELETE(TARIFF.REC,4,SEL)
            TARIFF.REC=DELETE(TARIFF.REC,5,SEL)
            GOSUB 9000
            GOTO 100
         CASE QI=''
            CALL ELINE('Invalid entry. Data required in this field.')
            GOTO 8010
         CASE INDEX(QI,' ',1)
            CALL ELINE('Invalid entry. No spaces allowed.')
            GOTO 8010
            RETURN
      END CASE
      TEMP.TARIFF.REC=TARIFF.REC
      TEMP.TARIFF.REC<1,SEL>=''          ; ** NULL THIS ONE OUT
* Look for other occurances of this name
      LOCATE QI IN TEMP.TARIFF.REC<1> SETTING POS THEN
         CALL ELINE('Invalid Entry!  Name already used! See Line ':POS)
         GO 8010
      END
      AFS.TARIFF=QI
      CRT @(5,ROW):AFS.TARIFF'L#15'
*
8015: HELP="Enter the ACTUAL tariff name. ''=Accept. 'D'=Delete. 'X'=Exit. '?'=Options."
      IF TARIFF='' THEN MASK=STR('-',8) ELSE MASK=TARIFF'L#8'
      TARIFF.NAMES=CHANGE(ISN.TABLE,@VM,' ')
      TARIFF.NAMES=TARIFF.NAMES[1,78]
      CRT@(0,22):TARIFF.NAMES:@(-4)
      CALL GEN.IN(21,ROW,MASK,'',Q,0,8,'','',2,-8,ROW,0,QI,HELP,0,23)
      CRT@(0,22):@(-4):
      IF QI='' THEN QI=TARIFF
      QI=OCONV(QI,'MCU')
*
      ISN.TABLE.STR=FOLD(CHANGE(ISN.TABLE,@VM,' '),78)
      ISN.POS=1
      T.NUM.FOLDS=DCOUNT(ISN.TABLE.STR,@AM)
IST.2:
      CRT@(0,22):ISN.TABLE.STR<ISN.POS>:@(-4)
*     CRT@(0,23):@(-4):
      BEGIN CASE
         CASE QI='X'
            CRT @(21,ROW):TARIFF'L#8'
            GO 8010
         CASE QI='EX'
            GOTO 9999
         CASE QI=''
            CALL ELINE('Invalid entry. Data required in this field.')
            GOTO 8015
         CASE INDEX(QI,' ',1)
            CALL ELINE('Invalid entry. No spaces allowed.')
            GOTO 8015
            RETURN
         CASE QI='?'
            KEEP.FOLDING=1
            CRT@(0,23):'OPTIONS: [ENTER]=View next line. [SPACE]=Done.':@(-4)
            CRT@(0,23):
            UPDATE.FOLD=1
            LOOP
               LOOP
                  INPUT INPUTBUFFER,-1
               UNTIL INPUTBUFFER=0
                  INPUT JUNK,1
                  IF JUNK#'' THEN
                     KEEP.FOLDING=0
                  END ELSE
                     IF ISN.POS=T.NUM.FOLDS THEN
                        ISN.POS=1
                     END ELSE
                        ISN.POS+=1
                     END
                     CRT@(0,22):ISN.TABLE.STR<ISN.POS>:@(-4)
                  END
               REPEAT
            WHILE (KEEP.FOLDING)
            REPEAT
            GOTO 8015
         CASE 1
            LOCATE QI IN PROG.TARIFF.REC<1> SETTING POS ELSE
               CALL ELINE('Tariff ':QI:' is not a valid tariff. Try again.')
               GOTO 8015
            END
      END CASE
      TARIFF=QI
      CRT @(21,ROW):TARIFF'L#8'
*
8017: CRT@(0,22):@(-4)
      IF FACTOR='' THEN FACTOR=1000000
      HELP="Enter the Factor for this tariff. ''=Accept. 'X'=Back to tarrif."
      CALL GEN.IN(30,ROW,FACTOR'R48#8','AMT4',Q,0,8,'','0',2,30,ROW,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN Q=FACTOR
      BEGIN CASE
         CASE QI='X'
            CRT @(30,ROW):FACTOR'R48#8'
            GOTO 8015
         CASE QI='EX'
            GOTO 9999
         CASE NUM(Q)
            CRT @(30,ROW):Q'R48#8'
            BEGIN CASE
               CASE Q < 10000
                  CALL ELINE('Factor must be greater than or equal to 1.0000')
                  GOTO 8017
               CASE Q > 9999999
                  CALL ELINE('Factor must be less than 999.9999')
                  GOTO 8017
               CASE Q < 500000
                  CALL ELINE('WARNING Factor is less than 50.0000')
               CASE Q > 1500000
                  CALL ELINE('WARNING Factor is greater than 150.0000')
            END CASE
         CASE QI=''
            CALL ELINE('Invalid entry. Data required in this field.')
            GOTO 8017
         CASE 1
            CALL ELINE('Invalid entry.')
            GOTO 8017
      END CASE
      FACTOR=Q
      CRT @(30,ROW) :FACTOR'R48#8'
*
8020: CRT@(0,22):@(-4)
      HELP="Enter Effective date for this tariff. ''=Accept. 'X'=Back to tarrif."
*NPR      CALL GEN.IN(39,ROW,DATE'D2/','DATE',Q,0,8,'','0',2,39,ROW,0,QI,HELP,0,23)
      CALL GEN.IN(39,ROW,DATE'D4/','DATE',Q,0,10,'','0',2,39,ROW,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=DATE
      BEGIN CASE
         CASE QI='X'
*NPR            CRT @(39,ROW):DATE'D2/'
            CRT @(39,ROW):DATE'D4/'
            GOTO 8017
         CASE QI=''
            CALL ELINE('Invalid entry. Data required in this field.')
            GOTO 8020
         CASE QI='EX'
            GOTO 9999
         CASE NUM(Q)
            NULL
         CASE ICONV(DATE,'D')=''
            CALL ELINE('Invalid entry.')
            GOTO 8020
         CASE 1
            CALL ELINE('Invalid entry.')
            GOTO 8020
      END CASE
      DATE=Q
      CRT @(39,ROW) :DATE'D2/'
*NPR     CRT @(39,ROW):DATE'D2/'
      CRT @(39,ROW):DATE'D4/'
*
8030: CRT@(0,22):@(-4)
      HELP="Enter tariff Description. ''=Accept. [X]-Back."
*NPR      IF DESC='' THEN MASK=STR('-',31) ELSE MASK=DESC'L#31'
*NPR      CALL GEN.IN(48,ROW,MASK,'',Q,0,31,'','',2,48,ROW,0,QI,HELP,0,23)

      IF DESC='' THEN MASK=STR('-',31) ELSE MASK=DESC 'L#29'
      CALL GEN.IN(50,ROW,MASK,'',Q,0,31,'','',2,50,ROW,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN Q=DESC
      BEGIN CASE
         CASE QI='X'
*NPR            CRT @(48,ROW):DESC'L#31'
            CRT @(50,ROW):DESC'L#29'
            GOTO 8020
         CASE QI='EX'
            GOTO 9999
      END CASE
      DESC=Q
*NPR      CRT @(48,ROW):DESC'L#31'
      CRT @(50,ROW):DESC'L#29'
*
*
      TARIFF.REC<1,SEL>=AFS.TARIFF
      TARIFF.REC<2,SEL>=TARIFF
      TARIFF.REC<3,SEL>=DATE
      TARIFF.REC<4,SEL>=DESC
      TARIFF.REC<5,SEL>=FACTOR
      RETURN
*
* DISPLAY EXPENSE ARRAY
*
9000: CRT @(00,3):@(-3):"Line":
      CRT @(05,3):"AFS Tar Name":
      CRT @(21,3):"Tariff":
      CRT @(30,3):"Factor":
*NPR      CRT @(39,3):"Eff Date":
      CRT @(41,3):"Eff Date":
*NPR      CRT @(48,3):"Description":
      CRT @(50,3):"Description":
      START=(PAGE*MAX.PAGE)-17
* Begin TAG01
*      IF START GT 199 THEN
      IF START GT 343 THEN
* End TAG01
         START=1
         PAGE=1
      END
      STOP=START+17
      FOR I=START TO STOP STEP 1
         ROW=3+REM(I,MAX.PAGE)
         IF ROW=3 THEN ROW=21
         AFS.NAME=TARIFF.REC<1,I>
         TARIFF=TARIFF.REC<2,I>
         DATE=TARIFF.REC<3,I>
         DESC=TARIFF.REC<4,I>
         FACTOR=TARIFF.REC<5,I>
*        CRT @(0,ROW):I"R#4":' ':TARIFF"L#8":'   ':DATE'D2/':@(25,ROW):DESC[1,40]:
         CRT @(00,ROW):I"R#4":
         CRT @(05,ROW):AFS.NAME:
         CRT @(21,ROW):TARIFF:
         IF FACTOR#'' THEN
            CRT @(30,ROW):FACTOR'R48#8':
         END ELSE
            CRT @(30,ROW):SPACE(8):
         END
*NPR     CRT @(39,ROW):DATE'D2/':
*NPR     CRT @(48,ROW):DESC[1,31]:
         CRT @(39,ROW):DATE'D4/':
         CRT @(50,ROW):DESC[1,29]:
      NEXT I
      RETURN
*
9100: * PRINT TARIFF ARRAY
*
      PRINTER ON
      PRINT "Line"'R#4 ':"AFS Tar Name"'L#15 ':"Tariff"'L#10 ':"Factor"'R#8 ':"Eff Date"'R#10 ':"Description"'L#30'
      NVAL=DCOUNT(TARIFF.REC<1>,@VM)
      FOR VAL=1 TO NVAL
         AFS.NAME=TARIFF.REC<1,VAL>
         TARIFF=TARIFF.REC<2,VAL>
         EFF.DATE=TARIFF.REC<3,VAL>'D4/'
         TARIFF.DESC=TARIFF.REC<4,VAL>
         FACTOR=SPACE(8)
         IF TARIFF.REC<5,VAL>#'' THEN
            FACTOR=TARIFF.REC<5,VAL>'R48#8'
         END
         PRINT VAL'R#4 ':AFS.NAME'L#15 ':TARIFF'L#10 ':FACTOR'R#8 ':EFF.DATE'R#10 ':TARIFF.DESC'L#30'
      NEXT VAL
      PRINTER OFF
      PRINTER CLOSE
      RETURN
*
* FIND LOCK SUBROUTINE
*
FIND.LOCKED:

      STMT = 'LIST.READU EVERY'
      EXECUTE STMT CAPTURING OUTPUT
      FL.LEN = DCOUNT(OUTPUT,@AM)
      FL.USER = 'Someone'
      FOUND = 0

      FOR X = 1 TO FL.LEN UNTIL FOUND
         T.USER = OCONV(TRIM(OUTPUT<X>[44,9]),'MCU')
         T.FILE = TRIM(OUTPUT<X>[53,17])
         IF T.FILE = FIND.LOCKED.NAME THEN
            FL.USER = T.USER
            FOUND = 1
         END
      NEXT

*  CALL ELINE(FL.USER:" has the file ":FIND.LOCKED.NAME:" locked. Find them and tell them to get out!")

      RETURN
9999: STOP
