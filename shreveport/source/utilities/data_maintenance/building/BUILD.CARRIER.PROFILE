* Program BUILD.CARRIER.PROFILE
* Program to Download a Carrier Profile
*
* FREIGHT BILLING PACKAGE
*
* AUTHOR: Tami Seago
* DATE: January 11, 2001
*
* 042606 - JCW01 - Add FB.PROC.DATA.XREF for performance
* 031108 - JMK01 - T080799 - Remove duplicates in FB History Reporting
*
***************************************************************
*
$INCLUDE PROG.ADMIN INC_OPTIONS
*
* Initialize variables
*
*CH   COPIES=1
*
      PROMPT''
      CALL CHANNEL(CH.NUM)
      CALL GET.USER(USER.NAME)
      STATUS=''
      CALL CHANNEL(CH.NUM)

      TAB=CHAR(9)
      WIDTH=132
      PROMPT''
      ERRMSG=''
      PROG.NAME = 'BUILD.CARRIER.PROFILE'
      PROG.DESC="Build a Carrier Profile File"
      PACK.NAME="Freight Billing"
      BACK.FLAG = 0
       UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'BUILD.CARRIER.PROFILE' ; UPL.VOUT = ''                    ;* NPR_UPL 04/22/2010
       CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/22/2010
      CLIENT = ""
      BEG.DATE = ""
      END.DATE = ""

      ESC=CHAR(27)

      OPEN '','CARRIERS' TO F.CARRIERS ELSE
         CALL OPEN.ABORT("CARRIERS",PROG.NAME)
      END
      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         CALL OPEN.ABORT("CLIENTS",PROG.NAME)
      END
      OPEN '','FB.TRANSPORT' TO F.TRANSPORT ELSE
         CALL OPEN.ABORT("FB.TRANSPORT",PROG.NAME)
      END

      OPEN '','FB.TABLES' TO F.TABLES ELSE
         CALL OPEN.ABORT('FB.TABLES',PROG.NAME)
      END
      BILLDATA.REC = ''

      OPEN '','VOC' TO F.VOC ELSE
         CALL ELINE('UNABLE TO OPEN VOC FILE')
         STOP
      END

      READ BILLDATA.REC FROM F.VOC,"BILLDATA" ELSE
         CALL ELINE('UNABLE TO OPEN "VOC BILLDATA"')
         STOP
      END

      BILLDATA.REC<2>:='\':USER.NAME
      WRITE BILLDATA.REC ON F.VOC,"BILLDATA.":USER.NAME ELSE
         CALL ELINE("YOUR USER NAME '":USER.NAME:"' IS NOT IN THE BILLDATA FOLDER - PLEASE SEE OWEN/TAMI/DAVID")
         STOP
      END
      OPEN '','BILLDATA.':USER.NAME TO BILLDATA ELSE
         CALL ELINE('UNABLE TO OPEN "BILLDATA.":USER')
         STOP
      END

CH.NUM = CH.NUM'R%5'
      OPEN '','FBWORK':CH.NUM TO F.WORK ELSE
         EXECUTE 'CREATE-FILE FBWORK':CH.NUM:' 1 1001' PASSLIST CAPTURING OUTPUT
         OPEN '','FBWORK':CH.NUM TO F.WORK ELSE
            CALL OPEN.ABORT('FBWORK':CH.NUM,PROG.NAME)
         END
      END
      OPEN 'DICT','FBWORK':CH.NUM TO F.DICT.WORK ELSE
         CALL OPEN.ABORT('DICT FBWORK':CH.NUM,PROG.NAME)
      END




***********************************************************************
* Clear work file
*
      CLEARFILE F.WORK
*
* Create work file dictionary items
*
      TEMP=''
      TEMP<1>='S'
      TEMP<2>=0
      TEMP<8>='G0*1'
      TEMP<9>='L'
      TEMP<10>=2
      WRITE TEMP ON F.DICT.WORK,'CARRIER'
      TEMP<1>='S'
      TEMP<2>=0
      TEMP<8>='G1*1'
      TEMP<9>='L'
      TEMP<10>=1
      WRITE TEMP ON F.DICT.WORK,'MODE'

*
*
* Enter client number.
*
ENTER.CLIENT:***
      CALL AFS.SCR.HEAD(CO.ID, FILE.ID, '', PROG.NAME, PROG.DESC, PACK.NAME, CO.NAME, TIME.DATE, 1)
      HELP = "Enter client name/number or ALL to process. [X]=Back [EX] = Exit"
      IF CLIENT = '' THEN
         MASK = 'ALL  '
      END ELSE
         MASK = CLIENT'R%5'
      END
      CALL GEN.IN(0,3,'Enter Client Number       : ':MASK,'',Q,0,20,'','',2,-5,3,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX' ! QI='X'
            STOP
         CASE QI = '' OR QI = 'ALL'
            Q='ALL'
         CASE NOT(QI MATCHES "0N")
            CALL SOUNDEX.DISPLAY(QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            BEGIN CASE
               CASE ITEM.LIST=''
                  GOTO ENTER.CLIENT
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                  GOTO ENTER.CLIENT
               CASE ITEM.LIST NE ''
                  IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
                  GOTO ENTER.CLIENT
            END CASE
         CASE NUM(QI)
            Q=QI'R%5'
         CASE 1
            GOTO ENTER.CLIENT
      END CASE
      CLIENT=Q
      IF CLIENT = 'ALL' THEN
         CLIENT.NAME = 'All Clients'
         CRT @(0,3):'Enter Client Number       : ':'ALL':
         CRT ' ':CLIENT.NAME:@(-4):

      END ELSE
         READ CLIENT.REC FROM F.CLIENTS,CLIENT ELSE
            CALL ELINE('ERROR - Client ':CLIENT:' not on file.')
            GOTO ENTER.CLIENT
         END
         CLIENT.NAME=CLIENT.REC<2>
         CLIENT.LINE = '~~~~ ':CLIENT'R%5':' ':CLIENT.NAME'L#20'
         CRT @(0,3):'Enter Client Number       : ':CLIENT'R%5':
         CRT ' ':CLIENT.NAME:@(-4):
         STATUS = CLIENT.REC<30>
         IF STATUS # 'A' THEN
            CALL ELINE('CLIENT IS NOT ACTIVE, PLEASE TRY AGAIN')
            GO ENTER.CLIENT
         END
      END


*
* Enter beginning date.
*
ENTER.BEGIN.DATE:***
      HELP="Enter beginning date. nn=Day. nn/nn=Month & Day. X=Back to file. EX=Exit."
      IF BEG.DATE='' THEN BEG.DATE=DATE()
      LN='Enter the Beginning date  : ':BEG.DATE'D2/'
      CALL GEN.IN(0,7,LN,'DATE',Q,0,8,'','',0,-8,7,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            CRT @(0,7):@(-3):
            GOTO ENTER.CLIENT
         CASE QI='EX'
            STOP
      END CASE
      BEG.DATE=Q
      CRT @(28,7):BEG.DATE'D2/'
*
* Enter ending date.
*
ENTER.END.DATE:***
      HELP="Enter ending date. nn=Day. nn/nn=Month & Day. X=Back to Beg Date. EX=Exit."
      IF END.DATE='' THEN END.DATE=DATE()
      LN='Enter the Ending Date     : ':END.DATE'D2/'
      CALL GEN.IN(0,9,LN,'DATE',Q,0,9,'','',0,-8,9,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            CRT @(0,9):@(-3):
            GOTO ENTER.BEGIN.DATE
         CASE QI='EX'
            STOP
      END CASE
      END.DATE=Q
      IF BEG.DATE GT END.DATE THEN
         CALL ELINE('Beginning date cannot exceed ending date.')
         GOTO ENTER.END.DATE
      END
      DAYS=END.DATE-BEG.DATE+1
      CRT @(28,9):END.DATE'D2/'

*
* Verify selection criteria is correct.
*
VERIFY.SELECTION:***
      HELP="X=Change. EX=Exit. RETURN=Continue."
      CALL GEN.IN(0,22,'Enter selection please. --','',Q,0,2,'','',0,-2,22,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            CRT @(0,22):@(-3):
            BACK.FLAG = 1
            GOTO ENTER.END.DATE
         CASE QI='EX'
            STOP
         CASE QI=''
            NULL
         CASE 1
            CALL ELINE('Invalid entry. Must be X, EX, or RETURN.')
            GOTO VERIFY.SELECTION
      END CASE
      GOSUB SETUP.COLUMN.HEADER
      IF CLIENT # 'ALL' THEN
         CLIENT.ID = CLIENT
         CLIENT.ITEMS = 1
         STATUS = CLIENT.REC<30>
         IF STATUS # 'A' THEN
            GO SKIP.CLIENT
         END
         LAST.PROCESS = CLIENT.REC<82>

         OPEN '','FB.BILLS.HIST,':CLIENT.ID TO F.BILLS.HIST THEN
            GOSUB DOWNLOAD.PROFILE
         END
      END ELSE
         STMT="SSELECT VOC 'FB.BILLS.HIST' *A7"
         CRT @(0,10): STMT
         EXECUTE STMT RTNLIST CLIENT.LIST CAPTURING OUTPUT
         CLIENT.ITEMS = @SELECTED
         IF CLIENT.ITEMS LE 0 THEN
            CALL ELINE('ERROR - No clients on file.')
            STOP
         END
         COUNTER.1=0
         PER.1=0
         TOTAL.REC = ''
         LINE = 2

         LOOP
            READNEXT CLIENT.ID FROM CLIENT.LIST ELSE CLIENT.ID='DONE'
         UNTIL CLIENT.ID='DONE' DO
            IF CLIENT.ID GE '80000' THEN GO SKIP.CLIENT
            IF CLIENT.ID EQ '00732' THEN GO SKIP.CLIENT
            IF CLIENT.ID[1,2]='99' THEN GO SKIP.CLIENT

            COUNTER.1=COUNTER.1+1
            READ CLIENT.REC FROM F.CLIENTS,CLIENT.ID THEN
               CLIENT.NAME = CLIENT.REC<2>
               STATUS = CLIENT.REC<30>
*            IF STATUS # 'A' THEN
*            GO SKIP.CLIENT
*           END
               LAST.PROCESS = CLIENT.REC<82>
            END ELSE
               CLIENT.NAME='*** Not On File ***'
               AUDITOR = ' '
               LAST.PROCESS = ''
            END

            IF CLIENT='ALL' THEN         ; * IF all Clients and From History file
               IF LAST.PROCESS='' THEN GO SKIP.CLIENT        ; ** No need to look if no bills were processed
               IF BEG.DATE > LAST.PROCESS THEN GO SKIP.CLIENT          ; ** No need to look for Bills if BEG.DATE is Later than last processed
            END

            CRT @(0,17):CLIENT.ID:" ":CLIENT.NAME:" - Now selecting bills":@(-4)
            CALL PROG.BAR(20,COUNTER.1,CLIENT.ITEMS,PER.1)
            CLIENT.LINE = '~~~~ ':CLIENT.ID'R%5':' ':CLIENT.NAME'L#20'
            OPEN '','FB.BILLS.HIST,':CLIENT.ID TO F.BILLS.HIST THEN
               GOSUB DOWNLOAD.PROFILE
            END

SKIP.CLIENT:***
         REPEAT
      END
      GOSUB BUILD.PROFILE
      OBEG=BEG.DATE'D4-'
      BMONTH=FIELD(OBEG,'-',1)
      BDAY=FIELD(OBEG,'-',2)
      BYEAR=FIELD(OBEG,'-',3)
      OEND=END.DATE'D4-'
      EMONTH=FIELD(OEND,'-',1)
      EDAY=FIELD(OEND,'-',2)
      EYEAR=FIELD(OEND,'-',3)
      DATE.PART=BYEAR:BMONTH:BDAY
      DATE.PART:='-'
      DATE.PART:=EYEAR:EMONTH:EDAY
      DATE.PART:='-'
      BILLDATA.ID = 'CARRIER.PROFILE.':DATE.PART:CLIENT:'.XLS'
      PROFILE.REC = CHANGE(PROFILE.REC,@VM,TAB)
      WRITE PROFILE.REC ON BILLDATA,BILLDATA.ID
      STOP

DOWNLOAD.PROFILE:***

      STMT='SSELECT FB.PROC.DATE.XREF,':CLIENT.ID:' WITH DATE >= "':OCONV(BEG.DATE,'D2/'):'"' ; * JCW01
      STMT = STMT:' AND WITH DATE <= "':OCONV(END.DATE,'D2/'):'"'   ; * JCW01
      EXECUTE STMT RTNLIST CAPTURING MSG ; * JCW01
      IF @SELECTED > 0 THEN ; * JCW01
         STMT='QSELECT FB.PROC.DATE.XREF,':CLIENT.ID         ; * JCW01
         EXECUTE STMT PASSLIST RTNLIST CAPTURING RESULTS  ; * JCW01
      END ELSE ; * JCW01
         RETURN ; * JCW01
      END ; * JCW01

      STMT='SSELECT FB.BILLS.HIST,':CLIENT.ID:' WITH 39 # "R"'
      STMT=STMT:' AND WITH VERSION = "0"'
*     STMT=STMT:' SAVING UNIQUE @ID'     ; * JMK01
      CRT @(0,10):STMT
      EXECUTE STMT PASSLIST RTNLIST BILLS.LIST CAPTURING OUTPUT
      BILLS.ITEMS = @SELECTED

      PER = 0
      IF BILLS.ITEMS=0 THEN RETURN
      COUNTER = 0
      TOTAL.REC = ''
      LOOP
         READNEXT BILL.ID FROM BILLS.LIST ELSE BILL.ID='DONE'
      UNTIL BILL.ID='DONE' DO
         COUNTER=COUNTER+1
         READ BILL.REC FROM F.BILLS.HIST,BILL.ID ELSE GO SKIP.BILL
         CRT @(0,17):CLIENT.ID:" ":CLIENT.NAME:" - Now selecting bills":@(-4)
         CALL PROG.BAR(22,COUNTER,BILLS.ITEMS,PER)
         CARRIER.ID = FIELD(BILL.ID,'*',0)
         CARRIER.ID = CARRIER.ID'R%5'
         MODE = BILL.REC<21>
         ACTUAL.AMT = BILL.REC<8>
         OVERCHARGE = BILL.REC<11>
         LOG.AMT = BILL.REC<12>
         WORK.ID = CARRIER.ID:'*':MODE
         IF INDEX(BILL.ID,'AD',1)>0 THEN
            AD = 1
         END ELSE
            AD = 0
         END
         IF INDEX(BILL.ID,'BD',1)>0 THEN
            BD = 1
         END ELSE
            BD = 0
         END

         READ WORK.REC FROM F.WORK,WORK.ID THEN
            WORK.REC<1> += 1
            WORK.REC<2> += ACTUAL.AMT
            WORK.REC<3> += OVERCHARGE
            WORK.REC<4> += LOG.AMT
            IF AD THEN
               WORK.REC<5> += 1
               WORK.REC<6> += ACTUAL.AMT
            END
            IF BD THEN
               WORK.REC<7> += 1
               WORK.REC<8> += ACTUAL.AMT
            END
         END ELSE
            WORK.REC=''
            WORK.REC<1> = 1
            WORK.REC<2> = ACTUAL.AMT
            WORK.REC<3> = OVERCHARGE
            WORK.REC<4> = LOG.AMT
            IF AD THEN
               WORK.REC<5> = 1
               WORK.REC<6> = ACTUAL.AMT
            END
            IF BD THEN
               WORK.REC<7> = 1
               WORK.REC<8> = ACTUAL.AMT
            END
         END
         TOTAL.REC<1> += 1
         TOTAL.REC<2> += ACTUAL.AMT
         TOTAL.REC<3> += OVERCHARGE
         TOTAL.REC<4> += LOG.AMT
         WRITE WORK.REC ON F.WORK,WORK.ID

SKIP.BILL:***
      REPEAT
      WRITE TOTAL.REC ON F.WORK,"TOTAL"

      RETURN

SETUP.COLUMN.HEADER:***
      HEADER.LINE = 'Carrier Profile for the following client: ':CLIENT:' as of ':DATE()'D2/':' for ':BEG.DATE'D2/':' through ':END.DATE'D2/':'.'
      HEADER.LINE<2,1>="Carrier #"
      HEADER.LINE<2,2>="Carrier"
      HEADER.LINE<2,3>="Mode #"
      HEADER.LINE<2,4>="Mode"
      HEADER.LINE<2,5>="# of Bills"
      HEADER.LINE<2,6>="% of Bills"
      HEADER.LINE<2,7>="Cumm % Bills"
      HEADER.LINE<2,8>="Amt Paid"
      HEADER.LINE<2,9>="Ovc Amt"
      HEADER.LINE<2,10>="% O/C"
      HEADER.LINE<2,11>="Log Amt"
      HEADER.LINE<2,12>="% Log"
      HEADER.LINE<2,13>="BD Amt"
      HEADER.LINE<2,14>="BD Bills"
      HEADER.LINE<2,15>="AD Amt"
      HEADER.LINE<2,16>="AD Bills"
      RETURN


BUILD.PROFILE:***
      PROFILE.REC=HEADER.LINE
      STMT = 'SSELECT FBWORK':CH.NUM
      STMT := ' WITH CARRIER # "TOTAL" BY MODE BY CARRIER'
      EXECUTE STMT PASSLIST CAPTURING OUTPUT
      NUM.CARRIERS = @SELECTED
      READ TOTAL.REC FROM F.WORK,"TOTAL" ELSE TOTAL.REC=''
      CUMM.PERC.BILLS = 0
      IF NUM.CARRIERS GT 0 ELSE
         RETURN
      END
      LOOP
         DONE = 0
         READNEXT WORK.ID ELSE DONE = 1
      UNTIL DONE = 1 DO
         CARRIER=FIELD(WORK.ID,'*',1)
         MODE = FIELD(WORK.ID,'*',2)
         READ WORK.REC FROM F.WORK,WORK.ID ELSE GO SKIP.WORK
         READV CARRIER.NAME FROM F.CARRIERS,CARRIER,1 ELSE CARRIER.NAME ='Unkown Carrier'
         READV MODE.DESC FROM F.TRANSPORT,MODE,1 ELSE MODE.DESC = 'Unknown Mode'
         NUM.BILLS = WORK.REC<1>
         ACTUAL.AMT = WORK.REC<2>
         OVERCHARGE = WORK.REC<3>
         LOG.AMT = WORK.REC<4>
         AD = WORK.REC<5>
         AD.AMT = WORK.REC<6>
         BD = WORK.REC<7>
         BD.AMT = WORK.REC<8>
         TOTAL.BILLS = TOTAL.REC<1>
         TOTAL.ACTUAL = TOTAL.REC<2>
         TOTAL.OVG = TOTAL.REC<3>
         TOTAL.LOG = TOTAL.REC<4>
         PERC.BILLS = NUM.BILLS/TOTAL.BILLS
         CUMM.PERC.BILLS += PERC.BILLS
         IF OVERCHARGE # 0 AND ACTUAL.AMT # 0 THEN
            PERC.OVG = OVERCHARGE/ACTUAL.AMT
         END ELSE
            PERC.OVG = 0
         END
         IF LOG.AMT # 0 AND ACTUAL.AMT # 0 THEN
            PERC.LOG = LOG.AMT/ACTUAL.AMT
         END ELSE
            PERC.LOG = 0
         END
         LINE = ''
         LINE<1,1> = CARRIER
         LINE<1,2> = CARRIER.NAME
         LINE<1,3> = MODE
         LINE<1,4> = MODE.DESC
         LINE<1,5> = NUM.BILLS
         LINE<1,6> = OCONV(PERC.BILLS*10000,'MR2')
         LINE<1,7> = OCONV(CUMM.PERC.BILLS*10000,'MR2')
         LINE<1,8> = OCONV(ACTUAL.AMT,'MR2,$')
         LINE<1,9> = OCONV(OVERCHARGE,'MR2,N$')
         LINE<1,10> = OCONV((PERC.OVG*10000),'MR2,N')
         LINE<1,11> = OCONV(LOG.AMT,'MR2,N$')
         LINE<1,12> = OCONV((PERC.LOG*10000),'MR2,N')
         LINE<1,14> = BD
         LINE<1,13> = OCONV(BD.AMT,'MR2,$')
         LINE<1,16> = AD
         LINE<1,15> = OCONV(AD.AMT,'MR2,$')
         PROFILE.REC<-1> = LINE

SKIP.WORK:***
      REPEAT
      TOTAL.LINE = 'TOTAL'
      TOTAL.LINE = ''
      TOTAL.LINE<1,5> = OCONV(TOTAL.BILLS,'MR0')
      TOTAL.LINE<1,8> = OCONV(TOTAL.ACTUAL,'MR2,N$')
      TOTAL.LINE<1,11> = OCONV(TOTAL.LOG,'MR2,N$')
      PROFILE.REC<-1> = TOTAL.LINE

      RETURN
