* PROGRAM FB.1.11.21
*
* Routine to maintain Calgon Blanket PO Number for the year - Used in AR.2.7 (AR Posting process)
*
* FREIGHT BILLING PACKAGE
*
* COPIED FROM FB.1.11.20 and modified
*
* February 2009  BY NCG PRATT
******************************************************************************
* Maintenance
******************************************************************************
* 123113 - JMK01 - Calgon Carbon's 2014 Purchase order number
******************************************************************************
*
* Initialize variables
*
$OPTIONS HEADER.EJECT
$OPTIONS EXEC.EQ.PERF
$OPTIONS INFO.ABORT
      ERRMSG=''
10:
*
      PROMPT''
      PROG.NAME='FB.1.11.21'
      PROG.DESC = "Calgon Yearly PO Number"
      PACK.NAME='FREIGHT BILLING'
*
      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'FB.1.11.21' ; UPL.VOUT = ''     ; * NPR_UPL 04/23/2010
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)       ; * NPR_UPL 04/23/2010
      CALL AFS.SCR.HEAD(CO.ID,"",'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      FILE.ID = "1000.1"
      CALL GET.USER(USER.NAME)
      BEGIN CASE
*
* Authorized users
*
         CASE USER.NAME = 'BRIAN'
         CASE USER.NAME = 'OWEN'
         CASE USER.NAME = 'KAREN'

         CASE USER.NAME = 'DAVID'
         CASE USER.NAME = 'MKERBOW'

         CASE USER.NAME = 'KRISTY'
         CASE USER.NAME = 'MYRA'
         CASE USER.NAME = 'SMATTHEWS'
*
* Restrict everyone else
*
         CASE 1
            SUBJ="Unauthorized Program Access by ":USER.NAME
            TEXT=''
            TEXT<1,-1>=USER.NAME:' ':DATE()'D2/':' ':OCONV(TIME(),'MTHS'):' ':PROG.NAME
            TEXT<1,-1>='User ':USER.NAME:' tried to access ':PROG.DESC
            TEXT<1,-1>="(This user's name was not included in the program to allow access)"
            MVIN=''
            MVIN<1>='SMatthews@afs.net'
            MVIN<2>='HelpDesk@afs.net'
            MVIN<3>='mkerbow@afs.net'
            MVIN<4>='AFS'
            MVIN<5>=SUBJ
            MVIN<6>=TEXT
            CALL SENDMAIL(MVIN,MVOUT)

            CALL FB.PRINT.CENT(1,80,12,'Restricted Access Application...')
            CALL FB.PRINT.CENT(1,80,14,'Access Denied! Contact the IS Help Desk for Access')
            CALL ELINE('')
            STOP
      END CASE

*
* Open files
*
      OPEN '','CLIENTS' TO F.CLIENTS ELSE CALL OPEN.ABORT('CLIENTS',PROG.NAME)
      OPEN '','FB.TABLES' TO F.TABLES ELSE CALL OPEN.ABORT('FB.TABLES',PROG.NAME)


*
      ID.TAB = "01602*PONO"
      READ PO.REC FROM F.TABLES, ID.TAB ELSE PO.REC = ""
*
      T.DTS = DCOUNT(PO.REC<1>,@VM)
*
      DISP.REC = ""

      FOR I = 1 TO T.DTS
         W.YEAR = PO.REC<1,I>
         DISP.REC<1,I> = W.YEAR
         DISP.REC<2,I> = PO.REC<2,I>
      NEXT I

*
      PAGE = 1
      SEL = 1

      CALL SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)

      DET.HEADER = "Line # ": SPACE(2) : "Year.. ":"  ":"Purchase Order #"

      GOSUB 9000                         ; * Display Screen
*
* Select and display available options
*
*
* First page of ??
*
      PAGE=1
*
* Choose line number
*
100:
*
      HELP="Line #. 'B'=Back. 'T'=Top, ''=Next pg. 'LP'=Last Pg. 'E'=End-&-Save. 'EX'=Exit."
      CALL GEN.IN(0,22,"Enter line number please. ###",'',Q,0,3,'','',0,-3,22,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            PAGE=PAGE+1
            IF PAGE GT LAST.PAGE THEN
               CALL ELINE('No more pages')
               GOTO 100
            END
            GOSUB 9000
         CASE QI='B'
            PAGE=PAGE-1
            IF PAGE=0 THEN PAGE=1
            GOSUB 9000
         CASE QI='T'
            PAGE=1
            GOSUB 9000
         CASE QI='LP'
            PAGE=LAST.PAGE
            GOSUB 9000
         CASE QI='EX' ! Q = "X"
            CRT @(-1)
            STOP
         CASE NUM(QI)
            SEL=QI
            IF SEL LT START ! SEL GT STOP+1 THEN
               CALL ELINE('Invalid selection.')
               GOTO 100
            END
            GOSUB 8000
         CASE QI='E'
            GOSUB 9500                   ; * Update
            GOTO 10
      END CASE
      GOTO 100
*
*------------------------------------------------------------------------
* INTERNAL SUBROUTINES
*------------------------------------------------------------------------
*
7100: * Enter Year
*
*
      OLD.YEAR = DISP.REC<1,SEL>

      HELP = "Enter Year ,''=Exit."
      CALL GEN.IN(10,ROW,"",'',Q,0,5,'','',0,10,ROW,0,QI,HELP,0,23)
      IF Q = "" THEN Q = OLD.YEAR
      Q = OCONV(Q,'MCU')
*
      BEGIN CASE
         CASE NUM(Q) AND LEN(Q) = 4
            YEAR = Q
         CASE 1
            CALL ELINE('Invalid Entry.')
            GOTO 7100
      END CASE
*
      YEAR = Q
*
      CRT @(10,ROW) : YEAR'R#4':'  '

      DISP.REC<1,SEL> = YEAR
*
      RETURN
*
*
7200: * Enter PONO Number
*
      OLD.PONO = DISP.REC<2,SEL>

      HELP = "Enter PONO ,''=Exit."
      CALL GEN.IN(16,ROW,"",'',Q,0,10,'','',0,16,ROW,0,QI,HELP,0,23)
      IF Q = "" THEN Q = OLD.PONO
      Q = OCONV(Q,'MCU')
*
      BEGIN CASE
         CASE NUM(Q)
            PONO = Q
         CASE Q = ""
            Q = OLD.PONO
         CASE 1
            CALL ELINE('Invalid Entry.')
            GOTO 7200
      END CASE
*
      PONO = Q
*
      CRT @(16,ROW) : PONO

      DISP.REC<2,SEL> = PONO
*
      RETURN
*
* Edit code
*
8000:
*

      ROW=4+REM(SEL,12)
      IF ROW = 4 THEN ROW=21
*
      GOSUB 7100

      GOSUB 7200
*
      RETURN
*
8010: HELP="Enter new ??. ''=Accept. 'D'=Delete. 'X'=Exit."
*

      NEW.VAR = ""

      CALL GEN.IN(10,ROW,NEW.VAR'R#5','',Q,0,5,'R',0,0,-5,ROW,0,QI,HELP,0,23)

*
      BEGIN CASE
         CASE QI = 'X' OR QI = 'EX'
            CRT @(10,ROW): "   " 'R#5'
            EXIT.FLAG = "Y"
            RETURN
         CASE QI=''

            RETURN
         CASE QI='D'
            DISP.REC=DELETE(DISP.REC,1,SEL)
            DISP.REC=DELETE(DISP.REC,2,SEL)
            GOSUB 9000
            RETURN
         CASE NUM(QI)
            IF QI = 1 THEN
               GOSUB 7100                ; * Enter Year
            END
            IF QI = 2 THEN
               GOSUB 7200                ; * Enter PO #
            END
         CASE 1
*            RETURN
            GOTO 8010
      END CASE

*
      DISP.REC<1,SEL> = "1??"
      DISP.REC<2,SEL> = "2??"
*
      GOSUB 9000
      RETURN
*
* Display array
*
9000:
*
      CALL SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)

      DET.HEADER = @(0,3): "LN #" "R#4"
      DET.HEADER := @(10,3) : "Year" : "  " :"Purchase Order #"
      CRT DET.HEADER

      START=(PAGE*13)-12
      IF START GT 999 THEN
         START=1
         PAGE=1
      END
      STOP = START+12
      MAX.LINES = DCOUNT(DISP.REC<1>,CHAR(253))
      IF STOP GT MAX.LINES THEN STOP = MAX.LINES
      ROW = 5
      FOR I=START TO STOP STEP 1
         ROW = 4 + REM(I,14)
         IF ROW = 4 THEN ROW=21
         D.YEAR = DISP.REC<1,I>
         D.PONO = DISP.REC<2,I>

         PRINT @(0,ROW) : I "R#3"
         PRINT @(10,ROW) : D.YEAR "R#4":"  ":D.PONO
*
      NEXT I

      PRINT @(0,ROW+1):I "R#3"
      LAST.PAGE = INT(MAX.LINES/16)+1
*
      RETURN
*
9500:* Update record
*
      OLD.PO.REC = PO.REC
      NEW.PO.REC = ""
*
      N.PONOS = DCOUNT(DISP.REC<1>,CHAR(253))
      FOR I.PONO = 1 TO N.PONOS
         IF DISP.REC<1,I.PONO>#'' AND DISP.REC<2,I.PONO>#'' THEN
            NEW.PO.REC<1,I.PONO> = DISP.REC<1,I.PONO>
            NEW.PO.REC<2,I.PONO> = DISP.REC<2,I.PONO>
         END
      NEXT I.PONO
*
      IF NEW.PO.REC NE "" THEN
         WRITE NEW.PO.REC ON F.TABLES , ID.TAB
         CALL ELINE("Update Complete")
      END ELSE
         DELETE F.TABLES , ID.TAB
         CALL ELINE("No PO,s remaining - Record Deleted")
      END
*
      RETURN
