      SUBROUTINE PCMILER(VIN,VOUT,F.PCIN,F.PCOUT,F.MILEAGE)
*
      PROG.NAME='PCMILER'
*
* FREIGHT BILLING PACKAGE
*
* AUTHOR:       OWEN HOLMAN
* DATE:        FEBRUARY 21, 1996
* DESCRIPTION: THIS PROGRAM WILL SUBMIT A TEXT FILE TO PCMILER V9.00
*              TO DETERMINE DISTANCES BETWEEN ZIP CODES
*
* THIS PROGRAM IS A PROPRIETARY PRODUCT OF AUTOMATED FREIGHT SYSTEMS
* AND MAY NOT BE USED, COPIED OR MODIFIED WITHOUT THE EXPRESS
* WRITTEN CONSENT OF SAME.
*
*********************************************************************
*
*    VIN<1>   SEND=Submit job, READ=Get Results, BOTH=Send & Get
      MODE=VIN<1>
      CH.NUM=VIN<2>
      NO.PCMILER.ERRORS=VIN<7>
*     USER=OCONV(@LOGNAME,'MCU')
      CALL GET.USER(USER)
      IF MODE='READ' THEN GO 300
      ZIP.ARRAY=VIN<3>
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'46601','46600')
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'46625','46600')
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'30040','30130')
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'30011','30203')  ; * Per Kathy H 6/10/99
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'33762','34630')  ; * Per Kathy H 09/15/00
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'30168','30165')  ; * Per Wayne L 8/4/99
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'34104','33939')  ; * Per Darlene 10-27-00
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'34108','33939')  ; * Per LWayne 01-18-01
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'90227','90224')  ; * Per LWayne 01-18-01
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'60804','60805')
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'30288','30027')
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'92614','92710')  ; * Per Michelle May-Law 07-18-01
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'92616','92710')  ; * Per Michelle May-Law 07-18-01
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'34113','34117')  ; * Per Michelle May-Law 07-18-01
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'92606','92614')  ; * Per Jennifer Lockard 08/23/01 for Rexel Con Way
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'92380','92585')  ; * Per Jennifer Lockard 09/23/01 for Amerimax Con Way
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'75229','75671')  ; * Per Jennifer Lockard 09/27/01 for Republic
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'75672','75670')  ; * Per Jennifer Lockard 10/22/01
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'02492','02192')  ; * Per Jennifer Lockard 12/17/01
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'21075','21076')  ; * Per Chad Morgan - Alcon 3/19/02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'40218','40241')  ; * Per Chad Morgan 3/19/02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'71854','71853')  ; * Per Chad Morgan 3/19/02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'30096','30136')  ; * Per Kathy Hollen 3/19/02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'42419','42420')  ; * Per Wayne Lenart 3/19/02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'60712','60645')  ; * Per Wayne Lenart 3/19/02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'26508','26507')  ; * Per Wayne Lenart     3/19/02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'57703','57701')  ; * Per Wayne Lenart     3/21/02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'60133','60103')  ; * Per Kathy Hollen     3/21/02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'07069','07070')  ; * Per Wayne Lenart     3/21/02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'02459','02411')  ; * Per Wayne Lenart     3/21/02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'02446','02411')  ; * Per Wayne Lenart     3/21/02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'92880','91718')  ; * Per Kathy Hollen     3/22/02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'02301','02322')  ; * Per Wayne Lenart     3/22/02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'76710','76711')  ; * Per Sara Brennan     3/22/02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'74804','74802')  ; * Per Sara Brennan     3/22/02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'30045','30001')  ; * Per Wayne Lenart     3/25/02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'30013','30001')  ; * Per Wayne Lenart     3/25/02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'20171','22070')  ; * Per Kathy Hollen     3/25/02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'30004','30001')  ; * Per Wayne Lenart     3/26/02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'92821','92825')  ; * Per Wayne Lenart     3/28/02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'92618','92619')  ; * Per Wayne Lenart     4/4/02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'07677','07670')  ; * Per Wayne Lenart     4/11/02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'75077','75078')  ; * Per Darlene Kruger   4-16-02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'92882','91718')  ; * Per Darlene Kruger   4-17-02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'99401','99350')  ; * Per Jen Lockard       4/24/02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'92604','92614')  ; * Per Steve Smith     5/23/02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'60467','60462')  ; * Per Steve Smith     5-24-02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'75109','75110')  ; * Per Client          5-29-02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'17050','17055')  ; * Per Kathy Hollen    5-30-02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'92879','91718')  ; * Per Kathy Hollen    6-14-02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'39443','39440')  ; * Per Darlene Kruger  6-26-02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'02466','02411')  ; * Per Chad Morgan     7-16-02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'22315','22313')  ; * Per Cynthia Procell  7-16-02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'30157','30150')  ; * Per Cynthia Procell  7-19-02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'30043','30042')  ; * Per Darlene Kruger     10-22-02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'90755','90804')  ; * Per Kathy Hollen     8-23-02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'89052','89049')  ; * Per Chad Morgan     8-27-02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'95331','95330')  ; * Per Cynthia Procell    9-26-02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'29708','29709')  ; * Per Chris Mendenhall      11-7-02
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'94534','94535')  ; * Per Craig Mann
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'75964','75961')  ; * Per Wayne Pardue    1-20-03
      ZIP.ARRAY=CHANGE(ZIP.ARRAY,'02494','02192')  ; * Per Donna Dupont    1-24-03
      PROMPT ''
      LOCATE '99999' IN ZIP.ARRAY<1> SETTING POS THEN
         VOUT=0
         VOUT<2>='ERROR'
         GO 9999
      END
      SKIP.FILE.LOOKUP=VIN<4>            ; * 1 TO Skip File Lookup and go to PC
      SOURCE.PROG=VIN<5>
      CLIENT.STR=VIN<6>                  ; * Text String to Put on Taskman Screen
      VOUT=''
      IF SKIP.FILE.LOOKUP#1 THEN
         MILEAGE=0
         TIMES=DCOUNT(ZIP.ARRAY<1>,@VM)-1
         FOR X = 1 TO TIMES
            ZIP1=ZIP.ARRAY<1,X>
            ZIP2=ZIP.ARRAY<1,X+1>
            IF ZIP1[1,3] GE 962 AND ZIP1[1,3] LE 968 THEN
               VOUT=0
               VOUT<2>='ERROR - HAWAII ZIP'
               GO 9999
            END
            IF NOT(NUM(ZIP1)) THEN
               VOUT=0
               VOUT<2>='ERROR - INTERNATIONAL'
               GO 9999
            END
            IF ZIP2[1,3] GE 962 AND ZIP2[1,3] LE 968 THEN
               VOUT=0
               VOUT<2>='ERROR - HAWAII ZIP'
               GO 9999
            END
            IF NOT(NUM(ZIP2)) THEN
               VOUT=0
               VOUT<2>='ERROR - INTERNATIONAL'
               GO 9999
            END
            CANADIAN=0
            IF ZIP1 MATCHES '1A1N1A1N1A1N' THEN CANADIAN=1
            IF ZIP2 MATCHES '1A1N1A1N1A1N' THEN CANADIAN=1
            TEMP.ZIP.ARRAY=ZIP1:@VM:ZIP2
            IF TEMP.ZIP.ARRAY<1,2> < TEMP.ZIP.ARRAY<1,1> THEN
               TEMP.ZIP.ARRAY=TEMP.ZIP.ARRAY<1,2>:@VM:TEMP.ZIP.ARRAY<1,1>
            END
            MILE.ID=TEMP.ZIP.ARRAY<1,1>:"*":TEMP.ZIP.ARRAY<1,2>
            READV MILES FROM F.MILEAGE,MILE.ID,1 THEN
               MILEAGE+=MILES
            END ELSE
               IF NOT(CANADIAN) THEN GO SKIP.FILE.LOOKUP
150:           HELP = 'Enter the Mileage from ':ZIP1:' to ':ZIP2
               CALL GEN.IN(0,22,'Mileage:   ','',Q,0,4,'','',2,-2,22,1,QI,HELP,0,23)
               QI = OCONV(QI,'MCU')
               IF NOT(NUM(QI)) THEN
                  CALL ELINE("ERROR! You must enter a mileage or 0 if you don't know the miles")
                  GO 150
               END
               IF QI < 0 THEN
                  CALL ELINE("ERROR! The mileage must be a positive number!")
                  GO 150
               END
               MILES=QI
               MILEAGE+=MILES
               MILE.REC=MILES
               MILE.REC<2>=DATE()
               MILE.REC<3>=USER
               IF MILES > 0 THEN
                  WRITE MILE.REC ON F.MILEAGE,MILE.ID
               END
            END
         NEXT X
         VOUT=''
         VOUT=MILEAGE
         VOUT<2>='FOUNDINFILE'
         GO 9999
      END
SKIP.FILE.LOOKUP:***
*
*
$INCLUDE PROG.ADMIN INC_OPTIONS
*
* Initialize variables
*
      PROMPT ''
* Build PCMILER Record to submit
      WAD='FORM WAD':CHAR(13)
      CHUNK.ID='DESC'
      CHUNK.DATA='USER: ':USER
      IF CLIENT.STR#'' THEN CHUNK.DATA:='    CLIENT: ':CLIENT.STR
      IF SOURCE.PROG#'' THEN
         TEMP=SOURCE.PROG:' -> ':PROG.NAME
      END ELSE
         TEMP=PROG.NAME
      END
      CHUNK.DATA<-1>='HOSTPROGRAM: ':TEMP
      CHUNK.DATA<-1>='SUBMIT TIME: ':OCONV(TIME(),'MTHS')
      CHUNK.DATA<-1>='ZIPS: ':CHANGE(ZIP.ARRAY,@VM,' ')[1,70]
      GOSUB BUILD.CHUNK
      CHUNK.DATA='' ; CHUNK.ID='NOCP' ; GOSUB BUILD.CHUNK
      CHUNK.DATA='EXECUTE move >NULL /Y temp\':CH.NUM:'p.tmp temp\DATA.IN'
*    CHUNK.DATA='EXECUTE move /Y temp\':CH.NUM:'p.tmp temp\DATA.IN'
      CHUNK.ID = 'HEAD' ; GOSUB BUILD.CHUNK
      CHUNK.DATA=CHANGE(ZIP.ARRAY,@VM,@AM)
      CHUNK.ID = 'BODY' ; GOSUB BUILD.CHUNK
      IF USER='OWEN' AND 0 THEN
         CALL ELINE("Practical Miles for User OWEN")
         CHUNK.DATA='EXECUTE \pcmiler.v10\pcmbatch P temp\data.in -n -z 1'
      END ELSE
         CHUNK.DATA='EXECUTE \pcmiler.v10\pcmbatch S temp\data.in -n -z 1'
      END
*    CHUNK.DATA='EXECUTE \pcmiler.v10\pcmbatch S temp\data.in -n 1'
      CHUNK.ID='DOSC' ; GOSUB BUILD.CHUNK
      CHUNK.DATA='EXECUTE move >NULL /Y temp\data.out T:\out\':CH.NUM:'p.dat'
*    CHUNK.DATA='EXECUTE move /Y temp\data.out T:\out\':CH.NUM:'p.dat'
      CHUNK.ID='DOSC' ; GOSUB BUILD.CHUNK
      GOSUB SEND.WAD
      IF MODE='SEND' THEN GO 9999
300:*** Jump to Here for MODE = "READ"
      GOSUB READ.WAD
      MILEAGE.DATA=CHANGE(WAD.OUT,CHAR(13),'')
      IF MILEAGE.DATA[1,5]='ERROR' THEN
         ERRLINE=MILEAGE.DATA
         GO 9995
      END
      MILEAGE=0
      TIMES=DCOUNT(MILEAGE.DATA,@AM)
      FOR X = 1 TO TIMES
         MILES=TRIM(MILEAGE.DATA<X>[50,10])
         ZIP.ARRAY=MILEAGE.DATA<X>[1,5]:@VM:MILEAGE.DATA<X>[23,5]
         IF ZIP.ARRAY<1,2> < ZIP.ARRAY<1,1> THEN
            ZIP.ARRAY=ZIP.ARRAY<1,2>:@VM:ZIP.ARRAY<1,1>
         END
         MILE.ID=ZIP.ARRAY<1,1>:"*":ZIP.ARRAY<1,2>
         MILE.REC=MILES
         MILE.REC<2>=DATE()
*DF       WRITE MILE.REC ON F.MILEAGE,MILE.ID
         MILEAGE+=MILES
      NEXT X
      VOUT=''
      VOUT<1>=MILEAGE
      GO 9999

SEND.WAD:***
      READ.WAD.FLAG=1
      READ TEST FROM F.PCIN,'taskman.dwn' THEN
         CALL ELINE("Task Manager is Down!!!  Notify Programmer")
      END

      TRY.CNT = 0
DEL.FIN:
      TASK.ATTEMPT='SEND.WAD: DELETE F.PCIN,':CH.NUM:'p.fin'
*IF USER='OWEN' THEN CALL ELINE('PRESS BREAK')
      TEST.ID=CH.NUM:'p.fin'
      DELETE F.PCIN,TEST.ID
*    DELETE F.PCIN,TEST.ID ON ERROR
*       RQM
*       TRY.CNT+=1
*       IF TRY.CNT > 5 THEN GOSUB CALL.JIM.OR.OWEN
*       IF TRY.CNT > 0 THEN GOTO DEL.FIN
*    END

      TRY.CNT = 0
DEL.DAT:
      TASK.ATTEMPT='SEND.WAD: DELETE F.PCOUT,':CH.NUM:'p.dat'
      DELETE F.PCOUT,CH.NUM:'p.dat'
*    DELETE F.PCOUT,CH.NUM:'p.dat' ON ERROR
*       RQM
*       TRY.CNT+=1
*       IF TRY.CNT > 5 THEN GOSUB CALL.JIM.OR.OWEN
*       IF TRY.CNT > 0 THEN GOTO DEL.DAT
*    END

      TRY.CNT = 0
WRITE.WAD:
      TASK.ATTEMPT='SEND.WAD: WRITE WAD ON F.PCIN,':CH.NUM:'p.wad'
      WRITE WAD ON F.PCIN,CH.NUM:'p.wad'
*    WRITE WAD ON F.PCIN,CH.NUM:'p.wad' ON ERROR
*       RQM
*       TRY.CNT+=1
*       IF TRY.CNT > 5 THEN GOSUB CALL.JIM.OR.OWEN
*       IF TRY.CNT > 0 THEN GOTO WRITE.WAD
*    END

      TRY.CNT = 0
WRITE.FLG:
      TASK.ATTEMPT='SEND.WAD: WRITE 1 ON F.PCIN,':CH.NUM:'p.flg'
      WRITE 1 ON F.PCIN,CH.NUM:'p.flg'
*    WRITE 1 ON F.PCIN,CH.NUM:'p.flg' ON ERROR
*       RQM
*       TRY.CNT+=1
*       IF TRY.CNT > 5 THEN GOSUB CALL.JIM.OR.OWEN
*       IF TRY.CNT > 0 THEN GOTO WRITE.FLG
*    END

*     DELETE F.PCIN,CH.NUM:'p.fin'
*     DELETE F.PCOUT,CH.NUM:'p.dat'
*     WRITE WAD ON F.PCIN,CH.NUM:'p.wad'
*     WRITE 1 ON F.PCIN,CH.NUM:'p.flg'
      RETURN

READ.WAD:***
      DONE=0
      COUNT=0
      LOOP UNTIL DONE=1 DO
         COUNT=COUNT+1
         READ NUL FROM F.PCIN,CH.NUM:'p.fin' THEN
            DONE=1
            REREAD.WAD=0
REREAD.WAD:***
            READ WAD.OUT FROM F.PCOUT,CH.NUM:'p.dat' ELSE
               RQM
               REREAD.WAD+=1
               IF REREAD.WAD<25 THEN GO REREAD.WAD
               CALL ELINE("Taskman Error.. FIN found but no DAT .. Call Programming")
               WAD.OUT=''
            END

            TRY.CNT = 0
DEL.FIN2:
            TASK.ATTEMPT='READ.WAD: DELETE F.PCIN,':CH.NUM:'p.fin'
            DELETE F.PCIN,CH.NUM:'p.fin'
*      DELETE F.PCIN,CH.NUM:'p.fin' ON ERROR
*        RQM
*        TRY.CNT+=1
*        IF TRY.CNT > 5 THEN GOSUB CALL.JIM.OR.OWEN
*        IF TRY.CNT > 0 THEN GOTO DEL.FIN2
*      END

            TRY.CNT = 0
DEL.DAT2:
            TASK.ATTEMPT='READ.WAD: DELETE F.PCOUT,':CH.NUM:'p.dat'
            DELETE F.PCOUT,CH.NUM:'p.dat'
*      DELETE F.PCOUT,CH.NUM:'p.dat' ON ERROR
*        RQM
*        TRY.CNT+=1
*        IF TRY.CNT > 5 THEN GOSUB CALL.JIM.OR.OWEN
*        IF TRY.CNT > 0 THEN GOTO DEL.DAT2
*      END

*       DELETE F.PCIN,CH.NUM:'p.fin'
*       DELETE F.PCOUT,CH.NUM:'p.dat'
            READ.WAD.FLAG=0
            RETURN
         END
         READ TEST FROM F.PCIN,'taskman.dwn' THEN
            CALL ELINE("Task Manager is Down!!!  Notify Programmer, Press <Enter> to retry")
         END
         RQM
      REPEAT
BUILD.CHUNK:***
      CHUNK.DATA=CHANGE(CHUNK.DATA:@AM,@AM,CHAR(13):@AM)
      WAD<-1>=CHUNK.ID'L#4':(OCONV((LEN(CHUNK.DATA)),'MCD'))'R%8':CHAR(13)
      WAD<-1>=CHUNK.DATA
      WAD = CHANGE(WAD,CHAR(13),'')      ; * JIMR - ADDED FOR UNIVERSE VERSION 9.XX
      RETURN


9995:*** Error - Problem with data
      IF NO.PCMILER.ERRORS ELSE
IF USER="OWEN" THEN
CRT ERRLINE
END ELSE
         CALL ELINE(ERRLINE)
END
      END
      VOUT=''
      VOUT<1>=0                          ; * Send 0 Miles if Error
      VOUT<2>='ERROR'
9999:*** Exit Program
      RETURN



*-------------------------------------------------------------------------
* CALL.JIM.OR.OWEN
*-------------------------------------------------------------------------
CALL.JIM.OR.OWEN:

      *
      * Clear KB Buffer
      *
      LOOP
         INPUT INPUTBUFFER,-1
      UNTIL INPUTBUFFER=0
         INPUT JUNK,1:
      REPEAT

GET.PASS:
      CRT @(0,22):'YOU MUST CALL JIM OR OWEN, NOW!':CHAR(7):@(-3)
      CRT @(0,23):CHAR(7):CHAR(7):CHAR(7):@(-3):
      INPUT PASSWORD
      IF PASSWORD = 'AFS' OR PASSWORD='MKERBOW' OR PASSWORD='OWEN' THEN
         IF PASSWORD = 'AFS' THEN
            TRY.CNT = -99
            GOSUB SEND.JIM.OWEN.MAIL
         END
      END ELSE
         GOTO GET.PASS
      END

      CRT TASK.ATTEMPT:'  STATUS()=':STATUS():@(-3)

      RETURN


*-------------------------------------------------------------------------
* SEND.JIM.OWEN.MAIL
*-------------------------------------------------------------------------
SEND.JIM.OWEN.MAIL:

      SUBJECT = ''
      DATE.STR = OCONV(DATE(),"D2/")
      TIME.STR = OCONV(TIME(),"MR2")

      MSG = STR('-',80)
      MSG<1,-1> ='Automated Email:  PCMILER.V10 Blew Chunks!'
      MSG<1,-1> = STR('-',80)
      MSG<1,-1> = '':CHAR(10)
      MSG<1,-1> = '':CHAR(10)
      MSG<1,-1> = '':CHAR(10)
      MSG<1,-1> = 'SUBROUTINE PCMILER.V10() croked trying to':CHAR(10)
      MSG<1,-1> = TASK.ATTEMPT:CHAR(10)
      MSG<1,-1> = ' ON DATE:':DATE.STR:' TIME: ':TIME.STR:CHAR(10)
      MSG<1,-1> = '':CHAR(10)
      MSG<1,-1> = '':CHAR(10)

      TO.EMAIL=''
      TO.EMAIL<1,1> = "MKERBOW@AFSLOGISTICS.COM"
      TO.EMAIL<1,2> = "OWEN@AFSLOGISTICS.COM"

      VIN=''
      VIN<1>= TO.EMAIL                   ; * TO Address(s)
      VIN<2>= ''                         ; * CC Address(s)
      VIN<3>= ''                         ; * BCC Address(s)
      VIN<4>= 'AFS'                      ; * FROM Address (AFS@AFSLOGISTICS.COM)
      VIN<5>= 'PCMILER.V10/Taskman puked'          ; * Subject
      VIN<6>= MSG                        ; * Message
      VOUT=''
      CALL SENDMAIL(VIN,VOUT)

   END






