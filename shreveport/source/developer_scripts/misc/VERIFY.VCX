* FREIGHT BILLING PACKAGE
*---- PROGRAM: VERIFY.VCX
* AUTHOR: JAY WEBERT
* DATE: MARCH 14, 2007
* DESCRIPTION: VERIFY THE CROSS REFERENCES BETWEEN VEND.CUST AND VEND.CUST.XREF
*
* THIS PROGRAM IS A PROPRIETARY PRODUCT OF AUTOMATED FREIGHT SYSTEMS
* AND MAY NOT BE USED, COPIED OR MODIFIED WITHOUT THE EXPRESS
* WRITTEN CONSENT OF SAME.
*-----------------------------------------------------------------------
      CLIENT.ID = ''
      PROG.NAME = 'VERIFY.VCX'
      OPEN 'CLIENTS' TO F.CLIENTS ELSE
        CALL OPEN.ABORT('CLIENTS',PROG.NAME)
      END
      ******************************
      *** CHECK FOR SPECIFIED CLIENT
      ******************************
      CLIENT.ID = FIELD(@SENTENCE,' ',2)
      IF CLIENT.ID NE '' THEN
        READ TEST FROM F.CLIENTS, CLIENT.ID ELSE
          CRT CLIENT.ID:' is not a valid client number; program stopped.'
          STOP
        END
      END
      ********************
      *** SELECT CLIENT ID'S
      ********************
      IF CLIENT.ID = '' THEN
        STMT = 'SELECT VOC "VEND.CUST" *A7'
        EXECUTE STMT RTNLIST CAPTURING MSG
        IF @SELECTED < 1 THEN
          CRT 'NO CLIENTS SELECTED.'
          STOP
        END
        STMT = 'SELECT CLIENTS'
        EXECUTE STMT PASSLIST RTNLIST CLIENT.LIST CAPTURING MSG
        IF @SELECTED < 1 THEN
          CRT 'NO CLIENT RECORDS SELECTED.'
          STOP
        END
      END ELSE
        STMT = 'SELECT CLIENTS ':CLIENT.ID
        EXECUTE STMT RTNLIST CLIENT.LIST CAPTURING MSG
        IF @SELECTED < 1 THEN
          CRT 'NO CLIENT RECORDS SELECTED.'
          STOP
        END
      END
      ********************
      *** LOOP THROUGH ALL CLIENTS
      ********************
      DONE = 0
      LOOP UNTIL DONE DO
        READNEXT CLIENT.ID FROM CLIENT.LIST THEN
          CRT 'Now processing client ':CLIENT.ID:'...'
          STMT = 'SELECT VEND.CUST,':CLIENT.ID
          EXECUTE STMT RTNLIST VC.LIST CAPTURING MSG
          IF @SELECTED < 1 THEN GOTO NEXT.CLIENT
          REC.CNT = @SELECTED
          CNT = 0
          OPEN 'VEND.CUST,':CLIENT.ID TO F.VC ELSE
            CRT 'COULD NOT OPEN VEND.CUST,':CLIENT.ID
            GOTO NEXT.CLIENT
          END
          OPEN 'VEND.CUST.XREF,':CLIENT.ID TO F.VC.XREF ELSE
            CRT 'COULD NOT OPEN VEND.CUST.XREF,':CLIENT.ID
            GOTO NEXT.CLIENT
          END
          ********************
          *** LOOP THROUGH VEND.CUST.XREF RECORDS
          ********************
          DONE1 = 0
          LOOP UNTIL DONE1 DO
            READNEXT VC.ID FROM VC.LIST THEN
              CNT += 1
              IF MOD(CNT,1000) = 0 THEN CRT @(33,22):CNT:' of ':REC.CNT:
              IF CNT = REC.CNT THEN CRT @(33,22):CNT:' of ':REC.CNT
              READ VC.REC FROM F.VC, VC.ID THEN
                ZIP = VC.REC<7>
                DESC = VC.REC<1>
                DESC = TRIM(OCONV(DESC,'MCU'))
                GOSUB BUILD.XREF.ID
                XREF.ID = CURR.XREF.ID
                *** Primary Test
                READ XREF.REC FROM F.VC.XREF, XREF.ID THEN NULL
                IF XREF.REC<1> = VC.ID THEN GOTO NEXT.VC
                *** Secondary Test: because VC.ID does not match XREF.REC<1>
                *** If the XREF.REC<1> VC record builds same XREF.ID as primary VEND.CUST, then OK
                IF ZIP # '99999' THEN
                  VC.ID2 = XREF.REC<1>
                  READ VC.REC2 FROM F.VC, VC.ID2 THEN
                    ZIP = VC.REC2<7>
                    DESC = VC.REC2<1>
                    DESC = TRIM(OCONV(DESC,'MCU'))
                    GOSUB BUILD.XREF.ID
                    IF CURR.XREF.ID = XREF.ID THEN GOTO NEXT.VC
                    CRT 'VEND.CUST,':CLIENT.ID:' RECORD ':VC.ID:' NOT RELATED TO VEND.CUST.XREF! #1'
                    GOTO NEXT.VC
                  END ELSE
                    CRT 'VEND.CUST,':CLIENT.ID:' RECORD ':VC.ID:' NOT RELATED TO VEND.CUST.XREF! #2'
                    GOTO NEXT.VC
                  END
                END
                *** Third test: because primary zip code is 99999
                *** Sometimes 9999 is omited form the XREF.ID. So, try adding the zip in the XREF.ID
                ZIP = VC.REC<7>
                DESC = VC.REC<1>
                DESC = TRIM(OCONV(DESC,'MCU'))
                XREF.ID = DESC:'*':ZIP
                READ XREF.REC FROM F.VC.XREF, XREF.ID THEN NULL
                IF XREF.REC<1> = VC.ID THEN GOTO NEXT.VC
                *** Fourth Test: because VC.ID does not match XREF.REC<1>
                *** If the XREF.REC<1> VC record builds same XREF.ID as primary VEND.CUST, then OK
                VC.ID2 = XREF.REC<1>
                READ VC.REC2 FROM F.VC, VC.ID2 THEN
                  ZIP = VC.REC2<7>
                  DESC = VC.REC2<1>
                  DESC = TRIM(OCONV(DESC,'MCU'))
                  CURR.XREF.ID = DESC:'*':ZIP
                  IF CURR.XREF.ID = XREF.ID THEN 
                    GOTO NEXT.VC
                  END ELSE
                    CRT 'VEND.CUST,':CLIENT.ID:' RECORD ':VC.ID:' NOT RELATED TO VEND.CUST.XREF! #3'
                  END
                END ELSE
                  CRT 'VEND.CUST,':CLIENT.ID:' RECORD ':VC.ID:' NOT RELATED TO VEND.CUST.XREF! #4'
                END
              END
            END ELSE
              DONE1 = 1
            END
NEXT.VC:
          REPEAT
        END ELSE
          DONE = 1
        END
NEXT.CLIENT:
      REPEAT
      STOP


BUILD.XREF.ID:
      IF ZIP = '99999' THEN
        CURR.XREF.ID = DESC
      END ELSE
        CURR.XREF.ID = DESC:'*':ZIP
      END
      RETURN

