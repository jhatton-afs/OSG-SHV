***********************************************************************
* Program name : OCR.CLEAR.IMG.KEY.DT
* Author       : Nicole Hennick
* Date written : 04-19-2022
* Library      : FBBP
* COPYRIGHT (C) 2019 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED.
*
* Clear the key date of a specific image
*
* Last updated by afs (AFSLOGISTICS\nmeddaugh) at 06:59:06 on 04/19/2022.
*
* Start modification history
* 04/19/22 : NKH00 : ACCU-1408 New program
* End modification history
*
************************************************************************
*
* Initialize variables






****** THIS PROGRAM WAS BEING DEVELOPED TO REMOVE A KEYER AND KEYED DATE
****** THAT IS NOT ALLOWED ON THE IMAGE DATABASE SIDE 






















*
$INCLUDE PROG.ADMIN INC_OPTIONS
$INCLUDE UNIVERSE.INCLUDE UDO.H
      PROMPT ''
      PROG.NAME='OCR.FIND.IMAGE'
      CALL GET.USER.NEW(USER,CH.NUM)
      KEYER = USER:'-DEL'
      CALL GET.SERVER.INFO(SVR.VIN,SVR.VOUT)
      SERVER.NAME=SVR.VOUT<1>
      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'OCR.FIND.IMAGE' ; UPL.VOUT = ''
      ***    CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)
      OPEN 'CONTROL' TO FILE.CNTL ELSE
         CALL ELINE('UNABLE TO OPEN CONTROL FILE')
         RETURN
      END

      EOJ=0
      LOOP
      UNTIL EOJ DO
         CRT @(-1)
         CRT @(5,2):"OCR CLIENT IMAGE SEARCH"
         CRT@(10,10):"Enter Image ": ; INPUT IMAGE.NUM
         IMAGE.NUM = OCONV(IMAGE.NUM,"MCU")
         IF IMAGE.NUM[1,1] = "E" THEN
            EOJ=1
            CONTINUE
         END
         CRT@(0,23):"Correct ? ": ; INPUT RESPONSE
         IF RESPONSE = "Y" OR RESPONSE = "y" THEN
*           IF SERVER.NAME = 'AFS' THEN
*              URL = 'https://imagingws.afs.net/images/list?&excludeImported=true&=13000&scanDateFrom=':B.DATE:'&scanDateTo=':E.DATE
*           END ELSE
            URL = 'https://imagingws.qa.afs.net/images/list?&imageKey=':IMAGE.NUM
*           END
            GOSUB SEND.REST.REQUEST
            GOSUB PARSE.RESULTS
         END
         STATUS = 0
         RESP.CNT=1
         RESP = ''
         VOUT=''
         CRT@(0,23):"RETURN TO CONTINUE ": ; INPUT RESPONSE
      REPEAT
      STATUS = 0
      RESP.CNT=1
      RESP = ''
      VOUT=''

9999:* THE END

      RETURN

      STOP

***********************************************************************
SEND.REST.REQUEST:
***********************************************************************
      METHOD="GET"
      STAT = SETHTTPDEFAULT("VERSION", "1.1")
      STAT = CREATESECURITYCONTEXT(CTX, "TLSv1.2")
      STAT = CREATESECUREREQUEST(URL, METHOD, RESTGET,CTX)
      STAT = SETREQUESTHEADER(RESTGET, "Content-Type", "application/json;charset=utf-8")
      STAT = SUBMITREQUEST(RESTGET, 30000, "", HEADER, RESTDATA, HTTPSTATUS)

      RETURN

************************************************************************
PARSE.RESULTS:
************************************************************************
      DEBUG
      UDOHANDLE = ""
      RESP = ''
      RESP.CNT = 1
      STATUS =UDORead(RESTDATA, UDOFORMAT_JSON, UDOHANDLE )
      ST = UDOArrayGetSize(UDOHANDLE, ITEM_SIZE) ; IF ST NE UDO_SUCCESS THEN
         ITEM_SIZE = 0
      END
      FOR I = 1 TO ITEM_SIZE
         TEMP.ARRAY = ''
         ST = UDOArrayGetItem(UDOHANDLE, I, result_udo, UDOTYPE) ; IF ST NE UDO_SUCCESS THEN GOSUB ERR.HANDLER
         ST = UDOGetProperty(result_udo, "imageKey", IMAGE.NO, UDOTYPE) ; IF ST NE UDO_SUCCESS THEN GOSUB ERR.HANDLER
         IF UDOTYPE = UDO_NULL THEN IMAGE.NO = ""
         ST = UDOGetProperty(result_udo, "imagePath", IMAGE.PATH, UDOTYPE) ; IF ST NE UDO_SUCCESS THEN GOSUB ERR.HANDLER
         
KEYER = 'TEST'
IMPORT.DATE = ''
*         IF SERVER.NAME = 'AFS' THEN
*            URL = 'https://imagingws.afs.net/images/update?imageKey=':IMAGE.NO:"&keyerName=":KEYER
*         END ELSE
*            URL = 'https://imagingws.qa.afs.net/images/update?imageKey=':IMAGE.NO:"&keyerName=":KEYER:"&importedIntoPick=null"
         URL = 'http://imagingws.qa.afs.net/images/update?imageKey=':IMAGE.NO:"&keyerName=":KEYER  ; * NKH01
*         END
DEBUG

         NEXT I

         IF RESP # "" THEN
            VOUT = RESP
         END

         RETURN

****************************************************
ERR.HANDLER:
*****************************************************
         ERRCODE = "" ; ERRMSG = ""
         S = UDOGetLastError(ERRCODE, ERRMSG)
         ERROR = "UDO ERROR: (":ERRCODE:") ":ERRMSG
         VOUT<1> =ERROR

         RETURN


      END
