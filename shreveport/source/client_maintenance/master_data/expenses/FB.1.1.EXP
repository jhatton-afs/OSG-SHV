*******************************************************
* Program name : FB.1.1.EXP
* Author       : TOM ZILHAVER
* Date written : DECEMBER 1, 1990
* Library      : EDIBP
* COPYRIGHT (C) 2016 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED.
*
* SUBROUTINE TO CREATE OR MODIFY CLIENT EXPENSE CODES
*
* Last updated by afs (AFSLOGISTICS\nmeddaugh) at 09:22:51 on 03/25/2019.
*
* Start modification history
* 10/28/96 : Cody Henderson : Formatting Mods
* 07/07/17 : NKH01 - SysAid 31060 Add prompt to view or change
* 09/06/17 : DRF01 - Ticket 6100 allow for 45 digit expense codes for 05687
* 03/25/19 : NKH02 : ACCU-316 Modified CREATE-FILE file sizes
* End modification history
*
*******************************************************
$OPTIONS EXEC.EQ.PERF
$OPTIONS INFO.ABORT
*
*
      SUBROUTINE FB.1.1.EXP(CLIENT.ID,CLIENT.REC,DISPLAY.MODE)
$OPTIONS HEADER.EJECT
ERRMSG=''

*
*
****************************************************** 
******************************************************
*
* INITIALIZE VARIABLES
*
      PROMPT''
      ADD.FLAG=0
      PROG.NAME='FB.1.1.EXP'
      PROG.DESC='CLIENT MAINTENANCE'
      PACK.NAME='FREIGHT BILLING'
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
       UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.1.1.EXP' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
       CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
*      USER.NAME=OCONV(SYSTEM(19),'MCU')
      CALL GET.USER(USER.NAME)

*
* OPEN FILES
*
      OPEN '','EXPENSE.CODES,':CLIENT.ID TO F.EXP.CODES ELSE
        EXECUTE 'CREATE-FILE DATA EXPENSE.CODES,':CLIENT.ID:' 53,1' PASSLIST CAPTURING OUTPUT      ; * NKH02
        OPEN '','EXPENSE.CODES,':CLIENT.ID TO F.EXP.CODES ELSE
          CALL OPEN.ABORT("EXPENSE.CODES,":CLIENT.ID,"FB.1.1.EXP")
        END
      END
      OPEN '','FB.CAR.CTRL' TO F.CAR.CTRL ELSE
         CALL OPEN.ABORT("FB.CAR.CTRL",PROG.NAME)
      END
*
* Begin NKH01
*
* CHECK FOR VIEW OR CHANGE 
*
      IF DISPLAY.MODE THEN
         PROG.DESC=PROG.DESC:' - View'
      END ELSE
         PROG.DESC=PROG.DESC:' - Change'
      END
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,PERIOD,PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
* End NKH01
*
      CBVIN=''
      CBVIN<1>=CLIENT.ID
      CALL CLIENT.BLOCK(CBVIN,CBVOUT,F.CAR.CTRL)
      CRT @(0,2):CBVOUT<1>:'Enter Client Number ':CLIENT.ID:' ':CLIENT.REC<2>:@(-6):@(-4)
*
* SELECT EXPENSE CODES AND BUILD DISPLAY ARRAYWED 
*
      EXP.REC=""
      DELETE F.EXP.CODES,''
      SELECT F.EXP.CODES
      LOOP
        READNEXT ID ELSE ID=""
      UNTIL ID="" DO
        READ DEXP FROM F.EXP.CODES,ID ELSE DEXP='~~~ Not On File ~~~'
        IF EXP.REC="" THEN
          EXP.REC<1>=ID
          EXP.REC<2>=DEXP<1> ; * Description
          EXP.REC<3>=DEXP<2> ; * Outbound YTD Total
          EXP.REC<4>=DEXP<3> ; * Inbound YTD Total
          EXP.REC<5>=DEXP<4> ; * Third Party YTD Total
          EXP.REC<6>=DEXP<5> ; * Inactive Flag
        END ELSE
          LOCATE ID IN EXP.REC<1> BY 'AR' SETTING POS ELSE
            INS ID BEFORE EXP.REC<1,POS>
            INS DEXP<1> BEFORE EXP.REC<2,POS>
            INS DEXP<2> BEFORE EXP.REC<3,POS>
            INS DEXP<3> BEFORE EXP.REC<4,POS>
            INS DEXP<4> BEFORE EXP.REC<5,POS>
            INS DEXP<5> BEFORE EXP.REC<6,POS>
          END
        END
      REPEAT
*
* LAST PAGE OF EXPENSE CODES
*
      NUM.ITEMS=DCOUNT(EXP.REC<1>,@VM)
      EXTRA=REM(NUM.ITEMS,18)
      PAGE=INT(NUM.ITEMS/18)+1
*     PAGE=1
      GOSUB 9000
*
* ENTER SELECTION CODE
*
* Begin NKH01
100
      IF DISPLAY.MODE THEN
         HELP="Enter line #. 'B'=Back. 'T'=Top, 'L'=Last, ''=Next page. 'E'=End. 'EX'=Exit."
         CALL GEN.IN(0,22,"Enter option. ##",'',Q,0,2,'','',1,-2,22,0,QI,HELP,0,23)
      END ELSE
         HELP="Enter line #. 'B'=Back. 'T'=Top, 'L'=Last, ''=Next page. 'E'=End. 'EX'=Exit."
         CALL GEN.IN(0,22,"Enter line number please. #####",'',Q,0,5,'','',1,-5,22,0,QI,HELP,0,23)
      END       
* End NKH01      
      QI=OCONV(QI,'MCU')
      BEGIN CASE
        CASE QI=''
          PAGE=PAGE+1
          GOSUB 9000
        CASE QI='B'
          PAGE=PAGE-1
          IF PAGE=0 THEN PAGE=1
          GOSUB 9000
        CASE QI='T'
          PAGE=1
          GOSUB 9000
        CASE QI='L'
          NUM.ITEMS=DCOUNT(EXP.REC<1>,@VM)
          EXTRA=REM(NUM.ITEMS,18)
          PAGE=INT(NUM.ITEMS/18)+1
          IF EXTRA=0 AND PAGE > 1 THEN PAGE=PAGE-1
          GOSUB 9000
        CASE QI='EX'
          RETURN
        * Begin NKH01
        CASE NUM(QI) AND DISPLAY.MODE
          CALL ELINE('View Mode - Change Not Allowed.')
          GOTO 100
        * End NKH01        
        CASE NUM(QI) AND NOT(DISPLAY.MODE)   ;* NKH01
          SEL=QI
          IF SEL LT START ! SEL GT STOP THEN
            CALL ELINE('Invalid selection.')
            GOTO 100
          END
          IF SEL=1 ELSE
            IF EXP.REC<1,SEL-1>='' THEN
              CALL ELINE('Invalid entry. Use next available line.')
              GOTO 100
            END
          END
          GOSUB 8000
        CASE QI='E'
          X=DCOUNT(EXP.REC<1>,CHAR(253))
          FOR I=X TO 1 STEP -1
            IF EXP.REC<1,I>='' THEN
              EXP.REC=DELETE(EXP.REC,1,I)
              EXP.REC=DELETE(EXP.REC,2,I)
              EXP.REC=DELETE(EXP.REC,6,I)
            END
          NEXT I
*
          Z=0
          LOOP
            Z=Z+1
            EXP.CODE=EXP.REC<1,Z>
          UNTIL EXP.CODE="" DO
            READ EXP.ITEM FROM F.EXP.CODES,EXP.CODE ELSE EXP.ITEM=''
*           EXP.ITEM<1>=EXP.REC<2,Z>
*           WRITE EXP.ITEM ON F.EXP.CODES,EXP.CODE
*   ONLY WRITE THE DESCRIPTION TO PREVENT YTD FROM BEING OVERWRITTEN
*        IF THE PROCESS PROGRAM IS RUN WHILE A USER IS LOOKING AT A CODE
            EXP.DESC=EXP.REC<2,Z>
            WRITEV EXP.DESC ON F.EXP.CODES,EXP.CODE,1
            EXP.STATUS=EXP.REC<6,Z>
            WRITEV EXP.STATUS ON F.EXP.CODES,EXP.CODE,5
          REPEAT
          RETURN
      END CASE
      GOTO 100
*
*------------------------------------------------------------------------
* INTERNAL SUBROUTINES
*------------------------------------------------------------------------
*
* EDIT EXPENSE CODE
*
8000  ROW=3+REM(SEL,18)
      IF ROW=3 THEN ROW=21
      CODE=EXP.REC<1,SEL>
      DESC=EXP.REC<2,SEL>
      STATUS=EXP.REC<6,SEL>
      OUT.YTD.AMT=EXP.REC<3,SEL>+0
      IN.YTD.AMT=EXP.REC<4,SEL>+0
      TP.YTD.AMT=EXP.REC<5,SEL>+0
8010  HELP="Enter new expense code. ''=Accept. 'D'=Delete. 'X'=Exit."
      IF CLIENT.ID='05687' OR CLIENT.ID = '05706' OR CLIENT.ID='05812' THEN     ; * DRF01
         CALL GEN.IN(6,ROW,CODE'L#45','',Q,0,45,'','',2,-45,ROW,0,QI,HELP,0,23)     ; * DRF01
      END ELSE     ; * DRF01
         CALL GEN.IN(6,ROW,CODE'L#35','',Q,0,35,'','',2,-35,ROW,0,QI,HELP,0,23)
      END     ; * DRF01
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=CODE
      BEGIN CASE
        CASE QI='X' 
          IF CLIENT.ID='05687' OR CLIENT.ID = '05706' OR CLIENT.ID='05812' THEN     ; * DRF01
             CRT @(6,ROW):CODE'L#45'     ; * DRF01
          END ELSE     ; * DRF01
              CRT @(6,ROW):CODE'L#35'
          END     ; * DRF01
          RETURN
        CASE QI='D' 
          IF OUT.YTD.AMT#0 OR IN.YTD.AMT#0 OR TP.YTD.AMT#0 THEN
            SUBJ='-s"Expense Code Violation"'
            TEXT=USER.NAME:' ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
            TEXT<-1>='User: ':USER.NAME:' tried to delete an active expense code'
            TEXT<-1>='CLIENT.ID: ':CLIENT.ID:'   Expense Code: ':CODE
            EXECUTE 'mail ':SUBJ:' owen myra',//IN. < TEXT
            CALL ELINE('Error! This Expense Code is active! Cannot Delete!')
            RETURN
          END
          DELETE F.EXP.CODES,CODE
          EXP.REC=DELETE(EXP.REC,1,SEL)
          EXP.REC=DELETE(EXP.REC,2,SEL)
          EXP.REC=DELETE(EXP.REC,3,SEL)
          EXP.REC=DELETE(EXP.REC,4,SEL)
          EXP.REC=DELETE(EXP.REC,5,SEL)
          EXP.REC=DELETE(EXP.REC,6,SEL)
          GOSUB 9000
          RETURN
        CASE CODE#'' & QI#CODE
          CALL ELINE('Invalid entry. Cannot overwrite expense code. Use new line.')
          IF CLIENT.ID='05687' OR CLIENT.ID = '05706' OR CLIENT.ID='05812' THEN     ; * DRF01
             CRT@(6,ROW):CODE'L#45' ; RETURN TO 100     ; * DRF01
          END ELSE     ; * DRF01
             CRT@(6,ROW):CODE'L#35' ; RETURN TO 100
          END     ; * DRF01
*       CASE CLIENT.ID='00749' AND NOT(Q MATCH '8N') 
*         CALL ELINE('BW/IP Expense Codes Must be 8 Numbers!')
*         GO 8010
      END CASE
      IF QI# CODE THEN
         READ DUMMY FROM F.EXP.CODES,QI THEN
            CALL ELINE("Code ":QI:" is already on file. Cannot enter it again")
            GOTO 8010
         END
      END
      CODE=QI
      IF CLIENT.ID='05687' OR CLIENT.ID = '05706' OR CLIENT.ID='05812' THEN     ; * DRF01
         CRT @(6,ROW):CODE'L#45'     ; * DRF01
      END ELSE     ; * DRF01
         CRT @(6,ROW):CODE'L#35'
      END     ; * DRF01
*
8020  HELP="Enter new expense code description. ''=Accept. 'X'=Exit."
      IF CLIENT.ID='05687' OR CLIENT.ID = '05706' OR CLIENT.ID='05812' THEN     ; * DRF01
         CRT @(31,ROW):' '     ; * DRF01
         CALL GEN.IN(32,ROW,DESC'L#45','',Q,0,45,'','',2,-45,ROW,0,QI,HELP,0,23)     ; * DRF01
      END ELSE     ; * DRF01
         CALL GEN.IN(42,ROW,DESC'L#35','',Q,0,35,'','',2,-35,ROW,0,QI,HELP,0,23)
      END     ; * DRF01
      QI=OCONV(QI,'MCU')
      IF QI='X' THEN
        IF CLIENT.ID='05687' OR CLIENT.ID = '05706' OR CLIENT.ID='05812' THEN     ; * DRF01
           CRT @(52,ROW):DESC'L#25'     ; * DRF01
        END ELSE     ; * DRF01
           CRT @(42,ROW):DESC'L#35'
        END     ; * DRF01
        GOTO 8010
      END
      IF QI='' THEN
        Q=DESC
      END
      DESC=Q
      IF CLIENT.ID='05687' OR CLIENT.ID = '05706' OR CLIENT.ID='05812' THEN     ; * DRF01
         CRT @(6,ROW):CODE'L#45'     ; * DRF01
         CRT @(51,ROW):' '     ; * DRF01
         CRT @(52,ROW):DESC'L#25'     ; * DRF01
      END ELSE     ; * DRF01
         CRT @(42,ROW):DESC'L#35'
      END     ; * DRF01
*
8030  HELP="Enter new status. 'I'=Inactive. ' '=Remove Inactive. ''=Accept. 'X'=Exit."
      CALL GEN.IN(78,ROW,STATUS'L#1','',Q,0,1,'','',2,78,ROW,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
        CASE QI='X'
          CRT @(78,ROW):STATUS'L#1'
          GOTO 8020
        CASE QI=''
          Q=STATUS
        CASE QI=' '
        CASE QI='I'
        CASE 1
          CALL ELINE('Invalid entry. Check for valid entrys.')
          GO 8030
      END CASE
      STATUS=OCONV(Q,'MCU')
      CRT @(78,ROW):STATUS'L#1'
      EXP.REC<1,SEL>=CODE
      EXP.REC<2,SEL>=DESC
      EXP.REC<6,SEL>=STATUS
      RETURN
*
* DISPLAY EXPENSE ARRAY
*
9000  CRT @(0,3):@(-3):"    #":@(6,3):"Expense Code":@(42,3):"Description":@(78,3):"S"
      IF CLIENT.ID='05687' OR CLIENT.ID = '05706' OR CLIENT.ID='05812' THEN     ; * DRF01
         CRT @(0,3):@(-3):"    #":@(6,3):"Expense Code":@(52,3):"Description":@(78,3):"S"     ; * DRF01
      END     ; * DRF01
      START=(PAGE*18)-17
      IF START GT 99990 THEN
        START=1
        PAGE=1
      END
      STOP=START+17
      FOR I=START TO STOP STEP 1
        ROW=3+REM(I,18)
        IF ROW=3 THEN ROW=21
        EXP=EXP.REC<1,I>
        DESC=EXP.REC<2,I>
        STATUS=EXP.REC<6,I>
        IF CLIENT.ID='05687' OR CLIENT.ID = '05706' OR CLIENT.ID='05812' THEN     ; * DRF01
           PRINT @(0,ROW):I"R#5":' ':EXP"L#45":' ':DESC"L#25":' ':STATUS"L#1"     ; * DRF01
        END ELSE     ; * DRF01
           PRINT @(0,ROW):I"R#5":' ':EXP"L#35":' ':DESC"L#35":' ':STATUS"L#1"
        END     ; * DRF01
      NEXT I
      RETURN
