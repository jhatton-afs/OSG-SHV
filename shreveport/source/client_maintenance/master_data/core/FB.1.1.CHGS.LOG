      SUBROUTINE FB.1.1.CHGS.LOG(VIN,VOUT,CLIENT.REC,F.CARRIER)
$OPTIONS HEADER.EJECT
      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'FB.1.1.CHGS.LOG' ; UPL.VOUT = ''          ; * NPR_UPL 04/23/2010
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)       ; * NPR_UPL 04/23/2010
$OPTIONS EXEC.EQ.PERF
$OPTIONS INFO.ABORT
      ERRMSG=''
* PROGRAM FB.1.1.CHGS.LOG
* PROGRAM TO MODIFY FLAT FEE CHARGES BY TRANSPORT MODE
*
* FREIGHT BILLING PACKAGE
*
* AUTHOR: MIKE KERBOW
* DATE: JULY 2005
*
* 062006 - JMK01 - UPDATE PROCESS WHEN CODE IS CHANGED
* 072312 - RLM01 - Sysaid #3073 - Replace former employees' email addresses with those of current employees
* Initialize variables
*
      USER.NAME=VIN<1>
      CPOS=VIN<2>
      TYPE=VIN<3>
      DISPLAY.MODE=VIN<4>
      LOG=(CLIENT.REC<93>='Y')
      BEGIN CASE
         CASE TYPE='T'                   ; * Transport Mode
            CODE.ATT=208
            FEE.ATT=209
            PCT.ATT=210
            MIN.ATT=211
            CAP.ATT=212
            MAX.ATT=213
            TYPE.DESC='Transport Mode'
            PROG.DESC='LOGISTICS COMMISSION MAINTENANCE BY TRANSPORT MODE'
         CASE TYPE='C'                   ; * Carrier ID
            CODE.ATT=214
            FEE.ATT=215
            PCT.ATT=216
            MIN.ATT=217
            CAP.ATT=218
            MAX.ATT=219
*NPR01            TYPE.DESC='Carrier ID'
            TYPE.DESC='Carrier'          ; * NPR01
            PROG.DESC='LOGISTICS COMMISSION MAINTENANCE BY CARRIER ID'
      END CASE
      PROMPT''
      MASK.CHAR='-'
      PROG.NAME='FB.1.1.CHGS.LOG'
      PACK.NAME='FREIGHT BILLING'
*     CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)

      BEGIN CASE
            *
            * Authorized users
            *
         CASE USER.NAME = 'BRIAN'
         CASE USER.NAME = 'KAREN'
         CASE USER.NAME = 'OWEN'
         CASE USER.NAME = 'MYRA'
         CASE USER.NAME = 'MARY'
         CASE USER.NAME = 'DAVID'
         CASE USER.NAME = 'MKERBOW'
*         CASE USER.NAME = 'JWEBERT'
         CASE USER.NAME = 'NPRATT'       ; * NPR01
         CASE USER.NAME = 'CYNTHIA'
         CASE DISPLAY.MODE
            *
            * Restrict everyone else
            *
         CASE 1
            SUBJ="Unauthorized Program Access by ":USER.NAME
            TEXT=''
            TEXT<1,-1>=USER.NAME:' ':DATE()'D2/':' ':OCONV(TIME(),'MTHS'):' ':PROG.NAME
            TEXT<1,-1>='User ':USER.NAME:' tried to access ':PROG.DESC
            TEXT<1,-1>="(This user's name was not included in the program to allow access)"
            MVIN=''
*           MVIN<1>='oweninfo@afs.net':@VM:'SMatthews@afs.net'  ; * RLM01
*           MVIN<1>='bfranklin@afs.net':@VM:'SMatthews@afs.net'        ; * RLM01
            MVIN<1>='SMatthews@afs.net'        ; * RLM01
            MVIN<2>=''
            MVIN<4>='AFS'
            MVIN<5>=SUBJ
            MVIN<6>=TEXT
            CALL SENDMAIL(MVIN,MVOUT)

            CALL FB.PRINT.CENT(1,80,12,'Restricted Access Application...')
            CALL FB.PRINT.CENT(1,80,14,'Access Denied! See IS for Access')
            CALL ELINE('')
            STOP
      END CASE

* BUILD TRANS.ARRAY FOR VALIDATION

      STMT='SORT FB.TRANSPORT 1 COL.SUP HDR.SUP COUNT.SUP NO.SPLIT'
      EXECUTE STMT CAPTURING RESULTS
      TRANS.ARRAY=''
      NATT=DCOUNT(RESULTS,@AM)
      FOR ATT=2 TO NATT
         LINE=TRIM(RESULTS<ATT>)
         IF LINE#'' AND LINE#' ' THEN
            CODE=FIELD(LINE,' ',1)
            DESC=OCONV(LINE,'G1 2')
            TRANS.ARRAY<1,-1>=CODE
            TRANS.ARRAY<2,-1>=DESC
         END
      NEXT ATT

* DISP.REC IS BASED ON SUBVALUES INSTEAD OF MULTI-VALUES SINCE
* THIS IS THE WAY THE CHARGES ARE STORED IN THE CLIENT FILE
      DISP.REC=''
      DISP.REC<1>=CLIENT.REC<CODE.ATT,CPOS>
      DISP.REC<3>=CLIENT.REC<FEE.ATT,CPOS>
      DISP.REC<4>=CLIENT.REC<PCT.ATT,CPOS>
      DISP.REC<5>=CLIENT.REC<MIN.ATT,CPOS>
      DISP.REC<6>=CLIENT.REC<CAP.ATT,CPOS>
      DISP.REC<7>=CLIENT.REC<MAX.ATT,CPOS>
      NSVAL=DCOUNT(DISP.REC<1,1>,@SVM)
      FOR SVAL=1 TO NSVAL
         CODE=DISP.REC<1,1,SVAL>
         DESC='Unknown'
         IF TYPE='T' THEN
            LOCATE(CODE,TRANS.ARRAY,1;MPOS) THEN
               DESC=TRANS.ARRAY<2,MPOS>
            END
         END
         IF TYPE='C' THEN
            READ CARRIER.REC FROM F.CARRIER,CODE THEN
               DESC=CARRIER.REC<1>
            END
         END
         DISP.REC<2,1,SVAL>=DESC
      NEXT SVAL

*
* First page of codes
*
      MODE.SEL = 0                       ; * NPR01

      PAGE=1
      GOSUB 9000
      IF LOG ELSE
         CALL ELINE('Client ':CLIENT.REC<2>:' is not setup for Logistics.')
      END
      ADD.MODE=0

*
* SELECTION OF OPTIONS
*
1000:

      HELP="Enter option number. 1-3 'E'nd. 'EX'it."         ; * NPR01
      IF DISPLAY.MODE THEN
         HELP="Option 3 'E'nd. 'EX'it"
      END

      IF TYPE='T' THEN                   ; * NPR01
         HELP="Enter option : 1-Logistics, 2-Monthly Fee, 3-Mode Details, 'E'nd or 'EX'it."          ; * NPR01
        IF DISPLAY.MODE THEN
           HELP="Option 3 'E'nd. 'EX'it"
        END
      END                                ; * NPR01

      IF TYPE='C' THEN                   ; * NPR01
         HELP="Enter option : 1-Logistics, 2-Monthly Fee, 3-Carrier Details, 'E'nd or 'EX'it."       ; * NPR01
        IF DISPLAY.MODE THEN
           HELP="Option 3 'E'nd. 'EX'it"
        END
      END                                ; * NPR01

      CALL GEN.IN(0,22,"Enter option please. ###",'',Q,0,3,'','',1,-3,22,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI=1
            IF DISPLAY.MODE THEN
               CALL ELINE('Inquire only.')
            END ELSE
               GOSUB 1100
            END
         CASE QI=2
            IF DISPLAY.MODE THEN
               CALL ELINE('Inquire only.')
            END ELSE
               GOSUB 1200
            END
         CASE QI=3
            GOSUB 1300
         CASE QI='E'
            RETURN
      END CASE
      GOSUB 9000
      GO 1000
*
1100:***
*
      MASK=CLIENT.REC<85,CPOS>'R26':STR(MASK.CHAR,8-LEN(CLIENT.REC<85,CPOS>'R26'))
      HELP='Enter logistics %. [X]=Back'           ; * JMK14
      CALL GEN.IN(21,3,MASK,'AMT2',Q,0,8,'','',2,21,3,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='X' THEN RETURN
      IF QI='' THEN Q=CLIENT.REC<85,CPOS>
      IF NOT(NUM(Q)) THEN GOTO 1100
      IF Q#'' AND Q<100 AND Q#0 THEN
         CALL ELINE('ERROR : Amount cannot be less than 1.00%.')
         GOTO 1100
      END
      IF Q>10000 THEN
         CALL ELINE('ERROR : Amount must not exceed 100%.')
         GOTO 1100
      END
      CLIENT.REC<85,CPOS>=Q
      RETURN

*
1200:***
      MASK=CLIENT.REC<128,CPOS>'R26':STR(MASK.CHAR,8-LEN(CLIENT.REC<128,CPOS>'R26'))
      HELP='Enter monthly logistics fee $. [X]=Back'
      CALL GEN.IN(21,4,MASK,'AMT2',Q,0,8,'','',2,21,4,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='X' THEN RETURN
      IF QI='' THEN Q=CLIENT.REC<128,CPOS>
      IF NOT(NUM(Q)) THEN GOTO 1200
      IF Q#'' AND Q<0 THEN
         CALL ELINE('ERROR : Amount cannot be negative.')
         GOTO 1200
      END
      CLIENT.REC<128,CPOS>=Q
      RETURN

*
* Enter selection code
*
1300:

      MODE.SEL = 1                       ; * NPR01
*      FOR LX = 3 TO 5       ;* NPR01
*         CRT @( 0,LX):'   ' ;* NPR01
*      NEXT LX               ;* NPR01
      GOSUB 9000                         ; * NPR01

      HELP="Enter line number. 'B'ack. 'T'op, ''=Next page. 'A'dd. 'E'nd. 'EX'it."
      IF TYPE = "C" THEN
         HELP="Ln # for Carrier Detail. 'B'ack. 'T'op, ''=Next page. 'A'dd. 'E'nd. 'EX'it."
      END
      IF TYPE = "T" THEN
         HELP="Ln # for Transp. Mode Det. 'B'ack. 'T'op, ''=Next page. 'A'dd. 'E'nd. 'EX'it."
      END
      CALL GEN.IN(0,22,"Enter line number please. ###",'',Q,0,3,'','',1,-3,22,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            NCODES=DCOUNT(DISP.REC<1,1>,@SVM)
            MAX.PAGE=INT(NCODES/18)+(MOD(NCODES,18)#0)
            IF MAX.PAGE<1 THEN MAX.PAGE=1
            IF PAGE+1<MAX.PAGE THEN
               PAGE=PAGE+1
               GOSUB 9000
            END
         CASE QI='B'
            PAGE=PAGE-1
            IF PAGE=0 THEN PAGE=1
            GOSUB 9000
         CASE QI='T'
            PAGE=1
            GOSUB 9000
         CASE QI='EX'
            STOP
         CASE QI='A'
            IF DISPLAY.MODE THEN
               CALL ELINE('Inquire only.')
            END ELSE
               ADD.MODE=1
               SEL=DCOUNT(DISP.REC<1,1>,@SVM)+1
               GOSUB 8000
            END
         CASE NUM(QI)
            SEL=QI
            IF SEL LT START ! SEL GT STOP THEN
               CALL ELINE('Invalid selection.')
               GO 1300
            END
            IF DISPLAY.MODE THEN
               CALL ELINE('Inquire only.')
            END ELSE
               GOSUB 8000
            END
         CASE QI='E'
            IF DISPLAY.MODE THEN
            END ELSE
               CLIENT.REC<CODE.ATT,CPOS>=DISP.REC<1>
               CLIENT.REC<FEE.ATT,CPOS>=DISP.REC<3>
               CLIENT.REC<PCT.ATT,CPOS>=DISP.REC<4>
               CLIENT.REC<MIN.ATT,CPOS>=DISP.REC<5>
               CLIENT.REC<CAP.ATT,CPOS>=DISP.REC<6>
               CLIENT.REC<MAX.ATT,CPOS>=DISP.REC<7>
               IF LOG ELSE
                  CALL ELINE('Client ':CLIENT.REC<2>:' is not setup for Logistics.')
               END
            END
            MODE.SEL = 0                 ; * NPR01
            GOSUB 9000                   ; * NPR01
            RETURN
      END CASE
      GO 1300
*
*------------------------------------------------------------------------
* INTERNAL SUBROUTINES
*------------------------------------------------------------------------
*
* Edit mode
*
8000: ROW=6+REM(SEL,15)
      IF ROW=6 THEN ROW=21
      CODE=DISP.REC<1,1,SEL>
      DESC=DISP.REC<2,1,SEL>
      FEE=DISP.REC<3,1,SEL>
      RATE=DISP.REC<4,1,SEL>
      MIN=DISP.REC<5,1,SEL>
      CAP=DISP.REC<6,1,SEL>
      MAX=DISP.REC<7,1,SEL>
*
8010:*
*
      IF TYPE='T' THEN
         HELP="Enter transport mode. ''=Accept. 'D'=Delete. 'X'=Exit."
      END
      IF TYPE='C' THEN
         HELP="Enter carrier ID. ''=Accept. 'D'=Delete. 'X'=Exit."
      END
      CALL GEN.IN(6,ROW,CODE'R#5','',Q,0,5,'','',2,-5,ROW,0,QI,HELP,0,23)        ; * NPR01
      QI=OCONV(QI,'MCU')
      IF QI='X' THEN
         CRT @(6,ROW):CODE'R#5'
         ADD.MODE=0
         RETURN
      END
      IF QI='' THEN
         Q=CODE
         QI=CODE
      END
      IF QI='D' THEN
         FOR X = 1 TO 7
            DEL DISP.REC<X,1,SEL>
         NEXT X
         CODE=DISP.REC<1,1,SEL>
         DESC=DISP.REC<2,1,SEL>
         FEE=DISP.REC<3,1,SEL>
         RATE=DISP.REC<4,1,SEL>
         MIN=DISP.REC<5,1,SEL>
         CAP=DISP.REC<6,1,SEL>
         MAX=DISP.REC<7,1,SEL>
         GOSUB 9000
         RETURN
      END
      LOCATE(CODE,DISP.REC,1,1;CDPOS;'AR') THEN
         IF CDPOS#SEL THEN
            CALL ELINE(CODE:' has already been used on line ':CDPOS:'.')
            GO 8010
         END
      END
      IF TYPE='T' THEN
         LOCATE(QI,TRANS.ARRAY,1;MPOS) THEN
            DESC=TRANS.ARRAY<2,MPOS>
         END ELSE
            CALL ELINE(CODE:' is not on file. Try again.')
            GO 8010
         END
      END
      IF TYPE='C' THEN
         QI=QI'R%5'
         READ CARRIER.REC FROM F.CARRIER,QI THEN
            DESC=CARRIER.REC<1>
         END ELSE
            CALL ELINE(CODE:' is not on file. Try again.')
            GO 8010
         END
      END
      CODE=QI
      CRT @( 6,ROW):CODE 'R#5':          ; * NPR01
      CRT @(14,ROW):DESC[1,14] 'L#14':   ; * NPR01
*
8020:*
*
      IF TYPE='T' THEN
         HELP="Enter Flat Monthly Fee. '<'=Back to mode. ' '=Clear. 'X'=Exit."
      END
      IF TYPE='C' THEN
         HELP="Enter Flat Monthly Fee. '<'=Back to carrier id. ' '=Clear. 'X'=Exit."
      END
      CALL GEN.IN(30,ROW,FEE'R26#10','AMT2',Q,0,10,'','',2,30,ROW,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X' ! QI='<'
            CRT @(30,ROW):FEE'R26#10'
            GO 8010
         CASE QI=''
            Q=FEE
         CASE QI=' '
            Q=''
         CASE Q#'' AND Q<0
            CALL ELINE('ERROR : Amount cannot be negative.')
            GO 8020
         CASE NOT(NUM(Q))
            CALL ELINE("Invalid entry.  Try again.")
            GO 8020
      END CASE
      FEE=Q
      IF FEE='' THEN
         CRT @(30,ROW):FEE'L#10':
      END ELSE
         CRT @(30,ROW):FEE'R26#10':
      END
*     IF FEE+0#0 THEN
*        RATE=''
*        MIN=''
*        CAP=''
*        MAX=''
*        GO 8099
*     END
*
8030: HELP="Percentage. '<'=Back to flat fee. ' '=Clear. 'X'=Exit."
*
      CALL GEN.IN(41,ROW,RATE'R26#10','AMT2',Q,0,10,'','',2,41,ROW,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X' ! QI='<'
            CRT @(41,ROW):RATE'R26#10'
            GO 8020
         CASE QI=''
            Q=RATE
         CASE QI=' '
            Q=''
         CASE Q#'' AND Q<100 AND Q#0
            CALL ELINE('ERROR : Amount cannot be less than 1.00%.')
            GO 8030
         CASE Q>10000
            CALL ELINE('ERROR : Amount must not exceed 100%.')
            GO 8030
         CASE NOT(NUM(Q))
            CALL ELINE("Invalid entry.  Try again.")
            GO 8030
      END CASE
      RATE=Q
      IF RATE='' THEN
         CRT @(41,ROW):RATE 'L#10':
      END ELSE
         CRT @(41,ROW):RATE 'R26#10':
      END
*
8040: HELP="Minimum logistics amount. '<'=Back to percentage. ' '=Clear. 'X'=Exit."
*
      CALL GEN.IN(52,ROW,MIN'R26,#10','AMT2',Q,0,10,'','',2,52,ROW,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X' ! QI='<'
            CRT @(52,ROW):MIN'R26,#10'
            GO 8030
         CASE QI=''
            Q=MIN
         CASE QI=' '
            Q=''
         CASE Q#'' AND Q<0
            CALL ELINE('ERROR : Amount cannot be negative.')
            GO 8040
         CASE NOT(NUM(Q))
            CALL ELINE("Invalid entry.  Try again.")
            GO 8040
      END CASE
      MIN=Q
      IF MIN='' THEN
         CRT @(52,ROW):MIN 'L#10':
      END ELSE
         CRT @(52,ROW):MIN 'R26,#10':
      END
*
8050: HELP="Per Bill maximum amount. '<'=Back to minimum. ' '=Clear. 'X'=Exit."
*
      CALL GEN.IN(63,ROW,CAP'R26#6','AMT2',Q,0,6,'','',2,63,ROW,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X' ! QI='<'
            CRT @(63,ROW):CAP'R26#6'
            GO 8040
         CASE QI=''
            Q=CAP
         CASE QI=' '
            Q=''
         CASE Q#'' AND Q=0
            CALL ELINE('ERROR : Amount cannot be zero.')
            GO 8050
         CASE Q#'' AND Q<0
            CALL ELINE('ERROR : Amount cannot be negative.')
            GO 8050
         CASE NOT(NUM(Q))
            CALL ELINE("Invalid entry.  Try again.")
            GO 8050
      END CASE
      CAP=Q
      IF CAP='' THEN
         CRT @(63,ROW):CAP 'L#6':
      END ELSE
         CRT @(63,ROW):CAP 'R26#6':
      END
*
8060: HELP="YTD Maximum amount. '<'=Back to per bill cap. ' '=Clear. 'X'=Exit."
*
      CALL GEN.IN(70,ROW,MAX'R26,#10','AMT2',Q,0,10,'','',2,70,ROW,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X' ! QI='<'
            CRT @(70,ROW):MAX'R26,#10'
            GO 8050
         CASE QI=''
            Q=MAX
         CASE QI=' '
            Q=''
         CASE Q#'' AND Q=0
            CALL ELINE('ERROR : Amount cannot be zero.')
            GO 8060
         CASE Q#'' AND Q<0
            CALL ELINE('ERROR : Amount cannot be negative.')
            GO 8060
         CASE NOT(NUM(Q))
            CALL ELINE("Invalid entry.  Try again.")
            GO 8060
      END CASE
      MAX=Q
      IF MAX='' THEN
         CRT @(70,ROW):MAX 'L#10':
      END ELSE
         CRT @(70,ROW):MAX 'R26,#10':
      END
8099:* WRAPUP LINE ITEM
      IF CODE#'' THEN
         IF FEE+0=0 AND RATE+0=0 AND MIN+0=0 THEN
            CALL ELINE('You must enter either a Flat Fee, Percentage Rate or Minimum Amount.  Try again.')
            GO 8010
         END
      END
*     LOCATE(CODE,DISP.REC,1,1;CDPOS;'AR') ELSE ; * JMK01
      LOCATE(CODE,DISP.REC,1,1;CDPOS;'AR') THEN    ; * JMK01
         DISP.REC<1,1,CDPOS>=CODE        ; * JMK01
         DISP.REC<2,1,CDPOS>=DESC        ; * JMK01
         DISP.REC<3,1,CDPOS>=FEE         ; * JMK01
         DISP.REC<4,1,CDPOS>=RATE        ; * JMK01
         DISP.REC<5,1,CDPOS>=MIN         ; * JMK01
         DISP.REC<6,1,CDPOS>=CAP         ; * JMK01
         DISP.REC<7,1,CDPOS>=MAX         ; * JMK01
      END ELSE                           ; * JMK01
         INS CODE BEFORE DISP.REC<1,1,CDPOS>
         INS DESC BEFORE DISP.REC<2,1,CDPOS>
         INS FEE BEFORE DISP.REC<3,1,CDPOS>
         INS RATE BEFORE DISP.REC<4,1,CDPOS>
         INS MIN BEFORE DISP.REC<5,1,CDPOS>
         INS CAP BEFORE DISP.REC<6,1,CDPOS>
         INS MAX BEFORE DISP.REC<7,1,CDPOS>
      END
      IF ADD.MODE THEN
         SEL+=1
         GOSUB 9000
         GO 8000
      END
      RETURN
*
* Display array
*
9000:

      CRT @( 0,3):@(-3)
      IF MODE.SEL THEN                   ; * NPR01
         CRT @( 0,3):'   Logistics        %':CLIENT.REC<85,CPOS>'R26#8'          ; * NPR01
         CRT @( 0,4):'   Mthly Logis Fee  $':CLIENT.REC<128,CPOS>'R26#8'         ; * NPR01
         CRT @( 0,5):'   ':TYPE.DESC:' Details'    ; * NPR01
      END ELSE
         CRT @( 0,3):' 1 Logistics        %':CLIENT.REC<85,CPOS>'R26#8'
         CRT @( 0,4):' 2 Mthly Logis Fee  $':CLIENT.REC<128,CPOS>'R26#8'
         CRT @( 0,5):' 3 ':TYPE.DESC:' Details'
      END                                ; * NPR01
      IF MODE.SEL THEN CRT @( 3,6):"Ln":           ; *NPR01
      IF TYPE='T' THEN
         CRT @( 7,6):"Mode":             ; *NPR01
      END ELSE
         CRT @( 6,6):"Carrier":          ; *NPR01
      END
      CRT @(14,6):"Description":         ; *NPR01
      CRT @(32,6):"Flat Fee":
      CRT @(41,6):"Percentage":
      CRT @(55,6):"Minimum":
      CRT @(63,6):"PB Cap":
      CRT @(73,6):"YTD Max":
      START=(PAGE*15)-14
      IF START GT 108 THEN
         START=1
         PAGE=1
      END
      STOP=START+14
      FOR I=START TO STOP STEP 1
         DSP.ROW=6+REM(I,15)
         IF DSP.ROW=6 THEN DSP.ROW=21
         IF MODE.SEL THEN CRT @( 3,DSP.ROW):I 'R#2':         ; * NPR01
         IF DISP.REC<1,1,I>#'' THEN
            CODE=DISP.REC<1,1,I>
            DESC=DISP.REC<2,1,I>
            FEE=DISP.REC<3,1,I>
            RATE=DISP.REC<4,1,I>
            MIN=DISP.REC<5,1,I>
            CAP=DISP.REC<6,1,I>
            MAX=DISP.REC<7,1,I>
            CRT @( 6,DSP.ROW):CODE 'R#5':          ; * NPR01
*NPR01            CRT @(11,DSP.ROW):DESC 'L#17':
            CRT @(14,DSP.ROW):DESC[1,14] 'L#14':   ; * NPR01
            IF FEE='' THEN
               CRT @(30,DSP.ROW):FEE 'L#10':
            END ELSE
               CRT @(30,DSP.ROW):FEE 'R26,#10':
            END
            IF RATE='' THEN
               CRT @(41,DSP.ROW):RATE 'L#10':
            END ELSE
               CRT @(41,DSP.ROW):RATE 'R26#10':
            END
            IF MIN='' THEN
               CRT @(52,DSP.ROW):MIN 'L#10':
            END ELSE
               CRT @(52,DSP.ROW):MIN 'R26,#10':
            END
            IF CAP='' THEN
               CRT @(63,DSP.ROW):CAP 'L#6':
            END ELSE
               CRT @(63,DSP.ROW):CAP 'R26#6':
            END
            IF MAX='' THEN
               CRT @(70,DSP.ROW):MAX 'L#10':
            END ELSE
               CRT @(70,DSP.ROW):MAX 'R26,#10':
            END
         END
      NEXT I
      RETURN
