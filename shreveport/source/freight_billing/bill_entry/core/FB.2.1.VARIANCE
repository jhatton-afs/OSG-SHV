      SUBROUTINE FB.2.1.VARIANCE(MAT CLIENT.REC,BAL.DUE,VARIANCE,VAR.ARR,QI)
*
 UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.2.1.VARIANCE' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
 CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
* SUBROUTINE TO CALCULATE, DISPLAY AND ADJUST VARIANCE
*
* FREIGHT BILLING PACKAGE
*
* AUTHOR: BRIAN M. QUEEN
* DATE: DECEMBER 7, 1990
*
* VAR.ARR Documentation
*-------------------------------------
* <1>=Discount variance
* <2>=Overcharge variance
* <3>=Commission variance
* <4>=BD Discount variance
* <5>=BD Overcharge variance
* <6>=BD Commission variance
* <7>=Discount cut-back descriptions
* <8>=Overcharge cut-back descriptions
* <9>=Commission cut-back descriptions
*
* THIS PROGRAM IS A PROPRIETARY PRODUCT OF AUTOMATED FREIGHT SYSTEMS
* AND MAY NOT BE USED, COPIED OR MODIFIED WITHOUT THE EXPRESS
* WRITTEN CONSENT OF SAME.
*
********************************************************************
*
* Last updated by AFS.SOURCE (valerie) at 14:08:41 on 08/04/1994.
*   ADDED INSERT FOR CLIENTS TO GO WITH FB.2.1.
*
$INCLUDE PROG.ADMIN INC_OPTIONS
$INCLUDE FILE.DEFS INC_CLIENTS
*
* Initialize variables
*
      PROMPT''
      IF QI='I' THEN INQUIRE=1 ELSE INQUIRE=0
      RETURN.FLAG=0
      CUT.DESC=''
*
* Open files
*
      OPEN '','FB.CUT.BACKS' TO F.CUT.BACKS ELSE CALL OPEN.ABORT("FB.CUT.BACKS","FB.2.1.VARIANCE")
*
* Initial display
*
      IF VARIANCE NE 0 & VAR.ARR='' THEN
        GOSUB 8200; * Assign data
        GOSUB 8000; * Display screen
        FOR Y=1 TO 3
          IF VAR.ARR<Y>'R0' NE 0 THEN
            ROW=(Y*4)+6
            ATTR=Y+6
            GOSUB 8100; * Display cut-back codes
          END
        NEXT Y
        FOR Y=4 TO 6
          IF VAR.ARR<Y>'R0' NE 0 THEN
*           ROW=(Y*4)+6
ROW=((Y-3)*4)+6
            ATTR=Y+3
            GOSUB 8100; * Display cut-back codes
          END
        NEXT Y
      END ELSE
        GOSUB 9100; * Convert string to array
        GOSUB 8000; * Display screen
        FOR Y=1 TO 3
          IF VAR.ARR<Y>'R0' NE 0 THEN
            ROW=(Y*4)+6
            ATTR=Y+6
            GOSUB 8100; * Display cut-back codes
          END
        NEXT Y
        FOR Y=4 TO 6
          IF VAR.ARR<Y>'R0' NE 0 THEN
*           ROW=(Y*4)+6
ROW=((Y-3)*4)+6
            ATTR=Y+3
            GOSUB 8100; * Display cut-back codes
          END
        NEXT Y
      END
      OLD.VAR=VAR.ARR
*
* Display only
*
      IF QI='D' THEN
        QI=''
        GOTO 9000
      END
*
* Change variance amounts
*
200   HELP='Enter number of variance to change. D=Restore Default. X=Back. EX=Exit.'
      CALL GEN.IN(0,22,'Enter variance number to change. # ','',Q,0,2,'','',1,-2,22,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
        CASE QI='X'
          CALL FB.CLEAR.WINDOW
          RETURN
        CASE QI='EX'
          STOP
        CASE QI='' & NOT(INQUIRE)
          FOR Y=1 TO 3
            IF VAR.ARR<Y>'R0' NE 0 THEN
              ROW=(Y*4)+6
              ATTR=Y+6
              GOSUB 8100; * Display cut-back codes
              GOSUB 8150; * Enter cut-back codes
              IF RETURN.FLAG THEN
                CALL FB.CLEAR.WINDOW
                RETURN
              END
            END
          NEXT Y
          FOR Y=4 TO 6
            IF VAR.ARR<Y>'R0' NE 0 THEN
*             ROW=(Y*4)+6
ROW=((Y-3)*4)+6
              ATTR=Y+3
              GOSUB 8100; * Display cut-back codes
              GOSUB 8150; * Enter cut-back codes
              IF RETURN.FLAG THEN
                CALL FB.CLEAR.WINDOW
                RETURN
              END
            END
          NEXT Y
          GOTO 9000
        CASE QI='' & INQUIRE
          RETURN
        CASE NUM(QI) & INQUIRE
          CALL ELINE('Can not access detail in inquiry!')
        CASE QI=1
          QI=''
          IF CL.VAR.DEF='D' THEN
            CALL ELINE('ERROR - Default variance can not be changed.')
            GOTO 200
          END
          IF BAL.DUE THEN
            OLD.AMT=VAR.ARR<1>
            CALL GEN.IN(14,9,VAR.ARR<1>'R26#12','AMT2',Q,0,12,'','',0,-12,9,0,QI,'',0,23)
            NEW.AMT=Q
            GOSUB 300
            VAR.ARR<1>=NEW.AMT
            CRT @(14,9):VAR.ARR<1>'R26,#12'
          END ELSE
            OLD.AMT=VAR.ARR<1>
            CALL GEN.IN(31,9,VAR.ARR<1>'R26,#12','AMT2',Q,0,12,'','',0,-12,9,0,QI,'',0,23)
            NEW.AMT=Q
            GOSUB 300
            VAR.ARR<1>=NEW.AMT
            CRT @(31,9):VAR.ARR<1>'R26,#12'
          END
        CASE Q=2
          QI=''
          IF CL.VAR.DEF='O' THEN
            CALL ELINE('ERROR - Default variance can not be changed.')
            GOTO 200
          END
          IF BAL.DUE THEN
            OLD.AMT=VAR.ARR<2>
            CALL GEN.IN(14,13,VAR.ARR<2>'R26,#12','AMT2',Q,0,12,'','',0,-12,13,0,QI,'',0,23)
            NEW.AMT=Q
            GOSUB 300
            VAR.ARR<2>=NEW.AMT
            CRT @(14,13):VAR.ARR<2>'R26,#12'
          END ELSE
            OLD.AMT=VAR.ARR<2>
            CALL GEN.IN(31,13,VAR.ARR<2>'R26,#12','AMT2',Q,0,12,'','',0,-12,13,0,QI,'',0,23)
            NEW.AMT=Q
            GOSUB 300
            VAR.ARR<2>=NEW.AMT
            CRT @(31,13):VAR.ARR<2>'R26,#12'
          END
        CASE Q=3
          QI=''
          IF CL.VAR.DEF='C' THEN
            CALL ELINE('ERROR - Default variance can not be changed.')
            GOTO 200
          END
          IF BAL.DUE THEN
            OLD.AMT=VAR.ARR<3>
            CALL GEN.IN(14,17,VAR.ARR<3>'R26,#12','AMT2',Q,0,12,'','',0,-12,17,0,QI,'',0,23)
            NEW.AMT=Q
            GOSUB 300
            VAR.ARR<3>=NEW.AMT
            CRT @(14,17):VAR.ARR<3>'R26,#12'
          END ELSE
            OLD.AMT=VAR.ARR<3>
            CALL GEN.IN(31,17,VAR.ARR<3>'R26,#12','AMT2',Q,0,12,'','',0,-12,17,0,QI,'',0,23)
            NEW.AMT=Q
            GOSUB 300
            VAR.ARR<3>=NEW.AMT
            CRT @(31,17):VAR.ARR<3>'R26,#12'
          END
        CASE Q='D'
          VAR.ARR=OLD.VAR
          GOSUB 8200; * Assign data
          GOSUB 8000; * Display screen
          FOR Y=1 TO 3
            IF VAR.ARR<Y>'R0' NE 0 THEN
              ROW=(Y*4)+6
              ATTR=Y+6
              GOSUB 8100; * Display cut-back codes
            END
          NEXT Y
          FOR Y=4 TO 6
            IF VAR.ARR<Y>'R0' NE 0 THEN
*             ROW=(Y*4)+6
ROW=((Y-3)*4)+6
              ATTR=Y+3
              GOSUB 8100; * Display cut-back codes
            END
          NEXT Y
          GOTO 200
        CASE 1
          GOTO 200
      END CASE
      GOSUB 8000; * Display screen
      GOTO 200
*
300   IF QI GT VARIANCE THEN
        CALL ELINE('ERROR - Entered amount is greater than variance.')
        NEW.AMT=0
        RETURN
      END
*DF      IF BAL.DUE THEN
*DF        BEGIN CASE
*DF          CASE CL.VAR.DEF='D'
*DF            VAR.ARR<4>=VAR.ARR<4>+OLD.AMT
*DF            VAR.ARR<4>=VAR.ARR<4>-NEW.AMT
*DF            IF VAR.ARR<4> LT 0 THEN
*DF              CALL ELINE('ERROR - Entry will result in negative variance.')
*DF              VAR.ARR<4>=VAR.ARR<4>-OLD.AMT
*DF              VAR.ARR<4>=VAR.ARR<4>+NEW.AMT
*DF              NEW.AMT=OLD.AMT
*DF              RETURN
*DF            END
*DF          CASE CL.VAR.DEF='O'
*DF            VAR.ARR<5>=VAR.ARR<5>+OLD.AMT
*DF            VAR.ARR<5>=VAR.ARR<5>-NEW.AMT
*DF            IF VAR.ARR<5> LT 0 THEN
*DF              CALL ELINE('ERROR - Entry will result in negative variance.')
*DF              VAR.ARR<5>=VAR.ARR<5>-OLD.AMT
*DF              VAR.ARR<5>=VAR.ARR<5>+NEW.AMT
*DF              NEW.AMT=OLD.AMT
*DF              RETURN
*DF            END
*DF          CASE CL.VAR.DEF='C'
*DF            VAR.ARR<6>=VAR.ARR<6>+OLD.AMT
*DF            VAR.ARR<6>=VAR.ARR<6>-NEW.AMT
*DF            IF VAR.ARR<6> LT 0 THEN
*DF              CALL ELINE('ERROR - Entry will result in negative variance.')
*DF              VAR.ARR<6>=VAR.ARR<6>-OLD.AMT
*DF              VAR.ARR<6>=VAR.ARR<6>+NEW.AMT
*DF              NEW.AMT=OLD.AMT
*DF              RETURN
*DF            END
*DF        END CASE
*DF        IF VAR.ARR<4>=0 THEN VAR.ARR<7>=''
*DF        IF VAR.ARR<5>=0 THEN VAR.ARR<8>=''
*DF        IF VAR.ARR<6>=0 THEN VAR.ARR<9>=''
*DF      END ELSE
        BEGIN CASE
          CASE CL.VAR.DEF='D'
            VAR.ARR<1>=VAR.ARR<1>+OLD.AMT
            VAR.ARR<1>=VAR.ARR<1>-NEW.AMT
            IF VAR.ARR<1> LT 0 THEN
              CALL ELINE('ERROR - Entry will result in negative variance.')
              VAR.ARR<1>=VAR.ARR<1>-OLD.AMT
              VAR.ARR<1>=VAR.ARR<1>+NEW.AMT
              NEW.AMT=OLD.AMT
              RETURN
            END
          CASE CL.VAR.DEF='O'
            VAR.ARR<2>=VAR.ARR<2>+OLD.AMT
            VAR.ARR<2>=VAR.ARR<2>-NEW.AMT
            IF VAR.ARR<2> LT 0 THEN
              CALL ELINE('ERROR - Entry will result in negative variance.')
              VAR.ARR<2>=VAR.ARR<2>-OLD.AMT
              VAR.ARR<2>=VAR.ARR<2>+NEW.AMT
              NEW.AMT=OLD.AMT
              RETURN
            END
          CASE CL.VAR.DEF='C'
            VAR.ARR<3>=VAR.ARR<3>+OLD.AMT
            VAR.ARR<3>=VAR.ARR<3>-NEW.AMT
            IF VAR.ARR<3> LT 0 THEN
              CALL ELINE('ERROR - Entry will result in negative variance.')
              VAR.ARR<3>=VAR.ARR<3>-OLD.AMT
              VAR.ARR<3>=VAR.ARR<3>+NEW.AMT
              NEW.AMT=OLD.AMT
              RETURN
            END
        END CASE
        IF VAR.ARR<1>=0 THEN VAR.ARR<7>=''
        IF VAR.ARR<2>=0 THEN VAR.ARR<8>=''
        IF VAR.ARR<3>=0 THEN VAR.ARR<9>=''
*DF      END
      RETURN
*------------------------------------------------------------------------
*
* Internal subroutines
*
*-----------------------------------------------------------------------
*
* Display screen
*
8000  CRT @(0,3):@(-3)
      CRT @(0,6):'---------------- Variance -----------------'
      CRT @(0,7):'Ln  Desc           Bal Due Amt       Amount'
      CRT @(0,8):STR('-',43)
*
      CRT @(0,9):'1)  Discount   '
      CRT @(0,13):'2)  Overcharge '
      CRT @(0,17):'3)  Consulting '
      IF CL.VAR.DEF='D' THEN CRT @(0,9):'*'
      IF CL.VAR.DEF='O' THEN CRT @(0,13):'*'
      IF CL.VAR.DEF='C' THEN CRT @(0,17):'*'
      IF BAL.DUE THEN
        CRT @(14,9):VAR.ARR<1>'R26#12'
        CRT @(14,13):VAR.ARR<2>'R26#12'
        CRT @(14,17):VAR.ARR<3>'R26#12'
      END ELSE
        CRT @(31,9):VAR.ARR<1>'R26#12'
        CRT @(31,13):VAR.ARR<2>'R26#12'
        CRT @(31,17):VAR.ARR<3>'R26#12'
      END
      RETURN
*
* Display Cut-back codes
*
8100  STOP=DCOUNT(VAR.ARR<ATTR>,CHAR(253))+1
      START=STOP-2
      IF START LT 1 THEN START=1
*
* Display previous cut-back descriptions
*
8110  LIN=ROW
      FOR I=START TO STOP
        CRT @(5,LIN):VAR.ARR<ATTR,I>'L#74'
        LIN=LIN+1
      NEXT I
      LIN=ROW+STOP-START
      RETURN
*
* Enter cut-back code
*
8150  HELP="Enter cut-back code. Number 1-98. 99=Free form. 'D'=Delete. 'X'=Back. ''=End."
      IF VAR.ARR<ATTR>='' THEN REQ=1 ELSE REQ=0
      CALL GEN.IN(0,LIN,'###','',Q,REQ,3,'','',0,-3,LIN,0,QI,HELP,0,23)
      CRT @(0,LIN):'   ':
      QI=OCONV(QI,'MCU')
      BEGIN CASE
        CASE QI='D'
          VAR.ARR=DELETE(VAR.ARR,ATTR,STOP)
          GOSUB 8110
          GOTO 8150
        CASE QI='X'
          STOP=STOP-1
          IF STOP=0 THEN
            XX=ATTR-1
            IF XX=0 ! XX=3 THEN
              RETURN.FLAG=1
              RETURN
            END ELSE
              RETURN.FLAG=0
              IF VAR.ARR<ATTR-1>'R0' NE 0 THEN
                Y=Y-2
                IF Y LT 0 THEN
                  CALL FB.CLEAR.WINDOW
                END ELSE
                  RETURN
                END
              END ELSE
                RETURN.FLAG=1
                RETURN
              END
            END
          END
          START=STOP-2
          IF START LT 1 THEN START=1
          GOSUB 8110
          GOTO 8150
        CASE QI=''
          RETURN
        CASE QI='EX'
          STOP
        CASE QI=99
          CALL GEN.IN(0,22,STR('-',75),'',CUT.DESC,1,75,'','',0,-75,22,0,QI,'','','')
        CASE 1
          READV CUT.DESC FROM F.CUT.BACKS,QI,1 ELSE
            CALL ELINE('Code ':QI:' not on file.')
            GOTO 8150
          END
          END.OF.TEXT=INDEX(CUT.DESC,'(',1)
          IF END.OF.TEXT THEN
             END.OF.TEXT=END.OF.TEXT-1
             CUT.DESC=CUT.DESC[1,END.OF.TEXT]
             LOOP UNTIL CUT.DESC[END.OF.TEXT,1]#' ' OR CUT.DESC='' DO
                END.OF.TEXT=END.OF.TEXT-1
                CUT.DESC=CUT.DESC[1,END.OF.TEXT]
             REPEAT
          END
      END CASE
*
* Fill in blanks if necessary
*
      LN=''
      X=COUNT(CUT.DESC,'~')
      IF X GT 0 THEN
        FOR I=1 TO X
          LN=LN:FIELD(CUT.DESC,'~',I)
*         CALL GEN.IN(0,22,CUT.DESC:STR('-',20),'',Q,1,20,'','',0,-20,22,1,QI,'','','')
          CALL GEN.IN(0,22,LN:STR('-',20),'',Q,1,20,'','',1,-20,22,0,QI,'','','')
          LN=LN:Q
        NEXT I
        IF FIELD(CUT.DESC,'~',X+1) NE '' THEN LN=LN:FIELD(CUT.DESC,'~',X+1)
      END ELSE
        LN=CUT.DESC
      END
*
* Update variance array
*
      CRT @(0,22):@(-4):
*     CRT @(4,ROW):LN'L#75'
      VAR.ARR<ATTR,-1>=LN
      GOSUB 8100
      GOTO 8150
*
* Assign data
*
8200  BEGIN CASE
*DF        CASE CL.VAR.DEF='D' & BAL.DUE
*DF          VAR.ARR<4>=VARIANCE
*DF          VAR.ARR<5>=0
*DF          VAR.ARR<6>=0
*DF          VAR.ARR<8>=''
*DF          VAR.ARR<9>=''
*DF        CASE CL.VAR.DEF='O' & BAL.DUE
*DF          VAR.ARR<4>=0
*DF          VAR.ARR<5>=VARIANCE
*DF          VAR.ARR<6>=0
*DF          VAR.ARR<7>=''
*DF          VAR.ARR<9>=''
*DF        CASE CL.VAR.DEF='C' & BAL.DUE
*DF          VAR.ARR<4>=0
*DF          VAR.ARR<5>=0
*DF          VAR.ARR<6>=VARIANCE
*DF          VAR.ARR<7>=''
*DF          VAR.ARR<8>=''
        CASE CL.VAR.DEF='D'
          VAR.ARR<1>=VARIANCE
          VAR.ARR<2>=0
          VAR.ARR<3>=0
          VAR.ARR<8>=''
          VAR.ARR<9>=''
        CASE CL.VAR.DEF='O'
          VAR.ARR<1>=0
          VAR.ARR<2>=VARIANCE
          VAR.ARR<3>=0
          VAR.ARR<7>=''
          VAR.ARR<9>=''
        CASE CL.VAR.DEF='C'
          VAR.ARR<1>=0
          VAR.ARR<2>=0
          VAR.ARR<3>=VARIANCE
          VAR.ARR<7>=''
          VAR.ARR<8>=''
      END CASE
      RETURN
*
* Update Variance Array and return
*
** Replace value mark in description fields with ,'s
*
9000  FOR I=7 TO 9
        X=DCOUNT(VAR.ARR<I>,CHAR(253))
        TEMP=''
        FOR J=1 TO X
          IF TEMP NE '' THEN
            TEMP=TEMP:',':VAR.ARR<I,J>
          END ELSE
            TEMP=VAR.ARR<I,J>
          END
        NEXT J
        VAR.ARR<I>=TEMP
      NEXT I
      RETURN
*
* Replace ,'s in description fields with value marks (CHAR(253))
*
9100  FOR I=7 TO 9
        X=DCOUNT(VAR.ARR<I>,',')
        TEMP=''
        FOR J=1 TO X
          TEMP<1,J>=FIELD(VAR.ARR<I>,',',J)
        NEXT J
        VAR.ARR<I>=TEMP<1>
      NEXT I
      RETURN
