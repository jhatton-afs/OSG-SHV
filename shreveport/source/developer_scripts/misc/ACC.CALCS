      SUBROUTINE ACC.CALCS(VIN,VOUT,SAVE.CONTR,SAVE.BENCH)
*****************************************************************************
* Program name : ACC.CALCS
* Author       : Nicole Hennick
* Date written : July 19, 2018
* Library      : FBBP
$* COPYRIGHT (C) 2018 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED.
*
* FREIGHT BILLING PACKAGE - Calculate accessorails
*
* Last updated by afs (AFSLOGISTICS\nmeddaugh) at 10:47:40 on 07/19/2018.
*
* Start modification history
* 071918 - NKH00 - New Program
* End modification history
**********************************************************************************
      CALL GET.USER.NEW(USER,CH.NUM)
*DEBUG      
      * Initialize Variables
      SC = VIN<1>
      TOT.CONTR.AMT = VIN<2>
      TOT.BENCH.AMT = VIN<3>
      GTOT.CONTR.AMT = VIN<4>
      GTOT.BENCH.AMT = VIN<5>   
      CONTR.FSC.AMT = VIN<6>
      BENCH.FSC.AMT = VIN<7> 
      TOT.CONTR.MISC.CHG = VIN<8>
      TOT.BENCH.MISC.CHG = VIN<9>   
      CONTR.FSC.PERC = VIN<10>
      BENCH.FSC.PERC = VIN<11>              
      CONTR.MAX = VIN<12>
      BENCH.MAX = VIN<13>  
      TOT.WEIGHT = VIN<14>
      
      C.FSC.AMT = 0                      
      B.FSC.AMT = 0                      
      C.ACC.AMT = 0                      
      B.ACC.AMT = 0                            

      * Contract Calculations
      CUR.CONTR.MISC.CHG.CODE = SAVE.CONTR<1,SC>
      CUR.CONTR.MISC.CHG.DESC = SAVE.CONTR<2,SC>
      CONTR.RATE = SAVE.CONTR<3,SC>
      CONTR.ACC = SAVE.CONTR<4,SC>
      CONTR.FSC = SAVE.CONTR<5,SC>
      CONTR.TYPE = SAVE.CONTR<7,SC>
      CUR.CONTR.MISC.CHG = SAVE.CONTR<8,SC>
      CONTR.MIN = SAVE.CONTR<9,SC>
      CONTR.CALC.TOTAL = TOT.CONTR.AMT
      BEGIN CASE
         CASE CONTR.TYPE = 'A'           ; * Min/Max and Inlcude/Exclude flags not valid
         CASE CONTR.TYPE = 'P'           ; * Min/Max and Include/Exclude flags valid
            IF CONTR.FSC = 'I' THEN CONTR.CALC.TOTAL += CONTR.FSC.AMT
            IF CONTR.ACC = 'I' THEN CONTR.CALC.TOTAL += TOT.CONTR.MISC.CHG
            CUR.CONTR.MISC.CHG=OCONV(CONTR.CALC.TOTAL*CONTR.RATE/10000,'MR0')
            IF CONTR.MIN > CUR.CONTR.MISC.CHG THEN
               IF CONTR.FSC = 'I' THEN C.FSC.AMT = OCONV(CONTR.MIN * CONTR.FSC.PERC/100000,'MR0')
               IF CONTR.ACC = 'I' THEN C.ACC.AMT = OCONV(TOT.CONTR.MISC.CHG * CONTR.RATE/10000,'MR0')
               CUR.CONTR.MISC.CHG = CONTR.MIN + C.FSC.AMT + C.ACC.AMT
            END
            IF CONTR.MAX > 0 AND CUR.CONTR.MISC.CHG > CONTR.MAX THEN CUR.CONTR.MISC.CHG = CONTR.MAX  ; * NKH09
            GTOT.CONTR.AMT += CUR.CONTR.MISC.CHG
         CASE CONTR.TYPE = 'C'           ; * Min/Max and Include/Exclude for FSC valid - Include/Exclude ACC not valid
            CUR.CONTR.MISC.CHG=OCONV(TOT.WEIGHT * CONTR.RATE/100,'MR0')
            IF CONTR.FSC = 'I' THEN 
               C.FSC.AMT = OCONV(CUR.CONTR.MISC.CHG * CONTR.FSC.PERC/100000,'MR0')
               CUR.CONTR.MISC.CHG += C.FSC.AMT
            END
            IF CONTR.MIN > CUR.CONTR.MISC.CHG THEN
               IF CONTR.FSC = 'I' THEN C.FSC.AMT = OCONV(CONTR.MIN * CONTR.FSC.PERC/100000,'MR0')
               CUR.CONTR.MISC.CHG = CONTR.MIN + C.FSC.AMT
            END
            IF CONTR.MAX > 0 AND CUR.CONTR.MISC.CHG > CONTR.MAX THEN 
               CUR.CONTR.MISC.CHG = CONTR.MAX
               C.FSC.AMT = 0
            END
            GTOT.CONTR.AMT += C.FSC.AMT
         CASE CONTR.TYPE = 'F'           ; * Include/Exclude FSC valid - Min/Max and Include/Exclude for ACC not valid
            IF CONTR.FSC = 'I' THEN C.FSC.AMT = OCONV(CUR.CONTR.MISC.CHG * CONTR.FSC.PERC/100000,'MR0')
            CUR.CONTR.MISC.CHG = CUR.CONTR.MISC.CHG + C.FSC.AMT
            GTOT.CONTR.AMT += C.FSC.AMT
      END CASE

      * Bench Calculations
      CUR.BENCH.MISC.CHG.CODE = SAVE.BENCH<1,SC>
      CUR.BENCH.MISC.CHG.DESC = SAVE.BENCH<2,SC>
      BENCH.RATE = SAVE.BENCH<3,SC>
      BENCH.ACC = SAVE.BENCH<4,SC>
      BENCH.FSC = SAVE.BENCH<5,SC>
      BENCH.TYPE = SAVE.BENCH<7,SC>
      CUR.BENCH.MISC.CHG = SAVE.BENCH<8,SC>
      BENCH.MIN = SAVE.BENCH<9,SC>
      BENCH.CALC.TOTAL = TOT.BENCH.AMT
      BEGIN CASE
         CASE BENCH.TYPE = "A"           ; * Min/Max and Inlcude/Exclude flags not valid
         CASE BENCH.TYPE = 'P'           ; * Min/Max and Include/Exclude flags valid
            IF BENCH.FSC = 'I' THEN BENCH.CALC.TOTAL += BENCH.FSC.AMT
            IF BENCH.ACC = 'I' THEN BENCH.CALC.TOTAL += TOT.BENCH.MISC.CHG
            CUR.BENCH.MISC.CHG=OCONV(BENCH.CALC.TOTAL*BENCH.RATE/10000,'MR0')
            IF BENCH.MIN > CUR.BENCH.MISC.CHG THEN
               IF BENCH.FSC = 'I' THEN B.FSC.AMT = OCONV(BENCH.MIN * BENCH.FSC.PERC/100000,'MR0')
               IF BENCH.ACC = 'I' THEN B.ACC.AMT = OCONV(TOT.BENCH.MISC.CHG * BENCH.RATE/10000,'MR0')
               CUR.BENCH.MISC.CHG = BENCH.MIN + B.FSC.AMT + B.ACC.AMT
            END
            IF BENCH.MAX > 0 AND CUR.BENCH.MISC.CHG > BENCH.MAX THEN CUR.BENCH.MISC.CHG = BENCH.MAX  ; * NKH09
            GTOT.BENCH.AMT += CUR.BENCH.MISC.CHG
         CASE BENCH.TYPE = 'C'           ; * Min/Max and Include/Exclude for FSC valid - Include/Exclude ACC not valid
            CUR.BENCH.MISC.CHG=OCONV(TOT.WEIGHT * BENCH.RATE/100,'MR0')
            IF BENCH.FSC = 'I' THEN 
               B.FSC.AMT = OCONV(CUR.BENCH.MISC.CHG * BENCH.FSC.PERC/100000,'MR0')
               CUR.BENCH.MISC.CHG += B.FSC.AMT
            END
            IF BENCH.MIN > CUR.BENCH.MISC.CHG THEN
               IF BENCH.FSC = 'I' THEN B.FSC.AMT = OCONV(BENCH.MIN * BENCH.FSC.PERC/100000,'MR0')
               CUR.BENCH.MISC.CHG = BENCH.MIN + B.FSC.AMT
            END
            IF BENCH.MAX > 0 AND CUR.BENCH.MISC.CHG > BENCH.MAX THEN 
               CUR.BENCH.MISC.CHG = BENCH.MAX
               B.FSC.AMT = 0
            END
            GTOT.BENCH.AMT += B.FSC.AMT
         CASE BENCH.TYPE = 'F'           ; * Include/Exclude FSC valid - Min/Max and Include/Exclude for ACC not valid
            IF BENCH.FSC = 'I' THEN B.FSC.AMT = OCONV(CUR.BENCH.MISC.CHG * BENCH.FSC.PERC/100000,'MR0')
            CUR.BENCH.MISC.CHG = CUR.BENCH.MISC.CHG + B.FSC.AMT
            GTOT.BENCH.AMT += B.FSC.AMT
      END CASE

      * Build VOUT
      VOUT<1> = CUR.CONTR.MISC.CHG
      VOUT<2> = CUR.BENCH.MISC.CHG
      VOUT<3> = GTOT.CONTR.AMT
      VOUT<4> = GTOT.BENCH.AMT     
      
      * Return to Calling Program
      RETURN
