      CRT @(0,0):@(-1):
      EXECUTE "CREATE.FB.PRO.XREF"
      PROG.NAME='EVAL.FB.DARLING.FRT.DATA'
      CALL GET.USER(USER)
      CALL CHANNEL(CH.NUM)
      TODAY=DATE()
      TODAY=ICONV('04/30/10','D')
      FNAME='BILLDATA.':USER
      OPEN '',FNAME TO F.BILLDATA ELSE
         CALL OPEN.ABORT(FNAME,PROG.NAME)
      END
      FNAME='FB.DARLING.FRT.DATA'
      OPEN '',FNAME TO F.DATA ELSE
         CALL OPEN.ABORT(FNAME,PROG.NAME)
      END
      OPEN 'DICT',FNAME TO D.DATA ELSE
         CALL OPEN.ABORT(FNAME,PROG.NAME)
      END
      FNAME='CLIENTS'
      OPEN '',FNAME TO F.CLIENTS ELSE
         CALL OPEN.ABORT(FNAME,PROG.NAME)
      END
      FNAME='SCAC.XREF'
      OPEN '',FNAME TO F.SCAC.XREF ELSE
         CALL OPEN.ABORT(FNAME,PROG.NAME)
      END
      FNAME='ZIPS.CODES'
      OPEN '',FNAME TO F.ZIPS ELSE
         CALL OPEN.ABORT(FNAME,PROG.NAME)
      END
      FNAME='CAN.ZIP.CODES'
      OPEN '',FNAME TO F.CAN.ZIPS ELSE
         CALL OPEN.ABORT(FNAME,PROG.NAME)
      END
      FNAME='&SAVEDLISTS&'
      OPEN '',FNAME TO F.SL ELSE
         CALL OPEN.ABORT(FNAME,PROG.NAME)
      END
      FNAME='FB.BILLS.CRX'
      OPEN '',FNAME TO F.CRX ELSE
         CALL OPEN.ABORT(FNAME,PROG.NAME)
      END
      FNAME='AR.BRIDGE.LAST'
      OPEN '',FNAME TO F.BRIDGE ELSE
         CALL OPEN.ABORT(FNAME,PROG.NAME)
      END
      FNAME='FB.PRO.XREF'
      OPEN '',FNAME TO F.PRO.XREF ELSE
         CALL OPEN.ABORT(FNAME,PROG.NAME)
      END
      OPEN '','CARRIERS' TO F.CARRIERS ELSE
         ERROR = "CANNOT OPEN FILE CARRIERS"
         GO 9000
      END
      OPEN '','FB.BC.FSC' TO F.NFSC ELSE
         ERROR = "CANNOT OPEN FILE FB.BC.FSC"
         GO 9000
      END
      OPEN '','PCIN' TO F.PCIN ELSE
         ERROR = "CANNOT OPEN FILE PCIN"
         GO 9000
      END
      OPEN '','PCOUT' TO F.PCOUT ELSE
         ERROR = "CANNOT OPEN FILE PCOUT"
         GO 9000
      END
      OPEN '','FB.TABLES' TO F.TABLES ELSE
         ERROR = "CANNOT OPEN FILE FB.TABLES"
         GO 9000
      END
      TB=CHAR(9)
*     CLEARFILE F.DATA
      MISS.ZIP=''
      READ IMPORT.REC FROM F.BILLDATA,'Darling_Shipment_File.xls' ELSE IMPORT.REC=''
      IMPORT.REC=CHANGE(IMPORT.REC,TB,@VM)
      IMPORT.REC<1,18>='Est. Amount'
      IMPORT.REC<1,19>='Est. Report Date'
      IMPORT.REC<1,20>='Act. Amount'
      IMPORT.REC<1,21>='Act. Report Date'
      IMPORT.REC<1,22>='Exceptions'
      EXPORT.INV.REC=IMPORT.REC<1>
      EXPORT.ACC.REC=IMPORT.REC<1>
      EVAL.STMT='SELECT FB.DARLING.FRT.DATA WITH 36 = ""'
      EXECUTE EVAL.STMT RTNLIST DATA.LIST CAPTURING EVAL.RESULTS
      EVAL.NCNT=@SELECTED
      IF EVAL.NCNT>0 THEN
         EVAL.EOF=0
         EVAL.CNT=0
         LOOP
            READNEXT DATA.ID FROM DATA.LIST ELSE EVAL.EOF=1
         UNTIL EVAL.EOF DO
            EVAL.CNT+=1
            CALL PROG.BAR(22,EVAL.CNT,EVAL.NCNT,PER)
            READ DATA.REC FROM F.DATA,DATA.ID THEN
               DATA.ORG=DATA.REC
               CLIENT.ID=DATA.REC<33>
               SCAC=DATA.REC<34>
               CARRIER.ID=DATA.REC<35>
               BOL_NO=DATA.REC<18>
               PRO_NO=DATA.REC<21>
               SHIP.YR=DATA.REC<15>'DY'
               IF DATA.REC<36>='' THEN
                  CALL GET.ROOT.NUMBER(BOL_NO,BOL.BASE)
                  XREF.ID='B*':SHIP.YR:'*':BOL.BASE
                  READ XREF.REC FROM F.PRO.XREF,XREF.ID ELSE
                     CALL GET.ROOT.NUMBER(PRO_NO,PRO.BASE)
                     XREF.ID='P*':SHIP.YR:'*':PRO.BASE
                     READ XREF.REC FROM F.PRO.XREF,XREF.ID ELSE XREF.REC=''
                     IF XREF.REC='' THEN
                        IF SCAC='FEDX' OR SCAC='FEDG' AND LEN(PRO.BASE)>12 THEN
                           PRO.BASE=PRO.BASE'R%12'
                           XREF.ID='P*':SHIP.YR:'*':PRO.BASE
                           READ XREF.REC FROM F.PRO.XREF,XREF.ID ELSE XREF.REC=''
                           IF XREF.REC='' THEN
                              PRO.BASE=PRO.BASE[4,12]
                              XREF.ID='P*':SHIP.YR:'*':PRO.BASE
                              READ XREF.REC FROM F.PRO.XREF,XREF.ID ELSE XREF.REC=''
                           END
                        END
                     END
                  END
                  IF XREF.REC#'' THEN
                     CARRIER.ID=FIELD(XREF.REC<1>,'*',1)
                     READ CARRIER.REC FROM F.CARRIERS,CARRIER.ID ELSE CARRIER.REC=''
                     SCAC=CARRIER.REC<12>
                     PRO_NO=FIELD(XREF.REC<1>,'*',2)
                  END
                  IF XREF.REC#'' THEN
                     PRO.ID=XREF.REC<1,1>
                  END ELSE
                     PRO.ID=CARRIER.ID:'*':PRO_NO:'*0'
                     IF SCAC='FEDG' THEN
                        BEGIN CASE
                           CASE PRO_NO[1,2]='1Z'
                           CASE LEN(PRO_NO)=16
                              PRO_NO=PRO_NO[4,12]
                           CASE 1
                              PRO_NO=PRO_NO'R%12'
                        END CASE
                        PRO.ID=CARRIER.ID:'*':PRO_NO:'*'
                     END
                  END
                  READ CRX.REC FROM F.CRX,PRO.ID ELSE CRX.REC=''
                  IF CRX.REC<37> LE TODAY THEN
                     DATA.REC<36>=CRX.REC<37>
                     DATA.REC<37>=CRX.REC<8>
                     DATA.REC<38>=CRX.REC<42>+CRX.REC<43>+CRX.REC<44>
                     DATA.REC<39>=CRX.REC<14>
                     DATA.REC<40>=CRX.REC<15>
                     DATA.REC<41>=CRX.REC<13>
                     INV.ID=CLIENT.ID:'*':CRX.REC<37>
                     READ INV.REC FROM F.BRIDGE,INV.ID ELSE INV.REC=''
                     DATA.REC<42>=INV.REC<6>
                     DATA.REC<43>=SUM(INV.REC<3>)
                  END
               END
               IF DATA.REC<36>='' THEN
                  IOT='O'
                  OSHIP.DATE=DATA.REC<15>'D2/'
                  CLASSES=''
                  WEIGHTS=''
                  ZERO.WT=0
                  NVAL=DCOUNT(DATA.REC<27>,@VM)
                  FOR VAL=1 TO NVAL
                     CLASS=DATA.REC<27,VAL>
                     IF CLASS='77.5' THEN CLASS='77'
                     IF CLASS='92.5' THEN CLASS='92'
                     WEIGHT=DATA.REC<28,VAL>
                     IF WEIGHT+0=0 THEN
                        ZERO.WT=1
                     END ELSE
                        CLASSES<1,-1>=CLASS
                        WEIGHTS<1,-1>=ICONV(WEIGHT,'MR0')
                     END
                  NEXT VAL
                  MISC.CHG.CODES=''
                  MISC.CHG.AMTS=''
                  ORIG.ZIP=DATA.REC<7>
                  IF INDEX(ORIG.ZIP,'-',1) THEN
                     ORIG.ZIP=FIELD(ORIG.ZIP,'-',1)
                  END
                  DEST.ZIP=DATA.REC<14>
                  IF INDEX(DEST.ZIP,'-',1) THEN
                     DEST.ZIP=FIELD(DEST.ZIP,'-',1)
                  END
                  CLIENT.AUDIT=1
                  AUDIT.CLIENT.ID = CLIENT.ID
                  OPEN '','FB.AUDIT,':CLIENT.ID TO F.AUDIT THEN
                     READV SUB.CLIENT FROM F.AUDIT,'SUBSTITUTE',1 THEN
                        AUDIT.CLIENT.ID = SUB.CLIENT
                        OPEN '','FB.AUDIT,':AUDIT.CLIENT.ID TO F.AUDIT ELSE CLIENT.AUDIT=0
                     END ELSE
                        AUDIT.CLIENT.ID = CLIENT.ID
                     END
                  END ELSE CLIENT.AUDIT=0
                  IF CLIENT.AUDIT=0 THEN
                     ERROR = "Client ":CLIENT.ID:" is not setup for freight estimates"
                     RETURN
                  END
                  OPEN '','FB.AUDIT.TABLES,':AUDIT.CLIENT.ID TO F.AUDIT.TABLES ELSE
                     ERROR = "Cannot open file FB.AUDIT.TABLES,":AUDIT.CLIENT.ID
                     RETURN
                  END
                  OPEN '','FB.AUDIT.ZIPS,':AUDIT.CLIENT.ID TO F.AUDIT.ZIPS ELSE
                     ERROR = "Cannot open FB.AUDIT.ZIPS,":AUDIT.CLIENT.ID:" No On-Line Audit Allowed!"
                     RETURN
                  END
                  IF CARRIER.ID='01075' OR CARRIER.ID='00015' OR CARRIER.ID='00041' OR CARRIER.ID='00044' OR SCAC='FEDX' OR SCAC='UPSN' THEN
                     TOT.WEIGHT=SUM(WEIGHTS)
                     CONTR.AMT=TOT.WEIGHT*.65
                     IF CONTR.AMT<450 THEN
                        CONTR.AMT=450
                     END
                     CONTR.AMT=ICONV(CONTR.AMT,'MR0')
                     CONTR.FSC.AMT=0
                     AGE=TODAY-DATA.REC<15>
                     IF AGE>14 THEN
                        DATA.REC<36>=TODAY-14
                        DATA.REC<37>=CONTR.AMT
                     END
                  END ELSE
                     GOSUB RATE.SHIPMENT
                     IF ERROR#'' THEN
                        DATA.REC<47>=ERROR
                        IF ZERO.WT=1 THEN
                           DATA.REC<47>='Zero Weight on one component of this shipment.'
                        END
                        GO SKIP.REC
                     END
                     CONTR.AMT = A.VOUT<8>
                     BENCH.AMT = A.VOUT<9>
                     CONTR.FSC.AMT = A.VOUT<46,7>
                     BENCH.FSC.AMT = A.VOUT<47,7>
                     AFS.FSC.AMT = A.VOUT<48,7>
                  END
                  DATA.REC<44>=CONTR.AMT
                  DATA.REC<45>=CONTR.AMT-CONTR.FSC.AMT
                  DATA.REC<46>=CONTR.FSC.AMT
                  DATA.REC<48>=TODAY
                  IF ZERO.WT=1 THEN
                     DATA.REC<47>='Zero Weight on one component of this shipment.'
                  END
               END
SKIP.REC: *
               IF DATA.REC#DATA.ORG THEN
                  WRITE DATA.REC ON F.DATA,DATA.ID
               END
            END
         REPEAT
      END
9000: *
      STOP
RATE.SHIPMENT: ***
      SHIP.DATE=ICONV(OSHIP.DATE,'D')
      IF SHIP.DATE='' THEN
         ERROR='Invaid Ship Date of ':OSHIP.DATE
         RETURN
      END
      IF SHIP.DATE > TODAY THEN
         ERROR='Ship date cannot be in the future. Use today as the date.'
         RETURN
      END
      NUM.WEIGHTS = DCOUNT(WEIGHTS,@VM)
      TOT.WEIGHT = 0
      TOT.WEIGHT = SUM(WEIGHTS)
      IF TOT.WEIGHT GT 15000 THEN
         ERROR = "TOTAL WEIGHT EXCEEDS PROGRAM LIMITS. PLEASE CONTACT AFS"
         RETURN
      END
*----
* READ TABLES THAT MAY BE NEEDED
*----
      BEGIN CASE
         CASE IOT = "I"
            IOT.DESC = "Inbound"
         CASE IOT = "O"
            IOT.DESC = "Outbound"
         CASE IOT = "T"
            IOT.DESC = "Third Party"
      END CASE
      READ DTARIFF.DATE.XREF FROM F.TABLES,'TARIFF.DATE.XREF' ELSE DTARIFF.DATE.XREF=''
      READ DTARIFFS FROM F.TABLES,'TARIFFS' ELSE DTARIFFS=''
      READ LI.CODES FROM F.TABLES,'LI.CODES' ELSE LI.CODES=''
      READ DCLIENTS FROM F.CLIENTS,CLIENT.ID ELSE
         ERROR = "Client ":CLIENT.ID:" not on file."
         RETURN
      END
      CL.LOG.FSC=DCLIENTS<111>
      LOGISTICS=DCLIENTS<93>='Y'



*
* Select Carrier(s) (Even if only one) to Loop thru
*
      STMT= 'SELECT FB.AUDIT,':AUDIT.CLIENT.ID
      STMT:=' WITH 1 = "LTLALL"'
      IF CARRIER.ID # 'ALL' THEN
         STMT:=" AND WITH CARRIER# '":CARRIER.ID:"'"
      END ELSE
         STMT:=' AND WITH 11 = "ENABLE"'
         STMT:=' AND WITH 13 = "Y"'      ; * Core Carrier Flag = "Y"
      END
      EXECUTE STMT RTNLIST CHECK.LIST CAPTURING OUTPUT
*     IF NOT(@SELECTED) THEN ; * JCW01
      IF @SELECTED < 1 THEN              ; * JCW01
         IF CARRIER.ID # 'ALL' THEN
            ERROR='Carrier ':CARRIER.ID:' is not set up for freight estimates'
         END ELSE
            ERROR='There are no core carriers set up for freight estimates'
         END
         RETURN
      END
*
* Setup AUDIT.VIN
*
      CANADA.ORIG=0
      CANADA.DEST=0
      READ T.REC FROM F.ZIPS,ORIG.ZIP THEN
         ORIG.CITY = T.REC<1>
         ORIG.ST = T.REC<2>
      END ELSE
         READ T.REC FROM F.CAN.ZIPS,ORIG.ZIP THEN
            ORIG.CITY = T.REC<1>
            ORIG.ST = T.REC<2>
            CANADA.ORIG=1
         END ELSE
            ERROR=ORIG.ZIP:' ZIP NOT ON FILE, PLEASE TRY ANOTHER ZIP'
            RETURN
         END
      END
      READ T.REC FROM F.ZIPS,DEST.ZIP THEN
         DEST.CITY = T.REC<1>
         DEST.ST = T.REC<2>
      END ELSE
         READ T.REC FROM F.CAN.ZIPS,DEST.ZIP THEN
            DEST.CITY = T.REC<1>
            DEST.ST = T.REC<2>
            CANADA.DEST=1
         END ELSE
            ERROR=DEST.ZIP:' ZIP NOT ON FILE, PLEASE TRY ANOTHER ZIP'
            RETURN
         END
      END
      IF CANADA.ORIG=1 AND CANADA.DEST=1 THEN
         ERROR='INTRA CANADIAN SHIPMENT. OUTSIDE OF AFS SCOPE'
         RETURN
      END

      A.VIN=''
      A.VIN<3>=SHIP.DATE
      A.VIN<11>=AUDIT.CLIENT.ID
      A.VIN<12>=IOT
      A.VIN<13,1>=ORIG.ZIP
      A.VIN<13,2>=ORIG.CITY
      A.VIN<13,3>=ORIG.ST
      A.VIN<14,1>=DEST.ZIP
      A.VIN<14,2>=DEST.CITY
      A.VIN<14,3>=DEST.ST
      A.VIN<16>=USER

      A.VIN<17>=1                        ; *Misroute Flag to Ignore Misc Charge Code Errors
      A.VIN<18>=CLASSES
      A.VIN<19>=WEIGHTS
      A.VIN<21>=MISC.CHG.CODES
      A.VIN<22>=MISC.CHG.AMTS
      A.VIN<23>=MISC.CHG.AMTS
      A.VIN<24>=LOGISTICS
      A.VIN<25>=''
      A.VIN<35>=CL.LOG.FSC='N'           ; * Flag to NOT Calculate Log FSC
*
**** Begin "Loop" of all Carriers *****
*
      CARRIER.EST.ARRAY=''
*<1>=Amount (MV Lowest to Highest)
*<2>=Carrier #
*<3>=Carrier Name
*<4>=Carrier Address
*<5>=Carrier City
*<6>=Carrier State
*<7>=Error (If Any)
*<8>=Flag
GET.NEXT.CARRIER:
      READNEXT CHECK.CARRIER.ID FROM CHECK.LIST ELSE
         RETURN
      END
      ERROR=''
      GOSUB GET.CARRIER.INFO
      IF ERROR#'' AND CARRIER.ID # 'ALL' THEN
         ERROR='Carrier ':CARRIER.ID:' is not set up for freight estimates'
         RETURN
      END
**********************************************************************
      A.VIN<10>= CHECK.CARRIER.ID        ; * Add "Current" Carrier to AUDIT.VIN
      VIN=A.VIN
      A.VOUT=''
      CALL FB.AUTO(VIN,A.VOUT,D.AUDIT,CONTR.DFSC,BENCH.DFSC,DTARIFFS,DTARIFF.DATE.XREF,LI.CODES,F.AUDIT.TABLES,F.AUDIT.ZIPS,F.PCIN,F.PCOUT,F.TABLES)
      WHY=A.VOUT<24>                     ; * Save for Debugging purposes
      A.VOUT<24>=''                      ; * Kill Why So you can look at A.VOUT with Debugger
      CONTR.AMT = A.VOUT<8>
      BENCH.AMT = A.VOUT<9>
      CONTR.FSC.PCT = A.VOUT<46,3>
      BENCH.FSC.PCT = A.VOUT<47,3>
      AFS.FSC.PCT = A.VOUT<48,3>
      CONTR.FSC.AMT = A.VOUT<46,7>
      BENCH.FSC.AMT = A.VOUT<47,7>
      AFS.FSC.AMT = A.VOUT<48,7>
      ERROR=A.VOUT<1>
      RETURN                             ; * Force a Return Here
      AUDIT=A.VOUT<2>
      IF ERROR # "" THEN
         IF CARRIER.ID # 'ALL' AND CONTR.AMT+0=0 THEN
            RETURN
         END
      END
      IF AUDIT # "Y" AND CARRIER.ID="ALL" THEN GO GET.NEXT.CARRIER
      IF AUDIT = "MA" THEN ERROR = "Not an approved carrier for this shipment!"
      IF CONTR.AMT+0=0 THEN GO GET.NEXT.CARRIER
      IF LOGISTICS AND BENCH.AMT+0=0 THEN GO GET.NEXT.CARRIER
*
*** Add Quote Percentage Logic Here ***
**********************************************************************

*** Locate and set percentages for quotes and commissions

*    IF LOGISTICS THEN
*      LOCATE SHIP.DATE IN DCLIENTS<84> BY 'AR' SETTING POS ELSE
*        POS=POS-1
*      END
*      COMM.PERC = DCLIENTS<85,POS>
*      SAVINGS = BENCH.AMT-CONTR.AMT
*      LOG.COMM = SAVINGS*COMM.PERC/100
*      CL.SAVINGS = SAVINGS - LOG.COMM
*      SAVINGS.QUOTE.AMT = CL.SAVINGS*(1-QUOTE.PERC/10000)
*      QUOTE.AMT=OCONV(CONTR.AMT + LOG.COMM + SAVINGS.QUOTE.AMT,'MR0')
*    END ELSE
*      QUOTE.AMT=CONTR.AMT
*    END
      QUOTE.AMT=CONTR.AMT
*********************************************************************
* Special deal for BFG Quincy Compressor
*********************************************************************
*    IF CLIENT.ID='00981' THEN
*      BEGIN CASE
*        CASE CLIENT.ID='00981' AND IOT='O' AND ORIG.ZIP='62305'; * Quincy
*          QUOTE.AMT=(QUOTE.AMT*1.1)'R0'
*        CASE CLIENT.ID='00981' AND IOT='O' AND ORIG.ZIP='36507'; * Bay Minette
*          QUOTE.AMT=(QUOTE.AMT*1.12)'R0'
*        CASE CLIENT.ID='00761' AND IOT='O'
*          QUOTE.AMT=(QUOTE.AMT*1.12)'R0'
*      END CASE
*    END
*********************************************************************
**********************************************************************
*

      LOCATE QUOTE.AMT IN CARRIER.EST.ARRAY<1> BY 'AR' SETTING POS ELSE NULL
      INS QUOTE.AMT BEFORE CARRIER.EST.ARRAY<1,POS>
      INS CHECK.CARRIER.ID BEFORE CARRIER.EST.ARRAY<2,POS>
      INS CARRIER.NAME BEFORE CARRIER.EST.ARRAY<3,POS>
      INS ERROR BEFORE CARRIER.EST.ARRAY<4,POS>
      INS CONTR.AMT BEFORE CARRIER.EST.ARRAY<5,POS>
      INS BENCH.AMT BEFORE CARRIER.EST.ARRAY<6,POS>
      INS CONTR.FSC.PCT BEFORE CARRIER.EST.ARRAY<7,POS>
      INS BENCH.FSC.PCT BEFORE CARRIER.EST.ARRAY<8,POS>
      INS AFS.FSC.PCT BEFORE CARRIER.EST.ARRAY<9,POS>
      INS CONTR.FSC.AMT BEFORE CARRIER.EST.ARRAY<10,POS>
      INS BENCH.FSC.AMT BEFORE CARRIER.EST.ARRAY<11,POS>
      INS AFS.FSC.AMT BEFORE CARRIER.EST.ARRAY<12,POS>
      GO GET.NEXT.CARRIER
GET.CARRIER.INFO: ***
      READ CARRIER.REC FROM F.CARRIERS,CHECK.CARRIER.ID ELSE
         ERROR = "Carrier ":CHECK.CARRIER.ID:" not on file."
         RETURN
      END
      CARRIER.NAME = CARRIER.REC<1>
      CARRIER.STREET = TRIM(CHANGE(CARRIER.REC<2>,@VM,' '))
      CARRIER.CITY = CARRIER.REC<3>
      CARRIER.STATE = CARRIER.REC<4>
      CARRIER.TEXT=TRIM(CHECK.CARRIER.ID:' ':CARRIER.NAME:' ':CARRIER.STREET:' ':CARRIER.CITY)
      READ D.AUDIT FROM F.AUDIT, CHECK.CARRIER.ID ELSE
         ERROR = "CARRIER NOT SETUP FOR AUTO AUDIT - CARRIER#":CHECK.CARRIER.ID
         RETURN
      END
      IF D.AUDIT<11>#'ENABLE' THEN
         ERROR='Not Considered in On-Line Audit - Carrier Disabled'
         RETURN
      END
      READ BENCH.DFSC FROM F.NFSC,'B*':CARRIER.ID:'*':AUDIT.CLIENT.ID ELSE 
         READ BENCH.DFSC FROM F.NFSC,'B*':CARRIER.ID ELSE BENCH.DFSC=''
      END
      READ CONTR.DFSC FROM F.NFSC,"C*":CARRIER.ID:"*":AUDIT.CLIENT.ID ELSE CONTR.DFSC=BENCH.DFSC
      IF BENCH.DFSC<30>='DISABLE' THEN BENCH.DFSC=''         ; ** No Effect
      IF CONTR.DFSC<30>='DISABLE' THEN CONTR.DFSC=''         ; ** No Effect
      RETURN
      END
