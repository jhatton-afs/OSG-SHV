***********************************************************************
* FB.3.1.REG - WEEKLY REPORTS BY REGION CODE
*
* Weekly Freight Bill Report and other reports (printed and emailed)
*            Copyright (C) 2002 AFS Logistics, LLC.
*
* This program is a proprietary product of AFS Logistics, LLC.
*
* This program creates the following reports for clients of AFS:
* ========================================================================
* P=Printed
* E=Written to EMAILDATA then emailed as an attachment - if FROM.PROCESS
*
*    (1)  Weekly Freight Bill Report (Bills Processed) (xls)           P E
*****(2)  Weekly Freight Bill Report Duplicates (xls)                    E       ; * JMK118
*    (2)  Weekly Freight Bill True Cost Report (htm)                     E       ; * JMK118
*    (3)  New Rejected (Returned) Bills Report (xls)                   P E
*    (4)  New Never Pay Bills Report (xls)                             P E
*    (5)  Old Rejected (Returned) Bills Report (xls)                   P E
*    (6)  Rejected Bills Approved for Payment Report (xls)             P E
*    (7)  FAX Cover Sheet for Summary of Charges Report                P
*    (8)  Summary of Charges Report (text)                             P E
*    (9)  Summary of Charges Report (HTML)                               E
*   (10)  Invoice                                                      P
*   (11)  Invoice (HTML)                                                 E
*   (12)  Summary of Expenses Report (text & xls)                      P E
*   (13)  Summary of Regions Report (text & xls)                       P E
*   (14)  Expense Distribution Report (text)                           P E
*   (15)  Mode Distribution Report                                     P E
*   (16)  Region Expense Code Summary Report                           P
*   (17)  "Special" Reports that are client dependent                  P
*   (18)  e-Bill file specific to client and Region (xls)                E
*   (19)  Excel-Macro.Xls (to format and print Bills Report) (xls)       E
*   ----------------------------------------------------------------------
*   (20)  BOL Spreadsheet Report (H & K Dallas 01057 only)               E
*   (21)  Shurtape Carrier Report (Shurtape 10340 only)                  E
*   (22)  Alcon Source Files - 9 files (Alcon 10356 only)                E
*   (23)  APL West Source File - 1 file (APL West 01078 only)            E
*   (24)  Douglas Battery Client Customer Report (Douglas Battery 00574) E
* ========================================================================
* Not all reports are printed for each client during each processing period;
* the actual reports printed depends upon the nature of the bills processed
* as well as the settings inside Client (reporting options, number of copies
* of each report) and Region Maintenance (email addresses for regions).
*
* FB.3.1.REG works in two separate modes:  FROM.PROCESS (automatic mode) and
* not FROM.PROCESS (manual mode).  In FROM.PROCESS, the program is invoked from
* the process program (FB.2.3.NW) with the command line parameter STD-FROM.PROCESS
* to print reports after first processing the bills for that account.  The CL
* parameter is the first input read and FROM.PROCESS is set as follows:
*
* PROGRAM.MODE='STD-FROM.PROCESS' => PROCESS.TYPE='STD'
*                                 => PROGRAM.MODE='FROM.PROCESS'
*                                 => FROM.PROCESS=1
*
* In FROM.PROCESS, all inputs to the program are supplied by a DATA statement prior
* to executing the program.  These inputs are as follows (and they are the defaults
* the program provides when running this program NOT FROM.PROCESS):
*
* CLIENT=CLIENT (CLIENT ID)
* FILE.SEL=3 (Last Processed)
* BEG.DATE=skipped over because Last Processed, but set to DDATES<1>
* END.DATE=skipped over because Last Processed, but set to DDATES<2>
* REPORT.TYPE=R (Regular)
* Send Report to Hold File=N (No)
* Override Copies or Summary of Charges only=N (No)
* Only bills with Non Logistics Variance=N (No)
* Separate Report for each Region=N (No) * see below
* RETURN to Process='' (no value just a RETURN)
*
* Despite saying NO to "Separate Report for each Region?", running FROM.PROCESS is
* actually a two-part running of FB.3.1.REG.  This program is run the first time with
* SEPARATE.REGIONS equal to 0 for the main company (with COPIES from CLIENT.REC<100>
* as set in Client Maintenance) and then again with SEPARATE.REGIONS equal to 1 for
* ALL the regions of the company (with COPIES set to 1).  This two-part operation
* only occurs with FROM.PROCESS equal to 1 (true).
*
* In FROM.PROCESS mode only, in addition to printing reports, copies of most of these
* reports are emailed to clients (both main and regions) for those with email
* addresses and depending upon the COPIES (in Client Maintenance) and the REG.EMAIL.PRINT
* switch (CLIENT.REC<145>), which can have the values of N, E, B, P only.
*
* REG.EMAIL.PRINT is stored in CLIENT.REC<145> and controls regional emailing and
* printing according to the following codes:
*
*   'N'   No paper copies printed and no email sent, regardless of presence of
*         regional email addresses.
*   'E'   No paper copies printed but email sent to regions with email addresses.
*   'B'   If a regional email address exists then email to that address and don't
*         print a paper copy, else don't email (there's not an address anyway) and
*         print one paper copy.
*   'P'   Print one paper copy and email if there are regional email addresses.
*
* If the program is operating in not FROM.PROCESS mode (FROM.PROCESS=0), directly
* from the AFS menu pressing 1-3-1 with the CL parameter STD, the CL parameter is
* initally read and FROM.PROCESS is set as follows:
*
* PROGRAM.MODE='STD'              => PROCESS.TYPE='STD'
*                                 => PROGRAM.MODE=''
*                                 => FROM.PROCESS=0
*
* In not FROM.PROCESS all inputs to the program as prompted for on the screen by the
* program and typed in by the user.
***********************************************************************
* Comments for Old Changes:
* 020720 - DRF028 - ACCU-773 Added count for LTL and Non LTL to calculated special charges
* 082919 - DRF008 - Ticket ACCU-517 - Added region CAR.REG.FLAG to get carrier count correct
* 100218 - DRF007 - Ticket ADU-122 - Added regions to client 01485 Feintool CIN
* 051618 - DRF006 - Ticket 6934 - Do not charge postage on voucher
*                   account or carriers that are voucher for a client
* 051517 - TAG01 - Change WinZip to 7Zip
* 062615 - DRF005 - SysAid 18023 - Have the Weekly fee show on region
*                   SNRGY and division 02020
* 022515 - JMK145 - SysAid#15413 - Weekly client email
* 022015 - DRF004 - SysAid 15455 - Removed 01057 H & K International BOL
*                   spreadsheet
* 070914 - DRF003 - SysAid# 10031 01384 - Divisional billing
* 033114 - DRF002 - SysAid# 9201 Speedling (01436) - Divisional billing
* 100513 - JMK144 - SysAid#7566 - Adding 2 regions to client
* 100312 - JMK142 - SysAid#4132 - 2012 10-03 WMX Wabtec Division 16000 Wabtec-Mexico 09/26/12 - 10/02/12
* 110211 - JMK141 - SysAid#31 - Cavender'sStores LTD All report
* 110111 -  DS001 - Add functionality to produce TCR report only
* 102511 - JMK137 - SysAid#79 - Wabtec SOC is not showing process and handling fee from Procomm Printout.
* 102111 - RLM001 - PROJECT 80 - Retrieve Account Manager ID from CLIENTS file instead of salesman file
* 081711 - JMK136 - R110988 - Bach Simpson processing fee discrepancy
* 061511 - JMK135 - Remove the True Cost report from weekly reporting emails for Wabtec 01977
* 052511 - JMK134 - T110508 - Wabtec postage
* 032211 - JMK133 - T99999 ADJUST COLUMN WIDTHS FOR SOE, SOD, SODE REPORTS
* 032211 - JMK132 - T99999 SETUP REGION PROCESSING FOR WABTEC (01977)
* 102010 - JMK129 - ADD TROUBLESHOOTING OVERRIDER FOR BUILD.DF.xxx PROGRAMS
* 050610 - JMK124 - C100389 - Freight Payment Account Changeover BY NPR as per JMK
* 042710 - JMK123 - C100391 - Virbac 1633 Division changes
* 041310 - JMK122 - C100294 - Regions turned on for Rawson 01830 and split fees
* 040510 - JMK121 - C100306 - changes to UPS weekly invoice
* 032210 - JMK120 - C100253 - Correct the macro instructions in client weekly email
* 031910 - JMK119 - ADD UPS DETAIL REPORT FOR 01706
* 022810 - JMK118 - C091257 - Clean up Weekly Report email ; remove verbiage & some files
* 020810 - NPR08  - T100115 - Added AFS transportation Summary to Regional Managers and new attachment to weekly reports email.
* 012210 - JMK117 - ADD REGIONS TO THE FB.UNPROCESS FILE FOR QUICKER REGIONAL REPORT SELECTION
* 011910 - NPR07  - T100039 - Added logging capability for tracking and performance monitoring purposes.
* 100509 - JMK116 - C091213 - Bell Micro processing adjustment
* 081409 - JMK115 - C091043 - Processing fees ; need to split up by region for #1763 Pipeline Seal
* 041409 - NPR06  - T091033 - Unnaplied Credit suddenly appeared on Hussey SOC which had been voided a long time ago.  Added check to see if O/S bal exists
* 080709 - JMK114 - C091020 - Add FedEx Macro to weekly client emails
* 080509 - JMK113 - SETUP REGIONAL BILLING FOR REGAL PLASTICS 00666
* 052909 - JMK112 - Correct Regional Billing for Vermeer
* 050109 - JMK111 - C090591 - Alcon Labs Source Files : add and remove recipients
* 041409 - NPR05  - T090494 - Client 1267 requesting summary of charges/regions in XLS Added SOE as well for good meassure
* 032009 - NPR04  - T090286 - Ensure Attributes do not get overwritten in DARRAY
* 032009 - NPR03  - T090286 - Added provision for calculating Managed return Amounts
* 031009 - JMK110 - T090327 - Account was on "troubleshoot" but regular recipients still received the reports.
* 030209 - JMK109 - LIMIT FUNCTIONAL REBATE FOR AIRGAS TO END 03/31/09
* 022409 - JMK108 - C090270 - Summary of Regions not showing full region number
* 020609 - JMK107 - Amarillo Gear Account #01584 - Region 1 billing
* 020209 - NPR02  - T090149 Link account managers to AE's for weekly email reports
* 012609 - JMK106 - Changes for Rexel Consolidation
* 011909 - JMK105 - C090048 - Alcon Labs ; FedEx Details
* 102408 - JMK104 - T082397 - Malco Products SOC not adding up correctly
* 102308 - NPR01 - T082097 - Explanation of Credits to Clients on the SOC
* 101708 - JMK103 - T082358 - Add announcement to Weekly Report emails for "Benchmark Charge" to "Gross Charge"
* 101308 - JMK102 - C080843 - Add Rebate Field on SOC for Airgas
* 090308 - JMK101 - C082057 - Add ability to take account off of troubelshoot temporarily for processing ; Post to AR program
* 073008 - JMK100 - C080843 - Add Rebate Field on SOC for Airgas
* 072308 - JMK99 - FedEx per bill fee for 01148
* 071508 - JMK98 - FedEx per bill fee for 01478
* 071008 - JMK97 - FedEx per bill fee for 01539, 01148, 01371, 01398
* 061808 - DRF01 - C081563 - Changed email address for APL West
* 061708 - JMK96 - C081412 - Additional "Optional" page for Summary of Charges
* 060908 - JMK95 - C081491 - make Remit Address changes to the Weekly Reports Invoice and Summary of Charges
* 060508 - JMK94 - C081315 - Mixing Voucher and Freight Payment in one account
* 052808 - JMK93 - C081415 - Make SOC.TXT and PO Distribution Report available via FTP for Robroy
* 052708 - JMK92 - T081331 - PO distribution for 01645
* 051908 - JMK91 - T081351 - 01635 - Manar ; weekly fee not showing on report
* 042108 - JMK90 - T080994 - HTML attachments are missing from manager summary report email
* 040808 - JMK89 - T080964 - SOC for regions of Southern Marketing Affiliates
* 040108 - JMK88 - C080843 - Add Rebate Field on SOC for Airgas
* 092107 - JMK87 - C070598 - remove supervising salesman from trouble shoot emails
* 082307 - JMK86 - T070319 - integrate program into 'process notification'
* 080107 - JMK85 - C200706180009 / 7/31/07  /  FW: Calgon service fees separated from existing accounts and invoiced as a consolidated invoice (with an audit trail) under a new account number
* 062607 - JMK84 - T200706260007 / priority 3 /    01202 - Lowen Corporation 06/16/07 - 06/22/07
* 062507 - JMK83 - C200705110005   New Project - Adding LCC Numbers to the "F"ile option for Logistics
* 061207 - JMK82 - C200706050004 / 6/11/07 / weekly fees split by region
* 051107 - JMK81 - C200705100012  / 5/10/07 /  move carriers from sales code 22 to 21
* 050907 - JMK80 - C200704250003  /   /  Leisure Arts Regions
* 050207 - JMK79 - C200704250002  /   /  RE: Summary SOC information on Regional Manager's Email
* 042607 - JMK78 - T200704260005 / priority 2 /  Clients emails
* 042507 - JMK77 - T200704200001 / priority 2  /  01546 - Sumner Mfg 04/14/07 - 04/20/07
* 040907 - JMK76 - C200704050001  /   /   RE: Macros (renaming weekly report macro filenames for better association w/ their function)
* 032807 - JMK75 - C200703260002 / ASAP /  Servicing Salesman & Manager Weekly Report Emails
* 030607 - JMK74 - T200703060002 / priority 3 / AFSLogistics.com in weekly email
* 012907 - JMK73 - T200701290001 / priority 2 / Not sure what this is, client 1342
* 120806 - JMK72 - CHANGE EMAIL ERROR RECIPIENTS TO U2.ERRORS AND ADDITIONAL REASON FOR FAILURE
* 113006 - JMK71 - T200611280002 / priority 2 / errors while processing
* 112906 - JMK70 - T200611280002 / priority 2 / errors while processing
* 111406 - JMK69 - T200611100013 ADD BILLDATA FILTER TO UPS EBILLS
* 102706 - JMK68 - ADD OUTPUT FILE FOR LS STARRETT (01342)
* 101606 - JMK67 - REMOVE CURSOR SAVE FUNCTION OF PRINTER
* 101006 - JMK66 - ADD CHECK COUNT (CKCNT) FOR QTR REVIEW RPT
* 100906 - JMK65 - ADD CLIENT NUMBER TO THE BUILDING REPORTS NOTE
* 091406 - JCW02 - USE NEW FB.CHECKS FILES
* 091106 - JMK64 - ADD EXPENSE DISTRIBUTION REPORT FOR DIETRICH (01311 & 01460)
* 080806 - JMK63 - ADD SEPARATE.REGIONS FOR FB.PROCESS.CALC - GARDNER GLASS (01003)
* 071006 - JMK62 - ADD ADDRESS NOTICE FOR REMITTANCE
* 062706 - JMK61 - ADD EBILL MACRO SWITCH FOR DAVIS PAINT (01139)
* 061906 - JMK60 - ADD OUTPUT FILE FOR HORIZON IND (01458)
* 050806 - JCW01 - CHANGES TO '@SELECTED', 'CLEARSELECT', AND 'STMT<X>'
* 042706 - JMK59 - ADD OUTPUT FILE FOR ROBROY (01349 & 01350)
* 032906 - JMK58 - ADD EMAIL TRACKING LOG FOR REVIEW WHEN EMAILS GO BAD
* 032006 - JMK57 - ADD VOUCHER FILE EMAIL FOR DIETRICH CANADA
* 031406 - JMK56 - REMOVE JASCO 01231 FROM EBILL MACRO ATTACHMENT
* 030806 - JMK55 - DISABLE CLIENT UPDATE ATTACHMENT
* 022606 - JMK54 - ADD CLIENT UPDATE ATTACHMENT TO EMAILS
* 010606 - JMK53 - ADD NEW EBILL MACRO EFFECTIVE 1-6-2006
* 121305 - JMK52 - VERIFY UNAP PYMT AMOUNT BEFORE ALERT IS PRINTED
* 110905 - JMK51 - ADD ZIP OPTION FOR EMAIL ATTACHMENTS
* 110705 - JMK50 - ADD FLAT FEE LOGISTICS ALLOCATIONS TO BALANCE
* 110105 - JMK49 - MOVE MARY AND MYRA EMAIL ADDRESSES TO BCC LOCATION
* 090905 - JMK48 - REMOVE DISTRIBUTION ERROR MESSAGE IF BILL IS ZERO
* 082505 - JMK47 - ADD OUTPUT FILE FOR FUTURE METALS (01305)
* 080205 - JMK46 - ADD VOUCHER FILE EMAIL FOR DIETRICH
* 062405 - JMK45 - COUNT REJECT EDI BILLS AS PPR BILLS
* 060305 - JMK44 - ADD SP-OPEN AND SP-CLOSE TO GROUP ALL PRINT RPTS IN ONE JOB
* 051905 - JMK43 - ADD FLAT FEE OVERCHARGE COMMISSIONS FOR BELL SPORTS 01148
* 050605 - JMK42 - CHANGE AUTO PRE-SELECT TO PASS LIST FOR PERFORMANCE
* 041805 - JMK41 - CORRECT EXPENSE ERROR MESSAGE ON SOC WHEN STD REPORT
* 041105 - JMK40 - PREVENT UNAPPLIED PAYMENTS NOTATION ON REGIONAL SOC
* 040405 - JMK39 - ADD Y.PRE.AUDIT.FEE TO Y.TOTAL VARIABLE
* 022305 - JMK38 - REMOVE UNAPPLIED PAYMENTS NOTATION FROM REGIONAL SOC
* 021505 - JMK37 - ADD OP.WORDING TO REPORT NOTIFICATION
* 020105 - JMK36 - CORRECT REGIONAL ISSUES WITH VESUVIUS
* 020105 - JMK35 - ADD MKERBOW TO ERROR EMAIL LIST
* 013005 - JMK34 - ADD AR-BRIDGE CHECK FOR FEDX AIR OVERCHARGE
* 012705 - JMK33 - ADD AR-BRIDGE CHECK FOR STC LOGISTICS SALES CODE 151
* 011805 - JMK32 - ADD REGIONAL INFORMATION FOR VESUVIUS MINIMUMS
* 011805 - JMK31 - MAKE TROUBLESHOOTING ADJUSTMENTS
* 011705 - JMK30 - ADD UPS TRACKING NUMBER FEE FOR VESUVIUS
* 011405 - JMK29 - ADD PRO-RATED PROCESSING CALCULATION CHANGES
* 011105 - JMK28 - ADD UNAPPLIED PAYMENTS TO NOTATION AT END OF SOC
* 011105 - JMK27 - ADD PRO-RATED PROCESSING FEE TO AR-BRIDGE VALIDATION
* 011105 - JMK26 - EXCLUDE EDI BILLS FROM STC POSTAGE CALC
* 011005 - JMK25 - CORRECT REGIONAL TOTALS FOR VESUVIUS
* 010505 - JMK24 - ADD REGION CODE TO INVOICE NUM FOR SEPARATE REGIONS
* 123004 - JMK23 - WHEN F OPTION IS CHOSEN, SEND PRINTOUT TO DOWNLOAD FILE
* 122004 - JMK22 - CHANGE REMIT ADDRESS FOR STC
* 121704 - JMK21 - REMOVE CARRIER CHARGES FROM PROCESSING FOR NON AR CLIENTS
* 120304 - JMK20 - ADD PRORATED BILLS PROCESS CALCULATION
* 112304 - JMK19 - ADD SOC FLAG TO AR VALIDATION
* 111104 - JMK18 - CORRECT HTML INVOICE SECOND ADDRESS ISSUE
* 111104 - JMK17 - ADD CLIENT NAME TO EMAILS
* 110204 - JMK16 - ADJUSTMENTS FOR SCOTT TRAFFIC PROCESSING
* 102704 - JMK15 - DISABLE MISROUTE INFORMATION FROM LOST SAVINGS
* 070804 - JMK14 - ADD DUE DATE TO HTML INVOICE
* 052604 - JMK13 - MAKE SURE THAT USED CREDIT ONLY HAPPEN WHEN "FROM.PROCESS"
* 050704 - JMK12 - ADD UNAPPLIED CREDIT LIST TO INVOICE
* 042304 - JMK11 - ADD FORMS WITH NEW LOGO FOR LLC
* 041404 - JMK10 - REMOVE UNAPPLIED CREDITS FROM REGION REPORTS
* 022704 - DRF - Changed 107 Weekly Postage to 102 Weekly Proc & Hndlg
* 021004 - JMK09 - REPLACE REGULAR EMAILS W/TROUBLESHOOT EMAILS
* 012704 - JMK08 - DISABLE HTML DOCUMENTS FOR DBT AMERICA 00963
* 011304 - JMK07 - ADD TRF SVC FEE TO COMMISSION FOR REPORTING
* 112103 - JMK06 - ADD COMPANY HDGS FROM FB.COMPANY FILE
* 100803 - JMK05 - ADD MISROUTE INFO AS LOST SAVINGS SECTION
* 021203 - JMK04 - ADD USED CREDIT FILE AND EVAL FOR REPORT
* 021103 - JMK03 - REMOVE UNAPPLIED CREDITS FROM REPORT
* 020903 - JMK02 - REMOVE PREVIOUS BALANCES FROM REPORT
* 013103 - JMK01 - ADD CREDITS TO REPORT(S)
* Commission Calculation - 05/25/99 - David
* The program will now accumulate commission instead of calculate
* commission. The calculation is done in the process program FB.2.3
* and stored in attributes 42 Discount commission, 43 Overcharge
* commission and 44 Consulting commission
*

***********************************************************************

* Includes

$INCLUDE PROG.ADMIN INC_OPTIONS
$INCLUDE FILE.DEFS INC_REGION.CODES

* Initialize variables
      EQU REJECT.CODES.NAME TO 'REJECT.CODES'      ; * Record Name

      DEBUG.SWITCH=0                     ; * Debug Switch:  0 no, 1 yes
      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK HERE TO BEGIN DEBUG 1...')

      INPUT PROGRAM.MODE
      ORG.PROGRAM.MODE=PROGRAM.MODE      ; * JMK137
      PROG.NAME='FB.3.1.REG (':PROGRAM.MODE:')'
      PROCESS.TYPE=FIELD(PROGRAM.MODE,'-',1)
      TESTING=0                          ; * JMK31
      IF PROCESS.TYPE='TST' THEN         ; * JMK31
         PROCESS.TYPE='STD'              ; * JMK31
         TESTING=1                       ; * JMK31
      END                                ; * JMK31
      ONCE=0                             ; * JMK101
      IF PROCESS.TYPE='ONCE' THEN        ; * JMK101
         PROCESS.TYPE='STD'              ; * JMK101
         ONCE=1                          ; * JMK101
      END                                ; * JMK101
      PROGRAM.MODE=FIELD(PROGRAM.MODE,'-',2)
      IF PROGRAM.MODE='FROM.PROCESS' THEN
         FROM.PROCESS=1
         EXECUTE "AUTOLOGOUT 0"
      END ELSE
         FROM.PROCESS=0
      END
      CALL GET.USER(USER)
      CALL CHANNEL(CH.NUM)
      SPECIAL.DF.OUT = ''

      FB.OZ=.6333                        ; * JMK16
      PROMPT''
      TAB=CHAR(9)
      ESC=CHAR(27)
      MASK.CHAR='-'
      PROG.DESC='Freight Bill Report by Client by Carrier'
      PACK.NAME='Freight Billing'
      DASH.1.COLS=SPACE(57):'---------------'
      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'FB.3.1.REG' ; UPL.VOUT = ''     ; * NPR_UPL 04/23/2010
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)       ; * NPR_UPL 04/23/2010
      DASH.1.25SP.COLS=SPACE(57):'---------------'
      DASH.1.LONG.COLS=SPACE(40):'--------------------------------'
      DASH.2.COLS=SPACE(57):'---------------           ---------------'
      DASH.2.25SP.COLS=SPACE(57):'---------------':SPACE(25):'---------------'
      DASH.2.LONG.COLS=SPACE(40):'--------------------------------        --------------------------------'
      CHAR.PER.IN=16.7
      MAT REG.CODE.REC=''
      EXPS=''
      REG.COUNT=0
      REGS=''                            ; * Region information
      REG.INVOICE=''
      REG.LIST=''
      REG.COUNTS=''
      REG.DARRAY=''
      REG.CODE=''
      REGEXP.ARRAY= ''
      DIV.LIST=''                        ; * JMK137
      VARS=''
      FAX.SUMMARY=0
      SEPARATE.REGIONS=1
      REGIONAL.ID='ALL'
      TOTAL.DIST.MIDS=''
      TOTAL=''
      TOTAL.DIST.IDS=''
      TOTAL.DIST.AMTS=''
      PARTIAL.PENNY=0
      PRINT.TOTAL.EXPENSE.DIST=1
      REMIT.TO='AFS Logistics, LLC'      ; * JMK22 ; * JMK153

      TVIN='BILLDATA'                    ; * VOC Pointer to source location on AFS
      TVIN<2>='FORMS'                    ; * Sub Folder on AFS that has the file

      TVIN<3>='AFSINVOICENEW.PCL'        ; * FileName to load (new invoice .PRN file)  See AFS INVOICE README.DOC in BILLDATA\FORMS for info; * JMK11 ; * JMK153
      CALL READ.SEQ.FILE(TVIN,TVOUT)     ; * Read File; * JMK11
      INVOICE.FORM=TVOUT                 ; * Set variable to form/image for use when printing invoice
      TVIN<3>='AFSINVOICENEWGS.PCL'      ; * FileName to load (new invoice .PRN file)  See AFS INVOICE README.DOC in BILLDATA\FORMS for info; * JMK11 ; * JMK153
      CALL READ.SEQ.FILE(TVIN,TVOUT)     ; * Read File; * JMK11
      INVOICE.FORM.PRT=TVOUT             ; * Set variable to form/image for use when printing invoice

      TVIN='BILLDATA'                    ; * VOC Pointer to source location on AFS
      TVIN<2>='FORMS'                    ; * Sub Folder on AFS that has the file
      TVIN<3>='LOGO2.PCL'                ; * FileName to load
      CALL READ.PCFILE(TVIN,TVOUT)       ; * Read File
      AFS.LOGO=''                        ; * JMK11 NOT NEEDED AS BUILT INTO FORM

      DARRAY=''
      TC.REPORT.CNTR = 0
      WEEKLY.REPORT=''                   ; * File Name of Bills Processed Report created by BUILD.DF.SUB (AKA Weekly Report or Body)
      WEEKLY.REPORT.DUP=''               ; * File Name of Bills Processed Report Duplicates created by BUILD.DF.SUB
      NRB.DA=''                          ; * New Rejected (Returned) Bills Email Report
      NPB.DA=''                          ; * New Never Pay Bills Email Report
      ORB.DA=''                          ; * Old Rejected (Returned) Bills Email Report
      ARB.DA=''                          ; * Approved Rejected (Returned) Bills Email Report
      SOC.TXT=''                         ; * Summary of Charges Email Report (Text format)
      SOC.HTML=''                        ; * Summary of Charges Email Report (HTML format)
      INVOICE.HTML=''                    ; * Invoice (HTML format)
      INVOICE.PDF=''                     ; * Invoice (PDF format)
      SOE.DA=''                          ; * Summary of Expenses Email Report TXT
      SOE.XLS=''                         ; * Summary of Expenses Email Report XLS
      SOR.DA=''                          ; * Summary of Regions Email Report TXT
      SOR.XLS=''                         ; * Summary of Regions Email Report XLS
      SORE.DA=''                         ; * Summary of Expense by Regions Email Report TXT       ;* NPR10
      SORE.XLS=''                        ; * Summary of Expense by Regions Email Report XLS       ;* NPR10
      SSOE.DA=''                         ; * Summary of Expense by Expense Only Email Report TXT    ;* NPR14
      SSOE.XLS=''                        ; * Summary of Expense by Expense Only Email Report XLS    ;* NPR14
      EXD.DA=''                          ; * Expense Distribution Email Report
      MOD.DA=''                          ; * Mode Distribution Email Report
      ATS.DA=''                          ; * AFS Transportion Summary Email Report ;* NPR08
      CAR.DA=''                          ; * Carrier Report for client Shurtape only
      CAR.TEMP.DA=''                     ; * Shurtape Carrier Report temp copy
      NO.EMAIL=0                         ; * No Email flag, initially assumed false
      EMAIL.ERRORS=''                    ; * List of errors encountered
      USING.NEW.MACRO=''                 ; * A switch to indicate which version of the excel macro to use
      EMAIL.SEND='HOLD'                  ; * A SWITCH TO HOLD THE EMAILS FROM BEING SENT.
      PCL.SOC.ARRAY=''                   ; * JMK153
      PCL.INV.ARRAY=''                   ; * JMK153
      BILLING.REC=0                      ; * JMK153
      DFLAG=0                            ; * Duplicate flag ; * JMK153
      RFLAG=0                            ; * Reject flag ; * JMK153
      BILL.TERM=''                       ; * JMK153
      BILL.TERM<1,1>='1' ; BILL.TERM<2,1>='Net 15' ; BILL.TERM<3,1>='15'         ; * JMK153
      BILL.TERM<1,2>='2' ; BILL.TERM<2,2>='Net 30' ; BILL.TERM<3,2>='30'         ; * JMK153
      BILL.TERM<1,3>='3' ; BILL.TERM<2,3>='Net 45' ; BILL.TERM<3,3>='45'         ; * JMK153
      BILL.TERM<1,4>='4' ; BILL.TERM<2,4>='Net 60' ; BILL.TERM<3,4>='60'         ; * JMK153
      BILL.TERM<1,5>='5' ; BILL.TERM<2,5>='Due on Receipt' ; BILL.TERM<3,5>='0'  ; * JMK153
      TOT.SAV.LBL='During this period, AFS saved you: '      ; * JMK153

      LOGGING.FLAG = 0                   ; * No logging initially
      LOG.HDR.ID = "99999"
      LOG.SEQ.NO = ""
      PROC.DESC = ""
      PROC.EMAIL = ""
      LOG.ST.DATE = "" ; LOG.ST.TIME = '' ; LOG.END.DATE = '' ; LOG.END.TIME = '' ; LOG.REFS = ''

      NO.MACRO=0                         ; * JMK75
      IF DATE()>=ICONV('04-01-07','D') THEN        ; * JMK75
         NO.MACRO=1                      ; * JMK75
      END                                ; * JMK75
*
      EXECUTE 'SP.ASSIGN ? ' CAPTURING OUTPUT
      POS=INDEX(OUTPUT,'Destination printer',1)
      ATT=COUNT(OUTPUT[1,POS],@AM)+1
      FORM=TRIM(FIELD(OUTPUT<ATT>,":",2))

***********************************************************************
* Open general files
***********************************************************************

      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         CALL OPEN.ABORT('CLIENTS',PROG.NAME)
      END
      OPEN '','CARRIERS' TO F.CARRIERS ELSE
         CALL OPEN.ABORT('CARRIERS',PROG.NAME)
      END
      OPEN '','EMAILDATA' TO F.EMAILDATA ELSE
         CALL OPEN.ABORT('EMAILDATA',PROG.NAME)
      END
      OPEN '','BILLDATA.FORMS' TO F.FORMS ELSE
         CALL OPEN.ABORT('BILLDATA.FORMS',PROG.NAME)
      END
      OPEN '','FB.COMPANY' TO F.COMPANY ELSE
         CALL OPEN.ABORT('FB.COMPANY',PROG.NAME)
      END
      OPEN '','FB.BILLS.YTD' TO F.YTD ELSE
         CALL OPEN.ABORT('FB.BILLS.YTD',PROG.NAME)
      END
      OPEN '','FB.LOGISTICS' TO F.LOGS ELSE
         CALL OPEN.ABORT('FB.LOGISTICS',PROG.NAME)
      END
      OPEN '','FB.PROG.FEE' TO F.PROG.FEE ELSE
         CALL OPEN.ABORT('FB.PROG.FEE',PROG.NAME)
      END
      OPEN '','FB.MANG.RTRNS' TO F.MNGD.RTNS ELSE  ; *NPR03
         CALL OPEN.ABORT("FB.MANG.RTRNS",PROG.NAME)          ; *NPR03
      END                                ; *NPR03
      OPEN '','FB.CLAIMS' TO F.CLAIMS ELSE
         CALL OPEN.ABORT('FB.CLAIMS',PROG.NAME)
      END
      OPEN '','FB.ADJUSTS' TO F.ADJUSTS ELSE
         CALL OPEN.ABORT('FB.ADJUSTS',PROG.NAME)
      END
      OPEN '','FB.REPORT' TO F.REPORT ELSE
         CALL OPEN.ABORT('FB.REPORT',PROG.NAME)
      END
      OPEN '','FB.TRANSPORT' TO F.TRANSPORT ELSE
         CALL OPEN.ABORT('FB.TRANSPORT',PROG.NAME)
      END
      OPEN '','ZIPS.CODES' TO F.ZIPS ELSE
         CALL OPEN.ABORT('ZIPS',PROG.NAME)
      END
      READ ZIP.REC FROM F.ZIPS,'3.DIGIT' ELSE ZIP.REC=''
      OPEN '','FB.TABLES' TO F.TABLES ELSE
         CALL OPEN.ABORT('FB.TABLES',PROG.NAME)
      END
      OPEN '','FB.AR.SUMMARY' TO F.SUMMARY ELSE
         CALL OPEN.ABORT('FB.AR.SUMMARY',PROG.NAME)
      END
      READ REJ.CODES FROM F.TABLES,REJECT.CODES.NAME ELSE
         CALL ELINE('FB.3.1.REG: Could not load ':REJECT.CODES.NAME:' from FB.TABLES.')
         STOP
      END
      OPEN '','UPSDATA' TO F.UPSDATA ELSE
         CALL OPEN.ABORT('F.UPSDATA',PROG.NAME)
      END
      OPEN '','MAIL.CONS.DATA' TO F.MAIL.CONS.DATA ELSE
         CALL OPEN.ABORT('F.MAIL.CONS.DATA',PROG.NAME)
      END
      OPEN '','FBWORK':CH.NUM TO F.WORK ELSE
         EXECUTE 'CREATE-FILE FBWORK':CH.NUM:' 1 1001' PASSLIST CAPTURING OUTPUT
         OPEN '','FBWORK':CH.NUM TO F.WORK ELSE
            CALL OPEN.ABORT('FBWORK':CH.NUM,PROG.NAME)
         END
      END
      OPEN '','AR.CUST' TO F.AR.CUST ELSE          ; * JMK01
         CALL OPEN.ABORT('AR.CUST',PROG.NAME)      ; * JMK01
      END                                ; * JMK01
      OPEN '','AR.TRANS' TO F.AR.TRANS ELSE        ; * JMK04
         CALL OPEN.ABORT('AR.TRANS',PROG.NAME)     ; * JMK04
      END                                ; * JMK04
      OPEN '','FB.USED.CREDIT' TO F.FB.USED.CREDIT ELSE      ; * JMK04
         CALL OPEN.ABORT('FB.USED.CREDIT',PROG.NAME)         ; * JMK04
      END                                ; * JMK04
      OPEN '','FB.BANKS' TO F.FB.BANKS ELSE        ; * JMK04
         CALL OPEN.ABORT('FB.BANKS',PROG.NAME)     ; * JMK04
      END                                ; * JMK04
      OPEN '','FB.CHECKS.HDR' TO F.CHECKS ELSE     ; * JCW02
         CALL OPEN.ABORT('FB.CHECKS.HDR', PROG.NAME)         ; * JCW02
      END                                ; * JCW02
      OPEN '','FB.CHECKS.DTL' TO F.CHECKS.D ELSE   ; * JCW02
         CALL OPEN.ABORT('FB.CHECKS.DTL', PROG.NAME)         ; * JCW02
      END                                ; * JCW02
      OPEN '','AR.SLSMAN.1000.1' TO F.SLSMAN ELSE  ; * JMK75
         CALL OPEN.ABORT('AR.SLSMAN.1000.1', PROG.NAME)      ; * JMK75
      END                                ; * JMK75
      OPEN '','PROCESS.NOTIFY' TO F.PN ELSE        ; * JMK86
         CALL OPEN.ABORT('PROCESS.NOTIFY',PROG.NAME)         ; * JMK86
      END                                ; * JMK86
      OPEN '','PROCESS.NOTIFY.HIST' TO F.PN.HIST ELSE        ; * JMK86
         CALL OPEN.ABORT('PROCESS.NOTIFY.HIST',PROG.NAME)    ; * JMK86
      END                                ; * JMK86
      OPEN '','FB.BANK.CTRL' TO F.BANK.CTRL ELSE   ; * JMK94
         CALL OPEN.ABORT('FB.BANK.CTRL',PROG.NAME)           ; * JMK94
      END                                ; * JMK94
      OPEN '','AFS.PROCESS.LOGFILE' TO F.PROC.LOGF ELSE      ; * NPR07
         CALL OPEN.ABORT("AFS.PROCESS.LOGFILE",PROG.NAME)    ; * NPR07
      END                                ; * NPR07
      OPEN '','FB.REG.DIV.XREF' TO F.REG.DIV.XREF ELSE       ; * JMK137
         CALL OPEN.ABORT('FB.REG.DIV.XREF',PROG.NAME)        ; * JMK137
      END                                ; * JMK137
      OPEN '','PCL.BILLING' TO F.PCL.BILL ELSE     ; * JMK153
         CALL OPEN.ABORT('PCL.BILLING',PROG.NAME)  ; * JMK153
      END                                ; * JMK153
      OPEN '','PDF' TO F.PDF ELSE        ; * JMK153
         CALL OPEN.ABORT('PDF',PROG.NAME)          ; * JMK153
      END                                ; * JMK153

***********************************************************************
90:* Display screen header
***********************************************************************
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      CRT @(0,2):STR('=',79)

***********************************************************************
100:* Enter client number
***********************************************************************
      LN='Enter Client Number:'
      MASK=STR(MASK.CHAR,20)
      HELP='Enter Client ID Number or Letters for Search. [X]=Exit [EX]=Exit'
      CRT @(0,3):LN:@(-3)
      CALL GEN.IN(0,3,LN:MASK,'',Q,0,20,'','',2,-20,3,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX' OR QI='X'
            GOTO THE.END
         CASE NOT(QI MATCHES '0N')
            CALL SOUNDEX.DISPLAY(QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            CRT @(0,2):STR('=',79)
            BEGIN CASE
               CASE ITEM.LIST=''
                  GOTO 100
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                  GOTO 100
               CASE ITEM.LIST NE ''
                  IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
                  GOTO 100
            END CASE
         CASE QI=''
            GOTO 100
         CASE NUM(QI)
            Q=QI'R%5'
         CASE 1
            GOTO 100
      END CASE
      CLIENT=Q
      READ CLIENT.REC FROM F.CLIENTS,CLIENT ELSE
         CALL ELINE('Client ':CLIENT:' not on file.')
         GOTO 100
      END

      STC.FLG=0                          ; * JMK16
      IF CLIENT.REC<92>='00002' THEN STC.FLG=1     ; * JMK16
      UNI.FLG=0                          ; * JMK125
      IF CLIENT.REC<92>='00003' THEN UNI.FLG=1     ; * JMK125

      UFM.FLG=0                          ; * JMK145
      IF CLIENT.REC<92>='00004' THEN UFM.FLG=1     ; * JMK145
      LGI.FLG=0                          ; * JMK145
      IF CLIENT.REC<92>='00005' THEN LGI.FLG=1     ; * JMK153
      IF DATE() GE '14071' AND DATE() LE '14103' THEN        ; * JMK62
         REMIT.TO:=' - NOTE: NEW REMIT TO ADDRESS ***'       ; * JMK62
      END                                ; * JMK62
      INV.LVL=''

      IF CLIENT.REC<231>='Y' THEN INV.LVL='D'      ; * JMK89

      CCC.FLG=0                          ; * JMK85
      IF CLIENT='01323' THEN CCC.FLG=1   ; * JMK85
      IF CLIENT='01324' THEN CCC.FLG=1   ; * JMK85
      IF CLIENT='01326' THEN CCC.FLG=1   ; * JMK85

      CLIENT.NAME=CLIENT.REC<2>
      CRT @(0,3):LN:CLIENT'R%5':' ':CLIENT.NAME:@(-3)
      CRT @(0,4):SPACE(LEN(LN)):'Email Addresses->TO:    CC:    BCC:'

      IF CLIENT.REC<179>#'' AND ONCE=0 THEN        ; * JMK09 ; * JMK101
         CRT @(LEN(LN)+20,4):'Trb'       ; * JMK09
         CRT @(LEN(LN)+27,4):'Trb'       ; * JMK09
         CRT @(LEN(LN)+35,4):'Trb'       ; * JMK09
      END ELSE                           ; * JMK09
         IF CLIENT.REC<125> THEN
            CRT @(LEN(LN)+20,4):'Yes'
         END ELSE
            CRT @(LEN(LN)+20,4):'No'
         END
         IF CLIENT.REC<126> THEN
            CRT @(LEN(LN)+27,4):'Yes'
         END ELSE
            CRT @(LEN(LN)+27,4):'No'
         END
         IF CLIENT.REC<127> THEN
            CRT @(LEN(LN)+35,4):'Yes'
         END ELSE
            CRT @(LEN(LN)+35,4):'No'
         END
      END                                ; * JMK09

      USING.NEW.MACRO=CLIENT.REC<116>    ; * Options are NONE, OLD, NEW
      IF USING.NEW.MACRO#'NONE' AND USING.NEW.MACRO#'OLD' AND USING.NEW.MACRO#'NEW' THEN
         USING.NEW.MACRO='NEW'           ; * In case no value existed, assume NEW
      END

      VARIANCE=CLIENT.REC<7>
      REGION=CLIENT.REC<12>              ; * If 'Y', then this client has regions and using this for regions
      EXPENSE=CLIENT.REC<13>             ; * If 'Y', then this client has expense codes

      CLIENT.BANK=CLIENT.REC<81>         ; * JMK94
      READ BANK.CTRL.REC FROM F.BANK.CTRL,CLIENT ELSE BANK.CTRL.REC=''           ; * JMK94

      COMPANY.CODE=CLIENT.REC<92>

      COMPANY.NAME='AFS, LLC'            ; * JMK06 ; * JMK153
      COMPANY.NAME.HTML='AFS, LLC'       ; * JMK06 ; * JMK153
      READ COMPANY.REC FROM F.COMPANY,COMPANY.CODE THEN      ; * JMK06
         COMPANY.NAME=COMPANY.REC<9>     ; * JMK06
         COMPANY.NAME.HTML=COMPANY.REC<10>         ; * JMK06
         IF COMPANY.NAME.HTML='' THEN    ; * JMK06
            COMPANY.NAME.HTML=COMPANY.NAME         ; * JMK06
         END                             ; * JMK06
      END                                ; * JMK06

      REG.EMAIL.PRINT=OCONV(CLIENT.REC<145>,'MCU')
      IF NOT(REG.EMAIL.PRINT='N' OR REG.EMAIL.PRINT='E' OR REG.EMAIL.PRINT='B' OR REG.EMAIL.PRINT='P') THEN
         REG.EMAIL.PRINT='N'             ; * If not a valid code, assume 'N'
      END
      SHOW.DTL=(CLIENT.REC<233>="Y")     ; * JMK96

      BD.SLS.EMAIL=''                    ; * SWB02
      IF FROM.PROCESS THEN               ; * SWB02
         BD.SLS.ID=CLIENT.REC<114>       ; * SWB01
         READ BD.SLS.REC FROM F.SLSMAN,BD.SLS.ID ELSE BD.SLS.REC=''    ; * SWB01
         BD.SLS.NAME=BD.SLS.REC<1>       ; * SWB01
         BD.SLS.EMAIL=OCONV(BD.SLS.REC<8>,'MCL')   ; * SWB01
         IF BD.SLS.EMAIL = 'none' THEN
            BD.SLS.EMAIL = ''            ; * SWB02
         END                             ; * SWB02
      END                                ; * SWB02

      SVC.SLS.ID=CLIENT.REC<115>         ; * JMK75
      READ SVC.SLS.REC FROM F.SLSMAN,SVC.SLS.ID ELSE SVC.SLS.REC=''    ; * JMK75
      SVC.SLS.NAME=SVC.SLS.REC<1>        ; * JMK75
      SVC.SLS.EMAIL=OCONV(SVC.SLS.REC<8>,'MCL')    ; * JMK77
      IF FROM.PROCESS AND SVC.SLS.EMAIL = 'none' THEN        ; * SWB02
         SVC.SLS.EMAIL = ''              ; * SWB02
      END                                ; * SWB02
*
      ACCT.MGR = CLIENT.REC<264>         ; * NPR02  ; * RLM001
      ACCT.MGR.EMAIL = ""                ; * NPR02
      IF ACCT.MGR # '' THEN              ; * NPR02
         READ ACCT.MGR.REC FROM F.SLSMAN,ACCT.MGR THEN       ; * NPR02
            ACCT.MGR.EMAIL = ACCT.MGR.REC<8>       ; * NPR02
            IF FROM.PROCESS AND OCONV(ACCT.MGR.EMAIL,'MCL') = 'none' THEN        ; * SWB02
               ACCT.MGR.EMAIL = ''       ; * SWB02
            END                          ; * SWB02
         END                             ; * NPR02
      END                                ; * NPR02
      CLIENT.TERMS=CLIENT.REC<282>       ; * JMK153
      IF CLIENT.TERMS='' THEN            ; * JMK153
         CLIENT.TERMS=5                  ; * JMK153
      END                                ; * JMK153
      CLIENT.TERMS.DESC=''               ; * JMK153
      LOCATE CLIENT.TERMS IN BILL.TERM<1> SETTING TPOS THEN  ; * JMK153
         CLIENT.TERMS.DESC=BILL.TERM<2,TPOS>       ; * JMK153
         CLIENT.TERMS.DAYS=BILL.TERM<3,TPOS>       ; * JMK153
      END                                ; * JMK153
      CLIENT.PO=CLIENT.REC<283>          ; * JMK153

***********************************************************************
* Open client files
***********************************************************************

      IF EXPENSE='Y' THEN
         OPEN '','EXPENSE.CODES,':CLIENT TO F.EXPENSE ELSE
            CALL OPEN.ABORT('EXPENSE.CODES,':CLIENT,PROG.NAME)
         END
      END
      IF REGION='Y' THEN
         OPEN '','DIVISION.CODES,':CLIENT TO F.DIVISION ELSE
            CALL OPEN.ABORT('DIVISION.CODES,':CLIENT,PROG.NAME)
         END
         OPEN '','REGION.CODES,':CLIENT TO F.REGION ELSE
            CALL OPEN.ABORT('REGION.CODES,':CLIENT,PROG.NAME)
         END
      END
      IF VARIANCE='Y' OR VARIANCE='A' THEN
         OPEN '','VARIANCE.CODES,':CLIENT TO F.VARIANCE ELSE
            CALL OPEN.ABORT('VARIANCE.CODES,':CLIENT,PROG.NAME)
         END
      END
      OPEN '','FB.REPORT,':CLIENT TO F.CLNT.REPORT ELSE
         HUSH ON
         EXECUTE 'CREATE-FILE DATA FB.REPORT,':CLIENT:' 101'
         HUSH OFF
         OPEN '','FB.REPORT,':CLIENT TO F.CLNT.REPORT ELSE
            CALL OPEN.ABORT('FB.REPORT,':CLIENT,PROG.NAME)
         END
      END
      OPEN '','FB.BILLS.HIST,':CLIENT TO F.HIST ELSE
         CALL OPEN.ABORT('FB.BILLS.HIST,':CLIENT,PROG.NAME)
      END
      OPEN '','AR-BRIDGE' TO F.BRIDGE ELSE
         CALL OPEN.ABORT('AR.BRIDGE',PROG.NAME)
      END
      IF CLIENT='10272' AND FROM.PROCESS THEN
         OPEN '','FTP.AAR' TO F.FTP.AAR ELSE
            CALL OPEN.ABORT('FTP.AAR',PROG.NAME)
         END
      END
      IF CLIENT='01349' OR CLIENT='01350' OR CLIENT='01645' THEN       ; * JMK93
         OPEN '','FTP.01349.REPORTS' TO F.FTP.RR ELSE        ; * JMK93
            CALL OPEN.ABORT('FTP.01349.REPORTS',PROG.NAME)   ; * JMK93
         END                             ; * JMK93
      END                                ; * JMK93
      CHECK.AR.BRIDGE=1                  ; * perform the AR bridge check
      BRIDGE.SUMMARY.MATCH=1             ; * Assume a match to start and see if there's not a match
      BRIDGE.ID=CLIENT                   ; * JMK65
      IF TESTING THEN BRIDGE.ID=CLIENT:'-TEST'     ; * JMK65

      READ D.BRIDGE FROM F.BRIDGE,BRIDGE.ID ELSE
         CHECK.AR.BRIDGE=0               ; * do not perform the AR bridge check - there's not a record anyway
         D.BRIDGE=''
      END

* Initialize files

      CLEARFILE F.CLNT.REPORT
      READ FORMAT.REC FROM F.REPORT,CLIENT ELSE
         CALL ELINE('Cannot read report format for ':CLIENT.NAME:'.')
         GOTO 100
      END
      WIDTH=FORMAT.REC<1,1>
      DEPTH=FORMAT.REC<1,2>
      LPI=FORMAT.REC<1,3>

* Repair format record if needed

      UPDATE=0
      FOR X=2 TO 999 UNTIL FORMAT.REC<X>=''
         ACTUAL=FORMAT.REC<X,1>
         TEST=TRIM(ACTUAL)
         BEGIN CASE
            CASE ACTUAL='PRO'
               NULL
            CASE ACTUAL='SPACE'
               NULL
            CASE ACTUAL='COST'
               NULL
            CASE ACTUAL='CWT'
               NULL
            CASE TEST=0
               CALL ELINE('Error.. Value column on line ':X-1:' cannot be 0 in report format for ':CLIENT.NAME:'.')
               GOTO 100
            CASE ACTUAL MATCHES '0N'
               NULL
            CASE TEST[1,3]='PRO' & ACTUAL#'PRO'
               FORMAT.REC<X,1>='PRO'
               UPDATE=1
            CASE TEST[1,5]='SPACE' & ACTUAL#'SPACE'
               FORMAT.REC<X,1>='SPACE'
               UPDATE=1
            CASE NOT(ACTUAL MATCHES '0N') & TEST MATCHES '0N'
               FORMAT.REC<X,1>=TEST
               UPDATE=1
            CASE NOT(NUM(TEST)) & NOT(NUM(ACTUAL))
               CALL ELINE('Error in Value column on line ':X-1:' of report format for ':CLIENT.NAME:'.')
               GOTO 100
         END CASE
      NEXT X
      IF UPDATE THEN WRITE FORMAT.REC ON F.REPORT,CLIENT

***********************************************************************
200:* Enter file type
***********************************************************************
      AUTO=0
      LN='Enter File Type:'
      MASK='3':MASK.CHAR
      HELP='[1]=Current [2]=History [3]=Last Processed [5]=All Current [EX]=Exit'
      CRT @(0,5):LN:@(-3)
      CALL GEN.IN(0,5,LN:MASK,'',Q,0,2,'','',2,-2,5,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN Q=3
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            CRT @(0,5):@(-3)
            GOTO 100
         CASE Q=1 OR Q=5
            FILE.SEL=Q
            FILE='FB.BILLS,':CLIENT
            CRT @(0,5):LN:FILE.SEL'L#2':'Current ':FILE:@(-3)
         CASE Q=2
            FILE.SEL=2
            FILE='FB.BILLS.HIST,':CLIENT
            CRT @(0,5):LN:FILE.SEL'L#2':'History ':FILE:@(-3)
         CASE Q=3
            FILE.SEL=3
            OPEN '','FB.UNPROCESS,':CLIENT TO F.UP ELSE
               CALL ELINE('Cannot open FB.UNPROCESS,':CLIENT:'. "Last" option not available.')
               GOTO 200
            END
            READ DDATES FROM F.UP,'PROCESS.DATES' ELSE
               CALL ELINE('FB.UNPROCESS,':CLIENT:' PROCESS.DATES not on file. "Last" option not available.')
               GOTO 200
            END
            FILE='FB.BILLS.HIST,':CLIENT
            CRT @(0,5):LN:FILE.SEL'L#2':'Last Processed ':FILE:@(-3)
            BEG.DATE=DDATES<1>
            END.DATE=DDATES<2>
            DAYS=END.DATE-BEG.DATE+1
            CRT @(0,7):'Enter the Beginning Date of the Report:':BEG.DATE'D2/'
            CRT @(0,9):'Enter the Ending Date of the Report:   ':END.DATE'D2/'
            AUTO=1
         CASE 1
            GOTO 200
      END CASE

      OPEN FILE TO FB.BILLS ELSE
         CALL OPEN.ABORT(FILE,PROG.NAME)
      END
      OPEN '','VEND.CUST,':CLIENT TO F.VC THEN
         CUST.VEND.FILE=1
      END ELSE
         CUST.VEND.FILE=0
      END
      IF AUTO THEN GOTO 500              ; * skip beginning and ending date prompts

***********************************************************************
300:* Enter beginning date
***********************************************************************
      LN='Enter the Beginning Date of the Report:'
      MASK=DATE()'D2/'
      HELP='[nn]=Day [nn/nn]=Month/Day [nn/nn/nn]=Month/Day/Year [X]=Back [EX]=Exit'
      CALL GEN.IN(0,7,LN:MASK,'DATE',Q,0,8,'','',2,-8,7,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            CRT @(0,7):@(-3)
            GOTO 200
      END CASE
      BEG.DATE=Q
      CRT @(0,7):LN:BEG.DATE'D2/':@(-3)

***********************************************************************
400:* Enter ending date
***********************************************************************
      LN='Enter the Ending Date of the Report:   '
      MASK=DATE()'D2/'
      HELP='[nn]=Day [nn/nn]=Month/Day [nn/nn/nn]=Month/Day/Year [X]=Back [EX]=Exit'
      CALL GEN.IN(0,9,LN:MASK,'DATE',Q,0,8,'','',2,-8,9,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            CRT @(0,9):@(-3)
            GOTO 300
      END CASE
      END.DATE=Q
      IF BEG.DATE GT END.DATE THEN
         IF PROCESS.TYPE='STD' THEN
            CALL ELINE('Beginning date cannot exceed ending date.')
         END
         GOTO 400
      END
      CRT @(0,9):LN:END.DATE'D2/':@(-3)
      DAYS=END.DATE-BEG.DATE+1

***********************************************************************
500:* Calculate fiscal year beginning date
***********************************************************************
      END.MONTH=OCONV(END.DATE,'DM')
      END.DAY=OCONV(END.DATE,'DD')
      END.YEAR=OCONV(END.DATE,'DY')
      FYR.DATE=CLIENT.REC<29>:'.':END.YEAR
      FYR.DATE=ICONV(FYR.DATE,'D2.')
      IF FYR.DATE>END.DATE THEN
         FYR.DATE=CLIENT.REC<29>:'.':(END.YEAR-1)
         FYR.DATE=ICONV(FYR.DATE,'D2.')
      END

* Setup beginning dates needed for writing reports to EMAILDATA
      OUT.BEG.DATE=OCONV(BEG.DATE,'D2/')
      BEG.MONTH=FIELD(OUT.BEG.DATE,'/',1)
      BEG.DAY=FIELD(OUT.BEG.DATE,'/',2)
      BEG.YEAR=FIELD(OUT.BEG.DATE,'/',3)

* Setup ending dates needed for writing reports to EMAILDATA
      OUT.END.DATE=OCONV(END.DATE,'D2/')
      END.MONTH=FIELD(OUT.END.DATE,'/',1)
      END.DAY=FIELD(OUT.END.DATE,'/',2)
      END.YEAR=FIELD(OUT.END.DATE,'/',3)
      BEGIN CASE                         ; * JMK88

         CASE CLIENT='00879' AND END.DATE>=ICONV('04/01/08','D') AND END.DATE<=ICONV('04/03/09','D')           ; * JMK88 ; * JMK109
            REBATE.FLG=1                 ; * JMK88
            OLD.PCT=35                   ; * JMK88
            NEW.PCT=20                   ; * JMK88

         CASE CLIENT='01079' AND END.DATE>=ICONV('04/01/08','D') AND END.DATE<=ICONV('04/03/09','D')           ; * JMK88 ; * JMK109
            REBATE.FLG=1                 ; * JMK88
            OLD.PCT=35                   ; * JMK88
            NEW.PCT=20                   ; * JMK88

         CASE CLIENT='01083' AND END.DATE>=ICONV('04/01/08','D') AND END.DATE<=ICONV('04/03/09','D')           ; * JMK88 ; * JMK109
            REBATE.FLG=1                 ; * JMK88
            OLD.PCT=35                   ; * JMK88
            NEW.PCT=20                   ; * JMK88

         CASE CLIENT='01101' AND END.DATE>=ICONV('04/01/08','D') AND END.DATE<=ICONV('04/03/09','D')           ; * JMK88 ; * JMK109
            REBATE.FLG=1                 ; * JMK88
            OLD.PCT=35                   ; * JMK88
            NEW.PCT=20                   ; * JMK88

         CASE CLIENT='01112' AND END.DATE>=ICONV('04/01/08','D') AND END.DATE<=ICONV('04/03/09','D')           ; * JMK88 ; * JMK109
            REBATE.FLG=1                 ; * JMK88
            OLD.PCT=35                   ; * JMK88
            NEW.PCT=20                   ; * JMK88

         CASE CLIENT='01113' AND END.DATE>=ICONV('04/01/08','D') AND END.DATE<=ICONV('04/03/09','D')           ; * JMK88 ; * JMK109
            REBATE.FLG=1                 ; * JMK88
            OLD.PCT=35                   ; * JMK88
            NEW.PCT=20                   ; * JMK88

         CASE CLIENT='01267' AND END.DATE>=ICONV('04/01/08','D') AND END.DATE<=ICONV('04/03/09','D')           ; * JMK88 ; * JMK109
            REBATE.FLG=1                 ; * JMK88
            OLD.PCT=35                   ; * JMK88
            NEW.PCT=20                   ; * JMK88

         CASE CLIENT='01271' AND END.DATE>=ICONV('04/01/08','D') AND END.DATE<=ICONV('04/03/09','D')           ; * JMK88 ; * JMK109
            REBATE.FLG=1                 ; * JMK88
            OLD.PCT=35                   ; * JMK88
            NEW.PCT=20                   ; * JMK88

         CASE CLIENT='01282' AND END.DATE>=ICONV('04/01/08','D') AND END.DATE<=ICONV('04/03/09','D')           ; * JMK88 ; * JMK109
            REBATE.FLG=1                 ; * JMK88
            OLD.PCT=35                   ; * JMK88
            NEW.PCT=20                   ; * JMK88

         CASE CLIENT='01360' AND END.DATE>=ICONV('04/01/08','D') AND END.DATE<=ICONV('04/03/09','D')           ; * JMK88 ; * JMK109
            REBATE.FLG=1                 ; * JMK88
            OLD.PCT=35                   ; * JMK88
            NEW.PCT=20                   ; * JMK88

         CASE CLIENT='01382' AND END.DATE>=ICONV('04/01/08','D') AND END.DATE<=ICONV('04/03/09','D')           ; * JMK88 ; * JMK109
            REBATE.FLG=1                 ; * JMK88
            OLD.PCT=35                   ; * JMK88
            NEW.PCT=20                   ; * JMK88

         CASE CLIENT='01389' AND END.DATE>=ICONV('04/01/08','D') AND END.DATE<=ICONV('04/03/09','D')           ; * JMK88 ; * JMK109
            REBATE.FLG=1                 ; * JMK88
            OLD.PCT=35                   ; * JMK88
            NEW.PCT=20                   ; * JMK88

         CASE CLIENT='01411' AND END.DATE>=ICONV('04/01/08','D') AND END.DATE<=ICONV('04/03/09','D')           ; * JMK88 ; * JMK109
            REBATE.FLG=1                 ; * JMK88
            OLD.PCT=35                   ; * JMK88
            NEW.PCT=20                   ; * JMK88

         CASE CLIENT='01418' AND END.DATE>=ICONV('04/01/08','D') AND END.DATE<=ICONV('04/03/09','D')           ; * JMK88 ; * JMK109
            REBATE.FLG=1                 ; * JMK88
            OLD.PCT=35                   ; * JMK88
            NEW.PCT=20                   ; * JMK88

         CASE CLIENT='01432' AND END.DATE>=ICONV('04/01/08','D') AND END.DATE<=ICONV('04/03/09','D')           ; * JMK88 ; * JMK109
            REBATE.FLG=1                 ; * JMK88
            OLD.PCT=35                   ; * JMK88
            NEW.PCT=20                   ; * JMK88

         CASE CLIENT='01457' AND END.DATE>=ICONV('04/01/08','D') AND END.DATE<=ICONV('04/03/09','D')           ; * JMK88 ; * JMK109
            REBATE.FLG=1                 ; * JMK88
            OLD.PCT=27                   ; * JMK88
            NEW.PCT=20                   ; * JMK88

         CASE CLIENT='01597' AND END.DATE>=ICONV('04/01/08','D') AND END.DATE<=ICONV('04/03/09','D')           ; * JMK88 ; * JMK109
            REBATE.FLG=1                 ; * JMK88
            OLD.PCT=35                   ; * JMK88
            NEW.PCT=20                   ; * JMK88

         CASE CLIENT='01604' AND END.DATE>=ICONV('04/01/08','D') AND END.DATE<=ICONV('04/03/09','D')           ; * JMK88 ; * JMK109
            REBATE.FLG=1                 ; * JMK88
            OLD.PCT=35                   ; * JMK88
            NEW.PCT=20                   ; * JMK88

         CASE CLIENT='01654' AND END.DATE>=ICONV('05/01/08','D') AND END.DATE<=ICONV('04/03/09','D')           ; * JMK100 ; * JMK109
            REBATE.FLG=1                 ; * JMK100
            OLD.PCT=35                   ; * JMK100
            NEW.PCT=20                   ; * JMK100

         CASE CLIENT='01686' AND END.DATE>=ICONV('05/01/08','D') AND END.DATE<=ICONV('04/03/09','D')           ; * JMK100 ; * JMK109
            REBATE.FLG=1                 ; * JMK100
            OLD.PCT=35                   ; * JMK100
            NEW.PCT=20                   ; * JMK100

         CASE CLIENT='89997' AND END.DATE>=ICONV('04/01/08','D') AND END.DATE<=ICONV('04/03/09','D')           ; * JMK88 ; * JMK109
            REBATE.FLG=1                 ; * JMK88
            OLD.PCT=35                   ; * JMK88
            NEW.PCT=20                   ; * JMK88
         CASE 1 ; REBATE.FLG=0           ; * JMK88
            OLD.PCT=0                    ; * JMK88
            NEW.PCT=0                    ; * JMK88
      END CASE                           ; * JMK88

***********************************************************************
600:* Enter report type
***********************************************************************
      LN='Enter Report Type:'
      MASK='R':MASK.CHAR
      HELP='[R]=Regular [W]=Carr Warning [M]=Min Charge [O]=OLA-Ovc [F]=Build File [X]=Back'
      CRT @(0,11):LN:@(-3)
      CALL GEN.IN(0,11,LN:MASK,'',Q,0,2,'','',2,-2,11,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI='R'
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            CRT @(0,11):@(-3)
            IF AUTO THEN GOTO 200 ELSE GOTO 400
         CASE QI='R'
            REPORT.TYPE='R'
            CRT @(0,11):LN:REPORT.TYPE'L#2':'Regular':@(-3)
         CASE QI='W'
            REPORT.TYPE='W'
            CRT @(0,11):LN:REPORT.TYPE'L#2':'Carrier Warning':@(-3)
         CASE QI='M'
            REPORT.TYPE='M'
            CRT @(0,11):LN:REPORT.TYPE'L#2':'Minimum Charge':@(-3)
         CASE QI='O'
            REPORT.TYPE='O'
            CRT @(0,11):LN:REPORT.TYPE'L#2':'OLA-Ovc':@(-3)
         CASE QI='F'
            REPORT.TYPE='F'
            CRT @(0,11):LN:REPORT.TYPE'L#2':'Build File':@(-3)
            BILLDATA.REC=''
            OPEN '','VOC' TO F.VOC ELSE
               CALL ELINE('Unable to open VOC file - Call IS Department.')
               STOP
            END
            READ BILLDATA.REC FROM F.VOC,'BILLDATA' ELSE
               CALL ELINE('Unable to open "VOC BILLDATA" - Call IS Department.')
               STOP
            END
            BILLDATA.REC<2>:='\':USER
            WRITE BILLDATA.REC ON F.VOC,'BILLDATA.':USER ELSE
               CALL ELINE('Your user name "':USER:'" is not in the BILLDATA folder - call IS Department.')
               STOP
            END
            OPEN '','BILLDATA.':USER TO BILLDATA ELSE
               CALL ELINE('Unable to open "BILLDATA"':USER:' - call IS Department.')
               STOP
            END
            DARRAY=''
         CASE 1
            GOTO 600
      END CASE

***********************************************************************
700:* Send report to hold file?
***********************************************************************
      LN='Send Report to Hold File?:'
      MASK='N':MASK.CHAR
      HELP='[Y]=Yes [N]=No [X]=Back [EX]=Exit'
      CRT @(0,13):LN:@(-3)
      CALL GEN.IN(0,13,LN:MASK,'',Q,0,2,'','',2,-2,13,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI='N'
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            CRT @(0,13):@(-3)
            GOTO 600
         CASE QI='N' OR QI='0'
            CRT @(0,13):LN:'No'
            HOLD.STAT=0
         CASE QI='Y' OR QI='1'
            CRT @(0,13):LN:'Yes'
            HOLD.STAT=1
            EXECUTE 'SP-ASSIGN HSF0'
         CASE 1
            GOTO 700
      END CASE

***********************************************************************
800:* Override all copies to 1?
***********************************************************************
      ONE.COPY=0
      SUMMARY.ONLY=0
      IF HOLD.STAT THEN GOTO 900
      LN='Override Copies in Client Record to only 1?:'
      MASK=''
      IF REPORT.TYPE='F' THEN MASK='S'
      IF REPORT.TYPE='O' THEN MASK='Y'
      IF MASK='' THEN MASK='N'
      MASK=MASK:MASK.CHAR
      HELP='[Y]=Yes [N]=No [S]=Summary of Charges Only [X]=Back [EX]=Exit'
      CRT @(0,15):LN:@(-3)
      CALL GEN.IN(0,15,LN:MASK,'',Q,0,2,'','',2,-2,15,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' AND REPORT.TYPE='F' THEN QI='S'
      IF QI='' AND REPORT.TYPE='O' THEN QI='Y'
      IF QI='' THEN QI='N'
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            CRT @(0,15):@(-3)
            GOTO 700
         CASE QI='S'
            IF REPORT.TYPE#'R' AND REPORT.TYPE#'F' THEN
               CALL ELINE('Summary of Charges Only option not valid for this report type.')
               GOTO 800
            END
            ONE.COPY=0
            SUMMARY.ONLY=1
            CRT @(0,15):LN:'Summary of Charges Only':@(-3)
         CASE QI='N' OR QI='0'
            ONE.COPY=0
            SUMMARY.ONLY=0
            CRT @(0,15):LN:'No, Do Not Override Copies':@(-3)
         CASE QI='Y' OR QI='1'
            ONE.COPY=1
            SUMMARY.ONLY=0
            CRT @(0,15):LN:'Yes, Override Copies':@(-3)
         CASE 1
            GOTO 800
      END CASE

***********************************************************************
900:* List only variances?
***********************************************************************
      LN='Only Bills with a Non-Logistics Variance?:No * THIS OPTION HAS BEEN DISABLED *'
      MASK='N':MASK.CHAR
      HELP='[Y]=Yes [N]=No [X]=Back [EX]=Exit'
      CRT @(0,17):LN:@(-3)
      CALL GEN.IN(42,17,MASK,'',Q,0,2,'','',2,42,17,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI='N'
      IF NOT(QI='EX' OR QI='X') THEN QI='N'        ; * This option is disabled and ONLY.VARIANCES=0 Always no matter what is entered
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            CRT @(0,17):@(-3)
            IF HOLD.STAT THEN GOTO 700 ELSE GOTO 800
         CASE QI='N' OR QI='0'
            ONLY.VARIANCES=0
            CRT @(0,17):LN:@(-3)
         CASE QI='Y' OR QI='1'
            ONLY.VARIANCES=1
            CRT @(0,17):LN:'Yes':@(-3)
         CASE 1
            GOTO 900
      END CASE
      IF ONLY.VARIANCES=0 THEN LOG.ONLY='N' ELSE LOG.ONLY='Y'

***********************************************************************
1000:* Separate report for each region?
***********************************************************************
      BACK.FLAG=0
      LN='Separate Report for each Region?:'
      MASK='Y':MASK.CHAR
      HELP='[Y]=Yes [N]=No [X]=Back [EX]=Exit'
      CRT @(0,19):LN:@(-3)
      CALL GEN.IN(0,19,LN:MASK,'',Q,0,2,'','',2,-2,19,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI='N'
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            CRT @(0,19):@(-3)
            GOTO 900
         CASE QI='N' OR QI='0'
            SEPARATE.REGIONS=0
            CRT @(0,19):LN:'No':@(-3)
         CASE QI='Y' OR QI='1'
            SEPARATE.REGIONS=1
            CRT @(0,19):LN:'Yes':@(-3)
         CASE 1
            GOTO 1000
      END CASE

1010:
      IF SEPARATE.REGIONS=0 AND BACK.FLAG=1 THEN GOTO 1000
      IF SEPARATE.REGIONS=0 THEN GOTO 1020
      LN='Enter Region:'
      MASK='ALL':STR(MASK.CHAR,2)
      HELP='Enter Region Code. [ALL]=All Regions [L]=List Regions [X]=Back [EX]=Exit'
      CRT @(55,19):LN:@(-3)
      CALL GEN.IN(55,19,LN:MASK,'',Q,0,5,'','',2,-5,19,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI='ALL'
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            CRT @(40,19):@(-3)
            GOTO 1000
         CASE QI='ALL'
            Q='ALL'

         CASE QI='L'
            EXECUTE 'SORT REGION.CODES,':CLIENT:' CITY.STATE HEADING "List of all region codes for ':CLIENT:' - ':CLIENT.NAME:"'CL'":'"'
            CALL ELINE('')
            CALL AFS.SCR.HEAD(CO.ID,FILE.ID,PERIOD,PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            CRT @(0,2):STR('=',79)
            GOSUB REDRAW.SCREEN
            GOTO 1010
         CASE 1
            GOTO 1010
      END CASE
      REGIONAL.ID=Q
      IF REGION='Y' AND Q#'ALL' THEN
         MATREAD REG.CODE.REC FROM F.REGION,Q ELSE
            CALL ELINE('Region ':Q:' has not been set up.')
            GOTO 1010
         END
      END
      CRT @(55,19):LN:REGIONAL.ID:@(-3)

***********************************************************************
1020:* Verify selection criteria is correct
***********************************************************************
      LN='Verify the above input. Select:'
      MASK=STR(MASK.CHAR,2)
      HELP='[ENTER]=Continue [X]=Back [EX]=Exit'
      CALL GEN.IN(0,22,LN:MASK,'',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            CRT @(0,22):@(-3)
            BACK.FLAG=1
            GOTO 1010
         CASE QI=''
            NULL
         CASE 1
            GOTO 1020
      END CASE

      LOGGING.FLAG = 1
      LOG.HDR.ID = "FB.3.1.NEW*":CLIENT:"*":DATE()           ; * Set this once for each running of this program
      LOG.SEQ.NO = 0                     ; * Set to zero for creation of log header record
      PROC.DESC = "Start logging progress"

      PROC.EMAIL = ""
      LOG.ST.DATE = DATE() ; LOG.ST.TIME = TIME() ; LOG.END.DATE = '' ; LOG.END.TIME = '' ; LOG.REFS = ''
      GOSUB UPD.PROC.LOGF

      IF NOT(AUTO) OR SEPARATE.REGIONS OR ONLY.VARIANCES OR REPORT.TYPE#'R' THEN
         CHECK.AR.BRIDGE=0
      END

* End of data entry
      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK HERE TO BEGIN DEBUG 10...')


* Build Expense and Region arrays

      IF EXPENSE='Y' THEN
         EXECUTE 'SSELECT EXPENSE.CODES,':CLIENT PASSLIST CAPTURING OUTPUT
         NUM.ITMS=@SELECTED
         DONE=0
         LOOP
            READNEXT EXP.ID ELSE DONE=1
         UNTIL DONE DO
            READ EXP.REC FROM F.EXPENSE,EXP.ID THEN
               EXPS<1,-1>=EXP.ID
               EXPS<2,-1>=EXP.REC<2>'R0'
               EXPS<3,-1>=EXP.REC<3>'R0'
               EXPS<4,-1>=EXP.REC<4>'R0'

               YTD.EXP.TOT = 0           ; * NPR14
               IF EXP.REC<2> NE "" THEN YTD.EXP.TOT += EXP.REC<2>      ; * NPR14
               IF EXP.REC<3> NE "" THEN YTD.EXP.TOT += EXP.REC<3>      ; * NPR14
               IF EXP.REC<4> NE "" THEN YTD.EXP.TOT += EXP.REC<4>      ; * NPR14
               EXPS<8,-1>=YTD.EXP.TOT 'R0'         ; * NPR14
            END
         REPEAT
         NUM.EXPS=DCOUNT(EXPS<1>,@VM)
      END ELSE
         NUM.EXPS=0
      END                                ; * IF EXPENSE='Y'

      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK HERE TO BEGIN DEBUG 20...')

      REGS=''
      IF REGION='Y' THEN
         STMT='SSELECT REGION.CODES,':CLIENT
         IF REGIONAL.ID#'ALL' THEN
            STMT:=' WITH REG EQ ':REGIONAL.ID
         END
         EXECUTE STMT PASSLIST CAPTURING OUTPUT
         NUM.ITMS=@SELECTED
         CNTR=0
         DONE=0
         LOOP
            READNEXT REG.ID ELSE DONE=1
         UNTIL DONE DO
            MATREAD REG.CODE.REC FROM F.REGION,REG.ID THEN
               CNTR+=1
               BEGIN CASE

                  CASE CLIENT='01638' OR CLIENT = "01267"    ; * JMK108  ; *NPR16
                     REGS<1,CNTR>=REG.ID
                  CASE 1
                     REGS<1,CNTR>=REG.ID
               END CASE
               REGS<2,CNTR>=REG.O.YTD'R0'
               REGS<3,CNTR>=REG.I.YTD'R0'
               REGS<4,CNTR>=REG.T.YTD'R0'
* REGS<5>, REGS<6>, REGS<7> are used for processing later

* REG.CODE.REC(9) is multi-valued TO: Email address attribute for this region
               REGS<8,CNTR,-1>=CHANGE(REG.CODE.REC(9),@VM,@SVM)

* REG.CODE.REC(12) is multi-valued CC: Email address attribute for this region
               REGS<9,CNTR,-1>=CHANGE(REG.CODE.REC(12),@VM,@SVM)

* REG.CODE.REC(13) is multi-valued BCC: Email address attribute for this region
               REGS<10,CNTR,-1>=CHANGE(REG.CODE.REC(13),@VM,@SVM)

* REG.CODE.REC(11) is the region description
               REGS<11,CNTR>=REG.CODE.REC(11)
* REG.CODE.REC(14) is the division Street Address                                                ;* NPR09
               REGS<12,CNTR>=REG.CODE.REC(14)      ; * NPR09
            END                          ; * MATREAD REG.CODE.REC FROM F.REGION,REG.ID
         REPEAT
         NUM.REGS=DCOUNT(REGS<1>,@VM)    ; * NUM.REGS=NUM.ITMS=@SELECTED
      END ELSE
         NUM.REGS=0
      END                                ; * IF REGION='Y'
      STMT='SSELECT REGION.CODES,':CLIENT:' WITH 7 NE "I"'
      EXECUTE STMT CAPTURING RESULT
      EOF=0
      LOOP
         READNEXT REG.ID ELSE EOF=1
      UNTIL EOF DO
         REG.LIST<1,-1>=REG.ID
      REPEAT

      STMT='SSELECT DIVISION.CODES,':CLIENT:' WITH 7 # "I"'  ; * JMK137
      EXECUTE STMT CAPTURING RESULT      ; * JMK137
      EOF=0                              ; * JMK137
      LOOP                               ; * JMK137
         READNEXT DIV.ID ELSE EOF=1      ; * JMK137
      UNTIL EOF DO                       ; * JMK137
         DIV.LIST<1,-1>=DIV.ID           ; * JMK137
      REPEAT                             ; * JMK137

      REGEXP.ARRAY = REG.LIST            ; * Start with MV list of all divisions ;* NPR10

      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK HERE TO BEGIN DEBUG 30...') ; 

      IF VARIANCE='Y' OR VARIANCE='A' THEN
         EXECUTE 'SSELECT VARIANCE.CODES,':CLIENT PASSLIST CAPTURING OUTPUT
         NUM.ITMS=@SELECTED
         DONE=0
         LOOP
            READNEXT VAR.ID ELSE DONE=1
         UNTIL DONE DO
            READ VAR.REC FROM F.VARIANCE,VAR.ID THEN
               VARS<1,-1>=VAR.ID
               VARS<3,-1>=VAR.REC<2>'R0'
            END
         REPEAT
      END                                ; * IF VARIANCE='Y' OR VARIANCE='A'


* Calculate current and year to date logistics fees

      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK HERE TO BEGIN DEBUG 40...')

      C.LOGIS.FEE=0
      Y.LOGIS.FEE=0
      PREC='SSELECT FB.LOGISTICS WITH 1 LE "':OCONV(END.DATE,'D2/')
      PREC=PREC:'" AND WITH 1 GE "':OCONV(FYR.DATE,'D2/')
      PREC=PREC:'" AND WITH CLIENT# EQ "':CLIENT:'"'
      EXECUTE PREC PASSLIST CAPTURING OUTPUT
      NUM.ITMS=@SELECTED
      DONE=0
      C.LOGIS.FEE=''
      LOOP
         READNEXT LOG.ID ELSE DONE=1
      UNTIL DONE DO
         READ LOG.REC FROM F.LOGS,LOG.ID THEN
            Y.LOGIS.FEE=Y.LOGIS.FEE+LOG.REC<2>
            IF LOG.REC<1> GE BEG.DATE THEN
               C.LOGIS.FEE<2>=C.LOGIS.FEE<2>+LOG.REC<2>
               IF LOG.REC<3>#'' THEN
                  NUM.OF.ITEM=DCOUNT(LOG.REC<3>,@VM)
                  FOR XX=1 TO NUM.OF.ITEM
                     LOCATE LOG.REC<3,XX> IN C.LOGIS.FEE<3> SETTING LOG.POS.FEE THEN
                        C.LOGIS.FEE<4,LOG.POS.FEE>=C.LOGIS.FEE<4,LOG.POS.FEE>+LOG.REC<4,XX>
                     END ELSE
                        C.LOGIS.FEE=INSERT(C.LOGIS.FEE,3,LOG.POS.FEE,0,LOG.REC<3,XX>)
                        C.LOGIS.FEE=INSERT(C.LOGIS.FEE,4,LOG.POS.FEE,0,LOG.REC<4,XX>)
                     END
                  NEXT XX
               END                       ; * IF LOG.REC<3>#''
            END                          ; * IF LOG.REC<1> GE BEG.DATE
         END                             ; * READ LOG.REC FROM F.LOGS,LOG.ID
      REPEAT

* Calculate current and year to date programming fees

      C.PROG.FEE=0
      Y.PROG.FEE=0
      PREC='SSELECT FB.PROG.FEE WITH 1 LE "':OCONV(END.DATE,'D2/')
      PREC=PREC:'" AND WITH 1 GE "':OCONV(FYR.DATE,'D2/')
      PREC=PREC:'" AND WITH CLIENT# EQ "':CLIENT:'"'
      EXECUTE PREC PASSLIST CAPTURING OUTPUT
      NUM.ITMS=@SELECTED
      DONE=0
      C.PROG.FEE=''
      LOOP
         READNEXT PROG.ID ELSE DONE=1
      UNTIL DONE DO
         READ PROG.REC FROM F.PROG.FEE,PROG.ID THEN
            Y.PROG.FEE=Y.PROG.FEE+PROG.REC<2>
            IF PROG.REC<1> GE BEG.DATE THEN
               C.PROG.FEE<2>=C.PROG.FEE<2>+PROG.REC<2>
               IF PROG.REC<3>#'' THEN
                  NUM.OF.ITEM=DCOUNT(PROG.REC<3>,@VM)
                  FOR XX=1 TO NUM.OF.ITEM
                     LOCATE PROG.REC<3,XX> IN C.PROG.FEE<3> SETTING PROG.POS.FEE THEN
                        C.PROG.FEE<4,PROG.POS.FEE>=C.PROG.FEE<4,PROG.POS.FEE>+PROG.REC<4,XX>
                     END ELSE
                        C.PROG.FEE=INSERT(C.PROG.FEE,3,PROG.POS.FEE,0,PROG.REC<3,XX>)
                        C.PROG.FEE=INSERT(C.PROG.FEE,4,PROG.POS.FEE,0,PROG.REC<4,XX>)
                     END
                  NEXT XX
               END                       ; * IF PROG.REC<3>#''
            END                          ; * IF PROG.REC<1> GE BEG.DATE
         END                             ; * READ PROG.REC FROM F.PROG.FEE,PROG.ID
      REPEAT

* Calculate current and year to date managed return fees

      C.MNGD.RTNS=0
      Y.MNGD.RTNS=0
      STMT.MR='SELECT FB.MANG.RTRNS WITH 1 GE "':BEG.DATE'D2/'
      STMT.MR=STMT.MR:'" AND WITH 1 LE "':END.DATE'D2/'
      STMT.MR=STMT.MR:'" AND WITH CLIENT# EQ "':CLIENT:'"'
      EXECUTE STMT.MR PASSLIST CAPTURING OUTPUT
      NUM.ITMS = @SELECTED
      DONE=0
      C.MNGD.RTNS=''
      LOOP
         READNEXT MR.ID ELSE DONE=1
      UNTIL DONE DO
         READ MR.REC FROM F.MNGD.RTNS,MR.ID THEN
            Y.MNGD.RTNS=Y.MNGD.RTNS+MR.REC<2>
            IF MR.REC<1> GE BEG.DATE THEN
               C.MNGD.RTNS<2>=C.MNGD.RTNS<2>+MR.REC<2>
               IF MR.REC<3>#'' THEN
                  NUM.OF.ITEM=DCOUNT(MR.REC<3>,@VM)
                  FOR XX=1 TO NUM.OF.ITEM
                     LOCATE MR.REC<3,XX> IN C.MNGD.RTNS<3> SETTING MR.POS.FEE THEN
                        C.MNGD.RTNS<4,MR.POS.FEE>=C.MNGD.RTNS<4,MR.POS.FEE>+MR.REC<4,XX>
                     END ELSE
                        C.MNGD.RTNS=INSERT(C.MNGD.RTNS,3,MR.POS.FEE,0,MR.REC<3,XX>)
                        C.MNGD.RTNS=INSERT(C.MNGD.RTNS,4,MR.POS.FEE,0,MR.REC<4,XX>)
                     END
                  NEXT XX
               END
            END
         END
      REPEAT

* Calculate current and year to date claims fees

      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK HERE TO BEGIN DEBUG 50...')

      C.CLAIMS.FEE=0
      Y.CLAIMS.FEE=0
      PREC='SSELECT FB.CLAIMS WITH 1 LE "':OCONV(END.DATE,'D2/')
      PREC=PREC:'" AND WITH 1 GE "':OCONV(FYR.DATE,'D2/')
      PREC=PREC:'" AND WITH CLIENT# EQ "':CLIENT:'"'
      EXECUTE PREC PASSLIST CAPTURING OUTPUT
      NUM.ITMS=@SELECTED
      DONE=0
      C.CLAIMS.FEE=''
      LOOP
         READNEXT CLAIMS.ID ELSE DONE=1
      UNTIL DONE DO
         READ CLAIMS.REC FROM F.CLAIMS,CLAIMS.ID THEN
            Y.CLAIMS.FEE=Y.CLAIMS.FEE+CLAIMS.REC<2>
            IF CLAIMS.REC<1> GE BEG.DATE THEN
               C.CLAIMS.FEE<2>=C.CLAIMS.FEE<2>+CLAIMS.REC<2>
               IF CLAIMS.REC<3>#'' THEN
                  NUM.OF.ITEM=DCOUNT(CLAIMS.REC<3>,@VM)
                  FOR XX=1 TO NUM.OF.ITEM
                     LOCATE CLAIMS.REC<3,XX> IN C.CLAIMS.FEE<3> SETTING CLAIMS.POS.FEE THEN
                        C.CLAIM.FEE<4,CLAIMS.POS.FEE>=C.CLAIMS.FEE<4,CLAIMS.POS.FEE>+CLAIMS.REC<4,XX>
                     END ELSE
                        C.CLAIMS.FEE=INSERT(C.CLAIMS.FEE,3,CLAIMS.POS.FEE,0,CLAIMS.REC<3,XX>)
                        C.CLAIMS.FEE=INSERT(C.CLAIMS.FEE,4,CLAIMS.POS.FEE,0,CLAIMS.REC<4,XX>)
                     END
                  NEXT XX
               END                       ; * IF CLAIMS.REC<3>#''
            END                          ; * IF CLAIMS.REC<1> GE BEG.DATE
         END                             ; * READ CLAIMS.REC FROM F.CLAIMS,CLAIMS.ID
      REPEAT

* Calculate current and year to date adjustments
      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK HERE TO BEGIN DEBUG 60...')

      C.ADJUSTS=0
      Y.ADJUSTS=0
      PREC='SSELECT FB.ADJUSTS WITH 1 LE "':END.DATE'D2/'
      PREC=PREC:'" AND WITH 1 GE "':FYR.DATE'D2/'
      PREC=PREC:'" AND WITH CLIENT# EQ "':CLIENT:'"'
      EXECUTE PREC PASSLIST CAPTURING OUTPUT
      NUM.ITMS=@SELECTED
      DONE=0
      LOOP
         READNEXT ADJ.ID ELSE DONE=1
      UNTIL DONE DO
         READ ADJ.REC FROM F.ADJUSTS,ADJ.ID THEN
            HIST.ID=ADJ.REC<3>:'*':ADJ.REC<5>:'*0'
            READV ENT.DATE FROM F.HIST,HIST.ID,30 ELSE ENT.DATE=''
            IF ENT.DATE='' THEN PROC.DATE=0
* Check for entry date in same period as adjustment
            IF ENT.DATE<BEG.DATE THEN
               Y.ADJUSTS+=ADJ.REC<2>
               IF ADJ.REC<1> GE BEG.DATE THEN C.ADJUSTS+=ADJ.REC<2>
            END
         END                             ; * READ ADJ.REC FROM F.ADJUSTS,ADJ.ID
      REPEAT
      LOCATE END.DATE IN CLIENT.REC<84> BY 'AR' SETTING EFF.DATE.POS ELSE
         EFF.DATE.POS=EFF.DATE.POS-1
      END

* Select printer

      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK HERE TO BEGIN DEBUG 70...')

      CALL FB.FORM(F.NUM)
      BEGIN CASE
         CASE F.NUM=15 OR F.NUM=20 OR F.NUM=25 OR F.NUM=40 OR F.NUM=50
            IF WIDTH=198 AND F.NUM=50 THEN
               CALL ELINE('Invalid Printer. Report will be rerouted to the FREIGHT PAYMENT printer.')
               F.NUM=15
            END
         CASE 1
            CALL ELINE('Invalid Printer. Report will be rerouted to the FREIGHT PAYMENT printer.')
            F.NUM=15
      END CASE

      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK HERE TO BEGIN DEBUG 80...')

* Top of loop for doing separate regions

START.REPORT.FOR.SEPARATE.REGIONS:

      REG.COUNT=0                        ; * Initially set region counter to zero

      TOTAL.DIST.MIDS=''
      TOTAL.DIST.IDS=''
      TOTAL.DIST.AMTS=''
***********************************************************************
SEPARATE.REGIONS.START.LOOP:
***********************************************************************

      REG.COUNT+=1                       ; * Current region counter
      DIST.MIDS=''
      DIST.IDS=''
      DIST.AMTS=''
      IF SEPARATE.REGIONS THEN VARS=''
      FOR XX=1 TO NUM.EXPS
         EXPS<5,XX>=''
         EXPS<6,XX>=''
         EXPS<7,XX>=''
      NEXT XX
      FOR XX=1 TO NUM.REGS
         REGS<5,XX>=''
         REGS<6,XX>=''
         REGS<7,XX>=''
      NEXT XX

      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK TO BEGIN DEBUG 90...')

      IF SEPARATE.REGIONS THEN
         TEXT=USER:'... Now processing region ':REGS<1,REG.COUNT>:' ':REGS<11,REG.COUNT>:'  which is # ':REG.COUNT:' of ':NUM.REGS:@(-4)
         CALL PROG.BAR(5,REG.COUNT,NUM.REGS,'')
      END ELSE

         TEXT=USER:'... Building Reports for client ':CLIENT:' ':CLIENT.NAME:@(-4)         ; * JMK65
      END
      CRT @(0,3):@(-3):@(0,3):TEXT:@(0,7)

      BILLING.REC=0                      ; * JMK153
      PCL.CNT=0                          ; * JMK153
      PCL.SLS.ARRAY=''                   ; * JMK153
      PCL.SOC.ARRAY=''                   ; * JMK153
      PCL.INV.ARRAY=''                   ; * JMK153
      PCL.SAVINGS=''                     ; * JMK153
      PCL.VIN=''                         ; * JMK153
      PCL.VIN<1>=CLIENT                  ; * JMK153
      IF SEPARATE.REGIONS THEN           ; * JMK153
         PCL.VIN<2>=REGS<1,REG.COUNT>    ; * JMK153
      END                                ; * JMK153
      PCL.VIN<3>=BEG.DATE                ; * JMK153
      PCL.VIN<4>=END.DATE                ; * JMK153
      PCL.VIN<5>=FYR.DATE                ; * JMK153
      IF SEPARATE.REGIONS THEN           ; * JMK153
         PCL.VIN<6>='R'                  ; * JMK153
      END                                ; * JMK153

      CALL FB.PCL.BILLING.SELECT(PCL.VIN,PCL.VOUT,PCL.SLS.ARRAY,PCL.SOC.ARRAY,PCL.INV.ARRAY,F.PCL.BILL)        ; * JMK153
      BILLING.REC=PCL.VOUT<1>            ; * JMK153
      PCL.SAVINGS=PCL.VOUT<2>            ; * JMK153
      PCL.CONTROL=PCL.VOUT<3>            ; * JMK153
      IF BILLING.REC=1 THEN              ; * JMK153
         PCL.CNT=1                       ; * JMK153
      END                                ; * JMK153


* Select bills to process

* A copy of the select statement that gets executed is saved into
* 2 variables (SAVE.STMT1 & SAVE.STMT2) - The two variables make up
* the entire select statement.  Where the statement is broken into
* the two sections is where the SORT SELECT needs to add the statement
* to exclude the rejected bills -
***********************************************************************
      IF AUTO THEN

         LOG.SEQ.NO = 1                  ; * Start
         PROC.DESC = \SELECT FB.UNPROCESS,\:CLIENT
         LOG.ST.DATE = DATE() ; LOG.ST.TIME = TIME() ; LOG.END.DATE = '' ; LOG.END.TIME = '' ; LOG.REFS = ""
         GOSUB UPD.PROC.LOGF

         UP.STMT='SELECT FB.UNPROCESS,':CLIENT:' WITH FILE.NAME EQ "FB.BILLS,':CLIENT:'"'  ; *JMK117
         IF SEPARATE.REGIONS THEN        ; * JMK117
            UP.STMT:=' AND WITH FB.REG EQ "':REGS<1,REG.COUNT>:'"'     ; * JMK117
         END                             ; * JMK117
         UP.STMT:=' ITEM.NAME'           ; * JMK117
         EXECUTE UP.STMT PASSLIST CAPTURING OUTPUT           ; * JMK117

         LOG.SEQ.NO = 1                  ; * End
         PROC.DESC = \SELECT FB.UNPROCESS,\:CLIENT
         LOG.ST.DATE = '' ; LOG.ST.TIME = '' ; LOG.END.DATE = DATE() ; LOG.END.TIME = TIME() ; LOG.REFS = UP.STMT
         LOG.REFS<1,-1> = OUTPUT<2>
         GOSUB UPD.PROC.LOGF

         UP.CNT=@SELECTED                ; * JMK117
         IF UP.CNT>0 THEN BILLING.REC=1  ; * JMK153

         IF BILLING.REC=0 THEN           ; * JMK117 ; * JMK153
* No records were found that matched these criteria
            IF FROM.PROCESS THEN
               IF SEPARATE.REGIONS THEN
                  IF REG.COUNT<NUM.REGS THEN
                     GOTO SEPARATE.REGIONS.START.LOOP        ; * Process the next region
                  END ELSE
                     GOTO FINISHED.WITH.REGIONS
                  END
               END ELSE
                  GOTO END.SEND.EMAIL
               END
            END ELSE
               IF SEPARATE.REGIONS THEN
                  IF REG.COUNT<NUM.REGS THEN
                     GOTO SEPARATE.REGIONS.START.LOOP        ; * Process the next region
                  END ELSE
                     GOTO FINISHED.WITH.REGIONS
                  END
               END ELSE
                  GOTO FINISHED.WITH.REGIONS
               END
            END                          ; * IF FROM.PROCESS
         END                             ; * IF SYSTEM(11)


      END

      IF FILE='FB.BILLS,':CLIENT THEN
* Select from FB BILLS
         STMT='SSELECT ':FILE:' WITH 30 GE "':OCONV(BEG.DATE,'D2/')
         STMT:='" AND WITH 30 LE "':OCONV(END.DATE,'D2/'):'"'
         IF CLIENT[1,2]#'99' THEN
            IF FILE.SEL=1 THEN
               STMT:=' AND WITH 39 EQ "O"'         ; * Select verified bills
            END ELSE
               STMT:=' AND WITH 39 NE "R"'         ; * Non rejected bills
            END
         END
      END ELSE
* Select from FB.BILLS.HIST
         STMT='SSELECT ':FILE:' WITH 37 GE "':OCONV(BEG.DATE,'D2/')
         STMT:='" AND WITH 37 LE "':OCONV(END.DATE,'D2/'):'"'
      END                                ; * IF FILE='FB.BILLS,':CLIENT

      IF SEPARATE.REGIONS THEN
         STMT:=' AND WITH DIV.REG EQ "':REGS<1,REG.COUNT>:'"'
      END

      IF REPORT.TYPE='W' THEN STMT:=' AND WITH 48 EQ "Y"'
      IF REPORT.TYPE='M' THEN STMT:=' AND WITH 46 EQ "Y"'
      IF REPORT.TYPE='O' THEN STMT:=' AND WITH 11 LT "0" AND WITH 45 EQ "A"'
      IF ONLY.VARIANCES THEN
         IF USER='OWEN' AND DATE()=12337 THEN
            STMT:=' AND WITH 11 EQ "0"'
         END ELSE
            STMT:=' AND WITH 11 NE "0"'
         END
      END

* Include rejected bills

      IF FILE='FB.BILLS,':CLIENT OR REPORT.TYPE#'R' ELSE
* Select from FB.BILLS.HIST
         STMT:=' OR WITH 67 GE "':OCONV(BEG.DATE,'D2/')
         STMT:='" AND WITH 67 LE "':OCONV(END.DATE,'D2/'):'"'
         IF SEPARATE.REGIONS THEN
            STMT:=' AND WITH DIV.REG EQ "':REGS<1,REG.COUNT>:'"'
         END
         IF REPORT.TYPE='W' THEN STMT:=' AND WITH 48 EQ "Y"'
         IF REPORT.TYPE='M' THEN STMT:=' AND WITH 46 EQ "Y"'
         IF ONLY.VARIANCES THEN
            STMT:= ' AND WITH 11 NE "0"'
         END
      END                                ; * IF FILE='FB.BILLS,':CLIENT OR REPORT.TYPE#'R'

      STMT:=' BY CARRIER.NAME BY CARRIER# BY 2 BY 1 BY PRO'

      LOG.SEQ.NO = 2                     ; * Start
      PROC.DESC = 'Selecting Bills'
      LOG.ST.DATE = DATE() ; LOG.ST.TIME = TIME() ; LOG.END.DATE = '' ; LOG.END.TIME = '' ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF
      EXECUTE STMT PASSLIST CAPTURING OUTPUT

      UP.CNT=@SELECTED                   ; * JMK117
      IF UP.CNT>0 THEN BILLING.REC=1     ; * JMK153
      LOG.SEQ.NO = 2                     ; * End
      PROC.DESC = 'Selecting Bills'
      LOG.ST.DATE = '' ; LOG.ST.TIME = '' ; LOG.END.DATE = DATE() ; LOG.END.TIME = TIME() ; LOG.REFS = STMT
      LOG.REFS<1,-1> = OUTPUT<2>
      GOSUB UPD.PROC.LOGF

      IF BILLING.REC=1 ELSE              ; * JMK153
* No records were found that matched these criteria
         IF FROM.PROCESS THEN
            IF SEPARATE.REGIONS THEN
               IF REG.COUNT<NUM.REGS THEN
                  GOTO SEPARATE.REGIONS.START.LOOP           ; * Process the next region
               END ELSE
                  GOTO FINISHED.WITH.REGIONS
               END
            END ELSE
               GOTO END.SEND.EMAIL
            END
         END ELSE
            IF SEPARATE.REGIONS THEN
               IF REG.COUNT<NUM.REGS THEN
                  GOTO SEPARATE.REGIONS.START.LOOP           ; * Process the next region
               END ELSE
                  GOTO FINISHED.WITH.REGIONS
               END
            END ELSE
               GOTO FINISHED.WITH.REGIONS
            END
         END                             ; * IF FROM.PROCESS
      END                                ; * IF SYSTEM(11)

* Create a Save List WITH the rejected bills
      EXECUTE 'SAVE-LIST ':CH.NUM:'REJ' PASSLIST CAPTURING OUTPUT

* Create a Save List WITHOUT the rejected bills

      EXECUTE 'GET-LIST ':CH.NUM:'REJ' PASSLIST CAPTURING OUTPUT
      STMT='SSELECT ':FILE:' WITH 39 NE "R"'
      STMT:=' BY CARRIER.NAME BY CARRIER# BY 2 BY 1 BY PRO'

      LOG.SEQ.NO = 3                     ; * Start
      PROC.DESC = "Selecting ":FILE:" Non Rejects"
      LOG.ST.DATE = DATE() ; LOG.ST.TIME = TIME() ; LOG.END.DATE = '' ; LOG.END.TIME = '' ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF

      EXECUTE STMT PASSLIST CAPTURING OUTPUT

      LOG.SEQ.NO = 3                     ; * End
      PROC.DESC = "Selecting ":FILE:" Non Rejects"
      LOG.ST.DATE = '' ; LOG.ST.TIME = '' ; LOG.END.DATE = DATE() ; LOG.END.TIME = TIME() ; LOG.REFS = STMT
      LOG.REFS<1,-1> = OUTPUT<2>
      GOSUB UPD.PROC.LOGF

      EXECUTE 'SAVE-LIST ':CH.NUM PASSLIST CAPTURING OUTPUT

* Create a save list that is ONLY rejected bills

      EXECUTE 'GET-LIST ':CH.NUM:'REJ' PASSLIST CAPTURING OUTPUT
      STMT='SSELECT ':FILE:' WITH 39 EQ "R"'
      STMT:=' BY CARRIER.NAME BY CARRIER# BY 2 BY 1 BY PRO'

      LOG.SEQ.NO = 4                     ; * Start
      PROC.DESC = "Selecting ":FILE:" ONLY Rejects"
      LOG.ST.DATE = DATE() ; LOG.ST.TIME = TIME() ; LOG.END.DATE = '' ; LOG.END.TIME = '' ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF

      EXECUTE STMT PASSLIST CAPTURING OUTPUT

      LOG.SEQ.NO = 4                     ; * End
      PROC.DESC = "Selecting ":FILE:" ONLY Rejects"
      LOG.ST.DATE = '' ; LOG.ST.TIME = '' ; LOG.END.DATE = DATE() ; LOG.END.TIME = TIME() ; LOG.REFS = STMT
      LOG.REFS<1,-1> = OUTPUT<2>
      GOSUB UPD.PROC.LOGF

      EXECUTE 'SAVE-LIST ':CH.NUM:'REJONLY' PASSLIST CAPTURING OUTPUT

* Get the save list with the rejected bills included

      EXECUTE 'GET-LIST ':CH.NUM:'REJ' PASSLIST CAPTURING OUTPUT
      NUM.ITEMS=@SELECTED

* Start reading and processing bills for weekly reports

* NEW.SOC is a switch to control which SOC report to print.  The old SOC
* is for all clients with CLIENT.REC<144> > END.DATE.  This includes all
* existing clients that have had their SOC date set to 01/01/02.  The
* new SOC report is printed for everyone else, that is, for clients with
* a date in CLIENT.REC<144> <= END.DATE.

* The HTML version of SOC is only for NEW.SOC reports.

      NEW.SOC=CLIENT.REC<144><=END.DATE

      CARRIER.COUNT=0 ; TOT.CARR.BILL.NO=0 ; CARRIER.BILL.NO=0
      CAR.CAR.TOT=0 ; CAR.ACT.TOT=0 ; CAR.EXP.TOT=0 ; GRAND.EXP.TOT=0
      TOT.CAR.CAR.TOT=0 ; TOT.CAR.ACT.TOT=0 ; 
      NUM.OUT.PAID=0 ; NUM.IN.PAID=0 ; NUM.THIRD.PAID=0
      LTL.COUNT=0                        ; * DRF028
      NON.LTL.COUNT=0                    ; * DRF028
      PR.BILLS.COUNT=0                   ; * JMK20
      RELEASED.COUNT=0                   ; * JMK32
      Y.NUM.OUT.PAID=0 ; Y.NUM.IN.PAID=0 ; Y.NUM.THIRD.PAID=0
      NOB.REJ=0
      IN.CLT.CHG=0 ; OUT.CLT.CHG=0 ; THIRD.CLT.CHG=0
      OUT.CAR.CHG=0 ; Y.OUT.CAR.CHG=0
      IN.CAR.CHG=0 ; Y.IN.CAR.CHG=0
      THIRD.CAR.CHG=0 ; Y.THIRD.CAR.CHG=0
      DUP.NOT.PAID=0 ; Y.DUP.NOT.PAID=0 ; 
      OUT.CHG.DUE=0 ; Y.OUT.CHG.DUE=0
      REG.OUT.CHG.DUE=0 ; REG.IN.CHG.DUE=0 ; REG.TOTAL.CHG.DUE=0
      EXP.OUT.CHG.DUE=0 ; EXP.IN.CHG.DUE=0 ; EXP.TOTAL.CHG.DUE=0
      REG.THIRD.CHG.DUE=0 ; EXP.THIRD.CHG.DUE=0
      IN.CHG.DUE=0 ; Y.IN.CHG.DUE=0
      THIRD.CHG.DUE=0 ; Y.THIRD.CHG.DUE=0
      REBATE.BASE.OUT=0                  ; * JMK88
      REBATE.INCR.OUT=0                  ; * JMK88
      REBATE.BASE.IN=0                   ; * JMK88
      REBATE.INCR.IN=0                   ; * JMK88
      REBATE.BASE.THIRD=0                ; * JMK88
      REBATE.INCR.THIRD=0                ; * JMK88
      FAD=0 ; Y.FAD=0 ; FBD=0 ; Y.FBD=0
      C.BD.OVER.VAR=0 ; C.BD.DISC.VAR=0 ; C.BD.CONS.VAR=0 ; C.OVER.VAR=0
      Y.BD.OVER.VAR=0 ; Y.BD.DISC.VAR=0 ; Y.BD.CONS.VAR=0
* UPS INFO
      C.UPS.VAR=0 ; C.BD.UPS.VAR=0 ; Y.BD.UPS.VAR=0
      C.DISC.VAR=0 ; C.CONS.VAR=0
      TOTAL.COMMISSION=0
      C.OVER.COM=0 ; C.DISC.COM=0 ; C.CONS.COM=0 ; 
      C.MGMT.FEE=0                       ; * JMK07
      C.UPS.ADD.CORR.FEE=0
      C.UPS.LATE.PAYMENT.FEE=0
      C.UPS.COM=0
      NUM.EDI.OUT='' ; NUM.EDI.IN='' ; NUM.EDI.THIRD=''
      EDI.COUNT.ARRAY=''
      EDI.COUNT.PARCEL.NON.FEDEX.AIR=''
      EDI.MD.FEDEX.GROUND.COUNT=''
      Y.NUM.EDI.OUT=0 ; Y.NUM.EDI.IN=0 ; Y.NUM.EDI.THIRD=0
      NUM.NEVER.PAYS=0 ; Y.NUM.NEVER.PAYS=0
      AMT.NEVER.PAYS=0 ; Y.AMT.NEVER.PAYS=0
      NUM.HOLDS=0 ; Y.NUM.HOLDS=0
      AMT.HOLDS=0 ; Y.AMT.HOLDS=0
      NUM.RELEASED=0                     ; * JMK32
      CARRIER.ARRAY=''
      TRANS.ARRAY=''
      AFS.TRANS.ARRAY = ''               ; * NPR08
      PROCESS.DATE.ARRAY=''
      C.OUT.MISROUTE=0 ; C.IN.MISROUTE=0 ; C.THIRD.MISROUTE=0          ; * JMK05
      Y.OUT.MISROUTE=0 ; Y.IN.MISROUTE=0 ; Y.THIRD.MISROUTE=0          ; * JMK05
      I.MIS.ROUTE='' ; O.MIS.ROUTE='' ; T.MIS.ROUTE=''
      I.LCC.ROUTE='' ; O.LCC.ROUTE='' ; T.LCC.ROUTE=''       ; * JMK83
      NUM.BILLS=0                        ; * JMK16
      NUM.UPS.BILLS=0                    ; * JMK30
      NUM.UPS.TRACK=0                    ; * JMK30
      NONF.CNT=0                         ; * JMK94
      NONF.AMT=0                         ; * JMK94
      IF CLIENT='01773' THEN             ; * JMK121
         UPS.BEG.DATE=''                 ; * JMK121
         UPS.END.DATE=''                 ; * JMK121
      END                                ; * JMK121

***********************************************************************
* I.MIS.ROUTE<1>  O.MIS.ROUTE<1>  T.MIS.ROUTE<1> - NUMBER OF MISROUTE
* I.MIS.ROUTE<2>  O.MIS.ROUTE<2>  T.MIS.ROUTE<2> - ACTUAL CHARGE
* I.MIS.ROUTE<3>  O.MIS.ROUTE<3>  T.MIS.ROUTE<3> - APPROVED CHARGE
***********************************************************************

* Get next item to process

      LOG.SEQ.NO = 5                     ; * Start
      PROC.DESC = "Looping through Bills"
      LOG.ST.DATE = DATE() ; LOG.ST.TIME = TIME() ; LOG.END.DATE = '' ; LOG.END.TIME = '' ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF

      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK TO BEGIN DEBUG 95...')

      CAR.TEMP.DA=''
      CKLST=''                           ; * JMK66
      COUNTER=0
      DONE=0
      PREV.CARRIER=''
      PROCESS.DATE.ARRAY=''
      LOOP
         READNEXT PRO.ID ELSE DONE=1
      UNTIL DONE DO
         COUNTER=COUNTER+1
         CALL PROG.BAR(22,COUNTER,NUM.ITEMS,PER)
         READ PRO.REC FROM FB.BILLS,PRO.ID THEN
            CK.NO=PRO.REC<14>            ; * JMK66
            IF CK.NO#'' THEN             ; * JMK66
               LOCATE CK.NO IN CKLST SETTING CKPOS ELSE      ; * JMK66
                  CKLST<-1>=CK.NO        ; * JMK66
               END                       ; * JMK66
            END                          ; * JMK66
            BANK=CLIENT.BANK             ; * JMK94
            CARRIER=FIELD(PRO.ID,'*',1)
            PRO.NUM=FIELD(PRO.ID,'*',2)
            LOCATE CARRIER IN BANK.CTRL.REC<1> SETTING CPOS THEN       ; * JMK94
               BANK.OVERRIDE=1
               BANK.BEG.DATE=BANK.CTRL.REC<2,CPOS>
               BANK.END.DATE=BANK.CTRL.REC<3,CPOS>
               IF BANK.BEG.DATE#'' THEN
                  IF END.DATE < BANK.BEG.DATE THEN
                     BANK.OVERRIDE=0
                  END
               END
               IF BANK.END.DATE#'' THEN
                  IF END.DATE > BANK.END.DATE THEN
                     BANK.OVERRIDE=0
                  END
               END
               IF BANK.OVERRIDE THEN
                  BANK=BANK.CTRL.REC<10,CPOS>      ; * JMK94
               END
            END                          ; * JMK94

            BANK.ID='BANK*':BANK         ; * JMK124
            READ BANK.REC FROM F.FB.BANKS,BANK.ID ELSE BANK.REC=''     ; * JMK124
            BANK.FB.TYPE=BANK.REC<6>     ; * JMK124
            DIV=PRO.REC<9>'R%5'          ; * JMK32
            READ DIV.REC FROM F.DIVISION,DIV ELSE DIV.REC=''
            REG=DIV.REC<45>
            IF DIV='' THEN               ; * JMK137
               DIV.POS=1                 ; * JMK137
            END ELSE                     ; * JMK137
               LOCATE(DIV,DIV.LIST,1;DIV.POS;'AL') ELSE      ; * JMK137
                  DIV.POS=1              ; * JMK137
               END                       ; * JMK137
            END                          ; * JMK137
            IF REG='' THEN
               REG.POS=1
            END ELSE
               LOCATE(REG,REG.LIST,1;REG.POS;'AL') ELSE
                  REG.POS=1
               END
            END
            DUP.NUM=FIELD(PRO.ID,'*',3)

            IF DUP.NUM=0 AND PRO.REC<39>#'R' THEN

               REG.PROC.FLAG=0           ; * JMK143

               IF CLIENT='00379' THEN REG.PROC.FLAG=1        ; * JMK143
               IF CLIENT='00666' THEN REG.PROC.FLAG=1        ; * JMK143
               IF CLIENT='00761' THEN REG.PROC.FLAG=1        ; * JMK143
               IF CLIENT='00869' THEN REG.PROC.FLAG=1        ; * JMK143
               IF CLIENT='00973' THEN REG.PROC.FLAG=1        ; * JMK143
               IF CLIENT='01003' THEN REG.PROC.FLAG=1        ; * JMK143
               IF CLIENT='01020' THEN REG.PROC.FLAG=1        ; * JMK143
               IF CLIENT="01035" THEN REG.PROC.FLAG=1        ; * JMK143
               IF CLIENT='01039' THEN REG.PROC.FLAG=1        ; * JMK143
               IF CLIENT='01067' THEN REG.PROC.FLAG=1        ; * JMK143
               IF CLIENT='01156' THEN REG.PROC.FLAG=1        ; * JMK143
               IF CLIENT='01283' THEN REG.PROC.FLAG=1        ; * DRF005
               IF CLIENT='01384' THEN REG.PROC.FLAG=1        ; * DRF003
               IF CLIENT='01401' THEN REG.PROC.FLAG=1        ; * JMK144
               IF CLIENT='01436' THEN REG.PROC.FLAG=1        ; * DRF002
               IF CLIENT='01468' THEN REG.PROC.FLAG=1        ; * DRF002
               IF CLIENT='01470' THEN REG.PROC.FLAG=1        ; * JMK143
               IF CLIENT='01485' THEN REG.PROC.FLAG=1        ; * DRF007
               IF CLIENT='01499' THEN REG.PROC.FLAG=1        ; * JMK143
               IF CLIENT='01536' THEN REG.PROC.FLAG=1        ; * JMK143
               IF CLIENT='01563' THEN REG.PROC.FLAG=1
               IF CLIENT='01592' THEN REG.PROC.FLAG=1        ; * JMK143
               IF CLIENT='01633' THEN REG.PROC.FLAG=1        ; * JMK143
               IF CLIENT='01635' THEN REG.PROC.FLAG=1        ; * JMK143
               IF CLIENT='01682' THEN REG.PROC.FLAG=1        ; * JMK143
               IF CLIENT='01760' THEN REG.PROC.FLAG=1
               IF CLIENT='01763' THEN REG.PROC.FLAG=1        ; * JMK143
               IF CLIENT='01830' THEN REG.PROC.FLAG=1        ; * JMK143
               IF CLIENT='01932' THEN REG.PROC.FLAG=1
               IF CLIENT='01939' THEN REG.PROC.FLAG=1        ; * JMK143
               IF CLIENT='01949' THEN REG.PROC.FLAG=1        ; * JMK144
               IF CLIENT='01977' THEN REG.PROC.FLAG=1        ; * JMK143
               IF CLIENT='01979' THEN REG.PROC.FLAG=1        ; * JMK143
               IF CLIENT='02084' THEN REG.PROC.FLAG=1        ; * JMK148
               IF CLIENT='30041' THEN REG.PROC.FLAG=1

               IF REG.PROC.FLAG THEN     ; * JMK143
* Store all divisions and process dates that have bills
                  FIND.TEXT=REG:DIV:PRO.REC<37>
                  LOCATE FIND.TEXT IN PROCESS.DATE.ARRAY BY 'AR' SETTING PDA.POS ELSE
                     INS FIND.TEXT BEFORE PROCESS.DATE.ARRAY<PDA.POS>
                  END
               END ELSE
* Store all process dates that have bills
                  FIND.TEXT=PRO.REC<37>
                  LOCATE FIND.TEXT IN PROCESS.DATE.ARRAY BY 'AR' SETTING PDA.POS ELSE
                     INS FIND.TEXT BEFORE PROCESS.DATE.ARRAY<PDA.POS>
                  END
               END
               IF CLIENT='01773' THEN    ; * JMK121
                  UPS.END.DATE=PRO.REC<1>          ; * JMK121
                  UPS.BEG.DATE=UPS.END.DATE-6      ; * JMK121
               END                       ; * JMK121
            END

* Build a special spreadsheet report for Shurtape Technologies.
* This report is emailed to Nick and Susan only.  It is not printed.
            IF CLIENT='10340' THEN       ; * Shurtape Technologies
               IF DUP.NUM=0 AND PRO.REC<39>#'R' THEN
                  READV ST.CARRIER.NAME FROM F.CARRIERS,CARRIER,1 ELSE ST.CARRIER.NAME=''
                  IF ST.CARRIER.NAME#'' THEN
                     LOCATE ST.CARRIER.NAME IN CAR.TEMP.DA<1> BY 'AL' SETTING ST.POS THEN
                        CAR.TEMP.DA<2,ST.POS>+=PRO.REC<8>
                        CAR.TEMP.DA<3,ST.POS>+=PRO.REC<42>+PRO.REC<43>
                        CAR.TEMP.DA<4,ST.POS>+=PRO.REC<44>

                        CAR.TEMP.DA<5,ST.POS>+=PRO.REC<8>+PRO.REC<42>+PRO.REC<43>+PRO.REC<44>+PRO.REC<165>     ; * JMK07
                        CAR.TEMP.DA<6,ST.POS>+=PRO.REC<165>  ; * JMK07
                     END ELSE
                        INS ST.CARRIER.NAME BEFORE CAR.TEMP.DA<1,ST.POS>
                        INS PRO.REC<8> BEFORE CAR.TEMP.DA<2,ST.POS>
                        INS (PRO.REC<42>+PRO.REC<43>) BEFORE CAR.TEMP.DA<3,ST.POS>
                        INS PRO.REC<44> BEFORE CAR.TEMP.DA<4,ST.POS>

                        INS (PRO.REC<8>+PRO.REC<42>+PRO.REC<43>+PRO.REC<44>+PRO.REC<165>) BEFORE CAR.TEMP.DA<5,ST.POS>   ; * JMK07
                        INS PRO.REC<165> BEFORE CAR.TEMP.DA<6,ST.POS>  ; * JMK07
                     END
                  END
               END
            END

            BDUE=PRO.NUM[LEN(PRO.NUM)-1,2]
            IF BDUE="BD" THEN BDADJ=1 ELSE BDADJ=0
            IF BDUE="AD" THEN ADADJ=1 ELSE ADADJ=0
            IF BDUE="CM" THEN CMADJ=1 ELSE CMADJ=0
            VC.OVERRIDE=''
            IF PRO.REC<17> MATCHES "5N" AND CUST.VEND.FILE THEN
               VC.ID=PRO.REC<17>
               READ DVC FROM F.VC,VC.ID THEN
                  DESC=DVC<1>
                  VC.OVERRIDE=DVC<10>
               END
            END                          ; * IF PRO.REC<17> MATCHES "5N" AND CUST.VEND.FILE

* If duplicate bill then accumulate only
            DFLAG=0                      ; * Duplicate flag
            RFLAG=0                      ; * Reject flag
            IOT=PRO.REC<2>
            IOT.POS=INDEX('IOT',IOT,1)
            IOT.POS=IOT.POS*10
            IF DUP.NUM GT 0 THEN
               DFLAG=1
               DUP.NOT.PAID=DUP.NOT.PAID+PRO.REC<7>
               NOB.REJ=NOB.REJ+1
               IF NOT(SEPARATE.REGIONS) THEN
                  REG.COUNTS<2,REG.POS>+=1
               END
               IF VARIANCE='Y' OR VARIANCE='A' THEN
                  LOCATE PRO.REC<21> IN VARS<1> BY 'AR' SETTING POS THEN
                     VARS<4,POS>+=PRO.REC<7>
                     IF IOT.POS THEN VARS<4+IOT.POS,POS>+=PRO.REC<7>
                  END ELSE
                     VARS=INSERT(VARS,1,POS,0,PRO.REC<21>)
                     VARS=INSERT(VARS,2,POS,0,0)
                     VARS=INSERT(VARS,3,POS,0,0)
                     VARS=INSERT(VARS,4,POS,0,PRO.REC<7>)
                     VARS=INSERT(VARS,5,POS,0,0)
                     VARS=INSERT(VARS,6,POS,0,0)

                     VARS=INSERT(VARS,12,POS,0,0)
                     VARS=INSERT(VARS,13,POS,0,0)
                     VARS=INSERT(VARS,14,POS,0,0)
                     VARS=INSERT(VARS,15,POS,0,0)
                     VARS=INSERT(VARS,16,POS,0,0)

                     VARS=INSERT(VARS,22,POS,0,0)
                     VARS=INSERT(VARS,23,POS,0,0)
                     VARS=INSERT(VARS,24,POS,0,0)
                     VARS=INSERT(VARS,25,POS,0,0)
                     VARS=INSERT(VARS,26,POS,0,0)

                     VARS=INSERT(VARS,32,POS,0,0)
                     VARS=INSERT(VARS,33,POS,0,0)
                     VARS=INSERT(VARS,34,POS,0,0)
                     VARS=INSERT(VARS,35,POS,0,0)
                     VARS=INSERT(VARS,36,POS,0,0)

                     IF IOT.POS THEN
                        VARS<2+IOT.POS,POS>+=0
                        VARS<3+IOT.POS,POS>+=0
                        VARS<4+IOT.POS,POS>+=PRO.REC<7>
                        VARS<5+IOT.POS,POS>+=0
                        VARS<6+IOT.POS,POS>+=0
                     END
                  END
               END                       ; * IF VARIANCE='Y' OR VARIANCE='A'
            END                          ; * IF DUP.NUM GT 0

* If Never Pay bill then accumulate only
            IF PRO.REC<39>='R' AND CLIENT#'98999' THEN
               IF PRO.REC<66>#'N' AND PRO.REC<66>#'E' AND PRO.REC<66>#'A' THEN
                  SUBJ='Rejected Bill Does Not Have a Pay Status'
                  TEXT=USER:' ran the weekly report which contained a bill with a pay code'
                  TEXT<1,-1>='of ':PRO.REC<39>:' and a pay status code of ':PRO.REC<66>
                  TEXT<1,-1>='for bill ':PRO.ID:'.'
                  MVIN=''
                  MVIN<1>='DFriend@afs.net'
                  MVIN<4>='AFS'
                  MVIN<5>=SUBJ
                  MVIN<6>=TEXT
                  IF CLIENT = "30032" THEN MVIN<8,-1> = "NODEL"        ; * NPR12
                  CALL SENDMAIL(MVIN,MVOUT)
                  PRO.REC<66>='E'
               END                       ; * IF PRO.REC<66>#'N' AND PRO.REC<66>#'E'
            END                          ; * IF PRO.REC<39>='R' AND CLIENT#'98999'
            IF PRO.REC<66>='N' AND PRO.REC<39>='R' THEN
               RFLAG=1                   ; * Set RejectBill Flag
               DFLAG=1                   ; * Treat bill as duplicate
               NUM.NEVER.PAYS+=1         ; * # of Never Pay Bills for this period
               AMT.NEVER.PAYS+=PRO.REC<7>          ; * Amt of Never Pay bills for this period
               IF NOT(SEPARATE.REGIONS) THEN
                  REG.COUNTS<1,REG.POS>+=1
               END
            END                          ; * IF PRO.REC<66>='N' AND PRO.REC<39>='R'

* If Eventually Pay bill then accumulate only
            IF PRO.REC<66>='E' AND PRO.REC<39>='R' THEN
               RFLAG=1                   ; * Set Reject Bill flag
               DFLAG=1                   ; * Treat bill as duplicate
               NUM.HOLDS+=1              ; * # of Never Pay Bills for this period
               AMT.HOLDS+=PRO.REC<7>     ; * Amt of Never Pay bills for this period
               IF NOT(SEPARATE.REGIONS) THEN
                  REG.COUNTS<4,REG.POS>+=1
               END
            END                          ; * IF PRO.REC<66>='E' AND PRO.REC<39>='R'

            IF PRO.REC<66>='A' AND PRO.REC<39>='R' THEN
               RFLAG=1                   ; * Set Reject Bill flag
               DFLAG=1                   ; * Treat bill as duplicate

               IF NOT(SEPARATE.REGIONS) THEN       ; * JMK32

               END                       ; * JMK32
            END                          ; * IF PRO.REC<66>='A' AND PRO.REC<39>='R'
* Update carrier total

* IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK TO BEGIN DEBUG 97...')

            IF NOT(DFLAG) AND NOT(RFLAG) THEN
               CHECK.ID=PRO.REC<20>:'*'  ; * Carrier

               CAR.REG.FLAG=0            ; * JMK144
               IF CLIENT='00379' THEN CAR.REG.FLAG=1         ; * JMK144
               IF CLIENT='00731' THEN CAR.REG.FLAG=1         ; * JMK144
               IF CLIENT='00761' THEN CAR.REG.FLAG=1         ; * JMK144
               IF CLIENT='00883' THEN CAR.REG.FLAG=1         ; * JMK144
               IF CLIENT='00973' THEN CAR.REG.FLAG=1         ; * JMK144
               IF CLIENT='00950' THEN CAR.REG.FLAG=1         ; * JMK144
               IF CLIENT='00951' THEN CAR.REG.FLAG=1         ; * JMK144
               IF CLIENT='01003' THEN CAR.REG.FLAG=1         ; * JMK144
               IF CLIENT='01019' THEN CAR.REG.FLAG=1         ; * JMK144
               IF CLIENT='01020' THEN CAR.REG.FLAG=1         ; * JMK144
               IF CLIENT='01039' THEN CAR.REG.FLAG=1         ; * JMK144
               IF CLIENT='01067' THEN CAR.REG.FLAG=1         ; * JMK144
               IF CLIENT='01156' THEN CAR.REG.FLAG=1         ; * JMK144
               IF CLIENT='01282' THEN CAR.REG.FLAG=1         ; * JMK144
               IF CLIENT='01283' THEN CAR.REG.FLAG=1         ; * DRF005
               IF CLIENT='01401' THEN CAR.REG.FLAG=1         ; * JMK144
               IF CLIENT='01468' THEN CAR.REG.FLAG=1         ; * JMK144
               IF CLIENT='01485' THEN CAR.REG.FLAG=1         ; * DRF007
               IF CLIENT='01499' THEN CAR.REG.FLAG=1         ; * JMK144
               IF CLIENT='01536' THEN CAR.REG.FLAG=1         ; * JMK144
               IF CLIENT='01633' THEN CAR.REG.FLAG=1         ; * JMK144
               IF CLIENT='01635' THEN CAR.REG.FLAG=1         ; * JMK144
               IF CLIENT='01830' THEN CAR.REG.FLAG=1         ; * JMK144
               IF CLIENT='01977' THEN CAR.REG.FLAG=1         ; * JMK144
               IF CLIENT='01979' THEN CAR.REG.FLAG=1         ; * JMK144
               IF CLIENT='10171' THEN CAR.REG.FLAG=1         ; * JMK144
               IF CLIENT='30041' THEN CAR.REG.FLAG=1         ; * DRF008
               IF PRO.REC<40>#'V' THEN   ; * DRF006
                  IF CAR.REG.FLAG THEN   ; * JMK144
                     CHECK.ID=CHECK.ID:REG:DIV:'*'           ; * Region
                  END
                  CHECK.ID=CHECK.ID:PRO.REC<37>    ; * Ending process date
                  LOCATE CHECK.ID IN CARRIER.ARRAY<1> BY 'AR' SETTING CARRIER.POS ELSE
                     INS CHECK.ID BEFORE CARRIER.ARRAY<1,CARRIER.POS>
                  END
                  LOCATE(PRO.REC<20>,DIV.LIST,2,DIV.POS;CPOS) ELSE     ; * JMK32
                     DIV.LIST<2,DIV.POS,-1>=PRO.REC<20>      ; * JMK32
                  END                    ; * JMK32
                  IF CLIENT='01706' OR CLIENT='00949' OR CLIENT='00866' OR CLIENT='01633' OR CLIENT='01977' OR CLIENT='01282' OR CLIENT='01485' THEN   ; * JMK137 ; * DRF007
                     IF REG.ID='' THEN   ; * JMK137
                        REG.POS=1        ; * JMK137
                     END ELSE            ; * JMK137
                        LOCATE(REG.ID,DIV.LIST,3;REG.POS;'AL') ELSE    ; * JMK137
                           REG.POS=1     ; * JMK137
                        END              ; * JMK137
                     END                 ; * JMK137
                     LOCATE(PRO.REC<20>,DIV.LIST,4,REG.POS;CRPOS) ELSE           ; * JMK137
                        DIV.LIST<4,REG.POS,-1>=PRO.REC<20>   ; * JMK137
                     END                 ; * JMK137
                  END                    ; * JMK137
                  LOCATE(PRO.REC<20>,REG.LIST,2,REG.POS;CPOS) ELSE
                     REG.LIST<2,REG.POS,-1>=PRO.REC<20>
                  END
               END                       ; * IF NOT(DFLAG) AND NOT(RFLAG)
               IF PRO.REC<20> NE PREV.CARRIER THEN
                  CARRIER.COUNT=CARRIER.COUNT+1
                  PREV.CARRIER=PRO.REC<20>
                  READV CARRIER.TRANS FROM F.CARRIERS,PREV.CARRIER,44 ELSE CARRIER.TRANS=''
               END                       ; * IF PRO.REC<20> NE PREV.CARRIER
            END                          ; * DRF006
            IF NOT(DFLAG) THEN
* Accumulate variances
               IF PRO.REC<21>#'' THEN
                  LOG.AMT=0-PRO.REC<12>
                  IF VARIANCE='Y' OR VARIANCE='A' THEN
                     LOCATE PRO.REC<21> IN VARS<1> BY 'AR' SETTING POS THEN
                        VARS<2,POS>=VARS<2,POS>+LOG.AMT
                        VARS<4,POS>=VARS<4,POS>+PRO.REC<7>
                        VARS<5,POS>=VARS<5,POS>+PRO.REC<8>

                        VARS<6,POS>=VARS<6,POS>+PRO.REC<8>+PRO.REC<44>+PRO.REC<42>+PRO.REC<43>+PRO.REC<165>    ; * JMK07
                        IF IOT.POS THEN
                           VARS<2+IOT.POS,POS>+=LOG.AMT
                           VARS<4+IOT.POS,POS>+=PRO.REC<7>
                           VARS<5+IOT.POS,POS>+=PRO.REC<8>

                           VARS<6+IOT.POS,POS>+=PRO.REC<8>+PRO.REC<44>+PRO.REC<42>+PRO.REC<43>+PRO.REC<165>    ; * JMK07
                        END
                     END ELSE
                        VARS=INSERT(VARS,1,POS,0,PRO.REC<21>)
                        VARS=INSERT(VARS,2,POS,0,LOG.AMT)
                        VARS=INSERT(VARS,3,POS,0,0)
                        VARS=INSERT(VARS,4,POS,0,PRO.REC<7>+0)
                        VARS=INSERT(VARS,5,POS,0,PRO.REC<8>+0)

                        VARS=INSERT(VARS,6,POS,0,PRO.REC<8>+PRO.REC<44>+PRO.REC<42>+PRO.REC<43>+PRO.REC<165>+0)          ; * JMK07

                        VARS=INSERT(VARS,12,POS,0,0)
                        VARS=INSERT(VARS,13,POS,0,0)
                        VARS=INSERT(VARS,14,POS,0,0)
                        VARS=INSERT(VARS,15,POS,0,0)
                        VARS=INSERT(VARS,16,POS,0,0)

                        VARS=INSERT(VARS,22,POS,0,0)
                        VARS=INSERT(VARS,23,POS,0,0)
                        VARS=INSERT(VARS,24,POS,0,0)
                        VARS=INSERT(VARS,25,POS,0,0)
                        VARS=INSERT(VARS,26,POS,0,0)

                        VARS=INSERT(VARS,32,POS,0,0)
                        VARS=INSERT(VARS,33,POS,0,0)
                        VARS=INSERT(VARS,34,POS,0,0)
                        VARS=INSERT(VARS,35,POS,0,0)
                        VARS=INSERT(VARS,36,POS,0,0)

                        IF IOT.POS THEN
                           VARS<2+IOT.POS,POS>+=LOG.AMT
                           VARS<3+IOT.POS,POS>+=0
                           VARS<4+IOT.POS,POS>+=PRO.REC<7>
                           VARS<5+IOT.POS,POS>+=PRO.REC<8>

                           VARS<6+IOT.POS,POS>+=PRO.REC<8>+PRO.REC<44>+PRO.REC<42>+PRO.REC<43>+PRO.REC<165>    ; * JMK07
                        END
                     END                 ; * LOCATE PRO.REC<21> IN VARS<1> BY 'AR' SETTING POS
                  END                    ; * IF VARIANCE='Y' OR VARIANCE='A'
               END ELSE
                  SUBJ='Bill Does Not Have a Transportation Mode'
                  TEXT=USER:' ran the weekly report which contained a bill with'
                  TEXT<1,-1>='a transportation mode of ':PRO.REC<21>:' '
                  TEXT<1,-1>='for bill ':PRO.ID:'.'
                  MVIN=''
                  MVIN<1>='DFriend@afs.net'

                  MVIN<4>='AFS'
                  MVIN<5>=SUBJ
                  MVIN<6>=TEXT
                  IF CLIENT = "30032" THEN MVIN<8,-1> = "NODEL"        ; * NPR12
                  CALL SENDMAIL(MVIN,MVOUT)
               END                       ; * IF PRO.REC<21>#''


* Accumulate expenses
               IF PRO.REC<31>='' THEN PRO.REC<31>=PRO.REC<5>
               IF PRO.REC<33>='' THEN PRO.REC<33>=PRO.REC<8>
               IF PRO.REC<31>='' THEN PRO.REC<31>=' '
               IF PRO.REC<33>='' THEN PRO.REC<33>=' '
               TOTAL.DIST=0
               X=DCOUNT(PRO.REC<31>,CHAR(253))
               XX=X
               FOR I=1 TO XX
                  TOTAL.DIST=TOTAL.DIST+PRO.REC<33,I>
               NEXT I
               FOR I=1 TO X
                  ECD=PRO.REC<31,I>

                  ESB=''
                  IF ESB='' THEN ESB=ECD
                  LOCATE(ECD,DIST.MIDS;EVL;'AR') ELSE
                     INS ECD BEFORE DIST.MIDS<EVL>
                     INS ECD BEFORE DIST.IDS<EVL>
                     INS 0 BEFORE DIST.AMTS<EVL>
                  END
                  LOCATE ESB IN DIST.IDS<EVL>,1 BY 'AR' SETTING SVL ELSE
                     INS ESB BEFORE DIST.IDS<EVL,SVL>
                     INS 0 BEFORE DIST.AMTS<EVL,SVL>
                  END
                  IF NOT(NUM(EVL)) THEN
                     CRT @(0,23):"EVL='":EVL:"'   ID=":PRO.ID
                     INPUT NUL
                  END
                  IF NOT(NUM(SVL)) THEN
                     CRT @(0,23):"SVL='":SVL:"'   ID=":PRO.ID
                     INPUT NUL
                  END
                  IF NOT(NUM(PRO.REC<33,I>)) THEN
                     CRT @(0,23):"PRO.REC<33,I>='":PRO.REC<33,I>:"'   ID=":PRO.ID
                     INPUT NUL
                  END
                  DIST.AMTS<EVL,SVL>=DIST.AMTS<EVL,SVL>+PRO.REC<33,I>
                  IF TOTAL.DIST=0 THEN
                     IF PRO.REC<33,I>=0 THEN
                        PERCENT.OF.AMT=1
                     END ELSE
                        IF PRO.REC<8>+0=0 THEN     ; * JMK48
                           PERCENT.OF.AMT=1        ; * JMK48
                        END ELSE         ; * JMK48
                           CALL ELINE('Error: Total Distribution on bill ':PRO.ID:'  equals zero.')
                           STOP
                        END              ; * JMK48
                     END
                  END ELSE
                     PERCENT.OF.AMT=PRO.REC<33,I>/TOTAL.DIST
                  END                    ; * IF TOTAL.DIST=0
                  COMMIS.AMT=PRO.REC<32,I>
                  DIST.AMTS<EVL,2>=DIST.AMTS<EVL,2>+COMMIS.AMT+PRO.REC<33,I>
                  LOCATE(ECD,TOTAL.DIST.MIDS;EVL;'AR') ELSE
                     INS ECD BEFORE TOTAL.DIST.MIDS<EVL>
                     INS ECD BEFORE TOTAL.DIST.IDS<EVL>
                     INS 0 BEFORE TOTAL.DIST.AMTS<EVL>
                  END
                  LOCATE ESB IN TOTAL.DIST.IDS<EVL>,1 BY 'AR' SETTING SVL ELSE
                     INS ESB BEFORE TOTAL.DIST.IDS<EVL,SVL>
                     INS 0 BEFORE TOTAL.DIST.AMTS<EVL,SVL>
                  END
                  TOTAL.DIST.AMTS<EVL,SVL>=TOTAL.DIST.AMTS<EVL,SVL>+PRO.REC<33,I>
                  TOTAL.DIST.AMTS<EVL,2>=TOTAL.DIST.AMTS<EVL,2>+COMMIS.AMT+PRO.REC<33,I>
               NEXT I
               NEXP=DCOUNT(PRO.REC<31>,@VM)-1      ; * JMK29
               IF NEXP<0 THEN NEXP=0     ; * JMK29
               PR.BILLS.COUNT+=NEXP      ; * JMK29
               IF NOT(SEPARATE.REGIONS) THEN       ; * JMK32
                  REG.COUNTS<6,REG.POS>+=NEXP      ; * JMK32
               END                       ; * JMK32

               TRANS.AMT=PRO.REC<42>+PRO.REC<43>+PRO.REC<44>+PRO.REC<165>        ; * JMK07
               BILL.TRANS=PRO.REC<21>    ; * JMKXXX

               LOCATE BILL.TRANS IN TRANS.ARRAY<1> BY 'AR' SETTING TRANS.POS THEN          ; * JMKXXX
                  BEGIN CASE
                     CASE PRO.REC<2>='I'
                        TRANS.ARRAY<2,TRANS.POS>=TRANS.ARRAY<2,TRANS.POS>+TRANS.AMT+PRO.REC<8>
                        TRANS.ARRAY<5,TRANS.POS>+=1          ; * JMK79
                        TRANS.ARRAY<8,TRANS.POS>+=PRO.REC<8>           ; * JMK79
                        TRANS.ARRAY<11,TRANS.POS>+=ABS(PRO.REC<12>)    ; * JMK79
                        TRANS.ARRAY<14,TRANS.POS>+=PRO.REC<44>         ; * JMK79
                     CASE PRO.REC<2>='O'
                        TRANS.ARRAY<3,TRANS.POS>=TRANS.ARRAY<3,TRANS.POS>+TRANS.AMT+PRO.REC<8>
                        TRANS.ARRAY<6,TRANS.POS>+=1          ; * JMK79
                        TRANS.ARRAY<9,TRANS.POS>+=PRO.REC<8>           ; * JMK79
                        TRANS.ARRAY<12,TRANS.POS>+=ABS(PRO.REC<12>)    ; * JMK79
                        TRANS.ARRAY<15,TRANS.POS>+=PRO.REC<44>         ; * JMK79
                     CASE 1
                        TRANS.ARRAY<4,TRANS.POS>=TRANS.ARRAY<4,TRANS.POS>+TRANS.AMT+PRO.REC<8>
                        TRANS.ARRAY<7,TRANS.POS>+=1          ; * JMK79
                        TRANS.ARRAY<10,TRANS.POS>+=PRO.REC<8>          ; * JMK79
                        TRANS.ARRAY<13,TRANS.POS>+=ABS(PRO.REC<12>)    ; * JMK79
                        TRANS.ARRAY<16,TRANS.POS>+=PRO.REC<44>         ; * JMK79
                  END CASE
               END ELSE

                  INS BILL.TRANS BEFORE TRANS.ARRAY<1,TRANS.POS>       ; * JMKXXX
                  BEGIN CASE
                     CASE PRO.REC<2>='I'
                        INS TRANS.AMT+PRO.REC<8> BEFORE TRANS.ARRAY<2,TRANS.POS>
                        INS 0 BEFORE TRANS.ARRAY<3,TRANS.POS>
                        INS 0 BEFORE TRANS.ARRAY<4,TRANS.POS>
                        INS 1 BEFORE TRANS.ARRAY<5,TRANS.POS>          ; * JMK79
                        INS 0 BEFORE TRANS.ARRAY<6,TRANS.POS>          ; * JMK84
                        INS 0 BEFORE TRANS.ARRAY<7,TRANS.POS>          ; * JMK84
                        INS PRO.REC<8> BEFORE TRANS.ARRAY<8,TRANS.POS>           ; * JMK79
                        INS 0 BEFORE TRANS.ARRAY<9,TRANS.POS>          ; * JMK84
                        INS 0 BEFORE TRANS.ARRAY<10,TRANS.POS>         ; * JMK84
                        INS ABS(PRO.REC<12>) BEFORE TRANS.ARRAY<11,TRANS.POS>    ; * JMK79
                        INS 0 BEFORE TRANS.ARRAY<12,TRANS.POS>         ; * JMK84
                        INS 0 BEFORE TRANS.ARRAY<13,TRANS.POS>         ; * JMK84
                        INS PRO.REC<44> BEFORE TRANS.ARRAY<14,TRANS.POS>         ; * JMK79
                        INS 0 BEFORE TRANS.ARRAY<15,TRANS.POS>         ; * JMK84
                        INS 0 BEFORE TRANS.ARRAY<16,TRANS.POS>         ; * JMK84
                     CASE PRO.REC<2>='O'
                        INS 0 BEFORE TRANS.ARRAY<2,TRANS.POS>
                        INS TRANS.AMT+PRO.REC<8> BEFORE TRANS.ARRAY<3,TRANS.POS>
                        INS 0 BEFORE TRANS.ARRAY<4,TRANS.POS>
                        INS 0 BEFORE TRANS.ARRAY<5,TRANS.POS>          ; * JMK84
                        INS 1 BEFORE TRANS.ARRAY<6,TRANS.POS>          ; * JMK79
                        INS 0 BEFORE TRANS.ARRAY<7,TRANS.POS>          ; * JMK84
                        INS 0 BEFORE TRANS.ARRAY<8,TRANS.POS>          ; * JMK84
                        INS PRO.REC<8> BEFORE TRANS.ARRAY<9,TRANS.POS>           ; * JMK79
                        INS 0 BEFORE TRANS.ARRAY<10,TRANS.POS>         ; * JMK84
                        INS 0 BEFORE TRANS.ARRAY<11,TRANS.POS>         ; * JMK84
                        INS ABS(PRO.REC<12>) BEFORE TRANS.ARRAY<12,TRANS.POS>    ; * JMK79
                        INS 0 BEFORE TRANS.ARRAY<13,TRANS.POS>         ; * JMK84
                        INS 0 BEFORE TRANS.ARRAY<14,TRANS.POS>         ; * JMK84
                        INS PRO.REC<44> BEFORE TRANS.ARRAY<15,TRANS.POS>         ; * JMK79
                        INS 0 BEFORE TRANS.ARRAY<16,TRANS.POS>         ; * JMK84
                     CASE 1
                        INS 0 BEFORE TRANS.ARRAY<2,TRANS.POS>
                        INS 0 BEFORE TRANS.ARRAY<3,TRANS.POS>
                        INS TRANS.AMT+PRO.REC<8> BEFORE TRANS.ARRAY<4,TRANS.POS>
                        INS 0 BEFORE TRANS.ARRAY<5,TRANS.POS>          ; * JMK84
                        INS 0 BEFORE TRANS.ARRAY<6,TRANS.POS>          ; * JMK84
                        INS 1 BEFORE TRANS.ARRAY<7,TRANS.POS>          ; * JMK79
                        INS 0 BEFORE TRANS.ARRAY<8,TRANS.POS>          ; * JMK84
                        INS 0 BEFORE TRANS.ARRAY<9,TRANS.POS>          ; * JMK84
                        INS PRO.REC<8> BEFORE TRANS.ARRAY<10,TRANS.POS>          ; * JMK79
                        INS 0 BEFORE TRANS.ARRAY<11,TRANS.POS>         ; * JMK84
                        INS 0 BEFORE TRANS.ARRAY<12,TRANS.POS>         ; * JMK84
                        INS ABS(PRO.REC<12>) BEFORE TRANS.ARRAY<13,TRANS.POS>    ; * JMK79
                        INS 0 BEFORE TRANS.ARRAY<14,TRANS.POS>         ; * JMK84
                        INS 0 BEFORE TRANS.ARRAY<15,TRANS.POS>         ; * JMK84
                        INS PRO.REC<44> BEFORE TRANS.ARRAY<16,TRANS.POS>         ; * JMK79
                  END CASE

                  INS BILL.TRANS BEFORE REG.DARRAY<1,REG.POS,TRANS.POS>          ; * JMK32 ; * JMKXXX
                  FOR J = 2 TO 16        ; * JMK32
                     INS 0 BEFORE REG.DARRAY<J,REG.POS,TRANS.POS>      ; * JMK32
                  NEXT J                 ; * JMK32
               END                       ; * LOCATE CARRIER.TRANS IN TRANS.ARRAY<1> BY 'AR' SETTING TRANS.POS

               IF DATE() GE "15380" THEN
                  AFS.TRANS.ARRAY<1,1> = '00642' ; AFS.TRANS.ARRAY<1,2> = '03029'          ; * Include both regardless of whether they have any bills for the period being reported
                  IF CARRIER='00642' OR CARRIER='03029' THEN

                     LOCATE CARRIER IN AFS.TRANS.ARRAY<1> BY 'AR' SETTING AFS.TRANS.POS THEN
                        BEGIN CASE
                           CASE PRO.REC<2>='I'
                              AFS.TRANS.ARRAY<2,AFS.TRANS.POS>=AFS.TRANS.ARRAY<2,AFS.TRANS.POS>+TRANS.AMT+PRO.REC<8>
                              AFS.TRANS.ARRAY<5,AFS.TRANS.POS>+=1      ; * JMK79
                              AFS.TRANS.ARRAY<8,AFS.TRANS.POS>+=PRO.REC<8>       ; * JMK79
                              AFS.TRANS.ARRAY<11,AFS.TRANS.POS>+=ABS(PRO.REC<12>)          ; * JMK79
                              AFS.TRANS.ARRAY<14,AFS.TRANS.POS>+=PRO.REC<44>     ; * JMK79
                           CASE PRO.REC<2>='O'
                              AFS.TRANS.ARRAY<3,AFS.TRANS.POS>=AFS.TRANS.ARRAY<3,AFS.TRANS.POS>+TRANS.AMT+PRO.REC<8>
                              AFS.TRANS.ARRAY<6,AFS.TRANS.POS>+=1      ; * JMK79
                              AFS.TRANS.ARRAY<9,AFS.TRANS.POS>+=PRO.REC<8>       ; * JMK79
                              AFS.TRANS.ARRAY<12,AFS.TRANS.POS>+=ABS(PRO.REC<12>)          ; * JMK79
                              AFS.TRANS.ARRAY<15,AFS.TRANS.POS>+=PRO.REC<44>     ; * JMK79
                           CASE 1
                              AFS.TRANS.ARRAY<4,AFS.TRANS.POS>=AFS.TRANS.ARRAY<4,AFS.TRANS.POS>+TRANS.AMT+PRO.REC<8>
                              AFS.TRANS.ARRAY<7,AFS.TRANS.POS>+=1      ; * JMK79
                              AFS.TRANS.ARRAY<10,AFS.TRANS.POS>+=PRO.REC<8>      ; * JMK79
                              AFS.TRANS.ARRAY<13,AFS.TRANS.POS>+=ABS(PRO.REC<12>)          ; * JMK79
                              AFS.TRANS.ARRAY<16,AFS.TRANS.POS>+=PRO.REC<44>     ; * JMK79
                        END CASE
                     END ELSE

                        INS CARRIER BEFORE AFS.TRANS.ARRAY<1,AFS.TRANS.POS>      ; * JMKXXX
                        BEGIN CASE
                           CASE PRO.REC<2>='I'
                              INS TRANS.AMT+PRO.REC<8> BEFORE AFS.TRANS.ARRAY<2,AFS.TRANS.POS>
                              INS 0 BEFORE AFS.TRANS.ARRAY<3,AFS.TRANS.POS>
                              INS 0 BEFORE AFS.TRANS.ARRAY<4,AFS.TRANS.POS>
                              INS 1 BEFORE AFS.TRANS.ARRAY<5,AFS.TRANS.POS>      ; * JMK79
                              INS 0 BEFORE AFS.TRANS.ARRAY<6,AFS.TRANS.POS>      ; * JMK84
                              INS 0 BEFORE AFS.TRANS.ARRAY<7,AFS.TRANS.POS>      ; * JMK84
                              INS PRO.REC<8> BEFORE AFS.TRANS.ARRAY<8,AFS.TRANS.POS>       ; * JMK79
                              INS 0 BEFORE AFS.TRANS.ARRAY<9,AFS.TRANS.POS>      ; * JMK84
                              INS 0 BEFORE AFS.TRANS.ARRAY<10,AFS.TRANS.POS>     ; * JMK84
                              INS ABS(PRO.REC<12>) BEFORE AFS.TRANS.ARRAY<11,AFS.TRANS.POS>          ; * JMK79
                              INS 0 BEFORE AFS.TRANS.ARRAY<12,AFS.TRANS.POS>     ; * JMK84
                              INS 0 BEFORE AFS.TRANS.ARRAY<13,AFS.TRANS.POS>     ; * JMK84
                              INS PRO.REC<44> BEFORE AFS.TRANS.ARRAY<14,AFS.TRANS.POS>     ; * JMK79
                              INS 0 BEFORE AFS.TRANS.ARRAY<15,AFS.TRANS.POS>     ; * JMK84
                              INS 0 BEFORE AFS.TRANS.ARRAY<16,AFS.TRANS.POS>     ; * JMK84
                           CASE PRO.REC<2>='O'
                              INS 0 BEFORE AFS.TRANS.ARRAY<2,AFS.TRANS.POS>
                              INS TRANS.AMT+PRO.REC<8> BEFORE AFS.TRANS.ARRAY<3,AFS.TRANS.POS>
                              INS 0 BEFORE AFS.TRANS.ARRAY<4,AFS.TRANS.POS>
                              INS 0 BEFORE AFS.TRANS.ARRAY<5,AFS.TRANS.POS>      ; * JMK84
                              INS 1 BEFORE AFS.TRANS.ARRAY<6,AFS.TRANS.POS>      ; * JMK79
                              INS 0 BEFORE AFS.TRANS.ARRAY<7,AFS.TRANS.POS>      ; * JMK84
                              INS 0 BEFORE AFS.TRANS.ARRAY<8,AFS.TRANS.POS>      ; * JMK84
                              INS PRO.REC<8> BEFORE AFS.TRANS.ARRAY<9,AFS.TRANS.POS>       ; * JMK79
                              INS 0 BEFORE AFS.TRANS.ARRAY<10,AFS.TRANS.POS>     ; * JMK84
                              INS 0 BEFORE AFS.TRANS.ARRAY<11,AFS.TRANS.POS>     ; * JMK84
                              INS ABS(PRO.REC<12>) BEFORE AFS.TRANS.ARRAY<12,AFS.TRANS.POS>          ; * JMK79
                              INS 0 BEFORE AFS.TRANS.ARRAY<13,AFS.TRANS.POS>     ; * JMK84
                              INS 0 BEFORE AFS.TRANS.ARRAY<14,AFS.TRANS.POS>     ; * JMK84
                              INS PRO.REC<44> BEFORE AFS.TRANS.ARRAY<15,AFS.TRANS.POS>     ; * JMK79
                              INS 0 BEFORE AFS.TRANS.ARRAY<16,AFS.TRANS.POS>     ; * JMK84
                           CASE 1
                              INS 0 BEFORE AFS.TRANS.ARRAY<2,AFS.TRANS.POS>
                              INS 0 BEFORE AFS.TRANS.ARRAY<3,AFS.TRANS.POS>
                              INS TRANS.AMT+PRO.REC<8> BEFORE AFS.TRANS.ARRAY<4,AFS.TRANS.POS>
                              INS 0 BEFORE AFS.TRANS.ARRAY<5,AFS.TRANS.POS>      ; * JMK84
                              INS 0 BEFORE AFS.TRANS.ARRAY<6,AFS.TRANS.POS>      ; * JMK84
                              INS 1 BEFORE AFS.TRANS.ARRAY<7,AFS.TRANS.POS>      ; * JMK79
                              INS 0 BEFORE AFS.TRANS.ARRAY<8,AFS.TRANS.POS>      ; * JMK84
                              INS 0 BEFORE AFS.TRANS.ARRAY<9,AFS.TRANS.POS>      ; * JMK84
                              INS PRO.REC<8> BEFORE AFS.TRANS.ARRAY<10,AFS.TRANS.POS>      ; * JMK79
                              INS 0 BEFORE AFS.TRANS.ARRAY<11,AFS.TRANS.POS>     ; * JMK84
                              INS 0 BEFORE AFS.TRANS.ARRAY<12,AFS.TRANS.POS>     ; * JMK84
                              INS ABS(PRO.REC<12>) BEFORE AFS.TRANS.ARRAY<13,AFS.TRANS.POS>          ; * JMK79
                              INS 0 BEFORE AFS.TRANS.ARRAY<14,AFS.TRANS.POS>     ; * JMK84
                              INS 0 BEFORE AFS.TRANS.ARRAY<15,AFS.TRANS.POS>     ; * JMK84
                              INS PRO.REC<44> BEFORE AFS.TRANS.ARRAY<16,AFS.TRANS.POS>     ; * JMK79
                        END CASE

                     END                 ; * LOCATE CARRIER IN AFS.TRANS.ARRAY<1> BY 'AR' SETTING AFS.TRANS.POS
                  END                    ; * IF CARRIER='00642' OR CARRIER='03029' THEN
               END                       ; * IF DATE() GE "15380" OR USER = "NPRATT" THEN


            END                          ; * IF NOT(DFLAG)

* Accumulate out-bound expenses and regions
            EXP.COUNT=DCOUNT(PRO.REC<31>,CHAR(253))
            IF EXP.COUNT=0 THEN EXP.COUNT=1
            BEGIN CASE
               CASE PRO.REC<2>='O'
                  IF NOT(DFLAG) THEN
                     IF EXPENSE='Y' THEN
                        FOR I=1 TO EXP.COUNT
                           LOCATE PRO.REC<31,I> IN EXPS<1>,1 BY 'AL' SETTING POS THEN

                              EXPS<5,POS>=EXPS<5,POS>+PRO.REC<33,I>+PRO.REC<32,I>
                           END ELSE
                              EXPS=INSERT(EXPS,1,POS,0,PRO.REC<31,I>)
                              EXPS=INSERT(EXPS,2,POS,0,'0')
                              EXPS=INSERT(EXPS,3,POS,0,'0')
                              EXPS=INSERT(EXPS,4,POS,0,'0')

                              EXPS=INSERT(EXPS,5,POS,0,PRO.REC<33,I>+PRO.REC<32,I>)
                              EXPS=INSERT(EXPS,6,POS,0,'0')
                              EXPS=INSERT(EXPS,7,POS,0,'0')
                           END           ; * LOCATE PRO.REC<31,I> IN EXPS<1>,1 BY 'AL' SETTING POS
                           EXP.OUT.CHG.DUE=EXP.OUT.CHG.DUE+PRO.REC<33,I>+PRO.REC<32,I>
                        NEXT I
                     END                 ; * IF EXPENSE='Y'
                     IF REGION='Y' THEN
                        LOCATE REG IN REGS<1>,1 BY 'AL' SETTING POS THEN

                           REGS<5,POS>=REGS<5,POS>+PRO.REC<8>+PRO.REC<42>+PRO.REC<43>+PRO.REC<44>+PRO.REC<165>           ; * JMK07
                        END ELSE
                           INS REG BEFORE REGS<1,POS>

                           INS 0 BEFORE REGS<3,POS>
                           INS 0 BEFORE REGS<4,POS>

                           REGS.COST=PRO.REC<8>+PRO.REC<42>+PRO.REC<43>+PRO.REC<44>+PRO.REC<165>     ; * JMK07
                           INS REGS.COST BEFORE REGS<5,POS>
                           INS 0 BEFORE REGS<6,POS>
                        END              ; * LOCATE REG IN REGS<1>,1 BY 'AL' SETTING POS
                     END                 ; * IF REGION='Y'
                     EDI.PPR='PPR'       ; * JMK45
                     IF PRO.REC<88>#'' OR PRO.REC<53>[1,12]='EBILL.IMPORT' THEN  ; * JMK45
                        EDI.PPR='EDI'    ; * JMK45
                     END                 ; * JMK45

                     IF EDI.PPR='EDI' THEN         ; * JMK45

                        BEGIN CASE       ; * JMK97
                           CASE CLIENT='01148' AND END.DATE GT ICONV('07/10/08','D')       ; * JMK99
                              IF CARRIER='00015' OR CARRIER='01075' THEN         ; * JMK99
                                 NUM.EDI.OUT<1,2>=NUM.EDI.OUT<1,2>+1   ; * JMK99
                                 IF NOT(SEPARATE.REGIONS) THEN         ; * JMK99
                                    REG.COUNTS<8,REG.POS>+=1           ; * JMK99
                                 END     ; * JMK99
                                 IF CARRIER='00015' THEN     ; * JMK99
                                    IF CLIENT='01148' THEN   ; * JMK99
                                       LOCATE PRO.REC<94> IN EDI.COUNT.ARRAY<1> BY 'AR' SETTING EDI.COUNT.POS ELSE       ; * JMK99
                                          INS PRO.REC<94> BEFORE EDI.COUNT.ARRAY<1,EDI.COUNT.POS>    ; * JMK99
                                       END         ; * JMK99
                                       IF NOT(SEPARATE.REGIONS) THEN   ; * JMK99
                                          LOCATE PRO.REC<94> IN REG.COUNTS<11,REG.POS> BY 'AR' SETTING REG.EDI.COUNT.POS ELSE      ; * JMK99
                                             INS PRO.REC<94> BEFORE REG.COUNTS<11,REG.POS,REG.EDI.COUNT.POS>   ; * JMK99
                                          END      ; * JMK99
                                       END         ; * JMK99
                                    END ELSE       ; * JMK99
                                       EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1         ; * JMK99
                                       IF NOT(SEPARATE.REGIONS) THEN   ; * JMK99
                                          REG.COUNTS<13,REG.POS>+=1    ; * JMK99
                                       END         ; * JMK99
                                    END  ; * JMK99
                                 END ELSE          ; * JMK99
                                    EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1  ; * JMK99
                                    IF NOT(SEPARATE.REGIONS) THEN      ; * JMK99
                                       REG.COUNTS<13,REG.POS>+=1       ; * JMK99
                                    END  ; * JMK99
                                 END     ; * JMK99
                              END ELSE   ; * JMK99
                                 NUM.EDI.OUT<1,1>=NUM.EDI.OUT<1,1>+1   ; * JMK99
                                 IF NOT(SEPARATE.REGIONS) THEN         ; * JMK99
                                    REG.COUNTS<7,REG.POS>+=1           ; * JMK99
                                 END     ; * JMK99
                              END        ; * JMK99

                           CASE CLIENT='01478' OR CLIENT='01371' OR CLIENT='01398' OR CLIENT='01539'           ; * JMK97 ; * JMK98 ; * JMK99
                              IF CARRIER='00015' OR CARRIER='01075' THEN         ; * JMK97
                                 NUM.EDI.OUT<1,2>=NUM.EDI.OUT<1,2>+1   ; * JMK97
                                 IF NOT(SEPARATE.REGIONS) THEN         ; * JMK97
                                    REG.COUNTS<8,REG.POS>+=1           ; * JMK97
                                 END     ; * JMK97

                                 IF CARRIER='00015' THEN     ; * JMK99
                                    IF CLIENT='01148' THEN   ; * JMK99
                                       LOCATE PRO.REC<94> IN EDI.COUNT.ARRAY<1> BY 'AR' SETTING EDI.COUNT.POS ELSE       ; * JMK99
                                          INS PRO.REC<94> BEFORE EDI.COUNT.ARRAY<1,EDI.COUNT.POS>    ; * JMK99
                                       END         ; * JMK99
                                       IF NOT(SEPARATE.REGIONS) THEN   ; * JMK99
                                          LOCATE PRO.REC<94> IN REG.COUNTS<11,REG.POS> BY 'AR' SETTING REG.EDI.COUNT.POS ELSE      ; * JMK99
                                             INS PRO.REC<94> BEFORE REG.COUNTS<11,REG.POS,REG.EDI.COUNT.POS>   ; * JMK99
                                          END      ; * JMK99
                                       END         ; * JMK99
                                    END ELSE       ; * JMK99
                                       EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1         ; * JMK99
                                       IF NOT(SEPARATE.REGIONS) THEN   ; * JMK99
                                          REG.COUNTS<13,REG.POS>+=1    ; * JMK99
                                       END         ; * JMK99
                                    END  ; * JMK99
                                 END ELSE          ; * JMK99
                                    EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1  ; * JMK99
                                    IF NOT(SEPARATE.REGIONS) THEN      ; * JMK99
                                       REG.COUNTS<13,REG.POS>+=1       ; * JMK99
                                    END  ; * JMK99
                                 END     ; * JMK99
                              END ELSE   ; * JMK97
                                 NUM.EDI.OUT<1,1>=NUM.EDI.OUT<1,1>+1   ; * JMK97
                                 IF NOT(SEPARATE.REGIONS) THEN         ; * JMK97
                                    REG.COUNTS<7,REG.POS>+=1           ; * JMK97
                                 END     ; * JMK97
                              END        ; * JMK97

                           CASE 1        ; * JMK97
                              IF CARRIER='01075' OR CARRIER='00041' THEN         ; * JMK81
                                 NUM.EDI.OUT<1,2>=NUM.EDI.OUT<1,2>+1
                                 IF PRO.REC<21>='1' THEN     ; * DRF028
                                    LTL.COUNT=LTL.COUNT+1    ; * DRF028
                                 END ELSE          ; * DRF028
                                    NON.LTL.COUNT=NON.LTL.COUNT+1      ; * DRF028
                                 END     ; * DRF028
                                 IF NOT(SEPARATE.REGIONS) THEN         ; * JMK32
                                    REG.COUNTS<8,REG.POS>+=1           ; * JMK32
                                    IF PRO.REC<21>='1' THEN  ; * DRF028
                                       REG.COUNTS<14,REG.POS>=REG.COUNTS<14,REG.POS>+1     ; * DRF028
                                    END ELSE       ; * DRF028
                                       REG.COUNTS<15,REG.POS>=REG.COUNTS<15,REG.POS>+1     ; * DRF028
                                    END  ; * DRF028
                                 END     ; * JMK32
                                 IF CLIENT='01163' AND CARRIER='01075' THEN
                                    EDI.MD.FEDEX.GROUND.COUNT=EDI.MD.FEDEX.GROUND.COUNT+1
                                    IF NOT(SEPARATE.REGIONS) THEN      ; * JMK32
                                       REG.COUNTS<12,REG.POS>+=1       ; * JMK32
                                    END  ; * JMK32
                                 END
                                 IF CLIENT='01292' AND CARRIER='00041' THEN      ; * JMK30
                                    NUM.UPS.BILLS+=1         ; * JMK30
                                    NUM.UPS.TRACK+=PRO.REC<198>+0      ; * JMK30
                                    IF NOT(SEPARATE.REGIONS) THEN      ; * JMK32
                                       REG.COUNTS<9,REG.POS>+=1        ; * JMK32
                                       REG.COUNTS<10,REG.POS>+=PRO.REC<198>+0    ; * JMK32
                                    END  ; * JMK32
                                 END     ; * JMK30
                                 IF CLIENT='01747' AND CARRIER='00041' THEN      ; * JMK116
                                    NUM.UPS.BILLS+=1         ; * JMK116
                                    NUM.UPS.TRACK+=PRO.REC<198>+0      ; * JMK116
                                    IF NOT(SEPARATE.REGIONS) THEN      ; * JMK116
                                       REG.COUNTS<9,REG.POS>+=1        ; * JMK116
                                       REG.COUNTS<10,REG.POS>+=PRO.REC<198>+0    ; * JMK116
                                    END  ; * JMK116
                                 END     ; * JMK116

                                 IF CARRIER='00015' THEN
                                    IF CLIENT='01078' OR CLIENT='01148' THEN
                                       LOCATE PRO.REC<94> IN EDI.COUNT.ARRAY<1> BY 'AR' SETTING EDI.COUNT.POS ELSE
                                          INS PRO.REC<94> BEFORE EDI.COUNT.ARRAY<1,EDI.COUNT.POS>
                                       END
                                       IF NOT(SEPARATE.REGIONS) THEN
                                          LOCATE PRO.REC<94> IN REG.COUNTS<11,REG.POS> BY 'AR' SETTING REG.EDI.COUNT.POS ELSE
                                             INS PRO.REC<94> BEFORE REG.COUNTS<11,REG.POS,REG.EDI.COUNT.POS>
                                          END
                                       END
                                    END
                                 END ELSE
                                    EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1
                                    IF NOT(SEPARATE.REGIONS) THEN
                                       REG.COUNTS<13,REG.POS>+=1
                                    END
                                 END
                              END ELSE
                                 NUM.EDI.OUT<1,1>=NUM.EDI.OUT<1,1>+1
                                 IF PRO.REC<21>='1' THEN     ; * DRF028
                                    LTL.COUNT=LTL.COUNT+1    ; * DRF028
                                 END ELSE          ; * DRF028
                                    NON.LTL.COUNT=NON.LTL.COUNT+1      ; * DRF028
                                 END     ; * DRF028
                                 IF NOT(SEPARATE.REGIONS) THEN
                                    REG.COUNTS<7,REG.POS>+=1
                                    IF PRO.REC<21>='1' THEN  ; * DRF028
                                       REG.COUNTS<14,REG.POS>=REG.COUNTS<14,REG.POS>+1     ; * DRF028
                                    END ELSE       ; * DRF028
                                       REG.COUNTS<15,REG.POS>=REG.COUNTS<15,REG.POS>+1     ; * DRF028
                                    END  ; * DRF028
                                 END
                              END

                        END CASE         ; * JMK97
                     END ELSE
                        IF NOT(CMADJ) THEN NUM.OUT.PAID=NUM.OUT.PAID+1
                        IF NOT(CMADJ) THEN         ; * DRF028
                           IF PRO.REC<21>='1' THEN           ; * DRF028
                              LTL.COUNT=LTL.COUNT+1          ; * DRF028
                           END ELSE      ; * DRF028
                              NON.LTL.COUNT=NON.LTL.COUNT+1  ; * DRF028
                           END           ; * DRF028
                        END              ; * DRF028
                        IF NOT(CMADJ) THEN         ; * JMK32

                           IF NOT(SEPARATE.REGIONS) THEN     ; * JMK32
                              REG.COUNTS<5,REG.POS>+=1       ; * JMK32
                              IF PRO.REC<21>='1' THEN        ; * DRF028
                                 REG.COUNTS<14,REG.POS>=REG.COUNTS<14,REG.POS>+1           ; * DRF028
                              END ELSE   ; * DRF028
                                 REG.COUNTS<15,REG.POS>=REG.COUNTS<15,REG.POS>+1           ; * DRF028
                              END        ; * DRF028
                           END           ; * JMK32
                        END
                     END

                     IF BANK.FB.TYPE#'F' AND PRO.REC<37>#'' THEN       ; * JMK94 ; * JMK124
                        NONF.CNT+=1      ; * JMK94
                        NONF.AMT+=PRO.REC<8>       ; * JMK94
                     END                 ; * JMK94

                     IF NOT(RFLAG) AND PRO.REC<63>+0>0 THEN
                        IF PRO.REC<8>-PRO.REC<63> GT 0 OR CLIENT="00891" THEN
                           O.MIS.ROUTE<1>=O.MIS.ROUTE<1>+1
                           O.MIS.ROUTE<2>=O.MIS.ROUTE<2>+PRO.REC<8>
                           O.MIS.ROUTE<3>=O.MIS.ROUTE<3>+PRO.REC<63>
                        END
                     END                 ; * IF NOT(RFLAG) AND PRO.REC<63>+0>0 AND VC.OVERRIDE#'Y'
                     IF NOT(RFLAG) AND PRO.REC<143>+0>0 THEN           ; * JMK83
                        IF PRO.REC<8>-PRO.REC<143> GT 0 OR CLIENT="00891" THEN   ; * JMK83
                           O.LCC.ROUTE<1>=O.LCC.ROUTE<1>+1   ; * JMK83
                           O.LCC.ROUTE<2>=O.LCC.ROUTE<2>+PRO.REC<8>    ; * JMK83
                           O.LCC.ROUTE<3>=O.LCC.ROUTE<3>+PRO.REC<143>  ; * JMK83
                        END              ; * JMK83
                     END                 ; * JMK83
                     IF NEW.SOC THEN

                        OUT.CHG.DUE=OUT.CHG.DUE+PRO.REC<8>+PRO.REC<42>+PRO.REC<43>+PRO.REC<44>+PRO.REC<165>    ; * Add on the commission ; * JMK07
                        IF REBATE.FLG THEN         ; * JMK88
                           REBATE.BASE.OUT+=PRO.REC<8>       ; * JMK88
                           REBATE.INCR.OUT+=PRO.REC<42>+PRO.REC<43>+PRO.REC<44>+PRO.REC<165>         ; * JMK88
                        END              ; * JMK88
                     END ELSE
                        OUT.CHG.DUE=OUT.CHG.DUE+PRO.REC<8>
                     END

                     REG.OUT.CHG.DUE=REG.OUT.CHG.DUE+PRO.REC<8>+PRO.REC<42>+PRO.REC<43>+PRO.REC<44>+PRO.REC<165>         ; * JMK07
                  END                    ; * IF NOT(DFLAG)

* Accumulated in-bound expenses and regions
               CASE PRO.REC<2>='I'
                  IF NOT(DFLAG) THEN
                     IF EXPENSE='Y' THEN
                        FOR I=1 TO EXP.COUNT
                           LOCATE PRO.REC<31,I> IN EXPS<1>,1 BY 'AL' SETTING POS THEN

                              EXPS<6,POS>=EXPS<6,POS>+PRO.REC<33,I>+PRO.REC<32,I>
                           END ELSE
                              EXPS=INSERT(EXPS,1,POS,0,PRO.REC<31,I>)
                              EXPS=INSERT(EXPS,2,POS,0,'0')
                              EXPS=INSERT(EXPS,3,POS,0,'0')
                              EXPS=INSERT(EXPS,4,POS,0,'0')
                              EXPS=INSERT(EXPS,5,POS,0,'0')

                              EXPS=INSERT(EXPS,6,POS,0,PRO.REC<33,I>+PRO.REC<32,I>)
                              EXPS=INSERT(EXPS,7,POS,0,'0')
                           END           ; * LOCATE PRO.REC<31,I> IN EXPS<1>,1 BY 'AL' SETTING POS
                           EXP.IN.CHG.DUE=EXP.IN.CHG.DUE+PRO.REC<33,I>+PRO.REC<32,I>
                        NEXT I
                     END                 ; * IF EXPENSE='Y'
                     IF REGION='Y' THEN
                        LOCATE REG IN REGS<1>,1 BY 'AL' SETTING POS THEN

                           REGS<6,POS>=REGS<6,POS>+PRO.REC<8>+PRO.REC<42>+PRO.REC<43>+PRO.REC<44>+PRO.REC<165>           ; * JMK07
                        END ELSE
                           INS PRO.REC<9> BEFORE REGS<1,POS>
                           INS 0 BEFORE REGS<2,POS>
                           INS 0 BEFORE REGS<3,POS>
                           INS 0 BEFORE REGS<4,POS>
                           INS 0 BEFORE REGS<5,POS>

                           REGS.COST=PRO.REC<8>+PRO.REC<42>+PRO.REC<43>+PRO.REC<44>+PRO.REC<165>     ; * JMK07
                           INS REGS.COST BEFORE REGS<6,POS>
                        END              ; * LOCATE REG IN REGS<1>,1 BY 'AL' SETTING POS
                     END                 ; * IF REGION='Y'
                     EDI.PPR='PPR'       ; * JMK45
                     IF PRO.REC<88>#'' OR PRO.REC<53>[1,12]='EBILL.IMPORT' THEN  ; * JMK45
                        EDI.PPR='EDI'    ; * JMK45
                     END                 ; * JMK45

                     IF EDI.PPR='EDI' THEN         ; * JMK45

                        BEGIN CASE       ; * JMK97
                           CASE CLIENT='01148' AND END.DATE GT ICONV('07/10/08','D')       ; * JMK97 ; * JMK98 ; * JMK99
                              IF CARRIER='00015' OR CARRIER='01075' THEN         ; * JMK97
                                 NUM.EDI.IN<1,2>=NUM.EDI.IN<1,2>+1     ; * JMK97
                                 IF NOT(SEPARATE.REGIONS) THEN         ; * JMK97
                                    REG.COUNTS<8,REG.POS>+=1           ; * JMK97
                                 END     ; * JMK97
                                 IF CARRIER='00015' THEN     ; * JMK99
                                    IF CLIENT='01148' THEN   ; * JMK99
                                       LOCATE PRO.REC<94> IN EDI.COUNT.ARRAY<1> BY 'AR' SETTING EDI.COUNT.POS ELSE       ; * JMK99
                                          INS PRO.REC<94> BEFORE EDI.COUNT.ARRAY<1,EDI.COUNT.POS>    ; * JMK99
                                       END         ; * JMK99
                                       IF NOT(SEPARATE.REGIONS) THEN   ; * JMK99
                                          LOCATE PRO.REC<94> IN REG.COUNTS<11,REG.POS> BY 'AR' SETTING REG.EDI.COUNT.POS ELSE      ; * JMK99
                                             INS PRO.REC<94> BEFORE REG.COUNTS<11,REG.POS,REG.EDI.COUNT.POS>   ; * JMK99
                                          END      ; * JMK99
                                       END         ; * JMK99
                                    END ELSE       ; * JMK99
                                       EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1         ; * JMK99
                                       IF NOT(SEPARATE.REGIONS) THEN   ; * JMK99
                                          REG.COUNTS<13,REG.POS>+=1    ; * JMK99
                                       END         ; * JMK99
                                    END  ; * JMK99
                                 END ELSE          ; * JMK99
                                    EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1  ; * JMK99
                                    IF NOT(SEPARATE.REGIONS) THEN      ; * JMK99
                                       REG.COUNTS<13,REG.POS>+=1       ; * JMK99
                                    END  ; * JMK99
                                 END     ; * JMK99
                              END ELSE   ; * JMK97
                                 NUM.EDI.IN<1,1>=NUM.EDI.IN<1,1>+1     ; * JMK97
                                 IF NOT(SEPARATE.REGIONS) THEN         ; * JMK97
                                    REG.COUNTS<7,REG.POS>+=1           ; * JMK97
                                 END     ; * JMK97
                              END        ; * JMK97

                           CASE CLIENT='01478' OR CLIENT='01371' OR CLIENT='01398' OR CLIENT='01539'           ; * JMK97 ; * JMK98 ; * JMK99
                              IF CARRIER='00015' OR CARRIER='01075' THEN         ; * JMK97
                                 NUM.EDI.IN<1,2>=NUM.EDI.IN<1,2>+1     ; * JMK97
                                 IF NOT(SEPARATE.REGIONS) THEN         ; * JMK97
                                    REG.COUNTS<8,REG.POS>+=1           ; * JMK97
                                 END     ; * JMK97

                                 IF CARRIER='00015' THEN     ; * JMK99
                                    IF CLIENT='01148' THEN   ; * JMK99
                                       LOCATE PRO.REC<94> IN EDI.COUNT.ARRAY<1> BY 'AR' SETTING EDI.COUNT.POS ELSE       ; * JMK99
                                          INS PRO.REC<94> BEFORE EDI.COUNT.ARRAY<1,EDI.COUNT.POS>    ; * JMK99
                                       END         ; * JMK99
                                       IF NOT(SEPARATE.REGIONS) THEN   ; * JMK99
                                          LOCATE PRO.REC<94> IN REG.COUNTS<11,REG.POS> BY 'AR' SETTING REG.EDI.COUNT.POS ELSE      ; * JMK99
                                             INS PRO.REC<94> BEFORE REG.COUNTS<11,REG.POS,REG.EDI.COUNT.POS>   ; * JMK99
                                          END      ; * JMK99
                                       END         ; * JMK99
                                    END ELSE       ; * JMK99
                                       EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1         ; * JMK99
                                       IF NOT(SEPARATE.REGIONS) THEN   ; * JMK99
                                          REG.COUNTS<13,REG.POS>+=1    ; * JMK99
                                       END         ; * JMK99
                                    END  ; * JMK99
                                 END ELSE          ; * JMK99
                                    EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1  ; * JMK99
                                    IF NOT(SEPARATE.REGIONS) THEN      ; * JMK99
                                       REG.COUNTS<13,REG.POS>+=1       ; * JMK99
                                    END  ; * JMK99
                                 END     ; * JMK99
                              END ELSE   ; * JMK97
                                 NUM.EDI.IN<1,1>=NUM.EDI.IN<1,1>+1     ; * JMK97
                                 IF NOT(SEPARATE.REGIONS) THEN         ; * JMK97
                                    REG.COUNTS<7,REG.POS>+=1           ; * JMK97
                                 END     ; * JMK97
                              END        ; * JMK97

                           CASE 1        ; * JMK97
                              IF CARRIER='01075' OR CARRIER='00041' THEN         ; * JMK81
                                 NUM.EDI.IN<1,2>=NUM.EDI.IN<1,2>+1
                                 IF PRO.REC<21>='1' THEN     ; * DRF028
                                    LTL.COUNT=LTL.COUNT+1    ; * DRF028
                                 END ELSE          ; * DRF028
                                    NON.LTL.COUNT=NON.LTL.COUNT+1      ; * DRF028
                                 END     ; * DRF028
                                 IF NOT(SEPARATE.REGIONS) THEN
                                    REG.COUNTS<8,REG.POS>+=1
                                    IF PRO.REC<21>='1' THEN  ; * DRF028
                                       REG.COUNTS<14,REG.POS>=REG.COUNTS<14,REG.POS>+1     ; * DRF028
                                    END ELSE       ; * DRF028
                                       REG.COUNTS<15,REG.POS>=REG.COUNTS<15,REG.POS>+1     ; * DRF028
                                    END  ; * DRF028
                                 END
                                 IF CLIENT='01163' AND CARRIER='01075' THEN
                                    EDI.MD.FEDEX.GROUND.COUNT=EDI.MD.FEDEX.GROUND.COUNT+1
                                    IF NOT(SEPARATE.REGIONS) THEN      ; * JMK32
                                       REG.COUNTS<12,REG.POS>+=1       ; * JMK32
                                    END  ; * JMK32
                                 END
                                 IF CLIENT='01292' AND CARRIER='00041' THEN      ; * JMK30
                                    NUM.UPS.BILLS+=1         ; * JMK30
                                    NUM.UPS.TRACK+=PRO.REC<198>+0      ; * JMK30
                                    IF NOT(SEPARATE.REGIONS) THEN      ; * JMK32
                                       REG.COUNTS<9,REG.POS>+=1        ; * JMK32
                                       REG.COUNTS<10,REG.POS>+=PRO.REC<198>+0    ; * JMK32
                                    END  ; * JMK32
                                 END     ; * JMK30
                                 IF CLIENT='01747' AND CARRIER='00041' THEN      ; * JMK116
                                    NUM.UPS.BILLS+=1         ; * JMK116
                                    NUM.UPS.TRACK+=PRO.REC<198>+0      ; * JMK116
                                    IF NOT(SEPARATE.REGIONS) THEN      ; * JMK116
                                       REG.COUNTS<9,REG.POS>+=1        ; * JMK116
                                       REG.COUNTS<10,REG.POS>+=PRO.REC<198>+0    ; * JMK116
                                    END  ; * JMK116
                                 END     ; * JMK116

                                 IF CARRIER='00015' THEN
                                    IF CLIENT='01078' OR CLIENT='01148' THEN
                                       LOCATE PRO.REC<94> IN EDI.COUNT.ARRAY<1> BY 'AR' SETTING EDI.COUNT.POS ELSE
                                          INS PRO.REC<94> BEFORE EDI.COUNT.ARRAY<1,EDI.COUNT.POS>
                                       END
                                       IF NOT(SEPARATE.REGIONS) THEN
                                          LOCATE PRO.REC<94> IN REG.COUNTS<11,REG.POS> BY 'AR' SETTING REG.EDI.COUNT.POS ELSE
                                             INS PRO.REC<94> BEFORE REG.COUNTS<11,REG.POS,REG.EDI.COUNT.POS>
                                          END
                                       END
                                    END
                                 END ELSE
                                    EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1
                                    IF NOT(SEPARATE.REGIONS) THEN
                                       REG.COUNTS<13,REG.POS>+=1
                                    END
                                 END
                              END ELSE
                                 NUM.EDI.IN<1,1>=NUM.EDI.IN<1,1>+1
                                 IF PRO.REC<21>='1' THEN     ; * DRF028
                                    LTL.COUNT=LTL.COUNT+1    ; * DRF028
                                 END ELSE          ; * DRF028
                                    NON.LTL.COUNT=NON.LTL.COUNT+1      ; * DRF028
                                 END     ; * DRF028
                                 IF NOT(SEPARATE.REGIONS) THEN
                                    REG.COUNTS<7,REG.POS>+=1
                                    IF PRO.REC<21>='1' THEN  ; * DRF028
                                       REG.COUNTS<14,REG.POS>=REG.COUNTS<14,REG.POS>+1     ; * DRF028
                                    END ELSE       ; * DRF028
                                       REG.COUNTS<15,REG.POS>=REG.COUNTS<15,REG.POS>+1     ; * DRF028
                                    END  ; * DRF028
                                 END
                              END

                        END CASE         ; * JMK97
                     END ELSE
                        IF NOT(CMADJ) THEN NUM.IN.PAID=NUM.IN.PAID+1
                        IF NOT(CMADJ) THEN         ; * DRF028
                           IF PRO.REC<21>='1' THEN           ; * DRF028
                              LTL.COUNT=LTL.COUNT+1          ; * DRF028
                           END ELSE      ; * DRF028
                              NON.LTL.COUNT=NON.LTL.COUNT+1  ; * DRF028
                           END           ; * DRF028
                        END              ; * DRF028
                        IF NOT(CMADJ) THEN         ; * JMK32
                           IF NOT(SEPARATE.REGIONS) THEN     ; * JMK32
                              REG.COUNTS<5,REG.POS>+=1       ; * JMK32
                              IF PRO.REC<21>='1' THEN        ; * DRF028
                                 REG.COUNTS<14,REG.POS>=REG.COUNTS<14,REG.POS>+1           ; * DRF028
                              END ELSE   ; * DRF028
                                 REG.COUNTS<15,REG.POS>=REG.COUNTS<15,REG.POS>+1           ; * DRF028
                              END        ; * DRF028
                           END           ; * JMK32
                        END
                     END


                     IF BANK.FB.TYPE#'F' AND PRO.REC<37>#'' THEN       ; * JMK94 ; * JMK124
                        NONF.CNT+=1      ; * JMK94
                        NONF.AMT+=PRO.REC<8>       ; * JMK94
                     END                 ; * JMK94

                     IF NOT(RFLAG) AND PRO.REC<63>+0>0 THEN
                        IF PRO.REC<8>-PRO.REC<63> GT 0 OR CLIENT="00891" THEN
                           I.MIS.ROUTE<1>=I.MIS.ROUTE<1>+1
                           I.MIS.ROUTE<2>=I.MIS.ROUTE<2>+PRO.REC<8>
                           I.MIS.ROUTE<3>=I.MIS.ROUTE<3>+PRO.REC<63>
                        END
                     END                 ; * IF NOT(RFLAG) AND PRO.REC<63>+0>0 AND VC.OVERRIDE#'Y'
                     IF NOT(RFLAG) AND PRO.REC<143>+0>0 THEN           ; * JMK83
                        IF PRO.REC<8>-PRO.REC<143> GT 0 OR CLIENT="00891" THEN   ; * JMK83
                           I.LCC.ROUTE<1>=I.LCC.ROUTE<1>+1   ; * JMK83
                           I.LCC.ROUTE<2>=I.LCC.ROUTE<2>+PRO.REC<8>    ; * JMK83
                           I.LCC.ROUTE<3>=I.LCC.ROUTE<3>+PRO.REC<143>  ; * JMK83
                        END              ; * JMK83
                     END                 ; * JMK83
                     IF NEW.SOC THEN

                        IN.CHG.DUE=IN.CHG.DUE+PRO.REC<8>+PRO.REC<42>+PRO.REC<43>+PRO.REC<44>+PRO.REC<165>      ; * Add on the commission ; * JMK07
                        IF REBATE.FLG THEN         ; * JMK88
                           REBATE.BASE.IN+=PRO.REC<8>        ; * JMK88
                           REBATE.INCR.IN+=PRO.REC<42>+PRO.REC<43>+PRO.REC<44>+PRO.REC<165>          ; * JMK88
                        END              ; * JMK88
                     END ELSE
                        IN.CHG.DUE=IN.CHG.DUE+PRO.REC<8>
                     END

                     REG.IN.CHG.DUE=REG.IN.CHG.DUE+PRO.REC<8>+PRO.REC<42>+PRO.REC<43>+PRO.REC<44>+PRO.REC<165>           ; * JMK07
                  END                    ; * IF NOT(DFLAG)

* Accumulated third party expenses and regions
               CASE 1
                  IF NOT(DFLAG) THEN
                     IF EXPENSE='Y' THEN
                        FOR I=1 TO EXP.COUNT
                           LOCATE PRO.REC<31,I> IN EXPS<1>,1 BY 'AL' SETTING POS THEN

                              EXPS<7,POS>=EXPS<7,POS>+PRO.REC<33,I>+PRO.REC<32,I>
                           END ELSE
                              EXPS=INSERT(EXPS,1,POS,0,PRO.REC<31,I>)
                              EXPS=INSERT(EXPS,2,POS,0,'0')
                              EXPS=INSERT(EXPS,3,POS,0,'0')
                              EXPS=INSERT(EXPS,4,POS,0,'0')
                              EXPS=INSERT(EXPS,5,POS,0,'0')
                              EXPS=INSERT(EXPS,6,POS,0,'0')

                              EXPS=INSERT(EXPS,7,POS,0,PRO.REC<33,I>+PRO.REC<32,I>)
                           END
                           EXP.THIRD.CHG.DUE=EXP.THIRD.CHG.DUE+PRO.REC<33,I>+PRO.REC<32,I>
                        NEXT I
                     END                 ; * IF EXPENSE='Y'
                     IF REGION='Y' THEN
                        LOCATE REG IN REGS<1>,1 BY 'AL' SETTING POS THEN

                           REGS<7,POS>+=PRO.REC<8>+PRO.REC<42>+PRO.REC<43>+PRO.REC<44>+PRO.REC<165>  ; * JMK07
                        END ELSE
                           INS REG BEFORE REGS<1,POS>
                           INS 0 BEFORE REGS<2,POS>
                           INS 0 BEFORE REGS<3,POS>
                           INS 0 BEFORE REGS<4,POS>
                           INS 0 BEFORE REGS<5,POS>
                           INS 0 BEFORE REGS<6,POS>

                           REGS.COST=PRO.REC<8>+PRO.REC<42>+PRO.REC<43>+PRO.REC<44>+PRO.REC<165>     ; * JMK07
                           INS REGS.COST BEFORE REGS<7,POS>
                        END              ; * LOCATE REG IN REGS<1>,1 BY 'AL' SETTING POS
                     END                 ; * IF REGION='Y'
                     EDI.PPR='PPR'       ; * JMK45
                     IF PRO.REC<88>#'' OR PRO.REC<53>[1,12]='EBILL.IMPORT' THEN  ; * JMK45
                        EDI.PPR='EDI'    ; * JMK45
                     END                 ; * JMK45

                     IF EDI.PPR='EDI' THEN         ; * JMK45

                        BEGIN CASE       ; * JMK97
                           CASE CLIENT='01148' AND END.DATE GT ICONV('07/10/08','D')       ; * JMK97 ; * JMK98 ; * JMK99
                              IF CARRIER='00015' OR CARRIER='01075' THEN         ; * JMK97
                                 NUM.EDI.THIRD<1,2>=NUM.EDI.THIRD<1,2>+1         ; * JMK97
                                 IF NOT(SEPARATE.REGIONS) THEN         ; * JMK97
                                    REG.COUNTS<8,REG.POS>+=1           ; * JMK97
                                 END     ; * JMK97
                                 IF CARRIER='00015' THEN     ; * JMK99
                                    IF CLIENT='01148' THEN   ; * JMK99
                                       LOCATE PRO.REC<94> IN EDI.COUNT.ARRAY<1> BY 'AR' SETTING EDI.COUNT.POS ELSE       ; * JMK99
                                          INS PRO.REC<94> BEFORE EDI.COUNT.ARRAY<1,EDI.COUNT.POS>    ; * JMK99
                                       END         ; * JMK99
                                       IF NOT(SEPARATE.REGIONS) THEN   ; * JMK99
                                          LOCATE PRO.REC<94> IN REG.COUNTS<11,REG.POS> BY 'AR' SETTING REG.EDI.COUNT.POS ELSE      ; * JMK99
                                             INS PRO.REC<94> BEFORE REG.COUNTS<11,REG.POS,REG.EDI.COUNT.POS>   ; * JMK99
                                          END      ; * JMK99
                                       END         ; * JMK99
                                    END ELSE       ; * JMK99
                                       EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1         ; * JMK99
                                       IF NOT(SEPARATE.REGIONS) THEN   ; * JMK99
                                          REG.COUNTS<13,REG.POS>+=1    ; * JMK99
                                       END         ; * JMK99
                                    END  ; * JMK99
                                 END ELSE          ; * JMK99
                                    EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1  ; * JMK99
                                    IF NOT(SEPARATE.REGIONS) THEN      ; * JMK99
                                       REG.COUNTS<13,REG.POS>+=1       ; * JMK99
                                    END  ; * JMK99
                                 END     ; * JMK99
                              END ELSE   ; * JMK97
                                 NUM.EDI.THIRD<1,1>=NUM.EDI.THIRD<1,1>+1         ; * JMK97
                                 IF NOT(SEPARATE.REGIONS) THEN         ; * JMK97
                                    REG.COUNTS<7,REG.POS>+=1           ; * JMK97
                                 END     ; * JMK97
                              END        ; * JMK97

                           CASE CLIENT='01478' OR CLIENT='01371' OR CLIENT='01398' OR CLIENT='01539'           ; * JMK97 ; * JMK98 ; * JMK99
                              IF CARRIER='00015' OR CARRIER='01075' THEN         ; * JMK97
                                 NUM.EDI.THIRD<1,2>=NUM.EDI.THIRD<1,2>+1         ; * JMK97
                                 IF NOT(SEPARATE.REGIONS) THEN         ; * JMK97
                                    REG.COUNTS<8,REG.POS>+=1           ; * JMK97
                                 END     ; * JMK97

                                 IF CARRIER='00015' THEN     ; * JMK99
                                    IF CLIENT='01148' THEN   ; * JMK99
                                       LOCATE PRO.REC<94> IN EDI.COUNT.ARRAY<1> BY 'AR' SETTING EDI.COUNT.POS ELSE       ; * JMK99
                                          INS PRO.REC<94> BEFORE EDI.COUNT.ARRAY<1,EDI.COUNT.POS>    ; * JMK99
                                       END         ; * JMK99
                                       IF NOT(SEPARATE.REGIONS) THEN   ; * JMK99
                                          LOCATE PRO.REC<94> IN REG.COUNTS<11,REG.POS> BY 'AR' SETTING REG.EDI.COUNT.POS ELSE      ; * JMK99
                                             INS PRO.REC<94> BEFORE REG.COUNTS<11,REG.POS,REG.EDI.COUNT.POS>   ; * JMK99
                                          END      ; * JMK99
                                       END         ; * JMK99
                                    END ELSE       ; * JMK99
                                       EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1         ; * JMK99
                                       IF NOT(SEPARATE.REGIONS) THEN   ; * JMK99
                                          REG.COUNTS<13,REG.POS>+=1    ; * JMK99
                                       END         ; * JMK99
                                    END  ; * JMK99
                                 END ELSE          ; * JMK99
                                    EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1  ; * JMK99
                                    IF NOT(SEPARATE.REGIONS) THEN      ; * JMK99
                                       REG.COUNTS<13,REG.POS>+=1       ; * JMK99
                                    END  ; * JMK99
                                 END     ; * JMK99
                              END ELSE   ; * JMK97
                                 NUM.EDI.THIRD<1,1>=NUM.EDI.THIRD<1,1>+1         ; * JMK97
                                 IF NOT(SEPARATE.REGIONS) THEN         ; * JMK97
                                    REG.COUNTS<7,REG.POS>+=1           ; * JMK97
                                 END     ; * JMK97
                              END        ; * JMK97

                           CASE 1        ; * JMK97
                              IF CARRIER='01075' OR CARRIER='00041' THEN         ; * JMK81
                                 NUM.EDI.THIRD<1,2>=NUM.EDI.THIRD<1,2>+1
                                 IF PRO.REC<21>='1' THEN     ; * DRF028
                                    LTL.COUNT=LTL.COUNT+1    ; * DRF028
                                 END ELSE          ; * DRF028
                                    NON.LTL.COUNT=NON.LTL.COUNT+1      ; * DRF028
                                 END     ; * DRF028
                                 IF NOT(SEPARATE.REGIONS) THEN
                                    REG.COUNTS<8,REG.POS>+=1
                                    IF PRO.REC<21>='1' THEN  ; * DRF028
                                       REG.COUNTS<14,REG.POS>=REG.COUNTS<14,REG.POS>+1     ; * DRF028
                                    END ELSE       ; * DRF028
                                       REG.COUNTS<15,REG.POS>=REG.COUNTS<15,REG.POS>+1     ; * DRF028
                                    END  ; * DRF028
                                 END
                                 IF CLIENT='01163' AND CARRIER='01075' THEN
                                    EDI.MD.FEDEX.GROUND.COUNT=EDI.MD.FEDEX.GROUND.COUNT+1
                                    IF NOT(SEPARATE.REGIONS) THEN      ; * JMK32
                                       REG.COUNTS<12,REG.POS>+=1       ; * JMK32
                                    END  ; * JMK32
                                 END
                                 IF CLIENT='01292' AND CARRIER='00041' THEN      ; * JMK30
                                    NUM.UPS.BILLS+=1         ; * JMK30
                                    NUM.UPS.TRACK+=PRO.REC<198>+0      ; * JMK30
                                    IF NOT(SEPARATE.REGIONS) THEN      ; * JMK32
                                       REG.COUNTS<9,REG.POS>+=1        ; * JMK32
                                       REG.COUNTS<10,REG.POS>+=PRO.REC<198>+0    ; * JMK32
                                    END  ; * JMK32
                                 END     ; * JMK30
                                 IF CLIENT='01747' AND CARRIER='00041' THEN      ; * JMK116
                                    NUM.UPS.BILLS+=1         ; * JMK116
                                    NUM.UPS.TRACK+=PRO.REC<198>+0      ; * JMK116
                                    IF NOT(SEPARATE.REGIONS) THEN      ; * JMK116
                                       REG.COUNTS<9,REG.POS>+=1        ; * JMK116
                                       REG.COUNTS<10,REG.POS>+=PRO.REC<198>+0    ; * JMK116
                                    END  ; * JMK116
                                 END     ; * JMK116

                                 IF CARRIER='00015' THEN
                                    IF CLIENT='01078' OR CLIENT='01148' THEN
                                       LOCATE PRO.REC<94> IN EDI.COUNT.ARRAY<1> BY 'AR' SETTING EDI.COUNT.POS ELSE
                                          INS PRO.REC<94> BEFORE EDI.COUNT.ARRAY<1,EDI.COUNT.POS>
                                       END
                                       IF NOT(SEPARATE.REGIONS) THEN
                                          LOCATE PRO.REC<94> IN REG.COUNTS<11,REG.POS> BY 'AR' SETTING REG.EDI.COUNT.POS ELSE
                                             INS PRO.REC<94> BEFORE REG.COUNTS<11,REG.POS,REG.EDI.COUNT.POS>
                                          END
                                       END
                                    END
                                 END ELSE
                                    EDI.COUNT.PARCEL.NON.FEDEX.AIR=EDI.COUNT.PARCEL.NON.FEDEX.AIR+1
                                    IF NOT(SEPARATE.REGIONS) THEN
                                       REG.COUNTS<13,REG.POS>+=1
                                    END
                                 END
                              END ELSE
                                 NUM.EDI.THIRD<1,1>=NUM.EDI.THIRD<1,1>+1
                                 IF PRO.REC<21>='1' THEN     ; * DRF028
                                    LTL.COUNT=LTL.COUNT+1    ; * DRF028
                                 END ELSE          ; * DRF028
                                    NON.LTL.COUNT=NON.LTL.COUNT+1      ; * DRF028
                                 END     ; * DRF028
                                 IF NOT(SEPARATE.REGIONS) THEN
                                    REG.COUNTS<7,REG.POS>+=1
                                    IF PRO.REC<21>='1' THEN  ; * DRF028
                                       REG.COUNTS<14,REG.POS>=REG.COUNTS<14,REG.POS>+1     ; * DRF028
                                    END ELSE       ; * DRF028
                                       REG.COUNTS<15,REG.POS>=REG.COUNTS<15,REG.POS>+1     ; * DRF028
                                    END  ; * DRF028
                                 END
                              END

                        END CASE         ; * JMK97
                     END ELSE
                        IF NOT(CMADJ) THEN NUM.THIRD.PAID=NUM.THIRD.PAID+1
                        IF NOT(CMADJ) THEN         ; * DRF028
                           IF PRO.REC<21>='1' THEN           ; * DRF028
                              LTL.COUNT=LTL.COUNT+1          ; * DRF028
                           END ELSE      ; * DRF028
                              NON.LTL.COUNT=NON.LTL.COUNT+1  ; * DRF028
                           END           ; * DRF028
                        END              ; * DRF028
                        IF NOT(CMADJ) THEN         ; * JMK32
                           IF NOT(SEPARATE.REGIONS) THEN     ; * JMK32
                              REG.COUNTS<5,REG.POS>+=1       ; * JMK32
                              IF PRO.REC<21>='1' THEN        ; * DRF028
                                 REG.COUNTS<14,REG.POS>=REG.COUNTS<14,REG.POS>+1           ; * DRF028
                              END ELSE   ; * DRF028
                                 REG.COUNTS<15,REG.POS>=REG.COUNTS<15,REG.POS>+1           ; * DRF028
                              END        ; * DRF028
                           END           ; * JMK32
                        END
                     END

                     IF BANK.FB.TYPE#'F' AND PRO.REC<37>#'' THEN       ; * JMK94 ; * JMK124
                        NONF.CNT+=1      ; * JMK94
                        NONF.AMT+=PRO.REC<8>       ; * JMK94
                     END                 ; * JMK94

                     IF NOT(RFLAG) AND PRO.REC<63>+0>0 THEN
                        IF PRO.REC<8>-PRO.REC<63> GT 0 OR CLIENT="00891" THEN
                           T.MIS.ROUTE<1>=T.MIS.ROUTE<1>+1
                           T.MIS.ROUTE<2>=T.MIS.ROUTE<2>+PRO.REC<8>
                           T.MIS.ROUTE<3>=T.MIS.ROUTE<3>+PRO.REC<63>
                        END
                     END                 ; * IF NOT(RFLAG) AND PRO.REC<63>+0>0 AND VC.OVERRIDE#'Y'
                     IF NOT(RFLAG) AND PRO.REC<143>+0>0 THEN           ; * JMK83
                        IF PRO.REC<8>-PRO.REC<143> GT 0 OR CLIENT="00891" THEN   ; * JMK83
                           T.LCC.ROUTE<1>=T.LCC.ROUTE<1>+1   ; * JMK83
                           T.LCC.ROUTE<2>=T.LCC.ROUTE<2>+PRO.REC<8>    ; * JMK83
                           T.LCC.ROUTE<3>=T.LCC.ROUTE<3>+PRO.REC<143>  ; * JMK83
                        END              ; * JMK83
                     END                 ; * JMK83
                     IF NEW.SOC THEN

                        THIRD.CHG.DUE=THIRD.CHG.DUE+PRO.REC<8>+PRO.REC<42>+PRO.REC<43>+PRO.REC<44>+PRO.REC<165>          ; * Add on the commission ; * JMK07
                        IF REBATE.FLG THEN         ; * JMK88
                           REBATE.BASE.THIRD+=PRO.REC<8>     ; * JMK88
                           REBATE.INCR.THIRD+=PRO.REC<42>+PRO.REC<43>+PRO.REC<44>+PRO.REC<165>       ; * JMK88
                        END              ; * JMK88
                     END ELSE
                        THIRD.CHG.DUE=THIRD.CHG.DUE+PRO.REC<8>
                     END

                     REG.THIRD.CHG.DUE=REG.THIRD.CHG.DUE+PRO.REC<8>+PRO.REC<42>+PRO.REC<43>+PRO.REC<44>+PRO.REC<165>     ; * JMK07
                  END                    ; * IF NOT(DFLAG)
            END CASE

* Calculate Expense Code per Division

            IF REGION = "Y" AND EXPENSE = "Y" AND NOT(SEPARATE.REGIONS) THEN     ; * NPR012
               IF NOT(DFLAG) AND NOT(RFLAG) THEN
                  EXP.CODE=PRO.REC<31>
                  SORE.DIV=PRO.REC<9>
                  READ SORE.DIV.REC FROM F.DIVISION,SORE.DIV ELSE SORE.DIV.REC=''
                  SORE.REG=SORE.DIV.REC<45>
                  SORE.CHARGES=PRO.REC<33>
                  SORE.COMM=PRO.REC<32>
                  TOT.SORE.CHARGES = SUM(SORE.CHARGES)
                  TOT.SORE.COMM=SUM(SORE.COMM)
                  TOT.SORE.AMT=TOT.SORE.CHARGES+TOT.SORE.COMM

                  LOCATE SORE.REG IN REGEXP.ARRAY<1> BY 'AR' SETTING DPOS THEN
                     REGEXP.ARRAY<2,DPOS> += TOT.SORE.AMT
                  END ELSE
                     REGEXP.ARRAY=INSERT(REGEXP.ARRAY,1,DPOS,0,SORE.REG)
                     REGEXP.ARRAY=INSERT(REGEXP.ARRAY,2,DPOS,0,TOT.SORE.AMT)
                  END

                  REG.EXP.LIST = REGEXP.ARRAY<3,DPOS>
                  CONVERT @SVM TO @VM IN REG.EXP.LIST

                  REG.EXP.AMTS = REGEXP.ARRAY<4,DPOS>
                  CONVERT @SVM TO @VM IN REG.EXP.AMTS
                  REG.EXP.LIST<2> = REG.EXP.AMTS

                  EXP.COUNT=DCOUNT(EXP.CODE,CHAR(253))
                  FOR II = 1 TO EXP.COUNT
                     W.EXP.CODE = EXP.CODE<1,II>
                     W.EXP.AMT = SORE.CHARGES<1,II> + SORE.COMM<1,II>

                     LOCATE W.EXP.CODE IN REG.EXP.LIST<1> BY 'AR' SETTING EPOS THEN
                        REG.EXP.LIST<2,EPOS> += W.EXP.AMT
                     END ELSE
                        REG.EXP.LIST=INSERT(REG.EXP.LIST,1,EPOS,0,W.EXP.CODE)
                        REG.EXP.LIST=INSERT(REG.EXP.LIST,2,EPOS,0,W.EXP.AMT)
                     END
                  NEXT II

                  NEW.REG.EXP.LIST = REG.EXP.LIST<1>
                  NEW.REG.EXP.AMT = REG.EXP.LIST<2>

                  CONVERT @VM TO @SVM IN NEW.REG.EXP.LIST
                  CONVERT @VM TO @SVM IN NEW.REG.EXP.AMT

                  REGEXP.ARRAY<3,DPOS> = NEW.REG.EXP.LIST
                  REGEXP.ARRAY<4,DPOS> = NEW.REG.EXP.AMT
               END                       ; * NOT(DFLAG) AND NOT(RFLAG)
            END                          ; * REGION = "Y" AND EXPENSE = "Y" AND NOT(SEPARATE.REGIONS)


            IF NOT(DFLAG) THEN

               TOTAL.COMMISSION=TOTAL.COMMISSION+PRO.REC<42>+PRO.REC<43>+PRO.REC<44>+PRO.REC<165>    ; * JMK07
               IF CARRIER#'00041' THEN
                  C.OVER.VAR=C.OVER.VAR+PRO.REC<11>
               END ELSE
                  C.UPS.VAR=C.UPS.VAR+PRO.REC<11>
               END
               C.DISC.VAR=C.DISC.VAR+PRO.REC<10>
               C.CONS.VAR=C.CONS.VAR+PRO.REC<12>
               IF CARRIER#'00041' THEN
                  C.OVER.COM=C.OVER.COM+PRO.REC<43>
               END ELSE
                  C.UPS.COM=C.UPS.COM+PRO.REC<43>
               END
               C.DISC.COM=C.DISC.COM+PRO.REC<42>
               C.CONS.COM=C.CONS.COM+PRO.REC<44>
               C.MGMT.FEE+=PRO.REC<165>  ; * JMK07
               C.UPS.ADD.CORR.FEE+=PRO.REC<123>
               C.UPS.LATE.PAYMENT.FEE+=PRO.REC<148>
               IF BDADJ OR ADADJ THEN
                  IF ADADJ THEN FAD=FAD+PRO.REC<8>
                  IF BDADJ THEN FBD=FBD+PRO.REC<8>
                  C.BD.DISC.VAR=C.BD.DISC.VAR+PRO.REC<34>
                  IF CARRIER#'00041' THEN
                     C.BD.OVER.VAR=C.BD.OVER.VAR+PRO.REC<35>
                  END ELSE
                     C.BD.UPS.VAR=C.BD.UPS.VAR+PRO.REC<35>
                  END
                  C.BD.CONS.VAR=C.BD.CONS.VAR+PRO.REC<36>
               END                       ; * IF BDADJ OR ADADJ
               CAR.CAR.TOT=CAR.CAR.TOT+PRO.REC<7>
               CAR.ACT.TOT=CAR.ACT.TOT+PRO.REC<8>
               TOT.CAR.CAR.TOT=TOT.CAR.CAR.TOT+PRO.REC<7>
               TOT.CAR.ACT.TOT=TOT.CAR.ACT.TOT+PRO.REC<8>
            END                          ; * IF NOT(DFLAG)

* Update inbound and outbound carrier charges
* Do not update the IN.CAR.CHG or OUT.CAR.CHG for
* HOLDs or NEVER PAYS
            IF NOT(RFLAG) THEN
               BEGIN CASE
                  CASE PRO.REC<2>='I'
                     IN.CAR.CHG=IN.CAR.CHG+PRO.REC<7>
                  CASE PRO.REC<2>='O'
                     OUT.CAR.CHG=OUT.CAR.CHG+PRO.REC<7>
                  CASE 1
                     THIRD.CAR.CHG=THIRD.CAR.CHG+PRO.REC<7>
               END CASE
            END                          ; * IF NOT(RFLAG)

            IF NOT(RFLAG) AND NOT(DFLAG) THEN
               BEGIN CASE
                  CASE PRO.REC<2>='I'

                     IN.CLT.CHG=IN.CLT.CHG+PRO.REC<8>+PRO.REC<44>+PRO.REC<42>+PRO.REC<43>+PRO.REC<165>         ; * JMK07
                  CASE PRO.REC<2>='O'

                     OUT.CLT.CHG=OUT.CLT.CHG+PRO.REC<8>+PRO.REC<44>+PRO.REC<42>+PRO.REC<43>+PRO.REC<165>       ; * JMK07
                  CASE 1

                     THIRD.CLT.CHG=THIRD.CLT.CHG+PRO.REC<8>+PRO.REC<44>+PRO.REC<42>+PRO.REC<43>+PRO.REC<165>   ; * JMK07
               END CASE
            END                          ; * IF NOT(RFLAG) AND NOT(DFLAG)

* I do not see where these bill counters are used! - JIM
* If you use them, make sure you consider
* whether-or-not they should include rejected bills.
            CARRIER.BILL.NO=CARRIER.BILL.NO+1
            TOT.CARR.BILL.NO=TOT.CARR.BILL.NO+1
         END                             ; * READ PRO.REC FROM FB.BILLS,PRO.ID

         IF NOT(DFLAG) THEN
            NEW.REC=''
            NEW.REC<1>=PRO.REC<1>
            NEW.REC<2>=PRO.REC<2>
            NEW.REC<3>=PRO.REC<3>
            NEW.REC<4>=PRO.REC<4>
            NEW.REC<6>=PRO.REC<6>
            NEW.REC<7>=PRO.REC<7>
            NEW.REC<8>=PRO.REC<8>
            NEW.REC<9>=PRO.REC<7>-PRO.REC<8>
            IF PRO.REC<12>+0 NE 0 THEN
               NEW.REC<10,-1>=(-PRO.REC<12>)+0
               NEW.REC<11,-1>='C'
            END
            IF PRO.REC<10>+0 NE 0 THEN
               NEW.REC<10,-1>=(-PRO.REC<10>)+0
               NEW.REC<11,-1>='D'
            END
            IF PRO.REC<11>+0 NE 0 THEN
               NEW.REC<10,-1>=(-PRO.REC<11>)+0
               NEW.REC<11,-1>='O'
            END
            IF NEW.REC<10>='' THEN NEW.REC<10>=0   ; * Default to 0
            NEW.REC<13>=PRO.REC<9>
            NEW.REC<14>=FIELD(PRO.REC<14>,'*',1)
            NEW.REC<16>=PRO.REC<16>
            VC.OVERRIDE=''
            IF PRO.REC<17> MATCHES "5N" THEN
               VC.ID=PRO.REC<17>
               IF CUST.VEND.FILE THEN
                  READ DVC FROM F.VC,VC.ID THEN
                     DESC=DVC<1>
                     VC.OVERRIDE=DVC<10>
                     NEW.REC<17>=DESC
                  END ELSE
                     CALL ELINE('Error: VENDOR/CUSTOMER ':VC.ID:' does not exist.')
                  END
               END ELSE
                  CALL ELINE('Error: VENDOR/CUSTOMER file for ':CLIENT:' does not exist.')
               END                       ; * IF CUST.VEND.FILE
            END ELSE
               NEW.REC<17>=PRO.REC<17>
            END                          ; * IF PRO.REC<17> MATCHES "5N"
            STOP.TIMES=DCOUNT(PRO.REC<18>,@VM)
            FOR I=1 TO STOP.TIMES
               ZIP=PRO.REC<18,I>
               IF ZIP='99999' THEN
                  NEW.REC<18,I>='International'
               END ELSE
                  CALL FB.READ.ZIP(ZIP,CITY,STATE)
                  NEW.REC<18,I>=CITY:", ":STATE
               END
            NEXT I
            NEW.REC<19>=PRO.REC<19>
            NEW.REC<24>=PRO.REC<24>
            IF PRO.REC<27> EQ '' THEN
               NEW.REC<25>=PRO.REC<25>
            END ELSE
               NEW.REC<25>=PRO.REC<27>:', ':PRO.REC<25>
            END
            IF PRO.REC<28> EQ '' THEN
               NEW.REC<26>=PRO.REC<26>
            END ELSE
               NEW.REC<26>=PRO.REC<28>:', ':PRO.REC<26>
            END
            NEW.REC<31>=PRO.REC<31>
            NEW.REC<32>=PRO.REC<32>
            NEW.REC<33>=PRO.REC<33>
            NEW.REC<41>=TRIM(PRO.REC<41,1>:' ':PRO.REC<41,2>)
            NEW.REC<42>=PRO.REC<42>
            NEW.REC<43>=PRO.REC<43>
            NEW.REC<44>=PRO.REC<44>
            NEW.REC<45>=PRO.REC<45>
            NEW.REC<49>=PRO.REC<49>
            NEW.REC<50>=PRO.REC<50>
            NEW.REC<51>=PRO.REC<51>
            NEW.REC<52>=PRO.REC<52>
            NEW.REC<56>=PRO.REC<56>
            NEW.REC<165>=PRO.REC<165>    ; * JMK07
            IF EXPENSE='Y' THEN
               X=DCOUNT(NEW.REC<31>,CHAR(253))
               FOR I=1 TO X
                  EXP.ID=PRO.REC<31,I>
                  READV EXP.DESC FROM F.EXPENSE,EXP.ID,1 ELSE EXP.DESC=''
                  NEW.REC<34,I>=EXP.DESC
               NEXT I
            END                          ; * IF EXPENSE='Y'
            WRITE NEW.REC ON F.CLNT.REPORT,PRO.ID
         END                             ; * IF NOT(DFLAG)
      REPEAT

      IF DFLAG AND SEPARATE.REGIONS THEN
         NULL
      END ELSE
         ECX = DCOUNT(EXPS<1>,CHAR(253))           ; * NPR14
         FOR EE = 1 TO ECX               ; * NPR14

            IF EXPS<5,EE> NE "" THEN EXPS<9,EE> += EXPS<5,EE>          ; * NPR14
            IF EXPS<6,EE> NE "" THEN EXPS<9,EE> += EXPS<6,EE>          ; * NPR14
            IF EXPS<7,EE> NE "" THEN EXPS<9,EE> += EXPS<7,EE>          ; * NPR14
         NEXT EE                         ; * NPR14
      END

      LOG.SEQ.NO = 5                     ; * End
      PROC.DESC = "Looping through Bills"
      LOG.ST.DATE = '' ; LOG.ST.TIME = '' ; LOG.END.DATE = DATE() ; LOG.END.TIME = TIME() ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF

      C.OUT.MISROUTE=O.MIS.ROUTE<2>-O.MIS.ROUTE<3>           ; * JMK05
      C.IN.MISROUTE=I.MIS.ROUTE<2>-I.MIS.ROUTE<3>  ; * JMK05
      C.THIRD.MISROUTE=T.MIS.ROUTE<2>-T.MIS.ROUTE<3>         ; * JMK05

* Create special report for Shurtape
      IF CLIENT='10340' AND FROM.PROCESS AND SEPARATE.REGIONS=0 THEN   ; * Shurtape Technologies
         CAR.DA=''
         ST.NUM.NEW.LINES=DCOUNT(CAR.TEMP.DA<1>,@VM)
         IF ST.NUM.NEW.LINES>0 THEN
            ST.WCR.ID='CS*10340*':END.DATE'DY'
            READ CAR.DA FROM F.TABLES,ST.WCR.ID THEN
               IF CAR.DA<DCOUNT(CAR.DA,@AM)-2,1>=END.DATE'D4-' THEN GOTO END.SHURTAPE      ; * This has already been written from a previous run
               UP.ID='FB.TABLES*':ST.WCR.ID
               READV DUMMY FROM F.UP,UP.ID,1 ELSE
                  WRITE CAR.DA ON F.UP,UP.ID
               END
            END ELSE
               UP.ARRAY='*NEW*'
               UP.ID='FB.TABLES*':ST.WCR.ID
               READV DUMMY FROM F.UP,UP.ID,1 ELSE
                  WRITE UP.ARRAY ON F.UP,UP.ID
               END
               CAR.DA=''
               CAR.DA<1>='Shurtape Technologies Weekly Carrier Reports for ':END.DATE'DY'
               CAR.DA<3,1>='Date'
               CAR.DA<3,2>='Carrier'
               CAR.DA<3,3>='Freight Charges'
               CAR.DA<3,4>='Overcharges'
               CAR.DA<3,5>='Logistics'
               CAR.DA<3,6>='Total Charges'
            END
            CAR.DA<-1>=' '
            ST.NEW.START=DCOUNT(CAR.DA,@AM)+1

            FOR X=1 TO ST.NUM.NEW.LINES
               LINE=''
               LINE<1,1>=END.DATE'D4-'
               LINE<1,2>=CAR.TEMP.DA<1,X>
               LINE<1,3>=CAR.TEMP.DA<2,X>'R26'
               LINE<1,4>=CAR.TEMP.DA<3,X>'R26'
               LINE<1,5>=CAR.TEMP.DA<4,X>'R26'
               LINE<1,6>=CAR.TEMP.DA<5,X>'R26'
               CAR.DA<-1>=LINE
            NEXT X

            ST.TOTAL.END=DCOUNT(CAR.DA,@AM)
            LINE=''
            LINE<1,2>='Weekly Totals'
            LINE<1,3>='=SUBTOTAL(9,$C$':ST.NEW.START:':$C$':ST.TOTAL.END:')'
            LINE<1,4>='=SUBTOTAL(9,$D$':ST.NEW.START:':$D$':ST.TOTAL.END:')'
            LINE<1,5>='=SUBTOTAL(9,$E$':ST.NEW.START:':$E$':ST.TOTAL.END:')'
            LINE<1,6>='=SUBTOTAL(9,$F$':ST.NEW.START:':$F$':ST.TOTAL.END:')'
            LINE<2,2>='YTD Subtotals'
            LINE<2,3>='=SUBTOTAL(9,$C$5:$C$':ST.TOTAL.END:')'
            LINE<2,4>='=SUBTOTAL(9,$D$5:$D$':ST.TOTAL.END:')'
            LINE<2,5>='=SUBTOTAL(9,$E$5:$E$':ST.TOTAL.END:')'
            LINE<2,6>='=SUBTOTAL(9,$F$5:$F$':ST.TOTAL.END:')'
            CAR.DA<-1>=LINE
            WRITE CAR.DA ON F.TABLES,ST.WCR.ID
END.SHURTAPE:
            CAR.DA=CHANGE(CAR.DA,@VM,TAB)
         END                             ; * IF ST.NUM.NEW.LINES>0 THEN
      END                                ; * IF CLIENT='10340' AND SEPARATE.REGIONS=0 THEN; * Shurtape Technologies

* End reading and processing bills for weekly reports
***********************************************************************
WEEKLY.FREIGHT.BILL.REPORT:
***********************************************************************
* Begin Weekly Freight Bill Report (email attachment 1)
* The report is printed in this program in the following code, but it is
* built in a dynamic array for writing to a file and for emailing below
* this using a call to BUILD.DF.SUB.

      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK TO BEGIN DEBUG 100...')

      IF FROM.PROCESS THEN               ; * JMK70
         CRT @(0,7):@(-4):'Preparing the Weekly Freight Bill Report (Attachment 1)...':@(0,7):       ; * JMK70
      END                                ; * JMK70

* Read COPIES and modify as needed
      COPIES=CLIENT.REC<100,1>
      IF COPIES='' OR NOT(NUM(COPIES)) THEN COPIES='N'
      IF COPIES='N' THEN GOTO WEEKLY.TC.REPORT     ; *DS001

      LOG.SEQ.NO = 6                     ; * Start
      PROC.DESC = "Freight Bill Report (# 1)"
      LOG.ST.DATE = DATE() ; LOG.ST.TIME = TIME() ; LOG.END.DATE = '' ; LOG.END.TIME = '' ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF
      TEST.REC = ""                      ; *NPRZZ

      IF FROM.PROCESS THEN
         IF SEPARATE.REGIONS THEN
            GOSUB SET.REGIONAL.COPIES
         END
      END ELSE
         IF NOT(HOLD.STAT) THEN
            IF SUMMARY.ONLY THEN
               COPIES=0
            END ELSE
               IF ONE.COPY THEN
                  COPIES=1
               END                       ; * IF ONE.COPY
            END                          ; * IF SUMMARY.ONLY
         END                             ; * IF NOT(HOLD.STAT)
      END                                ; * IF FROM.PROCESS

* Interpret COPIES for the printing loop
      BEGIN CASE
         CASE NOT(NUM(COPIES))
            COPY.COUNT=0
         CASE NUM(COPIES)
            COPY.COUNT=COPIES
         CASE 1
            COPY.COUNT=0
      END CASE

      FOR COPIES.LOOP=1 TO COPY.COUNT
         BEGIN CASE
            CASE REPORT.TYPE='W'
               TITLE.1='Carrier Warning Report'
            CASE REPORT.TYPE='M'
               TITLE.1='Minimum Charge Report'
            CASE REPORT.TYPE='O'
               TITLE.1='On-Line Audit Bills With Overcharge Report'
            CASE 1
               TITLE.1='Freight Bill Report By Carrier'
         END CASE
         TITLE.2='For Client: ':CLIENT:' ':CLIENT.NAME
         IF SEPARATE.REGIONS THEN
            TITLE.2:='  Region: ':REGS<1,REG.COUNT>:' ':REGS<11,REG.COUNT>
         END
         ODATE='Bills Processed From ':BEG.DATE'D2/':' to ':END.DATE'D2/'

         PRINTER ON
         WIDTH=FORMAT.REC<1,1>
         CHAR.PER.IN=16.7
         GOSUB 8110
         IF HOLD.STAT ELSE
            BEGIN CASE
               CASE WIDTH LE 132
                  GOSUB 8110             ; * Report format
               CASE WIDTH LE 170
                  GOSUB 8100             ; * Sideways format
               CASE 1
                  GOSUB 8115
            END CASE
         END
         PAGE 1

         CALL PAGE.HEAD(PROG.NAME,COMPANY.NAME.HTML,TITLE.1,TITLE.2,ODATE,WIDTH,HED)       ; * JMK95

* Build column headings and break lines
         COL.HEAD=''
         SINGLE.BREAK=''
         DOUBLE.BREAK=''
         X=DCOUNT(FORMAT.REC,CHAR(254))
         FOR I=2 TO X
            WIDTH=FORMAT.REC<I,3>
            TOT.FLG=FORMAT.REC<I,4>
            DESC=FORMAT.REC<I,5>
            IF DESC='' THEN DESC=' '
            COL.HEAD=COL.HEAD:OCONV(DESC,'ML#':WIDTH+1)
            IF TOT.FLG='Y' THEN
               SINGLE.BREAK=SINGLE.BREAK:STR('-',WIDTH):' '
               DOUBLE.BREAK=DOUBLE.BREAK:STR('=',WIDTH):' '
            END ELSE
               SINGLE.BREAK=SINGLE.BREAK:STR(' ',WIDTH):' '
               DOUBLE.BREAK=DOUBLE.BREAK:STR(' ',WIDTH):' '
            END                          ; * IF TOT.FLG='Y'
         NEXT I
         HEADING HED:" 'L'":COL.HEAD

         IF CLIENT='01148' THEN TEST.REC<-1> = HED:" 'L'":COL.HEAD

* Print report

         PREV.CARRIER=''
         CARRIER.TOTAL=''
         GRAND.TOTAL=''
         EXECUTE 'GET-LIST ':CH.NUM PASSLIST CAPTURING OUTPUT
         NUM.ITMS=@SELECTED
         COUNTER=0
         DONE=0
         LOOP
            READNEXT PRO.ID ELSE DONE=1
         UNTIL DONE=1 DO
            PRO.TOTAL=''
            COUNTER=COUNTER+1
            CALL PROG.BAR(22,COUNTER,NUM.ITMS,PER)
            READ PRO.REC FROM F.CLNT.REPORT,PRO.ID THEN
               CARRIER=FIELD(PRO.ID,'*',1)
               IF CARRIER NE PREV.CARRIER THEN GOSUB CARRIER.BREAK
               FORMAT.ATTR=1
               LN=''
               LN.POS=0
               NUM.LINES=0
1500:
               FORMAT.ATTR=FORMAT.ATTR+1
               IF FORMAT.REC<FORMAT.ATTR>='' THEN GOTO 2000
               TOT.FLG=FORMAT.REC<FORMAT.ATTR,4>
               BEGIN CASE
                  CASE FORMAT.REC<FORMAT.ATTR,1>='PRO'
                     PRO=FIELD(PRO.ID,'*',2)
                     LN.POS=LN.POS+1
                     LN<LN.POS>=PRO
                     IF NUM.LINES=0 THEN NUM.LINES=1
                     CARRIER.TOTAL<FORMAT.ATTR>+=1

                  CASE FORMAT.REC<FORMAT.ATTR,1>='CWT'
                     BASE.WEIGHT=PRO.REC<6>
                     BASE.PRICE=PRO.REC<8>
                     CWT=(BASE.PRICE/BASE.WEIGHT)*100
                     CWT=CWT'R0'
                     LN.POS=LN.POS+1
                     LN<LN.POS>=CWT
                     IF NUM.LINES=0 THEN NUM.LINES=1

                  CASE FORMAT.REC<FORMAT.ATTR,1>='COST'
                     BASE.COST=PRO.REC<8>
                     LOCATE 'C' IN PRO.REC<11> SETTING POS THEN
                        LOG.AMT=PRO.REC<10,POS>

                        LOG.COMM=PRO.REC<44>
                     END ELSE
                        LOG.COMM=0
                     END                 ; * LOCATE 'C' IN PRO.REC<11> SETTING POS
                     LOCATE 'D' IN PRO.REC<11> SETTING POS THEN
                        DISC.AMT=PRO.REC<10,POS>

                        DISC.COMM=PRO.REC<42>
                     END ELSE
                        DISC.COMM=0
                     END                 ; * LOCATE 'D' IN PRO.REC<11> SETTING POS
                     LOCATE 'O' IN PRO.REC<11> SETTING POS THEN
                        IF CARRIER#'00041' THEN
                           OVC.AMT=PRO.REC<10,POS>
                           OVC.COMM=PRO.REC<43>

                           UPS.COMM=0
                        END ELSE
                           UPS.AMT=PRO.REC<10,POS>
                           UPS.COMM=PRO.REC<43>
                           OVC.COMM=0
                        END
                     END ELSE
                        OVC.COMM=0
                        UPS.COMM=0
                     END                 ; * LOCATE 'O' IN PRO.REC<11> SETTING POS
                     COST=BASE.COST+LOG.COMM+DISC.COMM+OVC.COMM+UPS.COMM
                     LN.POS=LN.POS+1
                     LN<LN.POS>=COST
                     IF TOT.FLG='Y' THEN
                        PRO.TOTAL<FORMAT.ATTR>+=COST
                        CARRIER.TOTAL<FORMAT.ATTR>+=COST
                        GRAND.TOTAL<FORMAT.ATTR>+=COST
                     END

                  CASE FORMAT.REC<FORMAT.ATTR,1>='SPACE'
                     LN.POS=LN.POS+1
                     LN<LN.POS>=' '
                     IF NUM.LINES=0 THEN NUM.LINES=1

                  CASE NUM(FORMAT.REC<FORMAT.ATTR,1>)
                     LN.POS=LN.POS+1
                     ATTR=FORMAT.REC<FORMAT.ATTR,1>
                     X=DCOUNT(PRO.REC<ATTR>,CHAR(253))
                     FOR I=1 TO X STEP 1
                        IF ATTR=49 THEN
                           IF PRO.REC<ATTR,I>+0=0 THEN
* Fix the Cost Per Mile If Possible
                              IF PRO.REC<19>+0#0 THEN
                                 PRO.REC<ATTR,I>=PRO.REC<8>/PRO.REC<19>
                              END
                           END
                        END              ; * IF ATTR=49
                        LN<LN.POS,I>=PRO.REC<ATTR,I>
                        IF TOT.FLG='Y' THEN
                           TEST=PRO.REC<ATTR,I>
                           IF TEST='LX' THEN TEST=1
                           IF NOT(NUM(TEST)) THEN TEST=0

                           PRO.TOTAL<FORMAT.ATTR>+=TEST

                           CARRIER.TOTAL<FORMAT.ATTR>+=TEST

                           GRAND.TOTAL<FORMAT.ATTR>+=TEST
                        END              ; * IF TOT.FLG='Y'
                     NEXT I
                     IF X GT NUM.LINES THEN NUM.LINES=X
               END CASE
               GOTO 1500
            END ELSE
               GOTO 2100
            END                          ; * READ PRO.REC FROM F.CLNT.REPORT,PRO.ID

2000:                                    ; * Print pro detail
            LN.COUNT=DCOUNT(LN,CHAR(254))
            FOR I=1 TO NUM.LINES
               PRT.LINE=''
               FOR J=1 TO LN.COUNT
                  WIDTH=FORMAT.REC<J+1,3>
                  FORMAT=FORMAT.REC<J+1,2>
                  BEGIN CASE
                     CASE LN<J,I>=''
                        PRT.LINE=PRT.LINE:SPACE(WIDTH):' '
                     CASE FORMAT[1,1]='D'
* Need to add code to for formats of D2/#10  currently ignores #10
                        PRT.LINE=PRT.LINE:OCONV(LN<J,I>,FORMAT):' '
                     CASE 1
                        FORMAT=FORMAT:'#':WIDTH
                        PRT.LINE=PRT.LINE:OCONV(LN<J,I>,FORMAT):' '
                  END CASE
               NEXT J
               PRINT PRT.LINE
               IF CLIENT='01148' THEN TEST.REC<-1> = PRT.LINE
            NEXT I

* Print pro totals
            IF NUM.LINES GT 1 THEN
               IF SYSTEM(4) LE 3 THEN PAGE
               PRINT SINGLE.BREAK
               TOT.LN=''
               X=DCOUNT(PRO.TOTAL,CHAR(254))
               FOR I=2 TO X
                  WIDTH=FORMAT.REC<I,3>
                  FORMAT=FORMAT.REC<I,2>
                  FORMAT=FORMAT:'#':WIDTH
                  IF PRO.TOTAL<I>='' THEN
                     TOT.LN=TOT.LN:SPACE(WIDTH):' '
                  END ELSE
                     TOT.LN=TOT.LN:OCONV(PRO.TOTAL<I>,FORMAT):' '
                  END
               NEXT I
               PRINT TOT.LN
               IF CLIENT='01148' THEN TEST.REC<-1> = TOT.LN
            END                          ; * IF NUM.LINES GT 1

2100:
         REPEAT

         CARRIER=''
         GOSUB CARRIER.BREAK

* Print grand totals
         PRINT
         TOT.LN=''
         X=DCOUNT(GRAND.TOTAL,CHAR(254))
         FOR I=2 TO X
            WIDTH=FORMAT.REC<I,3>
            FORMAT=FORMAT.REC<I,2>
            FORMAT=FORMAT:'#':WIDTH
            IF GRAND.TOTAL<I>='' THEN
               TOT.LN=TOT.LN:SPACE(WIDTH):' '
            END ELSE
               TOT.LN=TOT.LN:OCONV(GRAND.TOTAL<I>,FORMAT):' '
            END
         NEXT I
         IF SYSTEM(4) LE 3 THEN PAGE
         PRINT TOT.LN
         IF CLIENT='01148' THEN TEST.REC<-1> = TOT.LN
         IF CLIENT = "01148" THEN WRITE TEST.REC ON F.PROC.LOGF, "01148*RPT1*":DATE():"*":TIME()     ; * NPRZZ
         IF CLIENT = "01148" THEN GOSUB 8100
         PRINT DOUBLE.BREAK
         PRINTER CLOSE
      NEXT COPIES.LOOP

* Call BUILD.DF.REG to print the Weekly Report to a file. The file name
* will be returned and used as email attachment number 1 in the form of
* an Excel spreadsheet (.XLS).  See SEND.EMAIL: below.


      WEEKLY.REPORT=''
      WEEKLY.PARCEL.REPORT=''
      WEEKLY.ALL.REPORT=''               ; * JMK119
      BUILD.DF.IN=''                     ; * Parameters going into BUILD.DF.SUB
      BUILD.DF.OUT=''                    ; * Parameters going out of BUILD.DF.SUB consisting of the report file name
      SPECIAL.DF.IN=''
      SPECIAL.DF.OUT=''
      IF FROM.PROCESS AND NOT(SEPARATE.REGIONS) AND COPIES#'N' THEN
         BUILD.DF.IN<1>=CLIENT ; BUILD.DF.IN<2>=LOG.ONLY
         BUILD.DF.IN<3>='ALL' ; BUILD.DF.IN<4>='ALL'
         BUILD.DF.IN<5>=FILE.SEL ; BUILD.DF.IN<6>=BEG.DATE
         BUILD.DF.IN<7>=END.DATE ; BUILD.DF.IN<8>=''
         BUILD.DF.IN<9>='N' ; BUILD.DF.IN<10>='N'
         BUILD.DF.IN<11>='N' ; BUILD.DF.IN<12>='N'
         BUILD.DF.IN<13>=CLIENT.REC<134> ; BUILD.DF.IN<14>='EMAIL'
         BUILD.DF.IN<15>=SEPARATE.REGIONS ; BUILD.DF.IN<16>=REGIONAL.ID
         BUILD.DF.IN<17>=CLIENT.REC<135> ; BUILD.DF.IN<18>='1'
         BUILD.DF.IN<19>=CLIENT.REC<125> ; BUILD.DF.IN<20>=''
         IF CLIENT.REC<179>#'' AND ONCE=0 THEN     ; * JMK110
            BUILD.DF.IN<19>=CLIENT.REC<179>        ; * JMK110
         END                             ; * JMK110
         BUILD.DF.IN<21>=USER ; BUILD.DF.IN<22>=CH.NUM
         BUILD.DF.IN<23>=AUTO ; BUILD.DF.IN<24>=''
         BUILD.DF.IN<25>='FROM FB.3.1.NEW' ; BUILD.DF.IN<26>=(USING.NEW.MACRO='NEW')
         BUILD.DF.IN<27>='0' ; BUILD.DF.IN<28>='0'
         BUILD.DF.IN<29>='N'             ; * JMK118
         BUILD.DF.IN<45>=ONCE            ; * JMK129
         CALL BUILD.DF.REG(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.EMAILDATA,BUILD.DF.IN,BUILD.DF.OUT)
         SPECIAL.DF.IN=BUILD.DF.IN
         CALL BUILD.SPECIAL.FILE.SUB(F.CLIENTS,F.CARRIERS,F.EMAILDATA,SPECIAL.DF.IN,SPECIAL.DF.OUT)
         IF CLIENT='01322' THEN          ; * JMK142
            BUILD.DF.IN<1>=CLIENT ; BUILD.DF.IN<2>=LOG.ONLY  ; * JMK142
            BUILD.DF.IN<3>='UPSDTL' ; BUILD.DF.IN<4>='ALL'   ; * JMK142
            BUILD.DF.IN<5>=FILE.SEL ; BUILD.DF.IN<6>=BEG.DATE          ; * JMK142
            BUILD.DF.IN<7>=END.DATE ; BUILD.DF.IN<8>=''      ; * JMK142
            BUILD.DF.IN<9>='N' ; BUILD.DF.IN<10>='N'         ; * JMK142
            BUILD.DF.IN<11>='N' ; BUILD.DF.IN<12>='N'        ; * JMK142
            BUILD.DF.IN<13>=CLIENT.REC<134> ; BUILD.DF.IN<14>='EMAIL'  ; * JMK142
            BUILD.DF.IN<15>=SEPARATE.REGIONS ; BUILD.DF.IN<16>=REGIONAL.ID       ; * JMK142
            BUILD.DF.IN<17>=CLIENT.REC<135> ; BUILD.DF.IN<18>='1'      ; * JMK142
            BUILD.DF.IN<19>=CLIENT.REC<125> ; BUILD.DF.IN<20>=''       ; * JMK142
            IF CLIENT.REC<179>#'' AND ONCE=0 THEN  ; * JMK142
               BUILD.DF.IN<19>=CLIENT.REC<179>     ; * JMK142
            END                          ; * JMK142
            BUILD.DF.IN<21>=USER ; BUILD.DF.IN<22>=CH.NUM    ; * JMK142
            BUILD.DF.IN<23>=AUTO ; BUILD.DF.IN<24>=''        ; * JMK142
            BUILD.DF.IN<25>='FROM FB.3.1.NEW' ; BUILD.DF.IN<26>=(USING.NEW.MACRO='NEW')    ; * JMK142
            BUILD.DF.IN<27>='0' ; BUILD.DF.IN<28>='0'        ; * JMK142
            BUILD.DF.IN<29>='N'          ; * JMK142
            BUILD.DF.IN<45>=ONCE         ; * JMK142
            CALL BUILD.DF.REG(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.EMAILDATA,BUILD.DF.IN,BUILD.DF.ALL.OUT)        ; * JMK142
            WEEKLY.ALL.REPORT=BUILD.DF.ALL.OUT<1>  ; * JMK142
         END                             ; * JMK142
         IF CLIENT='01581' THEN          ; * JMK154
            BUILD.DF.IN<1>=CLIENT ; BUILD.DF.IN<2>=LOG.ONLY  ; * JMK154
            BUILD.DF.IN<3>='UPSDTL' ; BUILD.DF.IN<4>='ALL'   ; * JMK154
            BUILD.DF.IN<5>=FILE.SEL ; BUILD.DF.IN<6>=BEG.DATE          ; * JMK154
            BUILD.DF.IN<7>=END.DATE ; BUILD.DF.IN<8>=''      ; * JMK154
            BUILD.DF.IN<9>='N' ; BUILD.DF.IN<10>='N'         ; * JMK154
            BUILD.DF.IN<11>='N' ; BUILD.DF.IN<12>='N'        ; * JMK154
            BUILD.DF.IN<13>=CLIENT.REC<134> ; BUILD.DF.IN<14>='EMAIL'  ; * JMK154
            BUILD.DF.IN<15>=SEPARATE.REGIONS ; BUILD.DF.IN<16>=REGIONAL.ID       ; * JMK154
            BUILD.DF.IN<17>=CLIENT.REC<135> ; BUILD.DF.IN<18>='1'      ; * JMK154
            BUILD.DF.IN<19>=CLIENT.REC<125> ; BUILD.DF.IN<20>=''       ; * JMK154
            IF CLIENT.REC<179>#'' AND ONCE=0 THEN  ; * JMK154
               BUILD.DF.IN<19>=CLIENT.REC<179>     ; * JMK154
            END                          ; * JMK154
            BUILD.DF.IN<21>=USER ; BUILD.DF.IN<22>=CH.NUM    ; * JMK154
            BUILD.DF.IN<23>=AUTO ; BUILD.DF.IN<24>=''        ; * JMK154
            BUILD.DF.IN<25>='FROM FB.3.1.NEW' ; BUILD.DF.IN<26>=(USING.NEW.MACRO='NEW')    ; * JMK154
            BUILD.DF.IN<27>='0' ; BUILD.DF.IN<28>='0'        ; * JMK154
            BUILD.DF.IN<29>='N'          ; * JMK154
            BUILD.DF.IN<45>=ONCE         ; * JMK154
            CALL BUILD.DF.REG(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.EMAILDATA,BUILD.DF.IN,BUILD.DF.ALL.OUT)        ; * JMK154
            WEEKLY.ALL.REPORT=BUILD.DF.ALL.OUT<1>  ; * JMK154
         END                             ; * JMK154
         IF CLIENT='01706' THEN          ; * JMK119
            BUILD.DF.IN<1>=CLIENT ; BUILD.DF.IN<2>=LOG.ONLY  ; * JMK119
            BUILD.DF.IN<3>='UPSDTL' ; BUILD.DF.IN<4>='ALL'   ; * JMK119
            BUILD.DF.IN<5>=FILE.SEL ; BUILD.DF.IN<6>=BEG.DATE          ; * JMK119
            BUILD.DF.IN<7>=END.DATE ; BUILD.DF.IN<8>=''      ; * JMK119
            BUILD.DF.IN<9>='N' ; BUILD.DF.IN<10>='N'         ; * JMK119
            BUILD.DF.IN<11>='N' ; BUILD.DF.IN<12>='N'        ; * JMK119
            BUILD.DF.IN<13>=CLIENT.REC<134> ; BUILD.DF.IN<14>='EMAIL'  ; * JMK119
            BUILD.DF.IN<15>=SEPARATE.REGIONS ; BUILD.DF.IN<16>=REGIONAL.ID       ; * JMK119
            BUILD.DF.IN<17>=CLIENT.REC<135> ; BUILD.DF.IN<18>='1'      ; * JMK119
            BUILD.DF.IN<19>=CLIENT.REC<125> ; BUILD.DF.IN<20>=''       ; * JMK119
            IF CLIENT.REC<179>#'' AND ONCE=0 THEN  ; * JMK119
               BUILD.DF.IN<19>=CLIENT.REC<179>     ; * JMK119
            END                          ; * JMK119
            BUILD.DF.IN<21>=USER ; BUILD.DF.IN<22>=CH.NUM    ; * JMK119
            BUILD.DF.IN<23>=AUTO ; BUILD.DF.IN<24>=''        ; * JMK119
            BUILD.DF.IN<25>='FROM FB.3.1.NEW' ; BUILD.DF.IN<26>=(USING.NEW.MACRO='NEW')    ; * JMK119
            BUILD.DF.IN<27>='0' ; BUILD.DF.IN<28>='0'        ; * JMK119
            BUILD.DF.IN<29>='N'          ; * JMK119
            BUILD.DF.IN<45>=ONCE         ; * JMK129
            CALL BUILD.DF.REG(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.EMAILDATA,BUILD.DF.IN,BUILD.DF.ALL.OUT)        ; * JMK119
            WEEKLY.ALL.REPORT=BUILD.DF.ALL.OUT<1>  ; * JMK119
         END                             ; * JMK119
         IF CLIENT='01825' THEN          ; * JMK141
            BUILD.DF.IN<1>=CLIENT ; BUILD.DF.IN<2>=LOG.ONLY  ; * JMK141
            BUILD.DF.IN<3>='UPSDTL' ; BUILD.DF.IN<4>='ALL'   ; * JMK141
            BUILD.DF.IN<5>=FILE.SEL ; BUILD.DF.IN<6>=BEG.DATE          ; * JMK141
            BUILD.DF.IN<7>=END.DATE ; BUILD.DF.IN<8>=''      ; * JMK141
            BUILD.DF.IN<9>='N' ; BUILD.DF.IN<10>='N'         ; * JMK141
            BUILD.DF.IN<11>='N' ; BUILD.DF.IN<12>='N'        ; * JMK141
            BUILD.DF.IN<13>=CLIENT.REC<134> ; BUILD.DF.IN<14>='EMAIL'  ; * JMK141
            BUILD.DF.IN<15>=SEPARATE.REGIONS ; BUILD.DF.IN<16>=REGIONAL.ID       ; * JMK141
            BUILD.DF.IN<17>=CLIENT.REC<135> ; BUILD.DF.IN<18>='1'      ; * JMK141
            BUILD.DF.IN<19>=CLIENT.REC<125> ; BUILD.DF.IN<20>=''       ; * JMK141
            IF CLIENT.REC<179>#'' AND ONCE=0 THEN  ; * JMK141
               BUILD.DF.IN<19>=CLIENT.REC<179>     ; * JMK141
            END                          ; * JMK141
            BUILD.DF.IN<21>=USER ; BUILD.DF.IN<22>=CH.NUM    ; * JMK141
            BUILD.DF.IN<23>=AUTO ; BUILD.DF.IN<24>=''        ; * JMK141
            BUILD.DF.IN<25>='FROM FB.3.1.NEW' ; BUILD.DF.IN<26>=(USING.NEW.MACRO='NEW')    ; * JMK141
            BUILD.DF.IN<27>='0' ; BUILD.DF.IN<28>='0'        ; * JMK141
            BUILD.DF.IN<29>='N'          ; * JMK141
            BUILD.DF.IN<45>=ONCE         ; * JMK141
            CALL BUILD.DF.REG(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.EMAILDATA,BUILD.DF.IN,BUILD.DF.ALL.OUT)        ; * JMK141
            WEEKLY.ALL.REPORT=BUILD.DF.ALL.OUT<1>  ; * JMK141
         END                             ; * JMK141
         IF CLIENT='01977' THEN          ; * JMK132
            BUILD.DF.IN<1>=CLIENT ; BUILD.DF.IN<2>=LOG.ONLY  ; * JMK132
            BUILD.DF.IN<3>='UPSDTL' ; BUILD.DF.IN<4>='ALL'   ; * JMK132
            BUILD.DF.IN<5>=FILE.SEL ; BUILD.DF.IN<6>=BEG.DATE          ; * JMK132
            BUILD.DF.IN<7>=END.DATE ; BUILD.DF.IN<8>=''      ; * JMK132
            BUILD.DF.IN<9>='N' ; BUILD.DF.IN<10>='N'         ; * JMK132
            BUILD.DF.IN<11>='N' ; BUILD.DF.IN<12>='N'        ; * JMK132
            BUILD.DF.IN<13>=CLIENT.REC<134> ; BUILD.DF.IN<14>='EMAIL'  ; * JMK132
            BUILD.DF.IN<15>=SEPARATE.REGIONS ; BUILD.DF.IN<16>=REGIONAL.ID       ; * JMK132
            BUILD.DF.IN<17>=CLIENT.REC<135> ; BUILD.DF.IN<18>='1'      ; * JMK132
            BUILD.DF.IN<19>=CLIENT.REC<125> ; BUILD.DF.IN<20>=''       ; * JMK132
            IF CLIENT.REC<179>#'' AND ONCE=0 THEN  ; * JMK132
               BUILD.DF.IN<19>=CLIENT.REC<179>     ; * JMK132
            END                          ; * JMK132
            BUILD.DF.IN<21>=USER ; BUILD.DF.IN<22>=CH.NUM    ; * JMK132
            BUILD.DF.IN<23>=AUTO ; BUILD.DF.IN<24>=''        ; * JMK132
            BUILD.DF.IN<25>='FROM FB.3.1.NEW' ; BUILD.DF.IN<26>=(USING.NEW.MACRO='NEW')    ; * JMK132
            BUILD.DF.IN<27>='0' ; BUILD.DF.IN<28>='0'        ; * JMK132
            BUILD.DF.IN<29>='N'          ; * JMK132
            BUILD.DF.IN<45>=ONCE         ; * JMK132
            CALL BUILD.DF.REG(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.EMAILDATA,BUILD.DF.IN,BUILD.DF.ALL.OUT)        ; * JMK132
            WEEKLY.ALL.REPORT=BUILD.DF.ALL.OUT<1>  ; * JMK132
         END                             ; * JMK132

      END ELSE
         IF FROM.PROCESS AND SEPARATE.REGIONS AND REG.EMAIL.PRINT#'N' AND REGS<8,REG.COUNT>#'' THEN
            BUILD.DF.IN<1>=CLIENT ; BUILD.DF.IN<2>=LOG.ONLY
            BUILD.DF.IN<3>='ALL' ; BUILD.DF.IN<4>='ALL'
            BUILD.DF.IN<5>=FILE.SEL ; BUILD.DF.IN<6>=BEG.DATE
            BUILD.DF.IN<7>=END.DATE ; BUILD.DF.IN<8>=''
            BUILD.DF.IN<9>='N' ; BUILD.DF.IN<10>='N'
            BUILD.DF.IN<11>='N' ; BUILD.DF.IN<12>='N'
            BUILD.DF.IN<13>=CLIENT.REC<134> ; BUILD.DF.IN<14>='EMAIL'
            BUILD.DF.IN<15>=SEPARATE.REGIONS ; BUILD.DF.IN<16>=REGS<1,REG.COUNT>
            BUILD.DF.IN<17>=CLIENT.REC<135> ; BUILD.DF.IN<18>='1'
            BUILD.DF.IN<19>=CLIENT.REC<125> ; BUILD.DF.IN<20>=''
            IF CLIENT.REC<179>#'' AND ONCE=0 THEN  ; * JMK110
               BUILD.DF.IN<19>=CLIENT.REC<179>     ; * JMK110
            END                          ; * JMK110
            BUILD.DF.IN<21>=USER ; BUILD.DF.IN<22>=CH.NUM
            BUILD.DF.IN<23>=AUTO ; BUILD.DF.IN<24>=''
            BUILD.DF.IN<25>='FROM FB.3.1.NEW' ; BUILD.DF.IN<26>=(USING.NEW.MACRO='NEW')
            BUILD.DF.IN<27>='0' ; BUILD.DF.IN<28>='0'
            BUILD.DF.IN<29>='N'          ; * JMK118
            BUILD.DF.IN<45>=ONCE         ; * JMK129
            CALL BUILD.DF.REG(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.EMAILDATA,BUILD.DF.IN,BUILD.DF.OUT)
            IF CLIENT='01322' THEN       ; * JMK142
               BUILD.DF.IN<1>=CLIENT ; BUILD.DF.IN<2>=LOG.ONLY         ; * JMK142
               BUILD.DF.IN<3>='UPSDTL' ; BUILD.DF.IN<4>='ALL'          ; * JMK142
               BUILD.DF.IN<5>=FILE.SEL ; BUILD.DF.IN<6>=BEG.DATE       ; * JMK142
               BUILD.DF.IN<7>=END.DATE ; BUILD.DF.IN<8>=''   ; * JMK142
               BUILD.DF.IN<9>='N' ; BUILD.DF.IN<10>='N'      ; * JMK142
               BUILD.DF.IN<11>='N' ; BUILD.DF.IN<12>='N'     ; * JMK142
               BUILD.DF.IN<13>=CLIENT.REC<134> ; BUILD.DF.IN<14>='EMAIL'         ; * JMK142
               BUILD.DF.IN<15>=SEPARATE.REGIONS ; BUILD.DF.IN<16>=REGS<1,REG.COUNT>        ; * JMK142
               BUILD.DF.IN<17>=CLIENT.REC<135> ; BUILD.DF.IN<18>='1'   ; * JMK142
               BUILD.DF.IN<19>=CLIENT.REC<125> ; BUILD.DF.IN<20>=''    ; * JMK142
               IF CLIENT.REC<179>#'' AND ONCE=0 THEN         ; * JMK142
                  BUILD.DF.IN<19>=CLIENT.REC<179>  ; * JMK142
               END                       ; * JMK142
               BUILD.DF.IN<21>=USER ; BUILD.DF.IN<22>=CH.NUM           ; * JMK142
               BUILD.DF.IN<23>=AUTO ; BUILD.DF.IN<24>=''     ; * JMK142
               BUILD.DF.IN<25>='FROM FB.3.1.NEW' ; BUILD.DF.IN<26>=(USING.NEW.MACRO='NEW')           ; * JMK142
               BUILD.DF.IN<27>='0' ; BUILD.DF.IN<28>='0'     ; * JMK142
               BUILD.DF.IN<29>='N'       ; * JMK142
               BUILD.DF.IN<45>=ONCE      ; * JMK142
               CALL BUILD.DF.REG(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.EMAILDATA,BUILD.DF.IN,BUILD.DF.ALL.OUT)     ; * JMK142
               WEEKLY.ALL.REPORT=BUILD.DF.ALL.OUT<1>         ; * JMK142
            END                          ; * JMK142
            IF CLIENT='01581' THEN       ; * JMK154
               BUILD.DF.IN<1>=CLIENT ; BUILD.DF.IN<2>=LOG.ONLY         ; * JMK154
               BUILD.DF.IN<3>='UPSDTL' ; BUILD.DF.IN<4>='ALL'          ; * JMK154
               BUILD.DF.IN<5>=FILE.SEL ; BUILD.DF.IN<6>=BEG.DATE       ; * JMK154
               BUILD.DF.IN<7>=END.DATE ; BUILD.DF.IN<8>=''   ; * JMK154
               BUILD.DF.IN<9>='N' ; BUILD.DF.IN<10>='N'      ; * JMK154
               BUILD.DF.IN<11>='N' ; BUILD.DF.IN<12>='N'     ; * JMK154
               BUILD.DF.IN<13>=CLIENT.REC<134> ; BUILD.DF.IN<14>='EMAIL'         ; * JMK154
               BUILD.DF.IN<15>=SEPARATE.REGIONS ; BUILD.DF.IN<16>=REGS<1,REG.COUNT>        ; * JMK154
               BUILD.DF.IN<17>=CLIENT.REC<135> ; BUILD.DF.IN<18>='1'   ; * JMK154
               BUILD.DF.IN<19>=CLIENT.REC<125> ; BUILD.DF.IN<20>=''    ; * JMK154
               IF CLIENT.REC<179>#'' AND ONCE=0 THEN         ; * JMK154
                  BUILD.DF.IN<19>=CLIENT.REC<179>  ; * JMK154
               END                       ; * JMK154
               BUILD.DF.IN<21>=USER ; BUILD.DF.IN<22>=CH.NUM           ; * JMK154
               BUILD.DF.IN<23>=AUTO ; BUILD.DF.IN<24>=''     ; * JMK154
               BUILD.DF.IN<25>='FROM FB.3.1.NEW' ; BUILD.DF.IN<26>=(USING.NEW.MACRO='NEW')           ; * JMK154
               BUILD.DF.IN<27>='0' ; BUILD.DF.IN<28>='0'     ; * JMK154
               BUILD.DF.IN<29>='N'       ; * JMK154
               BUILD.DF.IN<45>=ONCE      ; * JMK154
               CALL BUILD.DF.REG(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.EMAILDATA,BUILD.DF.IN,BUILD.DF.ALL.OUT)     ; * JMK154
               WEEKLY.ALL.REPORT=BUILD.DF.ALL.OUT<1>         ; * JMK154
            END                          ; * JMK154
            IF CLIENT='01706' THEN       ; * JMK119
               BUILD.DF.IN<1>=CLIENT ; BUILD.DF.IN<2>=LOG.ONLY         ; * JMK119
               BUILD.DF.IN<3>='UPSDTL' ; BUILD.DF.IN<4>='ALL'          ; * JMK119
               BUILD.DF.IN<5>=FILE.SEL ; BUILD.DF.IN<6>=BEG.DATE       ; * JMK119
               BUILD.DF.IN<7>=END.DATE ; BUILD.DF.IN<8>=''   ; * JMK119
               BUILD.DF.IN<9>='N' ; BUILD.DF.IN<10>='N'      ; * JMK119
               BUILD.DF.IN<11>='N' ; BUILD.DF.IN<12>='N'     ; * JMK119
               BUILD.DF.IN<13>=CLIENT.REC<134> ; BUILD.DF.IN<14>='EMAIL'         ; * JMK119
               BUILD.DF.IN<15>=SEPARATE.REGIONS ; BUILD.DF.IN<16>=REGS<1,REG.COUNT>        ; * JMK119
               BUILD.DF.IN<17>=CLIENT.REC<135> ; BUILD.DF.IN<18>='1'   ; * JMK119
               BUILD.DF.IN<19>=CLIENT.REC<125> ; BUILD.DF.IN<20>=''    ; * JMK119
               IF CLIENT.REC<179>#'' AND ONCE=0 THEN         ; * JMK119
                  BUILD.DF.IN<19>=CLIENT.REC<179>  ; * JMK119
               END                       ; * JMK119
               BUILD.DF.IN<21>=USER ; BUILD.DF.IN<22>=CH.NUM           ; * JMK119
               BUILD.DF.IN<23>=AUTO ; BUILD.DF.IN<24>=''     ; * JMK119
               BUILD.DF.IN<25>='FROM FB.3.1.NEW' ; BUILD.DF.IN<26>=(USING.NEW.MACRO='NEW')           ; * JMK119
               BUILD.DF.IN<27>='0' ; BUILD.DF.IN<28>='0'     ; * JMK119
               BUILD.DF.IN<29>='N'       ; * JMK119
               BUILD.DF.IN<45>=ONCE      ; * JMK129
               CALL BUILD.DF.REG(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.EMAILDATA,BUILD.DF.IN,BUILD.DF.ALL.OUT)     ; * JMK119
               WEEKLY.ALL.REPORT=BUILD.DF.ALL.OUT<1>         ; * JMK119
            END                          ; * JMK119
            IF CLIENT='01825' THEN       ; * JMK141
               BUILD.DF.IN<1>=CLIENT ; BUILD.DF.IN<2>=LOG.ONLY         ; * JMK141
               BUILD.DF.IN<3>='UPSDTL' ; BUILD.DF.IN<4>='ALL'          ; * JMK141
               BUILD.DF.IN<5>=FILE.SEL ; BUILD.DF.IN<6>=BEG.DATE       ; * JMK141
               BUILD.DF.IN<7>=END.DATE ; BUILD.DF.IN<8>=''   ; * JMK141
               BUILD.DF.IN<9>='N' ; BUILD.DF.IN<10>='N'      ; * JMK141
               BUILD.DF.IN<11>='N' ; BUILD.DF.IN<12>='N'     ; * JMK141
               BUILD.DF.IN<13>=CLIENT.REC<134> ; BUILD.DF.IN<14>='EMAIL'         ; * JMK141
               BUILD.DF.IN<15>=SEPARATE.REGIONS ; BUILD.DF.IN<16>=REGS<1,REG.COUNT>        ; * JMK141
               BUILD.DF.IN<17>=CLIENT.REC<135> ; BUILD.DF.IN<18>='1'   ; * JMK141
               BUILD.DF.IN<19>=CLIENT.REC<125> ; BUILD.DF.IN<20>=''    ; * JMK141
               IF CLIENT.REC<179>#'' AND ONCE=0 THEN         ; * JMK141
                  BUILD.DF.IN<19>=CLIENT.REC<179>  ; * JMK141
               END                       ; * JMK141
               BUILD.DF.IN<21>=USER ; BUILD.DF.IN<22>=CH.NUM           ; * JMK141
               BUILD.DF.IN<23>=AUTO ; BUILD.DF.IN<24>=''     ; * JMK141
               BUILD.DF.IN<25>='FROM FB.3.1.NEW' ; BUILD.DF.IN<26>=(USING.NEW.MACRO='NEW')           ; * JMK141
               BUILD.DF.IN<27>='0' ; BUILD.DF.IN<28>='0'     ; * JMK141
               BUILD.DF.IN<29>='N'       ; * JMK141
               BUILD.DF.IN<45>=ONCE      ; * JMK141
               CALL BUILD.DF.REG(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.EMAILDATA,BUILD.DF.IN,BUILD.DF.ALL.OUT)     ; * JMK141
               WEEKLY.ALL.REPORT=BUILD.DF.ALL.OUT<1>         ; * JMK141
            END                          ; * JMK141
            IF CLIENT='01977' THEN       ; * JMK132
               BUILD.DF.IN<1>=CLIENT ; BUILD.DF.IN<2>=LOG.ONLY         ; * JMK132
               BUILD.DF.IN<3>='UPSDTL' ; BUILD.DF.IN<4>='ALL'          ; * JMK132
               BUILD.DF.IN<5>=FILE.SEL ; BUILD.DF.IN<6>=BEG.DATE       ; * JMK132
               BUILD.DF.IN<7>=END.DATE ; BUILD.DF.IN<8>=''   ; * JMK132
               BUILD.DF.IN<9>='N' ; BUILD.DF.IN<10>='N'      ; * JMK132
               BUILD.DF.IN<11>='N' ; BUILD.DF.IN<12>='N'     ; * JMK132
               BUILD.DF.IN<13>=CLIENT.REC<134> ; BUILD.DF.IN<14>='EMAIL'         ; * JMK132
               BUILD.DF.IN<15>=SEPARATE.REGIONS ; BUILD.DF.IN<16>=REGS<1,REG.COUNT>        ; * JMK132
               BUILD.DF.IN<17>=CLIENT.REC<135> ; BUILD.DF.IN<18>='1'   ; * JMK132
               BUILD.DF.IN<19>=CLIENT.REC<125> ; BUILD.DF.IN<20>=''    ; * JMK132
               IF CLIENT.REC<179>#'' AND ONCE=0 THEN         ; * JMK132
                  BUILD.DF.IN<19>=CLIENT.REC<179>  ; * JMK132
               END                       ; * JMK132
               BUILD.DF.IN<21>=USER ; BUILD.DF.IN<22>=CH.NUM           ; * JMK132
               BUILD.DF.IN<23>=AUTO ; BUILD.DF.IN<24>=''     ; * JMK132
               BUILD.DF.IN<25>='FROM FB.3.1.NEW' ; BUILD.DF.IN<26>=(USING.NEW.MACRO='NEW')           ; * JMK132
               BUILD.DF.IN<27>='0' ; BUILD.DF.IN<28>='0'     ; * JMK132
               BUILD.DF.IN<29>='N'       ; * JMK132
               BUILD.DF.IN<45>=ONCE      ; * JMK132
               CALL BUILD.DF.REG(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.EMAILDATA,BUILD.DF.IN,BUILD.DF.ALL.OUT)     ; * JMK132
               WEEKLY.ALL.REPORT=BUILD.DF.ALL.OUT<1>         ; * JMK132
            END                          ; * JMK132
         END                             ; * IF FROM.PROCESS AND SEPARATE.REGIONS AND REG.EMAIL.PRINT#'N' AND REGS<8,REG.COUNT>#''
      END                                ; * IF FROM.PROCESS AND NOT(SEPARATE.REGIONS) AND COPIES#'N'
      WEEKLY.REPORT=BUILD.DF.OUT<1>

      LOG.SEQ.NO = 6                     ; * End
      PROC.DESC = "Freight Bill Report (# 1)"
      LOG.ST.DATE = '' ; LOG.ST.TIME = '' ; LOG.END.DATE = DATE() ; LOG.END.TIME = TIME() ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF

* End Weekly Freight Bill Report (email attachment 1)

      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK TO BEGIN DEBUG 110...')

      IF FROM.PROCESS THEN               ; * JMK70
         CRT @(0,7):@(-4):'Preparing the Weekly Freight Bill True Cost Report (Attachment 2)...':@(0,7):       ; * JMK70
      END                                ; * JMK70

* Call BUILD.DF.REG to print the Weekly Report with Duplicates only to
* a file.  The file name will be returned and used as email attachment
* number 2 in the form of an Excel spreadsheet (.XLS).  See SEND.EMAIL:
* below.

      LOG.SEQ.NO = 7                     ; * Start
      PROC.DESC = "Weekly Report with Duplicates (# 2)"
      LOG.ST.DATE = DATE() ; LOG.ST.TIME = TIME() ; LOG.END.DATE = '' ; LOG.END.TIME = '' ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF
      TEST.REC = ""                      ; *NPRZZ

      WEEKLY.REPORT.DUP=''               ; * JMK118

WEEKLY.TC.REPORT:                        ; * DS001
      WEEKLY.REPORT.TC=''                ; * JMK118
      IF CLIENT = '01977' OR CLIENT = '01979' THEN GOTO NEW.REJECTED.BILLS.REPORT          ; * JMK135
      COPIES=CLIENT.REC<100,15>
      IF SEPARATE.REGIONS = '0' THEN
         IF TC.REPORT.CNTR >= 1 AND COPIES > 0 THEN
            GOTO NEW.REJECTED.BILLS.REPORT
         END
      END
      IF COPIES='' OR NOT(NUM(COPIES)) THEN COPIES='N'
      IF COPIES='N' THEN GOTO NEW.NEVER.PAY.BILLS.REPORT     ; * JMK112

      IF FROM.PROCESS THEN
         IF SEPARATE.REGIONS THEN
            GOSUB SET.REGIONAL.COPIES
         END
      END ELSE
         IF NOT(HOLD.STAT) THEN
            IF SUMMARY.ONLY THEN
               COPIES=0
            END ELSE
               IF ONE.COPY THEN
                  COPIES=1
               END                       ; * IF ONE.COPY
            END                          ; * IF SUMMARY.ONLY
         END                             ; * IF NOT(HOLD.STAT)
      END                                ; * IF FROM.PROCESS

* Interpret COPIES for the printing loop
      BEGIN CASE
         CASE NOT(NUM(COPIES))
            COPY.COUNT=0
         CASE NUM(COPIES)
            COPY.COUNT=COPIES
         CASE 1
            COPY.COUNT=0
      END CASE

      IF COPIES=0 AND NOT(SUMMARY.ONLY) THEN COPY.COUNT = 1
      BUILD.DF.IN=''                     ; * Parameters going into BUILD.DF.SUB ; * JMK118
      BUILD.DF.OUT=''                    ; * Return from BUILD.DF.SUB with the report name ; * JMK118
      IF COPY.COUNT > 0 THEN
         FOR COPIES.LOOP = 1 TO COPY.COUNT
            IF FROM.PROCESS AND NOT(SEPARATE.REGIONS) AND COPIES#'N' THEN        ; * JMK118
               BUILD.DF.IN<1>=CLIENT ; BUILD.DF.IN<2>=LOG.ONLY         ; * JMK118
               BUILD.DF.IN<3>='ALL' ; BUILD.DF.IN<4>='ALL'   ; * JMK118
               BUILD.DF.IN<5>=FILE.SEL ; BUILD.DF.IN<6>=BEG.DATE       ; * JMK118
               BUILD.DF.IN<7>=END.DATE ; BUILD.DF.IN<8>=''   ; * JMK118
               BUILD.DF.IN<9>='N' ; BUILD.DF.IN<10>='N'      ; * JMK118
               BUILD.DF.IN<11>='N' ; BUILD.DF.IN<12>='N'     ; * JMK118
               BUILD.DF.IN<13>='11' ; BUILD.DF.IN<14>='STD'  ; * JMK118
               BUILD.DF.IN<15>=SEPARATE.REGIONS ; BUILD.DF.IN<16>=REGIONAL.ID    ; * JMK118
               BUILD.DF.IN<17>='11' ; BUILD.DF.IN<18>='1'    ; * JMK118
               BUILD.DF.IN<19>=CLIENT.REC<125> ; BUILD.DF.IN<20>=''    ; * JMK118
               IF CLIENT.REC<179>#'' AND ONCE=0 THEN         ; * JMK110 ; * JMK118
                  BUILD.DF.IN<19>=CLIENT.REC<179>  ; * JMK110 ; * JMK118
               END                       ; * JMK110 ; * JMK118
               BUILD.DF.IN<21>=USER ; BUILD.DF.IN<22>=CH.NUM           ; * JMK118
               BUILD.DF.IN<23>=AUTO ; BUILD.DF.IN<24>=''     ; * JMK118
               BUILD.DF.IN<25>='FROM FB.3.1.NEW' ; BUILD.DF.IN<26>=(USING.NEW.MACRO='NEW')           ; * JMK118
               BUILD.DF.IN<27>='0' ; BUILD.DF.IN<28>='0'     ; * JMK118
               BUILD.DF.IN<29>='N' ; BUILD.DF.IN<38>='N'     ; * JMK118
               BUILD.DF.IN<40>='N' ; BUILD.DF.IN<41>='N'     ; * JMK118
               BUILD.DF.IN<44>='H'       ; * JMK118
               BUILD.DF.IN<45>=ONCE      ; * JMK129
               CALL BUILD.DF.REG(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.EMAILDATA,BUILD.DF.IN,BUILD.DF.OUT)         ; * JMK118
            END ELSE                     ; * JMK118
               IF FROM.PROCESS AND SEPARATE.REGIONS AND REG.EMAIL.PRINT#'N' AND REGS<8,REG.COUNT>#'' THEN      ; * JMK118
                  BUILD.DF.IN<1>=CLIENT ; BUILD.DF.IN<2>=LOG.ONLY      ; * JMK118
                  BUILD.DF.IN<3>='ALL' ; BUILD.DF.IN<4>='ALL'          ; * JMK118
                  BUILD.DF.IN<5>=FILE.SEL ; BUILD.DF.IN<6>=BEG.DATE    ; * JMK118
                  BUILD.DF.IN<7>=END.DATE ; BUILD.DF.IN<8>=''          ; * JMK118
                  BUILD.DF.IN<9>='N' ; BUILD.DF.IN<10>='N'   ; * JMK118
                  BUILD.DF.IN<11>='N' ; BUILD.DF.IN<12>='N'  ; * JMK118
                  BUILD.DF.IN<13>='11' ; BUILD.DF.IN<14>='STD'         ; * JMK118
                  BUILD.DF.IN<15>=SEPARATE.REGIONS ; BUILD.DF.IN<16>=REGS<1,REG.COUNT>     ; * JMK118
                  BUILD.DF.IN<17>='11' ; BUILD.DF.IN<18>='1'           ; * JMK118
                  BUILD.DF.IN<19>=CLIENT.REC<125> ; BUILD.DF.IN<20>=''           ; * JMK118
                  IF CLIENT.REC<179>#'' AND ONCE=0 THEN      ; * JMK110 ; * JMK118
                     BUILD.DF.IN<19>=CLIENT.REC<179>         ; * JMK110 ; * JMK118
                  END                    ; * JMK110 ; * JMK118
                  BUILD.DF.IN<21>=USER ; BUILD.DF.IN<22>=CH.NUM        ; * JMK118
                  BUILD.DF.IN<23>=AUTO ; BUILD.DF.IN<24>=''  ; * JMK118
                  BUILD.DF.IN<25>='FROM FB.3.1.NEW' ; BUILD.DF.IN<26>=(USING.NEW.MACRO='NEW')        ; * JMK118
                  BUILD.DF.IN<27>='0' ; BUILD.DF.IN<28>='0'  ; * JMK118
                  BUILD.DF.IN<29>='N' ; BUILD.DF.IN<38>='N'  ; * JMK118
                  BUILD.DF.IN<40>='N' ; BUILD.DF.IN<41>='N'  ; * JMK118
                  BUILD.DF.IN<44>='H'    ; * JMK118
                  BUILD.DF.IN<45>=ONCE   ; * JMK129
                  CALL BUILD.DF.REG(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.EMAILDATA,BUILD.DF.IN,BUILD.DF.OUT)      ; * JMK118
               END                       ; * IF FROM.PROCESS AND SEPARATE.REGIONS AND REG.EMAIL.PRINT#'N' AND REGS<8,REG.COUNT>#'' ; * JMK118
            END                          ; * IF FROM.PROCESS AND NOT(SEPARATE.REGIONS) AND COPIES#'N' ; * JMK118
         NEXT COPIES.LOOP
      END
      WEEKLY.REPORT.TC=BUILD.DF.OUT<1>   ; * JMK118

      TC.REPORT.CNTR += 1
      LOG.SEQ.NO = 7                     ; * End
      PROC.DESC = "Weekly Report with Duplicates (# 2)"
      LOG.ST.DATE = '' ; LOG.ST.TIME = '' ; LOG.END.DATE = DATE() ; LOG.END.TIME = TIME() ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF

* End Weekly Freight Bill Duplicates Report (email attachment 2)

      IF FILE="FB.BILLS,":CLIENT THEN GOTO SUMMARY.OF.CHARGES
      IF REPORT.TYPE#'R' AND REPORT.TYPE#'F' THEN GOTO SEND.EMAIL      ; * Write files and Email
***********************************************************************
NEW.REJECTED.BILLS.REPORT:* Begin New Rejected (Returned) Bills Report (email attachment 3)
***********************************************************************
      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK TO BEGIN DEBUG 120...')

      IF FROM.PROCESS THEN               ; * JMK70
         CRT @(0,7):@(-4):'Preparing the New Rejected (Returned) Bills Report (Attachment 3)...':@(0,7):       ; * JMK70
      END                                ; * JMK70

      NRB.DA=''

* Read COPIES and modify as needed
      COPIES=CLIENT.REC<100,4>
      IF COPIES='' OR NOT(NUM(COPIES)) THEN COPIES='N'
      IF COPIES='N' THEN GOTO NEW.NEVER.PAY.BILLS.REPORT     ; * JMK112

      LOG.SEQ.NO = 8                     ; * Start
      PROC.DESC = "New Rejected (Returned) Bills Report (# 3)"
      LOG.ST.DATE = DATE() ; LOG.ST.TIME = TIME() ; LOG.END.DATE = '' ; LOG.END.TIME = '' ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF

      IF FROM.PROCESS THEN
         IF SEPARATE.REGIONS THEN
            GOSUB SET.REGIONAL.COPIES
         END
      END ELSE
         IF NOT(HOLD.STAT) THEN
            IF SUMMARY.ONLY THEN
               COPIES=0
            END ELSE
               IF ONE.COPY THEN
                  COPIES=1
               END                       ; * IF ONE.COPY
            END                          ; * IF SUMMARY.ONLY
         END                             ; * IF NOT(HOLD.STAT)
      END                                ; * IF FROM.PROCESS

* Interpret COPIES for the printing loop
      BEGIN CASE
         CASE NOT(NUM(COPIES))
            COPY.COUNT=0
         CASE NUM(COPIES)
            COPY.COUNT=COPIES
         CASE 1
            COPY.COUNT=0
      END CASE

* Add extra test for emailing when not printing
      IF COPIES=0 AND NOT(SUMMARY.ONLY) THEN COPY.COUNT=1

      IF COPY.COUNT>0 THEN
         TITLE.1='New "Returned for Additional Information" Bills'
         TITLE.2='For Client: ':CLIENT:' ':CLIENT.NAME
         IF SEPARATE.REGIONS THEN
            TITLE.2:='  Region: ':REGS<1,REG.COUNT>:' ':REGS<11,REG.COUNT>
         END
         ODATE='Bills Processed From ':BEG.DATE'D2/':' to ':END.DATE'D2/'
         HEAD1='  DATE  '
         HEAD1:='   '
         HEAD1:='Pro''L#25'
         HEAD1:='   '
         HEAD1:='Amt Billed'
         HEAD1:='   '
         HEAD1:=' Rejection Reasons'
         FOR COPIES.LOOP=1 TO COPY.COUNT
            EXECUTE 'GET-LIST ':CH.NUM:'REJONLY' PASSLIST CAPTURING OUTPUT
            IF SYSTEM(11) THEN
               STMT='SSELECT FB.BILLS.HIST,':CLIENT
               STMT:=' WITH 66 EQ "E"'
               STMT:=' AND WITH 39 EQ "R"'
               IF SEPARATE.REGIONS THEN
                  STMT:=' AND WITH DIV.REG EQ "':REGS<1,REG.COUNT>:'"'
               END
               STMT:=' BY CARRIER.NAME BY CARRIER# BY 1 BY PRO'
               EXECUTE STMT PASSLIST CAPTURING OUTPUT
               IF SYSTEM(11) THEN
                  NUM.ITMS=@SELECTED
                  IF COPIES#0 THEN
                     PRINTER ON
                     CHAR.PER.IN=16.7
                     WIDTH=174
                     DEPTH=60
                     LPI=8
                     GOSUB 8100

                     CALL PAGE.HEAD(PROG.NAME,COMPANY.NAME.HTML,TITLE.1,TITLE.2,ODATE,WIDTH,HED)     ; * JMK95
                     PAGE 1
                     HEADING HED:" 'L'":HEAD1
                  END
                  GOSUB PRINT.REJECT.REPORT
                  IF COPIES#0 THEN
                     PRINTER CLOSE
                  END
                  IF (COPIES.LOOP=1) AND (REJ.DA#'') THEN
                     NRB.DA<1,1>=COMPANY.NAME:'  ':TITLE.1:'  ':TITLE.2:'  ':ODATE
                     NRB.DA<2,1>=''
                     NRB.DA<3,1>='Carrier #'
                     NRB.DA<3,2>='Carrier Name'
                     NRB.DA<3,3>='Date'
                     NRB.DA<3,4>='Pro Number'
                     NRB.DA<3,5>='Amt Billed'

                     IF CLIENT='01977' OR CLIENT='01979' THEN          ; * JMK135 ; * JMK136
                        NRB.DA<3,6>='Region'       ; * JMK135
                        NRB.DA<3,7>='Rejection Reasons'      ; * JMK135
                     END ELSE            ; * JMK135
                        NRB.DA<3,6>='Rejection Reasons'
                     END                 ; * JMK135
                     NRB.DA<-1>=REJ.DA
                     NRB.DA=CHANGE(NRB.DA,@VM,TAB)
                  END
               END                       ; * IF SYSTEM(11)
            END                          ; * IF SYSTEM(11)
         NEXT COPIES.LOOP
      END                                ; * IF COPY.COUNT>0

      LOG.SEQ.NO = 8                     ; * End
      PROC.DESC = "New Rejected (Returned) Bills Report (# 3)"
      LOG.ST.DATE = '' ; LOG.ST.TIME = '' ; LOG.END.DATE = DATE() ; LOG.END.TIME = TIME() ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF

* End New Rejected (Returned) Bills Report (email attachment 3)
***********************************************************************
NEW.NEVER.PAY.BILLS.REPORT:* Begin New Never Pay Bills Report (email attachment 4)
***********************************************************************
      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK TO BEGIN DEBUG 130...')

      IF FROM.PROCESS THEN               ; * JMK70
         CRT @(0,7):@(-4):'Preparing the New Never Pay Bills Report (Attachment 4)...':@(0,7):       ; * JMK70
      END                                ; * JMK70

      NPB.DA=''

* Read COPIES and modify as needed
      COPIES=CLIENT.REC<100,5>
      IF COPIES='' OR NOT(NUM(COPIES)) THEN COPIES='N'
      IF COPIES='N' THEN GOTO OLD.REJECTED.BILLS.REPORT      ; * JMK112

      LOG.SEQ.NO = 9                     ; * Start
      PROC.DESC = "New Never Pay Bills Report (# 4)"
      LOG.ST.DATE = DATE() ; LOG.ST.TIME = TIME() ; LOG.END.DATE = '' ; LOG.END.TIME = '' ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF

      IF FROM.PROCESS THEN
         IF SEPARATE.REGIONS THEN
            GOSUB SET.REGIONAL.COPIES
         END
      END ELSE
         IF NOT(HOLD.STAT) THEN
            IF SUMMARY.ONLY THEN
               COPIES=0
            END ELSE
               IF ONE.COPY THEN
                  COPIES=1
               END                       ; * IF ONE.COPY
            END                          ; * IF SUMMARY.ONLY
         END                             ; * IF NOT(HOLD.STAT)
      END                                ; * IF FROM.PROCESS

* Interpret COPIES for the printing loop
      BEGIN CASE
         CASE NOT(NUM(COPIES))
            COPY.COUNT=0
         CASE NUM(COPIES)
            COPY.COUNT=COPIES
         CASE 1
            COPY.COUNT=0
      END CASE

* Add extra test for emailing when not printing
      IF COPIES=0 AND NOT(SUMMARY.ONLY) THEN COPY.COUNT=1

      IF COPY.COUNT>0 THEN
         TITLE.1='Bills Rejected'
         TITLE.2='For Client: ':CLIENT:' ':CLIENT.NAME
         IF SEPARATE.REGIONS THEN
            TITLE.2:='  Region: ':REGS<1,REG.COUNT>:' ':REGS<11,REG.COUNT>
         END
         ODATE='Bills Processed From ':BEG.DATE'D2/':' to ':END.DATE'D2/'
         HEAD1='  DATE  '
         HEAD1:='   '
         HEAD1:='Pro''L#25'
         HEAD1:='   '
         HEAD1:='Amt Billed'
         HEAD1:='   '
         HEAD1:=' Rejection Reasons'
         FOR COPIES.LOOP=1 TO COPY.COUNT
            EXECUTE 'GET-LIST ':CH.NUM:'REJONLY' PASSLIST CAPTURING OUTPUT
            IF SYSTEM(11) THEN
               STMT='SSELECT FB.BILLS.HIST,':CLIENT
               STMT:=' AND WITH 66 EQ "N"'
               STMT:=' AND WITH 39 EQ "R"'
               IF SEPARATE.REGIONS THEN
                  STMT:=' AND WITH DIV.REG EQ "':REGS<1,REG.COUNT>:'"'
               END
               STMT:=' BY CARRIER.NAME BY CARRIER# BY 1 BY PRO'
               EXECUTE STMT PASSLIST CAPTURING OUTPUT
               IF SYSTEM(11) THEN
                  NUM.ITMS=@SELECTED
                  IF COPIES#0 THEN
                     PRINTER ON
                     CHAR.PER.IN=16.7
                     WIDTH=174
                     DEPTH=60
                     LPI=8
                     GOSUB 8100
                     CALL PAGE.HEAD(PROG.NAME,COMPANY.NAME.HTML,TITLE.1,TITLE.2,ODATE,WIDTH,HED)     ; * JMK95
                     PAGE 1
                     HEADING HED:" 'L'":HEAD1
                  END
                  GOSUB PRINT.REJECT.REPORT
                  IF COPIES#0 THEN
                     PRINTER CLOSE
                  END
                  IF (COPIES.LOOP=1) AND (REJ.DA#'') THEN
                     NPB.DA<1,1>=COMPANY.NAME:'  ':TITLE.1:'  ':TITLE.2:'  ':ODATE
                     NPB.DA<2,1>=''
                     NPB.DA<3,1>='Carrier #'
                     NPB.DA<3,2>='Carrier Name'
                     NPB.DA<3,3>='Date'
                     NPB.DA<3,4>='Pro Number'
                     NPB.DA<3,5>='Amt Billed'

                     IF CLIENT='01977' OR CLIENT='01979' THEN          ; * JMK135 ; * JMK136
                        NPB.DA<3,6>='Region'       ; * JMK135
                        NPB.DA<3,7>='Rejection Reasons'      ; * JMK135
                     END ELSE            ; * JMK135
                        NPB.DA<3,6>='Rejection Reasons'
                     END                 ; * JMK135
                     NPB.DA<-1>=REJ.DA
                     NPB.DA=CHANGE(NPB.DA,@VM,TAB)
                  END
               END                       ; * IF SYSTEM(11)
            END                          ; * IF SYSTEM(11)
         NEXT COPIES.LOOP
      END                                ; * IF COPY.COUNT>0

      LOG.SEQ.NO = 9                     ; *  End
      PROC.DESC = "New Never Pay Bills Report (# 4)"
      LOG.ST.DATE = '' ; LOG.ST.TIME = '' ; LOG.END.DATE = DATE() ; LOG.END.TIME = TIME() ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF


* End New Never Pay Bills Report (email attachment 4)
***********************************************************************
OLD.REJECTED.BILLS.REPORT:* Begin Old Rejected (Returned) Bills Report (email attachment 5)
***********************************************************************
      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK TO BEGIN DEBUG 140...')

      IF FROM.PROCESS THEN               ; * JMK70
         CRT @(0,7):@(-4):'Preparing the Old Rejected (Returned) Bills Report (Attachment 5)...':@(0,7):       ; * JMK70
      END                                ; * JMK70

      ORB.DA=''

* Read COPIES and modify as needed
      COPIES=CLIENT.REC<100,6>
      IF COPIES='' OR NOT(NUM(COPIES)) THEN COPIES='N'
      IF COPIES='N' THEN GOTO APPROVED.REJECTED.BILLS.REPORT           ; * JMK112

      LOG.SEQ.NO = 10                    ; *Start
      PROC.DESC = "Old Rejected (Returned) Bills Report (# 5)"
      LOG.ST.DATE = DATE() ; LOG.ST.TIME = TIME() ; LOG.END.DATE = '' ; LOG.END.TIME = '' ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF

      IF FROM.PROCESS THEN
         IF SEPARATE.REGIONS THEN
            GOSUB SET.REGIONAL.COPIES
         END
      END ELSE
         IF NOT(HOLD.STAT) THEN
            IF SUMMARY.ONLY THEN
               COPIES=0
            END ELSE
               IF ONE.COPY THEN
                  COPIES=1
               END                       ; * IF ONE.COPY
            END                          ; * IF SUMMARY.ONLY
         END                             ; * IF NOT(HOLD.STAT)
      END                                ; * IF FROM.PROCESS

* Interpret COPIES for the printing loop
      BEGIN CASE
         CASE NOT(NUM(COPIES))
            COPY.COUNT=0
         CASE NUM(COPIES)
            COPY.COUNT=COPIES
         CASE 1
            COPY.COUNT=0
      END CASE

* Add extra test for emailing when not printing
      IF COPIES=0 AND NOT(SUMMARY.ONLY) THEN COPY.COUNT=1

      IF COPY.COUNT>0 THEN
         TITLE.1='Outstanding "Returned for Additional Information Bills"'
         TITLE.2='For Client: ':CLIENT:' ':CLIENT.NAME
         IF SEPARATE.REGIONS THEN
            TITLE.2:='  Region: ':REGS<1,REG.COUNT>:' ':REGS<11,REG.COUNT>
         END
         ODATE='Bills Processed Prior to ':BEG.DATE'D2/'
         HEAD1='  DATE  '
         HEAD1:='   '
         HEAD1:='Pro''L#25'
         HEAD1:='   '
         HEAD1:='Amt Billed'
         HEAD1:='   '
         HEAD1:=' Rejection Reasons'
         FOR COPIES.LOOP=1 TO COPY.COUNT

            STMT='SSELECT FB.BILLS,':CLIENT        ; * JMK147
            STMT:=' WITH 67 NE "" AND WITH 67 LT ':OCONV(BEG.DATE,'D2/')
            STMT:=' AND WITH 66 EQ "E"'
            STMT:=' AND WITH 39 EQ "R"'
            IF SEPARATE.REGIONS THEN
               STMT:=' AND WITH DIV.REG EQ "':REGS<1,REG.COUNT>:'"'
            END
            STMT:=' BY CARRIER.NAME BY CARRIER# BY 1 BY PRO'

            EXECUTE STMT CAPTURING OUTPUT          ; * JMK147
            IF SYSTEM(11) THEN
               NUM.ITMS=@SELECTED
               IF COPIES#0 THEN
                  PRINTER ON
                  CHAR.PER.IN=16.7
                  WIDTH=174
                  DEPTH=60
                  LPI=8
                  GOSUB 8100

                  CALL PAGE.HEAD(PROG.NAME,COMPANY.NAME.HTML,TITLE.1,TITLE.2,ODATE,WIDTH,HED)        ; * JMK95
                  PAGE 1
                  HEADING HED:" 'L'":HEAD1
               END
               GOSUB PRINT.REJECT.REPORT
               IF COPIES#0 THEN
                  PRINTER CLOSE
               END
               IF (COPIES.LOOP=1) AND (REJ.DA#'') THEN
                  ORB.DA<1,1>=COMPANY.NAME:'  ':TITLE.1:'  ':TITLE.2:'  ':ODATE
                  ORB.DA<2,1>=''
                  ORB.DA<3,1>='Carrier #'
                  ORB.DA<3,2>='Carrier Name'
                  ORB.DA<3,3>='Date'
                  ORB.DA<3,4>='Pro Number'
                  ORB.DA<3,5>='Amt Billed'

                  IF CLIENT='01977' OR CLIENT='01979' THEN   ; * JMK135 ; * JMK136

                     ORB.DA<3,6>='Region'          ; * JMK135
                     ORB.DA<3,7>='Rejection Reasons'         ; * JMK135
                  END ELSE               ; * JMK135

                     ORB.DA<3,6>='Rejection Reasons'
                  END                    ; * JMK135
                  ORB.DA<-1>=REJ.DA
                  ORB.DA=CHANGE(ORB.DA,@VM,TAB)
               END
            END                          ; * IF SYSTEM(11)
         NEXT COPIES.LOOP
      END                                ; * COPY.COUNT>0

      LOG.SEQ.NO = 10                    ; * End
      PROC.DESC = "Old Rejected (Returned) Bills Report (# 5)"
      LOG.ST.DATE = '' ; LOG.ST.TIME = '' ; LOG.END.DATE = DATE() ; LOG.END.TIME = TIME() ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF

* End Old Rejected (Returned) Bills Report (email attachment 5)
***********************************************************************
APPROVED.REJECTED.BILLS.REPORT:* Begin Rejected Bills Approved For Payment Report (email attachment 6)
***********************************************************************

      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK TO BEGIN DEBUG 150...')

      IF FROM.PROCESS THEN               ; * JMK70
         CRT @(0,7):@(-4):'Preparing the Rejected Bills Approved For Payment Report (Attachment 6)...':@(0,7):           ; * JMK70
      END                                ; * JMK70

      ARB.DA=''

* Read COPIES and modify as needed
      COPIES=CLIENT.REC<100,7>
      IF COPIES='' OR NOT(NUM(COPIES)) THEN COPIES='N'
      IF COPIES='N' THEN GOTO SUMMARY.OF.CHARGES   ; * JMK112

      LOG.SEQ.NO = 11                    ; * Start
      PROC.DESC = "Rejected Bills Approved For Payment Report (# 6)"
      LOG.ST.DATE = DATE() ; LOG.ST.TIME = TIME() ; LOG.END.DATE = '' ; LOG.END.TIME = '' ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF

      IF FROM.PROCESS THEN
         IF SEPARATE.REGIONS THEN
            GOSUB SET.REGIONAL.COPIES
         END
      END ELSE
         IF NOT(HOLD.STAT) THEN
            IF SUMMARY.ONLY THEN
               COPIES=0
            END ELSE
               IF ONE.COPY THEN
                  COPIES=1
               END                       ; * IF ONE.COPY
            END                          ; * IF SUMMARY.ONLY
         END                             ; * IF NOT(HOLD.STAT)
      END                                ; * IF FROM.PROCESS

* Interpret COPIES for the printing loop
      BEGIN CASE
         CASE NOT(NUM(COPIES))
            COPY.COUNT=0
         CASE NUM(COPIES)
            COPY.COUNT=COPIES
         CASE 1
            COPY.COUNT=0
      END CASE

* Add extra test for emailing when not printing
      IF COPIES=0 AND NOT(SUMMARY.ONLY) THEN COPY.COUNT=1

      IF COPY.COUNT>0 THEN
         TITLE.1='Prior Returned Bills That Have Been Approved For Payment'
         TITLE.2='For Client: ':CLIENT:' ':CLIENT.NAME
         IF SEPARATE.REGIONS THEN
            TITLE.2:='  Region: ':REGS<1,REG.COUNT>:' ':REGS<11,REG.COUNT>
         END
         ODATE='Bills Processed From ':BEG.DATE'D2/':' to ':END.DATE'D2/'
         HEAD1='  DATE  '
         HEAD1:='   '
         HEAD1:='Pro''L#25'
         HEAD1:='   '
         HEAD1:='Amt Billed'
         HEAD1:='   '
         HEAD1:=' Rejection Reasons'
         FOR COPIES.LOOP=1 TO COPY.COUNT
            EXECUTE 'GET-LIST ':CH.NUM PASSLIST CAPTURING OUTPUT
            IF SYSTEM(11) THEN
               STMT='SSELECT FB.BILLS.HIST,':CLIENT
               STMT:=' WITH 66 EQ "E"'
               STMT:=' AND WITH 39 NE "R"'
               STMT:=' AND WITH VERSION EQ "0"'
               IF SEPARATE.REGIONS THEN
                  STMT:=' AND WITH DIV.REG EQ "':REGS<1,REG.COUNT>:'"'
               END
               STMT:=' BY CARRIER.NAME BY CARRIER# BY 1 BY PRO'
               EXECUTE STMT PASSLIST CAPTURING OUTPUT
               IF SYSTEM(11) THEN
                  NUM.ITMS=@SELECTED
                  IF COPIES#0 THEN
                     PRINTER ON
                     CHAR.PER.IN=16.7
                     WIDTH=174
                     DEPTH=60
                     LPI=8
                     GOSUB 8100

                     CALL PAGE.HEAD(PROG.NAME,COMPANY.NAME.HTML,TITLE.1,TITLE.2,ODATE,WIDTH,HED)     ; * JMK95
                     PAGE 1
                     HEADING HED:" 'L'":HEAD1
                  END
                  GOSUB PRINT.REJECT.REPORT
                  IF COPIES#0 THEN
                     PRINTER CLOSE
                  END
                  IF (COPIES.LOOP=1) AND (REJ.DA#'') THEN
                     ARB.DA<1,1>=COMPANY.NAME:'  ':TITLE.1:'  ':TITLE.2:'  ':ODATE
                     ARB.DA<2,1>=''
                     ARB.DA<3,1>='Carrier #'
                     ARB.DA<3,2>='Carrier Name'
                     ARB.DA<3,3>='Date'
                     ARB.DA<3,4>='Pro Number'
                     ARB.DA<3,5>='Amt Billed'

                     IF CLIENT='01977' OR CLIENT='01979' THEN          ; * JMK135 ; * JMK136

                        ARB.DA<3,6>='Region'       ; * JMK135
                        ARB.DA<3,7>='Rejection Reasons'      ; * JMK135
                     END ELSE            ; * JMK135
                        ARB.DA<3,6>='Rejection Reasons'

                     END                 ; * JMK135
                     ARB.DA<-1>=REJ.DA
                     ARB.DA=CHANGE(ARB.DA,@VM,TAB)
                  END
               END                       ; * IF SYSTEM(11)
            END                          ; * IF SYSTEM(11)
         NEXT COPIES.LOOP
      END                                ; * COPY.COUNT>0

      LOG.SEQ.NO = 11                    ; *  End
      PROC.DESC = "Rejected Bills Approved For Payment Report (# 6)"
      LOG.ST.DATE = '' ; LOG.ST.TIME = '' ; LOG.END.DATE = DATE() ; LOG.END.TIME = TIME() ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF

* End Rejected Bills Approved For Payment Report (email attachment 6)
***********************************************************************
SUMMARY.OF.CHARGES:* Begin Summary of Charges
***********************************************************************

* Read year-to-date information from FB.BILLS.YTD file
      READ DFB.BILLS.YTD FROM F.YTD,CLIENT ELSE DFB.BILLS.YTD=''

      Y.NUM.EDI.OUT=DFB.BILLS.YTD<42>    ; * Num outbound EDI bills paid
      Y.NUM.EDI.IN=DFB.BILLS.YTD<43>     ; * Num inbound EDI bills paid
      Y.NUM.EDI.THIRD=DFB.BILLS.YTD<65>  ; * Num third party EDI bills paid
      Y.NUM.OUT.PAID=DFB.BILLS.YTD<15>   ; * Num outbound paper bills paid
      Y.NUM.IN.PAID=DFB.BILLS.YTD<17>    ; * Num inbound paper bills paid
      Y.NUM.THIRD.PAID=DFB.BILLS.YTD<60>           ; * Num third party paper bills paid
      Y.TOT.NUM.OUT=0                    ; * Sum of 42 and 15
      Y.TOT.NUM.IN=0                     ; * Sum of 43 and 17
      Y.TOT.NUM.THIRD=0                  ; * Sum of 65 and 60
      Y.TOT.EDI.BILLS=0                  ; * Calculated
      Y.TOT.NON.EDI.BILLS=0              ; * Calculated
      Y.PAID=0                           ; * Calculated
      Y.NOB.REJ=DFB.BILLS.YTD<13>'R0'    ; * Num duplicate bills
      Y.NUM.NEVER.PAYS=DFB.BILLS.YTD<48>'R0'       ; * Num never pay bills
      Y.NUM.HOLDS=DFB.BILLS.YTD<44>'R0'  ; * Num hold bills
      Y.OUT.CAR.CHG=DFB.BILLS.YTD<16>    ; * Outbound charges billed
      Y.IN.CAR.CHG=DFB.BILLS.YTD<18>     ; * Inbound charges billed
      Y.THIRD.CAR.CHG=DFB.BILLS.YTD<61>  ; * Third party charges billed
      Y.BILLED=0                         ; * Calculated
      Y.DUP.NOT.PAID=DFB.BILLS.YTD<14>'R0'         ; * Amount of duplicate bills
      Y.OVER.VAR=DFB.BILLS.YTD<11>
      Y.BD.OVER.VAR=DFB.BILLS.YTD<35>
      Y.SAVE=0                           ; * Calculated
      Y.FRT.PAID=0                       ; * Calculated
      Y.OUT.CHG.DUE=0                    ; * Calculated
      Y.IN.CHG.DUE=0                     ; * Calculated
      Y.THIRD.CHG.DUE=0                  ; * Calculated
      FCD.Y=0                            ; * Calculated
      Y.PROCESS.FEE=DFB.BILLS.YTD<32>    ; * Processing fee
      Y.PRE.AUDIT.FEE=DFB.BILLS.YTD<75>  ; * Pre Audit fee
      Y.POSTAGE=DFB.BILLS.YTD<31>        ; * Postage
      Y.FBD=DFB.BILLS.YTD<38>            ; * Freight balance due    where is this?
      Y.FAD=DFB.BILLS.YTD<39>            ; * Freight additional due where is this?
      Y.SERVICE.FEE=DFB.BILLS.YTD<33>
      Y.UPS.FEE=DFB.BILLS.YTD<53>
      Y.LOGISTICS.FEE=DFB.BILLS.YTD<37>
      Y.WKLY.POSTAGE.FEE=DFB.BILLS.YTD<50>
      Y.WKLY.POSTAGE.FEE=Y.WKLY.POSTAGE.FEE+Y.PROCESS.FEE
      Y.PROCESS.FEE=0
      IF CLIENT#'10340' THEN
         Y.WKLY.POSTAGE.FEE=Y.WKLY.POSTAGE.FEE+Y.PRE.AUDIT.FEE
         Y.PRE.AUDIT.FEE=0
      END
      Y.AMT.NEVER.PAYS=DFB.BILLS.YTD<49>'R0'       ; * Amount of never pay bills - not being used
      Y.AMT.HOLDS=DFB.BILLS.YTD<45>'R0'  ; * Amount of hold bills - not being used

      Y.OUT.MISROUTE=DFB.BILLS.YTD<71>+0           ; * OUTBOUND MISROUTE AMOUNT    ; * JMK05

      Y.IN.MISROUTE=DFB.BILLS.YTD<72>+0  ; * INBOUND MISROUTE AMOUNT     ; * JMK05
      Y.THIRD.MISROUTE=DFB.BILLS.YTD<73>+0         ; * THIRD PARTY MISROUTE AMOUNT ; * JMK05
      Y.NONF.CNT=DFB.BILLS.YTD<76>+0     ; * JMK94
      Y.NONF.AMT=DFB.BILLS.YTD<77>+0     ; * JMK94

* Begin Print fax cover for Summary of Charges Report

      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK TO BEGIN DEBUG 160...')

      FAX.COVER.COPIES=CLIENT.REC<100,13>
      IF REPORT.TYPE='O' THEN FAX.COVER.COPIES=0
      IF SEPARATE.REGIONS THEN FAX.COVER.COPIES=0
      IF NOT(CHECK.AR.BRIDGE) THEN FAX.COVER.COPIES=0

      IF FAX.COVER.COPIES>0 THEN
         LOG.SEQ.NO = 12                 ; * Start
         PROC.DESC = "SOC Report (Fax Cover)"
         LOG.ST.DATE = DATE() ; LOG.ST.TIME = TIME() ; LOG.END.DATE = '' ; LOG.END.TIME = '' ; LOG.REFS = ""
         GOSUB UPD.PROC.LOGF

         VIN='FORMS'                     ; * VOC Pointer to Source Location on AFS (Share Name)
         VIN<2>='FAX'                    ; * Sub Folder on AFS that has the file
         VIN<3>='GFAXCOVER.PRN'          ; * FileName to Load
         CALL READ.PCFILE(VIN,VOUT)      ; * Read File

         IF VOUT[1,5]='ERROR' THEN
            CALL ELINE('Error reading FAX cover overlay - from \\AFS\FORMS\FAX\GFAXCOVER.PRN.')
            CALL ELINE(VOUT)
         END ELSE
            PRINTER ON
            HEADING ""
            FOR COPIES.LOOP=1 TO FAX.COVER.COPIES
               PRINT VOUT:
               LASER.STR=ESC:"&l0O"      ; * Set orientation
               LASER.STR:=ESC:"&l6D"     ; * Lines per inch
               LASER.STR:=ESC:"&l66F"    ; * Page length
               LASER.STR:=ESC:"(s12h"    ; * Char per inch (pitch)
               LASER.STR:="0p"           ; * Set spacing
               LASER.STR:="0s"           ; * Italics off

               LASER.STR:="4b"           ; * Stroke Weight

               LASER.STR:="9.50v"        ; * Point Size
               LASER.STR:="0T"           ; * Font
               LASER.STR:=ESC:"(8U"      ; * Symbol Set
               PRINT LASER.STR:

* TO
               PRINT ESC:'*p525X':
               PRINT ESC:'*p1079Y':
               PRINT CLIENT.NAME'L#30'

               PRINT ESC:'*p525X':
               PRINT ESC:'*p1200Y':
               PRINT CLIENT.REC<123>'L#30'

               PRINT ESC:'*p1500X':
               PRINT ESC:'*p1079Y':
               PRINT CLIENT.REC<31>'R(###-###-####)'

               PRINT ESC:'*p1500X':
               PRINT ESC:'*p1200Y':
               PRINT CLIENT.REC<124>

* FROM
               PRINT ESC:'*p525X':
               PRINT ESC:'*p1331Y':

               PRINT 'Customer Serivces Department'          ; * JMK145

               PRINT ESC:'*p525X':
               PRINT ESC:'*p1444Y':

               PRINT 'Contact: Customer Serivces'  ; * JMK145

               PRINT ESC:'*p1500X':
               PRINT ESC:'*p1331Y':

               PRINT '318-798-2111 opt. 2'         ; * JMK145

               PRINT ESC:'*p1500X':
               PRINT ESC:'*p1444Y':

               PRINT 'cs@afs.net'        ; * JMK145

* DATE/TIME
               PRINT ESC:'*p525X':
               PRINT ESC:'*p1570Y':
               PRINT DATE()'D2/'

               PRINT ESC:'*p1950Y':
               PRINT ESC:'*p525X':
               PRINT 'The following pages are your Summary of Charges / Invoice'
               PRINT ESC:'*p525X':'for the week ending ':END.DATE'D2/'

               PAGE                      ; * Kick out page
            NEXT COPIES.LOOP
            PRINTER CLOSE
         END                             ; * IF VOUT[1,5]='ERROR'

         LOG.SEQ.NO = 12                 ; * End
         PROC.DESC = "SOC Report (Fax Cover)"
         LOG.ST.DATE = '' ; LOG.ST.TIME = '' ; LOG.END.DATE = DATE() ; LOG.END.TIME = TIME() ; LOG.REFS = ""
         GOSUB UPD.PROC.LOGF

      END                                ; * IF FAX.COVER.COPIES>0

* End Print fax cover for Summary of Charges Report
***********************************************************************
SUMMARY.OF.CHARGES.REPORT:* Begin Summary of Charges Report (email attachments 7 - text and 8 - HTML)
***********************************************************************
      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK TO BEGIN DEBUG 170...')

      IF FROM.PROCESS THEN               ; * JMK70
         CRT @(0,7):@(-4):'Preparing the Summary of Charges Report (Attachment 7-txt & 8-HTML)...':@(0,7):     ; * JMK70
      END                                ; * JMK70

      SOC.TXT=''
      EA=''

      SOC.HTML=''
      HTML=''

      INVOICE.HTML=''
      TEST.REC = '' ; ID.TEST = CLIENT:"*RPT2*":DATE():"*":TIME()      ; *NPRZZ

* Read COPIES and modify as needed
      COPIES=CLIENT.REC<100,2>
      IF CLIENT = "01148" THEN
         TEST.REC<-1> = "A COPIES ":COPIES
         WRITE TEST.REC ON F.PROC.LOGF, ID.TEST
      END
      IF COPIES='' OR NOT(NUM(COPIES)) THEN COPIES='N'
      IF COPIES='N' THEN GOTO SUMMARY.OF.EXPENSES.REPORT     ; * JMK112

      IF FROM.PROCESS THEN
         IF SEPARATE.REGIONS THEN
            GOSUB SET.REGIONAL.COPIES
         END
      END ELSE
         IF NOT(HOLD.STAT) THEN
            IF SUMMARY.ONLY THEN
               COPIES=1
            END ELSE
               IF ONE.COPY THEN
                  COPIES=1
               END                       ; * IF ONE.COPY
            END                          ; * IF SUMMARY.ONLY
         END                             ; * IF NOT(HOLD.STAT)
      END                                ; * IF FROM.PROCESS

      IF CLIENT = "01148" THEN
         TEST.REC<-1> = "B COPIES ":COPIES
         WRITE TEST.REC ON F.PROC.LOGF, ID.TEST
      END

* Interpret COPIES for the printing loop
      BEGIN CASE
         CASE NOT(NUM(COPIES))
            COPY.COUNT=0
         CASE NUM(COPIES)
            COPY.COUNT=COPIES
         CASE 1
            COPY.COUNT=0
      END CASE

* Add extra test for emailing when not printing
      IF COPIES=0 AND NOT(SUMMARY.ONLY) THEN COPY.COUNT=1

      IF FILE[1,13]='FB.BILLS.HIST' THEN
         FOR COPIES.LOOP=1 TO COPY.COUNT

            LOG.SEQ.NO = 13              ; * Start
            PROC.DESC = "Summary of Charges Report (# 7/8)"
            LOG.ST.DATE = DATE() ; LOG.ST.TIME = TIME() ; LOG.END.DATE = '' ; LOG.END.TIME = '' ; LOG.REFS = ""
            GOSUB UPD.PROC.LOGF

            TITLE.1='Freight Bill Report By Carrier'
            TITLE.2='For Client: ':CLIENT:' ':CLIENT.NAME
            IF SEPARATE.REGIONS THEN
               TITLE.2:='  Region: ':REGS<1,REG.COUNT>:' ':REGS<11,REG.COUNT>
            END
            ODATE='Bills Processed From ':BEG.DATE'D2/':' to ':END.DATE'D2/'
            EA=''                        ; * Build text SOC Report in EA

            EA<1>=SPACE((132-LEN(COMPANY.NAME.HTML))/2):COMPANY.NAME.HTML        ; * JMK95
            EA<-1>=SPACE((132-LEN(TITLE.1))/2):TITLE.1       ; * JMK95
            EA<-1>=SPACE((132-LEN(TITLE.2))/2):TITLE.2       ; * JMK95
            EA<-1>=SPACE((132-LEN(ODATE))/2):ODATE           ; * JMK95
            HTML=''                      ; * Build HTML format SOC Report in HTML
            HTML<1>='<HTML>'
            HTML<-1>='<HEAD>'

            HTML<-1> = '<style>BODY { FONT-FAMILY: Tahoma,Arial,Helvetica,Verdana; FONT-SIZE: 8PT; } TD{FONT-FAMILY: Tahoma,Arial,Helvetica,Verdana;FONT-SIZE: 8PT; }</style>'
            HTML<-1>='</HEAD>'
            HTML<-1>='<BODY>'

            HTML<-1>='<DIV ALIGN="CENTER">':COMPANY.NAME.HTML:'<BR>':TITLE.1:'<BR>'        ; * JMK06
            HTML<-1>=TITLE.2:'<BR>'

            HTML<-1>=ODATE:'<BR><BR></DIV>'        ; * JMK95
            HTML<-1>='<DIV ALIGN="CENTER">'        ; * JMK95
            HTML<-1>='<TABLE CELLSPACING="0" CELLPADDING="0" BORDER="0" WIDTH="500">'      ; * JMK95
            HTML<-1>='<TR><TD>Remit Address:</TD></TR>'      ; * JMK95

            HTML<-1>='<TR><TD>AFS, LLC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>SUMMARY OF CHARGES</B></TD></TR>'         ; * JMK95 ; * JMK153
            HTML<-1>='<TR><TD>Attn: Accounts Receivable&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>ORIGINAL INVOICE</B></TD></TR>'        ; * JMK95

            HTML<-1>='<TR><TD>P.O. Box 18410&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<B>======================<B/></TD></TR>'     ; * JMK95

            HTML<-1>='<TR><TD>Shreveport, LA 71138-1410</TD></TR></TABLE></DIV>'           ; * JMK95
            HTML<-1>='<DIV ALIGN="CENTER">'
            HTML<-1>='<TABLE CELLSPACING="0" CELLPADDING="0" BORDER="0" WIDTH="500">'
            IF SEPARATE.REGIONS THEN
               HTML<-1>='<TR><TD></TD><TD COLSPAN="3" ALIGN="CENTER">This Period</TD>'
               HTML<-1>='<TD COLSPAN="3"</TD></TR>'
               HTML<-1>='<TR><TD></TD><TD COLSPAN="3" ALIGN="RIGHT">----------------------------------------------------------------------------</TD>'
               HTML<-1>='<TD COLSPAN="3"</TD></TR>'
               HTML<-1>='<TR><TD></TD><TD ALIGN="RIGHT">EDI</TD><TD ALIGN="RIGHT">Paper</TD><TD ALIGN="RIGHT">Total</TD>'
               HTML<-1>='<TD COLSPAN="3"</TD></TR>'
            END ELSE
               HTML<-1>='<TR><TD></TD><TD COLSPAN="3" ALIGN="CENTER">This Period</TD>'
               IF REBATE.FLG THEN        ; * JMK88
                  HTML<-1>='<TD COLSPAN="3" ALIGN="CENTER">Fiscal Year to Date</TD></TR>'  ; * JMK88
               END ELSE                  ; * JMK88
                  HTML<-1>='<TD COLSPAN="3" ALIGN="CENTER">Year to Date</TD></TR>'
               END                       ; * JMK88
               HTML<-1>='<TR><TD></TD><TD COLSPAN="3" ALIGN="RIGHT">----------------------------------------------</TD>'
               HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">----------------------------------------------</TD></TR>'
               HTML<-1>='<TR><TD></TD><TD ALIGN="RIGHT">EDI</TD><TD ALIGN="RIGHT">Paper</TD><TD ALIGN="RIGHT">Total</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">EDI</TD><TD ALIGN="RIGHT">Paper</TD><TD ALIGN="RIGHT">Total</TD></TR>'
            END
            IF COPIES#0 THEN
               PRINTER ON
               WIDTH=FORMAT.REC<1,1>
               DEPTH=FORMAT.REC<1,2>
               LPI=FORMAT.REC<1,3>
               GOSUB 8110                ; * Reset laser for report format

               CALL PAGE.HEAD(PROG.NAME,COMPANY.NAME.HTML,TITLE.1,TITLE.2,ODATE,132,HED)   ; * JMK95
               PAGE 1
               IF CLIENT = "01148" THEN
                  TEST.REC<-1> = HED
                  WRITE TEST.REC ON F.PROC.LOGF, ID.TEST
               END
               HEADING HED
            END

            LINE='Remit Address :'       ; * JMK95
            GOSUB BUILD.EMAIL.REPORT

            LINE='AFS, LLC''L#57':'SUMMARY OF CHARGES'       ; * JMK95 ; * JMK153
            GOSUB BUILD.EMAIL.REPORT

            LINE='Attn: Accounts Receivable''L#58':'ORIGINAL INVOICE'  ; * JMK95
            GOSUB BUILD.EMAIL.REPORT

            LINE='P.O. Box 18410''L#55':'======================'       ; * JMK95
            GOSUB BUILD.EMAIL.REPORT

            LINE='Shreveport, LA 71138-1410'       ; * JMK95
            GOSUB BUILD.EMAIL.REPORT
            LINE=SPACE(51):'This Period'
            IF REBATE.FLG THEN           ; * JMK88
               IF NOT(SEPARATE.REGIONS) THEN LINE=LINE:SPACE(28):'Fiscal Year to Date'     ; * JMK88
            END ELSE                     ; * JMK88
               IF NOT(SEPARATE.REGIONS) THEN LINE=LINE:SPACE(28):'Year to Date'  ; * JMK88
            END                          ; * JMK88
            GOSUB BUILD.EMAIL.REPORT
            IF SEPARATE.REGIONS THEN
               LINE=DASH.1.LONG.COLS
               GOSUB BUILD.EMAIL.REPORT
            END ELSE
               LINE=DASH.2.LONG.COLS
               GOSUB BUILD.EMAIL.REPORT
            END
            LINE=SPACE(40):'       EDI     Paper     Total'
            IF NOT(SEPARATE.REGIONS) THEN LINE:=SPACE(10):'       EDI     Paper     Total'
            GOSUB BUILD.EMAIL.REPORT

            TOT.NUM.OUT=NUM.OUT.PAID+NUM.EDI.OUT<1,1>+NUM.EDI.OUT<1,2>
            Y.TOT.NUM.OUT=Y.NUM.OUT.PAID+Y.NUM.EDI.OUT

            LINE=SPACE(11):'Number of Outbound Bills     '
            LINE:=(NUM.EDI.OUT<1,1>+NUM.EDI.OUT<1,2>)'R,#10':NUM.OUT.PAID'R,#10'
            LINE:=TOT.NUM.OUT'R,#10'
            IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.NUM.EDI.OUT'R,#20'
            IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.NUM.OUT.PAID'R,#10':Y.TOT.NUM.OUT'R,#10'
            GOSUB BUILD.EMAIL.REPORT

            IF SEPARATE.REGIONS THEN
               HTML<-1>='<TR><TD>Number of Outbound Bills</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':(NUM.EDI.OUT<1,1>+NUM.EDI.OUT<1,2>)'R,#10':'</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':NUM.OUT.PAID'R,#10':'</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':TOT.NUM.OUT'R,#10':'</TD>'
               HTML<-1>='<TD COLSPAN="3"></TD></TR>'
            END ELSE
               HTML<-1>='<TR><TD>Number of Outbound Bills</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':(NUM.EDI.OUT<1,1>+NUM.EDI.OUT<1,2>)'R,#10':'</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':NUM.OUT.PAID'R,#10':'</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':TOT.NUM.OUT'R,#10':'</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':Y.NUM.EDI.OUT'R,#20':'</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':Y.NUM.OUT.PAID'R,#10':'</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':Y.TOT.NUM.OUT'R,#10':'</TD></TR>'
            END

            TOT.NUM.IN=NUM.IN.PAID+NUM.EDI.IN<1,1>+NUM.EDI.IN<1,2>
            Y.TOT.NUM.IN=Y.NUM.IN.PAID+Y.NUM.EDI.IN

            LINE=SPACE(11):'Number of Inbound Bills      '
            LINE:=(NUM.EDI.IN<1,1>+NUM.EDI.IN<1,2>)'R,#10':NUM.IN.PAID'R,#10'
            LINE:=TOT.NUM.IN'R,#10'
            IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.NUM.EDI.IN'R,#20'
            IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.NUM.IN.PAID'R,#10':Y.TOT.NUM.IN'R,#10'
            GOSUB BUILD.EMAIL.REPORT

            IF SEPARATE.REGIONS THEN
               HTML<-1>='<TR><TD>Number of Inbound Bills</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':(NUM.EDI.IN<1,1>+NUM.EDI.IN<1,2>)'R,#10':'</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':NUM.IN.PAID'R,#10':'</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':TOT.NUM.IN'R,#10':'</TD>'
               HTML<-1>='<TD COLSPAN="3"></TD></TR>'
            END ELSE
               HTML<-1>='<TR><TD>Number of Inbound Bills</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':(NUM.EDI.IN<1,1>+NUM.EDI.IN<1,2>)'R,#10':'</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':NUM.IN.PAID'R,#10':'</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':TOT.NUM.IN'R,#10':'</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':Y.NUM.EDI.IN'R,#20':'</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':Y.NUM.IN.PAID'R,#10':'</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':Y.TOT.NUM.IN'R,#10':'</TD></TR>'
            END

            TOT.NUM.THIRD=NUM.THIRD.PAID+NUM.EDI.THIRD<1,1>+NUM.EDI.THIRD<1,2>
            Y.TOT.NUM.THIRD=Y.NUM.THIRD.PAID+Y.NUM.EDI.THIRD

            LINE=SPACE(11):'Number of Third Party Bills  '
            LINE:=(NUM.EDI.THIRD<1,1>+NUM.EDI.THIRD<1,2>)'R,#10':NUM.THIRD.PAID'R,#10'
            LINE:=TOT.NUM.THIRD'R,#10'
            IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.NUM.EDI.THIRD'R,#20'
            IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.NUM.THIRD.PAID'R,#10':Y.TOT.NUM.THIRD'R,#10'
            GOSUB BUILD.EMAIL.REPORT

            IF SEPARATE.REGIONS THEN
               HTML<-1>='<TR><TD>Number of Third Party Bills</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':(NUM.EDI.THIRD<1,1>+NUM.EDI.THIRD<1,2>)'R,#10':'</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':NUM.THIRD.PAID'R,#10':'</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':TOT.NUM.THIRD'R,#10':'</TD>'
               HTML<-1>='<TD COLSPAN="3"></TD></TR>'
            END ELSE
               HTML<-1>='<TR><TD>Number of Third Party Bills</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':(NUM.EDI.THIRD<1,1>+NUM.EDI.THIRD<1,2>)'R,#10':'</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':NUM.THIRD.PAID'R,#10':'</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':TOT.NUM.THIRD'R,#10':'</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':Y.NUM.EDI.THIRD'R,#20':'</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':Y.NUM.THIRD.PAID'R,#10':'</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':Y.TOT.NUM.THIRD'R,#10':'</TD></TR>'
            END

            IF SEPARATE.REGIONS THEN
               LINE=DASH.1.LONG.COLS
               GOSUB BUILD.EMAIL.REPORT
            END ELSE
               LINE=DASH.2.LONG.COLS
               GOSUB BUILD.EMAIL.REPORT
            END

            IF SEPARATE.REGIONS THEN
               HTML<-1>='<TR><TD></TD><TD COLSPAN="3" ALIGN="RIGHT">----------------------------------------------------------------------------</TD>'
               HTML<-1>='<TD COLSPAN="3"></TD></TR>'
            END ELSE
               HTML<-1>='<TR><TD></TD><TD COLSPAN="3" ALIGN="RIGHT">----------------------------------------------</TD>'
               HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">----------------------------------------------</TD></TR>'
            END

            TOT.EDI.BILLS=NUM.EDI.IN<1,1>+NUM.EDI.IN<1,2>+NUM.EDI.OUT<1,1>+NUM.EDI.OUT<1,2>+NUM.EDI.THIRD<1,1>+NUM.EDI.THIRD<1,2>
            TOT.NON.EDI.BILLS=NUM.IN.PAID+NUM.OUT.PAID+NUM.THIRD.PAID
            PAID=TOT.EDI.BILLS+TOT.NON.EDI.BILLS
            NUM.BILLS=PAID               ; * JMK16

            Y.TOT.EDI.BILLS=Y.NUM.EDI.OUT+Y.NUM.EDI.IN+Y.NUM.EDI.THIRD
            Y.TOT.NON.EDI.BILLS=Y.NUM.OUT.PAID+Y.NUM.IN.PAID+Y.NUM.THIRD.PAID
            Y.PAID=Y.TOT.EDI.BILLS+Y.TOT.NON.EDI.BILLS

            LINE=SPACE(11):'Total Bills                  '
            LINE:=TOT.EDI.BILLS'R,#10':TOT.NON.EDI.BILLS'R,#10'
            LINE:=PAID'R,#10'
            IF COPIES.LOOP=1 AND CHECK.AR.BRIDGE THEN
               IF TOT.EDI.BILLS#0 AND IN.CHG.DUE+OUT.CHG.DUE#0 THEN
                  EDI.BRIDGE.LIST=''
                  EDI.BRIDGE.LIST<-1>='21'
                  EDI.BRIDGE.LIST<-1>='22'
                  EDI.BRIDGE.LIST<-1>='1021'
                  EDI.BRIDGE.LIST<-1>='1022'
                  EDI.BRIDGE.LIST<-1>='3021'
                  EDI.BRIDGE.LIST<-1>='3022'
                  EDI.BRIDGE.LIST<-1>='6021'
                  EDI.BRIDGE.LIST<-1>='6022'
                  EDI.BRIDGE.LIST<-1>='7021'
                  EDI.BRIDGE.LIST<-1>='7022'
                  EDI.BRIDGE=0
                  NEDI.BRIDGE.ATT=DCOUNT(EDI.BRIDGE.LIST,@AM)
                  FOR EDI.BRIDGE.ATT=1 TO NEDI.BRIDGE.ATT
                     LOCATE EDI.BRIDGE.LIST<EDI.BRIDGE.ATT> IN D.BRIDGE<1> SETTING AR.POS THEN
                        EDI.BRIDGE+=D.BRIDGE<2,AR.POS>
                     END
                  NEXT EDI.BRIDGE.ATT
                  IF EDI.BRIDGE#TOT.EDI.BILLS THEN BRIDGE.SUMMARY.MATCH=0 ; IF USER='MKERBOW' THEN DEBUG
               END                       ; * IF TOT.EDI.BILLS#0 AND IN.CHG.DUE+OUT.CHG.DUE#0
               IF TOT.NON.EDI.BILLS#0 AND IN.CHG.DUE+OUT.CHG.DUE#0 THEN
                  TEST.CHG.AMT=OUT.CAR.CHG+IN.CAR.CHG+THIRD.CAR.CHG+C.OVER.VAR+C.UPS.VAR+C.CONS.VAR+C.DISC.VAR-DUP.NOT.PAID

                  IF TEST.CHG.AMT=0 ELSE

** Do not test for number of bills if it is a voucher account and the
** freight charges are zero because in freigh charges are zero the
** number of bills do not equal zero.
**
                     NON.EDI.BRIDGE.LIST=''
                     NON.EDI.BRIDGE.LIST<-1>='1'
                     NON.EDI.BRIDGE.LIST<-1>='1001'
                     NON.EDI.BRIDGE.LIST<-1>='3001'
                     NON.EDI.BRIDGE.LIST<-1>='6001'
                     NON.EDI.BRIDGE.LIST<-1>='7001'
                     NON.EDI.BRIDGE=0
                     NNON.EDI.BRIDGE.ATT=DCOUNT(NON.EDI.BRIDGE.LIST,@AM)
                     FOR NON.EDI.BRIDGE.ATT=1 TO NNON.EDI.BRIDGE.ATT
                        LOCATE NON.EDI.BRIDGE.LIST<NON.EDI.BRIDGE.ATT> IN D.BRIDGE<1> SETTING AR.POS THEN
                           NON.EDI.BRIDGE+=D.BRIDGE<2,AR.POS>
                        END
                     NEXT NON.EDI.BRIDGE.ATT
                     IF NON.EDI.BRIDGE#TOT.NON.EDI.BILLS THEN BRIDGE.SUMMARY.MATCH=0 ; IF USER='MKERBOW' THEN DEBUG
                  END
               END                       ; * IF TOT.NON.EDI.BILLS#0 AND IN.CHG.DUE+OUT.CHG.DUE#0
            END                          ; * IF COPIES.LOOP=1 AND CHECK.AR.BRIDGE

            IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.TOT.EDI.BILLS'R,#20'
            IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.TOT.NON.EDI.BILLS'R,#10':Y.PAID'R,#10'
            GOSUB BUILD.EMAIL.REPORT

            IF SEPARATE.REGIONS THEN
               HTML<-1>='<TR><TD>Total Bills</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':TOT.EDI.BILLS'R,#10':'</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':TOT.NON.EDI.BILLS'R,#10':'</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':PAID'R,#10':'</TD>'
               HTML<-1>='<TD COLSPAN="3"></TD></TR>'
            END ELSE
               HTML<-1>='<TR><TD>Total Bills</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':TOT.EDI.BILLS'R,#10':'</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':TOT.NON.EDI.BILLS'R,#10':'</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':PAID'R,#10':'</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':Y.TOT.EDI.BILLS'R,#20':'</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':Y.TOT.NON.EDI.BILLS'R,#10':'</TD>'
               HTML<-1>='<TD ALIGN="RIGHT">':Y.PAID'R,#10':'</TD></TR>'
            END

* Duplicate Bills
            LINE=SPACE(11):'Duplicate Bills              '
            LINE:=NOB.REJ'R,#30'
            IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.NOB.REJ'R,#40'
            GOSUB BUILD.EMAIL.REPORT

            IF SEPARATE.REGIONS THEN
               HTML<-1>='<TR><TD COLSPAN="2">Duplicate Bills</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':NOB.REJ'R,#30':'</TD>'
               HTML<-1>='<TD COLSPAN="3"></TD></TR>'
            END ELSE
               HTML<-1>='<TR><TD COLSPAN="2">Duplicate Bills</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':NOB.REJ'R,#30':'</TD>'
               HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':Y.NOB.REJ'R,#40':'</TD></TR>'
            END

* Never Pay bills
            LINE=SPACE(11):'Rejected Bills               '
            LINE:=NUM.NEVER.PAYS'R,#30'
            IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.NUM.NEVER.PAYS'R,#40'
            GOSUB BUILD.EMAIL.REPORT

            IF SEPARATE.REGIONS THEN
               HTML<-1>='<TR><TD COLSPAN="2">Rejected Bills</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':NUM.NEVER.PAYS'R,#30':'</TD>'
               HTML<-1>='<TD COLSPAN="3"></TD></TR>'
            END ELSE
               HTML<-1>='<TR><TD COLSPAN="2">Rejected Bills</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':NUM.NEVER.PAYS'R,#30':'</TD>'
               HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':Y.NUM.NEVER.PAYS'R,#40':'</TD></TR>'
            END

* Hold bills
            LINE=SPACE(11):'Bills Requiring Additional Information'
            LINE:=NUM.HOLDS'R,#21'
            IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.NUM.HOLDS'R,#40'
            GOSUB BUILD.EMAIL.REPORT

            IF SEPARATE.REGIONS THEN
               HTML<-1>='<TR><TD COLSPAN="2">Bills Requiring Additional Information</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':NUM.HOLDS'R,#21':'</TD>'
               HTML<-1>='<TD COLSPAN="3"></TD></TR>'
            END ELSE
               HTML<-1>='<TR><TD COLSPAN="2">Bills Requiring Additional Information</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':NUM.HOLDS'R,#21':'</TD>'
               HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':Y.NUM.HOLDS'R,#40':'</TD></TR>'
            END

            IF SEPARATE.REGIONS THEN
               LINE=DASH.1.25SP.COLS
               GOSUB BUILD.EMAIL.REPORT
            END ELSE
               LINE=DASH.2.25SP.COLS
               GOSUB BUILD.EMAIL.REPORT
            END

            IF SEPARATE.REGIONS THEN
               HTML<-1>='<TR><TD COLSPAN="4" ALIGN="RIGHT">---------------</TD>'
               HTML<-1>='<TD COLSPAN="3"></TD></TR>'
            END ELSE
               HTML<-1>='<TR><TD COLSPAN="4" ALIGN="RIGHT">---------------</TD>'
               HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">---------------</TD></TR>'
            END

            PAID=PAID+NOB.REJ+NUM.NEVER.PAYS+NUM.HOLDS
            Y.PAID=Y.PAID+Y.NOB.REJ+Y.NUM.NEVER.PAYS+Y.NUM.HOLDS

            LINE=SPACE(11):'Total Bills Processed        '
            LINE:=PAID'R,#30'
            IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.PAID'R,#40'
            GOSUB BUILD.EMAIL.REPORT

            IF SEPARATE.REGIONS THEN
               HTML<-1>='<TR><TD COLSPAN="2">Total Bills Processed</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':PAID'R,#30':'</TD>'
               HTML<-1>='<TD COLSPAN="3"></TD></TR>'
            END ELSE
               HTML<-1>='<TR><TD COLSPAN="2">Total Bills Processed</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':PAID'R,#30':'</TD>'
               HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':Y.PAID'R,#40':'</TD></TR>'
            END

            LINE=' '
            GOSUB BUILD.EMAIL.REPORT

            HTML<-1>='<TR><TD COLSPAN="7">&nbsp;</TD></TR>'

            LINE=SPACE(11):'Outbound Charges Billed      '
            LINE:=OUT.CAR.CHG'R26,#30'
            IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.OUT.CAR.CHG'R26,#40'
            GOSUB BUILD.EMAIL.REPORT

            IF SEPARATE.REGIONS THEN
               HTML<-1>='<TR><TD COLSPAN="2">Outbound Charges Billed</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':OUT.CAR.CHG'R26,#30':'</TD>'
               HTML<-1>='<TD COLSPAN="3"></TD></TR>'
            END ELSE
               HTML<-1>='<TR><TD COLSPAN="2">Outbound Charges Billed</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':OUT.CAR.CHG'R26,#30':'</TD>'
               HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':Y.OUT.CAR.CHG'R26,#40':'</TD></TR>'
            END

            LINE=SPACE(11):'Inbound Charges Billed       '
            LINE:=IN.CAR.CHG'R26,#30'
            IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.IN.CAR.CHG'R26,#40'
            GOSUB BUILD.EMAIL.REPORT

            IF SEPARATE.REGIONS THEN
               HTML<-1>='<TR><TD COLSPAN="2">Inbound Charges Billed</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':IN.CAR.CHG'R26,#30':'</TD>'
               HTML<-1>='<TD COLSPAN="3"></TD></TR>'
            END ELSE
               HTML<-1>='<TR><TD COLSPAN="2">Inbound Charges Billed</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':IN.CAR.CHG'R26,#30':'</TD>'
               HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':Y.IN.CAR.CHG'R26,#40':'</TD></TR>'
            END

            LINE=SPACE(11):'Third Party Charges Billed   '
            LINE:=THIRD.CAR.CHG'R26,#30'
            IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.THIRD.CAR.CHG'R26,#40'
            GOSUB BUILD.EMAIL.REPORT

            IF SEPARATE.REGIONS THEN
               HTML<-1>='<TR><TD COLSPAN="2">Third Party Charges Billed</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':THIRD.CAR.CHG'R26,#30':'</TD>'
               HTML<-1>='<TD COLSPAN="3"></TD></TR>'
            END ELSE
               HTML<-1>='<TR><TD COLSPAN="2">Third Party Charges Billed</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':THIRD.CAR.CHG'R26,#30':'</TD>'
               HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':Y.THIRD.CAR.CHG'R26,#40':'</TD></TR>'
            END

            IF SEPARATE.REGIONS THEN
               LINE=DASH.1.25SP.COLS
               GOSUB BUILD.EMAIL.REPORT
            END ELSE
               LINE=DASH.2.25SP.COLS
               GOSUB BUILD.EMAIL.REPORT
            END

            IF SEPARATE.REGIONS THEN
               HTML<-1>='<TR><TD COLSPAN="4" ALIGN="RIGHT">---------------</TD>'
               HTML<-1>='<TD COLSPAN="3"></TD></TR>'
            END ELSE
               HTML<-1>='<TR><TD COLSPAN="4" ALIGN="RIGHT">---------------</TD>'
               HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">---------------</TD></TR>'
            END

            BILLED=OUT.CAR.CHG+IN.CAR.CHG+THIRD.CAR.CHG
            Y.BILLED=Y.OUT.CAR.CHG+Y.IN.CAR.CHG+Y.THIRD.CAR.CHG

            LINE=SPACE(14):'Freight Charges Billed    '
            LINE:=BILLED'R26,#30'
            IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.BILLED'R26,#40'
            GOSUB BUILD.EMAIL.REPORT

            IF SEPARATE.REGIONS THEN
               HTML<-1>='<TR><TD COLSPAN="2">&nbsp;&nbsp;&nbsp;Freight Charges Billed</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':BILLED'R26,#30':'</TD>'
               HTML<-1>='<TD COLSPAN="3"></TD></TR>'
            END ELSE
               HTML<-1>='<TR><TD COLSPAN="2">&nbsp;&nbsp;&nbsp;Freight Charges Billed</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':BILLED'R26,#30':'</TD>'
               HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':Y.BILLED'R26,#40':'</TD></TR>'
            END

            LINE=' '
            GOSUB BUILD.EMAIL.REPORT

            HTML<-1>='<TR><TD COLSPAN="7">&nbsp;</TD></TR>'

            Y.UPS.VAR=DFB.BILLS.YTD<51>
            Y.CONS.VAR=DFB.BILLS.YTD<12>
            Y.DISC.VAR=DFB.BILLS.YTD<10>
            Y.BD.DISC.VAR=DFB.BILLS.YTD<34>

            Y.BD.UPS.VAR=DFB.BILLS.YTD<52>
            Y.BD.CONS.VAR=DFB.BILLS.YTD<36>

            IF NEW.SOC THEN
               IF SEPARATE.REGIONS THEN
                  IF DUP.NOT.PAID#0 THEN
                     LINE=SPACE(11):'Duplicate Bill Savings'
                     GOSUB BUILD.EMAIL.REPORT
                     HTML<-1>='<TR><TD COLSPAN="2">Duplicate Bill Savings</TD>'
                     HTML<-1>='<TD COLSPAN="5"></TD></TR>'
                     LINE=SPACE(14):'Duplicates Rejected       '
                     LINE:=-DUP.NOT.PAID'R26,#30'
                     GOSUB BUILD.EMAIL.REPORT
                     HTML<-1>='<TR><TD COLSPAN="2">&nbsp;&nbsp;&nbsp;Duplicates Rejected</TD>'
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':-DUP.NOT.PAID'R26,#30':'</TD>'
                     HTML<-1>='<TD COLSPAN="3"></TD></TR>'
                     LINE=' '
                     GOSUB BUILD.EMAIL.REPORT
                     HTML<-1>='<TR><TD COLSPAN="7">&nbsp;</TD></TR>'
                  END
               END ELSE
                  IF DUP.NOT.PAID#0 OR Y.DUP.NOT.PAID#0 THEN
                     LINE=SPACE(11):'Duplicate Bill Savings'
                     GOSUB BUILD.EMAIL.REPORT
                     HTML<-1>='<TR><TD COLSPAN="2">Duplicate Bill Savings</TD>'
                     HTML<-1>='<TD COLSPAN="5"></TD></TR>'
                     LINE=SPACE(14):'Duplicates Rejected       '
                     LINE:=-DUP.NOT.PAID'R26,#30':-Y.DUP.NOT.PAID'R26,#40'
                     GOSUB BUILD.EMAIL.REPORT
                     HTML<-1>='<TR><TD COLSPAN="2">&nbsp;&nbsp;&nbsp;Duplicates Rejected</TD>'
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':-DUP.NOT.PAID'R26,#30':'</TD>'
                     HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':-Y.DUP.NOT.PAID'R26,#40':'</TD></TR>'
                     LINE=' '
                     GOSUB BUILD.EMAIL.REPORT
                     HTML<-1>='<TR><TD COLSPAN="7">&nbsp;</TD></TR>'
                  END
               END                       ; * IF SEPARATE.REGIONS
            END                          ; * IF NEW.SOC

            IF NEW.SOC THEN
               LINE=SPACE(11):'Non-Duplicate Savings'
               GOSUB BUILD.EMAIL.REPORT
               HTML<-1>='<TR><TD COLSPAN="2">Non-Duplicate Savings</TD>'
               HTML<-1>='<TD COLSPAN="5"></TD></TR>'
            END ELSE
               LINE=SPACE(11):'Savings'
               GOSUB BUILD.EMAIL.REPORT
            END

            IF NOT(NEW.SOC) THEN
               IF SEPARATE.REGIONS THEN
                  IF DUP.NOT.PAID#0 THEN
                     LINE=SPACE(14):'Duplicates Rejected       '
                     LINE:=-DUP.NOT.PAID'R26,#30'
                     GOSUB BUILD.EMAIL.REPORT
                  END
               END ELSE
                  IF DUP.NOT.PAID#0 OR Y.DUP.NOT.PAID#0 THEN
                     LINE=SPACE(14):'Duplicates Rejected       '
                     LINE:=-DUP.NOT.PAID'R26,#30':-Y.DUP.NOT.PAID'R26,#40'
                     GOSUB BUILD.EMAIL.REPORT
                  END
               END                       ; * IF SEPARATE.REGIONS
            END                          ; * IF NOT(NEW.SOC)

            IF SEPARATE.REGIONS THEN
               IF (C.OVER.VAR+C.BD.OVER.VAR)#0 THEN
                  LINE=SPACE(14):'Overcharges               '
                  LINE:=(C.OVER.VAR+C.BD.OVER.VAR)'R26,#30'
                  GOSUB BUILD.EMAIL.REPORT
                  HTML<-1>='<TR><TD COLSPAN="2">&nbsp;&nbsp;&nbsp;Overcharges</TD>'
                  HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':(C.OVER.VAR+C.BD.OVER.VAR)'R26,#30':'</TD>'
                  HTML<-1>='<TD COLSPAN="3"></TD></TR>'
               END
            END ELSE
               IF (C.OVER.VAR+C.BD.OVER.VAR)#0 OR (Y.OVER.VAR+Y.BD.OVER.VAR)#0 THEN
                  LINE=SPACE(14):'Overcharges               '
                  LINE:=(C.OVER.VAR+C.BD.OVER.VAR)'R26,#30':(Y.OVER.VAR+Y.BD.OVER.VAR)'R26,#40'
                  GOSUB BUILD.EMAIL.REPORT
                  HTML<-1>='<TR><TD COLSPAN="2">&nbsp;&nbsp;&nbsp;Overcharges</TD>'
                  HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':(C.OVER.VAR+C.BD.OVER.VAR)'R26,#30':'</TD>'
                  HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':(Y.OVER.VAR+Y.BD.OVER.VAR)'R26,#40':'</TD></TR>'
               END
            END                          ; * IF SEPARATE.REGIONS

            IF SEPARATE.REGIONS THEN
               IF (C.UPS.VAR+C.BD.UPS.VAR)#0 THEN
                  LINE=SPACE(14):'UPS Overcharges           '
                  LINE:=(C.UPS.VAR+C.BD.UPS.VAR)'R26,#30'
                  GOSUB BUILD.EMAIL.REPORT
                  HTML<-1>='<TR><TD COLSPAN="2">&nbsp;&nbsp;&nbsp;UPS Overcharges</TD>'
                  HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':(C.UPS.VAR+C.BD.UPS.VAR)'R26,#30':'</TD>'
                  HTML<-1>='<TD COLSPAN="3"></TD></TR>'
               END
            END ELSE
               IF (C.UPS.VAR+C.BD.UPS.VAR)+0#0 OR (Y.UPS.VAR+Y.BD.UPS.VAR)+0#0 THEN
                  LINE=SPACE(14):'UPS Overcharges           '
                  LINE:=(C.UPS.VAR+C.BD.UPS.VAR)'R26,#30':(Y.UPS.VAR+Y.BD.UPS.VAR)'R26,#40'
                  GOSUB BUILD.EMAIL.REPORT
                  HTML<-1>='<TR><TD COLSPAN="2">&nbsp;&nbsp;&nbsp;UPS Overcharges</TD>'
                  HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':(C.UPS.VAR+C.BD.UPS.VAR)'R26,#30':'</TD>'
                  HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':(Y.UPS.VAR+Y.BD.UPS.VAR)'R26,#40':'</TD></TR>'
               END
            END                          ; * IF SEPARATE.REGIONS

            IF SEPARATE.REGIONS THEN
               IF (C.DISC.VAR+C.BD.DISC.VAR)#0 THEN
                  LINE=SPACE(14):'Discounts                 '
                  LINE:=(C.DISC.VAR+C.BD.DISC.VAR)'R26,#30'
                  GOSUB BUILD.EMAIL.REPORT
                  HTML<-1>='<TR><TD COLSPAN="2">&nbsp;&nbsp;&nbsp;Discounts</TD>'
                  HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':(C.DISC.VAR+C.BD.DISC.VAR)'R26,#30':'</TD>'
                  HTML<-1>='<TD COLSPAN="3"></TD></TR>'
               END
            END ELSE
               IF (C.DISC.VAR+C.BD.DISC.VAR)#0 OR (Y.DISC.VAR+Y.BD.DISC.VAR)#0 THEN
                  LINE=SPACE(14):'Discounts                 '
                  LINE:=(C.DISC.VAR+C.BD.DISC.VAR)'R26,#30':(Y.DISC.VAR+Y.BD.DISC.VAR)'R26,#40'
                  GOSUB BUILD.EMAIL.REPORT
                  HTML<-1>='<TR><TD COLSPAN="2">&nbsp;&nbsp;&nbsp;Discounts</TD>'
                  HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':(C.DISC.VAR+C.BD.DISC.VAR)'R26,#30':'</TD>'
                  HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':(Y.DISC.VAR+Y.BD.DISC.VAR)'R26,#40':'</TD></TR>'
               END
            END                          ; * IF SEPARATE.REGIONS

* Print logistics detail

            IF VARS NE '' THEN
               LINE=SPACE(14):'Logistics'
               GOSUB BUILD.EMAIL.REPORT
               HTML<-1>='<TR><TD COLSPAN="2">&nbsp;&nbsp;&nbsp;Logistics</TD>'
               HTML<-1>='<TD COLSPAN="5"></TD></TR>'
               TIMES=DCOUNT(VARS<1>,CHAR(253))
               FOR I=1 TO TIMES
                  READV DESC FROM F.VARIANCE,VARS<1,I>,1 ELSE
                     IF VARIANCE='A' THEN
                        READV DESC FROM F.TRANSPORT,VARS<1,I>,1 ELSE DESC='Unknown'
                     END ELSE
                        DESC='Unknown'
                     END
                  END
                  CURR=0-VARS<2,I>
                  YTD=0-VARS<3,I>
                  IF SEPARATE.REGIONS THEN
                     IF CURR#0 THEN
                        LINE=SPACE(17):DESC'L#25':CURR'R26,#28'
                        GOSUB BUILD.EMAIL.REPORT
                        HTML<-1>='<TR><TD COLSPAN="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;':DESC'L#25':'</TD>'
                        HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':CURR'R26,#28':'</TD>'
                        HTML<-1>='<TD COLSPAN="3"></TD></TR>'
                     END
                  END ELSE
                     IF CURR#0 OR YTD#0 THEN
                        LINE=SPACE(17):DESC'L#25':CURR'R26,#28':YTD'R26,#40'
                        GOSUB BUILD.EMAIL.REPORT
                        HTML<-1>='<TR><TD COLSPAN="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;':DESC'L#25':'</TD>'
                        HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':CURR'R26,#28':'</TD>'
                        HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':YTD'R26,#40':'</TD></TR>'
                     END
                  END                    ; * IF SEPARATE.REGIONS
               NEXT I
            END ELSE
               IF SEPARATE.REGIONS THEN
                  IF (C.CONS.VAR+C.BD.CONS.VAR)#0 THEN
                     LINE=SPACE(14):'Logistics Management      '
                     LINE:=(C.CONS.VAR+C.BD.CONS.VAR)'R26,#30'
                     GOSUB BUILD.EMAIL.REPORT
                     HTML<-1>='<TR><TD COLSPAN="2">&nbsp;&nbsp;&nbsp;Logistics Management</TD>'
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':(C.CONS.VAR+C.BD.CONS.VAR)'R26,#30':'</TD>'
                     HTML<-1>='<TD COLSPAN="3"></TD></TR>'
                  END
               END ELSE
                  IF (C.CONS.VAR+C.BD.CONS.VAR)#0 OR (Y.CONS.VAR+Y.BD.CONS.VAR)#0 THEN
                     LINE=SPACE(14):'Logistics Management      '
                     LINE:=(C.CONS.VAR+C.BD.CONS.VAR)'R26,#30':(Y.CONS.VAR+Y.BD.CONS.VAR)'R26,#40'
                     GOSUB BUILD.EMAIL.REPORT
                     HTML<-1>='<TR><TD COLSPAN="2">&nbsp;&nbsp;&nbsp;Logistics Management</TD>'
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':(C.CONS.VAR+C.BD.CONS.VAR)'R26,#30':'</TD>'
                     HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':(Y.CONS.VAR+Y.BD.CONS.VAR)'R26,#40':'</TD></TR>'
                  END
               END                       ; * IF SEPARATE.REGIONS
            END                          ; * IF VARS NE ''

            IF SEPARATE.REGIONS THEN
               LINE=DASH.1.25SP.COLS
               GOSUB BUILD.EMAIL.REPORT
            END ELSE
               LINE=DASH.2.25SP.COLS
               GOSUB BUILD.EMAIL.REPORT
            END

            IF SEPARATE.REGIONS THEN
               HTML<-1>='<TR><TD COLSPAN="4" ALIGN="RIGHT">---------------</TD>'
               HTML<-1>='<TD COLSPAN="3"></TD></TR>'
            END ELSE
               HTML<-1>='<TR><TD COLSPAN="4" ALIGN="RIGHT">---------------</TD>'
               HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">---------------</TD></TR>'
            END

            IF COPIES.LOOP=1 THEN
               IF NEW.SOC THEN
                  SAVE=C.OVER.VAR+C.UPS.VAR+C.CONS.VAR+C.DISC.VAR
                  SAVE+=C.BD.OVER.VAR+C.BD.UPS.VAR+C.BD.DISC.VAR+C.BD.CONS.VAR

                  Y.SAVE=Y.OVER.VAR+Y.UPS.VAR+Y.CONS.VAR+Y.DISC.VAR
                  Y.SAVE+=Y.BD.OVER.VAR+Y.BD.UPS.VAR+Y.BD.DISC.VAR+Y.BD.CONS.VAR

               END ELSE
                  SAVE=C.OVER.VAR+C.UPS.VAR+C.CONS.VAR+C.DISC.VAR-DUP.NOT.PAID
                  SAVE+=C.BD.OVER.VAR+C.BD.UPS.VAR+C.BD.DISC.VAR+C.BD.CONS.VAR

                  Y.SAVE=Y.OVER.VAR+Y.UPS.VAR+Y.CONS.VAR+Y.DISC.VAR-Y.DUP.NOT.PAID
                  Y.SAVE+=Y.BD.OVER.VAR+Y.BD.UPS.VAR+Y.BD.DISC.VAR+Y.BD.CONS.VAR

               END                       ; * IF NEW.SOC
            END                          ; * IF COPIES.LOOP=1

            IF NEW.SOC THEN
               LINE=SPACE(11):'Total Non-Duplicate Savings  '
            END ELSE
               LINE=SPACE(11):'Total Savings                '
            END
            LINE:=SAVE'R26,#30'
            IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.SAVE'R26,#40'
            GOSUB BUILD.EMAIL.REPORT

            IF SEPARATE.REGIONS THEN
               HTML<-1>='<TR><TD COLSPAN="2">Total Non-Duplicate Savings</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':SAVE'R26,#30':'</TD>'
               HTML<-1>='<TD COLSPAN="3"></TD></TR>'
            END ELSE
               HTML<-1>='<TR><TD COLSPAN="2">Total Non-Duplicate Savings</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':SAVE'R26,#30':'</TD>'
               HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':Y.SAVE'R26,#40':'</TD></TR>'
            END

            IF SEPARATE.REGIONS THEN
               LINE=DASH.1.25SP.COLS
               GOSUB BUILD.EMAIL.REPORT
            END ELSE
               LINE=DASH.2.25SP.COLS
               GOSUB BUILD.EMAIL.REPORT
            END

            IF SEPARATE.REGIONS THEN
               HTML<-1>='<TR><TD COLSPAN="4" ALIGN="RIGHT">---------------</TD>'
               HTML<-1>='<TD COLSPAN="3"></TD></TR>'
            END ELSE
               HTML<-1>='<TR><TD COLSPAN="4" ALIGN="RIGHT">---------------</TD>'
               HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">---------------</TD></TR>'
            END

            IF NEW.SOC THEN
               FRT.PAID=BILLED+SAVE-DUP.NOT.PAID
               Y.FRT.PAID=Y.BILLED+Y.SAVE-Y.DUP.NOT.PAID
            END ELSE
               FRT.PAID=BILLED+SAVE
               Y.FRT.PAID=Y.BILLED+Y.SAVE
            END

            LINE=SPACE(11):'Freight Charges              '
            LINE:=FRT.PAID'R26,#30'
            IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.FRT.PAID'R26,#40'
            GOSUB BUILD.EMAIL.REPORT

            IF SEPARATE.REGIONS THEN
               HTML<-1>='<TR><TD COLSPAN="2">Freight Charges</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':FRT.PAID'R26,#30':'</TD>'
               HTML<-1>='<TD COLSPAN="3"></TD></TR>'
            END ELSE
               HTML<-1>='<TR><TD COLSPAN="2">Freight Charges</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':FRT.PAID'R26,#30':'</TD>'
               HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':Y.FRT.PAID'R26,#40':'</TD></TR>'
            END

            LINE=SPACE(57):'==============='
            IF NOT(SEPARATE.REGIONS) THEN LINE:=SPACE(25):'==============='
            GOSUB BUILD.EMAIL.REPORT

            IF SEPARATE.REGIONS THEN
               HTML<-1>='<TR><TD COLSPAN="4" ALIGN="RIGHT">========</TD>'
               HTML<-1>='<TD COLSPAN="3"></TD></TR>'
            END ELSE
               HTML<-1>='<TR><TD COLSPAN="4" ALIGN="RIGHT">========</TD>'
               HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">========</TD></TR>'
            END

            LINE=' '
            GOSUB BUILD.EMAIL.REPORT

            HTML<-1>='<TR><TD COLSPAN="7">&nbsp;</TD></TR>'

            IF COPIES.LOOP=1 THEN
               IF NEW.SOC THEN
                  Y.OUT.CHG.DUE=DFB.BILLS.YTD<20>+DFB.BILLS.YTD<68>    ; * new field
                  Y.IN.CHG.DUE=DFB.BILLS.YTD<21>+DFB.BILLS.YTD<67>     ; * new field
                  Y.THIRD.CHG.DUE=DFB.BILLS.YTD<62>+DFB.BILLS.YTD<69>  ; * new field
                  Y.TOTAL.COMMISSION=DFB.BILLS.YTD<67>+DFB.BILLS.YTD<68>+DFB.BILLS.YTD<69>

               END ELSE
                  Y.OUT.CHG.DUE=DFB.BILLS.YTD<20>
                  Y.IN.CHG.DUE=DFB.BILLS.YTD<21>
                  Y.THIRD.CHG.DUE=DFB.BILLS.YTD<62>
               END                       ; * IF NEW.SOC

               IF EXPENSE='Y' THEN
                  Y.EXP.OUT.CHG.DUE=0
                  Y.EXP.IN.CHG.DUE=0
                  Y.EXP.THIRD.CHG.DUE=0
                  TIMES=DCOUNT(EXPS<1>,CHAR(253))
                  FOR COUNT=1 TO TIMES
                     Y.EXP.OUT.CHG.DUE+=EXPS<2,COUNT>
                     Y.EXP.IN.CHG.DUE+=EXPS<3,COUNT>
                     Y.EXP.THIRD.CHG.DUE+=EXPS<4,COUNT>
                  NEXT COUNT
               END                       ; * IF EXPENSE='Y'
               IF REGION='Y' THEN
                  Y.REG.OUT.CHG.DUE=0
                  Y.REG.IN.CHG.DUE=0
                  Y.REG.THIRD.CHG.DUE=0
                  TIMES=DCOUNT(REGS<1>,CHAR(253))
                  FOR COUNT=1 TO TIMES
                     Y.REG.OUT.CHG.DUE+=REGS<2,COUNT>
                     Y.REG.IN.CHG.DUE+=REGS<3,COUNT>
                     Y.REG.THIRD.CHG.DUE+=REGS<4,COUNT>
                  NEXT COUNT
               END                       ; * IF REGION='Y'
            END                          ; * IF COPIES.LOOP=1

            DP.WORD='Due'                ; * JMK94
            IF NONF.CNT=NUM.BILLS THEN   ; * JMK94
               DP.WORD='Processed'       ; * JMK94
            END                          ; * JMK94
            LINE=SPACE(11):'Outbound Charges ':DP.WORD'L#12'
            IF REBATE.FLG THEN           ; * JMK88
               OUT.CHG.HOLD=OUT.CHG.DUE  ; * JMK88
               IN.CHG.HOLD=IN.CHG.DUE    ; * JMK88
               THIRD.CHG.HOLD=THIRD.CHG.DUE        ; * JMK88
               Y.OUT.CHG.HOLD=Y.OUT.CHG.DUE        ; * JMK88
               Y.IN.CHG.HOLD=Y.IN.CHG.DUE          ; * JMK88
               Y.THIRD.CHG.HOLD=Y.THIRD.CHG.DUE    ; * JMK88
               REBATE.OUT.AMT=(REBATE.INCR.OUT/NEW.PCT*OLD.PCT)'R0'    ; * JMK88
               REBATE.IN.AMT=(REBATE.INCR.IN/NEW.PCT*OLD.PCT)'R0'      ; * JMK88
               REBATE.THIRD.AMT=(REBATE.INCR.THIRD/NEW.PCT*OLD.PCT)'R0'          ; * JMK88
               OUT.CHG.DUE=REBATE.BASE.OUT+REBATE.OUT.AMT    ; * JMK88
               IN.CHG.DUE=REBATE.BASE.IN+REBATE.IN.AMT       ; * JMK88
               THIRD.CHG.DUE=REBATE.BASE.THIRD+REBATE.THIRD.AMT        ; * JMK88
               Y.REBATE.OUT.AMT=(DFB.BILLS.YTD<68>/NEW.PCT*OLD.PCT)'R0'          ; * JMK88
               Y.REBATE.IN.AMT=(DFB.BILLS.YTD<67>/NEW.PCT*OLD.PCT)'R0'           ; * JMK88
               Y.REBATE.THIRD.AMT=(DFB.BILLS.YTD<69>/NEW.PCT*OLD.PCT)'R0'        ; * JMK88
               Y.OUT.CHG.DUE=DFB.BILLS.YTD<20>+Y.REBATE.OUT.AMT        ; * JMK88
               Y.IN.CHG.DUE=DFB.BILLS.YTD<21>+Y.REBATE.IN.AMT          ; * JMK88
               Y.THIRD.CHG.DUE=DFB.BILLS.YTD<62>+Y.REBATE.THIRD.AMT    ; * JMK88
            END                          ; * JMK88
            LINE:=OUT.CHG.DUE'R26,#30'
            IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.OUT.CHG.DUE'R26,#40'
            GOSUB BUILD.EMAIL.REPORT

            IF SEPARATE.REGIONS THEN
               HTML<-1>='<TR><TD COLSPAN="2">Outbound Charges ':DP.WORD'L#12':'</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':OUT.CHG.DUE'R26,#30':'</TD>'
               HTML<-1>='<TD COLSPAN="3"></TD></TR>'
            END ELSE
               HTML<-1>='<TR><TD COLSPAN="2">Outbound Charges ':DP.WORD'L#12':'</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':OUT.CHG.DUE'R26,#30':'</TD>'
               HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':Y.OUT.CHG.DUE'R26,#40':'</TD></TR>'
            END

            LINE=SPACE(11):'Inbound Charges ':DP.WORD'L#13'
            LINE:=IN.CHG.DUE'R26,#30'
            IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.IN.CHG.DUE'R26,#40'
            GOSUB BUILD.EMAIL.REPORT

            IF SEPARATE.REGIONS THEN
               HTML<-1>='<TR><TD COLSPAN="2">Inbound Charges ':DP.WORD'L#13':'</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':IN.CHG.DUE'R26,#30':'</TD>'
               HTML<-1>='<TD COLSPAN="3"></TD></TR>'
            END ELSE
               HTML<-1>='<TR><TD COLSPAN="2">Inbound Charges ':DP.WORD'L#13':'</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':IN.CHG.DUE'R26,#30':'</TD>'
               HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':Y.IN.CHG.DUE'R26,#40':'</TD></TR>'
            END

            LINE=SPACE(11):'Third Party Charges ':DP.WORD'L#12'
            LINE:=THIRD.CHG.DUE'R26,#27'
            IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.THIRD.CHG.DUE'R26,#40'
            GOSUB BUILD.EMAIL.REPORT

            IF SEPARATE.REGIONS THEN
               HTML<-1>='<TR><TD COLSPAN="2">Third Party Charges ':DP.WORD'L#12':'</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':THIRD.CHG.DUE'R26,#27':'</TD>'
               HTML<-1>='<TD COLSPAN="3"></TD></TR>'
            END ELSE
               HTML<-1>='<TR><TD COLSPAN="2">Third Party Charges ':DP.WORD'L#12':'</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':THIRD.CHG.DUE'R26,#27':'</TD>'
               HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':Y.THIRD.CHG.DUE'R26,#40':'</TD></TR>'
            END

            IF SEPARATE.REGIONS THEN
               LINE=DASH.1.25SP.COLS
               GOSUB BUILD.EMAIL.REPORT
            END ELSE
               LINE=DASH.2.25SP.COLS
               GOSUB BUILD.EMAIL.REPORT
            END

            IF SEPARATE.REGIONS THEN
               HTML<-1>='<TR><TD COLSPAN="4" ALIGN="RIGHT">---------------</TD>'
               HTML<-1>='<TD COLSPAN="3"></TD></TR>'
            END ELSE
               HTML<-1>='<TR><TD COLSPAN="4" ALIGN="RIGHT">---------------</TD>'
               HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">---------------</TD></TR>'
            END
            IF REBATE.FLG THEN           ; * JMK88
               FCD.RB=OUT.CHG.DUE+IN.CHG.DUE+THIRD.CHG.DUE   ; * JMK88
               FCD.Y.RB=Y.OUT.CHG.DUE+Y.IN.CHG.DUE+Y.THIRD.CHG.DUE     ; * JMK88
               OUT.CHG.RB=OUT.CHG.DUE    ; * JMK88
               IN.CHG.RB=IN.CHG.DUE      ; * JMK88
               THIRD.CHG.RB=THIRD.CHG.DUE          ; * JMK88
               Y.OUT.CHG.RB=Y.OUT.CHG.DUE          ; * JMK88
               Y.IN.CHG.RB=Y.IN.CHG.DUE  ; * JMK88
               Y.THIRD.CHG.RB=Y.THIRD.CHG.DUE      ; * JMK88
               OUT.CHG.DUE=OUT.CHG.HOLD  ; * JMK88
               IN.CHG.DUE=IN.CHG.HOLD    ; * JMK88
               THIRD.CHG.DUE=THIRD.CHG.HOLD        ; * JMK88
               Y.OUT.CHG.DUE=Y.OUT.CHG.HOLD        ; * JMK88
               Y.IN.CHG.DUE=Y.IN.CHG.HOLD          ; * JMK88
               Y.THIRD.CHG.DUE=Y.THIRD.CHG.HOLD    ; * JMK88
            END                          ; * JMK88

            FCD=OUT.CHG.DUE+IN.CHG.DUE+THIRD.CHG.DUE
            FCD.Y=Y.OUT.CHG.DUE+Y.IN.CHG.DUE+Y.THIRD.CHG.DUE
            IF NEW.SOC THEN
               IF (FRT.PAID+TOTAL.COMMISSION#FCD) OR (Y.FRT.PAID+Y.TOTAL.COMMISSION#FCD.Y) THEN
                  CALL ELINE("Frt Chrg ":(FRT.PAID+TOTAL.COMMISSION)'R#10':" ":FCD'R#10':" or YTD Frt Chrg ":(Y.FRT.PAID+Y.TOTAL.COMMISSION)'R#11':" ":FCD.Y'R#11':" do not match.")
                  LINE='*******************************************************************************'
                  GOSUB BUILD.EMAIL.REPORT
                  LINE='*                                                                             *'
                  GOSUB BUILD.EMAIL.REPORT
                  LINE='*          ERROR Freight Charges do not equal Freight Charges Total Due       *'
                  GOSUB BUILD.EMAIL.REPORT
                  LINE='*                                                                             *'
                  GOSUB BUILD.EMAIL.REPORT
                  LINE='*******************************************************************************'
                  GOSUB BUILD.EMAIL.REPORT
                  IF COPIES.LOOP=1 THEN
                     SUBJ='Freight Charges Do Not Match Freight Charges Total Due'
                     TEXT=USER:' ran the new SOC report which contained freight charges'
                     TEXT<1,-1>=(FRT.PAID+TOTAL.COMMISSION)'R#10':' not equal to ':FCD'R#10'
                     TEXT<1,-1>='or YTD freight charges'
                     TEXT<1,-1>=(Y.FRT.PAID+Y.TOTAL.COMMISSION)'R#11':' not equal to ':FCD.Y'R#11'

                     TEXT<1,-1>='for client ':CLIENT:' ':CLIENT.NAME:'.'         ; * JMK17
                     MVIN=''
                     MVIN<1>='DFriend@afs.net'

                     MVIN<4>='AFS'
                     MVIN<5>=SUBJ
                     MVIN<6>=TEXT
                     MVIN<8>='PRIO'
                     IF CLIENT = "30032" THEN MVIN<8,-1> = "NODEL"     ; * NPR12
                     CALL SENDMAIL(MVIN,MVOUT)
                     NO.EMAIL=1
                     EMAIL.ERRORS<-1>=TEXT<1>
                  END                    ; * IF COPIES.LOOP=1
               END                       ; * IF (FRT.PAID+TOTAL.COMMISSION#FCD) OR (Y.FRT.PAID+Y.TOTAL.COMMISSION#FCD.Y)
            END ELSE
               IF (FRT.PAID#FCD) OR (Y.FRT.PAID#FCD.Y) THEN
                  CALL ELINE("Frt Chrg ":FRT.PAID'R#10':" ":FCD'R#10':" or YTD Frt Chrg ":Y.FRT.PAID'R#11':" ":FCD.Y'R#11':" do not match.")
                  LINE='*******************************************************************************'
                  GOSUB BUILD.EMAIL.REPORT
                  LINE='*                                                                             *'
                  GOSUB BUILD.EMAIL.REPORT
                  LINE='*          ERROR Freight Charges do not equal Freight Charges Subtotal        *'
                  GOSUB BUILD.EMAIL.REPORT
                  LINE='*                                                                             *'
                  GOSUB BUILD.EMAIL.REPORT
                  LINE='*******************************************************************************'
                  GOSUB BUILD.EMAIL.REPORT
                  IF COPIES.LOOP=1 THEN
                     SUBJ='Freight Charges Do Not Match Freight Charges Subtotal'
                     TEXT=USER:' ran the old SOC report which contained freight charges'
                     TEXT<1,-1>=FRT.PAID'R#10':' not equal to ':FCD'R#10'
                     TEXT<1,-1>='or YTD freight charges'
                     TEXT<1,-1>=Y.FRT.PAID'R#11':' not equal to ':FCD.Y'R#11'

                     TEXT<1,-1>='for client ':CLIENT:' ':CLIENT.NAME:'.'         ; * JMK17
                     MVIN=''
                     MVIN<1>='DFriend@afs.net'

                     MVIN<4>='AFS'
                     MVIN<5>=SUBJ
                     MVIN<6>=TEXT
                     MVIN<8>='PRIO'
                     IF CLIENT = "30032" THEN MVIN<8,-1> = "NODEL"     ; * NPR12
                     CALL SENDMAIL(MVIN,MVOUT)
                     NO.EMAIL=1
                     EMAIL.ERRORS<-1>=TEXT<1>
                  END                    ; * IF COPIES.LOOP=1
               END                       ; * IF (FRT.PAID#FCD) OR (Y.FRT.PAID#FCD.Y)
            END                          ; * IF NEW.SOC
            IF NEW.SOC THEN
               LINE=SPACE(11):"Freight Charges Total Due    "
            END ELSE
               LINE=SPACE(11):"Freight Charges Subtotal     "
            END
            IF REBATE.FLG THEN           ; * JMK88
               LINE:=FCD.RB'R26,#30'     ; * JMK88
               IF NOT(SEPARATE.REGIONS) THEN LINE:=FCD.Y.RB'R26,#40'   ; * JMK88
            END ELSE                     ; * JMK88
               LINE:=FCD'R26,#30'
               IF NOT(SEPARATE.REGIONS) THEN LINE:=FCD.Y'R26,#40'
            END                          ; * JMK88
            GOSUB BUILD.EMAIL.REPORT

*DFIF USER='DAVID' THEN CALL ELINE('PRESS BREAK')
            IF SEPARATE.REGIONS THEN
               HTML<-1>='<TR><TD COLSPAN="2">Freight Charges Total Due</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':FCD'R26,#30':'</TD>'
               HTML<-1>='<TD COLSPAN="3"></TD></TR>'
            END ELSE
               HTML<-1>='<TR><TD COLSPAN="2">Freight Charges Total Due</TD>'
               IF REBATE.FLG THEN        ; * JMK88
                  HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':FCD.RB'R26,#30':'</TD>'        ; * JMK88
                  HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':FCD.Y.RB'R26,#40':'</TD></TR>'           ; * JMK88
               END ELSE                  ; * JMK88
                  HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':FCD'R26,#30':'</TD>'
                  HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':FCD.Y'R26,#40':'</TD></TR>'
               END                       ; * JMK88
            END

            IF NEW.SOC THEN
               LINE=' '
               GOSUB BUILD.EMAIL.REPORT
            END

            HTML<-1>='<TR><TD COLSPAN="7">&nbsp;</TD></TR>'

            IF COPIES.LOOP=1 AND CHECK.AR.BRIDGE THEN
               AR.FCD.LIST=''            ; * JMK153
               AR.FCD.LIST<-1>='1'       ; * JMK153
               AR.FCD.LIST<-1>='21'      ; * JMK153
               AR.FCD.LIST<-1>='22'      ; * JMK153
               AR.FCD.LIST<-1>='201'     ; * JMK153
               AR.FCD.LIST<-1>='221'     ; * JMK153
               AR.FCD.LIST<-1>='222'     ; * JMK153
               AR.FCD.LIST<-1>='1001'    ; * JMK153
               AR.FCD.LIST<-1>='1021'    ; * JMK153
               AR.FCD.LIST<-1>='1022'    ; * JMK153
               AR.FCD.LIST<-1>='1201'    ; * JMK153
               AR.FCD.LIST<-1>='1221'    ; * JMK153
               AR.FCD.LIST<-1>='1222'    ; * JMK153
               AR.FCD.LIST<-1>='3001'    ; * JMK153
               AR.FCD.LIST<-1>='3021'    ; * JMK153
               AR.FCD.LIST<-1>='3022'    ; * JMK153
               AR.FCD.LIST<-1>='3201'    ; * JMK153
               AR.FCD.LIST<-1>='3221'    ; * JMK153
               AR.FCD.LIST<-1>='3222'    ; * JMK153
               AR.FCD.LIST<-1>='6001'    ; * JMK153
               AR.FCD.LIST<-1>='6021'    ; * JMK153
               AR.FCD.LIST<-1>='6022'    ; * JMK153
               AR.FCD.LIST<-1>='6201'    ; * JMK153
               AR.FCD.LIST<-1>='6221'    ; * JMK153
               AR.FCD.LIST<-1>='6222'    ; * JMK153
               AR.FCD.LIST<-1>='7001'    ; * JMK153
               AR.FCD.LIST<-1>='7021'    ; * JMK153
               AR.FCD.LIST<-1>='7022'    ; * JMK153
               AR.FCD.LIST<-1>='7201'    ; * JMK153
               AR.FCD.LIST<-1>='7221'    ; * JMK153
               AR.FCD.LIST<-1>='7222'    ; * JMK153
               AR.FCD=0
               NAR.FCD.ATT=DCOUNT(AR.FCD.LIST,@AM)
               FOR AR.FCD.ATT=1 TO NAR.FCD.ATT
                  AR.FCD.CODE=AR.FCD.LIST<AR.FCD.ATT>
                  LOCATE AR.FCD.CODE IN D.BRIDGE<1> SETTING AR.POS THEN
                     AR.FCD+=D.BRIDGE<3,AR.POS>
                  END
                  LOCATE AR.FCD.CODE IN PCL.SLS.ARRAY<1> SETTING PCL.AR.POS THEN
                     AR.FCD-=PCL.SLS.ARRAY<2,PCL.AR.POS>
                  END
               NEXT AR.FCD.ATT
               IF NEW.SOC THEN
*                 IF AR.FCD#FRT.PAID THEN BRIDGE.SUMMARY.MATCH=0
                  IF AR.FCD#FRT.PAID-NONF.AMT THEN BRIDGE.SUMMARY.MATCH=0 ; IF USER='MKERBOW' THEN DEBUG       ; * JMK94
               END ELSE
                  IF AR.FCD#FCD THEN BRIDGE.SUMMARY.MATCH=0 ; IF USER='MKERBOW' THEN DEBUG
               END
            END                          ; * IF COPIES.LOOP=1 AND CHECK.AR.BRIDGE

* Calculate commissions

            Y.DISC.COM=DFB.BILLS.YTD<28>
            Y.OVER.COM=DFB.BILLS.YTD<29>
            Y.UPS.COM=DFB.BILLS.YTD<54>
            Y.CONS.COM=DFB.BILLS.YTD<30>
            Y.MGMT.FEE=DFB.BILLS.YTD<74>           ; * JMK07

* Display commissions, if there are any
            COMMISSION.LINE=0

* Display Overcharge Commission
            IF SEPARATE.REGIONS THEN
               IF C.OVER.COM#0 THEN
                  COMMISSION.LINE=1
                  IF NOT(NEW.SOC) THEN
                     LINE=SPACE(11):"Overcharge Commission        "
                     LINE:=C.OVER.COM'R26,#30'
                     GOSUB BUILD.EMAIL.REPORT
                  END
               END
            END ELSE
               IF C.OVER.COM#0 OR Y.OVER.COM#0 THEN
                  COMMISSION.LINE=1
                  IF NOT(NEW.SOC) THEN
                     LINE=SPACE(11):"Overcharge Commission        "
                     LINE:=C.OVER.COM'R26,#30':Y.OVER.COM'R26,#40'
                     GOSUB BUILD.EMAIL.REPORT
                  END                    ; * IF NOT(NEW.SOC)
                  IF COPIES.LOOP=1 AND CHECK.AR.BRIDGE AND C.OVER.COM NE 0 THEN
                     AR.OVER.LIST=''     ; * JMK153
                     AR.OVER.LIST<-1>='30'
                     AR.OVER.LIST<-1>='31'
                     AR.OVER.LIST<-1>='34'
                     AR.OVER.LIST<-1>='35'
                     AR.OVER.LIST<-1>='36'
                     AR.OVER.LIST<-1>='37'
                     AR.OVER.LIST<-1>='1030'
                     AR.OVER.LIST<-1>='1031'
                     AR.OVER.LIST<-1>='1034'
                     AR.OVER.LIST<-1>='1035'
                     AR.OVER.LIST<-1>='1036'
                     AR.OVER.LIST<-1>='1037'
                     AR.OVER.LIST<-1>='3030'
                     AR.OVER.LIST<-1>='3031'
                     AR.OVER.LIST<-1>='3034'
                     AR.OVER.LIST<-1>='3035'
                     AR.OVER.LIST<-1>='3036'
                     AR.OVER.LIST<-1>='3037'
                     AR.OVER.LIST<-1>='6030'
                     AR.OVER.LIST<-1>='6031'
                     AR.OVER.LIST<-1>='6034'
                     AR.OVER.LIST<-1>='6035'
                     AR.OVER.LIST<-1>='6036'
                     AR.OVER.LIST<-1>='6037'
                     AR.OVER.LIST<-1>='7030'
                     AR.OVER.LIST<-1>='7031'
                     AR.OVER.LIST<-1>='7034'
                     AR.OVER.LIST<-1>='7035'
                     AR.OVER.LIST<-1>='7036'
                     AR.OVER.LIST<-1>='7037'
                     AR.OVER.COM=0
                     NAR.OVER.ATT=DCOUNT(AR.OVER.LIST,@AM)
                     FOR AR.OVER.ATT=1 TO NAR.OVER.ATT
                        AR.OVER.CODE=AR.OVER.LIST<AR.OVER.ATT>
                        LOCATE AR.OVER.CODE IN D.BRIDGE<1> SETTING AR.POS THEN
                           AR.OVER.COM+=D.BRIDGE<3,AR.POS>
                        END
                        LOCATE AR.OVER.CODE IN PCL.SLS.ARRAY<1> SETTING PCL.AR.POS THEN
                           AR.OVER.COM-=PCL.SLS.ARRAY<2,PCL.AR.POS>
                        END
                     NEXT AR.OVER.ATT
                     IF C.OVER.COM#AR.OVER.COM THEN BRIDGE.SUMMARY.MATCH=0 ; IF USER='MKERBOW' THEN DEBUG
                  END                    ; * IF COPIES.LOOP=1 AND CHECK.AR.BRIDGE AND C.OVER.COM NE 0
               END                       ; * IF C.OVER.COM#0 OR Y.OVER.COM#0
            END                          ; * IF SEPARATE.REGIONS

* Display UPS Overcharge Commission
            IF SEPARATE.REGIONS THEN
               IF C.UPS.COM#0 THEN
                  COMMISSION.LINE=1
                  IF NOT(NEW.SOC) THEN
                     LINE=SPACE(11):"UPS Overcharge Commission    "
                     LINE:=C.UPS.COM'R26,#30'
                     GOSUB BUILD.EMAIL.REPORT
                  END                    ; * IF NOT(NEW.SOC)
               END                       ; * IF C.UPS.COM#0
            END ELSE
               IF C.UPS.COM+0#0 OR Y.UPS.COM+0#0 THEN
                  COMMISSION.LINE=1
                  IF NOT(NEW.SOC) THEN
                     LINE=SPACE(11):"UPS Overcharge Commission    "
                     LINE:=C.UPS.COM'R26,#30':Y.UPS.COM'R26,#40'
                     GOSUB BUILD.EMAIL.REPORT
                  END                    ; * IF NOT(NEW.SOC)
                  IF COPIES.LOOP=1 AND CHECK.AR.BRIDGE AND C.UPS.COM NE 0 THEN
                     AR.UPS.COM.LIST=''
                     AR.UPS.COM.LIST<-1>='32'
                     AR.UPS.COM.LIST<-1>='33'
                     AR.UPS.COM.LIST<-1>='1032'
                     AR.UPS.COM.LIST<-1>='1033'
                     AR.UPS.COM.LIST<-1>='3032'
                     AR.UPS.COM.LIST<-1>='3033'
                     AR.UPS.COM.LIST<-1>='6032'
                     AR.UPS.COM.LIST<-1>='6033'
                     AR.UPS.COM.LIST<-1>='7032'
                     AR.UPS.COM.LIST<-1>='7033'
                     AR.UPS.COM=0
                     NAR.UPS.COM.ATT=DCOUNT(AR.UPS.COM.LIST,@AM)
                     FOR AR.UPS.COM.ATT=1 TO NAR.UPS.COM.ATT
                        AR.UPS.COM.CODE=AR.UPS.COM.LIST<AR.UPS.COM.ATT>
                        LOCATE AR.UPS.COM.CODE IN D.BRIDGE<1> SETTING AR.POS THEN
                           AR.UPS.COM+=D.BRIDGE<3,AR.POS>
                        END
                        LOCATE AR.UPS.COM.CODE IN PCL.SLS.ARRAY<1> SETTING PCL.AR.POS THEN
                           AR.UPS.COM-=PCL.SLS.ARRAY<2,PCL.AR.POS>
                        END
                     NEXT AR.UPS.COM.ATT
                     IF C.UPS.COM#AR.UPS.COM THEN BRIDGE.SUMMARY.MATCH=0 ; IF USER='MKERBOW' THEN DEBUG
                  END                    ; * IF COPIES.LOOP=1 AND CHECK.AR.BRIDGE AND C.UPS.COM NE 0
               END                       ; * IF C.UPS.COM+0#0 OR Y.UPS.COM+0#0
            END                          ; * IF SEPARATE.REGIONS

* Display Logistics Commission
            IF SEPARATE.REGIONS THEN
               IF C.CONS.COM#0 THEN
                  COMMISSION.LINE=1
                  IF NOT(NEW.SOC) THEN
                     LINE=SPACE(11):"Logistics Commission         "
                     LINE:=C.CONS.COM'R26,#30'
                     GOSUB BUILD.EMAIL.REPORT
                  END                    ; * IF NOT(NEW.SOC)
               END                       ; * IF C.CONS.COM#0
            END ELSE
               IF C.CONS.COM#0 OR Y.CONS.COM#0 THEN
                  COMMISSION.LINE=1
                  IF NOT(NEW.SOC) THEN
                     LINE=SPACE(11):"Logistics Commission         "
                     LINE:=C.CONS.COM'R26,#30':Y.CONS.COM'R26,#40'
                     GOSUB BUILD.EMAIL.REPORT
                  END                    ; * IF NOT(NEW.SOC)
                  IF COPIES.LOOP=1 AND CHECK.AR.BRIDGE AND C.CONS.COM NE 0 THEN
                     AR.CONS.LIST=''
                     AR.CONS.LIST<-1>='50'
                     AR.CONS.LIST<-1>='51'
                     AR.CONS.LIST<-1>='52'
                     AR.CONS.LIST<-1>='53'
                     AR.CONS.LIST<-1>='54'
                     AR.CONS.LIST<-1>='55'
                     AR.CONS.LIST<-1>='56'
                     AR.CONS.LIST<-1>='57'
                     AR.CONS.LIST<-1>='58'
                     AR.CONS.LIST<-1>='59'
                     AR.CONS.LIST<-1>='60'
                     AR.CONS.LIST<-1>='61'
                     AR.CONS.LIST<-1>='62'
                     AR.CONS.LIST<-1>='63'
                     AR.CONS.LIST<-1>='1050'
                     AR.CONS.LIST<-1>='1051'
                     AR.CONS.LIST<-1>='1052'
                     AR.CONS.LIST<-1>='1053'
                     AR.CONS.LIST<-1>='1054'
                     AR.CONS.LIST<-1>='1055'
                     AR.CONS.LIST<-1>='1056'
                     AR.CONS.LIST<-1>='1057'
                     AR.CONS.LIST<-1>='1058'
                     AR.CONS.LIST<-1>='1059'
                     AR.CONS.LIST<-1>='1060'
                     AR.CONS.LIST<-1>='1061'
                     AR.CONS.LIST<-1>='1062'
                     AR.CONS.LIST<-1>='1063'
                     AR.CONS.LIST<-1>='3050'
                     AR.CONS.LIST<-1>='3051'
                     AR.CONS.LIST<-1>='3052'
                     AR.CONS.LIST<-1>='3053'
                     AR.CONS.LIST<-1>='3054'
                     AR.CONS.LIST<-1>='3055'
                     AR.CONS.LIST<-1>='3056'
                     AR.CONS.LIST<-1>='3057'
                     AR.CONS.LIST<-1>='3058'
                     AR.CONS.LIST<-1>='3059'
                     AR.CONS.LIST<-1>='3060'
                     AR.CONS.LIST<-1>='3061'
                     AR.CONS.LIST<-1>='3062'
                     AR.CONS.LIST<-1>='3063'
                     AR.CONS.LIST<-1>='6050'
                     AR.CONS.LIST<-1>='6051'
                     AR.CONS.LIST<-1>='6052'
                     AR.CONS.LIST<-1>='6053'
                     AR.CONS.LIST<-1>='6054'
                     AR.CONS.LIST<-1>='6055'
                     AR.CONS.LIST<-1>='6056'
                     AR.CONS.LIST<-1>='6057'
                     AR.CONS.LIST<-1>='6058'
                     AR.CONS.LIST<-1>='6059'
                     AR.CONS.LIST<-1>='6060'
                     AR.CONS.LIST<-1>='6061'
                     AR.CONS.LIST<-1>='6062'
                     AR.CONS.LIST<-1>='6063'
                     AR.CONS.LIST<-1>='7050'
                     AR.CONS.LIST<-1>='7051'
                     AR.CONS.LIST<-1>='7052'
                     AR.CONS.LIST<-1>='7053'
                     AR.CONS.LIST<-1>='7054'
                     AR.CONS.LIST<-1>='7055'
                     AR.CONS.LIST<-1>='7056'
                     AR.CONS.LIST<-1>='7057'
                     AR.CONS.LIST<-1>='7058'
                     AR.CONS.LIST<-1>='7059'
                     AR.CONS.LIST<-1>='7060'
                     AR.CONS.LIST<-1>='7061'
                     AR.CONS.LIST<-1>='7062'
                     AR.CONS.LIST<-1>='7063'
                     AR.CONS.COM=0
                     NAR.CONS.ATT=DCOUNT(AR.CONS.LIST,@AM)
                     FOR AR.CONS.ATT=1 TO NAR.CONS.ATT
                        AR.CONS.CODE=AR.CONS.LIST<AR.CONS.ATT>
                        LOCATE AR.CONS.CODE IN D.BRIDGE<1> SETTING AR.POS THEN
                           AR.CONS.COM+=D.BRIDGE<3,AR.POS>
                        END
                        LOCATE AR.CONS.CODE IN PCL.SLS.ARRAY<1> SETTING PCL.AR.POS THEN
                           AR.CONS.COM-=PCL.SLS.ARRAY<2,PCL.AR.POS>
                        END
                     NEXT AR.CONS.ATT
                     IF C.CONS.COM#AR.CONS.COM THEN BRIDGE.SUMMARY.MATCH=0 ; IF USER='MKERBOW' THEN DEBUG
                  END                    ; * IF COPIES.LOOP=1 AND CHECK.AR.BRIDGE AND C.CONS.COM NE 0
               END                       ; * IF C.CONS.COM#0 OR Y.CONS.COM#0
            END                          ; * IF SEPARATE.REGIONS

* Display Discount Commission
            IF SEPARATE.REGIONS THEN
               IF C.DISC.COM#0 THEN
                  COMMISSION.LINE=1
                  IF NOT(NEW.SOC) THEN
                     LINE=SPACE(11):"Discount Commission          "
                     LINE:=C.DISC.COM'R26,#30'
                     GOSUB BUILD.EMAIL.REPORT
                  END                    ; * IF NOT(NEW.SOC)
               END                       ; * IF C.DISC.COM#0
            END ELSE
               IF C.DISC.COM#0 OR Y.DISC.COM#0 THEN
                  COMMISSION.LINE=1
                  IF NOT(NEW.SOC) THEN
                     LINE=SPACE(11):"Discount Commission          "
                     LINE:=C.DISC.COM'R26,#30':Y.DISC.COM'R26,#40'
                     GOSUB BUILD.EMAIL.REPORT
                  END                    ; * IF NOT(NEW.SOC)
                  IF COPIES.LOOP=1 AND CHECK.AR.BRIDGE AND C.DISC.COM NE 0 THEN
                     AR.DISC.LIST=''
                     AR.DISC.LIST<-1>='6'
                     AR.DISC.LIST<-1>='1006'
                     AR.DISC.LIST<-1>='3006'
                     AR.DISC.LIST<-1>='6006'
                     AR.DISC.LIST<-1>='7006'
                     AR.DISC.COM=0
                     NAR.DISC.ATT=DCOUNT(AR.DISC.LIST,@AM)
                     FOR AR.DISC.ATT=1 TO NAR.DISC.ATT
                        AR.DISC.CODE=AR.DISC.LIST<AR.DISC.ATT>
                        LOCATE AR.DISC.CODE IN D.BRIDGE<1> SETTING AR.POS THEN
                           AR.DISC.COM+=D.BRIDGE<3,AR.POS>
                        END
                        LOCATE AR.DISC.CODE IN PCL.SLS.ARRAY<1> SETTING PCL.AR.POS THEN
                           AR.DISC.COM-=PCL.SLS.ARRAY<2,PCL.AR.POS>
                        END
                     NEXT AR.DISC.ATT
                     IF C.DISC.COM#AR.DISC.COM THEN BRIDGE.SUMMARY.MATCH=0 ; IF USER='MKERBOW' THEN DEBUG
                  END                    ; * IF COPIES.LOOP=1 AND CHECK.AR.BRIDGE AND C.DISC.COM NE 0
               END                       ; * IF C.DISC.COM#0 OR Y.DISC.COM#0
            END                          ; * IF SEPARATE.REGIONS

            IF COMMISSION.LINE THEN
               IF NEW.SOC THEN
                  SUB.TOTAL=FCD
                  Y.SUB.TOTAL=FCD.Y
               END ELSE
                  IF SEPARATE.REGIONS THEN
                     LINE=DASH.1.25SP.COLS
                     GOSUB BUILD.EMAIL.REPORT
                  END ELSE
                     LINE=DASH.2.25SP.COLS
                     GOSUB BUILD.EMAIL.REPORT
                  END                    ; * IF SEPARATE.REGIONS
                  SUB.TOTAL=C.OVER.COM+C.UPS.COM+C.CONS.COM+C.DISC.COM+FCD
                  Y.SUB.TOTAL=Y.OVER.COM+Y.UPS.COM+Y.CONS.COM+Y.DISC.COM+FCD.Y
                  IF SEPARATE.REGIONS THEN
                     LINE=SPACE(11):"Freight Charges Total        "
                     LINE:=SUB.TOTAL'R26,#30'
                     GOSUB BUILD.EMAIL.REPORT
                  END ELSE
                     LINE=SPACE(11):"Freight Charges Total        "
                     LINE:=SUB.TOTAL'R26,#30':Y.SUB.TOTAL'R26,#40'
                     GOSUB BUILD.EMAIL.REPORT
                  END                    ; * IF SEPARATE.REGIONS
               END                       ; * IF NEW.SOC

               REG.DONT.MATCH=0
               Y.REG.DONT.MATCH=0
               IF REGION='Y' AND REGIONAL.ID='ALL' THEN
                  REG.MATCH.TOTAL=REG.OUT.CHG.DUE+REG.IN.CHG.DUE+REG.THIRD.CHG.DUE
                  Y.REG.MATCH.TOTAL=Y.REG.OUT.CHG.DUE+Y.REG.IN.CHG.DUE+Y.REG.THIRD.CHG.DUE
                  IF SUB.TOTAL#REG.MATCH.TOTAL THEN
                     REG.DONT.MATCH=1
                  END
                  IF Y.SUB.TOTAL#Y.REG.MATCH.TOTAL THEN
                     Y.REG.DONT.MATCH=1
                  END
               END                       ; * IF REGION='Y' AND REGIONAL.ID='ALL'
               EXP.DONT.MATCH=0
               Y.EXP.DONT.MATCH=0
               IF EXPENSE='Y' THEN
                  EXP.MATCH.TOTAL=EXP.OUT.CHG.DUE+EXP.IN.CHG.DUE+EXP.THIRD.CHG.DUE
                  Y.EXP.MATCH.TOTAL=Y.EXP.OUT.CHG.DUE+Y.EXP.IN.CHG.DUE+Y.EXP.THIRD.CHG.DUE
                  IF SUB.TOTAL#EXP.MATCH.TOTAL THEN
                     EXP.DONT.MATCH=1
                  END
                  IF Y.SUB.TOTAL#Y.EXP.MATCH.TOTAL THEN
                     Y.EXP.DONT.MATCH=1
                  END
               END                       ; * IF EXPENSE='Y'
               ERR.ARRAY=''
               IF FROM.PROCESS THEN
                  IF REG.DONT.MATCH OR Y.REG.DONT.MATCH OR EXP.DONT.MATCH OR Y.EXP.DONT.MATCH THEN
                     IF REG.DONT.MATCH AND COPIES.LOOP=1 THEN
                        ERR.MSG='Current region does not match ':SUB.TOTAL'R26#9':' ':REG.MATCH.TOTAL'R26#9'
                        ERR.ARRAY<-1>=ERR.MSG
                        CALL ELINE(ERR.MSG)
                     END
                     IF Y.REG.DONT.MATCH AND COPIES.LOOP=1 THEN
                        ERR.MSG='Yearly region does not match ':Y.SUB.TOTAL'R26#9':' ':Y.REG.MATCH.TOTAL'R26#9'
                        CALL ELINE(ERR.MSG)
                        ERR.ARRAY<-1>=ERR.MSG
                     END
                     IF EXP.DONT.MATCH AND COPIES.LOOP=1 THEN
                        ERR.MSG='Current expense does not match ':SUB.TOTAL'R26#9':' ':EXP.MATCH.TOTAL'R26#9'
                        CALL ELINE(ERR.MSG)
                        ERR.ARRAY<-1>=ERR.MSG
                     END
                     IF Y.EXP.DONT.MATCH AND COPIES.LOOP=1 THEN
                        ERR.MSG='Yearly expense does not match ':Y.SUB.TOTAL'R26#9':' ':Y.EXP.MATCH.TOTAL'R26#9'
                        CALL ELINE(ERR.MSG)
                        ERR.ARRAY<-1>=ERR.MSG
                     END
                     LINE='*******************************************************************************'
                     GOSUB BUILD.EMAIL.REPORT
                     LINE='*                                                                             *'
                     GOSUB BUILD.EMAIL.REPORT
                     LINE='*     ERROR Freight Charges Subtotal do not match the region or expense     *'
                     GOSUB BUILD.EMAIL.REPORT
                     NUM.OF.ERR=DCOUNT(ERR.ARRAY,@AM)
                     FOR XX=1 TO NUM.OF.ERR
                        LINE='*        ':ERR.ARRAY<XX>:'       *'
                        GOSUB BUILD.EMAIL.REPORT
                     NEXT XX
                     LINE='*                                                                             *'
                     GOSUB BUILD.EMAIL.REPORT
                     LINE='*******************************************************************************'
                     GOSUB BUILD.EMAIL.REPORT
                     IF COPIES.LOOP=1 THEN
                        SUBJ='Freight Charges Subtotal Does Not Match the Region or Expense'
                        TEXT=USER:' ran the Weekly Report which contained a freight charges subtotal'

                        TEXT<1,-1>='that does not match for client: ':CLIENT:' ':CLIENT.NAME:'.'     ; * JMK17
                        TEXT<1,-1>=' '
                        NUM.OF.ERR=DCOUNT(ERR.ARRAY,@AM)
                        FOR XX=1 TO NUM.OF.ERR
                           TEXT<1,-1>=ERR.ARRAY<XX>
                        NEXT XX
                        MVIN=''
                        MVIN<1>='DFriend@afs.net'

                        MVIN<5>=SUBJ
                        MVIN<6>=TEXT
                        MVIN<8>='PRIO'
                        IF CLIENT = "30032" THEN MVIN<8,-1> = "NODEL"  ; * NPR12
                        CALL SENDMAIL(MVIN,MVOUT)
                        NO.EMAIL=1
                        EMAIL.ERRORS<-1>=TEXT<1>
                     END                 ; * IF COPIES.LOOP=1
                  END                    ; * IF REG.DONT.MATCH OR Y.REG.DONT.MATCH OR EXP.DONT.MATCH OR Y.EXP.DONT.MATCH
               END
            END                          ; * IF COMMISSION.LINE


            IF NONF.AMT+0#0 THEN         ; * JMK94
               LINE=SPACE(11):"Excluding Freight Charges    "

               LINE:=-(NONF.AMT)'R26,#30'          ; * JMK94
               IF NOT(SEPARATE.REGIONS) THEN LINE:=-(Y.NONF.AMT)'R26,#40'        ; * JMK94
               GOSUB BUILD.EMAIL.REPORT

               IF SEPARATE.REGIONS THEN
                  HTML<-1>='<TR><TD COLSPAN="2">Excluding Freight Charges</TD>'

                  HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':-(NONF.AMT)'R26,#30':'</TD>'   ; * JMK94
                  HTML<-1>='<TD COLSPAN="3"></TD></TR>'
               END ELSE
                  HTML<-1>='<TR><TD COLSPAN="2">Excluding Freight Charges</TD>'

                  HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':-(NONF.AMT)'R26,#30':'</TD>'   ; * JMK94
                  HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':-(Y.NONF.AMT)'R26,#40':'</TD></TR>'      ; * JMK94
               END

            END                          ; * IF VOUCHER

* Calculate processing fees
            IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK TO BEGIN DEBUG 175...')

            IF TESTING THEN              ; * JMK32
               WRITE REG.DARRAY ON F.WORK,'REG.DARRAY.RPTS*':CLIENT    ; * JMK32
               WRITE REG.INVOICE ON F.WORK,'REG.INVOICE.RPTS*':CLIENT  ; * JMK32
               WRITE REG.COUNTS ON F.WORK,'REG.COUNTS.RPTS*':CLIENT    ; * JMK32
               WRITE REG.LIST ON F.WORK,'REG.LIST.RPTS*':CLIENT        ; * JMK32
            END                          ; * JMK32
            IF USER='DAVID' THEN CALL ELINE('PRESS BREAK - REG.ID')
            EDI.COUNT=''                 ; * JMK32
            EDI.COUNT<1,1>=NUM.EDI.OUT<1,1>+NUM.EDI.IN<1,1>+NUM.EDI.THIRD<1,1>   ; * JMK32
            EDI.COUNT<1,2>=NUM.EDI.OUT<1,2>+NUM.EDI.IN<1,2>+NUM.EDI.THIRD<1,2>   ; * JMK32
            BILLS.COUNT=NUM.OUT.PAID+NUM.IN.PAID+NUM.THIRD.PAID        ; * JMK32
            BILLS.COUNT+=EDI.COUNT<1,1>  ; * JMK32
            BILLS.COUNT+=EDI.COUNT<1,2>  ; * JMK32

            REG.DIV.XREF.ID=CLIENT:'*':END.DATE    ; * JMK137
            READ TEST FROM F.REG.DIV.XREF,REG.DIV.XREF.ID THEN         ; * JMK137
               REG.DIV.ARRAY=TEST        ; * JMK137
            END ELSE                     ; * JMK137
               REG.DIV.ARRAY=''          ; * JMK137
               NVAL=DCOUNT(DIV.LIST<1>,@VM)        ; * JMK137
               FOR VAL=1 TO NVAL         ; * JMK137
                  IF DIV.LIST<2,VAL>#'' THEN       ; * JMK137
                     DIV.KEY=DIV.LIST<1,VAL>       ; * JMK137
                     DIV.CARR.CNT=DIV.LIST<2,VAL>  ; * JMK137
                     LOCATE DIV.KEY IN REG.DIV.ARRAY<1> BY 'AL' SETTING DPOS ELSE          ; * JMK137
                        INS DIV.KEY BEFORE REG.DIV.ARRAY<1,DPOS>       ; * JMK137
                        INS DIV.CARR.CNT BEFORE REG.DIV.ARRAY<2,DPOS>  ; * JMK137
                     END                 ; * JMK137
                     IF CLIENT='01706' OR CLIENT='00949' OR CLIENT='00866' OR CLIENT='01633' OR CLIENT='01977' OR CLIENT='01282' OR CLIENT='01468' OR CLIENT='01485' THEN  ; * JMK137 ; * DRF007
                        READ DIV.ITM FROM F.DIVISION,DIV.LIST<1,VAL> ELSE DIV.ITM=''       ; * JMK137
                        REG.KEY=DIV.ITM<45>        ; * JMK137
                        IF REG.KEY#'' THEN         ; * JMK137
                           LOCATE REG.KEY IN REG.DIV.ARRAY<3> BY 'AL' SETTING RPOS ELSE    ; * JMK137
                              INS REG.KEY BEFORE REG.DIV.ARRAY<3,RPOS>           ; * JMK137
                              INS '' BEFORE REG.DIV.ARRAY<4,RPOS>      ; * JMK137
                              INS '' BEFORE REG.DIV.ARRAY<5,RPOS>      ; * JMK137
                           END           ; * JMK137
                           REG.DIV.ARRAY<4,RPOS,-1>=DIV.CARR.CNT       ; * JMK137
                           LOCATE DIV.KEY IN REG.DIV.ARRAY<5,RPOS> BY 'AL' SETTING RDPOS ELSE        ; * JMK137
                              REG.DIV.ARRAY<5,RPOS,-1>=DIV.KEY         ; * JMK137
                           END           ; * JMK137
                        END              ; * JMK137
                     END                 ; * JMK137
                  END                    ; * JMK137
               NEXT VAL                  ; * JMK137
               IF SEPARATE.REGIONS=0 THEN          ; * JMK137
                  WRITE REG.DIV.ARRAY ON F.REG.DIV.XREF,REG.DIV.XREF.ID          ; * JMK137
               END                       ; * JMK137
            END                          ; * JMK137

            CARRIER.COUNT=DCOUNT(CARRIER.ARRAY<1>,@VM)       ; * JMK32
*DFIF USER='DAVID' THEN CALL ELINE('PRESS BREAK')
            PVIN=''                      ; * JMK32
            PVOUT=''                     ; * JMK32
            PVIN<1>=BEG.DATE             ; * JMK32
            PVIN<2>=END.DATE             ; * JMK32
            PVIN<3>=END.DATE             ; * JMK32
            PVIN<4>=DAYS                 ; * JMK32
            PVIN<5>=BILLS.COUNT          ; * JMK32
            PVIN<6>=CARRIER.COUNT        ; * JMK32
            PVIN<7>=NOB.REJ              ; * JMK32
            PVIN<8>=EDI.COUNT.ARRAY      ; * JMK32
            PVIN<9>=EDI.COUNT<1,1>       ; * JMK32
            PVIN<10>=EDI.MD.FEDEX.GROUND.COUNT     ; * JMK32
            PVIN<11>=EDI.COUNT.PARCEL.NON.FEDEX.AIR          ; * JMK32
            PVIN<12>=EDI.COUNT<1,2>      ; * JMK32
            PVIN<13>=NUM.HOLDS           ; * JMK32
            PVIN<14>=NUM.NEVER.PAYS      ; * JMK32
            PVIN<15>=PR.BILLS.COUNT      ; * JMK32
            PVIN<16>=RELEASED.COUNT      ; * JMK32
            PVIN<17>=NUM.UPS.BILLS       ; * JMK32
            PVIN<18>=NUM.UPS.TRACK       ; * JMK32

            IF REG.COUNT=0 THEN          ; * JMK107
               PVIN<19>=REGS<1>          ; * JMK107
            END ELSE                     ; * JMK107
               PVIN<19>=REGS<1,REG.COUNT>          ; * JMK107
            END                          ; * JMK107
            PVIN<20>=SEPARATE.REGIONS    ; * JMK63
            PVIN<21>=USER                ; * JMK80
            PVIN<22>=REG.LIST<1>         ; * JMK91
            PVIN<23>=REG.LIST<2>         ; * JMK91
            PVIN<24>='R'                 ; * JMK122
            PVIN<25>=REG.DIV.ARRAY<1>    ; * JMK137
            PVIN<26>=REG.DIV.ARRAY<2>    ; * JMK137
            PVIN<27>=REG.DIV.ARRAY<3>    ; * JMK137
            PVIN<28>=REG.DIV.ARRAY<4>    ; * JMK137
            PVIN<29>=REG.DIV.ARRAY<5>    ; * JMK137
            PVIN<32>=LTL.COUNT           ; * DRF028
            PVIN<33>=NON.LTL.COUNT       ; * DRF028
            CALL FB.PROCESS.CALC(PVIN,PVOUT,CLIENT,CLIENT.REC)     ; * JMK32; * DRF028
            CORP.FEES=PVOUT              ; * JMK32
            C.POSTAGE=CORP.FEES<4>       ; * JMK32
            PR.PROCESS.FEE=CORP.FEES<10>           ; * JMK32
            C.PROCESS.FEE=CORP.FEES<14>  ; * JMK32
            C.PRE.AUDIT.FEE=CORP.FEES<15>          ; * JMK32
            WEEKLY.FLAT=CORP.FEES<17>    ; * JMK32
            C.WKLY.POSTAGE.FEE=CORP.FEES<18>       ; * JMK32
            AFSI.FEE=CORP.FEES<19>       ; * JMK32
            C.PROCESS.FEE+=AFSI.FEE      ; * JMK32
            C.UPS.FEE=CORP.FEES<20>      ; * JMK32
            C.SERVICE.FEE=CORP.FEES<21>  ; * JMK32
            C.LOGISTICS.FEE=CORP.FEES<22>          ; * JMK32
            C.TRN.ALLOC.CODE=CORP.FEES<23>         ; * JMK80
            C.TRN.ALLOC.FEES=CORP.FEES<24>         ; * JMK80
            C.WKLY.POSTAGE.FEE=C.WKLY.POSTAGE.FEE+C.PROCESS.FEE
            C.PROCESS.FEE=0
            IF CLIENT#'10340' THEN
               C.WKLY.POSTAGE.FEE=C.WKLY.POSTAGE.FEE+C.PRE.AUDIT.FEE
               C.PRE.AUDIT.FEE=0
            END
            IF INV.LVL='D' AND SEPARATE.REGIONS=0 THEN
               REG.FEES=''
               DVAL=DCOUNT(REG.LIST<1>,@VM)
               FOR VAL=1 TO DVAL
                  REG.CARRIER.COUNT=DCOUNT(REG.LIST<2,VAL>,@SVM)
                  REG.NEVERPAY.COUNT=REG.COUNTS<1,VAL>
                  REG.DUP.COUNT=REG.COUNTS<2,VAL>
                  REG.RELEASED.COUNT=REG.COUNTS<3,VAL>
                  REG.HOLD.COUNT=REG.COUNTS<4,VAL>
                  REG.BILLS.COUNT=REG.COUNTS<5,VAL>
                  REG.PR.BILLS.COUNT=REG.COUNTS<6,VAL>
                  REG.EDI.COUNT=''
                  REG.EDI.COUNT<1,1>=REG.COUNTS<7,VAL>
                  REG.EDI.COUNT<1,2>=REG.COUNTS<8,VAL>
                  REG.UPS.BILLS.COUNT=REG.COUNTS<9,VAL>
                  REG.UPS.TRACK.COUNT=REG.COUNTS<10,VAL>
                  REG.EDI.COUNT.ARRAY=REG.COUNTS<11,VAL>
                  REG.EDI.MD.FEDEX.GROUND.COUNT=REG.COUNTS<12,VAL>
                  REG.EDI.COUNT.PARCEL.NON.FEDEX.AIR=REG.COUNTS<13,VAL>
                  REG.BILLS.COUNT+=REG.EDI.COUNT<1,1>
                  REG.BILLS.COUNT+=REG.EDI.COUNT<1,2>
                  PVIN=''
                  PVOUT=''
                  PVIN<1>=BEG.DATE
                  PVIN<2>=END.DATE
                  PVIN<3>=END.DATE
                  PVIN<4>=DAYS
                  PVIN<5>=REG.BILLS.COUNT
                  PVIN<6>=REG.CARRIER.COUNT
                  PVIN<7>=REG.DUP.COUNT
                  PVIN<8>=REG.EDI.COUNT.ARRAY
                  PVIN<9>=REG.EDI.COUNT<1,1>
                  PVIN<10>=REG.EDI.MD.FEDEX.GROUND.COUNT
                  PVIN<11>=REG.EDI.COUNT.PARCEL.NON.FEDEX.AIR
                  PVIN<12>=REG.EDI.COUNT<1,2>
                  PVIN<13>=REG.HOLD.COUNT
                  PVIN<14>=REG.NEVERPAY.COUNT
                  PVIN<15>=REG.PR.BILLS.COUNT
                  PVIN<16>=REG.RELEASED.COUNT
                  PVIN<17>=REG.UPS.BILLS.COUNT
                  PVIN<18>=REG.UPS.TRACK.COUNT
                  PVIN<19>=REG.LIST<1,VAL>
                  PVIN<20>=1
                  PVIN<21>=USER
                  PVIN<22>=REG.LIST<1,VAL>
                  PVIN<23>=REG.LIST<2,VAL>
                  PVIN<24>='R'           ; * JMK122
                  PVIN<25>=REG.DIV.ARRAY<1>        ; * JMK137
                  PVIN<26>=REG.DIV.ARRAY<2>        ; * JMK137
                  PVIN<27>=REG.DIV.ARRAY<3>        ; * JMK137
                  PVIN<28>=REG.DIV.ARRAY<4>        ; * JMK137
                  PVIN<29>=REG.DIV.ARRAY<5>        ; * JMK137
                  CALL FB.PROCESS.CALC(PVIN,PVOUT,CLIENT,CLIENT.REC)
                  RATT=DCOUNT(PVOUT,@AM)
                  FOR ATT=1 TO RATT
                     REG.FEES<ATT,-1>=PVOUT<ATT>
                  NEXT ATT
               NEXT VAL
               C.POSTAGE=SUM(REG.FEES<4>)
               PR.PROCESS.FEE=SUM(REG.FEES<10>)
               C.PROCESS.FEE=SUM(REG.FEES<14>)
               C.PRE.AUDIT.FEE=SUM(REG.FEES<15>)
               WEEKLY.FLAT=SUM(REG.FEES<17>)
               C.WKLY.POSTAGE.FEE=SUM(REG.FEES<18>)
               AFSI.FEE=SUM(REG.FEES<19>)
               C.PROCESS.FEE+=AFSI.FEE
               C.UPS.FEE=SUM(REG.FEES<20>)
               C.SERVICE.FEE=SUM(REG.FEES<21>)
               C.LOGISTICS.FEE=SUM(REG.FEES<22>)
               C.TRN.ALLOC.CODE=REG.FEES<23>
               C.TRN.ALLOC.FEE=REG.FEES<24>
               C.WKLY.POSTAGE.FEE=C.WKLY.POSTAGE.FEE+C.PROCESS.FEE
               C.PROCESS.FEE=0
               IF CLIENT#'10340' THEN
                  C.WKLY.POSTAGE.FEE=C.WKLY.POSTAGE.FEE+C.PRE.AUDIT.FEE
                  C.PRE.AUDIT.FEE=0
               END
               IF TESTING OR USER='MKERBOW' THEN
                  WRITE CORP.FEES ON F.WORK,'CORP.FEES.RPTS*':CLIENT
                  WRITE REG.FEES ON F.WORK,'REG.FEES.RPTS*':CLIENT
               END
            END

            IF SHOW.DTL THEN             ; * JMK96
               C.POSTAGE.DTL=''          ; * JMK96
               FOR ATT=25 TO 27          ; * JMK96
                  IF CORP.FEES<ATT-24>+0#0 AND CORP.FEES<ATT>#'' THEN  ; * JMK96
                     C.POSTAGE.DTL<1,-1>=CORP.FEES<ATT>      ; * JMK96
                  END                    ; * JMK96
               NEXT ATT                  ; * JMK96
               PR.PROCESS.DTL=''         ; * JMK96
               IF CORP.FEES<10>+0#0 AND CORP.FEES<33>#'' THEN          ; * JMK96
                  PR.PROCESS.DTL<1,-1>=CORP.FEES<33>         ; * JMK96
               END                       ; * JMK96
               C.PROCESS.DTL=''          ; * JMK96
               FOR ATT=29 TO 36          ; * JMK96
                  IF CORP.FEES<ATT-23>+0#0 AND CORP.FEES<ATT>#'' THEN  ; * JMK96
                     C.PROCESS.DTL<1,-1>=CORP.FEES<ATT>      ; * JMK96
                  END                    ; * JMK96
               NEXT ATT                  ; * JMK96
               C.PRE.AUDIT.DTL=''        ; * JMK96
               IF CORP.FEES<5>+0#0 AND CORP.FEES<28>#'' THEN           ; * JMK96
                  C.PRE.AUDIT.DTL<1,-1>=CORP.FEES<28>        ; * JMK96
               END                       ; * JMK96
               WEEKLY.FLAT.DTL=''        ; * JMK96
               IF CORP.FEES<17>+0#0 AND CORP.FEES<36>#'' THEN          ; * JMK96
                  WEEKLY.FLAT.DTL<1,-1>=CORP.FEES<36>        ; * JMK96
               END                       ; * JMK96
               C.WKLY.POSTAGE.DTL=''     ; * JMK96
               IF CORP.FEES<18>+0#0 AND CORP.FEES<37>#'' THEN          ; * JMK96
                  C.WKLY.POSTAGE.DTL<1,-1>=CORP.FEES<37>     ; * JMK96
               END                       ; * JMK96
               AFSI.DTL=''               ; * JMK96
               IF CORP.FEES<19>+0#0 AND CORP.FEES<38>#'' THEN          ; * JMK96
                  AFSI.DTL<1,-1>=CORP.FEES<38>     ; * JMK96
                  C.PROCESS.DTL<1,-1>=AFSI.DTL     ; * JMK96
               END                       ; * JMK96
               C.UPS.DTL=''              ; * JMK96
               IF CORP.FEES<20>+0#0 AND CORP.FEES<39>#'' THEN          ; * JMK96
                  C.UPS.DTL<1,-1>=CORP.FEES<39>    ; * JMK96
               END                       ; * JMK96
               C.SERVICE.DTL=''          ; * JMK96
               IF CORP.FEES<21>+0#0 AND CORP.FEES<40>#'' THEN          ; * JMK96
                  C.SERVICE.DTL<1,-1>=CORP.FEES<40>          ; * JMK96
               END                       ; * JMK96
               C.LOGISTICS.DTL=''        ; * JMK96
               IF CORP.FEES<22>+0#0 AND CORP.FEES<41>#'' THEN          ; * JMK96
                  C.LOGISTICS.DTL<1,-1>=CORP.FEES<41>        ; * JMK96
               END                       ; * JMK96
               C.TRN.ALLOC.DTL=''        ; * JMK96
               IF CORP.FEES<24>+0#0 AND CORP.FEES<42>#'' THEN          ; * JMK96
                  C.TRN.ALLOC.DTL<1,-1>=CORP.FEES<42>        ; * JMK96
               END                       ; * JMK96
               C.WKLY.POSTAGE.DTL<1,-1>=C.PROCESS.DTL        ; * JMK96
               C.PROCESS.DTL=''          ; * JMK96
               IF CLIENT#'10340' THEN    ; * JMK96
                  IF C.PRE.AUDIT.FEE+0#0 AND C.PRE.AUDIT.DTL#'' THEN   ; * JMK96
                     C.WKLY.POSTAGE.DTL<1,-1>=C.PRE.AUDIT.DTL          ; * JMK96
                     C.PRE.AUDIT.DTL=''  ; * JMK96
                  END                    ; * JMK96
               END                       ; * JMK96
            END                          ; * JMK96

            IF CLIENT='10340' THEN       ; * JMK16
               IF SEPARATE.REGIONS THEN

                  IF C.PROCESS.FEE+0 NE 0 THEN     ; * JMK32
                     LINE=SPACE(11):"Processing Fee Due           "
                     LINE:=C.PROCESS.FEE'R26,#30'
                     GOSUB BUILD.EMAIL.REPORT
                     HTML<-1>='<TR><TD COLSPAN="2">Processing Fee Due</TD>'
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':C.PROCESS.FEE'R26,#30':'</TD>'
                     HTML<-1>='<TD COLSPAN="3"></TD></TR>'
                  END
               END ELSE

                  IF C.PROCESS.FEE+0 NE 0 OR Y.PROCESS.FEE+0 NE 0 THEN           ; * JMK32
                     LINE=SPACE(11):"Processing Fee Due           "
                     LINE:=C.PROCESS.FEE'R26,#30':Y.PROCESS.FEE'R26,#40'
                     GOSUB BUILD.EMAIL.REPORT
                     HTML<-1>='<TR><TD COLSPAN="2">Processing Fee Due</TD>'
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':C.PROCESS.FEE'R26,#30':'</TD>'
                     HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':Y.PROCESS.FEE'R26,#40':'</TD></TR>'

                     IF COPIES.LOOP=1 AND CHECK.AR.BRIDGE AND C.PROCESS.FEE+0 NE 0 THEN    ; * JMK32
                        AR.PROCESS.FEE.LIST=''
                        AR.PROCESS.FEE.LIST<-1>='2'
                        AR.PROCESS.FEE.LIST<-1>='105'
                        AR.PROCESS.FEE.LIST<-1>='150'
                        AR.PROCESS.FEE.LIST<-1>='1002'
                        AR.PROCESS.FEE.LIST<-1>='1105'
                        AR.PROCESS.FEE.LIST<-1>='1150'
                        AR.PROCESS.FEE.LIST<-1>='3002'
                        AR.PROCESS.FEE.LIST<-1>='3105'
                        AR.PROCESS.FEE.LIST<-1>='3150'
                        AR.PROCESS.FEE.LIST<-1>='6002'
                        AR.PROCESS.FEE.LIST<-1>='6105'
                        AR.PROCESS.FEE.LIST<-1>='6150'
                        AR.PROCESS.FEE.LIST<-1>='7002'
                        AR.PROCESS.FEE.LIST<-1>='7105'
                        AR.PROCESS.FEE.LIST<-1>='7150'
                        AR.PROCESS.FEE=0
                        NAR.PROCESS.FEE.ATT=DCOUNT(AR.PROCESS.FEE.LIST,@AM)
                        FOR AR.PROCESS.FEE.ATT=1 TO NAR.PROCESS.FEE.ATT
                           AR.PROCESS.FEE.CODE=AR.PROCESS.FEE.LIST<AR.PROCESS.FEE.ATT>
                           LOCATE AR.PROCESS.FEE.CODE IN D.BRIDGE<1> SETTING AR.POS THEN
                              AR.PROCESS.FEE+=D.BRIDGE<3,AR.POS>
                           END
                           LOCATE AR.PROCESS.FEE.CODE IN PCL.SLS.ARRAY<1> SETTING PCL.AR.POS THEN
                              AR.PROCESS.FEE-=PCL.SLS.ARRAY<2,PCL.AR.POS>
                           END
                        NEXT AR.PROCESS.FEE.ATT
                        IF C.PROCESS.FEE#AR.PROCESS.FEE THEN BRIDGE.SUMMARY.MATCH=0 ; IF USER='MKERBOW' THEN DEBUG

                     END
                  END                    ; * IF C.PROCESS.FEE'R0' NE 0 OR Y.PROCESS.FEE'R0' NE 0
               END                       ; * IF SEPARATE.REGIONS

               IF SEPARATE.REGIONS THEN

                  IF C.PRE.AUDIT.FEE+0 NE 0 THEN   ; * JMK32
                     LINE=SPACE(11):"Pre Audit Fee Due            "
                     LINE:=C.PRE.AUDIT.FEE'R26,#30'
                     GOSUB BUILD.EMAIL.REPORT
                     HTML<-1>='<TR><TD COLSPAN="2">Pre Audit Fee Due</TD>'
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':C.PRE.AUDIT.FEE'R26,#30':'</TD>'
                     HTML<-1>='<TD COLSPAN="3"></TD></TR>'
                  END
               END ELSE

                  IF C.PRE.AUDIT.FEE+0 NE 0 OR Y.PRE.AUDIT.FEE+0 NE 0 THEN       ; * JMK32
                     LINE=SPACE(11):"Pre Audit Fee Due            "
                     LINE:=C.PRE.AUDIT.FEE'R26,#30':Y.PRE.AUDIT.FEE'R26,#40'
                     GOSUB BUILD.EMAIL.REPORT
                     HTML<-1>='<TR><TD COLSPAN="2">Pre Audit Fee Due</TD>'
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':C.PRE.AUDIT.FEE'R26,#30':'</TD>'
                     HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':Y.PRE.AUDIT.FEE'R26,#40':'</TD></TR>'

                     IF COPIES.LOOP=1 AND CHECK.AR.BRIDGE AND C.PRE.AUDIT.FEE+0 NE 0 THEN  ; * JMK32
                        AR.PRE.AUDIT.FEE.LIST=''
                        AR.PRE.AUDIT.FEE.LIST<-1>='121'
                        AR.PRE.AUDIT.FEE.LIST<-1>='1121'
                        AR.PRE.AUDIT.FEE.LIST<-1>='3121'
                        AR.PRE.AUDIT.FEE.LIST<-1>='6121'
                        AR.PRE.AUDIT.FEE.LIST<-1>='7121'
                        AR.PRE.AUDIT.FEE=0
                        NAR.PRE.AUDIT.FEE.ATT=DCOUNT(AR.PRE.AUDIT.FEE.LIST,@AM)
                        FOR AR.PRE.AUDIT.FEE.ATT=1 TO NAR.PRE.AUDIT.FEE.ATT
                           AR.PRE.AUDIT.FEE.CODE=AR.PRE.AUDIT.FEE.LIST<AR.PRE.AUDIT.FEE.ATT>
                           LOCATE AR.PRE.AUDIT.FEE.CODE IN D.BRIDGE<1> SETTING AR.POS THEN
                              AR.PRE.AUDIT.FEE+=D.BRIDGE<3,AR.POS>
                           END
                           LOCATE AR.PRE.AUDIT.FEE.CODE IN PCL.SLS.ARRAY<1> SETTING PCL.AR.POS THEN
                              AR.PRE.AUDIT.FEE-=PCL.SLS.ARRAY<2,PCL.AR.POS>
                           END
                        NEXT AR.PRE.AUDIT.FEE.ATT
                        IF C.PRE.AUDIT.FEE#AR.PRE.AUDIT.FEE THEN BRIDGE.SUMMARY.MATCH=0 ; IF USER='MKERBOW' THEN DEBUG

                     END
                  END                    ; * IF C.PRE.AUDIT.FEE'R0' NE 0 OR Y.PRE.AUDIT.FEE'R0' NE 0
               END                       ; * IF SEPARATE.REGIONS
            END ELSE                     ; * JMK16


            END                          ; * JMK16

            IF SEPARATE.REGIONS THEN
               IF SUM(PCL.SOC.ARRAY<4>)+0#0 THEN   ; * JMK153
                  IF CCC.FLG=0 THEN      ; * JMK153
                     NPCLVAL=DCOUNT(PCL.SOC.ARRAY<1>,@VM)    ; * JMK153
                     FOR PCLVAL=1 TO NPCLVAL       ; * JMK153
                        PCL.SOC.DESC=PCL.SOC.ARRAY<1,PCLVAL>           ; * JMK153
                        PCL.SOC.CAMT=PCL.SOC.ARRAY<4,PCLVAL>           ; * JMK153
                        LINE=SPACE(11):PCL.SOC.DESC'L#28 '   ; * JMK153
                        LINE:=PCL.SOC.CAMT'R26,#30'          ; * JMK153
                        GOSUB BUILD.EMAIL.REPORT   ; * JMK153
                        HTML<-1>='<TR><TD COLSPAN="2">':PCL.SOC.DESC:'</TD>'     ; * JMK153
                        HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':PCL.SOC.CAMT'R26,#30':'</TD>'      ; * JMK153
                        HTML<-1>='<TD COLSPAN="3"></TD></TR>'          ; * JMK153
                     NEXT PCLVAL         ; * JMK153
                  END                    ; * JMK153
               END                       ; * JMK153

               IF C.SERVICE.FEE+0 NE 0 THEN        ; * JMK32
                  IF CCC.FLG=0 THEN      ; * JMK85
                     LINE=SPACE(11):"Service Fee Due              "
                     LINE:=C.SERVICE.FEE'R26,#30'
                     GOSUB BUILD.EMAIL.REPORT
                     HTML<-1>='<TR><TD COLSPAN="2">Service Fee Due</TD>'
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':C.SERVICE.FEE'R26,#30':'</TD>'
                     HTML<-1>='<TD COLSPAN="3"></TD></TR>'
                  END                    ; * JMK85
               END

               IF C.UPS.FEE+0 NE 0 THEN  ; * JMK32
                  IF CCC.FLG=0 THEN      ; * JMK85
                     LINE=SPACE(11):"UPS Service Fee Due          "
                     LINE:=C.UPS.FEE'R26,#30'
                     GOSUB BUILD.EMAIL.REPORT
                     HTML<-1>='<TR><TD COLSPAN="2">UPS Service Fee Due</TD>'
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':C.UPS.FEE'R26,#30':'</TD>'
                     HTML<-1>='<TD COLSPAN="3"></TD></TR>'
                  END                    ; * JMK85
               END

               IF C.LOGISTICS.FEE+0 NE 0 THEN      ; * JMK32
                  IF CCC.FLG=0 THEN      ; * JMK85
                     LINE=SPACE(11):"Logistics Fee Due            "
                     LINE:=C.LOGISTICS.FEE'R26,#30'
                     GOSUB BUILD.EMAIL.REPORT
                     HTML<-1>='<TR><TD COLSPAN="2">Logistics Fee Due</TD>'
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':C.LOGISTICS.FEE'R26,#30':'</TD>'
                     HTML<-1>='<TD COLSPAN="3"></TD></TR>'
                  END                    ; * JMK85
               END

               IF C.WKLY.POSTAGE.FEE+0 NE 0 THEN   ; * JMK32
                  IF CCC.FLG=0 THEN      ; * JMK85
                     LINE=SPACE(11):"Weekly Proc & Hndlg Fee Due  "
                     LINE:=C.WKLY.POSTAGE.FEE'R26,#30'
                     GOSUB BUILD.EMAIL.REPORT
                     HTML<-1>='<TR><TD COLSPAN="2">Weekly Proc & Hndlg Fee Due</TD>'
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':C.WKLY.POSTAGE.FEE'R26,#30':'</TD>'
                     HTML<-1>='<TD COLSPAN="3"></TD></TR>'
                  END                    ; * JMK85
               END
            END ELSE
               IF SUM(PCL.SOC.ARRAY<4>)+0#0 OR SUM(PCL.SOC.ARRAY<7>)+0#0 THEN    ; * JMK153
                  IF CCC.FLG=0 THEN      ; * JMK153
                     NPCLVAL=DCOUNT(PCL.SOC.ARRAY<1>,@VM)    ; * JMK153
                     FOR PCLVAL=1 TO NPCLVAL       ; * JMK153
                        PCL.SOC.DESC=PCL.SOC.ARRAY<1,PCLVAL>           ; * JMK153
                        PCL.SOC.CAMT=PCL.SOC.ARRAY<4,PCLVAL>           ; * JMK153
                        PCL.SOC.YAMT=PCL.SOC.ARRAY<7,PCLVAL>           ; * JMK153
                        LINE=SPACE(11):PCL.SOC.DESC'L#28 '   ; * JMK153
                        LINE:=PCL.SOC.CAMT'R26,#30'PCL.SOC.YAMT'R26,#30'         ; * JMK153
                        GOSUB BUILD.EMAIL.REPORT   ; * JMK153
                        HTML<-1>='<TR><TD COLSPAN="2">':PCL.SOC.DESC:'</TD>'     ; * JMK153
                        HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':PCL.SOC.CAMT'R26,#30':'</TD>'      ; * JMK153
                        HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':PCL.SOC.YAMT'R26,#40':'</TD></TR>'           ; * JMK153
                     NEXT PCLVAL         ; * JMK153
                  END                    ; * JMK153
               END                       ; * JMK153

               IF C.SERVICE.FEE+0 NE 0 OR Y.SERVICE.FEE+0 NE 0 THEN    ; * JMK32
                  IF CCC.FLG=0 THEN      ; * JMK85
                     LINE=SPACE(11):"Service Fee Due              "
                     LINE:=C.SERVICE.FEE'R26,#30':Y.SERVICE.FEE'R26,#40'
                     GOSUB BUILD.EMAIL.REPORT
                     HTML<-1>='<TR><TD COLSPAN="2">Service Fee Due</TD>'
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':C.SERVICE.FEE'R26,#30':'</TD>'
                     HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':Y.SERVICE.FEE'R26,#40':'</TD></TR>'
                  END                    ; * JMK85

                  IF COPIES.LOOP=1 AND CHECK.AR.BRIDGE AND C.SERVICE.FEE+0 NE 0 THEN       ; * JMK32
                     AR.SERVICE.FEE.LIST=''
                     AR.SERVICE.FEE.LIST<-1>='3'
                     AR.SERVICE.FEE.LIST<-1>='1003'
                     AR.SERVICE.FEE.LIST<-1>='3003'
                     AR.SERVICE.FEE.LIST<-1>='6003'
                     AR.SERVICE.FEE.LIST<-1>='7003'
                     AR.SERVICE.FEE=0
                     NAR.SERVICE.FEE.ATT=DCOUNT(AR.SERVICE.FEE.LIST,@AM)
                     FOR AR.SERVICE.FEE.ATT=1 TO NAR.SERVICE.FEE.ATT
                        AR.SERVICE.FEE.CODE=AR.SERVICE.FEE.LIST<AR.SERVICE.FEE.ATT>
                        LOCATE AR.SERVICE.FEE.CODE IN D.BRIDGE<1> SETTING AR.POS THEN
                           AR.SERVICE.FEE+=D.BRIDGE<3,AR.POS>
                        END
                        LOCATE AR.SERVICE.FEE.CODE IN PCL.SLS.ARRAY<1> SETTING PCL.AR.POS THEN
                           AR.SERVICE.FEE-=PCL.SLS.ARRAY<2,PCL.AR.POS>
                        END
                     NEXT AR.SERVICE.FEE.ATT
                     IF C.SERVICE.FEE#AR.SERVICE.FEE THEN BRIDGE.SUMMARY.MATCH=0 ; IF USER='MKERBOW' THEN DEBUG
                  END
               END                       ; * IF C.SERVICE.FEE'R0' NE 0 OR Y.SERVICE.FEE'R0' NE 0

               IF C.UPS.FEE+0 NE 0 OR Y.UPS.FEE+0 NE 0 THEN  ; * JMK32
                  IF CCC.FLG=0 THEN      ; * JMK85
                     LINE=SPACE(11):"UPS Service Fee Due          "
                     LINE:=C.UPS.FEE'R26,#30':Y.UPS.FEE'R26,#40'
                     GOSUB BUILD.EMAIL.REPORT
                     HTML<-1>='<TR><TD COLSPAN="2">UPS Service Fee Due</TD>'
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':C.UPS.FEE'R26,#30':'</TD>'
                     HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':Y.UPS.FEE'R26,#40':'</TD></TR>'
                  END                    ; * JMK85

                  IF COPIES.LOOP=1 AND CHECK.AR.BRIDGE AND C.UPS.FEE+0 NE 0 THEN           ; * JMK32
                     AR.UPS.FEE.LIST=''
                     AR.UPS.FEE.LIST<-1>='103'
                     AR.UPS.FEE.LIST<-1>='1103'
                     AR.UPS.FEE.LIST<-1>='3103'
                     AR.UPS.FEE.LIST<-1>='6103'
                     AR.UPS.FEE.LIST<-1>='7103'
                     AR.UPS.FEE=0
                     NAR.UPS.FEE.ATT=DCOUNT(AR.UPS.FEE.LIST,@AM)
                     FOR AR.UPS.FEE.ATT=1 TO NAR.UPS.FEE.ATT
                        AR.UPS.FEE.CODE=AR.UPS.FEE.LIST<AR.UPS.FEE.ATT>
                        LOCATE AR.UPS.FEE.CODE IN D.BRIDGE<1> SETTING AR.POS THEN
                           AR.UPS.FEE+=D.BRIDGE<3,AR.POS>
                        END
                        LOCATE AR.UPS.FEE.CODE IN PCL.SLS.ARRAY<1> SETTING PCL.AR.POS THEN
                           AR.UPS.FEE-=PCL.SLS.ARRAY<2,PCL.AR.POS>
                        END
                     NEXT AR.UPS.FEE.ATT
                     IF C.UPS.FEE#AR.UPS.FEE THEN BRIDGE.SUMMARY.MATCH=0 ; IF USER='MKERBOW' THEN DEBUG
                  END
               END                       ; * IF C.UPS.FEE'R0' NE 0 OR Y.UPS.FEE'R0' NE 0

               IF C.LOGISTICS.FEE+0 NE 0 OR Y.LOGISTICS.FEE+0 NE 0 THEN          ; * JMK32
                  IF CCC.FLG=0 THEN      ; * JMK85
                     LINE=SPACE(11):"Logistics Fee Due            "
                     LINE:=C.LOGISTICS.FEE'R26,#30':Y.LOGISTICS.FEE'R26,#40'
                     GOSUB BUILD.EMAIL.REPORT
                     HTML<-1>='<TR><TD COLSPAN="2">Logistics Fee Due</TD>'
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':C.LOGISTICS.FEE'R26,#30':'</TD>'
                     HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':Y.LOGISTICS.FEE'R26,#40':'</TD></TR>'
                  END                    ; * JMK85

                  IF COPIES.LOOP=1 AND CHECK.AR.BRIDGE AND C.LOGISTICS.FEE+0 NE 0 THEN     ; * JMK32

                     AR.LOGISTICS.FEE.LIST=''
                     AR.LOGISTICS.FEE.LIST<-1>='13'
                     AR.LOGISTICS.FEE.LIST<-1>='151'
                     AR.LOGISTICS.FEE.LIST<-1>='1013'
                     AR.LOGISTICS.FEE.LIST<-1>='1151'
                     AR.LOGISTICS.FEE.LIST<-1>='3013'
                     AR.LOGISTICS.FEE.LIST<-1>='3151'
                     AR.LOGISTICS.FEE.LIST<-1>='6013'
                     AR.LOGISTICS.FEE.LIST<-1>='6151'
                     AR.LOGISTICS.FEE.LIST<-1>='7013'
                     AR.LOGISTICS.FEE.LIST<-1>='7151'
                     AR.LOGISTICS.FEE.LIST<-1>='50-13'
                     AR.LOGISTICS.FEE.LIST<-1>='52-13'
                     AR.LOGISTICS.FEE.LIST<-1>='54-13'
                     AR.LOGISTICS.FEE.LIST<-1>='56-13'
                     AR.LOGISTICS.FEE.LIST<-1>='58-13'
                     AR.LOGISTICS.FEE.LIST<-1>='60-13'
                     AR.LOGISTICS.FEE.LIST<-1>='62-13'
                     AR.LOGISTICS.FEE=0
                     NAR.LOGISTICS.FEE.ATT=DCOUNT(AR.LOGISTICS.FEE.LIST,@AM)
                     FOR AR.LOGISTICS.FEE.ATT=1 TO NAR.LOGISTICS.FEE.ATT
                        AR.LOGISTICS.FEE.CODE=AR.LOGISTICS.FEE.LIST<AR.LOGISTICS.FEE.ATT>
                        LOCATE AR.LOGISTICS.FEE.CODE IN D.BRIDGE<1> SETTING AR.POS THEN
                           AR.LOGISTICS.FEE+=D.BRIDGE<3,AR.POS>
                        END
                        LOCATE AR.LOGISTICS.FEE.CODE IN PCL.SLS.ARRAY<1> SETTING PCL.AR.POS THEN
                           AR.LOGISTICS.FEE-=PCL.SLS.ARRAY<2,PCL.AR.POS>
                        END
                     NEXT AR.LOGISTICS.FEE.ATT
                     IF C.LOGISTICS.FEE#AR.LOGISTICS.FEE THEN BRIDGE.SUMMARY.MATCH=0 ; IF USER='MKERBOW' THEN DEBUG
                  END
*
               END                       ; * IF C.LOGISTICS.FEE'R0' NE 0 OR Y.LOGISTICS.FEE'R0' NE 0

               IF C.WKLY.POSTAGE.FEE+0 NE 0 OR Y.WKLY.POSTAGE.FEE+0 NE 0 THEN    ; * JMK32
                  IF CCC.FLG=0 THEN      ; * JMK85
                     IF SHOW.DTL THEN    ; * JMK96
                        LINE=SPACE(11):"Weekly Proc & Hndlg Fee Due *"           ; * JMK96
                     END ELSE            ; * JMK96
                        LINE=SPACE(11):"Weekly Proc & Hndlg Fee Due  "
                     END                 ; * JMK96
                     LINE:=C.WKLY.POSTAGE.FEE'R26,#30':Y.WKLY.POSTAGE.FEE'R26,#40'
                     GOSUB BUILD.EMAIL.REPORT
                     IF SHOW.DTL THEN    ; * JMK96
                        HTML<-1>='<TR><TD COLSPAN="2">Weekly Proc & Hndlg Fee Due *</TD>'  ; * JMK96
                     END ELSE            ; * JMK96
                        HTML<-1>='<TR><TD COLSPAN="2">Weekly Proc & Hndlg Fee Due</TD>'
                     END                 ; * JMK96
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':C.WKLY.POSTAGE.FEE'R26,#30':'</TD>'
                     HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':Y.WKLY.POSTAGE.FEE'R26,#40':'</TD></TR>'
                  END                    ; * JMK85

                  IF COPIES.LOOP=1 AND CHECK.AR.BRIDGE AND C.WKLY.POSTAGE.FEE+0 NE 0 THEN  ; * JMK32

                     AR.WKLY.POSTAGE.FEE.LIST=''
                     AR.WKLY.POSTAGE.FEE.LIST<-1>='2'
                     AR.WKLY.POSTAGE.FEE.LIST<-1>='102'
                     AR.WKLY.POSTAGE.FEE.LIST<-1>='105'
                     AR.WKLY.POSTAGE.FEE.LIST<-1>='121'
                     AR.WKLY.POSTAGE.FEE.LIST<-1>='150'
                     AR.WKLY.POSTAGE.FEE.LIST<-1>='1002'
                     AR.WKLY.POSTAGE.FEE.LIST<-1>='1102'
                     AR.WKLY.POSTAGE.FEE.LIST<-1>='1105'
                     AR.WKLY.POSTAGE.FEE.LIST<-1>='1121'
                     AR.WKLY.POSTAGE.FEE.LIST<-1>='1150'
                     AR.WKLY.POSTAGE.FEE.LIST<-1>='3002'
                     AR.WKLY.POSTAGE.FEE.LIST<-1>='3102'
                     AR.WKLY.POSTAGE.FEE.LIST<-1>='3105'
                     AR.WKLY.POSTAGE.FEE.LIST<-1>='3121'
                     AR.WKLY.POSTAGE.FEE.LIST<-1>='3150'
                     AR.WKLY.POSTAGE.FEE.LIST<-1>='6002'
                     AR.WKLY.POSTAGE.FEE.LIST<-1>='6102'
                     AR.WKLY.POSTAGE.FEE.LIST<-1>='6105'
                     AR.WKLY.POSTAGE.FEE.LIST<-1>='6121'
                     AR.WKLY.POSTAGE.FEE.LIST<-1>='6150'
                     AR.WKLY.POSTAGE.FEE.LIST<-1>='7002'
                     AR.WKLY.POSTAGE.FEE.LIST<-1>='7102'
                     AR.WKLY.POSTAGE.FEE.LIST<-1>='7105'
                     AR.WKLY.POSTAGE.FEE.LIST<-1>='7121'
                     AR.WKLY.POSTAGE.FEE.LIST<-1>='7150'
                     AR.WKLY.POSTAGE.FEE=0
                     NAR.WKLY.POSTAGE.FEE.ATT=DCOUNT(AR.WKLY.POSTAGE.FEE.LIST,@AM)
                     FOR AR.WKLY.POSTAGE.FEE.ATT=1 TO NAR.WKLY.POSTAGE.FEE.ATT
                        AR.WKLY.POSTAGE.FEE.CODE=AR.WKLY.POSTAGE.FEE.LIST<AR.WKLY.POSTAGE.FEE.ATT>
                        LOCATE AR.WKLY.POSTAGE.FEE.CODE IN D.BRIDGE<1> SETTING AR.POS THEN
                           AR.WKLY.POSTAGE.FEE+=D.BRIDGE<3,AR.POS>
                        END
                        LOCATE AR.WKLY.POSTAGE.FEE.CODE IN PCL.SLS.ARRAY<1> SETTING PCL.AR.POS THEN
                           AR.WKLY.POSTAGE.FEE-=PCL.SLS.ARRAY<2,PCL.AR.POS>
                        END
                     NEXT AR.WKLY.POSTAGE.FEE.ATT
                     IF C.WKLY.POSTAGE.FEE#AR.WKLY.POSTAGE.FEE THEN BRIDGE.SUMMARY.MATCH=0 ; IF USER='MKERBOW' THEN DEBUG
                  END
               END                       ; * IF C.WKLY.POSTAGE.FEE'R0' NE 0 OR Y.WKLY.POSTAGE.FEE'R0' NE 0
            END                          ; * IF SEPARATE.REGIONS

            IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK TO BEGIN DEBUG 177...')

            IF C.POSTAGE+0#0 OR Y.POSTAGE+0#0 THEN
               IF CCC.FLG=0 THEN         ; * JMK85
                  LINE=SPACE(11):"Postage Due                  "
                  LINE:=C.POSTAGE'R26,#30'
                  IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.POSTAGE'R26,#40'
                  GOSUB BUILD.EMAIL.REPORT
                  IF SEPARATE.REGIONS THEN
                     HTML<-1>='<TR><TD COLSPAN="2">Postage Due</TD>'
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':C.POSTAGE'R26,#30':'</TD>'
                     HTML<-1>='<TD COLSPAN="3"></TD></TR>'
                  END ELSE
                     HTML<-1>='<TR><TD COLSPAN="2">Postage Due</TD>'
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':C.POSTAGE'R26,#30':'</TD>'
                     HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':Y.POSTAGE'R26,#40':'</TD></TR>'
                  END
               END                       ; * JMK85

               IF COPIES.LOOP=1 AND CHECK.AR.BRIDGE AND C.POSTAGE+0 NE 0 THEN    ; * JMK32
                  AR.POSTAGE.LIST=''
                  AR.POSTAGE.LIST<-1>='7'
                  AR.POSTAGE.LIST<-1>='1007'
                  AR.POSTAGE.LIST<-1>='3007'
                  AR.POSTAGE.LIST<-1>='6007'
                  AR.POSTAGE.LIST<-1>='7007'
                  AR.POSTAGE=0
                  NAR.POSTAGE.ATT=DCOUNT(AR.POSTAGE.LIST,@AM)
                  FOR AR.POSTAGE.ATT=1 TO NAR.POSTAGE.ATT
                     AR.POSTAGE.CODE=AR.POSTAGE.LIST<AR.POSTAGE.ATT>
                     LOCATE AR.POSTAGE.CODE IN D.BRIDGE<1> SETTING AR.POS THEN
                        AR.POSTAGE+=D.BRIDGE<3,AR.POS>
                     END
                     LOCATE AR.POSTAGE.CODE IN PCL.SLS.ARRAY<1> SETTING PCL.AR.POS THEN
                        AR.POSTAGE-=PCL.SLS.ARRAY<2,PCL.AR.POS>
                     END
                  NEXT AR.POSTAGE.ATT
                  IF C.POSTAGE#AR.POSTAGE THEN BRIDGE.SUMMARY.MATCH=0 ; IF USER='MKERBOW' THEN DEBUG
               END
            END                          ; * IF C.POSTAGE+0#0 OR Y.POSTAGE+0#0

            IF SEPARATE.REGIONS THEN
               LOCATE REGS<1,REG.COUNT> IN C.LOGIS.FEE<3> SETTING POS.LOG.FEE THEN

                  IF C.LOGIS.FEE<4,POS.LOG.FEE>+0 NE 0 THEN  ; * JMK32
                     IF CCC.FLG=0 THEN   ; * JMK85
                        IF CLIENT NE "01700" THEN
                           LINE=SPACE(11):"Logistics Debit Memos        "
                        END ELSE
                           LINE=SPACE(11):"Logistics Fees               "
                        END
                        LINE:=C.LOGIS.FEE<4,POS.LOG.FEE>'R26,#30'
                        GOSUB BUILD.EMAIL.REPORT
                        IF CLIENT NE "01700" THEN
                           HTML<-1>='<TR><TD COLSPAN="2">Logistics Debit Memos</TD>'
                        END ELSE
                           HTML<-1>='<TR><TD COLSPAN="2">Logistics Fees</TD>'
                        END
                        HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':C.LOGIS.FEE<4,POS.LOG.FEE>'R26,#30':'</TD>'
                        HTML<-1>='<TD COLSPAN="3"></TD></TR>'
                     END                 ; * JMK85
                  END
               END
               LOCATE REGS<1,REG.COUNT> IN C.PROG.FEE<3> SETTING POS.PROG.FEE THEN

                  IF C.PROG.FEE<4,POS.PROG.FEE>+0 NE 0 THEN  ; * JMK32
                     IF CCC.FLG=0 THEN   ; * JMK85
                        LINE=SPACE(11):"Programming Fees             "
                        LINE:=C.PROG.FEE<4,POS.PROG.FEE>'R26,#30'
                        GOSUB BUILD.EMAIL.REPORT
                        HTML<-1>='<TR><TD COLSPAN="2">Programming Fees</TD>'
                        HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':C.PROG.FEE<4,POS.PROG.FEE>'R26,#30':'</TD>'
                        HTML<-1>='<TD COLSPAN="3"></TD></TR>'
                     END                 ; * JMK85
                  END
               END

               LOCATE REGS<1,REG.COUNT> IN C.MNGD.RTNS<3> SETTING POS.MNGD.RTNS THEN
                  IF C.MNGD.RTNS<4,POS.MNGD.RTNS>+0 NE 0 THEN
                     IF CCC.FLG=0 THEN
                        LINE=SPACE(11):"Managed Returns              "
                        LINE:=C.MNGD.RTNS<4,POS.MNGD.RTNS>'R26,#30'
                        GOSUB BUILD.EMAIL.REPORT
                        HTML<-1>='<TR><TD COLSPAN="2">Managed Returns</TD>'
                        HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':C.MNGD.RTNS<4,POS.MNGD.RTNS>'R26,#30':'</TD>'
                        HTML<-1>='<TD COLSPAN="3"></TD></TR>'
                     END
                  END
               END

               LOCATE REGS<1,REG.COUNT> IN C.CLAIMS.FEE<3> SETTING POS.CLAIMS.FEE THEN

                  IF C.CLAIMS.FEE<4,POS.CLAIMS.FEE>+0 NE 0 THEN        ; * JMK32
                     IF CCC.FLG=0 THEN   ; * JMK85
                        LINE=SPACE(11):"Claims Fee                   "
                        LINE:=C.CLAIMS.FEE<4,POS.CLAIMS.FEE>'R26,#30'
                        GOSUB BUILD.EMAIL.REPORT
                        HTML<-1>='<TR><TD COLSPAN="2">Claims Fee</TD>'
                        HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':C.CLAIMS.FEE<4,POS.CLAIMS.FEE>'R26,#30':'</TD>'
                        HTML<-1>='<TD COLSPAN="3"></TD></TR>'
                     END                 ; * JMK85
                  END
               END
            END ELSE

               IF C.LOGIS.FEE<2>+0 NE 0 OR Y.LOGIS.FEE+0 NE 0 THEN     ; * JMK32
                  IF CCC.FLG=0 THEN      ; * JMK85
                     IF CLIENT NE "01700" THEN
                        LINE=SPACE(11):"Logistics Debit Memos        "
                     END ELSE
                        LINE=SPACE(11):"Logistics Fees               "
                     END
                     LINE:=C.LOGIS.FEE<2>'R26,#30':Y.LOGIS.FEE'R26,#40'
                     GOSUB BUILD.EMAIL.REPORT
                     IF CLIENT NE "01700" THEN
                        HTML<-1>='<TR><TD COLSPAN="2">Logistics Debit Memos</TD>'
                     END ELSE
                        HTML<-1>='<TR><TD COLSPAN="2">Logistics Fees</TD>'
                     END
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':C.LOGIS.FEE<2>'R26,#30':'</TD>'
                     HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':Y.LOGIS.FEE'R26,#40':'</TD></TR>'
                  END                    ; * JMK85

                  IF COPIES.LOOP=1 AND CHECK.AR.BRIDGE AND C.LOGIS.FEE<2>+0 NE 0 THEN      ; * JMK32
                     AR.LOGIS.FEE.LIST=''
                     AR.LOGIS.FEE.LIST<-1>='12'
                     AR.LOGIS.FEE.LIST<-1>='96'
                     AR.LOGIS.FEE.LIST<-1>='1012'
                     AR.LOGIS.FEE.LIST<-1>='1096'
                     AR.LOGIS.FEE.LIST<-1>='3012'
                     AR.LOGIS.FEE.LIST<-1>='3096'
                     AR.LOGIS.FEE.LIST<-1>='6012'
                     AR.LOGIS.FEE.LIST<-1>='6096'
                     AR.LOGIS.FEE.LIST<-1>='7012'
                     AR.LOGIS.FEE.LIST<-1>='7096'
                     AR.LOGIS.FEE=0
                     NAR.LOGIS.FEE.ATT=DCOUNT(AR.LOGIS.FEE.LIST,@AM)
                     FOR AR.LOGIS.FEE.ATT=1 TO NAR.LOGIS.FEE.ATT
                        AR.LOGIS.FEE.CODE=AR.LOGIS.FEE.LIST<AR.LOGIS.FEE.ATT>
                        LOCATE AR.LOGIS.FEE.CODE IN D.BRIDGE<1> SETTING AR.POS THEN
                           AR.LOGIS.FEE+=D.BRIDGE<3,AR.POS>
                        END
                        LOCATE AR.LOGIS.FEE.CODE IN PCL.SLS.ARRAY<1> SETTING PCL.AR.POS THEN
                           AR.LOGIS.FEE-=PCL.SLS.ARRAY<2,PCL.AR.POS>
                        END
                     NEXT AR.LOGIS.FEE.ATT
                     IF C.LOGIS.FEE<2>#AR.LOGIS.FEE THEN BRIDGE.SUMMARY.MATCH=0 ; IF USER='MKERBOW' THEN DEBUG
                  END

               END                       ; * IF C.LOGIS.FEE<2>'R0' NE 0 OR Y.LOGIS.FEE'R0' NE 0

               IF C.PROG.FEE<2>+0 NE 0 OR Y.PROG.FEE+0 NE 0 THEN       ; * JMK32
                  IF CCC.FLG=0 THEN      ; * JMK85
                     LINE=SPACE(11):"Programming Fees             "
                     LINE:=C.PROG.FEE<2>'R26,#30':Y.PROG.FEE'R26,#40'
                     GOSUB BUILD.EMAIL.REPORT
                     HTML<-1>='<TR><TD COLSPAN="2">Programming Fees</TD>'
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':C.PROG.FEE<2>'R26,#30':'</TD>'
                     HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':Y.PROG.FEE'R26,#40':'</TD></TR>'
                  END                    ; * JMK85

                  IF COPIES.LOOP=1 AND CHECK.AR.BRIDGE AND C.PROG.FEE<2>+0 NE 0 THEN       ; * JMK32
                     AR.PROG.FEE.LIST=''
                     AR.PROG.FEE.LIST<-1>='135'
                     AR.PROG.FEE.LIST<-1>='1135'
                     AR.PROG.FEE.LIST<-1>='3135'
                     AR.PROG.FEE.LIST<-1>='6135'
                     AR.PROG.FEE.LIST<-1>='7135'
                     AR.PROG.FEE=0
                     NAR.PROG.FEE.ATT=DCOUNT(AR.PROG.FEE.LIST,@AM)
                     FOR AR.PROG.FEE.ATT=1 TO NAR.PROG.FEE.ATT
                        AR.PROG.FEE.CODE=AR.PROG.FEE.LIST<AR.PROG.FEE.ATT>
                        LOCATE AR.PROG.FEE.CODE IN D.BRIDGE<1> SETTING AR.POS THEN
                           AR.PROG.FEE+=D.BRIDGE<3,AR.POS>
                        END
                        LOCATE AR.PROG.FEE.CODE IN PCL.SLS.ARRAY<1> SETTING PCL.AR.POS THEN
                           AR.PROG.FEE-=PCL.SLS.ARRAY<2,PCL.AR.POS>
                        END
                     NEXT AR.PROG.FEE.ATT
                     IF C.PROG.FEE<2>#AR.PROG.FEE THEN BRIDGE.SUMMARY.MATCH=0 ; IF USER='MKERBOW' THEN DEBUG
                  END
               END                       ; * IF C.PROG.FEE<2>'R0' NE 0 OR Y.PROG.FEE'R0' NE 0

               IF C.MNGD.RTNS<2>+0 NE 0 OR Y.MNGD.RTNS+0 NE 0 THEN
                  IF CCC.FLG=0 THEN
                     LINE=SPACE(11):"Managed Returns              "
                     LINE:=C.MNGD.RTNS<2>'R26,#30':Y.MNGD.RTNS'R26,#40'
                     GOSUB BUILD.EMAIL.REPORT
                     HTML<-1>='<TR><TD COLSPAN="2">Managed Returns</TD>'
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':C.MNGD.RTNS<2>'R26,#30':'</TD>'
                     HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':Y.MNGD.RTNS'R26,#40':'</TD></TR>'
                  END

                  IF COPIES.LOOP=1 AND CHECK.AR.BRIDGE AND C.MNGD.RTNS<2>+0 NE 0 THEN
                     AR.MNGD.RTNS.LIST=''
                     AR.MNGD.RTNS.LIST<-1>='133'
                     AR.MNGD.RTNS.LIST<-1>='1133'
                     AR.MNGD.RTNS.LIST<-1>='3133'
                     AR.MNGD.RTNS.LIST<-1>='6133'
                     AR.MNGD.RTNS.LIST<-1>='7133'
                     AR.MNGD.RTNS=0
                     NAR.MNGD.RTNS.ATT=DCOUNT(AR.MNGD.RTNS.LIST,@AM)
                     FOR AR.MNGD.RTNS.ATT=1 TO NAR.MNGD.RTNS.ATT
                        AR.MNGD.RTNS.CODE=AR.MNGD.RTNS.LIST<AR.MNGD.RTNS.ATT>
                        LOCATE AR.MNGD.RTNS.CODE IN D.BRIDGE<1> SETTING AR.POS THEN
                           AR.MNGD.RTNS+=D.BRIDGE<3,AR.POS>
                        END
                        LOCATE AR.MNGD.RTNS.CODE IN PCL.SLS.ARRAY<1> SETTING PCL.AR.POS THEN
                           AR.MNGD.RTNS-=PCL.SLS.ARRAY<2,PCL.AR.POS>
                        END
                     NEXT AR.MNGD.RTNS.ATT
                     IF C.MNGD.RTNS<2>#AR.MNGD.RTNS THEN BRIDGE.SUMMARY.MATCH=0 ; IF USER='MKERBOW' THEN DEBUG
                  END
               END

               IF C.CLAIMS.FEE<2>+0 NE 0 OR Y.CLAIMS.FEE+0 NE 0 THEN   ; * JMK32
                  IF CCC.FLG=0 THEN      ; * JMK85
                     LINE=SPACE(11):"Claims Fee                   "
                     LINE:=C.CLAIMS.FEE<2>'R26,#30':Y.CLAIMS.FEE'R26,#40'
                     GOSUB BUILD.EMAIL.REPORT
                     HTML<-1>='<TR><TD COLSPAN="2">Claims Fee</TD>'
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':C.CLAIMS.FEE<2>'R26,#30':'</TD>'
                     HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':Y.CLAIMS.FEE'R26,#40':'</TD></TR>'
                  END                    ; * JMK85

                  IF COPIES.LOOP=1 AND CHECK.AR.BRIDGE AND C.CLAIMS.FEE<2>+0 NE 0 THEN     ; * JMK32
                     AR.CLAIMS.FEE.LIST=''
                     AR.CLAIMS.FEE.LIST<-1>='131'
                     AR.CLAIMS.FEE.LIST<-1>='1131'
                     AR.CLAIMS.FEE.LIST<-1>='3131'
                     AR.CLAIMS.FEE.LIST<-1>='6131'
                     AR.CLAIMS.FEE.LIST<-1>='7131'
                     AR.CLAIMS.FEE=0
                     NAR.CLAIMS.FEE.ATT=DCOUNT(AR.CLAIMS.FEE.LIST,@AM)
                     FOR AR.CLAIMS.FEE.ATT=1 TO NAR.CLAIMS.FEE.ATT
                        AR.CLAIMS.FEE.CODE=AR.CLAIMS.FEE.LIST<AR.CLAIMS.FEE.ATT>
                        LOCATE AR.CLAIMS.FEE.CODE IN D.BRIDGE<1> SETTING AR.POS THEN
                           AR.CLAIMS.FEE+=D.BRIDGE<3,AR.POS>
                        END
                        LOCATE AR.CLAIMS.FEE.CODE IN PCL.SLS.ARRAY<1> SETTING PCL.AR.POS THEN
                           AR.CLAIMS.FEE-=PCL.SLS.ARRAY<2,PCL.AR.POS>
                        END
                     NEXT AR.CLAIMS.FEE.ATT
                     IF C.CLAIMS.FEE<2>#AR.CLAIMS.FEE THEN BRIDGE.SUMMARY.MATCH=0 ; IF USER='MKERBOW' THEN DEBUG
                  END
               END                       ; * IF C.CLAIMS.FEE<2>'R0' NE 0 OR Y.CLAIMS.FEE'R0' NE 0
            END                          ; * IF SEPARATE.REGIONS

            IF SEPARATE.REGIONS THEN

               IF C.ADJUSTS+0 NE 0 THEN  ; * JMK32
                  IF CCC.FLG=0 THEN      ; * JMK85
                     LINE=SPACE(11):"Credit memos                 "
                     LINE:=C.ADJUSTS'R26,#30'
                     GOSUB BUILD.EMAIL.REPORT
                     HTML<-1>='<TR><TD COLSPAN="2">Credit memos</TD>'
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':C.ADJUSTS'R26,#30':'</TD>'
                     HTML<-1>='<TD COLSPAN="3"></TD></TR>'
                  END                    ; * JMK85
               END
            END ELSE

               IF C.ADJUSTS+0 NE 0 OR Y.ADJUSTS+0 NE 0 THEN  ; * JMK32
                  IF CCC.FLG=0 THEN      ; * JMK85
                     LINE=SPACE(11):"Credit memos                 "
                     LINE:=C.ADJUSTS'R26,#30':Y.ADJUSTS'R26,#40'
                     GOSUB BUILD.EMAIL.REPORT
                     HTML<-1>='<TR><TD COLSPAN="2">Credit memos</TD>'
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':C.ADJUSTS'R26,#30':'</TD>'
                     HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':Y.ADJUSTS'R26,#40':'</TD></TR>'
                  END                    ; * JMK85
               END
            END

            IF CCC.FLG=0 THEN            ; * JMK85
               IF SEPARATE.REGIONS THEN
                  LINE=DASH.1.25SP.COLS
                  GOSUB BUILD.EMAIL.REPORT
               END ELSE
                  LINE=DASH.2.25SP.COLS
                  GOSUB BUILD.EMAIL.REPORT
               END

               IF SEPARATE.REGIONS THEN
                  HTML<-1>='<TR><TD COLSPAN="4" ALIGN="RIGHT">---------------</TD>'
                  HTML<-1>='<TD COLSPAN="3"></TD></TR>'
               END ELSE
                  HTML<-1>='<TR><TD COLSPAN="4" ALIGN="RIGHT">---------------</TD>'
                  HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">---------------</TD></TR>'
               END
            END                          ; * JMK85

            TOTAL=C.PROCESS.FEE+C.SERVICE.FEE+C.LOGISTICS.FEE+C.WKLY.POSTAGE.FEE+C.UPS.FEE+C.PRE.AUDIT.FEE

            TOTAL=TOTAL+C.POSTAGE+C.ADJUSTS

            IF SEPARATE.REGIONS THEN
               LOCATE REGS<1,REG.COUNT> IN C.LOGIS.FEE<3> SETTING POS.LOG.FEE THEN
                  TOTAL=TOTAL+C.LOGIS.FEE<4,POS.LOG.FEE>
               END
               LOCATE REGS<1,REG.COUNT> IN C.PROG.FEE<3> SETTING POS.PROG.FEE THEN
                  TOTAL=TOTAL+C.PROG.FEE<4,POS.PROG.FEE>
               END
               LOCATE REGS<1,REG.COUNT> IN C.MNGD.RTNS<3> SETTING POS.MNGD.RTNS THEN
                  TOTAL=TOTAL+C.MNGD.RTNS<4,POS.MNGD.RTNS>
               END
               LOCATE REGS<1,REG.COUNT> IN C.CLAIMS.FEE<3> SETTING POS.CLAIMS.FEE THEN
                  TOTAL=TOTAL+C.CLAIMS.FEE<4,POS.CLAIMS.FEE>
               END
            END ELSE
               TOTAL=TOTAL+C.LOGIS.FEE<2>
               TOTAL=TOTAL+C.PROG.FEE<2>
               TOTAL=TOTAL+C.MNGD.RTNS<2>
               TOTAL=TOTAL+C.CLAIMS.FEE<2>
            END                          ; * IF SEPARATE.REGIONS
            IF NOT(NEW.SOC) THEN
               TOTAL=TOTAL+C.OVER.COM+C.UPS.COM+C.CONS.COM+C.DISC.COM
            END
            IF COPIES.LOOP=1 THEN
               IF CLIENT="00883" THEN
                  IF SEPARATE.REGIONS THEN
                     ECD=REGS<1,REG.COUNT>'R%2'
                  END ELSE
                     ECD='ALL'
                  END

                  ECD=ECD:'0570112'
               END ELSE
                  ECD='Postage and Fees'
               END                       ; * IF CLIENT="00883"
               ESB=ECD
               LOCATE(ECD,DIST.MIDS;EVL;'AR') ELSE
                  INS ECD BEFORE DIST.MIDS<EVL>
                  INS ECD BEFORE DIST.IDS<EVL>
                  INS 0 BEFORE DIST.AMTS<EVL>
               END
               LOCATE ESB IN DIST.IDS<EVL>,1 BY 'AR' SETTING SVL ELSE
                  INS ESB BEFORE DIST.IDS<EVL,SVL>
                  INS 0 BEFORE DIST.AMTS<EVL,SVL>
               END
               DIST.AMTS<EVL,SVL>=DIST.AMTS<EVL,SVL>+TOTAL
               IF NOT(NEW.SOC) THEN
                  POSTAGE.AND.FEE=TOTAL-C.OVER.COM-C.UPS.COM-C.CONS.COM-C.DISC.COM
               END ELSE
                  POSTAGE.AND.FEE=TOTAL
               END
               DIST.AMTS<EVL,2>=DIST.AMTS<EVL,2>+POSTAGE.AND.FEE
               LOCATE(ECD,TOTAL.DIST.MIDS;EVL;'AR') ELSE
                  INS ECD BEFORE TOTAL.DIST.MIDS<EVL>
                  INS ECD BEFORE TOTAL.DIST.IDS<EVL>
                  INS 0 BEFORE TOTAL.DIST.AMTS<EVL>
               END
               LOCATE ESB IN TOTAL.DIST.IDS<EVL>,1 BY 'AR' SETTING SVL ELSE
                  INS ESB BEFORE TOTAL.DIST.IDS<EVL,SVL>
                  INS 0 BEFORE TOTAL.DIST.AMTS<EVL,SVL>
               END
               TOTAL.DIST.AMTS<EVL,SVL>=TOTAL.DIST.AMTS<EVL,SVL>+TOTAL+PARTIAL.PENNY
               TOTAL.DIST.AMTS<EVL,2>=TOTAL.DIST.AMTS<EVL,2>+POSTAGE.AND.FEE
               PARTIAL.PENNY=TOTAL.DIST.AMTS<EVL,SVL>-OCONV(TOTAL.DIST.AMTS<EVL,SVL>,'MR0')
            END                          ; * IF COPIES.LOOP=1

            CCC.TOTAL=0                  ; * JMK85
            IF NEW.SOC THEN
               TOTAL+=FCD
               CCC.TOTAL+=FRT.PAID       ; * JMK85

               TOTAL=TOTAL-NONF.AMT      ; * Remove freight charges if voucher ; * JMK94
            END ELSE

               TOTAL=TOTAL+FCD-NONF.AMT  ; * JMK94
            END


            Y.TOTAL=Y.PROCESS.FEE+Y.SERVICE.FEE+Y.UPS.FEE+Y.LOGISTICS.FEE+Y.WKLY.POSTAGE.FEE
            Y.TOTAL=Y.TOTAL+Y.POSTAGE+Y.LOGIS.FEE+Y.CLAIMS.FEE+Y.ADJUSTS
            Y.TOTAL+=Y.PROCESS.FEE       ; * JMK39
            IF NOT(NEW.SOC) THEN
               Y.TOTAL=Y.TOTAL+Y.OVER.COM+Y.UPS.COM+Y.CONS.COM+Y.DISC.COM
            END

            IF NEW.SOC THEN
               Y.TOTAL+=FCD.Y
               CCC.Y.TOTAL=Y.FRT.PAID    ; * JMK85

               Y.TOTAL=Y.TOTAL-Y.NONF.AMT          ; * JMK94
            END ELSE

               Y.TOTAL=Y.TOTAL+FCD.Y-Y.NONF.AMT    ; * JMK94
            END
            IF COPIES.LOOP=1 AND CHECK.AR.BRIDGE THEN
               NUM.OF.AR=DCOUNT(D.BRIDGE<3>,@VM)
               AR.TOTAL=0
               FOR AR.NUM=1 TO NUM.OF.AR
                  AR.TOTAL=AR.TOTAL+D.BRIDGE<3,AR.NUM>
               NEXT AR.NUM

               IF AR.TOTAL#TOTAL-C.ADJUSTS THEN BRIDGE.SUMMARY.MATCH=0 ; IF USER='MKERBOW' THEN DEBUG

            END                          ; * IF COPIES.LOOP=1 AND CHECK.AR.BRIDGE
            IF NOT(BRIDGE.SUMMARY.MATCH) AND (SEPARATE.REGIONS=0) THEN
               CALL ELINE('Summary of charges do not match AR information - Call IS Department.')
               LINE='*******************************************************************************'
               GOSUB BUILD.EMAIL.REPORT
               LINE='*                                                                             *'
               GOSUB BUILD.EMAIL.REPORT
               LINE='*           ERROR Summary of Charges does not equal AR information            *'
               GOSUB BUILD.EMAIL.REPORT
               LINE='*                                                                             *'
               GOSUB BUILD.EMAIL.REPORT
               LINE='*******************************************************************************'
               GOSUB BUILD.EMAIL.REPORT
               IF COPIES.LOOP=1 THEN
                  SUBJ='Summary of Charges does not match AR information'
                  TEXT=USER:' ran the Weekly Report which contained a Summary of Charges'

                  TEXT<1,-1>='that does not match the AR information for client: ':CLIENT:' ':CLIENT.NAME:'.'  ; * JMK17
                  MVIN=''
                  MVIN<1>='DFriend@afs.net'

                  MVIN<4>='AFS'
                  MVIN<5>=SUBJ
                  MVIN<6>=TEXT
                  MVIN<8>='PRIO'
                  IF CLIENT = "30032" THEN MVIN<8,-1> = "NODEL"        ; * NPR12
                  CALL SENDMAIL(MVIN,MVOUT)
                  NO.EMAIL=1
                  EMAIL.ERRORS<-1>=TEXT<1>
               END                       ; * IF COPIES.LOOP=1
            END                          ; * IF NOT(BRIDGE.SUMMARY.MATCH) AND (SEPARATE.REGIONS=0)
            PREV.TOTAL=0                 ; * JMK01
            UNAP.CREDIT=0                ; * JMK01
            UNAP.LIST=''                 ; * JMK12
            UNAP.PYMTS=''                ; * JMK28
            GTOTAL=0                     ; * JMK01
            IF (SEPARATE.REGIONS=0) THEN           ; * JMK40
               CUST.ID=CLIENT 'R%12'     ; * JMK01
               READ CUST.REC FROM F.AR.CUST,CUST.ID THEN     ; * JMK01
                  PREV.TOTAL=CUST.REC<31>+0        ; * JMK01

                  PREV.TOTAL=0           ; * JMK02

                  UCRD.LST=CUST.REC<32>  ; * JMK04
                  UCRD.NVAL=DCOUNT(UCRD.LST<1>,@VM)          ; * JMK04
                  FOR UCRD.VAL=1 TO UCRD.NVAL      ; * JMK04
                     AR.TRANS.ID=UCRD.LST<1,UCRD.VAL>        ; * JMK04
                     READ AR.TRANS.REC FROM F.AR.TRANS,AR.TRANS.ID ELSE AR.TRANS.REC=''    ; * JMK04
                     READ FB.USED.CREDIT.REC FROM F.FB.USED.CREDIT,AR.TRANS.ID ELSE FB.USED.CREDIT.REC=''      ; * JMK04
                     UNAP.VALID=1        ; * JMK04
                     IF AR.TRANS.REC<33>='N' THEN UNAP.VALID=0         ; * JMK19

                     IF AR.TRANS.REC<34>[1,1]='U' AND AR.TRANS.REC<9> NE "0" THEN          ; * JMK28  ;*NPR06
                        UNAP.PYMTS<1,-1>=AR.TRANS.REC<4>     ; * JMK28 - TRANS DATE
                        UNAP.PYMTS<2,-1>=AR.TRANS.REC<7>     ; * JMK28 - REFERENCE OR CHECK NUMBER
                        UNAP.PYMTS<3,-1>=AR.TRANS.REC<5>     ; * JMK28 - Original TRANS AMOUNT
                        CI.NOTES = AR.TRANS.REC<30>          ; * NPR01
                        IF CI.NOTES NE "" THEN     ; * NPR01
                           CONVERT @VM TO " " IN CI.NOTES    ; * NPR01
                           WVIN = TRIM(CI.NOTES)   ; * NPR01
                           WVIN<2> = "70"          ; * NPR01
                           CALL WRAP.TEXT(WVIN,WVOUT)        ; * NPR01
                           CI.NOTES = WVOUT<1>     ; * NPR01
                           CONVERT @VM TO @SVM IN CI.NOTES   ; * NPR01
                        END              ; * NPR01
                        UNAP.PYMTS<4,-1> = CI.NOTES:" "      ; * NPR01
                     END                 ; * JMK28
                     IF FB.USED.CREDIT.REC#'' THEN UNAP.VALID=0        ; * JMK04
                     IF FB.USED.CREDIT.REC<1>=BEG.DATE AND FB.USED.CREDIT.REC<2>=END.DATE THEN       ; * JMK04
                        UNAP.VALID=1     ; * JMK04
                     END                 ; * JMK04
                     IF UNAP.VALID THEN  ; * JMK04
                        UNAP.LIST<1,-1>=AR.TRANS.ID          ; * JMK12
                        UNAP.LIST<2,-1>=-AR.TRANS.REC<9>     ; * JMK12
                        UNAP.CREDIT=UNAP.CREDIT-AR.TRANS.REC<9>        ; * JMK04
                        IF FB.USED.CREDIT.REC='' THEN        ; * JMK04
                           IF FROM.PROCESS OR AUTO THEN      ; * JMK13
                              FB.USED.CREDIT.REC<1>=BEG.DATE           ; * JMK04
                              FB.USED.CREDIT.REC<2>=END.DATE           ; * JMK04
                              FB.USED.CREDIT.REC<3>=USER     ; * JMK04
                              FB.USED.CREDIT.REC<4>=DATE()   ; * JMK04
                              WRITE FB.USED.CREDIT.REC ON F.FB.USED.CREDIT,AR.TRANS.ID     ; * JMK04
                              UP.ARRAY='*NEW*'     ; * JMK04
                              UP.ID='FB.USED.CREDIT*':AR.TRANS.ID      ; * JMK04
                              READV DUMMY FROM F.UP,UP.ID,1 ELSE       ; * JMK04
                                 WRITE UP.ARRAY ON F.UP,UP.ID          ; * JMK04
                              END        ; * JMK04
                           END           ; * JMK13
                        END              ; * JMK04
                     END                 ; * JMK04
                  NEXT UCRD.VAL          ; * JMK04
               END                       ; * JMK01
            END                          ; * JMK40
            INV.TOTAL=TOTAL              ; * JMK47
            GTOTAL=TOTAL+PREV.TOTAL+UNAP.CREDIT    ; * JMK01
            CCC.GTOTAL=CCC.TOTAL+PREV.TOTAL+UNAP.CREDIT      ; * JMK85
            IF FROM.PROCESS OR AUTO THEN           ; * JMK01
               IF PREV.TOTAL#0 OR UNAP.CREDIT#0 THEN         ; * JMK02
                  IF NEW.SOC THEN        ; * JMK01
                     LINE=SPACE(11):"Subtotal Amount Due          "    ; * JMK01
                  END ELSE               ; * JMK01
                     LINE=SPACE(11):"Subtotal Amount Due          "    ; * JMK01
                  END                    ; * JMK01
                  LINE:=TOTAL'R26,#30'   ; * JMK01
                  IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.TOTAL'R26,#40'           ; * JMK01
                  GOSUB BUILD.EMAIL.REPORT         ; * JMK01

                  IF SEPARATE.REGIONS THEN         ; * JMK01

                  END ELSE               ; * JMK01
                     HTML<-1>='<TR><TD COLSPAN="2"><B>Subtotal Amount Due</B></TD>'        ; * JMK01
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT"><B>':TOTAL'R26,#30':'</B></TD>'         ; * JMK01
                     HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT"><B>':Y.TOTAL'R26,#40':'</B></TD></TR>'  ; * JMK01
                  END                    ; * JMK01

                  IF PREV.TOTAL#0 THEN   ; * JMK02
                     IF NEW.SOC THEN     ; * JMK01
                        LINE=SPACE(11):"Previous Amount Due          "           ; * JMK01
                     END ELSE            ; * JMK01
                        LINE=SPACE(11):"Previous Amount Due          "           ; * JMK01
                     END                 ; * JMK01
                     LINE:=PREV.TOTAL'R26,#30'     ; * JMK01
                     GOSUB BUILD.EMAIL.REPORT      ; * JMK01

                     IF SEPARATE.REGIONS THEN      ; * JMK01

                     END ELSE            ; * JMK01
                        HTML<-1>='<TR><TD COLSPAN="2"><B>Previous Amount Due</B></TD>'     ; * JMK01
                        HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT"><B>':PREV.TOTAL'R26,#30':'</B></TD>'           ; * JMK01
                        HTML<-1>='<TD COLSPAN="3"></TD></TR>'          ; * JMK01
                     END                 ; * JMK01
                  END                    ; * JMK02

                  IF UNAP.CREDIT#0 THEN  ; * JMK02
                     IF NEW.SOC THEN     ; * JMK01
                        LINE=SPACE(11):"Unapplied Credits            "           ; * JMK01
                     END ELSE            ; * JMK01
                        LINE=SPACE(11):"Unapplied Credits            "           ; * JMK01
                     END                 ; * JMK01
                     LINE:=UNAP.CREDIT'R26,#30'    ; * JMK01
                     GOSUB BUILD.EMAIL.REPORT      ; * JMK01

                     IF SEPARATE.REGIONS THEN      ; * JMK01

                     END ELSE            ; * JMK01
                        HTML<-1>='<TR><TD COLSPAN="2"><B>Unapplied Credits</B></TD>'       ; * JMK01
                        HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT"><B>':UNAP.CREDIT'R26,#30':'</B></TD>'          ; * JMK01
                        HTML<-1>='<TD COLSPAN="3"></TD></TR>'          ; * JMK01
                     END                 ; * JMK01
                  END                    ; * JMK02

                  LINE=SPACE(57):"---------------"           ; * JMK01
                  GOSUB BUILD.EMAIL.REPORT         ; * JMK01

                  IF SEPARATE.REGIONS THEN         ; * JMK01

                  END ELSE               ; * JMK01
                     HTML<-1>='<TR><TD COLSPAN="4" ALIGN="RIGHT">--------</TD>'  ; * JMK01
                     HTML<-1>='<TD COLSPAN="3"></TD></TR>'   ; * JMK01
                  END                    ; * JMK01
               END                       ; * JMK02

               IF REBATE.FLG THEN        ; * JMK88
                  IF SEPARATE.REGIONS THEN         ; * JMK88
                     LINE=SPACE(11):"Sub Total                    "    ; * JMK88
                     LINE:=GTOTAL+FCD.RB-FCD'R26,#30'        ; * JMK88
                     GOSUB BUILD.EMAIL.REPORT      ; * JMK88

                     HTML<-1>='<TR><TD COLSPAN="2">Sub Total               </TD>'          ; * JMK88
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':GTOTAL+FCD.RB-FCD'R26,#30':'</TD>'    ; * JMK88
                     HTML<-1>='<TD COLSPAN="3"></TD></TR>'   ; * JMK88

                     LINE=SPACE(57):"---------------"        ; * JMK88
                     GOSUB BUILD.EMAIL.REPORT      ; * JMK88
                     HTML<-1>='<TR><TD COLSPAN="4" ALIGN="RIGHT">---------------</TD>'     ; * JMK88
                     HTML<-1>='<TD COLSPAN="3"></TD></TR>'   ; * JMK88

                     LINE=SPACE(11):"FY09 Functional Rebate       "    ; * JMK88
                     LINE:=FCD.RB-FCD'R26,#30'     ; * JMK88
                     GOSUB BUILD.EMAIL.REPORT      ; * JMK88
                     HTML<-1>='<TR><TD COLSPAN="2">FY09 Functional Rebate  </TD>'          ; * JMK88
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':FCD.RB-FCD'R26,#30':'</TD>'           ; * JMK88
                     HTML<-1>='<TD COLSPAN="3"></TD></TR>'   ; * JMK88

                     LINE=SPACE(57):"---------------"        ; * JMK88
                     GOSUB BUILD.EMAIL.REPORT      ; * JMK88
                     HTML<-1>='<TR><TD COLSPAN="4" ALIGN="RIGHT">---------------</TD>'     ; * JMK88
                     HTML<-1>='<TD COLSPAN="3"></TD></TR>'   ; * JMK88
                  END ELSE               ; * JMK88
                     LINE=SPACE(11):"Sub Total                    "    ; * JMK88
                     LINE:=GTOTAL+FCD.RB-FCD'R26,#30'        ; * JMK88
                     LINE:=Y.TOTAL+FCD.Y.RB-FCD.Y'R26,#40'   ; * JMK88
                     GOSUB BUILD.EMAIL.REPORT      ; * JMK88
                     HTML<-1>='<TR><TD COLSPAN="2">Sub Total               </TD>'          ; * JMK88
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':GTOTAL+FCD.RB-FCD'R26,#30':'</TD>'    ; * JMK88
                     HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':Y.TOTAL+FCD.Y.RB-FCD.Y'R26,#40':'</TD></TR>'    ; * JMK88

                     LINE=DASH.2.25SP.COLS         ; * JMK88
                     GOSUB BUILD.EMAIL.REPORT      ; * JMK88
                     HTML<-1>='<TR><TD COLSPAN="4" ALIGN="RIGHT">---------------</TD>'     ; * JMK88
                     HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">---------------</TD></TR>'    ; * JMK88

                     LINE=SPACE(11):"FY09 Functional Rebate       "    ; * JMK88
                     LINE:=FCD.RB-FCD'R26,#30'     ; * JMK88
                     LINE:=FCD.Y.RB-FCD.Y'R26,#40'           ; * JMK88
                     GOSUB BUILD.EMAIL.REPORT      ; * JMK88
                     HTML<-1>='<TR><TD COLSPAN="2">FY09 Functional Rebate  </TD>'          ; * JMK88
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':FCD-FCD.RB'R26,#30':'</TD>'           ; * JMK88
                     HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':FCD.Y-FCD.Y.RB'R26,#40':'</TD></TR>'  ; * JMK88

                     LINE=DASH.2.25SP.COLS         ; * JMK88
                     GOSUB BUILD.EMAIL.REPORT      ; * JMK88
                     HTML<-1>='<TR><TD COLSPAN="4" ALIGN="RIGHT">---------------</TD>'     ; * JMK88
                     HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">---------------</TD></TR>'    ; * JMK88
                  END                    ; * JMK88
               END                       ; * JMK88

               IF NEW.SOC THEN           ; * JMK01
                  IF GTOTAL >= 0 THEN    ; * JMK04
                     LINE=SPACE(11):"*** Total Amount Due ***     "    ; * JMK01
                  END ELSE               ; * JMK04
                     LINE=SPACE(11):"*** Total Credit ***         "    ; * JMK04
                  END                    ; * JMK04
               END ELSE                  ; * JMK01
                  IF GTOTAL >= 0 THEN    ; * JMK04
                     LINE=SPACE(11):"Total Amount Due             "    ; * JMK01
                  END ELSE               ; * JMK04
                     LINE=SPACE(11):"Total Credit                 "    ; * JMK04
                  END                    ; * JMK04
               END                       ; * JMK01
               IF CCC.FLG=1 THEN         ; * JMK85
                  LINE:=CCC.GTOTAL'R26,#30'        ; * JMK85
               END ELSE                  ; * JMK85
                  LINE:=GTOTAL'R26,#30'  ; * JMK01
               END                       ; * JMK85
               GOSUB BUILD.EMAIL.REPORT  ; * JMK01

               IF SEPARATE.REGIONS THEN  ; * JMK01
                  IF GTOTAL >= 0 THEN    ; * JMK04; * JMK10
                     HTML<-1>='<TR><TD COLSPAN="2"><B>*** Total Amount Due ***</B></TD>'   ; * JMK01
                  END ELSE               ; * JMK04
                     HTML<-1>='<TR><TD COLSPAN="2"><B>*** Total Credit ***</B></TD>'       ; * JMK04
                  END                    ; * JMK04
                  IF CCC.FLG=1 THEN      ; * JMK85
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT"><B>':CCC.GTOTAL'R26,#30':'</B></TD>'    ; * JMK85
                  END ELSE               ; * JMK85
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT"><B>':GTOTAL'R26,#30':'</B></TD>'        ; * JMK01
                  END                    ; * JMK85
                  HTML<-1>='<TD COLSPAN="3"></TD></TR>'      ; * JMK01
               END ELSE                  ; * JMK01
                  IF GTOTAL >= 0 THEN    ; * JMK04
                     HTML<-1>='<TR><TD COLSPAN="2"><B>*** Total Amount Due ***</B></TD>'   ; * JMK01
                  END ELSE               ; * JMK04
                     HTML<-1>='<TR><TD COLSPAN="2"><B>*** Total Credit ***</B></TD>'       ; * JMK04
                  END                    ; * JMK04
                  IF CCC.FLG=1 THEN      ; * JMK85
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT"><B>':CCC.GTOTAL'R26,#30':'</B></TD>'    ; * JMK85
                  END ELSE               ; * JMK85
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT"><B>':GTOTAL'R26,#30':'</B></TD>'        ; * JMK01
                  END                    ; * JMK85
                  HTML<-1>='<TD COLSPAN="3"></TD></TR>'      ; * JMK01
               END                       ; * JMK01

               LINE=SPACE(57):"==============="    ; * JMK01
               GOSUB BUILD.EMAIL.REPORT  ; * JMK01

               IF SEPARATE.REGIONS THEN  ; * JMK01
                  HTML<-1>='<TR><TD COLSPAN="4" ALIGN="RIGHT">========</TD>'     ; * JMK01
                  HTML<-1>='<TD COLSPAN="3"></TD></TR>'      ; * JMK01
               END ELSE                  ; * JMK01
                  HTML<-1>='<TR><TD COLSPAN="4" ALIGN="RIGHT">========</TD>'     ; * JMK01
                  HTML<-1>='<TD COLSPAN="3"></TD></TR>'      ; * JMK01
               END                       ; * JMK01
            END ELSE                     ; * JMK01
               IF NEW.SOC THEN
                  IF TOTAL >= 0 THEN     ; * JMK04
                     LINE=SPACE(11):"*** Total Amount Due ***     "
                  END ELSE               ; * JMK04
                     LINE=SPACE(11):"*** Total Credit ***         "    ; * JMK04
                  END                    ; * JMK04
               END ELSE
                  IF TOTAL >= 0 THEN     ; * JMK04
                     LINE=SPACE(11):"Total Amount Due             "
                  END ELSE               ; * JMK04
                     LINE=SPACE(11):"Total Credit                 "    ; * JMK04
                  END                    ; * JMK04
               END
               LINE:=TOTAL'R26,#30'
               IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.TOTAL'R26,#40'
               GOSUB BUILD.EMAIL.REPORT

               IF SEPARATE.REGIONS THEN
                  IF TOTAL >= 0 THEN     ; * JMK04
                     HTML<-1>='<TR><TD COLSPAN="2"><B>*** Total Amount Due ***</B></TD>'
                  END ELSE               ; * JMK04
                     HTML<-1>='<TR><TD COLSPAN="2"><B>*** Total Credit ***</B></TD>'       ; * JMK04
                  END                    ; * JMK04
                  IF CCC.FLG=1 THEN      ; * JMK85
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT"><B>':CCC.TOTAL'R26,#30':'</B></TD>'     ; * JMK85
                  END ELSE               ; * JMK85
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT"><B>':TOTAL'R26,#30':'</B></TD>'
                  END                    ; * JMK85
                  HTML<-1>='<TD COLSPAN="3"></TD></TR>'
               END ELSE
                  IF TOTAL >= 0 THEN     ; * JMK04
                     HTML<-1>='<TR><TD COLSPAN="2"><B>*** Total Amount Due ***</B></TD>'
                  END ELSE               ; * JMK04
                     HTML<-1>='<TR><TD COLSPAN="2"><B>*** Total Credit ***</B></TD>'       ; * JMK04
                  END                    ; * JMK04
                  IF CCC.FLG=1 THEN      ; * JMK85
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT"><B>':CCC.TOTAL'R26,#30':'</B></TD>'     ; * JMK85
                     HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT"><B>':CCC.Y.TOTAL'R26,#40':'</B></TD></TR>'        ; * JMK85
                  END ELSE               ; * JMK85
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT"><B>':TOTAL'R26,#30':'</B></TD>'
                     HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT"><B>':Y.TOTAL'R26,#40':'</B></TD></TR>'
                  END                    ; * JMK85
               END

               LINE=SPACE(57):"==============="
               IF NOT(SEPARATE.REGIONS) THEN LINE:=SPACE(25):"==============="
               GOSUB BUILD.EMAIL.REPORT

               IF SEPARATE.REGIONS THEN
                  HTML<-1>='<TR><TD COLSPAN="4" ALIGN="RIGHT">========</TD>'
                  HTML<-1>='<TD COLSPAN="3"></TD></TR>'
               END ELSE
                  HTML<-1>='<TR><TD COLSPAN="4" ALIGN="RIGHT">========</TD>'
                  HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">========</TD></TR>'
               END
            END                          ; * JMK01

            IF COPIES.LOOP=1 AND FROM.PROCESS THEN
               READ DSUMMARY FROM F.SUMMARY,END.DATE ELSE DSUMMARY=''
               LOCATE CLIENT IN DSUMMARY<2> BY 'AR' SETTING FB.POS THEN
                  IF NOT(FROM.PROCESS AND SEPARATE.REGIONS) THEN
                     CALL ELINE(CLIENT:' has already been processed for this day - Call IS Department.')
                  END
               END ELSE
                  DSUMMARY<1>=DSUMMARY<1>+TOTAL
                  INS CLIENT BEFORE DSUMMARY<2,FB.POS>
                  INS TOTAL BEFORE DSUMMARY<3,FB.POS>
                  WRITE DSUMMARY ON F.SUMMARY,END.DATE
               END
            END                          ; * IF COPIES.LOOP=1 AND FROM.PROCESS

            IF SYSTEM(4) LT 7 THEN PAGE

            LINE=' '
            GOSUB BUILD.EMAIL.REPORT
            HTML<-1>='<TR><TD COLSPAN="7">&nbsp;</TD></TR>'

            LINE=' '
            GOSUB BUILD.EMAIL.REPORT
            HTML<-1>='<TR><TD COLSPAN="7">&nbsp;</TD></TR>'

            LINE=SPACE(11):"NOTES:"
            GOSUB BUILD.EMAIL.REPORT
            HTML<-1>='<TR><TD COLSPAN="7">NOTES:</TD></TR>'

            LINE=SPACE(18):"Freight Balance Due   "
            LINE:=FBD'R26,#30'
            IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.FBD'R26,#40'
            GOSUB BUILD.EMAIL.REPORT

            IF SEPARATE.REGIONS THEN
               HTML<-1>='<TR><TD COLSPAN="2">&nbsp;&nbsp;&nbsp;Freight Balance Due</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':FBD'R26,#30':'</TD>'
               HTML<-1>='<TD COLSPAN="3"></TD></TR>'
            END ELSE
               HTML<-1>='<TR><TD COLSPAN="2">&nbsp;&nbsp;&nbsp;Freight Balance Due</TD>'
               HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':FBD'R26,#30':'</TD>'
               HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':Y.FBD'R26,#40':'</TD></TR>'
            END

            IF FAD#0 OR Y.FAD#0 THEN
               LINE=SPACE(18):"Freight Additional Due":FAD'R26,#30'
               IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.FAD'R26,#40'
               GOSUB BUILD.EMAIL.REPORT
               IF SEPARATE.REGIONS THEN
                  HTML<-1>='<TR><TD COLSPAN="2">&nbsp;&nbsp;&nbsp;Freight Additional Due</TD>'
                  HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':FAD'R26,#30':'</TD>'
                  HTML<-1>='<TD COLSPAN="3"></TD></TR>'
               END ELSE
                  HTML<-1>='<TR><TD COLSPAN="2">&nbsp;&nbsp;&nbsp;Freight Additional Due</TD>'
                  HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':FAD'R26,#30':'</TD>'
                  HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':Y.FAD'R26,#40':'</TD></TR>'
               END
            END

            LINE=' '
            GOSUB BUILD.EMAIL.REPORT
            HTML<-1>='<TR><TD COLSPAN="7">&nbsp;</TD></TR>'


            IF UNAP.PYMTS#'' AND NOT(SEPARATE.REGIONS) AND UNAP.CREDIT+0#0 THEN  ; * JMK28 ; * JMK38 ; * JMK52
               READ WORDING FROM F.TABLES,'OP.WORDING' THEN  ; * JMK37
                  NATT=DCOUNT(WORDING,@AM)         ; * JMK37
                  FOR ATT=1 TO NATT      ; * JMK37
                     LINE=WORDING<ATT>   ; * JMK37
                     GOSUB BUILD.EMAIL.REPORT      ; * JMK37
                     HTML<-1>='<TR><TD COLSPAN="7">&nbsp;':WORDING<ATT>:'</TD></TR>'       ; * JMK37
                  NEXT ATT               ; * JMK37
               END                       ; * JMK37
               UNAP.HDG=''               ; * JMK28
               UNAP.HDG<1>='Date'        ; * JMK28
               UNAP.HDG<2>='Check #'     ; * JMK28
               UNAP.HDG<3>='Amount'      ; * JMK28
               LINE='Unapplied funds:'   ; * JMK28
               GOSUB BUILD.EMAIL.REPORT  ; * JMK28
               HTML<-1>='<TR><TD COLSPAN="7">&nbsp;Unapplied funds:</TD></TR>'   ; * JMK28
               NVAL=DCOUNT(UNAP.PYMTS<1>,@VM)      ; * JMK28
               LINE=UNAP.HDG<1>'L#12'    ; * JMK28
               LINE:=UNAP.HDG<2>'L#15'   ; * JMK28
               LINE:=UNAP.HDG<3>'R#12'   ; * JMK28
               GOSUB BUILD.EMAIL.REPORT  ; * JMK28
               HTML<-1>='<TR><TD>':UNAP.HDG<1>'L#12':'<TD COLSPAN="2">':UNAP.HDG<2>'L#15':'<TD COLSPAN="3" ALIGN="RIGHT">':UNAP.HDG<3>'R#12':'</TD></TR>'        ; * JMK28
               NVAL=DCOUNT(UNAP.PYMTS<1>,@VM)      ; * JMK28
               FOR VAL=1 TO NVAL         ; * JMK28
                  UNAP.DT=UNAP.PYMTS<1,VAL>        ; * JMK28
                  UNAP.REF=UNAP.PYMTS<2,VAL>       ; * JMK28
                  UNAP.AMT=UNAP.PYMTS<3,VAL>       ; * JMK28
                  CI.NOTES=UNAP.PYMTS<4,VAL>       ; * NPR01
                  LINE=(UNAP.DT'D2/')'L#12'        ; * JMK28
                  LINE:=UNAP.REF'L#15'   ; * JMK28
                  LINE:=UNAP.AMT'R26,#15'          ; * JMK28
                  GOSUB BUILD.EMAIL.REPORT         ; * JMK28
                  HTML<-1>='<TR><TD>':(UNAP.DT'D2/')'L#12':'<TD COLSPAN="2">':UNAP.REF'L#15':'<TD COLSPAN="3" ALIGN="RIGHT">':UNAP.AMT'R26,#15':'</TD></TR>'     ; * JMK28
                  NSVX=DCOUNT(CI.NOTES,@SVM)       ; * NPR01
                  FOR SVX=1 TO NSVX      ; * NPR01
                     LINE=CI.NOTES<1,1,SVX>        ; * NPR01
                     GOSUB BUILD.EMAIL.REPORT      ; * NPR01
                     HTML<-1>='<TR><TD COLSPAN="7">&nbsp;':CI.NOTES<1,1,SVX>:'</TD></TR>'  ; * NPR01
                  NEXT SVX               ; * NPR01
               NEXT VAL                  ; * JMK28
            END                          ; * JMK28

            IF SHOW.DTL THEN             ; * JMK96
               IF C.WKLY.POSTAGE.DTL#'' THEN       ; * JMK96
                  LINE=SPACE(11):"* see next page for details"         ; * JMK96
                  GOSUB BUILD.EMAIL.REPORT         ; * JMK96
                  HTML<-1>='<TR><TD COLSPAN="7">* see below for details</TD></TR>'         ; * JMK96
                  PAGE                   ; * JMK96
                  LINE=SPACE(11):"* Weekly Proc & Hndlg Fee Due Breakdown *"     ; * JMK96
                  GOSUB BUILD.EMAIL.REPORT         ; * JMK96
                  LINE=SPACE(11):" "     ; * JMK96
                  GOSUB BUILD.EMAIL.REPORT         ; * JMK96
                  LINE=SPACE(11):'Description''L#50 ':'Qty''R#9 ':' @ ':'Unit price''R#10 ':' = ':'Ext Amount''R#15'     ; * JMK96
                  GOSUB BUILD.EMAIL.REPORT         ; * JMK96
                  LINE=SPACE(11):'-----------''L#50 ':'---''R#9 ':' @ ':'----------''R#10 ':' = ':'----------''R#15'     ; * JMK96
                  GOSUB BUILD.EMAIL.REPORT         ; * JMK96
                  HTML<-1>='<TR><TD COLSPAN="7"></TD></TR>'  ; * JMK96
                  HTML<-1>='<TR><TD COLSPAN="7"></TD></TR>'  ; * JMK96
                  HTML<-1>='<TR><TD COLSPAN="7">* Weekly Proc & Hndlg Fee Due Breakdown *</TD></TR>'           ; * JMK96
                  HTML<-1>='<TR><TD><B><U>Description</U></B></TD>'    ; * JMK96
                  HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT"><B><U>Qty</U></B> @</TD>'        ; * JMK96
                  HTML<-1>='<TD ALIGN="RIGHT"><B><U>Unit Price</U></B> =</TD>'   ; * JMK96
                  HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT"><B><U>Ext Amount</U></B></TR>'   ; * JMK96
                  NVAL=DCOUNT(C.PRE.AUDIT.DTL<1>,@VM)        ; * JMK104
                  FOR VAL=1 TO NVAL      ; * JMK104
                     DTL.DESC=C.PRE.AUDIT.DTL<1,VAL,1>       ; * JMK104
                     DTL.QTY=C.PRE.AUDIT.DTL<1,VAL,2>        ; * JMK104
                     DTL.RATE=C.PRE.AUDIT.DTL<1,VAL,3>       ; * JMK104
                     DTL.AMT=C.PRE.AUDIT.DTL<1,VAL,4>        ; * JMK104
                     LINE=SPACE(11):DTL.DESC'L#50 ':DTL.QTY'R0,#9 ':' @ ':DTL.RATE'R26,#10 ':' = ':DTL.AMT'R26,#15'      ; * JMK104
                     GOSUB BUILD.EMAIL.REPORT      ; * JMK104
                     HTML<-1>='<TR><TD>':DTL.DESC:'</TD>'    ; * JMK104
                     HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':DTL.QTY'R0,':' @</TD>'      ; * JMK104
                     HTML<-1>='<TD ALIGN="RIGHT">':DTL.RATE'R26,':' =</TD>'      ; * JMK104
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':DTL.AMT'R26,':'</TR>'       ; * JMK104
                  NEXT VAL               ; * JMK104
                  NVAL=DCOUNT(C.WKLY.POSTAGE.DTL<1>,@VM)     ; * JMK96
                  FOR VAL=1 TO NVAL      ; * JMK96
                     DTL.DESC=C.WKLY.POSTAGE.DTL<1,VAL,1>    ; * JMK96
                     DTL.QTY=C.WKLY.POSTAGE.DTL<1,VAL,2>     ; * JMK96
                     DTL.RATE=C.WKLY.POSTAGE.DTL<1,VAL,3>    ; * JMK96
                     DTL.AMT=C.WKLY.POSTAGE.DTL<1,VAL,4>     ; * JMK96
                     LINE=SPACE(11):DTL.DESC'L#50 ':DTL.QTY'R0,#9 ':' @ ':DTL.RATE'R26,#10 ':' = ':DTL.AMT'R26,#15'      ; * JMK96
                     GOSUB BUILD.EMAIL.REPORT      ; * JMK96
                     HTML<-1>='<TR><TD>':DTL.DESC:'</TD>'    ; * JMK96
                     HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT">':DTL.QTY'R0,':' @</TD>'      ; * JMK96
                     HTML<-1>='<TD ALIGN="RIGHT">':DTL.RATE'R26,':' =</TD>'      ; * JMK96
                     HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':DTL.AMT'R26,':'</TR>'       ; * JMK96
                  NEXT VAL               ; * JMK96
                  LINE=SPACE(11):'''L#50 ':'''R#9 ':'   ':'''R#10 ':'   ':'===============''R#15'    ; * JMK96
                  GOSUB BUILD.EMAIL.REPORT         ; * JMK96
                  LINE=SPACE(11):'Weekly Proc & Hndlg Fee Due''L#50 ':'''R#9 ':'   ':'''R#10 ':'   ':C.WKLY.POSTAGE.FEE'R26,#15'   ; * JMK96
                  GOSUB BUILD.EMAIL.REPORT         ; * JMK96
                  HTML<-1>='<TR><TD></TD>'         ; * JMK96
                  HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT"></TD>'       ; * JMK96
                  HTML<-1>='<TD ALIGN="RIGHT"></TD>'         ; * JMK96
                  HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">========</TR>'         ; * JMK96
                  HTML<-1>='<TR><TD>Total Weekly Proc & Hndlg Fee Due</TD>'      ; * JMK96
                  HTML<-1>='<TD COLSPAN="3" ALIGN="RIGHT"></TD>'       ; * JMK96
                  HTML<-1>='<TD ALIGN="RIGHT"></TD>'         ; * JMK96
                  HTML<-1>='<TD COLSPAN="2" ALIGN="RIGHT">':C.WKLY.POSTAGE.FEE'R26,':'</TR>'         ; * JMK96
               END                       ; * JMK96
            END                          ; * JMK96

            HTML<-1>='</TABLE></DIV></BODY></HTML>'          ; * End of HTML code

            IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK TO BEGIN DEBUG 180...')

            IF COPIES.LOOP=1 AND REPORT.TYPE='F' THEN
               DARRAY=CLIENT
               DARRAY<1,2>='Client Id'
               DARRAY<2>=OCONV(BEG.DATE,'D2/')
               DARRAY<2,2>='Beginning Date'
               DARRAY<3>=OCONV(END.DATE,'D2/')
               DARRAY<3,2>='Ending Date'
               DARRAY<4>=OCONV(OUT.CAR.CHG,'MR2')
               DARRAY<4,2>='Out Carrier Charges'
               DARRAY<5>=OCONV(IN.CAR.CHG,'MR2')
               DARRAY<5,2>='Inbound Carrier Charges'

* FAD - Freight Additional Due

               DARRAY<6>=OCONV(FRT.PAID,'MR2')
               DARRAY<6,2>='Freight Paid'
               DARRAY<7>=OCONV(-SAVE,'MR2')
               DARRAY<7,2>='Savings'
               DARRAY<8>=OCONV(C.OVER.COM,'MR2')
               DARRAY<8,2>='Overcharge Commission'
               DARRAY<9>=OCONV(C.CONS.COM,'MR2')
               DARRAY<9,2>='Consulting Commission'
               DARRAY<10>=OCONV(C.PROCESS.FEE,'MR2')
               DARRAY<10,2>='Process Fee'

               DARRAY<11>=OCONV(C.PRE.AUDIT.FEE,'MR2')
               DARRAY<11,2>='Pre Audit Fee'
               DARRAY<12>=OCONV(C.POSTAGE,'MR2')
               DARRAY<12,2>='Postage'
               DARRAY<13>=OCONV(C.LOGIS.FEE<2>,'MR2')
               DARRAY<13,2>='Logistics DM Fee'
               DARRAY<14>=OCONV(DUP.NOT.PAID,'MR2')
               DARRAY<14,2>='Duplicates Not Paid'
               DARRAY<15>=OCONV(C.SERVICE.FEE,'MR2')
               DARRAY<15,2>='Service Fee'
               DARRAY<16>=OCONV(I.MIS.ROUTE<2>+O.MIS.ROUTE<2>+T.MIS.ROUTE<2>,'MR2')
               DARRAY<16,2>='Misroute Actual Charge'
               DARRAY<17>=OCONV(I.MIS.ROUTE<3>+O.MIS.ROUTE<3>+T.MIS.ROUTE<3>,'MR2')
               DARRAY<17,2>='Misroute Approved Charge'
               DARRAY<18>=I.MIS.ROUTE<1>+0
               DARRAY<18,2>='Inbound # of Misroutes'
               DARRAY<19>=O.MIS.ROUTE<1>+0
               DARRAY<19,2>='Outbound # of Misroutes'
               DARRAY<20>=OCONV(I.MIS.ROUTE<2>-I.MIS.ROUTE<3>,'MR2')
               DARRAY<20,2>='Inbound $ of Misroutes'
               DARRAY<21>=OCONV(O.MIS.ROUTE<2>-O.MIS.ROUTE<3>,'MR2')
               DARRAY<21,2>='Outbound $ of Misroutes'

               CKCNT=DCOUNT(CKLST,@AM)   ; * JMK66
               DARRAY<22>=CKCNT          ; * JMK66
               DARRAY<22,2>='# Checks'
               DARRAY<23>=PAID
               DARRAY<23,2>='Paid'
               DARRAY<24>=OCONV(C.LOGISTICS.FEE,'MR2')
               DARRAY<24,2>='Logistics Flat Fee'
               DARRAY<25>=OCONV(C.WKLY.POSTAGE.FEE,'MR2')
               DARRAY<25,2>='Weekly Proc & Hndlg Fee'

               DARRAY<26>=OCONV(THIRD.CAR.CHG,'MR2')
               DARRAY<26,2>='Third Party Carrier Charges'
               DARRAY<27>=T.MIS.ROUTE<1>+0
               DARRAY<27,2>='Third Party Misroutes'
               DARRAY<28>=OCONV(T.MIS.ROUTE<2>-T.MIS.ROUTE<3>,'MR2')
               DARRAY<28,2>='Third Party $'
               DARRAY<29>=OCONV(C.UPS.FEE,'MR2')
               DARRAY<29,2>='UPS Fee'
               DARRAY<30>=OCONV(C.UPS.COM,'MR2')
               DARRAY<30,2>='UPS OC Commission'
               DARRAY<31>=C.DISC.COM'R26'
               DARRAY<31,2>='Discount Commission'
               DARRAY<32>=C.CLAIMS.FEE<2>'R26'
               DARRAY<32,2>='Claims Fees'
               DARRAY<33>=OCONV(C.UPS.ADD.CORR.FEE,'MR2')
               DARRAY<33,2>='UPS Address Correction Fees'
               DARRAY<34>=OCONV(C.PROG.FEE<2>,'MR2')
               DARRAY<34,2>='Programming Fees'
               DARRAY<35>=OCONV(C.UPS.LATE.PAYMENT.FEE,'MR2')
               DARRAY<35,2>='UPS Late Payment Fees'
               DARRAY<36>=OCONV(C.MNGD.RTNS<2>,'MR2')        ; *NPR03
               DARRAY<36,2>='Managed Returns'
               NUM.VARS=DCOUNT(VARS<4>,@VM)

               DARRAY.COUNT=DCOUNT(DARRAY,@AM)+1
               DARRAY<DARRAY.COUNT>='Carrier Charges with Duplicates'
               DARRAY<DARRAY.COUNT,2>='Combined'
               DARRAY<DARRAY.COUNT,3>='Inbound'
               DARRAY<DARRAY.COUNT,4>='Outbound'
               DARRAY<DARRAY.COUNT,5>='Third Party'
               FOR X=1 TO NUM.VARS
                  READV DESC FROM F.TRANSPORT,VARS<1,X>,1 ELSE DESC='Unknown'
                  IF VARS<4,X>#'' THEN
                     DARRAY<DARRAY.COUNT+1>=DESC
                     DARRAY<DARRAY.COUNT+1,2>=OCONV(VARS<4,X>,'MR2')
                     DARRAY<DARRAY.COUNT+1,3>=OCONV(VARS<14,X>,'MR2')
                     DARRAY<DARRAY.COUNT+1,4>=OCONV(VARS<24,X>,'MR2')
                     DARRAY<DARRAY.COUNT+1,5>=OCONV(VARS<34,X>,'MR2')
                     DARRAY.COUNT+=1
                  END
               NEXT X

               DARRAY.COUNT=DCOUNT(DARRAY,@AM)+1   ; *NPR04   33 too low and might have been overwritten
               DARRAY<DARRAY.COUNT>='Actual Charges without Duplicates and Overcharges'
               DARRAY<DARRAY.COUNT,2>='Combined'
               DARRAY<DARRAY.COUNT,3>='Inbound'
               DARRAY<DARRAY.COUNT,4>='Outbound'
               DARRAY<DARRAY.COUNT,5>='Third Party'
               FOR X=1 TO NUM.VARS
                  READV DESC FROM F.TRANSPORT,VARS<1,X>,1 ELSE DESC='Unknown'
                  IF VARS<5,X>#'' THEN
                     DARRAY<DARRAY.COUNT+1>=DESC
                     DARRAY<DARRAY.COUNT+1,2>=OCONV(VARS<5,X>,'MR2')
                     DARRAY<DARRAY.COUNT+1,3>=OCONV(VARS<15,X>,'MR2')
                     DARRAY<DARRAY.COUNT+1,4>=OCONV(VARS<25,X>,'MR2')
                     DARRAY<DARRAY.COUNT+1,5>=OCONV(VARS<35,X>,'MR2')
                     DARRAY.COUNT+=1
                  END
               NEXT X

               DARRAY.COUNT=DCOUNT(DARRAY,@AM)+1   ; *NPR04   33 too low and might have been overwritten
               DARRAY<DARRAY.COUNT>='Cost to Client - Actual Charges with Commisions without Duplicates and Overcharges'
               DARRAY<DARRAY.COUNT,2>='Combined'
               DARRAY<DARRAY.COUNT,3>='Inbound'
               DARRAY<DARRAY.COUNT,4>='Outbound'
               DARRAY<DARRAY.COUNT,5>='Third Party'
               FOR X=1 TO NUM.VARS
                  READV DESC FROM F.TRANSPORT,VARS<1,X>,1 ELSE DESC='Unknown'
                  IF VARS<6,X>#'' THEN
                     DARRAY<DARRAY.COUNT+1>=DESC
                     DARRAY<DARRAY.COUNT+1,2>=OCONV(VARS<6,X>,'MR2')
                     DARRAY<DARRAY.COUNT+1,3>=OCONV(VARS<16,X>,'MR2')
                     DARRAY<DARRAY.COUNT+1,4>=OCONV(VARS<26,X>,'MR2')
                     DARRAY<DARRAY.COUNT+1,5>=OCONV(VARS<36,X>,'MR2')
                     DARRAY.COUNT+=1
                  END
               NEXT X

               DARRAY.COUNT=DCOUNT(DARRAY,@AM)+1   ; * NPR04
               DARRAY<DARRAY.COUNT>='IOT Breakdown Cost to Client - Actual Charges with Commisions without Duplicates and Overcharges'
               DARRAY<DARRAY.COUNT+1>='Inbound'
               DARRAY<DARRAY.COUNT+1,2>=OCONV(IN.CLT.CHG,'MR2')
               DARRAY<DARRAY.COUNT+2>='Outbound'
               DARRAY<DARRAY.COUNT+2,2>=OCONV(OUT.CLT.CHG,'MR2')
               DARRAY<DARRAY.COUNT+3>='Third Party'
               DARRAY<DARRAY.COUNT+3,2>=OCONV(THIRD.CLT.CHG,'MR2')

               DATT=DCOUNT(DARRAY,@AM)   ; * JMK83
               DARRAY<DATT+1>=OCONV(I.LCC.ROUTE<2>+O.LCC.ROUTE<2>+T.LCC.ROUTE<2>,'MR2')    ; * JMK83
               DARRAY<DATT+1,2>='LCC Actual Charge'          ; * JMK83
               DARRAY<DATT+2>=OCONV(I.LCC.ROUTE<3>+O.LCC.ROUTE<3>+T.LCC.ROUTE<3>,'MR2')    ; * JMK83
               DARRAY<DATT+2,2>='LCC Approved Charge'        ; * JMK83
               DARRAY<DATT+3>=I.LCC.ROUTE<1>+0     ; * JMK83
               DARRAY<DATT+3,2>='Inbound # of LCC'           ; * JMK83
               DARRAY<DATT+4>=O.LCC.ROUTE<1>+0     ; * JMK83
               DARRAY<DATT+4,2>='Outbound # of LCC'          ; * JMK83
               DARRAY<DATT+5>=T.LCC.ROUTE<1>+0     ; * JMK83
               DARRAY<DATT+5,2>='Third Party # of LCC'       ; * JMK83
               DARRAY<DATT+6>=OCONV(I.LCC.ROUTE<2>-I.LCC.ROUTE<3>,'MR2')         ; * JMK83
               DARRAY<DATT+6,2>='Inbound $ of LCC'           ; * JMK83
               DARRAY<DATT+7>=OCONV(O.LCC.ROUTE<2>-O.LCC.ROUTE<3>,'MR2')         ; * JMK83
               DARRAY<DATT+7,2>='Outbound $ of LCC'          ; * JMK83
               DARRAY<DATT+8>=OCONV(T.LCC.ROUTE<2>-T.LCC.ROUTE<3>,'MR2')         ; * JMK83
               DARRAY<DATT+8,2>='Third Party $ of LCC'       ; * JMK83

               DARRAY=CHANGE(DARRAY,@VM,TAB)
               RECORD.NAME=CLIENT:'-'
               D=BEG.DATE'D2/'
               RECORD.NAME:=D[1,2]:D[4,2]
               D=END.DATE'D2/'
               RECORD.NAME:=D[1,2]:D[4.2]
               RECORD.NAME:='.XLT'
               WRITE DARRAY ON BILLDATA,RECORD.NAME
               IF EA#'' THEN             ; * JMK23
                  IF SEPARATE.REGIONS THEN         ; * JMK23
                     SOC.TXT.NAME=CLIENT'R%5':'_':REGS<1,REG.COUNT>'R%5':'-'     ; * JMK23
                  END ELSE               ; * JMK23
                     SOC.TXT.NAME=CLIENT'R%5':'-'  ; * JMK23
                  END                    ; * JMK23
                  SOC.TXT.NAME:=BEG.YEAR:BEG.MONTH:BEG.DAY:'-':END.YEAR:END.MONTH:END.DAY  ; * JMK23
                  SOC.TXT.NAME:='-SOC.TXT'         ; * JMK23
                  WRITE EA ON BILLDATA,SOC.TXT.NAME          ; * JMK23
               END                       ; * JMK23
            END                          ; * IF COPIES.LOOP=1 AND REPORT.TYPE='F'

            IF CLIENT = "01148" THEN
               TEST.REC<-1> = LINE
               IF COPIES#0 THEN
                  TEST.REC<-1> = "COPIES = ":COPIES:"  EXECUTING LASER RESET GOSUB 8100 IF COPIES # 0"
                  GOSUB 8100
                  TEST.REC<-1> = "COPIES = ":COPIES:"  EXECUTING PRINTER CLOSE IF COPIES # 0"
                  PRINTER CLOSE
               END
               WRITE TEST.REC ON F.PROC.LOGF, ID.TEST
            END

            LOG.SEQ.NO = 13              ; * End
            PROC.DESC = "Summary of Charges Report (# 7/8)"
            LOG.ST.DATE = '' ; LOG.ST.TIME = '' ; LOG.END.DATE = DATE() ; LOG.END.TIME = TIME() ; LOG.REFS = ""
            GOSUB UPD.PROC.LOGF

* End Summary of Charges Report (email attachments 7 - text and 8 - HTML)
***********************************************************************

* Print an Invoice based on Summary of Charges

            IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK TO BEGIN DEBUG 185...')

            IF FROM.PROCESS THEN         ; * JMK70
               CRT @(0,7):@(-4):'Preparing the Invoice based on the Summary of Charges (printer)...':@(0,7):   ; * JMK70
            END                          ; * JMK70

            CLIENT.BLOCK=''              ; * JMK153
            DIV.BLOCK=''                 ; * JMK153
            REG.BLOCK=''                 ; * JMK153
            INFO.LABEL=''                ; * JMK153
            INFO.TEXT=''                 ; * JMK153
            BODY.DESC=''                 ; * JMK153
            BODY.QTY=''                  ; * JMK153
            BODY.RATE=''                 ; * JMK153
            BODY.AMT=''                  ; * JMK153
            REMIT.LEFT=''                ; * JMK153
            REMIT.CENTER=''              ; * JMK153
            REMIT.RIGHT=''               ; * JMK153

            IF CLIENT='01977' AND SEPARATE.REGIONS AND (REGS<1,REG.COUNT>='16000' OR REGS<1,REG.COUNT>='160') THEN       ; * JMK149 ; * JMK151
               CLIENT.BLOCK<1,-1>='WABTEC DE MEXICO, S. DE R.L. DE C.V.'         ; * JMK10
               CLIENT.BLOCK<1,-1>='EJE 126, NUM 230'         ; * JMK10
               CLIENT.BLOCK<1,-1>='ZONA INDUSTRIAL DEL POTOSI'         ; * JMK10
               CLIENT.BLOCK<1,-1>='SAN LUIS POTOSI, S.L.P'   ; * JMK10
               CLIENT.BLOCK<1,-1>='C.P.78395'      ; * JMK10
               CLIENT.BLOCK<1,-1>='MEXICO'         ; * JMK10
               CLIENT.BLOCK<1,-1>='TAX IDENTIFICTION NUMBER: WME 980604 B74'     ; * JMK10
               CLIENT.BLOCK<1,-1>='Region: ':REGS<1,REG.COUNT>:' ':REGS<11,REG.COUNT>      ; * JMK10
               CLIENT.BLOCK<1,-1>='Logistic / Transport Services'      ; * JMK10
            END ELSE                     ; * JMK149
               IF CLIENT='01283' AND SEPARATE.REGIONS AND REGS<1,REG.COUNT>='MINN' THEN    ; * DRFAA
                  CLIENT.BLOCK<1,-1>=CLIENT.REC<2>           ; * DRFAA
                  CLIENT.BLOCK<1,-1>='11400 73rd Ave N'      ; * DRFAA
                  CLIENT.BLOCK<1,-1>='Maple Grove, MN 55369'           ; * DRFAA
                  CLIENT.BLOCK<1,-1>='Region: ':REGS<1,REG.COUNT>:' ':REGS<11,REG.COUNT>   ; * DRFAA
               END ELSE                  ; * DRFAA
                  CLIENT.BLOCK<1,-1>=CLIENT.REC<2>
                  CLIENT.BLOCK<1,-1>=CLIENT.REC<3,1>
                  IF CLIENT.REC<3,2>#'' THEN
                     CLIENT.BLOCK<1,-1>=CLIENT.REC<3,2>
                  END
                  CLIENT.BLOCK<1,-1>=CLIENT.REC<4>:', ':CLIENT.REC<5>:' ':CLIENT.REC<6>
                  IF SEPARATE.REGIONS THEN
                     CLIENT.BLOCK<1,-1>=REGS<1,REG.COUNT>:' ':REGS<11,REG.COUNT>
                  END
               END                       ; * JMK149
            END                          ; * DRFAA

            IF SEPARATE.REGIONS THEN
               REG.BLOCK<1,-1>=REGS<1,REG.COUNT>   ; * Client Region
               REG.BLOCK<1,-1>=REGS<11,REG.COUNT>  ; * Client Region Description
            END

            DUE.DAYS=CLIENT.TERMS.DAYS
            DUE.DATE=END.DATE+DUE.DAYS

            INVOICE.NUM=CLIENT:END.YEAR:END.MONTH:END.DAY
            IF SEPARATE.REGIONS THEN     ; * JMK24
               IF NUM(REGS<1,REG.COUNT>) THEN      ; * JMK123
                  INVOICE.NUM:='-':(REGS<1,REG.COUNT>+0)     ; * JMK24
               END ELSE                  ; * JMK123
                  INVOICE.NUM:='-':CHANGE(REGS<1,REG.COUNT>,'0','')    ; * JMK123
               END                       ; * JMK123
            END                          ; * JMK24

            INFO.LABEL<1,-1>='INVOICE NUMBER:'     ; * JMK153
            INFO.TEXT<1,-1>=INVOICE.NUM  ; * JMK153

            INFO.LABEL<1,-1>='INVOICE DATE:'       ; * JMK153
            INFO.TEXT<1,-1>=END.DATE'D2/'          ; * JMK153

            IF TRIM(PCL.CONTROL)#'' THEN           ; * JMK153
               INFO.LABEL<1,-1>='CONTROL #:'       ; * JMK153
               INFO.TEXT<1,-1>=PCL.CONTROL         ; * JMK153
            END                          ; * JMK153

            INFO.LABEL<1,-1>='PAY BEFORE:'         ; * JMK153
            INFO.TEXT<1,-1>=DUE.DATE'D2/'          ; * JMK153

            INFO.LABEL<1,-1>='TERMS:'    ; * JMK153
            INFO.TEXT<1,-1>=CLIENT.TERMS.DESC      ; * JMK153

            IF CLIENT.PO#'' THEN
               INFO.LABEL<1,-1>='CUSTOMER PO:'     ; * JMK153
               INFO.TEXT<1,-1>=CLIENT.PO           ; * JMK153
            END

            ONE.LINE=0                   ; * JMK153
            IF PCL.INV.ARRAY#'' AND UP.CNT=0 THEN

               BODY.DESC=PCL.INV.ARRAY<1>
               BODY.QTY=PCL.INV.ARRAY<2>
               BODY.RATE=PCL.INV.ARRAY<3>
               BODY.AMT=PCL.INV.ARRAY<4>

            END

            IF PREV.TOTAL#0 OR UNAP.CREDIT#0 THEN  ; * JMK12
               IF TOTAL#'' AND TOTAL#0 THEN        ; * JMK12
                  BODY.DESC<1,-1>='Current Period Charges'
                  BODY.QTY<1,-1>=' '
                  BODY.RATE<1,-1>=' '

                  IF CCC.FLG=1 THEN      ; * JMK85
                     BODY.AMT<1,-1>=CCC.TOTAL
                  END ELSE               ; * JMK85
                     BODY.AMT<1,-1>=TOTAL
                  END                    ; * JMK85
               END                       ; * JMK12
               IF PREV.TOTAL#0 THEN      ; * JMK12
                  BODY.DESC<1,-1>='Previous Amount Due'
                  BODY.QTY<1,-1>=' '
                  BODY.RATE<1,-1>=' '
                  BODY.AMT<1,-1>=PREV.TOTAL
               END                       ; * JMK12
               IF UNAP.CREDIT#0 THEN     ; * JMK12
                  NVAL=DCOUNT(UNAP.LIST<1>,@VM)    ; * JMK12
                  FOR VAL=1 TO NVAL      ; * JMK12
                     BODY.DESC<1,-1>='Credit ':UNAP.LIST<1,VAL>
                     BODY.QTY<1,-1>=' '
                     BODY.RATE<1,-1>=' '
                     BODY.AMT<1,-1>=UNAP.LIST<2,VAL>
                  NEXT VAL               ; * JMK12
               END                       ; * JMK12
               BODY.DESC<1,-1>='Total Amount Due'
               BODY.QTY<1,-1>=' '
               BODY.RATE<1,-1>=' '

               IF CCC.FLG=1 THEN         ; * JMK85
                  BODY.AMT<1,-1>=CCC.TOTAL
               END ELSE                  ; * JMK85
                  BODY.AMT<1,-1>=GTOTAL
               END                       ; * JMK85
            END ELSE                     ; * JMK12
               IF UP.CNT THEN ONE.LINE=1           ; * JMK153
               IF UP.CNT=0 AND PCL.INV.ARRAY#'' AND BODY.DESC='' THEN ONE.LINE=1           ; * JMK153
               IF ONE.LINE THEN          ; * JMK153
                  IF TOTAL#'' AND TOTAL#0 THEN     ; * JMK12
                     BODY.DESC<1,-1>='Total Due'
                     BODY.QTY<1,-1>=' '
                     BODY.RATE<1,-1>=' '

                     IF CCC.FLG=1 THEN   ; * JMK85
                        BODY.AMT<1,-1>=CCC.TOTAL
                     END ELSE            ; * JMK85
                        BODY.AMT<1,-1>=TOTAL
                     END                 ; * JMK85
                  END                    ; * JMK12
               END                       ; * JMK153
            END                          ; * JMK12
            IF CLIENT='01773' THEN       ; * JMK121
               BODY.DESC<1,-1>=' '       ; * JMK121
               BODY.DESC<1,-1>='For UPS Plan 0261CP, shipments dated ':UPS.BEG.DATE'D2-':' through ':UPS.END.DATE'D2-'   ; * JMK121
            END                          ; * JMK121

* PREPARE THE REMITTANCE INFORMATION
            BEGIN CASE
               CASE CLIENT='01791' ; REMIT.TYPE='CAN.WIRE'
               CASE CLIENT='01832' ; REMIT.TYPE='CAN.WIRE'
               CASE CLIENT='01866' ; REMIT.TYPE='CAN.WIRE'
               CASE CLIENT='01945' ; REMIT.TYPE='CAN.WIRE'
               CASE CLIENT='01946' ; REMIT.TYPE='CAN.WIRE'
               CASE CLIENT='01986' ; REMIT.TYPE='CAN.WIRE'
               CASE CLIENT='02015' ; REMIT.TYPE='CAN.WIRE'
               CASE CLIENT='02118' ; REMIT.TYPE='CAN.WIRE'
               CASE CLIENT='01979'
                  IF SEPARATE.REGIONS THEN
                     IF REGS<1,REG.COUNT>='150' THEN REMIT.TYPE='CAN.WIRE'
                     IF REGS<1,REG.COUNT>='150' THEN REMIT.TYPE='CAN.WIRE'
                     IF REGS<1,REG.COUNT>='211' THEN REMIT.TYPE='CAN.WIRE'
                     IF REGS<1,REG.COUNT>='304' THEN REMIT.TYPE='CAN.WIRE'
                     IF REGS<1,REG.COUNT>='601' THEN REMIT.TYPE='CAN.WIRE'
                  END
               CASE CLIENT='01499'
                  IF SEPARATE.REGIONS THEN
                     IF REGS<1,REG.COUNT>='00003' THEN REMIT.TYPE='USD.INTL.WIRE'
                  END
               CASE CLIENT='01282' ; REMIT.TYPE='USD.INTL.WIRE'
               CASE CLIENT='01360' ; REMIT.TYPE='USD.INTL.WIRE'
               CASE CLIENT='01790' ; REMIT.TYPE='USD.INTL.WIRE'
               CASE CLIENT='01870' ; REMIT.TYPE='USD.INTL.WIRE'
               CASE CLIENT='02043' ; REMIT.TYPE='USD.INTL.WIRE'
               CASE CLIENT='02079' ; REMIT.TYPE='USD.INTL.WIRE'
               CASE CLIENT='01977'
                  IF SEPARATE.REGIONS THEN
                     IF REGS<1,REG.COUNT>='160' THEN REMIT.TYPE='USD.INTL.WIRE'
                     IF REGS<1,REG.COUNT>='304' THEN REMIT.TYPE='USD.INTL.WIRE'
                     IF REGS<1,REG.COUNT>='601' THEN REMIT.TYPE='USD.INTL.WIRE'
                  END
               CASE 1
                  REMIT.TYPE='USD.ACH'
            END CASE
            BEGIN CASE
               CASE 1
                  REMIT.LEFT<1,-1>='AFS, LLC'
                  REMIT.LEFT<1,-1>='Attn: Accounts Receivable'

                  REMIT.LEFT<1,-1>='P.O. Box 18410'

                  REMIT.LEFT<1,-1>='Shreveport, LA 71138-1410'

                  REMIT.CENTER<1,-1>='Phone: (318) 798-2111'
                  REMIT.CENTER<1,-1>='Fax  : (318) 797-3628'
                  REMIT.CENTER<1,-1>='Email: AR@afs.net'
                  REMIT.CENTER<1,-1>='EIN  : 72-1130766'


                  REMIT.RIGHT<1,-1>='For ACH Remittance:'

                  REMIT.RIGHT<1,-1>='Routing #: 065 0000 90'

                  REMIT.RIGHT<1,-1>='Account #: 75 285 180 30'

                  REMIT.RIGHT<1,-1>='Bank Institution: Capital One Bank'
            END CASE

            IF COPIES#0 THEN

               LOG.SEQ.NO = 14           ; * Start
               PROC.DESC = "Print Invoice"
               LOG.ST.DATE = DATE() ; LOG.ST.TIME = TIME() ; LOG.END.DATE = '' ; LOG.END.TIME = '' ; LOG.REFS = ""
               GOSUB UPD.PROC.LOGF

               VIN=''
               VIN<1>=CLIENT             ; * Client ID
               VIN<2>=CLIENT.BLOCK       ; * Client Block of info
               VIN<3>=REG.BLOCK          ; * Client Name
               VIN<4>=INFO.LABEL         ; * Client Address (may be multivalued)
               VIN<5>=INFO.TEXT          ; * Client City
               VIN<6>=BODY.DESC          ; * Client State
               VIN<7>=BODY.QTY           ; * Client ZIP
               VIN<8>=BODY.RATE
               VIN<9>=BODY.AMT
               VIN<10>=REMIT.LEFT
               VIN<11>=REMIT.CENTER
               VIN<12>=REMIT.RIGHT
               VIN<13>=BEG.DATE          ; * Beginning Date
               VIN<14>=END.DATE          ; * Ending Date
               IF CCC.FLG=1 THEN         ; * JMK85
                  VIN<15>=CCC.TOTAL      ; * JMK85
               END ELSE                  ; * JMK85
                  VIN<15>=TOTAL          ; * Total Amount Due
               END                       ; * JMK85
               IF (CLIENT.REC<125>='') AND NOT(SEPARATE.REGIONS) THEN
                  VIN<16>='1'            ; * Display invoice message
               END ELSE
                  VIN<16>='0'            ; * Don't display invoice message
               END
               IF CCC.FLG=1 THEN         ; * JMK85
                  VIN<17>=CCC.GTOTAL     ; * JMK85
               END ELSE                  ; * JMK85
                  VIN<17>=GTOTAL         ; * JMK12
               END                       ; * JMK85
               IF PCL.SAVINGS#'' THEN
                  VIN<18>=TOT.SAV.LBL
                  VIN<19>=PCL.SAVINGS
               END
               VIN<20>='P'
               VOUT=''                   ; * Output parameters, nothing returned currently

               CALL PRINT.CUSTOMER.INVOICE(INVOICE.FORM.PRT,AFS.LOGO,VIN,VOUT,F.PDF)

               LOG.SEQ.NO = 14           ; * End
               PROC.DESC = "Print Invoice"
               LOG.ST.DATE = '' ; LOG.ST.TIME = '' ; LOG.END.DATE = DATE() ; LOG.END.TIME = TIME() ; LOG.REFS = ""
               GOSUB UPD.PROC.LOGF
            END


* End Print an Invoice based on Summary of Charges

***********************************************************************
* Begin Invoice (email attachment 9)
***********************************************************************

            IF FROM.PROCESS THEN         ; * JMK70
               CRT @(0,7):@(-4):'Preparing the Invoice based on the Summary of Charges (Attachment 9)...':@(0,7):        ; * JMK70
            END                          ; * JMK70

* Read in HTML invoice template and replace tags with data

            LOG.SEQ.NO = 15              ; * Start
            PROC.DESC = "Invoice (# 9)"
            LOG.ST.DATE = DATE() ; LOG.ST.TIME = TIME() ; LOG.END.DATE = '' ; LOG.END.TIME = '' ; LOG.REFS = ""
            GOSUB UPD.PROC.LOGF

* PREPARE THE HEADINGS


* PREPARE THE CLIENT INFORMATION

            VIN=''
            VIN<1>=CLIENT                ; * Client ID
            VIN<2>=CLIENT.BLOCK          ; * Client Block of info
            VIN<3>=REG.BLOCK             ; * Client Name
            VIN<4>=INFO.LABEL            ; * Client Address (may be multivalued)
            VIN<5>=INFO.TEXT             ; * Client City
            VIN<6>=BODY.DESC             ; * Client State
            VIN<7>=BODY.QTY              ; * Client ZIP
            VIN<8>=BODY.RATE
            VIN<9>=BODY.AMT
            VIN<10>=REMIT.LEFT
            VIN<11>=REMIT.CENTER
            VIN<12>=REMIT.RIGHT
            VIN<13>=BEG.DATE             ; * Beginning Date
            VIN<14>=END.DATE             ; * Ending Date
            IF CCC.FLG=1 THEN            ; * JMK85
               VIN<15>=CCC.TOTAL         ; * JMK85
            END ELSE                     ; * JMK85
               VIN<15>=TOTAL             ; * Total Amount Due
            END                          ; * JMK85
            IF (CLIENT.REC<125>='') AND NOT(SEPARATE.REGIONS) THEN
               VIN<16>='1'               ; * Display invoice message
            END ELSE
               VIN<16>='0'               ; * Don't display invoice message
            END
            IF CCC.FLG=1 THEN            ; * JMK85
               VIN<17>=CCC.GTOTAL        ; * JMK85
            END ELSE                     ; * JMK85
               VIN<17>=GTOTAL            ; * JMK12
            END                          ; * JMK85
            IF PCL.SAVINGS#'' THEN
               VIN<18>=TOT.SAV.LBL
               VIN<19>=PCL.SAVINGS
            END
            VIN<20>='F'
            VOUT=''                      ; * Output parameters, nothing returned currently

            CALL PRINT.CUSTOMER.INVOICE(INVOICE.FORM,AFS.LOGO,VIN,VOUT,F.PDF)
            INVOICE.PDF=VOUT<1>          ; * JMK153


            LOG.SEQ.NO = 15              ; * End
            PROC.DESC = "Invoice (# 9)"
            LOG.ST.DATE = '' ; LOG.ST.TIME = '' ; LOG.END.DATE = DATE() ; LOG.END.TIME = TIME() ; LOG.REFS = ""
            GOSUB UPD.PROC.LOGF

* End Invoice (email attachment 9)

            IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK TO BEGIN DEBUG 187...')

            IF COPIES#0 THEN PRINTER CLOSE
         NEXT COPIES.LOOP
         SOC.TXT=EA                      ; * Assign EA temporary array to final SOC.TXT array
         SOC.HTML=HTML                   ; * Assign HTML temporary array to final SOC.HTML array
      END                                ; * IF FILE[1,13]='FB.BILLS.HIST'
***********************************************************************
SUMMARY.OF.EXPENSES.REPORT:* Begin Summary of Expenses Report (email attachment 10)
***********************************************************************
      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK TO BEGIN DEBUG 200...')

      IF FROM.PROCESS THEN               ; * JMK70
         CRT @(0,7):@(-4):'Preparing the Summary of Expenses Report (Attachment 10)...':@(0,7):      ; * JMK70
      END                                ; * JMK70

      SOE.DA=''
      SOE.XLS='' ; ROW.CNT = 1           ; * NPR05
      EA=''

* Read COPIES and modify as needed
      COPIES=CLIENT.REC<100,3>
      IF COPIES='' OR NOT(NUM(COPIES)) THEN COPIES='N'
      IF COPIES='N' THEN GOTO SUMMARY.OF.REGIONS.REPORT      ; * JMK112

      LOG.SEQ.NO = 16                    ; * Start
      PROC.DESC = "Summary of Expenses Report (# 10)"
      LOG.ST.DATE = DATE() ; LOG.ST.TIME = TIME() ; LOG.END.DATE = '' ; LOG.END.TIME = '' ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF

      IF FROM.PROCESS THEN
         IF SEPARATE.REGIONS THEN
            GOSUB SET.REGIONAL.COPIES
         END
      END ELSE
         IF NOT(HOLD.STAT) THEN
            IF SUMMARY.ONLY THEN
               COPIES=0
            END ELSE
               IF ONE.COPY THEN
                  COPIES=1
               END                       ; * IF ONE.COPY
            END                          ; * IF SUMMARY.ONLY
         END                             ; * IF NOT(HOLD.STAT)
      END                                ; * IF FROM.PROCESS

* Interpret COPIES for the printing loop
      BEGIN CASE
         CASE NOT(NUM(COPIES))
            COPY.COUNT=0
         CASE NUM(COPIES)
            COPY.COUNT=COPIES
         CASE 1
            COPY.COUNT=0
      END CASE

* Add extra test for emailing when not printing
      IF COPIES=0 AND NOT(SUMMARY.ONLY) THEN COPY.COUNT=1

      IF FILE[1,13]='FB.BILLS.HIST' THEN
         IF EXPENSE='Y' THEN
            FOR COPIES.LOOP=1 TO COPY.COUNT
               SOE.XLS<ROW.CNT> = "IOT":@VM:"Expense Code":@VM:"Description":@VM:"This Period"
               IF NOT(SEPARATE.REGIONS) THEN SOE.XLS<ROW.CNT,-1> = "Year to Date"
               ROW.CNT += 1
               EA=''                     ; *  Build Summary of Expenses Report in EA

               EA<1>=COMPANY.NAME.HTML   ; * JMK95
               EA<-1>=TITLE.1            ; * Set above
               EA<-1>=TITLE.2            ; * Set above
               EA<-1>=ODATE              ; * Set above
               IF COPIES#0 THEN
                  PRINTER ON
                  GOSUB 8110
                  PAGE 1
                  HEADING HED
               END
               Y.OUT.CHG.DUE=0
               Y.IN.CHG.DUE=0
               Y.THIRD.CHG.DUE=0
               LINE=' '
               GOSUB BUILD.EMAIL.REPORT
               LINE=SPACE(57):'SUMMARY OF EXPENSES'
               GOSUB BUILD.EMAIL.REPORT
               LINE=SPACE(55):'======================='
               GOSUB BUILD.EMAIL.REPORT
               LINE=' '
               GOSUB BUILD.EMAIL.REPORT
               LINE=SPACE(63):'This Period'
               IF NOT(SEPARATE.REGIONS) THEN LINE:='              Year to Date'
               IF CLIENT='01977' THEN    ; * JMK133
                  LINE=SPACE(74):'This Period'     ; * JMK133
                  IF NOT(SEPARATE.REGIONS) THEN LINE:='    Year to Date'         ; * JMK133
               END                       ; * JMK133
               GOSUB BUILD.EMAIL.REPORT
               IF SEPARATE.REGIONS THEN
                  LINE=SPACE(4):DASH.1.COLS
               END ELSE
                  LINE=SPACE(4):DASH.2.COLS
               END
               IF CLIENT='01977' THEN    ; * JMK133
                  IF SEPARATE.REGIONS THEN
                     LINE=SPACE(73):'---------------'        ; * JMK133
                  END ELSE
                     LINE=SPACE(73):'--------------- ---------------'  ; * JMK133
                  END
               END                       ; * JMK133
               GOSUB BUILD.EMAIL.REPORT
               LINE=' '
               GOSUB BUILD.EMAIL.REPORT

* Print outbound expenses
               LINE=SPACE(20):'Outbound Expenses:'
               GOSUB BUILD.EMAIL.REPORT
               LINE=' '
               GOSUB BUILD.EMAIL.REPORT
               TIMES=DCOUNT(EXPS<1>,CHAR(253))
               Y=0
               FOR COUNT=1 TO TIMES
                  READV EXP.DESC FROM F.EXPENSE,EXPS<1,COUNT>,1 ELSE
                     EXP.DESC=' ~~~ Not on file ~~~'
                  END
                  IF SEPARATE.REGIONS THEN
                     IF EXPS<5,COUNT>'R0'#0 THEN
                        Y=Y+1
                        IF EXP.DESC=EXPS<1,COUNT> THEN EXP.DESC=''
                        IF CLIENT = "01267" THEN XLS.EXP.DESC = EXPS<1,COUNT>:".0.0.0" ELSE XLS.EXP.DESC = EXPS<1,COUNT>
                        IF CLIENT = '01977' THEN   ; * JMK133
                           LINE=SPACE(5):Y'R#3 ':EXPS<1,COUNT>'L#30 ':EXP.DESC'L#30 ':EXPS<5,COUNT>'R26,#15'   ; * JMK133
                        END ELSE         ; * JMK133
                           LINE=SPACE(20):Y'R#3':' ':EXPS<1,COUNT>'L#19':EXP.DESC'L#15':EXPS<5,COUNT>'R26,#16'
                        END              ; * JMK133
                        SOE.XLS<ROW.CNT> = "OB":@VM:XLS.EXP.DESC:@VM:EXP.DESC:@VM:EXPS<5,COUNT>'R26,#16'
                        ROW.CNT += 1
                        GOSUB BUILD.EMAIL.REPORT
                     END
                  END ELSE
                     IF EXPS<2,COUNT>'R0'=0 & EXPS<5,COUNT>'R0'=0 ELSE
                        Y=Y+1
                        IF EXP.DESC=EXPS<1,COUNT> THEN EXP.DESC=''
                        IF CLIENT = "01267" THEN XLS.EXP.DESC = EXPS<1,COUNT>:".0.0.0" ELSE XLS.EXP.DESC = EXPS<1,COUNT>
                        IF CLIENT = '01977' THEN   ; * JMK133
                           LINE=SPACE(5):Y'R#3 ':EXPS<1,COUNT>'L#30 ':EXP.DESC'L#30 ':EXPS<5,COUNT>'R26,#15 ':EXPS<2,COUNT>'R26,#15'         ; * JMK133
                        END ELSE         ; * JMK133
                           LINE=SPACE(20):Y'R#3':' ':EXPS<1,COUNT>'L#19':EXP.DESC'L#15':EXPS<5,COUNT>'R26,#16':EXPS<2,COUNT>'R26,#26'
                        END              ; * JMK133
                        SOE.XLS<ROW.CNT> = "OB":@VM:XLS.EXP.DESC:@VM:EXP.DESC:@VM:EXPS<5,COUNT>'R26,#16' :@VM: EXPS<2,COUNT>'R26,#26'
                        ROW.CNT += 1
                        GOSUB BUILD.EMAIL.REPORT
                        Y.OUT.CHG.DUE+=EXPS<2,COUNT>
                     END
                  END                    ; * IF SEPARATE.REGIONS
               NEXT COUNT
               IF SEPARATE.REGIONS THEN
                  LINE=SPACE(4):DASH.1.COLS
               END ELSE
                  LINE=SPACE(4):DASH.2.COLS
               END
               IF CLIENT='01977' THEN    ; * JMK133
                  IF SEPARATE.REGIONS THEN
                     LINE=SPACE(73):'---------------'        ; * JMK133
                  END ELSE
                     LINE=SPACE(73):'--------------- ---------------'  ; * JMK133
                  END
               END                       ; * JMK133
               GOSUB BUILD.EMAIL.REPORT
               LINE=SPACE(25):'Outbound Charges                 ':EXP.OUT.CHG.DUE'R26,#16'
               IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.OUT.CHG.DUE'R26,#26'
               IF CLIENT='01977' THEN    ; * JMK133
                  LINE=SPACE(25):'Outbound Charges                 ':SPACE(13):EXP.OUT.CHG.DUE'R26,#15 '
                  IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.OUT.CHG.DUE'R26,#15'
               END                       ; * JMK133
               GOSUB BUILD.EMAIL.REPORT
               LINE=SPACE(61):'==============='
               IF NOT(SEPARATE.REGIONS) THEN LINE:='           ==============='
               IF CLIENT='01977' THEN    ; * JMK133
                  IF SEPARATE.REGIONS THEN
                     LINE=SPACE(73):'==============='        ; * JMK133
                  END ELSE
                     LINE=SPACE(73):'=============== ==============='  ; * JMK133
                  END
               END                       ; * JMK133
               GOSUB BUILD.EMAIL.REPORT
               LINE=' '
               GOSUB BUILD.EMAIL.REPORT

* Print Inbound expenses
               LINE=SPACE(20):'Inbound Expenses:'
               GOSUB BUILD.EMAIL.REPORT
               LINE=' '
               GOSUB BUILD.EMAIL.REPORT
               TIMES=DCOUNT(EXPS<1>,CHAR(253))
               Y=0
               FOR COUNT=1 TO TIMES
                  READV EXP.DESC FROM F.EXPENSE,EXPS<1,COUNT>,1 ELSE
                     EXP.DESC=' ~~~ Not on file ~~~'
                  END
                  IF SEPARATE.REGIONS THEN
                     IF EXPS<6,COUNT>'R0'#0 THEN
                        Y=Y+1
                        IF EXP.DESC=EXPS<1,COUNT> THEN EXP.DESC=''
                        IF CLIENT = "01267" THEN XLS.EXP.DESC = EXPS<1,COUNT>:".0.0.0" ELSE XLS.EXP.DESC = EXPS<1,COUNT>
                        IF CLIENT = '01977' THEN   ; * JMK133
                           LINE=SPACE(5):Y'R#3 ':EXPS<1,COUNT>'L#30 ':EXP.DESC'L#30 ':EXPS<6,COUNT>'R26,#15'   ; * JMK133
                        END ELSE         ; * JMK133
                           LINE=SPACE(20):Y'R#3':' ':EXPS<1,COUNT>'L#19':EXP.DESC'L#15':EXPS<6,COUNT>'R26,#16'
                        END              ; * JMK133
                        SOE.XLS<ROW.CNT> = "IB":@VM:XLS.EXP.DESC:@VM:EXP.DESC:@VM:EXPS<6,COUNT>'R26,#16'
                        ROW.CNT += 1
                        GOSUB BUILD.EMAIL.REPORT
                     END
                  END ELSE
                     IF EXPS<3,COUNT>'R0'=0 & EXPS<6,COUNT>'R0'=0 ELSE
                        Y=Y+1
                        IF EXP.DESC=EXPS<1,COUNT> THEN EXP.DESC=''
                        IF CLIENT = "01267" THEN XLS.EXP.DESC = EXPS<1,COUNT>:".0.0.0" ELSE XLS.EXP.DESC = EXPS<1,COUNT>
                        IF CLIENT = '01977' THEN   ; * JMK133
                           LINE=SPACE(5):Y'R#3 ':EXPS<1,COUNT>'L#30 ':EXP.DESC'L#30 ':EXPS<6,COUNT>'R26,#15 ':EXPS<3,COUNT>'R26,#15'         ; * JMK133
                        END ELSE         ; * JMK133
                           LINE=SPACE(20):Y'R#3':' ':EXPS<1,COUNT>'L#19':EXP.DESC'L#15':EXPS<6,COUNT>'R26,#16':EXPS<3,COUNT>'R26,#26'
                        END              ; * JMK133
                        SOE.XLS<ROW.CNT> = "IB":@VM:XLS.EXP.DESC:@VM:EXP.DESC:@VM:EXPS<6,COUNT>'R26,#16' :@VM: EXPS<3,COUNT>'R26,#26'
                        ROW.CNT += 1
                        GOSUB BUILD.EMAIL.REPORT
                        Y.IN.CHG.DUE+=EXPS<3,COUNT>
                     END
                  END                    ; * IF SEPARATE.REGIONS
               NEXT COUNT
               IF SEPARATE.REGIONS THEN
                  LINE=SPACE(4):DASH.1.COLS
               END ELSE
                  LINE=SPACE(4):DASH.2.COLS
               END
               IF CLIENT='01977' THEN    ; * JMK133
                  IF SEPARATE.REGIONS THEN
                     LINE=SPACE(73):'---------------'        ; * JMK133
                  END ELSE
                     LINE=SPACE(73):'--------------- ---------------'  ; * JMK133
                  END
               END                       ; * JMK133
               GOSUB BUILD.EMAIL.REPORT
               LINE=SPACE(25):'Inbound Charges                  ':EXP.IN.CHG.DUE'R26,#16'
               IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.IN.CHG.DUE'R26,#26'
               IF CLIENT='01977' THEN    ; * JMK133
                  LINE=SPACE(25):'Inbound Charges                  ':SPACE(13):EXP.IN.CHG.DUE'R26,#15 '
                  IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.IN.CHG.DUE'R26,#15'
               END                       ; * JMK133
               GOSUB BUILD.EMAIL.REPORT
               LINE=SPACE(61):'==============='
               IF NOT(SEPARATE.REGIONS) THEN LINE:='           ==============='
               IF CLIENT='01977' THEN    ; * JMK133
                  IF SEPARATE.REGIONS THEN
                     LINE=SPACE(73):'==============='        ; * JMK133
                  END ELSE
                     LINE=SPACE(73):'=============== ==============='  ; * JMK133
                  END
               END                       ; * JMK133
               GOSUB BUILD.EMAIL.REPORT
               LINE=' '
               GOSUB BUILD.EMAIL.REPORT

* Print Third Party expenses
               LINE=SPACE(20):'Third Party Expenses:'
               GOSUB BUILD.EMAIL.REPORT
               LINE=' '
               GOSUB BUILD.EMAIL.REPORT
               TIMES=DCOUNT(EXPS<1>,CHAR(253))
               Y=0
               FOR COUNT=1 TO TIMES
                  READV EXP.DESC FROM F.EXPENSE,EXPS<1,COUNT>,1 ELSE
                     EXP.DESC=' ~~~ Not on file ~~~'
                  END
                  IF SEPARATE.REGIONS THEN
                     IF EXPS<7,COUNT>'R0'#0 THEN
                        Y=Y+1
                        IF EXP.DESC=EXPS<1,COUNT> THEN EXP.DESC=''
                        IF CLIENT = "01267" THEN XLS.EXP.DESC = EXPS<1,COUNT>:".0.0.0" ELSE XLS.EXP.DESC = EXPS<1,COUNT>
                        IF CLIENT = '01977' THEN   ; * JMK133
                           LINE=SPACE(5):Y'R#3 ':EXPS<1,COUNT>'L#30 ':EXP.DESC'L#30 ':EXPS<7,COUNT>'R26,#15'   ; * JMK133
                        END ELSE         ; * JMK133
                           LINE=SPACE(20):Y'R#3':' ':EXPS<1,COUNT>'L#19':EXP.DESC'L#15':EXPS<7,COUNT>'R26,#16'
                        END              ; * JMK133
                        SOE.XLS<ROW.CNT> = "TP":@VM:XLS.EXP.DESC:@VM:EXP.DESC:@VM:EXPS<7,COUNT>'R26,#16'
                        ROW.CNT += 1
                        GOSUB BUILD.EMAIL.REPORT
                     END
                  END ELSE
                     IF EXPS<4,COUNT>'R0'=0 & EXPS<7,COUNT>'R0'=0 ELSE
                        Y=Y+1
                        IF EXP.DESC=EXPS<1,COUNT> THEN EXP.DESC=''
                        IF CLIENT = "01267" THEN XLS.EXP.DESC = EXPS<1,COUNT>:".0.0.0" ELSE XLS.EXP.DESC = EXPS<1,COUNT>
                        IF CLIENT = '01977' THEN   ; * JMK133
                           LINE=SPACE(5):Y'R#3 ':EXPS<1,COUNT>'L#30 ':EXP.DESC'L#30 ':EXPS<7,COUNT>'R26,#15 ':EXPS<4,COUNT>'R26,#15'         ; * JMK133
                        END ELSE         ; * JMK133
                           LINE=SPACE(20):Y'R#3':' ':EXPS<1,COUNT>'L#19':EXP.DESC'L#15':EXPS<7,COUNT>'R26,#16':EXPS<4,COUNT>'R26,#26'
                        END              ; * JMK133
                        SOE.XLS<ROW.CNT> = "TP":@VM:XLS.EXP.DESC:@VM:EXP.DESC:@VM:EXPS<7,COUNT>'R26,#16' :@VM: EXPS<4,COUNT>'R26,#26'
                        ROW.CNT += 1
                        GOSUB BUILD.EMAIL.REPORT
                        Y.THIRD.CHG.DUE+=EXPS<4,COUNT>
                     END
                  END                    ; * IF SEPARATE.REGIONS
               NEXT COUNT
               IF SEPARATE.REGIONS THEN
                  LINE=SPACE(4):DASH.1.COLS
               END ELSE
                  LINE=SPACE(4):DASH.2.COLS
               END
               IF CLIENT='01977' THEN    ; * JMK133
                  IF SEPARATE.REGIONS THEN
                     LINE=SPACE(73):'---------------'        ; * JMK133
                  END ELSE
                     LINE=SPACE(73):'--------------- ---------------'  ; * JMK133
                  END
               END                       ; * JMK133
               GOSUB BUILD.EMAIL.REPORT
               LINE=SPACE(25):'Third Party Charges              ':EXP.THIRD.CHG.DUE'R26,#16'
               IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.THIRD.CHG.DUE'R26,#26'
               IF CLIENT='01977' THEN    ; * JMK133
                  LINE=SPACE(25):'Third Party Charges              ':SPACE(13):EXP.THIRD.CHG.DUE'R26,#15 '
                  IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.THIRD.CHG.DUE'R26,#15'
               END                       ; * JMK133
               GOSUB BUILD.EMAIL.REPORT
               LINE=SPACE(61):'==============='
               IF NOT(SEPARATE.REGIONS) THEN LINE:='           ==============='
               IF CLIENT='01977' THEN    ; * JMK133
                  IF SEPARATE.REGIONS THEN
                     LINE=SPACE(73):'==============='        ; * JMK133
                  END ELSE
                     LINE=SPACE(73):'=============== ==============='  ; * JMK133
                  END
               END                       ; * JMK133
               GOSUB BUILD.EMAIL.REPORT
               LINE=' '
               GOSUB BUILD.EMAIL.REPORT

* Print Totals
               LINE=SPACE(25):'Total Freight                    ':(EXP.OUT.CHG.DUE+EXP.IN.CHG.DUE+EXP.THIRD.CHG.DUE)'R26,#16'
               IF NOT(SEPARATE.REGIONS) THEN LINE:=(Y.OUT.CHG.DUE+Y.IN.CHG.DUE+Y.THIRD.CHG.DUE)'R26,#26'
               IF CLIENT='01977' THEN    ; * JMK133
                  LINE=SPACE(25):'Total Freight                    ':SPACE(13):(EXP.OUT.CHG.DUE+EXP.IN.CHG.DUE+EXP.THIRD.CHG.DUE)'R26,#15 '
                  IF NOT(SEPARATE.REGIONS) THEN LINE:=(Y.OUT.CHG.DUE+Y.IN.CHG.DUE+Y.THIRD.CHG.DUE)'R26,#15'
               END                       ; * JMK133
               GOSUB BUILD.EMAIL.REPORT
               LINE=SPACE(61):'==============='
               IF NOT(SEPARATE.REGIONS) THEN LINE:='           ==============='
               IF CLIENT='01977' THEN    ; * JMK133
                  IF SEPARATE.REGIONS THEN
                     LINE=SPACE(73):'==============='        ; * JMK133
                  END ELSE
                     LINE=SPACE(73):'=============== ==============='  ; * JMK133
                  END
               END                       ; * JMK133
               GOSUB BUILD.EMAIL.REPORT
               IF COPIES#0 THEN PRINTER CLOSE
            NEXT COPIES.LOOP
            SOE.DA=EA                    ; * Assign temporary EA array to final SOE.DA array
         END                             ; * IF EXPENSE='Y'
      END                                ; * IF FILE[1,13]='FB.BILLS.HIST'


      LOG.SEQ.NO = 16                    ; * End
      PROC.DESC = "Summary of Expenses Report (# 10)"
      LOG.ST.DATE = '' ; LOG.ST.TIME = '' ; LOG.END.DATE = DATE() ; LOG.END.TIME = TIME() ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF

* End Summary of Expenses Report (email attachment 10)
***********************************************************************
SUMMARY.OF.REGIONS.REPORT:* Begin Summary of Regions Report (email attachment 11)
***********************************************************************
      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK TO BEGIN DEBUG 210...')

      IF FROM.PROCESS THEN               ; * JMK70
         CRT @(0,7):@(-4):'Preparing the Summary of Regions Report (Attachment 11)...':@(0,7):       ; * JMK70
      END                                ; * JMK70

      SOR.DA=''
      SOR.XLS='' ; ROW.CNT = 1
      EA=''

* Read COPIES and modify as needed
      COPIES=CLIENT.REC<100,8>
      IF COPIES='' OR NOT(NUM(COPIES)) THEN COPIES='N'
      IF COPIES='N' THEN GOTO EXPENSE.DISTRIBUTION.REPORT    ; * JMK112

      LOG.SEQ.NO = 17                    ; * Start
      PROC.DESC = "Summary of Regions Report (# 11)"
      LOG.ST.DATE = DATE() ; LOG.ST.TIME = TIME() ; LOG.END.DATE = '' ; LOG.END.TIME = '' ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF

      IF FROM.PROCESS THEN
         IF SEPARATE.REGIONS THEN
            GOSUB SET.REGIONAL.COPIES
         END
      END ELSE
         IF NOT(HOLD.STAT) THEN
            IF SUMMARY.ONLY THEN
               COPIES=0
            END ELSE
               IF ONE.COPY THEN
                  COPIES=1
               END                       ; * IF ONE.COPY
            END                          ; * IF SUMMARY.ONLY
         END                             ; * IF NOT(HOLD.STAT)
      END                                ; * IF FROM.PROCESS

* Interpret COPIES for the printing loop
      BEGIN CASE
         CASE NOT(NUM(COPIES))
            COPY.COUNT=0
         CASE NUM(COPIES)
            COPY.COUNT=COPIES
         CASE 1
            COPY.COUNT=0
      END CASE

* Add extra test for emailing when not printing
      IF COPIES=0 AND NOT(SUMMARY.ONLY) THEN COPY.COUNT=1

      IF FILE[1,13]='FB.BILLS.HIST' THEN
         IF REGION='Y' THEN
            IF NOT(SEPARATE.REGIONS) THEN
               FOR COPIES.LOOP=1 TO COPY.COUNT
                  EA=''                  ; *  Build Summary of Regions Report in EA
                  IF CLIENT NE "01440" THEN
                     SOR.XLS<ROW.CNT> = "IOT":@VM:"Region":@VM:"City, State":@VM:"This Period"       ; * NPR05
                     IF NOT(SEPARATE.REGIONS) THEN SOD.XLS<ROW.CNT,-1> = "Year to Date"    ; * NPR05
                  END ELSE
                     SOR.XLS<ROW.CNT> = "IOT":@VM:"Region":@VM:"Address":@VM:"City, State":@VM:"This Period"   ; * NPR09
                     IF NOT(SEPARATE.REGIONS) THEN SOD.XLS<ROW.CNT,-1> = "Year to Date"    ; * NPR09
                  END
                  ROW.CNT += 1           ; * NPR05

                  EA<1>=COMPANY.NAME.HTML          ; * JMK95
                  EA<-1>=TITLE.1         ; * Set above
                  EA<-1>=TITLE.2         ; * Set above
                  EA<-1>=ODATE           ; * Set above
                  IF COPIES#0 THEN
                     PRINTER ON
                     GOSUB 8110
                     PAGE 1
                     HEADING HED
                  END
                  Y.OUT.CHG.DUE=0
                  Y.IN.CHG.DUE=0
                  Y.THIRD.CHG.DUE=0
                  LINE=' '
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=SPACE(56):'SUMMARY OF REGIONS'
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=SPACE(54):'========================'
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=' '
                  GOSUB BUILD.EMAIL.REPORT
                  IF CLIENT='01977' THEN           ; * JMK133
                     LINE=SPACE(80):'This Period'  ; * JMK133
                  END ELSE               ; * JMK133
                     LINE=SPACE(59):'This Period'
                  END                    ; * JMK133
                  IF CLIENT='01977' THEN           ; * MK133
                     IF NOT(SEPARATE.REGIONS) THEN LINE:='    Year to Date'      ; * JMK133
                  END ELSE               ; * JMK133
                     IF NOT(SEPARATE.REGIONS) THEN LINE:='              Year to Date'
                  END                    ; * JMK133
                  GOSUB BUILD.EMAIL.REPORT
                  IF SEPARATE.REGIONS THEN
                     LINE=DASH.1.COLS
                     IF CLIENT='01977' THEN        ; * JMK133
                        LINE=SPACE(78):'---------------'     ; * JMK133
                     END                 ; * JMK133
                  END ELSE
                     LINE=DASH.2.COLS
                     IF CLIENT='01977' THEN        ; * JMK133
                        LINE=SPACE(78):'--------------- ---------------'         ; * JMK133
                     END                 ; * JMK133
                  END
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=' '
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=SPACE(20):'Outbound Regions'
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=' '
                  GOSUB BUILD.EMAIL.REPORT

* Print Outbound Regions
                  TIMES=DCOUNT(REGS<1>,CHAR(253))
                  Y=0
                  FOR COUNT=1 TO TIMES
                     BEGIN CASE          ; * JMK108

                        CASE CLIENT='01638' OR CLIENT = "01267"        ; * JMK108  ; *NPR16
                           REG.ID=REGS<1,COUNT>    ; * JMK108
                        CASE 1           ; * JMK108
                           REG.ID=REGS<1,COUNT>
                     END CASE            ; * JMK108
                     READV DEST.ID FROM F.REGION,REG.ID,1 THEN
                        GOSUB GET.ZIP.CODE
                        DEST.CITY=CITY:', ':STATE
                     END ELSE
                        DEST.CITY=' ~~~ Not on file ~~~ '
                     END
                     REG.DESC=REGS<11,COUNT>
                     REG.DESC=REG.DESC[1,10]
                     REG.DESC=REG.DESC:STR(' ',10-LEN(REG.DESC))

                     REG.ADDR=REGS<12,COUNT>       ; * NPR09
                     REG.ADDR=REG.ADDR[1,25]       ; * NPR09
                     REG.ADDR=REG.ADDR:STR(' ',25-LEN(REG.ADDR))       ; * NPR09

                     IF SEPARATE.REGIONS THEN
                        IF REGS<5,COUNT>'R0'#0 THEN
                           Y=Y+1
                           IF CLIENT NE "01440" THEN         ; * NPR09
                              IF CLIENT = '01977' THEN       ; * JMK133
                                 LINE=SPACE(5):Y'R#3 ':REG.ID:' ':REGS<11,COUNT>'L#30 ':DEST.CITY'L#30 ':REGS<5,COUNT>'R26,#15'    ; * JMK133
                              END ELSE   ; * JMK133
                                 LINE=SPACE(7):Y'R#3':'  ':REG.ID:' ':REG.DESC:' ':DEST.CITY'L#25':REGS<5,COUNT>'R26,#16'
                              END
                              SOD.XLS<ROW.CNT> = "OB":@VM:REG.ID:@VM:DEST.CITY:@VM:REGS<5,COUNT>'R26,#16'      ; * NPR05
                           END ELSE
                              LINE=SPACE(7):Y'R#3':'  ':REG.ID:'  ':REG.ADDR[1,23]'L#23' : DEST.CITY[1,12] 'L#12' : REGS<5,COUNT>'R26,#16'   ; * NPR09
                              SOR.XLS<ROW.CNT> = "OB":@VM:REG.ID:@VM:REG.ADDR:@VM:DEST.CITY:@VM:REGS<5,COUNT>'R26,#16'   ; * NPR09
                           END
                           ROW.CNT += 1  ; * NPR05
                           GOSUB BUILD.EMAIL.REPORT
                        END
                     END ELSE
                        IF REGS<2,COUNT>'R0'=0 & REGS<5,COUNT>'R0'=0 ELSE
                           Y=Y+1
                           IF CLIENT NE "01440" THEN         ; * NPR09
                              IF CLIENT='01977' THEN         ; * JMK133
                                 LINE=SPACE(5):Y'R#3 ':REG.ID:' ':REGS<11,COUNT>'L#30 ':DEST.CITY'L#30 ':REGS<5,COUNT>'R26,#15 ':REGS<2,COUNT>'R26,#15'          ; * JMK133
                              END ELSE   ; * JMK133
                                 LINE=SPACE(7):Y'R#3':'  ':REG.ID:' ':REG.DESC:' ':DEST.CITY'L#25':REGS<5,COUNT>'R26,#16':REGS<2,COUNT>'R26,#26'
                              END        ; * JMK133
                              SOD.XLS<ROW.CNT> = "OB":@VM:REG.ID:@VM:DEST.CITY:@VM:REGS<5,COUNT>'R26,#16':@VM:REGS<2,COUNT>'R26,#26'         ; * NPR05
                           END ELSE
                              LINE=SPACE(7):Y'R#3':'  ':REG.ID:'  ':REG.ADDR[1,23]'L#23' : DEST.CITY[1,12] 'L#12' : REGS<5,COUNT>'R26,#16':REGS<2,COUNT>'R26,#26'          ; * NPR09
                              SOR.XLS<ROW.CNT> = "OB":@VM:REG.ID:@VM:REG.ADDR:@VM:DEST.CITY:@VM:REGS<5,COUNT>'R26,#16':@VM:REGS<2,COUNT>'R26,#26'      ; * NPR09
                           END
                           ROW.CNT += 1  ; * NPR05
                           GOSUB BUILD.EMAIL.REPORT
                        END
                        Y.OUT.CHG.DUE+=REGS<2,COUNT>
                     END                 ; * IF SEPARATE.REGIONS
                  NEXT COUNT
                  IF SEPARATE.REGIONS THEN
                     LINE=DASH.1.COLS
                     IF CLIENT='01977' THEN        ; * JMK133
                        LINE=SPACE(78):'---------------'     ; * JMK133
                     END                 ; * JMK133
                  END ELSE
                     LINE=DASH.2.COLS
                     IF CLIENT='01977' THEN        ; * JMK133
                        LINE=SPACE(78):'--------------- ---------------'         ; * JMK133
                     END                 ; * JMK133
                  END
                  GOSUB BUILD.EMAIL.REPORT
                  IF CLIENT='01977' THEN           ; * JMK133
                     LINE=SPACE(25):'Outbound Charges             ':SPACE(23):REG.OUT.CHG.DUE'R26,#15 '        ; * JMK133
                     IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.OUT.CHG.DUE'R26,#15'
                  END ELSE               ; * JMK133
                     LINE=SPACE(25):'Outbound Charges             ':REG.OUT.CHG.DUE'R26,#16'
                     IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.OUT.CHG.DUE'R26,#26'
                  END                    ; * JMK133
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=SPACE(57):'==============='
                  IF NOT(SEPARATE.REGIONS) THEN LINE:='           ==============='
                  IF CLIENT='01977' THEN           ; * JMK133
                     LINE=SPACE(78):'==============='        ; * JMK133
                     IF NOT(SEPARATE.REGIONS) THEN LINE:=' ==============='      ; * JMK133
                  END                    ; * JMK133
                  GOSUB BUILD.EMAIL.REPORT

* Print Inbound Regions
                  LINE=' '
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=SPACE(20):'Inbound Regions'
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=' '
                  GOSUB BUILD.EMAIL.REPORT
                  TIMES=DCOUNT(REGS<1>,CHAR(253))
                  Y=0
                  FOR COUNT=1 TO TIMES
                     BEGIN CASE          ; * JMK108

                        CASE CLIENT='01638' OR CLIENT = "01267"        ; * JMK108  ; *NPR16
                           REG.ID=REGS<1,COUNT>    ; * JMK108
                        CASE 1           ; * JMK108
                           REG.ID=REGS<1,COUNT>
                     END CASE            ; * JMK108
                     READV DEST.ID FROM F.REGION,REG.ID,1 THEN
                        GOSUB GET.ZIP.CODE
                        DEST.CITY=CITY:', ':STATE
                     END ELSE
                        DEST.CITY=' ~~~ Not on file ~~~ '
                     END
                     REG.DESC=REGS<11,COUNT>
                     REG.DESC=REG.DESC[1,10]
                     REG.DESC=REG.DESC:STR(' ',10-LEN(REG.DESC))

                     REG.ADDR=REGS<12,COUNT>       ; * NPR09
                     REG.ADDR=REG.ADDR[1,25]       ; * NPR09
                     REG.ADDR=REG.ADDR:STR(' ',25-LEN(REG.ADDR))       ; * NPR09

                     IF SEPARATE.REGIONS THEN
                        IF REGS<6,COUNT>'R0'#0 THEN
                           Y=Y+1
                           IF CLIENT NE "01440" THEN
                              IF CLIENT = '01977' THEN       ; * JMK133
                                 LINE=SPACE(5):Y'R#3 ':REG.ID:' ':REGS<11,COUNT>'L#30 ':DEST.CITY'L#30 ':REGS<6,COUNT>'R26,#15'    ; * JMK133
                              END ELSE   ; * JMK133
                                 LINE=SPACE(7):Y'R#3':'  ':REG.ID:' ':REG.DESC:' ':DEST.CITY'L#25':REGS<6,COUNT>'R26,#16'
                              END
                              SOD.XLS<ROW.CNT> = "IB":@VM:REG.ID:@VM:DEST.CITY:@VM:REGS<6,COUNT>'R26,#16'      ; * NPR05
                           END ELSE
                              LINE=SPACE(7):Y'R#3':'  ':REG.ID:'  ':REG.ADDR[1,23]'L#23' : DEST.CITY[1,12] 'L#12' : REGS<6,COUNT>'R26,#16'   ; * NPR09
                              SOR.XLS<ROW.CNT> = "IB":@VM:REG.ID:@VM:REG.ADDR:@VM:DEST.CITY:@VM:REGS<6,COUNT>'R26,#16'   ; * NPR09
                           END
                           ROW.CNT += 1  ; * NPR05
                           GOSUB BUILD.EMAIL.REPORT
                        END
                     END ELSE
                        IF REGS<3,COUNT>'R0'=0 & REGS<6,COUNT>'R0'=0 ELSE
                           Y=Y+1
                           IF CLIENT NE "01440" THEN
                              IF CLIENT='01977' THEN         ; * JMK133
                                 LINE=SPACE(5):Y'R#3 ':REG.ID:' ':REGS<11,COUNT>'L#30 ':DEST.CITY'L#30 ':REGS<6,COUNT>'R26,#15 ':REGS<3,COUNT>'R26,#15'          ; * JMK133
                              END ELSE   ; * JMK133
                                 LINE=SPACE(7):Y'R#3':'  ':REG.ID:' ':REG.DESC:' ':DEST.CITY'L#25':REGS<6,COUNT>'R26,#16':REGS<3,COUNT>'R26,#26'
                              END        ; * JMK133
                              SOD.XLS<ROW.CNT> = "IB":@VM:REG.ID:@VM:DEST.CITY:@VM:REGS<6,COUNT>'R26,#16':@VM:REGS<3,COUNT>'R26,#26'         ; * NPR05
                           END ELSE
                              LINE=SPACE(7):Y'R#3':'  ':REG.ID:'  ':REG.ADDR[1,23]'L#23' : DEST.CITY[1,12] 'L#12' : REGS<6,COUNT>'R26,#16':REGS<3,COUNT>'R26,#26'          ; * NPR09
                              SOR.XLS<ROW.CNT> = "IB":@VM:REG.ID:@VM:REG.ADDR:@VM:DEST.CITY:@VM:REGS<6,COUNT>'R26,#16':@VM:REGS<3,COUNT>'R26,#26'      ; * NPR09
                           END
                           ROW.CNT += 1  ; * NPR05
                           GOSUB BUILD.EMAIL.REPORT
                        END
                        Y.IN.CHG.DUE+=REGS<3,COUNT>
                     END                 ; * IF SEPARATE.REGIONS
                  NEXT COUNT
                  IF SEPARATE.REGIONS THEN
                     LINE=DASH.1.COLS
                     IF CLIENT='01977' THEN        ; * JMK133
                        LINE=SPACE(78):'---------------'     ; * JMK133
                     END                 ; * JMK133
                  END ELSE
                     LINE=DASH.2.COLS
                     IF CLIENT='01977' THEN        ; * JMK133
                        LINE=SPACE(78):'--------------- ---------------'         ; * JMK133
                     END                 ; * JMK133
                  END
                  GOSUB BUILD.EMAIL.REPORT
                  IF CLIENT='01977' THEN           ; * JMK133
                     LINE=SPACE(25):'Inbound Charges              ':SPACE(23):REG.IN.CHG.DUE'R26,#15 '         ; * JMK133
                     IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.IN.CHG.DUE'R26,#15'
                  END ELSE               ; * JMK133
                     LINE=SPACE(25):'Inbound Charges              ':REG.IN.CHG.DUE'R26,#16'
                     IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.IN.CHG.DUE'R26,#26'
                  END                    ; * JMK133
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=SPACE(57):'==============='
                  IF NOT(SEPARATE.REGIONS) THEN LINE:='           ==============='
                  IF CLIENT='01977' THEN           ; * JMK133
                     LINE=SPACE(78):'==============='        ; * JMK133
                     IF NOT(SEPARATE.REGIONS) THEN LINE:=' ==============='      ; * JMK133
                  END                    ; * JMK133
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=' '
                  GOSUB BUILD.EMAIL.REPORT

* Print Third Party Regions
                  LINE=' '
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=SPACE(20):'Third Party Regions'
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=' '
                  GOSUB BUILD.EMAIL.REPORT
                  TIMES=DCOUNT(REGS<1>,CHAR(253))
                  Y=0
                  FOR COUNT=1 TO TIMES
                     BEGIN CASE          ; * JMK108

                        CASE CLIENT='01638' OR CLIENT = "01267"        ; * JMK108  ; *NPR16
                           REG.ID=REGS<1,COUNT>    ; * JMK108
                        CASE 1           ; * JMK108
                           REG.ID=REGS<1,COUNT>
                     END CASE            ; * JMK108
                     READV DEST.ID FROM F.REGION,REG.ID,1 THEN
                        GOSUB GET.ZIP.CODE
                        DEST.CITY=CITY:', ':STATE
                     END ELSE
                        DEST.CITY=' ~~~ Not on file ~~~ '
                     END
                     REG.DESC=REGS<11,COUNT>
                     REG.DESC=REG.DESC[1,10]
                     REG.DESC=REG.DESC:STR(' ',10-LEN(REG.DESC))

                     REG.ADDR=REGS<12,COUNT>       ; * NPR09
                     REG.ADDR=REG.ADDR[1,25]       ; * NPR09
                     REG.ADDR=REG.ADDR:STR(' ',25-LEN(REG.ADDR))       ; * NPR09

                     IF SEPARATE.REGIONS THEN
                        IF REGS<7,COUNT>'R0'#0 THEN
                           Y=Y+1
                           IF CLIENT NE "01440" THEN
                              IF CLIENT = '01977' THEN       ; * JMK133
                                 LINE=SPACE(5):Y'R#3 ':REG.ID:' ':REGS<11,COUNT>'L#30 ':DEST.CITY'L#30 ':REGS<7,COUNT>'R26,#15'    ; * JMK133
                              END ELSE   ; * JMK133
                                 LINE=SPACE(7):Y'R#3':'  ':REG.ID:' ':REG.DESC:' ':DEST.CITY'L#25':REGS<7,COUNT>'R26,#16'
                              END
                              SOD.XLS<ROW.CNT> = "TP":@VM:REG.ID:@VM:DEST.CITY:@VM:REGS<7,COUNT>'R26,#16'      ; * NPR05
                           END ELSE
                              LINE=SPACE(7):Y'R#3':'  ':REG.ID:'  ':REG.ADDR[1,23]'L#23' : DEST.CITY[1,12] 'L#12' : REGS<7,COUNT>'R26,#16'   ; * NPR09
                              SOR.XLS<ROW.CNT> = "TP":@VM:REG.ID:@VM:REG.ADDR:@VM:DEST.CITY:@VM:REGS<7,COUNT>'R26,#16'   ; * NPR09
                           END
                           ROW.CNT += 1  ; * NPR05
                           GOSUB BUILD.EMAIL.REPORT
                        END
                     END ELSE
                        IF REGS<4,COUNT>'R0'=0 & REGS<7,COUNT>'R0'=0 ELSE
                           Y=Y+1
                           IF CLIENT NE "01440" THEN
                              IF CLIENT='01977' THEN         ; * JMK133
                                 LINE=SPACE(5):Y'R#3 ':REG.ID:' ':REGS<11,COUNT>'L#30 ':DEST.CITY'L#30 ':REGS<7,COUNT>'R26,#15 ':REGS<4,COUNT>'R26,#15'          ; * JMK133
                              END ELSE   ; * JMK133
                                 LINE=SPACE(7):Y'R#3':'  ':REG.ID:' ':REG.DESC:' ':DEST.CITY'L#25':REGS<7,COUNT>'R26,#16':REGS<4,COUNT>'R26,#26'
                              END        ; * JMK133
                              SOD.XLS<ROW.CNT> = "TP":@VM:REG.ID:@VM:DEST.CITY:@VM:REGS<7,COUNT>'R26,#16':@VM:REGS<4,COUNT>'R26,#26'         ; * NPR05
                           END ELSE
                              LINE=SPACE(7):Y'R#3':'  ':REG.ID:'  ':REG.ADDR[1,23]'L#23' : DEST.CITY[1,12] 'L#12' : REGS<7,COUNT>'R26,#16':REGS<4,COUNT>'R26,#26'          ; * NPR09
                              SOR.XLS<ROW.CNT> = "TP":@VM:REG.ID:@VM:REG.ADDR:@VM:DEST.CITY:@VM:REGS<7,COUNT>'R26,#16':@VM:REGS<4,COUNT>'R26,#26'      ; * NPR09
                           END
                           ROW.CNT += 1  ; * NPR05
                           GOSUB BUILD.EMAIL.REPORT
                        END
                        Y.THIRD.CHG.DUE+=REGS<4,COUNT>
                     END                 ; * IF SEPARATE.REGIONS
                  NEXT COUNT
                  IF SEPARATE.REGIONS THEN
                     LINE=DASH.1.COLS
                     IF CLIENT='01977' THEN        ; * JMK133
                        LINE=SPACE(78):'---------------'     ; * JMK133
                     END                 ; * JMK133
                  END ELSE
                     LINE=DASH.2.COLS
                     IF CLIENT='01977' THEN        ; * JMK133
                        LINE=SPACE(78):'--------------- ---------------'         ; * JMK133
                     END                 ; * JMK133
                  END
                  GOSUB BUILD.EMAIL.REPORT
                  IF CLIENT='01977' THEN           ; * JMK133
                     LINE=SPACE(25):'Third Party Charges          ':SPACE(23):REG.THIRD.CHG.DUE'R26,#15 '      ; * JMK133
                     IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.THIRD.CHG.DUE'R26,#15'
                  END ELSE               ; * JMK133
                     LINE=SPACE(25):'Third Party Charges          ':REG.THIRD.CHG.DUE'R26,#16'
                     IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.THIRD.CHG.DUE'R26,#26'
                  END                    ; * JMK133
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=SPACE(57):'==============='
                  IF NOT(SEPARATE.REGIONS) THEN LINE:='           ==============='
                  IF CLIENT='01977' THEN           ; * JMK133
                     LINE=SPACE(78):'==============='        ; * JMK133
                     IF NOT(SEPARATE.REGIONS) THEN LINE:=' ==============='      ; * JMK133
                  END                    ; * JMK133
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=' '
                  GOSUB BUILD.EMAIL.REPORT
                  IF CLIENT='01977' THEN           ; * JMK133
                     LINE=SPACE(25):'Total Freight                ':SPACE(23):(REG.OUT.CHG.DUE+REG.IN.CHG.DUE+REG.THIRD.CHG.DUE)'R26,#15 '   ; * JMK133
                     IF NOT(SEPARATE.REGIONS) THEN LINE:=(Y.OUT.CHG.DUE+Y.IN.CHG.DUE+Y.THIRD.CHG.DUE)'R26,#15'
                  END ELSE               ; * JMK133
                     LINE=SPACE(25):'Total Freight                ':(REG.OUT.CHG.DUE+REG.IN.CHG.DUE+REG.THIRD.CHG.DUE)'R26,#16'
                     IF NOT(SEPARATE.REGIONS) THEN LINE:=(Y.OUT.CHG.DUE+Y.IN.CHG.DUE+Y.THIRD.CHG.DUE)'R26,#26'
                  END                    ; * JMK133
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=SPACE(57):'==============='
                  IF NOT(SEPARATE.REGIONS) THEN LINE:='           ==============='
                  IF CLIENT='01977' THEN           ; * JMK133
                     LINE=SPACE(78):'==============='        ; * JMK133
                     IF NOT(SEPARATE.REGIONS) THEN LINE:=' ==============='      ; * JMK133
                  END                    ; * JMK133
                  GOSUB BUILD.EMAIL.REPORT
                  IF COPIES#0 THEN PRINTER CLOSE
               NEXT COPIES.LOOP
               SOR.DA=EA                 ; * Assign temporary EA array to final SOR.DA array
            END                          ; * IF NOT(SEPARATE.REGIONS)
         END                             ; * IF REGION='Y'
      END                                ; * IF FILE[1,13]='FB.BILLS.HIST'


      LOG.SEQ.NO = 17                    ; *  End
      PROC.DESC = "Summary of Regions Report (# 11)"
      PROC.EMAIL = ''
      LOG.ST.DATE = '' ; LOG.ST.TIME = '' ; LOG.END.DATE = DATE() ; LOG.END.TIME = TIME() ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF

* End Summary of Regions Report (email attachment 11)
***********************************************************************
EXPENSE.DISTRIBUTION.REPORT:* Begin Expense Distribution Report (email attachment 12)
***********************************************************************
      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK TO BEGIN DEBUG 220...')

      IF FROM.PROCESS THEN               ; * JMK70
         CRT @(0,7):@(-4):'Preparing the Expense Distribution Report (Attachment 12)...':@(0,7):     ; * JMK70
      END                                ; * JMK70

      EXD.DA=''
      EA=''

* Read COPIES and modify as needed
      COPIES=CLIENT.REC<100,9>
      IF COPIES='' OR NOT(NUM(COPIES)) THEN COPIES='N'
      IF COPIES='N' THEN GOTO MODE.DISTRIBUTION.REPORT       ; * JMK112


      LOG.SEQ.NO = 18                    ; * Start
      PROC.DESC = "Expense Distribution Report (# 12)"
      LOG.ST.DATE = DATE() ; LOG.ST.TIME = TIME() ; LOG.END.DATE = '' ; LOG.END.TIME = '' ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF


      IF FROM.PROCESS THEN
         IF SEPARATE.REGIONS THEN
            GOSUB SET.REGIONAL.COPIES
         END
      END ELSE
         IF NOT(HOLD.STAT) THEN
            IF SUMMARY.ONLY THEN
               COPIES=0
            END ELSE
               IF ONE.COPY THEN
                  COPIES=1
               END                       ; * IF ONE.COPY
            END                          ; * IF SUMMARY.ONLY
         END                             ; * IF NOT(HOLD.STAT)
      END                                ; * IF FROM.PROCESS

* Interpret COPIES for the printing loop
      BEGIN CASE
         CASE NOT(NUM(COPIES))
            COPY.COUNT=0
         CASE NUM(COPIES)
            COPY.COUNT=COPIES
         CASE 1
            COPY.COUNT=0
      END CASE

* Add extra test for emailing when not printing
      IF COPIES=0 AND NOT(SUMMARY.ONLY) THEN COPY.COUNT=1

      IF FILE[1,13]='FB.BILLS.HIST' THEN
         IF CLIENT#'00883' OR SEPARATE.REGIONS THEN

PRINT.EXPENSE.DIST:                      ; * Called at end of all regions only for account 00883, Pollock
            NUM.DIST=DCOUNT(DIST.MIDS,CHAR(254))
            IF NUM.DIST NE 0 THEN
               FOR COPIES.LOOP=1 TO COPY.COUNT
                  EA=''                  ; * Build Expense Distribution Report in EA

                  EA<1>=COMPANY.NAME.HTML          ; * JMK95
                  EA<-1>=TITLE.1         ; * Set above
                  EA<-1>=TITLE.2         ; * Set above
                  EA<-1>=ODATE           ; * Set above
                  IF COPIES#0 THEN
                     PRINTER ON
                     CHAR.PER.IN=10
                     GOSUB 8110
                     PAGE 1

                     CALL PAGE.HEAD(PROG.NAME,COMPANY.NAME.HTML,TITLE.1,TITLE.2,ODATE,80,HED)        ; * JMK95
                     HEADING HED
                  END
                  LINE=' '
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=SPACE(30):'EXPENSE DISTRIBUTION'
                  GOSUB BUILD.EMAIL.REPORT
                  LINE='--------------------------------------------------------------------------------'
                  GOSUB BUILD.EMAIL.REPORT
                  LINE='EXPENSE CODE                         CARRIER CHG      COMMISSION       TOTAL CHG'
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=' '
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=' '
                  GOSUB BUILD.EMAIL.REPORT
                  GTOT=''
                  ATOT=''
                  TOT.DTOT=''
                  PARTIAL.PENNY=0
                  FOR Z=1 TO NUM.DIST
                     MST.ID=DIST.MIDS<Z,1>
                     IF MST.ID='Postage and Fees' OR (CLIENT='00883' AND MST.ID[6,4]='0112') THEN TRAP.POSTAGE=1 ELSE TRAP.POSTAGE=0
                     IF CLIENT='01706' THEN        ; * JMK106
                        MST.DIV.ID=FIELD(MST.ID,'-',1)'R%5'  ; * JMK106
                        READ MST.DIV.REC FROM F.DIVISION,MST.DIV.ID ELSE MST.DIV.REC=''    ; * JMK106
                        RDIV=MST.DIV.REC<45>       ; * JMK106
                        BEGIN CASE       ; * JMK106
                           CASE RDIV='CORP' ; NDIV='01'      ; * JMK106
                           CASE RDIV='DNAD' ; NDIV='02'      ; * JMK106
                           CASE RDIV='DMTN' ; NDIV='04'      ; * JMK106
                           CASE RDIV='DSCE' ; NDIV='05'      ; * JMK106
                           CASE RDIV='DCNT' ; NDIV='05'      ; * JMK106
                           CASE RDIV='DSEA' ; NDIV='06'      ; * JMK106
                           CASE RDIV='DSTH' ; NDIV='07'      ; * JMK106
                           CASE RDIV='DWST' ; NDIV='08'      ; * JMK106
                           CASE RDIV='DNWE' ; NDIV='09'      ; * JMK106
                           CASE RDIV='DFLA' ; NDIV='06'
                           CASE RDIV='DMID' ; NDIV='02'
                           CASE RDIV='DECT' ; NDIV='07'
                           CASE RDIV='DWTC' ; NDIV='05'
                           CASE RDIV='DNEA' ; NDIV='02'
                           CASE 1 ; NDIV='99'      ; * JMK106
                        END CASE         ; * JMK106
                        IF MST.ID[1,2]='08' THEN NDIV='01'
                        IF MST.ID[1,2]='07' THEN NDIV='23'
                        IF RDIV='DSCE' AND MST.ID[1,1]='1' THEN NDIV='07'
                        IF RDIV='DSCE' AND MST.ID[1,4]='1002' THEN NDIV='05'

                        IF RDIV='DECT' AND MST.ID[1,2]='15' THEN NDIV='06'
                        IF RDIV='DWTC' AND MST.ID[1,4]='2475' THEN NDIV='07'
                        IF RDIV='DECT' AND MST.ID[1,2]='26' THEN NDIV='02'
                        IF RDIV='DWTC' AND MST.ID[1,2]='32' THEN NDIV='04'
                        IF RDIV='DNEA' AND MST.ID[1,2]='40' THEN NDIV='09'
                        LINE=MST.ID'L#27 ':RDIV'L#4 ':NDIV'R#2 '       ; * JMK106
                     END ELSE            ; * JMK106
                        IF CLIENT = '01870' OR CLIENT = "01832" THEN   ; * NPR777 06/03/11
                           IF MST.ID = 'Postage and Fees' THEN MST.ID = "Fees"   ; * NPR777 06/03/11
                        END              ; * NPR777 06/03/11
                        LINE=MST.ID'L#36'
                     END                 ; * JMK106
                     DTOT=0
                     Q=DCOUNT(DIST.IDS<Z>,CHAR(253))
                     FOR X=1 TO 2
                        IF X=2 THEN
                           IF TRAP.POSTAGE ELSE
                              DIST.AMTS<Z,X>=DIST.AMTS<Z,X>'R0'
                           END
                        END
                        IF X=2 THEN
                           IF TRAP.POSTAGE THEN
                              AFS.COMMIS=0
                           END ELSE
                              AFS.COMMIS=(DIST.AMTS<Z,X>-DIST.AMTS<Z,X-1>)
                           END
                        END
                        IF X=2 THEN
                           IF TRAP.POSTAGE THEN
                              TRAP.POSTAGE=0
                              LINE:='0''R26,#12':SPACE(4):'0''R26,#12':SPACE(4):DIST.AMTS<Z,X>'R26,#12'
                           END ELSE
                              LINE:=DIST.AMTS<Z,X-1>'R26,#12':SPACE(4):AFS.COMMIS'R26,#12':SPACE(4):DIST.AMTS<Z,X>'R26,#12'
                           END
                        END
                        IF X=2 THEN TOT.DTOT=TOT.DTOT+AFS.COMMIS
                        DTOT<X>=DTOT<X>+OCONV(DIST.AMTS<Z,X>,'MR0')
                        GTOT<X>=GTOT<X>+OCONV(DIST.AMTS<Z,X>,'MR0')
                        IF X=1 THEN
                           IF TRAP.POSTAGE THEN
                              ATOT<Z>=ATOT<Z>
                           END ELSE
                              ATOT<Z>=ATOT<Z>+DTOT<X>
                           END
                        END
                     NEXT X
                     GOSUB BUILD.EMAIL.REPORT
                     IF Q>1 THEN
                        LINE=SPACE(30):STR('-',12)
                        GOSUB BUILD.EMAIL.REPORT
                        LINE=SPACE(30):OCONV(DTOT,'MR2,')'R#12'
                        GOSUB BUILD.EMAIL.REPORT
                     END
                  NEXT Z
                  LINE=' '
                  GOSUB BUILD.EMAIL.REPORT
                  CC.TOTAL=SUM(ATOT)
                  LINE="TOTAL"'L#36':OCONV(CC.TOTAL,'MR2,')'R#12':SPACE(4):OCONV(TOT.DTOT,'MR2,')'R#12':SPACE(4):OCONV(GTOT<2>,'MR2,')'R#12'
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=' '
                  GOSUB BUILD.EMAIL.REPORT
                  IF COPIES#0 THEN PRINTER CLOSE
               NEXT COPIES.LOOP
               EXD.DA=EA                 ; * Assign temporary EA array to final EXD.DA array
            END                          ; * NUM.DIST NE 0
            IF PRINT.TOTAL.EXPENSE.DIST=0 THEN GOTO THE.END  ; * Only for 00883 Pollock
         END                             ; * IF CLIENT#'00883' OR SEPARATE.REGIONS
      END                                ; * IF FILE[1,13]='FB.BILLS.HIST'


      LOG.SEQ.NO = 18                    ; * End
      PROC.DESC = "Expense Distribution Report (# 12)"
      LOG.ST.DATE = '' ; LOG.ST.TIME = '' ; LOG.END.DATE = DATE() ; LOG.END.TIME = TIME() ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF

* End Expense Distribution Report (email attachment 12)
***********************************************************************
MODE.DISTRIBUTION.REPORT:* Begin Mode Distribution Report (email attachment 13)
***********************************************************************
      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK TO BEGIN DEBUG 230...')

      IF FROM.PROCESS THEN               ; * JMK70
         CRT @(0,7):@(-4):'Preparing the Mode Distribution Report (Attachment 13)...':@(0,7):        ; * JMK70
      END                                ; * JMK70

      MOD.DA=''
      EA=''

* Read COPIES and modify as needed
      COPIES=CLIENT.REC<100,10>
      IF COPIES='' OR NOT(NUM(COPIES)) THEN COPIES='N'
      IF COPIES='N' THEN GOTO AFS.TRANS.SUMMARY.REPORT       ; * NPR08
      LOG.SEQ.NO = 19                    ; * Start
      PROC.DESC = "Mode Distribution Report (# 13)"
      LOG.ST.DATE = DATE() ; LOG.ST.TIME = TIME() ; LOG.END.DATE = '' ; LOG.END.TIME = '' ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF

      IF FROM.PROCESS THEN
         IF SEPARATE.REGIONS THEN
            GOSUB SET.REGIONAL.COPIES
         END
      END ELSE
         IF NOT(HOLD.STAT) THEN
            IF SUMMARY.ONLY THEN
               COPIES=0
            END ELSE
               IF ONE.COPY THEN
                  COPIES=1
               END                       ; * IF ONE.COPY
            END                          ; * IF SUMMARY.ONLY
         END                             ; * IF NOT(HOLD.STAT)
      END                                ; * IF FROM.PROCESS

* Interpret COPIES for the printing loop
      BEGIN CASE
         CASE NOT(NUM(COPIES))
            COPY.COUNT=0
         CASE NUM(COPIES)
            COPY.COUNT=COPIES
         CASE 1
            COPY.COUNT=0
      END CASE

* Add extra test for emailing when not printing
      IF COPIES=0 AND NOT(SUMMARY.ONLY) THEN COPY.COUNT=1

      IF FILE[1,13]='FB.BILLS.HIST' THEN
         IF CLIENT#'00883' OR SEPARATE.REGIONS THEN
            NUM.MODE=DCOUNT(TRANS.ARRAY<1>,CHAR(253))
            IF NUM.MODE NE 0 THEN
               FOR COPIES.LOOP=1 TO COPY.COUNT
                  EA=''                  ; * Build Mode Distribution Report in EA

                  EA<1>=COMPANY.NAME.HTML          ; * JMK95
                  EA<-1>=TITLE.1         ; * Set above
                  EA<-1>=TITLE.2         ; * Set above
                  EA<-1>=ODATE           ; * Set above
                  IF COPIES#0 THEN
                     PRINTER ON
                     CHAR.PER.IN=10
                     GOSUB 8110
                     PAGE 1

                     CALL PAGE.HEAD(PROG.NAME,COMPANY.NAME.HTML,TITLE.1,TITLE.2,ODATE,80,HED)        ; * JMK95
                     HEADING HED
                  END
                  LINE=' '
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=SPACE(32):'MODE DISTRIBUTION'
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=SPACE(30):'====================='
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=' '
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=' '
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=SPACE(27):'    Inbound    Outbound Third Party       Total'
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=SPACE(27):'----------- ----------- ----------- -----------'
                  GOSUB BUILD.EMAIL.REPORT
                  GTOT=''
                  PARTIAL.PENNY=0
                  FOR Z=1 TO NUM.MODE
                     LINE=TRANS.ARRAY<1,Z>'R#3'
                     READV TRANS.MODE FROM F.TRANSPORT,TRANS.ARRAY<1,Z>,1 ELSE TRANS.MODE='*** Unknown ***'
                     LINE:=' ':TRANS.MODE'L#22'
                     DTOT=0
                     FOR X=2 TO 4
                        IF TRANS.ARRAY<X,Z>#0 THEN
                           TRANS.ARRAY<X,Z>=TRANS.ARRAY<X,Z>+PARTIAL.PENNY
                           PARTIAL.PENNY=TRANS.ARRAY<X,Z>
                           TRANS.ARRAY<X,Z>=TRANS.ARRAY<X,Z>'R0'
                           PARTIAL.PENNY=PARTIAL.PENNY-TRANS.ARRAY<X,Z>
                        END
                        LINE:=TRANS.ARRAY<X,Z>'R26,#12'
                        DTOT<Z>=DTOT<Z>+OCONV(TRANS.ARRAY<X,Z>,'MR0')
                        GTOT<X>=GTOT<X>+OCONV(TRANS.ARRAY<X,Z>,'MR0')
                     NEXT X
                     LINE:=DTOT<Z>'R26,#12'
                     GOSUB BUILD.EMAIL.REPORT
                  NEXT Z
                  LINE=SPACE(27):'----------- ----------- ----------- -----------'
                  GOSUB BUILD.EMAIL.REPORT
                  LINE="TOTAL"'L#26'
                  LINE:=OCONV(GTOT<2>,'MR2,')'R#12'
                  LINE:=OCONV(GTOT<3>,'MR2,')'R#12'
                  LINE:=OCONV(GTOT<4>,'MR2,')'R#12'
                  LINE:=OCONV(GTOT<2>+GTOT<3>+GTOT<4>,'MR2,')'R#12'
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=SPACE(27):'==============================================='
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=' '
                  GOSUB BUILD.EMAIL.REPORT
                  LINE="Postage and Fees"'L#62':OCONV(POSTAGE.AND.FEE,'MR2,')'R#12'
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=SPACE(63):'-----------'
                  GOSUB BUILD.EMAIL.REPORT
                  LINE="GRAND TOTAL"'L#62'
                  LINE:=OCONV(GTOT<2>+GTOT<3>+GTOT<4>+POSTAGE.AND.FEE,'MR2,')'R#12'
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=SPACE(63):'==========='
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=' '
                  GOSUB BUILD.EMAIL.REPORT
                  IF COPIES#0 THEN PRINTER CLOSE
               NEXT COPIES.LOOP
               MOD.DA=EA                 ; * Assign temporary EA array to final MOD.DA array
            END                          ; * IF NUM.MODE NE 0
         END                             ; * IF CLIENT#'00883' OR SEPARATE.REGIONS
      END                                ; * IF FILE[1,13]='FB.BILLS.HIST'


      LOG.SEQ.NO = 19                    ; * End
      PROC.DESC = "Mode Distribution Report (# 13)"
      LOG.ST.DATE = '' ; LOG.ST.TIME = '' ; LOG.END.DATE = DATE() ; LOG.END.TIME = TIME() ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF

* End Mode Distribution Report (email attachment 13)
***********************************************************************
AFS.TRANS.SUMMARY.REPORT:* Begin AFS Transportion Summary Report (email attachment 13b)
***********************************************************************

      GOTO REGION.EXPENSE.CODE.SUMMARY.REPORT      ; * NPR08 (Skip this report anyway as per Brian P. 02/17/10)

      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK TO BEGIN DEBUG 230...')

      IF FROM.PROCESS THEN               ; * JMK70
         CRT @(0,7):@(-4):'Preparing the AFS Transportion Summary Report (Attachment 13b)...':@(0,7):          ; * JMK70
      END                                ; * JMK70

      ATS.DA=''
      EA=''

      COPIES='0'                         ; * NPR08

      IF COPIES='' OR NOT(NUM(COPIES)) THEN COPIES='N'
      IF COPIES='N' THEN GOTO REGION.EXPENSE.CODE.SUMMARY.REPORT       ; * JMK112

      LOG.SEQ.NO = 23                    ; * Start
      PROC.DESC = "AFS Transportion Summary Report (# 13b)"
      LOG.ST.DATE = DATE() ; LOG.ST.TIME = TIME() ; LOG.END.DATE = '' ; LOG.END.TIME = '' ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF

      IF FROM.PROCESS THEN
         IF SEPARATE.REGIONS THEN
            GOSUB SET.REGIONAL.COPIES
         END
      END ELSE
         IF NOT(HOLD.STAT) THEN
            IF SUMMARY.ONLY THEN
               COPIES=0
            END ELSE
               IF ONE.COPY THEN
                  COPIES=1
               END                       ; * IF ONE.COPY
            END                          ; * IF SUMMARY.ONLY
         END                             ; * IF NOT(HOLD.STAT)
      END                                ; * IF FROM.PROCESS

* Interpret COPIES for the printing loop
      BEGIN CASE
         CASE NOT(NUM(COPIES))
            COPY.COUNT=0
         CASE NUM(COPIES)
            COPY.COUNT=COPIES
         CASE 1
            COPY.COUNT=0
      END CASE

* Add extra test for emailing when not printing
      IF COPIES=0 AND NOT(SUMMARY.ONLY) THEN COPY.COUNT=1

      IF FILE[1,13]='FB.BILLS.HIST' THEN
         IF CLIENT#'00883' OR SEPARATE.REGIONS THEN
            NUM.MODE=DCOUNT(AFS.TRANS.ARRAY<1>,CHAR(253))
            IF NUM.MODE NE 0 THEN
               FOR COPIES.LOOP=1 TO COPY.COUNT
                  EA=''                  ; * Build AFS Transportion Summary Report in EA

                  EA<1>=COMPANY.NAME.HTML          ; * JMK95
                  EA<-1>=TITLE.1         ; * Set above
                  EA<-1>=TITLE.2         ; * Set above
                  EA<-1>=ODATE           ; * Set above
                  IF COPIES#0 THEN
                     PRINTER ON
                     CHAR.PER.IN=10
                     GOSUB 8110
                     PAGE 1

                     CALL PAGE.HEAD(PROG.NAME,COMPANY.NAME.HTML,TITLE.1,TITLE.2,ODATE,80,HED)        ; * JMK95
                     HEADING HED
                  END
                  LINE=' '
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=SPACE(2):'AFS TRANSPORTATION SUMMARY'
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=SPACE(2):'=========================='
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=' '
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=' '
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=SPACE(2):'Description                     Quantity       Charges'
                  GOSUB BUILD.EMAIL.REPORT
                  LINE=SPACE(2):'------------------------------  --------  ------------'
                  GOSUB BUILD.EMAIL.REPORT

                  FOR Z=1 TO NUM.MODE
                     A.CARRIER = AFS.TRANS.ARRAY<1,Z> "R%5"
                     READV A.CARRIER.DESC FROM F.CARRIERS,A.CARRIER,1 ELSE A.CARRIER.DESC = '*** Unknown ***'
                     LINE = SPACE(2):A.CARRIER 'R#5' :' ':A.CARRIER.DESC[1,24] "L#24"

                     MGR.QTY=AFS.TRANS.ARRAY<5,Z>+AFS.TRANS.ARRAY<6,Z>+AFS.TRANS.ARRAY<7,Z>          ; * JMK79 ; * JMK90
                     MGR.CCHG=AFS.TRANS.ARRAY<8,Z>+AFS.TRANS.ARRAY<9,Z>+AFS.TRANS.ARRAY<10,Z>        ; * JMK79 ; * JMK90

                     LINE := '  ': MGR.QTY "R#8"
                     LINE := '  ': OCONV(MGR.CCHG,"MR2,") "R#12"
                     GOSUB BUILD.EMAIL.REPORT
                  NEXT Z
                  LINE=' '
                  GOSUB BUILD.EMAIL.REPORT
                  IF COPIES#0 THEN PRINTER CLOSE
               NEXT COPIES.LOOP
               ATS.DA=EA                 ; * Assign temporary EA array to final ATS.DA array
            END                          ; * IF NUM.MODE NE 0
         END                             ; * IF CLIENT#'00883' OR SEPARATE.REGIONS
      END                                ; * IF FILE[1,13]='FB.BILLS.HIST'

      LOG.SEQ.NO = 23                    ; * End
      PROC.DESC = "AFS Transportion Summary " ; END.DATE = DATE() ; LOG.END.TIME = TIME() ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF

* End AFS Transportion Summary Report (email attachment 13b)
***********************************************************************
REGION.EXPENSE.CODE.SUMMARY.REPORT:* Begin Region Expense Code Summary Report
***********************************************************************
*
* This is only printed for VP Buildings 00801 and VP Buildings 00862          ; *NPR10 These clients are inactive since Dec '94
*
      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK TO BEGIN DEBUG 240...')

      IF FROM.PROCESS THEN               ; * JMK70
         CRT @(0,7):@(-4):'Preparing the Region Expense Code Summary Report...':@(0,7):    ; * JMK70
      END                                ; * JMK70

      SORE.DA=''
      SORE.XLS='' ; ROW.CNT = 1          ; * NPR10
      EA=''

* Read COPIES and modify as needed
      COPIES=CLIENT.REC<100,11>
      IF COPIES='' OR NOT(NUM(COPIES)) THEN COPIES='N'

      IF COPIES='N' THEN GOTO SUMMARY.OF.EXPENSES.ONLY.REPORT          ; * NPR14

      IF REGION = "Y" AND EXPENSE = "Y" AND NOT(SEPARATE.REGIONS) THEN           ; * NPR11
         NULL
      END ELSE

         GOTO SUMMARY.OF.EXPENSES.ONLY.REPORT      ; * NPR14
      END

      LOG.SEQ.NO = 20                    ; * Start
      PROC.DESC = "Region Expense Code Summary Report"
      LOG.ST.DATE = DATE() ; LOG.ST.TIME = TIME() ; LOG.END.DATE = '' ; LOG.END.TIME = '' ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF

      IF FROM.PROCESS THEN
         IF SEPARATE.REGIONS THEN
            GOSUB SET.REGIONAL.COPIES
         END
      END ELSE
         IF NOT(HOLD.STAT) THEN
            IF SUMMARY.ONLY THEN
               COPIES=0
            END ELSE
               IF ONE.COPY THEN
                  COPIES=1
               END                       ; * IF ONE.COPY
            END                          ; * IF SUMMARY.ONLY
         END                             ; * IF NOT(HOLD.STAT)
      END                                ; * IF FROM.PROCESS

* Interpret COPIES for the printing loop
      BEGIN CASE
         CASE NOT(NUM(COPIES))
            COPY.COUNT=0
         CASE NUM(COPIES)
            COPY.COUNT=COPIES
         CASE 1
            COPY.COUNT=0
      END CASE

* Add extra test for emailing when not printing
      IF COPIES=0 AND NOT(SUMMARY.ONLY) THEN COPY.COUNT=1
* Add extra test for emailing when not printing
      IF COPIES=0 AND NOT(SUMMARY.ONLY) THEN COPY.COUNT=1

      IF FILE[1,13]='FB.BILLS.HIST' THEN
         FOR COPIES.LOOP=1 TO COPY.COUNT
            SORE.XLS<ROW.CNT> = "Region":@VM:"Expense Code":@VM:"Description":@VM:"This Period"      ; * NPR10
            ROW.CNT += 1                 ; * NPR05
            EA=''                        ; *  Build Summary of Expenses Report in EA

            EA<1>=COMPANY.NAME.HTML      ; * JMK95
            TITLE.1='Freight Bill Report By Carrier'
            TITLE.2='For Client: ':CLIENT:' ':CLIENT.NAME
            ODATE='Bills Processed From ':BEG.DATE'D2/':' to ':END.DATE'D2/'
            CALL PAGE.HEAD(PROG.NAME,COMPANY.NAME,TITLE.1,TITLE.2,ODATE,132,HED)           ; * JMK95
            HEADING HED
            EA<-1>=TITLE.1               ; * Set above
            EA<-1>=TITLE.2               ; * Set above
            EA<-1>=ODATE                 ; * Set above
            IF COPIES#0 THEN
               PRINTER ON
               GOSUB 8110
               PAGE 1
               HEADING HED
            END

            REG.EXP.GTOT = 0

            LINE=' '
            GOSUB BUILD.EMAIL.REPORT
            IF SEPARATE.REGIONS THEN
               LINE=SPACE(55):'SUMMARY OF EXPENSES FOR REGION'
               GOSUB BUILD.EMAIL.REPORT
               LINE=SPACE(55):'================================'
               GOSUB BUILD.EMAIL.REPORT
            END ELSE
               LINE=SPACE(55):'SUMMARY OF EXPENSES BY REGION'
               GOSUB BUILD.EMAIL.REPORT
               LINE=SPACE(55):'==============================='
               GOSUB BUILD.EMAIL.REPORT
            END
*
            N.REG = DCOUNT(REGEXP.ARRAY<1>,@VM)
            FOR RG = 1 TO N.REG
               ID.REG = REGEXP.ARRAY<1,RG>
               REG.TOTAL = REGEXP.ARRAY<2,RG>

               DO.REGION = "N"
               IF NOT(SEPARATE.REGIONS) THEN
                  DO.REGION = "Y"
               END ELSE
                  IF ID.REG = REGS<1,REG.COUNT> THEN DO.REGION = "Y"
               END

               IF DO.REGION = "Y" AND REG.TOTAL GT 0 THEN
                  READ W.REG.REC FROM F.REGION,ID.REG ELSE W.REG.REC = ''
                  IF W.REG.REC<1> NE "" THEN
                     REG.ZIP = W.REG.REC<1>
                  END ELSE
                     REG.ZIP=' '
                  END

                  REG.LOC.STR = W.REG.REC<16> : ", ":W.REG.REC<17> : ", ":REG.ZIP

                  LINE=' '
                  GOSUB BUILD.EMAIL.REPORT
                  IF NOT(SEPARATE.REGIONS) THEN
                     IF CLIENT='01977' THEN        ; * JMK133
                        LINE=SPACE(5):ID.REG:" - ":W.REG.REC<11>:' - ':REG.LOC.STR         ; * JMK133
                     END ELSE            ; * JMK133
                        LINE=SPACE(5) : ID.REG : " - " : REG.LOC.STR
                     END                 ; * JMK133
                     GOSUB BUILD.EMAIL.REPORT
                  END
                  LINE=' '
                  GOSUB BUILD.EMAIL.REPORT

                  TIMES=DCOUNT(REGEXP.ARRAY<3,RG>,CHAR(252))
                  Y=0
                  FOR COUNT=1 TO TIMES
                     IF REGEXP.ARRAY<4,RG,COUNT>'R0' = 0 ELSE
                        READV EXP.DESC FROM F.EXPENSE,REGEXP.ARRAY<3,RG,COUNT>,1 ELSE
                           EXP.DESC=' ~~~ Not on file ~~~'
                        END
                        IF REGEXP.ARRAY<3,RG,COUNT> = EXP.DESC THEN EXP.DESC = ""
                        Y=Y+1
                        IF CLIENT='01977' THEN     ; * JMK133
                           LINE=SPACE(10):REGEXP.ARRAY<3,RG,COUNT>'L#30 ':EXP.DESC'L#30 ':REGEXP.ARRAY<4,RG,COUNT>'R26,#15'        ; * JMK133
                        END ELSE         ; * JMK133
                           LINE=SPACE(20):REGEXP.ARRAY<3,RG,COUNT>'L#19':EXP.DESC'L#25':REGEXP.ARRAY<4,RG,COUNT>'R26,#16'
                        END              ; * JMK133
                        SORE.XLS<ROW.CNT> = REGEXP.ARRAY<3,RG,COUNT>'L#19' : @VM :EXP.DESC'L#25' : @VM :REGEXP.ARRAY<4,RG,COUNT>'R26,#16'
                        ROW.CNT += 1
                        GOSUB BUILD.EMAIL.REPORT
                     END
                  NEXT COUNT

                  IF CLIENT='01977' THEN           ; * JMK133
                     LINE=SPACE(15):DASH.1.COLS    ; * JMK133
                  END ELSE               ; * JMK133
                     LINE=SPACE(8):DASH.1.COLS
                  END                    ; * JMK133
                  GOSUB BUILD.EMAIL.REPORT
                  IF CLIENT='01977' THEN           ; * JMK133
                     LINE= SPACE(72) : REG.TOTAL 'R26,#15'
                  END ELSE               ; * JMK133
                     LINE= SPACE(64) : REG.TOTAL 'R26,#16'
                  END                    ; * JMK133
                  GOSUB BUILD.EMAIL.REPORT
                  REG.EXP.GTOT += REG.TOTAL
               END
            NEXT DV

            IF CLIENT='01977' THEN       ; * JMK133
               LINE=SPACE(72):'==============='
            END ELSE                     ; * JMK133
               LINE=SPACE(8):SPACE(57):'==============='
            END                          ; * JMK133
            GOSUB BUILD.EMAIL.REPORT
            IF CLIENT='01977' THEN       ; * JMK133
               LINE= SPACE(72) : REG.EXP.GTOT 'R26,#15'
            END ELSE                     ; * JMK133
               LINE= SPACE(64) : REG.EXP.GTOT 'R26,#16'
            END                          ; * JMK133
            GOSUB BUILD.EMAIL.REPORT

            IF COPIES#0 THEN PRINTER CLOSE
         NEXT COPIES.LOOP
         SORE.DA=EA                      ; * Assign temporary EA array to final SORE.DA array
      END                                ; * IF FILE[1,13]='FB.BILLS.HIST'

      LOG.SEQ.NO = 20                    ; *  End
      PROC.DESC = "Region Expense Code Summary Report"
      LOG.ST.DATE = '' ; LOG.ST.TIME = '' ; LOG.END.DATE = DATE() ; LOG.END.TIME = TIME() ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF

* End Region Expense Code Summary Report
***********************************************************************
SUMMARY.OF.EXPENSES.ONLY.REPORT:* Begin Summary of Expenses Only Report (email attachment 12b)
***********************************************************************
      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK TO BEGIN DEBUG 200...')
      IF FROM.PROCESS THEN               ; * JMK70
         CRT @(0,7):@(-4):'Preparing the Summary of Expenses Only Report (Attachment 12b)...':@(0,7):          ; * JMK70
      END                                ; * JMK70
      SSOE.DA=''
      SSOE.XLS='' ; ROW.CNT = 1          ; * NPR05
      EA=''

* Read COPIES and modify as needed
      COPIES=CLIENT.REC<100,14>          ; *NPR14
      IF COPIES='' OR NOT(NUM(COPIES)) THEN COPIES='N'
      IF COPIES='N' THEN GOTO SPECIAL.REPORTS      ; *NPR14


      LOG.SEQ.NO = 16                    ; * Start
      PROC.DESC = "Summary of Expenses Only Report (# 12b)"
      LOG.ST.DATE = DATE() ; LOG.ST.TIME = TIME() ; LOG.END.DATE = '' ; LOG.END.TIME = '' ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF


      IF FROM.PROCESS THEN
         IF SEPARATE.REGIONS THEN
            GOSUB SET.REGIONAL.COPIES
         END
      END ELSE
         IF NOT(HOLD.STAT) THEN
            IF SUMMARY.ONLY THEN
               COPIES=0
            END ELSE
               IF ONE.COPY THEN
                  COPIES=1
               END                       ; * IF ONE.COPY
            END                          ; * IF SUMMARY.ONLY
         END                             ; * IF NOT(HOLD.STAT)
      END                                ; * IF FROM.PROCESS

* Interpret COPIES for the printing loop
      BEGIN CASE
         CASE NOT(NUM(COPIES))
            COPY.COUNT=0
         CASE NUM(COPIES)
            COPY.COUNT=COPIES
         CASE 1
            COPY.COUNT=0
      END CASE

* Add extra test for emailing when not printing
      IF COPIES=0 AND NOT(SUMMARY.ONLY) THEN COPY.COUNT=1

      IF FILE[1,13]='FB.BILLS.HIST' THEN
         IF EXPENSE='Y' THEN
            TITLE.1='Freight Bill Report By Carrier'
            TITLE.2='For Client: ':CLIENT:' ':CLIENT.NAME
            ODATE='Bills Processed From ':BEG.DATE'D2/':' to ':END.DATE'D2/'
            CALL PAGE.HEAD(PROG.NAME,COMPANY.NAME,TITLE.1,TITLE.2,ODATE,132,HED)           ; * JMK95
            HEADING HED
            FOR COPIES.LOOP=1 TO COPY.COUNT
               SSOE.XLS<ROW.CNT> = "IOT":@VM:"Expense Code":@VM:"Description":@VM:"This Period"      ; * NPR05
               IF NOT(SEPARATE.REGIONS) THEN SSOE.XLS<ROW.CNT,-1> = "Year to Date"         ; * NPR05
               ROW.CNT += 1              ; * NPR05
               EA=''                     ; *  Build Summary of Expenses Only Report in EA

               EA<1>=COMPANY.NAME.HTML   ; * JMK95
               EA<-1>=TITLE.1            ; * Set above
               EA<-1>=TITLE.2            ; * Set above
               EA<-1>=ODATE              ; * Set above
               IF COPIES#0 THEN
                  PRINTER ON
                  GOSUB 8110
                  PAGE 1
                  HEADING HED
               END

               LINE=' '
               GOSUB BUILD.EMAIL.REPORT
               LINE=SPACE(57):'SUMMARY OF EXPENSES ONLY'
               GOSUB BUILD.EMAIL.REPORT
               LINE=SPACE(55):'============================'
               GOSUB BUILD.EMAIL.REPORT
               LINE=' '
               GOSUB BUILD.EMAIL.REPORT
               LINE=SPACE(63):'This Period'
               IF NOT(SEPARATE.REGIONS) THEN LINE:='              Year to Date'
               GOSUB BUILD.EMAIL.REPORT
               IF SEPARATE.REGIONS THEN
                  LINE=SPACE(4):DASH.1.COLS
               END ELSE
                  LINE=SPACE(4):DASH.2.COLS
               END
               GOSUB BUILD.EMAIL.REPORT
               LINE=' '
               GOSUB BUILD.EMAIL.REPORT

* Print expenses (No subtotals)

               TIMES=DCOUNT(EXPS<1>,CHAR(253))
               Y=0
               FOR COUNT=1 TO TIMES
                  READV EXP.DESC FROM F.EXPENSE,EXPS<1,COUNT>,1 ELSE
                     EXP.DESC=' ~~~ Not on file ~~~'
                  END
                  XLS.EXP.DESC = EXPS<1,COUNT>
                  IF EXPS<8,COUNT>'R0'=0 & EXPS<9,COUNT>'R0'=0 ELSE
                     Y=Y+1
                     IF EXP.DESC=EXPS<1,COUNT> THEN EXP.DESC=''
                     LINE=SPACE(16) : EXPS<1,COUNT>'L#12':EXP.DESC'L#30':EXPS<9,COUNT>'R26,#16':EXPS<8,COUNT>'R26,#26'
                     SSOE.XLS<ROW.CNT> = " ":@VM:XLS.EXP.DESC:@VM:EXP.DESC:@VM:EXPS<9,COUNT>'R26,#16' :@VM: EXPS<8,COUNT>'R26,#26'           ; * NPR05
                     ROW.CNT += 1
                     GOSUB BUILD.EMAIL.REPORT
                  END
               NEXT COUNT
               IF SEPARATE.REGIONS THEN
                  LINE=SPACE(2):DASH.1.COLS
               END ELSE
                  LINE=SPACE(2):DASH.2.COLS
               END
               GOSUB BUILD.EMAIL.REPORT

               LINE=' '
               GOSUB BUILD.EMAIL.REPORT

* Print Totals

               Y.TOT.CHG.DUE = SUM(EXPS<8>)
               EXP.TOT.CHG.DUE = SUM(EXPS<9>)
               LINE=SPACE(25):'Total Freight                    ' : EXP.TOT.CHG.DUE 'R26,#16'
               IF NOT(SEPARATE.REGIONS) THEN LINE:=Y.TOT.CHG.DUE'R26,#26'
               GOSUB BUILD.EMAIL.REPORT
               LINE=SPACE(59):'==============='
               IF NOT(SEPARATE.REGIONS) THEN LINE:='           ==============='
               GOSUB BUILD.EMAIL.REPORT
               IF COPIES#0 THEN PRINTER CLOSE
            NEXT COPIES.LOOP
            SSOE.DA=EA                   ; * Assign temporary EA array to final SSOE.DA array
         END                             ; * IF EXPENSE='Y'
      END                                ; * IF FILE[1,13]='FB.BILLS.HIST'

      LOG.SEQ.NO = 16                    ; * End
      PROC.DESC = "Summary of Expenses Only Report (# 12b)"
      LOG.ST.DATE = '' ; LOG.ST.TIME = '' ; LOG.END.DATE = DATE() ; LOG.END.TIME = TIME() ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF

* End Summary of Expenses ONLY Report (email attachment 12b)
***********************************************************************
SPECIAL.REPORTS:* Begin "Special" Reports
***********************************************************************
*
* These reports pertain only to the following accounts:
*
* 1)  00797 Intellicall, Inc. (This client is inactive)
* 2)  00852 McElroy Manufacturing
* 3)  00664 Liberto Management Co.
* 4)  00846 Power Flame
* 5)  00857 BFG/Stemco
*
* These reports are printed only, not emailed, and may be obsolete.

      LOG.SEQ.NO = 21                    ; * Start
      PROC.DESC = "Special Reports"
      LOG.ST.DATE = DATE() ; LOG.ST.TIME = TIME() ; LOG.END.DATE = '' ; LOG.END.TIME = '' ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF


      IF FROM.PROCESS THEN               ; * JMK70
         CRT @(0,7):@(-4):'Preparing Special Client Custom Reports...':@(0,7):   ; * JMK70
      END                                ; * JMK70

* Read COPIES and modify as needed
      COPIES=CLIENT.REC<100,12>
      IF COPIES='' OR NOT(NUM(COPIES)) THEN COPIES='N'

      IF FROM.PROCESS THEN
         IF SEPARATE.REGIONS THEN
            GOSUB SET.REGIONAL.COPIES
         END
      END ELSE
         IF NOT(HOLD.STAT) THEN
            IF SUMMARY.ONLY THEN
               COPIES=0
            END ELSE
               IF ONE.COPY THEN
                  COPIES=1
               END                       ; * IF ONE.COPY
            END                          ; * IF SUMMARY.ONLY
         END                             ; * IF NOT(HOLD.STAT)
      END                                ; * IF FROM.PROCESS

* Interpret COPIES for the printing loop
      BEGIN CASE
         CASE NOT(NUM(COPIES))
            COPY.COUNT=0
         CASE NUM(COPIES)
            COPY.COUNT=COPIES
         CASE 1
            COPY.COUNT=0
      END CASE

* Add extra test for emailing when not printing
      IF COPIES=0 AND NOT(SUMMARY.ONLY) THEN COPY.COUNT=1

      IF COPIES NE 'N' THEN
         PRINTER ON
         IF CLIENT='00797' THEN          ; * Intellicall, Inc.
            FOR COPIES.LOOP=1 TO COPY.COUNT
               TITLE.1='FedEx Bills That Were Cutback'
               TITLE.2='For Client: ':CLIENT:' ':CLIENT.NAME
               IF SEPARATE.REGIONS THEN
                  TITLE.2:='  Region: ':REGS<1,REG.COUNT>:' ':REGS<11,REG.COUNT>
               END
               ODATE='Bills Processed From ':BEG.DATE'D2/':' to ':END.DATE'D2/'
               CHAR.PER.IN=10
               WIDTH=80
               GOSUB 8110
               PAGE 1

               CALL PAGE.HEAD(PROG.NAME,COMPANY.NAME.HTML,TITLE.1,TITLE.2,ODATE,WIDTH,HED)           ; * JMK95
               EXECUTE 'GET-LIST ':CH.NUM, SELECT > LIST,OUT > NULL
               EXECUTE 'SELECT ':FILE:' WITH CARRIER#="00015" AND WITH 11 # "0" AND WITH VERSION="0"',SELECT < LIST,SELECT > LIST,OUT > NULL
               IF @SELECTED > 0 THEN     ; * JCW01
                  STMT='SORT FB.BILLS.HIST,':CLIENT:' BY TRACKING'
                  STMT:=\ BREAK-ON INVOICE "'D'" TRACKING TOTAL ORIG.BILL\
                  STMT:=\ TOTAL CUTBACK TOTAL AMT.PAID CUT.REASON 37\

                  STMT:=\ HEADING \:'"':HED:'"'
                  STMT:=\ (I,P\
                  EXECUTE STMT,SELECT < LIST
               END
            NEXT COPIES.LOOP
         END                             ; * IF CLIENT='00797'

         IF CLIENT='00852' THEN          ; * McElroy Manufacturing, Inc.
            FOR COPIES.LOOP=1 TO COPY.COUNT
               TITLE.1='Custom Order Coding Report'
               TITLE.2='For Client: ':CLIENT:' ':CLIENT.NAME
               IF SEPARATE.REGIONS THEN
                  TITLE.2:='  Region: ':REGS<1,REG.COUNT>:' ':REGS<11,REG.COUNT>
               END
               ODATE='Bills Processed From ':BEG.DATE'D2/':' to ':END.DATE'D2/'
               CHAR.PER.IN=16.7
               WIDTH=132
               GOSUB 8110
               PAGE 1

               CALL PAGE.HEAD(PROG.NAME,COMPANY.NAME.HTML,TITLE.1,TITLE.2,ODATE,WIDTH,HED)           ; * JMK95
               EXECUTE 'GET-LIST ':CH.NUM, SELECT > LIST,OUT > NULL
               STMT='SORT FB.BILLS.HIST,':CLIENT:' WITH VERSION EQ "0"'
               STMT:=' AND WITH I.O EQ "O"'
               STMT:=' BY DIV.REG BY PRODCODE BY SHIPCODE BY DOCNUM'
               STMT:=' BY CARRIER BY PRO'
               STMT:=' CARRIER PRO 17 1'
               STMT:=\ BREAK-ON DIV.REG "'D'"\
               STMT:=\ BREAK-ON PRODCODE "'D'"\
               STMT:=\ BREAK-ON SHIPCODE "'D'"\
               STMT:=\ BREAK-ON DOCNUM "'D'"\
               STMT:=\ TOTAL AMT.PAID\
               STMT:=\ HEADING \:'"':HED:'"'
               STMT:=\ (I,P\
               EXECUTE STMT,SELECT < LIST,OUT > NUL
            NEXT COPIES.LOOP
         END                             ; * IF CLIENT='00852'

         IF CLIENT='00664' THEN          ; * Liberto Management Company
            FOR COPIES.LOOP=1 TO COPY.COUNT
               TITLE.1='Custom Coding Breakdown Report'
               TITLE.2='For Client: ':CLIENT:' ':CLIENT.NAME
               IF SEPARATE.REGIONS THEN
                  TITLE.2:='  Region: ':REGS<1,REG.COUNT>:' ':REGS<11,REG.COUNT>
               END
               ODATE='Bills Processed From ':BEG.DATE'D2/':' to ':END.DATE'D2/'
               CHAR.PER.IN=16.7
               WIDTH=132
               GOSUB 8110
               PAGE 1

               CALL PAGE.HEAD(PROG.NAME,COMPANY.NAME.HTML,TITLE.1,TITLE.2,ODATE,WIDTH,HED)           ; * JMK95
               EXECUTE 'GET-LIST ':CH.NUM, SELECT > LIST,OUT > NULL
               STMT='SORT FB.BILLS.HIST,':CLIENT:' WITH VERSION = "0"'
               STMT:=' BY CO BY SUB BY CARRIER BY PRO'
               STMT:=\ BREAK-ON CO "'D'" BREAK-ON SUB "'D'"\
               STMT:=' CARRIER PRO 1 2'
               STMT:=\ TOTAL AMT.PAID\
               STMT:=\ HEADING \:'"':HED:'"'
               STMT:=\ (I,P\
               EXECUTE STMT,SELECT < LIST,OUT > NUL
            NEXT COPIES.LOOP
         END                             ; * IF CLIENT='00664'

         IF CLIENT='00846' THEN          ; * Power Flame, Inc.
            FOR COPIES.LOOP=1 TO COPY.COUNT
               TITLE.1='Breakdown of BOL Codes'
               TITLE.2='For Client: ':CLIENT:' ':CLIENT.NAME
               IF SEPARATE.REGIONS THEN
                  TITLE.2:='  Region: ':REGS<1,REG.COUNT>:' ':REGS<11,REG.COUNT>
               END
               ODATE='Bills Processed From ':BEG.DATE'D2/':' to ':END.DATE'D2/'
               CHAR.PER.IN=10
               WIDTH=80
               GOSUB 8110
               PAGE 1

               CALL PAGE.HEAD(PROG.NAME,COMPANY.NAME.HTML,TITLE.1,TITLE.2,ODATE,WIDTH,HED)           ; * JMK95
               EXECUTE 'GET-LIST ':CH.NUM, SELECT > LIST,OUT > NULL
               STMT='SORT ':FILE:' BY BOLPRE'
               STMT:=' WITH 2 EQ "O" AND WITH VERSION EQ "0"'
               STMT:=\ BREAK-ON BOLPRE TOTAL 8R\
               STMT:=\ HEADING \:'"':HED:'"'
               STMT:=\ (I,D,P\
               EXECUTE STMT,SELECT < LIST
            NEXT COPIES.LOOP
         END                             ; * IF CLIENT='00846'

         IF CLIENT='00857' THEN          ; * BFG/Stemco
            FOR COPIES.LOOP=1 TO COPY.COUNT
               TITLE.1='Breakdown of G/L Codes'
               TITLE.2='For Client: ':CLIENT:' ':CLIENT.NAME
               IF SEPARATE.REGIONS THEN
                  TITLE.2:='  Region: ':REGS<1,REG.COUNT>:' ':REGS<11,REG.COUNT>
               END
               ODATE='Bills Processed From ':BEG.DATE'D2/':' to ':END.DATE'D2/'
               CHAR.PER.IN=10
               WIDTH=80
               GOSUB 8110
               PAGE 1

               CALL PAGE.HEAD(PROG.NAME,COMPANY.NAME.HTML,TITLE.1,TITLE.2,ODATE,WIDTH,HED)           ; * JMK95
               EXECUTE 'GET-LIST ':CH.NUM, SELECT > LIST,OUT > NULL
               STMT='SORT ':FILE:' BY 2 BY GLCODE BY VEND# WITH VERSION EQ "0"'
               STMT:=\ BREAK-ON IN.OUT\
               STMT:=\ BREAK-ON GLCODE\
               STMT:=\ BREAK-ON VEND#\
               STMT:=\ TOTAL CLIENT.COST\
               STMT:=\ HEADING \:'"':HED:'"'
               STMT:=\ (I,D,P\
               EXECUTE STMT,SELECT < LIST
            NEXT COPIES.LOOP
         END                             ; * IF CLIENT='00857'
         PRINTER CLOSE
         EXECUTE 'SP-CLOSE'              ; * JMK44
      END                                ; * IF COPIES NE N
      IF CLIENT='01311' AND CLIENT.REC<81>='V' AND FROM.PROCESS AND SEPARATE.REGIONS=0 THEN          ; * JMK64
         DSTMT='FB.6.3 ':CLIENT:' ':BEG.DATE:' ':END.DATE:' EMAIL ':ONCE         ; * JMK64 ; * JMK129
         EXECUTE DSTMT CAPTURING RESULTS           ; * JMK64
         BUILD.DF.IN=''                  ; * JMK46
         BUILD.DF.OUT=''                 ; * JMK46
         BUILD.DF.IN<1>=CLIENT ; BUILD.DF.IN<2>=LOG.ONLY     ; * JMK46
         BUILD.DF.IN<3>='ALL' ; BUILD.DF.IN<4>='ALL'         ; * JMK46
         BUILD.DF.IN<5>=FILE.SEL ; BUILD.DF.IN<6>=BEG.DATE   ; * JMK46
         BUILD.DF.IN<7>=END.DATE ; BUILD.DF.IN<8>=''         ; * JMK46
         BUILD.DF.IN<9>='N' ; BUILD.DF.IN<10>='N'  ; * JMK46
         BUILD.DF.IN<11>='N' ; BUILD.DF.IN<12>='N'           ; * JMK46
         BUILD.DF.IN<13>=CLIENT.REC<134> ; BUILD.DF.IN<14>='EMAIL'     ; * JMK46
         BUILD.DF.IN<15>=SEPARATE.REGIONS ; BUILD.DF.IN<16>=REGIONAL.ID          ; * JMK46
         BUILD.DF.IN<17>=CLIENT.REC<135> ; BUILD.DF.IN<18>='1'         ; * JMK46
         BUILD.DF.IN<19>=CLIENT.REC<125> ; BUILD.DF.IN<20>=''          ; * JMK46
         IF CLIENT.REC<179>#'' AND ONCE=0 THEN     ; * JMK110
            BUILD.DF.IN<19>=CLIENT.REC<179>        ; * JMK110
         END                             ; * JMK110
         BUILD.DF.IN<21>=USER ; BUILD.DF.IN<22>=CH.NUM       ; * JMK46
         BUILD.DF.IN<23>=AUTO ; BUILD.DF.IN<24>=''           ; * JMK46
         BUILD.DF.IN<25>='FROM FB.3.1.NEW' ; BUILD.DF.IN<26>=(USING.NEW.MACRO='NEW')       ; * JMK46
         BUILD.DF.IN<27>='0' ; BUILD.DF.IN<28>='0'           ; * JMK46
         BUILD.DF.IN<29>='N'             ; * JMK118
         BUILD.DF.IN<45>=ONCE            ; * JMK129
         CALL BUILD.DF.VOUCHER.DIETRICH(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.EMAILDATA,BUILD.DF.IN,BUILD.DF.OUT)  ; * JMK46
      END                                ; * JMK46
      IF CLIENT='01305' AND FROM.PROCESS AND SEPARATE.REGIONS=0 THEN   ; * JMK47
         BUILD.DF.IN=''                  ; * JMK47
         BUILD.DF.OUT=''                 ; * JMK47
         BUILD.DF.IN<1>=CLIENT ; BUILD.DF.IN<2>=LOG.ONLY     ; * JMK47
         BUILD.DF.IN<3>='ALL' ; BUILD.DF.IN<4>='ALL'         ; * JMK47
         BUILD.DF.IN<5>=FILE.SEL ; BUILD.DF.IN<6>=BEG.DATE   ; * JMK47
         BUILD.DF.IN<7>=END.DATE ; BUILD.DF.IN<8>=''         ; * JMK47
         BUILD.DF.IN<9>='N' ; BUILD.DF.IN<10>='N'  ; * JMK47
         BUILD.DF.IN<11>='N' ; BUILD.DF.IN<12>='N'           ; * JMK47
         BUILD.DF.IN<13>=CLIENT.REC<134> ; BUILD.DF.IN<14>='EMAIL'     ; * JMK47
         BUILD.DF.IN<15>=SEPARATE.REGIONS ; BUILD.DF.IN<16>=REGIONAL.ID          ; * JMK47
         BUILD.DF.IN<17>='2' ; BUILD.DF.IN<18>='1'           ; * JMK47
         BUILD.DF.IN<19>=CLIENT.REC<125> ; BUILD.DF.IN<20>=''          ; * JMK47
         IF CLIENT.REC<179>#'' AND ONCE=0 THEN     ; * JMK110
            BUILD.DF.IN<19>=CLIENT.REC<179>        ; * JMK110
         END                             ; * JMK110
         BUILD.DF.IN<21>=USER ; BUILD.DF.IN<22>=CH.NUM       ; * JMK47
         BUILD.DF.IN<23>=AUTO ; BUILD.DF.IN<24>=''           ; * JMK47
         BUILD.DF.IN<25>='FROM FB.3.1.NEW' ; BUILD.DF.IN<26>=(USING.NEW.MACRO='NEW')       ; * JMK47
         BUILD.DF.IN<27>='0' ; BUILD.DF.IN<28>='0'           ; * JMK47
         BUILD.DF.IN<29>='N'             ; * JMK118
         BUILD.DF.IN<37>=INV.TOTAL       ; * JMK47
         BUILD.DF.IN<45>=ONCE            ; * JMK129
         CALL BUILD.DF.FM(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.EMAILDATA,BUILD.DF.IN,BUILD.DF.OUT)      ; * JMK47
      END                                ; * JMK47
      IF CLIENT='01460' AND CLIENT.REC<81>='V' AND FROM.PROCESS AND SEPARATE.REGIONS=0 THEN          ; * JMK57

         DSTMT='FB.6.3 ':CLIENT:' ':BEG.DATE:' ':END.DATE:' EMAIL ':ONCE         ; * JMK64 ; * JMK129
         EXECUTE DSTMT CAPTURING RESULTS           ; * JMK64
         BUILD.DF.IN=''                  ; * JMK57
         BUILD.DF.OUT=''                 ; * JMK57
         BUILD.DF.IN<1>=CLIENT ; BUILD.DF.IN<2>=LOG.ONLY     ; * JMK57
         BUILD.DF.IN<3>='ALL' ; BUILD.DF.IN<4>='ALL'         ; * JMK57
         BUILD.DF.IN<5>=FILE.SEL ; BUILD.DF.IN<6>=BEG.DATE   ; * JMK57
         BUILD.DF.IN<7>=END.DATE ; BUILD.DF.IN<8>=''         ; * JMK57
         BUILD.DF.IN<9>='N' ; BUILD.DF.IN<10>='N'  ; * JMK57
         BUILD.DF.IN<11>='N' ; BUILD.DF.IN<12>='N'           ; * JMK57
         BUILD.DF.IN<13>=CLIENT.REC<134> ; BUILD.DF.IN<14>='EMAIL'     ; * JMK57
         BUILD.DF.IN<15>=SEPARATE.REGIONS ; BUILD.DF.IN<16>=REGIONAL.ID          ; * JMK57
         BUILD.DF.IN<17>=CLIENT.REC<135> ; BUILD.DF.IN<18>='1'         ; * JMK57
         BUILD.DF.IN<19>=CLIENT.REC<125> ; BUILD.DF.IN<20>=''          ; * JMK57
         IF CLIENT.REC<179>#'' AND ONCE=0 THEN     ; * JMK110
            BUILD.DF.IN<19>=CLIENT.REC<179>        ; * JMK110
         END                             ; * JMK110
         BUILD.DF.IN<21>=USER ; BUILD.DF.IN<22>=CH.NUM       ; * JMK57
         BUILD.DF.IN<23>=AUTO ; BUILD.DF.IN<24>=''           ; * JMK57
         BUILD.DF.IN<25>='FROM FB.3.1.NEW' ; BUILD.DF.IN<26>=(USING.NEW.MACRO='NEW')       ; * JMK57
         BUILD.DF.IN<27>='0' ; BUILD.DF.IN<28>='0'           ; * JMK57
         BUILD.DF.IN<29>='N'             ; * JMK118
         BUILD.DF.IN<45>=ONCE            ; * JMK129
         CALL BUILD.DF.VOUCHER.DIETRICH.CANADA(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.EMAILDATA,BUILD.DF.IN,BUILD.DF.OUT)     ; * JMK57
      END                                ; * JMK57
      IF CLIENT='01342' THEN             ; * JMK68
         IF FROM.PROCESS AND SEPARATE.REGIONS=0 THEN         ; * JMK68
            BUILD.DF.IN=''               ; * JMK68
            BUILD.DF.OUT=''              ; * JMK68
            BUILD.DF.IN<1>=CLIENT ; BUILD.DF.IN<2>=LOG.ONLY  ; * JMK68
            BUILD.DF.IN<3>='ALL' ; BUILD.DF.IN<4>='ALL'      ; * JMK68
            BUILD.DF.IN<5>=FILE.SEL ; BUILD.DF.IN<6>=BEG.DATE          ; * JMK68
            BUILD.DF.IN<7>=END.DATE ; BUILD.DF.IN<8>=''      ; * JMK68
            BUILD.DF.IN<9>='N' ; BUILD.DF.IN<10>='N'         ; * JMK68
            BUILD.DF.IN<11>='N' ; BUILD.DF.IN<12>='N'        ; * JMK68
            BUILD.DF.IN<13>=CLIENT.REC<134> ; BUILD.DF.IN<14>='EMAIL'  ; * JMK68
            BUILD.DF.IN<15>=SEPARATE.REGIONS ; BUILD.DF.IN<16>=REGIONAL.ID       ; * JMK68
            BUILD.DF.IN<17>='2' ; BUILD.DF.IN<18>='1'        ; * JMK68
            BUILD.DF.IN<19>=CLIENT.REC<125> ; BUILD.DF.IN<20>=''       ; * JMK68
            IF CLIENT.REC<179>#'' AND ONCE=0 THEN  ; * JMK110
               BUILD.DF.IN<19>=CLIENT.REC<179>     ; * JMK110
            END                          ; * JMK110
            BUILD.DF.IN<21>=USER ; BUILD.DF.IN<22>=CH.NUM    ; * JMK68
            BUILD.DF.IN<23>=AUTO ; BUILD.DF.IN<24>=''        ; * JMK68
            BUILD.DF.IN<25>='FROM FB.3.1.NEW' ; BUILD.DF.IN<26>=(USING.NEW.MACRO='NEW')    ; * JMK68
            BUILD.DF.IN<27>='0' ; BUILD.DF.IN<28>='0'        ; * JMK68
            BUILD.DF.IN<29>='N'          ; * JMK118
            BUILD.DF.IN<45>=ONCE         ; * JMK129
            CALL BUILD.DF.01342(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.EMAILDATA,BUILD.DF.IN,BUILD.DF.OUT)          ; * JMK68
         END                             ; * JMK68
      END                                ; * JMK68

      IF CLIENT='01349' OR CLIENT='01350' OR CLIENT='01645' THEN       ; * JMK59 ; * JMK92
         IF FROM.PROCESS AND SEPARATE.REGIONS=0 THEN         ; * JMK59
            BUILD.DF.IN=''               ; * JMK59
            BUILD.DF.OUT=''              ; * JMK59
            BUILD.DF.IN<1>=CLIENT ; BUILD.DF.IN<2>=LOG.ONLY  ; * JMK59
            BUILD.DF.IN<3>='ALL' ; BUILD.DF.IN<4>='ALL'      ; * JMK59
            BUILD.DF.IN<5>=FILE.SEL ; BUILD.DF.IN<6>=BEG.DATE          ; * JMK59
            BUILD.DF.IN<7>=END.DATE ; BUILD.DF.IN<8>=''      ; * JMK59
            BUILD.DF.IN<9>='N' ; BUILD.DF.IN<10>='N'         ; * JMK59
            BUILD.DF.IN<11>='N' ; BUILD.DF.IN<12>='N'        ; * JMK59
            BUILD.DF.IN<13>=CLIENT.REC<134> ; BUILD.DF.IN<14>='EMAIL'  ; * JMK59
            BUILD.DF.IN<15>=SEPARATE.REGIONS ; BUILD.DF.IN<16>=REGIONAL.ID       ; * JMK59
            BUILD.DF.IN<17>='2' ; BUILD.DF.IN<18>='1'        ; * JMK59
            BUILD.DF.IN<19>=CLIENT.REC<125> ; BUILD.DF.IN<20>=''       ; * JMK59
            IF CLIENT.REC<179>#'' AND ONCE=0 THEN  ; * JMK110
               BUILD.DF.IN<19>=CLIENT.REC<179>     ; * JMK110
            END                          ; * JMK110
            BUILD.DF.IN<21>=USER ; BUILD.DF.IN<22>=CH.NUM    ; * JMK59
            BUILD.DF.IN<23>=AUTO ; BUILD.DF.IN<24>=''        ; * JMK59
            BUILD.DF.IN<25>='FROM FB.3.1.NEW' ; BUILD.DF.IN<26>=(USING.NEW.MACRO='NEW')    ; * JMK59
            BUILD.DF.IN<27>='0' ; BUILD.DF.IN<28>='0'        ; * JMK59
            BUILD.DF.IN<29>='N'          ; * JMK118
            BUILD.DF.IN<45>=ONCE         ; * JMK129
            CALL BUILD.DF.RR(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.EMAILDATA,BUILD.DF.IN,BUILD.DF.OUT)   ; * JMK59
         END                             ; * JMK59
      END                                ; * JMK59
      IF CLIENT='01458' AND FROM.PROCESS AND SEPARATE.REGIONS=0 THEN   ; * JMK60
         BUILD.DF.IN=''                  ; * JMK60
         BUILD.DF.OUT=''                 ; * JMK60
         BUILD.DF.IN<1>=CLIENT ; BUILD.DF.IN<2>=LOG.ONLY     ; * JMK60
         BUILD.DF.IN<3>='ALL' ; BUILD.DF.IN<4>='ALL'         ; * JMK60
         BUILD.DF.IN<5>=FILE.SEL ; BUILD.DF.IN<6>=BEG.DATE   ; * JMK60
         BUILD.DF.IN<7>=END.DATE ; BUILD.DF.IN<8>=''         ; * JMK60
         BUILD.DF.IN<9>='N' ; BUILD.DF.IN<10>='N'  ; * JMK60
         BUILD.DF.IN<11>='N' ; BUILD.DF.IN<12>='N'           ; * JMK60
         BUILD.DF.IN<13>=CLIENT.REC<134> ; BUILD.DF.IN<14>='EMAIL'     ; * JMK60
         BUILD.DF.IN<15>=SEPARATE.REGIONS ; BUILD.DF.IN<16>=REGIONAL.ID          ; * JMK60
         BUILD.DF.IN<17>='2' ; BUILD.DF.IN<18>='1'           ; * JMK60
         BUILD.DF.IN<19>=CLIENT.REC<125> ; BUILD.DF.IN<20>=''          ; * JMK60
         IF CLIENT.REC<179>#'' AND ONCE=0 THEN     ; * JMK110
            BUILD.DF.IN<19>=CLIENT.REC<179>        ; * JMK110
         END                             ; * JMK110
         BUILD.DF.IN<21>=USER ; BUILD.DF.IN<22>=CH.NUM       ; * JMK60
         BUILD.DF.IN<23>=AUTO ; BUILD.DF.IN<24>=''           ; * JMK60
         BUILD.DF.IN<25>='FROM FB.3.1.NEW' ; BUILD.DF.IN<26>=(USING.NEW.MACRO='NEW')       ; * JMK60
         BUILD.DF.IN<27>='0' ; BUILD.DF.IN<28>='0'           ; * JMK60
         BUILD.DF.IN<29>='N'             ; * JMK118
         BUILD.DF.IN<45>=ONCE            ; * JMK129
         CALL BUILD.DF.HI(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.EMAILDATA,BUILD.DF.IN,BUILD.DF.OUT)      ; * JMK60
      END                                ; * JMK60
      IF CLIENT='30004' OR CLIENT='30020' THEN     ; * JMK128
         SAP.DOC.ID=''                   ; * JMK128
         IF FROM.PROCESS AND SEPARATE.REGIONS=0 THEN         ; * JMK128
            BUILD.DF.IN=''               ; * JMK128
            BUILD.DF.OUT=''              ; * JMK128
            BUILD.DF.IN<1>=CLIENT ; BUILD.DF.IN<2>=LOG.ONLY  ; * JMK128
            BUILD.DF.IN<3>='ALL' ; BUILD.DF.IN<4>='ALL'      ; * JMK128
            BUILD.DF.IN<5>=FILE.SEL ; BUILD.DF.IN<6>=BEG.DATE          ; * JMK128
            BUILD.DF.IN<7>=END.DATE ; BUILD.DF.IN<8>=''      ; * JMK128
            BUILD.DF.IN<9>='N' ; BUILD.DF.IN<10>='N'         ; * JMK128
            BUILD.DF.IN<11>='N' ; BUILD.DF.IN<12>='N'        ; * JMK128
            BUILD.DF.IN<13>=CLIENT.REC<134> ; BUILD.DF.IN<14>='EMAIL'  ; * JMK128
            BUILD.DF.IN<15>=SEPARATE.REGIONS ; BUILD.DF.IN<16>=REGIONAL.ID       ; * JMK128
            BUILD.DF.IN<17>='2' ; BUILD.DF.IN<18>='1'        ; * JMK128
            BUILD.DF.IN<19>=CLIENT.REC<125> ; BUILD.DF.IN<20>=''       ; * JMK128
            IF CLIENT.REC<179>#'' AND ONCE=0 THEN  ; * JMK128
               BUILD.DF.IN<19>=CLIENT.REC<179>     ; * JMK128
            END                          ; * JMK128
            BUILD.DF.IN<21>=USER ; BUILD.DF.IN<22>=CH.NUM    ; * JMK128
            BUILD.DF.IN<23>=AUTO ; BUILD.DF.IN<24>=''        ; * JMK128
            BUILD.DF.IN<25>='FROM FB.3.1.NEW' ; BUILD.DF.IN<26>=(USING.NEW.MACRO='NEW')    ; * JMK128
            BUILD.DF.IN<27>='0' ; BUILD.DF.IN<28>='0'        ; * JMK128
            BUILD.DF.IN<29>='N'          ; * JMK128
            BUILD.DF.IN<45>=ONCE         ; * JMK129
            CALL BUILD.DF.AMGTP(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.EMAILDATA,BUILD.DF.IN,BUILD.DF.OUT)          ; * JMK128
            SAP.DOC.ID=BUILD.DF.OUT      ; * JMK128
         END                             ; * JMK128
      END                                ; * JMK128

      LOG.SEQ.NO = 21                    ; * End
      PROC.DESC = "Special Reports"
      LOG.ST.DATE = '' ; LOG.ST.TIME = '' ; LOG.END.DATE = DATE() ; LOG.END.TIME = TIME() ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF

* End "Special" Reports

***********************************************************************
SEND.EMAIL:* Begin Write Files to EMAILDATA and send Emails with attachments
***********************************************************************
      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK TO BEGIN DEBUG 250...')

      LOG.SEQ.NO = 40                    ; * Start
      PROC.DESC = "Preparing Email Att."
      LOG.ST.DATE = DATE() ; LOG.ST.TIME = TIME() ; LOG.END.DATE = '' ; LOG.END.TIME = '' ; LOG.REFS = ""
      GOSUB UPD.PROC.LOGF

      IF FROM.PROCESS THEN               ; * JMK70
         CRT @(0,7):@(-4):'Preparing the Email with Report attachments...':@(0,7):         ; * JMK70
      END                                ; * JMK70

      IF FROM.PROCESS AND (FILE[1,13]='FB.BILLS.HIST') THEN
         PN.VIN=''                       ; * JMK86
         PN.VIN<1>='FB.3.1.REG'          ; * JMK86
         PN.VIN<2>=CLIENT                ; * JMK86
         PN.VIN<3>=CLIENT.REC<2>         ; * JMK86
         PN.VIN<4>=END.DATE              ; * JMK86
         PN.VIN<5>=USER                  ; * JMK86
         PB.VOUT=''                      ; * JMK86
         CALL FB.NOTIFY.SUB(PN.VIN,PN.VOUT,F.PN,F.PN.HIST)   ; * JMK86
         PN.BCC=''                       ; * JMK86
         IF PN.VOUT<2>#'' THEN PN.BCC=PN.VOUT<2>   ; * JMK86

         THERE.ARE.ATTACHMENTS=0
         EMAIL.OUT=''
         IF SEPARATE.REGIONS THEN
* Send email to individual regions
            EMAIL.OUT<1>=CHANGE(REGS<8,REG.COUNT>,@SVM,@VM)  ; * To: Email addresses
            IF EMAIL.OUT<1>='' THEN GOTO END.SEND.EMAIL      ; * No To: addresses
            EMAIL.OUT<2>=CHANGE(REGS<9,REG.COUNT>,@SVM,@VM)  ; * CC: Email addresses
            EMAIL.OUT<3>=CHANGE(REGS<10,REG.COUNT>,@SVM,@VM)           ; * BCC: Email addresses
         END ELSE
* Send email to the main address
            EMAIL.OUT<1>=TRIM(CLIENT.REC<125>)     ; * To: Email addresses
            IF EMAIL.OUT<1>='' THEN GOTO END.SEND.EMAIL      ; * No To: addresses
            EMAIL.OUT<2>=TRIM(CLIENT.REC<126>)     ; * CC: Email addresses
            EMAIL.OUT<3>=TRIM(CLIENT.REC<127>)     ; * BCC: Email addresses
            IF ACCT.MGR.EMAIL NE "" THEN EMAIL.OUT<2,-1> = ACCT.MGR.EMAIL
         END
*
         BD.SLS.FOUND=0                  ; * SWB01
         TEST.EMAIL=OCONV(EMAIL.OUT<1>:@VM:EMAIL.OUT<2>:@VM:EMAIL.OUT<3>,'MCL')  ; * SWB01
         LOCATE BD.SLS.EMAIL IN TEST.EMAIL<1> SETTING EPOS THEN BD.SLS.FOUND=1   ; * SWB01

         IF BD.SLS.FOUND=0 AND NOT(SEPARATE.REGIONS) THEN    ; * SWB01

            IF BD.SLS.EMAIL # '' THEN EMAIL.OUT<2,-1>=BD.SLS.EMAIL     ; * SWB02
         END                             ; * SWB01

         SVC.SLS.FOUND=0                 ; * JMK77
         TEST.EMAIL=OCONV(EMAIL.OUT<1>:@VM:EMAIL.OUT<2>:@VM:EMAIL.OUT<3>,'MCL')  ; * JMK77
         LOCATE SVC.SLS.EMAIL IN TEST.EMAIL<1> SETTING EPOS THEN SVC.SLS.FOUND=1           ; * JMK77
         IF SVC.SLS.EMAIL='pforte@afs.net' THEN    ; * JMK77
            LOCATE 'phil.forte@afs.net' IN TEST.EMAIL<1> SETTING EPOS THEN SVC.SLS.FOUND=1           ; * JMK77
            LOCATE 'bclugston@afs.net' IN TEST.EMAIL<1> SETTING EPOS THEN SVC.SLS.FOUND=1  ; * JMK77
         END                             ; * JMK77
         IF SVC.SLS.FOUND=0 AND NOT(SEPARATE.REGIONS) THEN   ; * JMK77; * JMK78
            IF SVC.SLS.EMAIL # '' THEN EMAIL.OUT<2,-1>=SVC.SLS.EMAIL   ; * SWB02
         END                             ; * JMK77
         IF CLIENT.REC<179>#'' AND ONCE=0 THEN     ; * JMK09 ; * JMK101
            EMAIL.OUT<1>=TRIM(CLIENT.REC<179>)     ; * JMK09 TROUBLESHOOTING EMAILS
            IF EMAIL.OUT<1>='' THEN GOTO END.SEND.EMAIL      ; * JMK31
            EMAIL.OUT<2>=''              ; * JMK09
            EMAIL.OUT<3>=''              ; * JMK09
         END                             ; * JMK09
         EMAIL.OUT<4>='Reports@afs.net'  ; * From Email address
         IF USER='DAVID' THEN
            EMAIL.OUT<1>='DFRIEND@AFS.NET'
            EMAIL.OUT<2>=''
            EMAIL.OUT<3>=''
         END
         EMAIL.OUT<5,1>=CLIENT'R%5':' - ':CLIENT.NAME        ; * Subject of Email
         IF SEPARATE.REGIONS THEN
            EMAIL.OUT<5,1>:=' Region ':REGS<1,REG.COUNT>:' ':REGS<11,REG.COUNT>
         END
         EMAIL.OUT<5,1>:=' ':OUT.BEG.DATE:' - ':OUT.END.DATE

* Email body
         EMAIL.OUT<6,-1>=' '
         EMAIL.OUT<6,-1>='------------------------------------------------------------------------------'
         EMAIL.OUT<6,-1>=' '
         EMAIL.OUT<6,-1>='***** NEW BANKING AND REMITTANCE INSTRUCTIONS *****'
         EMAIL.OUT<6,-1>=' '
         EMAIL.OUT<6,-1>='For ACH Remittance'
         EMAIL.OUT<6,-1>='Routing #: 065 0000 90'
         EMAIL.OUT<6,-1>='Account #: 75 285 180 30'
         EMAIL.OUT<6,-1>='Bank Institution: Capital One Bank'
         EMAIL.OUT<6,-1>=' '
         EMAIL.OUT<6,-1>='AFS LLC'
         EMAIL.OUT<6,-1>='Attn: Accounts Receivable'
         EMAIL.OUT<6,-1>='P.O. Box 18410'
         EMAIL.OUT<6,-1>='Shreveport, LA 71138-1410'
         EMAIL.OUT<6,-1>=' '
         EMAIL.OUT<6,-1>='PLEASE EMAIL REMITTANCE'
         EMAIL.OUT<6,-1>='Email Address: ar@afs.net'
         EMAIL.OUT<6,-1>='Contact Name: Accounts Receivable Department'
         EMAIL.OUT<6,-1>='Phone Number: 318.798.2111'
         EMAIL.OUT<6,-1>=' '
         EMAIL.OUT<6,-1>='------------------------------------------------------------------------------'
         EMAIL.OUT<6,-1>=' '

         EMAIL.OUT<6,-1>='AFS, LLC                                                   Phone: 318-798-2111'      ; * JMK118 ; * JMK153

         EMAIL.OUT<6,-1>='670 Emberwood Drive                                          FAX: 318-797-3628'

         EMAIL.OUT<6,-1>='Shreveport, LA 71106                                               www.afs.net'      ; * JMK74
         EMAIL.OUT<6,-1>=' '
         EMAIL.OUT<6,-1>=' '
         EMAIL.OUT<6,-1>='The following reports include all bills processed from ':OUT.BEG.DATE:' thru ':OUT.END.DATE:':'
         EMAIL.OUT<6,-1>='------------------------------------------------------------------------------'


         EMAIL.PATH='E:\ARDENT\PUBLIC\EMAILDATA\'
         IF SEPARATE.REGIONS THEN
            PRE.EMAIL.FILENAME=CLIENT'R%5':'_':REGS<1,REG.COUNT>:'-'
         END ELSE
            PRE.EMAIL.FILENAME=CLIENT'R%5':'-'
         END
         PRE.EMAIL.FILENAME:=BEG.YEAR:BEG.MONTH:BEG.DAY:'-':END.YEAR:END.MONTH:END.DAY

********** Email attachments (up to 15 email attachments are possible) **********

* Bills Processed (Weekly Report or Body) created in BUILD.DF.REG (attachment 1)
         IF WEEKLY.REPORT#'' THEN
            THERE.ARE.ATTACHMENTS=1
            EMAIL.FILENAME=WEEKLY.REPORT
            EMAIL.OUT<6,-1>='   Bills Processed:             ':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME
            EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME
         END

* Bills Processed (Weekly True Cost Rrport) created in BUILD.DF.SUB (attachment 2)
         IF WEEKLY.REPORT.TC#'' THEN     ; * JMK118
            THERE.ARE.ATTACHMENTS=1      ; * JMK118
            EMAIL.FILENAME=WEEKLY.REPORT.TC        ; * JMK118
            EMAIL.OUT<6,-1>='   Bills Processed True Cost:   ':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME    ; * JMK118
            EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME       ; * JMK118
         END                             ; * JMK118

* New Rejected (Returned) Bills (NRB.DA) Report (attachment 3)
         IF NRB.DA#'' THEN
            EMAIL.FILENAME=PRE.EMAIL.FILENAME:'-NRB.XLS'
            IF CLIENT='10272' AND FROM.PROCESS THEN
               WRITE NRB.DA ON F.FTP.AAR,EMAIL.FILENAME
            END
            WRITE NRB.DA ON F.EMAILDATA,EMAIL.FILENAME THEN
               THERE.ARE.ATTACHMENTS=1
               EMAIL.OUT<6,-1>='   New Returned Bills:          ':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME
               EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME
            END ELSE
               CALL ELINE('Could not write ':EMAIL.FILENAME:' to EMAILDATA - Call IS Department.')
               CALL ELINE('New Returned Bills Report IS NOT being emailed to this client.')
            END
         END

* New Never Pay Bills (NPB.DA) Report (attachment 4)
         IF NPB.DA#'' THEN
            EMAIL.FILENAME=PRE.EMAIL.FILENAME:'-NPB.XLS'
            IF CLIENT='10272' AND FROM.PROCESS THEN
               WRITE NPB.DA ON F.FTP.AAR,EMAIL.FILENAME
            END
            WRITE NPB.DA ON F.EMAILDATA,EMAIL.FILENAME THEN
               THERE.ARE.ATTACHMENTS=1
               EMAIL.OUT<6,-1>='   New Never Pay Bills:         ':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME
               EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME
            END ELSE
               CALL ELINE('Could not write ':EMAIL.FILENAME:' to EMAILDATA - Call IS Department.')
               CALL ELINE('New Never Pay Bills Report IS NOT being emailed to this client.')
            END
         END

* Old Rejected (Returned) Bills (ORB.DA) Report (attachment 5)
         IF ORB.DA#'' THEN
            EMAIL.FILENAME=PRE.EMAIL.FILENAME:'-ORB.XLS'
            IF CLIENT='10272' AND FROM.PROCESS THEN
               WRITE ORB.DA ON F.FTP.AAR,EMAIL.FILENAME
            END
            WRITE ORB.DA ON F.EMAILDATA,EMAIL.FILENAME THEN
               THERE.ARE.ATTACHMENTS=1
               EMAIL.OUT<6,-1>='   Old Returned Bills:          ':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME
               EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME
            END ELSE
               CALL ELINE('Could not write ':EMAIL.FILENAME:' to EMAILDATA - Call IS Department.')
               CALL ELINE('Old Returned Bills Report IS NOT being emailed to this client.')
            END
         END

* Approved Rejected Bills (Bills Approved for Payment) (ARB.DA) Report (attachment 6)
         IF ARB.DA#'' THEN
            EMAIL.FILENAME=PRE.EMAIL.FILENAME:'-ARB.XLS'
            IF CLIENT='10272' AND FROM.PROCESS THEN
               WRITE ARB.DA ON F.FTP.AAR,EMAIL.FILENAME
            END
            WRITE ARB.DA ON F.EMAILDATA,EMAIL.FILENAME THEN
               THERE.ARE.ATTACHMENTS=1
               EMAIL.OUT<6,-1>='   Approved Returned Bills:     ':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME
               EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME
            END ELSE
               CALL ELINE('Could not write ':EMAIL.FILENAME:' to EMAILDATA - Call IS Department.')
               CALL ELINE('Approved Returned Bills Report IS NOT being emailed to this client.')
            END
         END

* Summary of Charges (SOC.TXT) Report (attachment 7)
         IF CLIENT = '01183' AND SEPARATE.REGIONS THEN
            SOC.TXT=''
            SOC.HTML=''
            INVOICE.HTML=''
*
* Summary of charges txt and HTML and the invoice HTML do not
* get send for the regions for 01183 Puritan Medical
*
         END
         IF CLIENT = '01592' THEN        ; * JMK112
            SOC.TXT=''                   ; * JMK112
         END                             ; * JMK112
         IF UP.CNT=0 AND PCL.CNT=1 THEN  ; * JMK153
            SOC.TXT=''                   ; * JMK153
            SOC.HTML=''                  ; * JMK153
         END                             ; * JMK153
         IF SOC.TXT#'' THEN
            EMAIL.FILENAME=PRE.EMAIL.FILENAME:'-SOC.TXT'
            IF CLIENT='10272' AND FROM.PROCESS THEN
               WRITE SOC.TXT ON F.FTP.AAR,EMAIL.FILENAME
            END
            IF CLIENT='01349' OR CLIENT='01350' OR CLIENT='01645' THEN           ; * JMK93
               IF FROM.PROCESS THEN      ; * JMK93
                  WRITE SOC.TXT ON F.FTP.RR,EMAIL.FILENAME   ; * JMK93
               END                       ; * JMK93
            END                          ; * JMK93

         END

* Summary of Charges (SOC.HTML) Report (attachment 8)

         IF SOC.HTML#'' AND NEW.SOC AND CLIENT#'00998' AND CLIENT#'00963' THEN   ; * JMK08
* Al's Formal Wear 00998 cannot accept HTML attachments
* DBT America 00963 cannot accept HTML attachments; * JMK08
            EMAIL.FILENAME=PRE.EMAIL.FILENAME:'-SOC.HTM'
            IF CLIENT='10272' AND FROM.PROCESS THEN
               WRITE SOC.HTML ON F.FTP.AAR,EMAIL.FILENAME
            END
            WRITE SOC.HTML ON F.EMAILDATA,EMAIL.FILENAME THEN
               THERE.ARE.ATTACHMENTS=1
               EMAIL.OUT<6,-1>='   Summary of Charges (HTML):   ':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME
               EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME

            END ELSE
               CALL ELINE('Could not write ':EMAIL.FILENAME:' to EMAILDATA - Call IS Department.')
               CALL ELINE('Summary of Charges Report IS NOT being emailed to this client.')
            END
         END

* Invoice (INVOICE.HTML) (attachment 9)

         IF INVOICE.HTML#'' AND NEW.SOC AND CLIENT#'00998' AND CLIENT#'00963' THEN         ; * JMK08
* Al's Formal Wear 00998 cannot accept HTML attachments
* DBT America 00963 cannot accept HTML attachments; * JMK08
            EMAIL.FILENAME=PRE.EMAIL.FILENAME:'-INV.HTM'
            IF CLIENT='10272' AND FROM.PROCESS THEN
               WRITE INVOICE.HTML ON F.FTP.AAR,EMAIL.FILENAME
            END
            WRITE INVOICE.HTML ON F.EMAILDATA,EMAIL.FILENAME THEN
               THERE.ARE.ATTACHMENTS=1
               EMAIL.OUT<6,-1>='   Invoice (HTML):              ':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME
               EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME
            END ELSE
               CALL ELINE('Could not write ':EMAIL.FILENAME:' to EMAILDATA - Call IS Department.')
               CALL ELINE('Invoice IS NOT being emailed to this client.')
            END
         END

         IF INVOICE.PDF#'' AND NEW.SOC THEN        ; * JMK08
            EMAIL.FILENAME=INVOICE.PDF
            THERE.ARE.ATTACHMENTS=1
            EMAIL.OUT<6,-1>='   Invoice (PDF):               ':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME
            EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME
         END

* Summary of Expenses (SOE.DA) Report (attachment 10)
         IF SOE.DA#'' THEN
            EMAIL.FILENAME=PRE.EMAIL.FILENAME:'-SOE.TXT'
            IF CLIENT='10272' AND FROM.PROCESS THEN
               WRITE SOE.DA ON F.FTP.AAR,EMAIL.FILENAME
            END
            WRITE SOE.DA ON F.EMAILDATA,EMAIL.FILENAME THEN
               THERE.ARE.ATTACHMENTS=1
               EMAIL.OUT<6,-1>='   Summary of Expenses:         ':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME
               EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME
            END ELSE
               CALL ELINE('Could not write ':EMAIL.FILENAME:' to EMAILDATA - Call IS Department.')
               CALL ELINE('Summary of Expenses Report IS NOT being emailed to this client.')
            END
         END

* Summary of Expenses (SOE.XLS) Report (attachment 10b)       ;*NPR05

         IF SOE.XLS#'' AND (CLIENT='01267' OR CLIENT='01389' OR CLIENT='01675') THEN
            EMAIL.FILENAME=PRE.EMAIL.FILENAME:'-SOE.XLS'
            CONVERT @VM TO CHAR(9) IN SOE.XLS
            WRITE SOE.XLS ON F.EMAILDATA,EMAIL.FILENAME THEN
               THERE.ARE.ATTACHMENTS=1
               EMAIL.OUT<6,-1>='   Summary of Expenses:         ':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME
               EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME
            END ELSE
               CALL ELINE('Could not write ':EMAIL.FILENAME:' to EMAILDATA - Call IS Department.')
               CALL ELINE('Excel Summary of Expenses Report IS NOT being emailed to this client.')
            END
         END

* Summary of Regions (SOR.DA) Report (attachment 11)
         IF SOR.DA#'' THEN
            EMAIL.FILENAME=PRE.EMAIL.FILENAME:'-SOR.TXT'
            IF CLIENT='10272' AND FROM.PROCESS THEN
               WRITE SOR.DA ON F.FTP.AAR,EMAIL.FILENAME
            END
            WRITE SOR.DA ON F.EMAILDATA,EMAIL.FILENAME THEN
               THERE.ARE.ATTACHMENTS=1
               EMAIL.OUT<6,-1>='   Summary of Regions:        ':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME
               EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME
            END ELSE
               CALL ELINE('Could not write ':EMAIL.FILENAME:' to EMAILDATA - Call IS Department.')
               CALL ELINE('Summary of Regions Report IS NOT being emailed to this client.')
            END
         END

* Summary of Regions (SOR.XLS) Report (attachment 11b)         ; *NPR05

         IF SOR.XLS#'' AND (CLIENT='01267' OR CLIENT='01389' OR CLIENT='01675') THEN
            EMAIL.FILENAME=PRE.EMAIL.FILENAME:'-SOD.XLS'
            CONVERT @VM TO CHAR(9) IN SOD.XLS

            WRITE SOD.XLS ON F.EMAILDATA,EMAIL.FILENAME THEN
               THERE.ARE.ATTACHMENTS=1
               EMAIL.OUT<6,-1>='   Summary of Regions:        ':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME
               EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME
            END ELSE
               CALL ELINE('Could not write ':EMAIL.FILENAME:' to EMAILDATA - Call IS Department.')
               CALL ELINE('Excel Summary of Regions Report IS NOT being emailed to this client.')
            END
         END

* Summary of Expenses by Regions (SORE.DA) Report (attachment 16)
         IF SORE.DA#'' THEN
            EMAIL.FILENAME=PRE.EMAIL.FILENAME:'-SORE.TXT'

            WRITE SORE.DA ON F.EMAILDATA,EMAIL.FILENAME THEN
               THERE.ARE.ATTACHMENTS=1
               EMAIL.OUT<6,-1>='   Summary of Expenses by Region:        ':SPACE(36-LEN(EMAIL.FILENAME)):EMAIL.FILENAME
               EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME
            END ELSE
               CALL ELINE('Could not write ':EMAIL.FILENAME:' to EMAILDATA - Call IS Department.')
               CALL ELINE('Summary of Expenses by Region IS NOT being emailed to this client.')
            END
         END

* Summary of Expenses by Regions (SORE.DA) Report (attachment 16)
         IF SSOE.DA#'' AND CLIENT = "30004" THEN
            EMAIL.FILENAME=PRE.EMAIL.FILENAME:'-SSOE.TXT'

            WRITE SSOE.DA ON F.EMAILDATA,EMAIL.FILENAME THEN
               THERE.ARE.ATTACHMENTS=1
               EMAIL.OUT<6,-1>='   Summary of Expenses Only:               ':SPACE(36-LEN(EMAIL.FILENAME)):EMAIL.FILENAME
               EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME
            END ELSE
               CALL ELINE('Could not write ':EMAIL.FILENAME:' to EMAILDATA - Call IS Department.')
               CALL ELINE('Summary of Expenses only.... IS NOT being emailed to this client.')
            END
         END

         IF SSOE.XLS#'' AND CLIENT = "99999" THEN
            EMAIL.FILENAME=PRE.EMAIL.FILENAME:'-SSOE.XLS'

            CONVERT @VM TO CHAR(9) IN SSOE.XLS
            WRITE SSOE.XLS ON F.EMAILDATA,EMAIL.FILENAME THEN
               THERE.ARE.ATTACHMENTS=1
               EMAIL.OUT<6,-1>='   Summary of Expenses Only:               ':SPACE(36-LEN(EMAIL.FILENAME)):EMAIL.FILENAME
               EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME
            END ELSE
               CALL ELINE('Could not write ':EMAIL.FILENAME:' to EMAILDATA - Call IS Department.')
               CALL ELINE('Excel Summary of Expenses only.... IS NOT being emailed to this client.')
            END
         END

* Expense Distribution (EXD.DA) Report (attachment 12)
         IF EXD.DA#'' THEN
            EMAIL.FILENAME=PRE.EMAIL.FILENAME:'-EXD.TXT'
            IF CLIENT='10272' AND FROM.PROCESS THEN
               WRITE EXD.DA ON F.FTP.AAR,EMAIL.FILENAME
            END
            WRITE EXD.DA ON F.EMAILDATA,EMAIL.FILENAME THEN
               THERE.ARE.ATTACHMENTS=1
               EMAIL.OUT<6,-1>='   Expense Distribution:        ':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME
               EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME
            END ELSE
               CALL ELINE('Could not write ':EMAIL.FILENAME:' to EMAILDATA - Call IS Department.')
               CALL ELINE('Expense Distribution Report IS NOT being emailed to this client.')
            END
         END

* Mode Distribution (MOD.DA) Report (attachment 13)
         IF MOD.DA#'' THEN
            EMAIL.FILENAME=PRE.EMAIL.FILENAME:'-MOD.TXT'
            IF CLIENT='10272' AND FROM.PROCESS THEN
               WRITE MOD.DA ON F.FTP.AAR,EMAIL.FILENAME
            END
            WRITE MOD.DA ON F.EMAILDATA,EMAIL.FILENAME THEN
               THERE.ARE.ATTACHMENTS=1
               EMAIL.OUT<6,-1>='   Mode Distribution:           ':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME
               EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME
            END ELSE
               CALL ELINE('Could not write ':EMAIL.FILENAME:' to EMAILDATA - Call IS Department.')
               CALL ELINE('Mode Distribution Report IS NOT being emailed to this client.')
            END
         END

         IF CLIENT='30004' OR CLIENT='30020' THEN  ; * JMK128
            IF SAP.DOC.ID#'' THEN        ; * JMK128
               EMAIL.FILENAME=SAP.DOC.ID           ; * JMK128
               THERE.ARE.ATTACHMENTS=1   ; * JMK128
               EMAIL.OUT<6,-1>='          SAP Payment Detail:  ':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME  ; * JMK128
               EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME    ; * JMK128
            END                          ; * JMK128
         END                             ; * JMK128

* UPS e-Bill files in UPSDATA (attachment 14)
* Get any UPS ebill files saved in UPSDATA for the given client and region
* and include them in the outgoing process email.
         UPS.EBILL.ATTACHMENT=0
         IF SEPARATE.REGIONS THEN

            STMT='SELECT UPSDATA.INDX WITH CLI.NUM EQ "':CLIENT'R%5':'" AND WITH REG.NUM = "':REGS<1,REG.COUNT>:'" AND WITH BILL.DATE <= "':END.DATE'D2/':'"'    ; * JMK69
         END ELSE

            STMT='SELECT UPSDATA.INDX WITH CLI.NUM EQ "':CLIENT'R%5':'" AND WITH REG.NUM = "" AND WITH BILL.DATE <= "':END.DATE'D2/':'"'     ; * JMK69

         END
         EXECUTE STMT CAPTURING OUTPUT
         NUM.EBILL=@SELECTED
         IF NUM.EBILL > 0 THEN           ; * JCW01
            DONE=0
            LOOP
               READNEXT EBILL.ID ELSE DONE=1
            UNTIL DONE=1
               EBILL.DATE=FIELD(EBILL.ID,'*',2)
               READ EBILL.REC FROM F.UPSDATA,EBILL.ID THEN
                  IF CLIENT='01700' AND FROM.PROCESS THEN
                     TYPE='CSV'
                     EBILL.NATT=DCOUNT(EBILL.REC,@AM)
                     FOR EBILL.ATT=1 TO EBILL.NATT
                        EBILL.LINE=EBILL.REC<EBILL.ATT>
                        IN=EBILL.LINE
                        OUT=''
                        CALL CONVERT.STRING(IN,OUT,TYPE)
                        EBILL.REC<EBILL.ATT>=OUT
                     NEXT EBILL.ATT
                     EMAIL.FILENAME=PRE.EMAIL.FILENAME:'-EBILL_':EBILL.DATE:'.CSV'
                  END ELSE
                     EBILL.REC=CHANGE(EBILL.REC,@VM,TAB)
                     EMAIL.FILENAME=PRE.EMAIL.FILENAME:'-EBILL_':EBILL.DATE:'.XLS'
                  END
                  IF CLIENT='10272' AND FROM.PROCESS THEN
                     WRITE EBILL.REC ON F.FTP.AAR,EMAIL.FILENAME
                  END
                  WRITE EBILL.REC ON F.EMAILDATA,EMAIL.FILENAME THEN
                     THERE.ARE.ATTACHMENTS=1
                     UPS.EBILL.ATTACHMENT=1
                     EMAIL.OUT<6,-1>='   Original UPS e-Bill File:    ':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME
                     EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME
                     DELETE F.UPSDATA,EBILL.ID
                  END ELSE
                     CALL ELINE('Could not write ':EMAIL.FILENAME:' to EMAILDATA - Call IS Department.')
                     CALL ELINE('UPS e-bill file IS NOT being emailed to this client.')
                  END
               END
            REPEAT
         END

* Mail Cons files in MAIL.CONS.DATA (attachment 15)
* Get any MAIL CONS files saved in MAIL.CONS.DATA for the given client and division
* and include them in the outgoing process email.
         MAIL.CONS.ATTACHMENT=0
         IF SEPARATE.REGIONS THEN
            STMT='SELECT MAIL.CONS.DATA WITH CLI.NUM EQ "':CLIENT'R%5':'" AND WITH REG.NUM = "':REGS<1,REG.COUNT>'R%5':'" AND WITH BILL.DATE <= "':END.DATE'D2/':'"'       ; * JMK69
         END ELSE
            STMT='SELECT MAIL.CONS.DATA WITH CLI.NUM EQ "':CLIENT'R%5':'" AND WITH REG.NUM = "" AND WITH BILL.DATE <= "':END.DATE'D2/':'"'   ; * JMK69
         END
         EXECUTE STMT CAPTURING OUTPUT
         NUM.MAIL.CONS=@SELECTED
         IF NUM.MAIL.CONS > 0 THEN       ; * JCW01
            DONE=0
            LOOP
               READNEXT MAIL.CONS.ID ELSE DONE=1
            UNTIL DONE=1
               MAIL.CONS.DATE=FIELD(MAIL.CONS.ID,'*',2)
               READ MAIL.CONS.REC FROM F.MAIL.CONS.DATA,MAIL.CONS.ID THEN
                  MAIL.CONS.REC=CHANGE(MAIL.CONS.REC,@VM,TAB)
                  EMAIL.FILENAME=PRE.EMAIL.FILENAME:'-MAIL.CONS_':MAIL.CONS.DATE:'.XLS'
                  WRITE MAIL.CONS.REC ON F.EMAILDATA,EMAIL.FILENAME THEN
                     THERE.ARE.ATTACHMENTS=1
                     MAIL.CONS.ATTACHMENT=1
                     EMAIL.OUT<6,-1>='   Original Mail Cons File:     ':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME
                     EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME
                     DELETE F.MAIL.CONS.DATA,MAIL.CONS.ID
                  END ELSE
                     CALL ELINE('Could not write ':EMAIL.FILENAME:' to EMAILDATA - Call IS Department.')
                     CALL ELINE('Mail Cons file IS NOT being emailed to this client.')
                  END
               END
            REPEAT
         END

* Special files (client specific) created in BUILD.SPECIAL.FILE.SUB (attachment 15)
         IF SPECIAL.DF.OUT<1>#'' THEN
            NUM.OF.SPECIAL.REPORT=DCOUNT(SPECIAL.DF.OUT<1>,@VM)
            FOR I = 1 TO NUM.OF.SPECIAL.REPORT
               THERE.ARE.ATTACHMENTS=1
               EMAIL.FILENAME=SPECIAL.DF.OUT<1,I>
               EMAIL.OUT<6,-1>='   ':SPECIAL.DF.OUT<2,I>'L#29':SPACE(46-LEN(SPECIAL.DF.OUT<1,I>)):SPECIAL.DF.OUT<1,I>
               EMAIL.OUT<11,-1>=EMAIL.PATH:SPECIAL.DF.OUT<1,I>
            NEXT I
         END

* Excel Macro to format and print Bills Processed (Weekly Report) (attachment 15)
         MACRO.SENT=0
         IF USING.NEW.MACRO#'NONE' AND (WEEKLY.REPORT#'' OR WEEKLY.REPORT.DUP#'') THEN
            MACRO.SENT=1
            IF USING.NEW.MACRO='NEW' THEN

               EMAIL.FILENAME='AFS_BLS_MACRO.XLS'  ; * JMK76
            END ELSE
               EMAIL.FILENAME='EXCEL_MACRO.XLS'
            END
            IF NO.MACRO=0 THEN           ; * JMK75
               EMAIL.OUT<6,-1>=' '       ; * JMK75
               EMAIL.OUT<6,-1>='   Format/Print Bills Processed:':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME           ; * JMK75
               EMAIL.OUT<11,-1>='E:\ARDENT\PUBLIC\BILLDATA\FORMS\':EMAIL.FILENAME          ; * JMK75
            END                          ; * JMK75
            IF CLIENT='10272' AND FROM.PROCESS THEN
               READ MACRO.INFO FROM F.FORMS,EMAIL.FILENAME THEN
                  WRITE MACRO.INFO ON F.FTP.AAR,EMAIL.FILENAME
               END
            END
            IF CLIENT='01151' THEN       ; * JMK153
               EMAIL.FILENAME='PARWAY_EXCEL_MACRO.XLSM'      ; * JMK153
               EMAIL.OUT<6,-1>=' '       ; * JMK153
               EMAIL.OUT<6,-1>='   Format/Print Bills Processed:':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME           ; * JMK153
               EMAIL.OUT<11,-1>='E:\ARDENT\PUBLIC\BILLDATA\FORMS\':EMAIL.FILENAME          ; * JMK153
            END                          ; * JMK153
         END

* New Ebill Macro to format and print E-Bills Processed (Weekly Report) (attachment 14) ; * JMK53
         EBILL.MACRO.SENT=0              ; * JMK53

         EBILL.MACRO.SEND=0              ; * JMK61
         IF NUM.EBILL > 0 AND DATE() >= "13889" THEN EBILL.MACRO.SEND=1          ; * JMK61
         IF CLIENT='01231' THEN EBILL.MACRO.SEND=0           ; * JMK61
         IF CLIENT='01139' THEN EBILL.MACRO.SEND=0           ; * JMK61
         IF EBILL.MACRO.SEND THEN        ; * JMK61
            EBILL.MACRO.SENT=1           ; * JMK53

            EMAIL.FILENAME='AFS_UPS_E-BILL_MACRO.XLS'        ; * JMK53 ; * JMK76
            IF NO.MACRO=0 THEN           ; * JMK75
               EMAIL.OUT<6,-1>=' '       ; * JMK53 ; * JMK75
               EMAIL.OUT<6,-1>='   Format/Print E-Bills Processed:':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME         ; * JMK53 ; * JMK75
               EMAIL.OUT<11,-1>='E:\ARDENT\PUBLIC\BILLDATA\FORMS\':EMAIL.FILENAME          ; * JMK53 ; * JMK75
            END                          ; * JMK75
            IF CLIENT='10272' AND FROM.PROCESS THEN          ; * JMK53
               READ MACRO.INFO FROM F.FORMS,EMAIL.FILENAME THEN        ; * JMK53
                  WRITE MACRO.INFO ON F.FTP.AAR,EMAIL.FILENAME         ; * JMK53
               END                       ; * JMK53
            END                          ; * JMK53
         END                             ; * JMK53

         IF FROM.PROCESS THEN
            READ FP.REC FROM F.TABLES, "FIRST_PROCESS*":CLIENT THEN
               DELETE F.TABLES, "FIRST_PROCESS*":CLIENT
               EMAIL.FILENAME='AFS_W9_TAX_FORM.PDF'
               READ W9.INFO FROM F.FORMS,EMAIL.FILENAME THEN
                  EMAIL.OUT<6,-1>=' '
                  EMAIL.OUT<6,-1>='   W-9 Taxpayer ID# Form (PDF): ':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME
                  EMAIL.OUT<11,-1>='E:\ARDENT\PUBLIC\BILLDATA\FORMS\':EMAIL.FILENAME
               END

               EMAIL.FILENAME='AFS_AR_Contact_Information.pdf'
               READ CONTACT.INFO FROM F.FORMS,EMAIL.FILENAME THEN
                  EMAIL.OUT<6,-1>=' '
                  EMAIL.OUT<6,-1>=' AFS AR Contact Info. (PDF):    ':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME
                  EMAIL.OUT<11,-1>='E:\ARDENT\PUBLIC\BILLDATA\FORMS\':EMAIL.FILENAME
               END
            END
         END

         IF CLIENT='01322' AND FROM.PROCESS THEN   ; * JMK142
            THERE.ARE.ATTACHMENTS=1      ; * JMK142
            EMAIL.FILENAME=WEEKLY.ALL.REPORT       ; * JMK142
            EMAIL.OUT<6,-1>='       All DetailS:             ':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME    ; * JMK142
            EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME       ; * JMK142
         END                             ; * JMK142

         IF CLIENT='01581' AND FROM.PROCESS THEN   ; * JMK154
            THERE.ARE.ATTACHMENTS=1      ; * JMK154
            EMAIL.FILENAME=WEEKLY.ALL.REPORT       ; * JMK154
            EMAIL.OUT<6,-1>='       All DetailS:             ':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME    ; * JMK154
            EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME       ; * JMK154
         END                             ; * JMK154

         IF CLIENT='01706' AND FROM.PROCESS THEN   ; * JMK119
            THERE.ARE.ATTACHMENTS=1      ; * JMK119
            EMAIL.FILENAME=WEEKLY.ALL.REPORT       ; * JMK119
            EMAIL.OUT<6,-1>='       All DetailS:             ':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME    ; * JMK119
            EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME       ; * JMK119
         END                             ; * JMK119

         IF CLIENT='01825' AND FROM.PROCESS THEN   ; * JMK141
            THERE.ARE.ATTACHMENTS=1      ; * JMK141
            EMAIL.FILENAME=WEEKLY.ALL.REPORT       ; * JMK141
            EMAIL.OUT<6,-1>='       All DetailS:             ':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME    ; * JMK141
            EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME       ; * JMK141
         END                             ; * JMK141

         IF CLIENT='01977' AND FROM.PROCESS THEN   ; * JMK132
            THERE.ARE.ATTACHMENTS=1      ; * JMK132
            EMAIL.FILENAME=WEEKLY.ALL.REPORT       ; * JMK132
            EMAIL.OUT<6,-1>='       All DetailS:             ':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME    ; * JMK132
            EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME       ; * JMK132
         END                             ; * JMK132

         IF UP.CNT#0 OR PCL.CNT=0 THEN   ; * JMK153
            EMAIL.OUT<6,-1>='------------------------------------------------------------------------------'
            IF DATE() >= ICONV('08/01/13','D') AND DATE() <= ICONV('08-31-13','D') THEN
               EMAIL.OUT<6,-1>=' '
               EMAIL.OUT<6,-1>='WE HAVE RECENTLY CHANGED THE STYLE OF OUR INVOICE FORMAT.  IF YOU HAVE ANY QUESTIONS'
               EMAIL.OUT<6,-1>='PLEASE CONTACT US AT THE NUMBER BELOW.'
               EMAIL.OUT<6,-1>=' '
            END
            EMAIL.OUT<6,-1>='The .TXT (text) reports are best viewed in a fixed-pitch font such as Courier.'
            EMAIL.OUT<6,-1>='To accomplish this, perform the following commands: Double click on the report'
            EMAIL.OUT<6,-1>='to open it, click on Edit, click on Select All, click on Format, click on Set'
            EMAIL.OUT<6,-1>='Font, choose Courier or Courier New, change the point size to 7.  You may have'
            EMAIL.OUT<6,-1>='to type over the font size to enter a point size of 7.  Click OK to finish.'

            IF UPS.EBILL.ATTACHMENT THEN           ; * JMK118
               EMAIL.OUT<6,-1>=' '       ; * JMK118
               EMAIL.OUT<6,-1>='(The last attachment to this email is your original UPS e-Bill file, which'    ; * JMK118
               EMAIL.OUT<6,-1>='contains package level details for all UPS parcels covered by this invoice.)'  ; * JMK118
            END                          ; * JMK118

            EMAIL.OUT<6,-1>=' '          ; * JMK114

            EMAIL.OUT<6,-1>='Excel Macros are available to format & print your *.XLS reports.  Click on the'   ; * JMK118 ; * JMK120
            EMAIL.OUT<6,-1>='desired link below and save it to your Desktop.  Then, open it, follow the security'        ; * JMK118 ; * JMK120
            EMAIL.OUT<6,-1>='prompts (e.g. "Enable Macros"), and select the report via the tabs at bottom'     ; * JMK118 ; * JMK120
            EMAIL.OUT<6,-1>='or check boxes upon opening.'   ; * JMK118 ; * JMK120
            EMAIL.OUT<6,-1>=' '          ; * JMK118
            EMAIL.OUT<6,-1>='BLS (Bill Processed) macro - http://www.afs.net/macros/AFS_BLS_MACRO.XLS'         ; * JMK118
            EMAIL.OUT<6,-1>='FedEx Bills Processed macro - http://www.afs.net/macros/FedEx_BLS_MACRO.XLS'      ; * JMK118


            IF MACRO.SENT THEN
               IF NO.MACRO THEN          ; * JMK75

               END ELSE                  ; * JMK75
                  IF USING.NEW.MACRO='NEW' THEN    ; * JMK75

                  END ELSE               ; * JMK75

                  END                    ; * JMK75
               END                       ; * JMK75
            END

            IF EBILL.MACRO.SENT THEN     ; * JMK53
               IF NO.MACRO THEN          ; * JMK75

               END ELSE                  ; * JMK75

               END                       ; * JMK75
               EMAIL.OUT<6,-1>='UPS E-Bill macro - http://www.afs.net/macros/AFS_UPS_E-BILL_MACRO.XLS'         ; * JMK118
            END                          ; * JMK53
            EMAIL.OUT<6,-1>='If you experience any MACRO problems, call Customer Service at 318-798-2111 x1286.'         ; * JMK118

            IF DATE() >= ICONV('10/17/08','D') AND DATE() <= ICONV('11/14/08','D') THEN    ; * JMK103
               EMAIL.OUT<6,-1>=' '       ; * JMK103
               EMAIL.OUT<6,-1>='NOTE:Effective November 1st, inside the detail data files which accompany our'           ; * JMK103
               EMAIL.OUT<6,-1>=' weekly reports, we will be changing the references of "Benchmark Charge" in'  ; * JMK103
               EMAIL.OUT<6,-1>=' the column headings to "Gross Charge" in order to more correctly identify that'         ; * JMK103
               EMAIL.OUT<6,-1>=' information.  Please review any reporting tools that you may be using that are'         ; * JMK103

               EMAIL.OUT<6,-1>=' not provided by AFS, LLC and make any necessary adjustments that are'         ; * JMK103 ; * JMK153
               EMAIL.OUT<6,-1>=' dependent on the words "Benchmark Charge" to "Gross Charge".'       ; * JMK103
            END                          ; * JMK103

            EMAIL.OUT<6,-1>=' '

            EMAIL.OUT<6,-1>='If you have any questions concerning your reports, please contact Customer Services'        ; * JMK145
            EMAIL.OUT<6,-1>='at 318-798-2111 option 2.'      ; * JMK145
         END ELSE                        ; * JMK153
            IF DATE() >= ICONV('08/01/13','D') AND DATE() <= ICONV('08-31-13','D') THEN
               EMAIL.OUT<6,-1>=' '
               EMAIL.OUT<6,-1>='WE HAVE RECENTLY CHANGED THE STYLE OF OUR INVOICE FORMAT.  IF YOU HAVE ANY QUESTIONS'
               EMAIL.OUT<6,-1>='PLEASE CONTACT US AT THE NUMBER BELOW.'
               EMAIL.OUT<6,-1>=' '
            END
            EMAIL.OUT<6,-1>=' '          ; * JMK153
            EMAIL.OUT<6,-1>='If you have any questions concerning your reports, please contact our'  ; * JMK153
            EMAIL.OUT<6,-1>='Accounting Department at 318-798-2111.'   ; * JMK153
         END                             ; * JMK153
         IF UP.CNT#0 OR PCL.CNT=0 THEN   ; * JMK153
            EMAIL.OUT<6,-1>=' '
            EMAIL.OUT<6,-1>='------------------------------------------------------------------------------'
            EMAIL.OUT<6,-1>='AFSi, our web-based Business Intelligence Reporting software, is available!'
            EMAIL.OUT<6,-1>='This service allows you to analyze your data, customize and create your own'
            EMAIL.OUT<6,-1>='reports targeting the information that is most important to you.'
            EMAIL.OUT<6,-1>=' '

            EMAIL.OUT<6,-1>='Please contact Customer Service at 318-798-2111 extension 1286 to schedule a'     ; * JMK118
            EMAIL.OUT<6,-1>='live demo of this powerful reporting tool.'         ; * JMK118
            EMAIL.OUT<6,-1>='------------------------------------------------------------------------------'
         END                             ; * JMK153
         EMAIL.OUT<6,-1>=' '

         EMAIL.OUT<6,-1>='Thank you for your continued support of AFS, LLC.'     ; * JMK118 ; * JMK153

         IF (SOC.TXT#'') AND (TOTAL#0) THEN
            EMAIL.OUT<6,-1>=' '
            EMAIL.OUT<6,-1>='Please remit amount due upon receipt.  This will ensure prompt payment to your'
            EMAIL.OUT<6,-1>='carriers.  We will fund your carriers when we receive your payment.'
            EMAIL.OUT<6,-1>=' '
            EMAIL.OUT<6,-1>='Please reference Invoice Number ':INVOICE.NUM:' showing Total Due of $':TOTAL'R26,':'.'

            EMAIL.OUT<6,-1>='Please make all checks payable to AFS, LLC and remit to:'     ; * JMK118 ; * JMK153
            EMAIL.OUT<6,-1>=' '

            EMAIL.OUT<6,-1>='   AFS, LLC'          ; * JMK153
            EMAIL.OUT<6,-1>='   Attn: Accounts Receivable'
            IF DATE() GE '14071' THEN    ; * JMK62

               EMAIL.OUT<6,-1>='   P.O. Box 18410'           ; * JMK62

               EMAIL.OUT<6,-1>='   Shreveport, LA 71138-1410'          ; * JMK62
            END ELSE                     ; * JMK62
               EMAIL.OUT<6,-1>='   P.O. Box 18170'
               EMAIL.OUT<6,-1>='   Shreveport, LA 71138'
            END                          ; * JMK62
         END

         EMAIL.OUT<6,-1>=' '
         EMAIL.OUT<6,-1>=' '
         EMAIL.OUT<6,-1>='                         Thank You For Your Business'

         EMAIL.OUT<7>=1                  ; * Auto format (add carriage returns to end of text)
         IF FROM.PROCESS THEN            ; * JMK58
            EMAIL.OUT<8>='LOG'           ; * JMK58
         END                             ; * JMK58

         IF CLIENT.REC<221>='Y' AND EMAIL.OUT<11>#'' THEN    ; * JMK51
            NUM.ATTACH=DCOUNT(EMAIL.OUT<11>,@VM)   ; * JMK51
            ZIPFILE=EMAIL.PATH:PRE.EMAIL.FILENAME:'-RPTS.ZIP'          ; * JMK51
            DELETE F.EMAILDATA,ZIPFILE   ; * JMK51
            FOR X=1 TO NUM.ATTACH        ; * JMK51
               EMAIL.FILENAME=EMAIL.OUT<11,X>      ; * JMK51
* Begin TAG01
               STMT='DOS /c "E:\Program_Files\7-Zip\7z.exe a -tzip" ':ZIPFILE:' ':EMAIL.FILENAME
* End TAG01
               EXECUTE STMT CAPTURING RESULTS      ; * JMK51
            NEXT X                       ; * JMK51
            EMAIL.OUT<11>=ZIPFILE        ; * JMK51
         END                             ; * JMK51

         IF CLIENT.REC<179>='' OR ONCE=1 THEN      ; * JMK31 ; * JMK101
* Add our email addresses to the list of addresses for record keeping

            EMAIL.OUT<3,-1>='LJjohnson@afs.net'    ; * CC: Email addresses ; *  GRB01
            EMAIL.OUT<3,-1>='MMcKay@afs.net'       ; * CC: Email addresses ; * JMK49
            EMAIL.OUT<3,-1>='WeeklyClientEmails@afs.net'     ; *CC

            IF CLIENT='00888' OR CLIENT='00889' OR CLIENT='00861' OR CLIENT='00914' OR CLIENT='00929' OR CLIENT='00928' OR CLIENT='00913' OR CLIENT='00936' THEN

            END
            IF PN.BCC#'' THEN            ; * JMK86
               EMAIL.OUT<3,-1>=PN.BCC    ; * JMK86
            END                          ; * JMK86
            IF REBATE.FLG THEN           ; * JMK88

            END                          ; * JMK88
         END                             ; * JMK31

         NO.EMAIL=NO.EMAIL OR NOT(BRIDGE.SUMMARY.MATCH)

         IF THERE.ARE.ATTACHMENTS THEN
            IF NO.EMAIL THEN
               EMAIL.TO=CHANGE(EMAIL.OUT<1>,@VM,' ')
               EMAIL.CC=CHANGE(EMAIL.OUT<2>,@VM,' ')
               EMAIL.BC=CHANGE(EMAIL.OUT<3>,@VM,' ')
               EMAIL.OUT<1>=''           ; * To: Email addresses
               EMAIL.OUT<2>=''           ; * CC: Email addresses
               EMAIL.OUT<3>=''           ; * BCC: Email addresses
               EMAIL.OUT<1,2>='DFriend@afs.net'
               EMAIL.OUT<3,-1>='LJjohnson@afs.net'           ; * CC: Email addresses ; *  GRB01
               EMAIL.OUT<1,4>='MMcKay@afs.net'

               EMAIL.OUT<4>='Reports_Error@afs.net'          ; * From Email address ; * JMK49
               EMAIL.OUT<5,1>='** ERROR ** ':EMAIL.OUT<5,1>

               TEMP='******************************************************************************'
               INS TEMP BEFORE EMAIL.OUT<6,1>

               TEMP='This email contains one or more errors in the report attachments'
               INS TEMP BEFORE EMAIL.OUT<6,2>

               TEMP='It is NOT being sent to the following people at client ':CLIENT:' ':CLIENT.NAME:':'
               INS TEMP BEFORE EMAIL.OUT<6,3>

               TEMP=' '
               INS TEMP BEFORE EMAIL.OUT<6,4>

               TEMP=' TO: Addresses: ':EMAIL.TO
               INS TEMP BEFORE EMAIL.OUT<6,5>

               TEMP=' CC: Addresses: ':EMAIL.CC
               INS TEMP BEFORE EMAIL.OUT<6,6>

               TEMP='BCC: Addresses: ':EMAIL.BC
               INS TEMP BEFORE EMAIL.OUT<6,7>

               TEMP=' '
               INS TEMP BEFORE EMAIL.OUT<6,8>

               TEMP='The following errors occurred while processing this account:'
               INS TEMP BEFORE EMAIL.OUT<6,9>

               TEMP='******************************************************************************'
               INS TEMP BEFORE EMAIL.OUT<6,10>

               NUM.ERRORS=DCOUNT(EMAIL.ERRORS,@AM)
               FOR X=1 TO NUM.ERRORS
                  INS EMAIL.ERRORS<X> BEFORE EMAIL.OUT<6,9+X>
               NEXT X

* For testing and debugging only: Replace all email addresses with our email addresses
               IF USER='FDAVID' THEN
                  EMAIL.OUT<1>='DFriend@afs.net'   ; * To: Email addresses
                  EMAIL.OUT<2>=''        ; * CC: Email addresses
                  EMAIL.OUT<3>=''        ; * BCC: Email addresses
               END
               IF USER='NO-MKERBOW' THEN

                  EMAIL.OUT<2>=''        ; * CC: Email addresses
                  EMAIL.OUT<3>=''        ; * BCC: Email addresses
               END
               EMAIL.OUT<8>='PRIO'
               IF CLIENT = "30032" THEN EMAIL.OUT<8,-1> = "NODEL"      ; * NPR12
               VIN=EMAIL.OUT
               VOUT=''
               CALL SENDMAIL(VIN,VOUT)   ; * This goes to us to report errors
               IF FROM.PROCESS THEN      ; * JMK139
                  GOTO THE.END           ; * JMK139
               END                       ; * JMK139
            END ELSE                     ; * There are no errors in the email, so send it
* For testing and debugging only: Replace all email addresses with our email addresses
               IF USER='FDAVID' THEN
                  EMAIL.OUT<1>='DFriend@afs.net'   ; * To: Email addresses
                  EMAIL.OUT<2>=''        ; * CC: Email addresses
                  EMAIL.OUT<3>=''        ; * BCC: Email addresses
               END

               IF USER='NO-MKERBOW' THEN           ; * JMK85
                  EMAIL.OUT<1>='MKerbow@AFS.net'   ; * JMK85
                  EMAIL.OUT<2>=''        ; * JMK85
                  EMAIL.OUT<3>=''        ; * JMK85
               END                       ; * JMK85

               NUM.ATTACHMENTS=DCOUNT(EMAIL.OUT<11>,@VM)
               BEGIN CASE
                  CASE CLIENT='01031' AND NUM.ATTACHMENTS>7  ; * Oklahoma Rig & Supply
* If there are more than 7 attachments, split the email up into
* pieces of 6 attachments each
                     NUM.PIECES=INT(NUM.ATTACHMENTS/6)
                     IF REM(NUM.ATTACHMENTS,6) THEN NUM.PIECES+=1
                     TEMP='Due to limitations of your email server, this email containing ':NUM.ATTACHMENTS:' attachments'
                     INS TEMP BEFORE EMAIL.OUT<6,5>
                     TEMP='will be sent in ':NUM.PIECES:' separate emails.'
                     INS TEMP BEFORE EMAIL.OUT<6,6>
                     ATTACHMENTS=EMAIL.OUT<11>
                     EMAIL.OUT<11>=''
                     LOOP WHILE ATTACHMENTS#''
                        EMAIL.OUT<11,-1>=ATTACHMENTS<1,1>
                        DEL ATTACHMENTS<1,1>
                        IF DCOUNT(EMAIL.OUT<11>,@VM)=6 THEN  ; * Got six => send them
                           VIN=EMAIL.OUT
                           VIN<8,-1>=EMAIL.SEND    ; * JMKXX
                           VOUT=''
                           CALL SENDMAIL(VIN,VOUT)           ; * This is the regular client email
                           IF VOUT<1>='ERROR' THEN
                              GOSUB EMAIL.SENDING.FAILURE
                           END
                           EMAIL.OUT<11>=''
                        END
                     REPEAT
                     IF EMAIL.OUT<11> THEN         ; * Send partial group of 6
                        VIN=EMAIL.OUT
                        VIN<8,-1>=EMAIL.SEND       ; * JMKXX
                        VOUT=''
                        CALL SENDMAIL(VIN,VOUT)    ; * This is the regular client email
                        IF VOUT<1>='ERROR' THEN
                           GOSUB EMAIL.SENDING.FAILURE
                        END
                     END
                  CASE 1                 ; * Everyone else

                     VIN=EMAIL.OUT
                     VIN<8,-1>=EMAIL.SEND
                     IF CLIENT = "30032" THEN VIN<8,-1>='NODEL'        ; * NPR12
                     VOUT=''
                     CALL SENDMAIL(VIN,VOUT)       ; * This is the regular client email
                     IF VOUT<1>='ERROR' THEN
                        GOSUB EMAIL.SENDING.FAILURE

                     END
               END CASE
            END                          ; * IF NO.EMAIL
         END                             ; * IF THERE.ARE.ATTACHMENTS
         NO.EMAIL=0                      ; * Reset for regions
         EMAIL.ERRORS=''                 ; * Reset for regions

* Weekly Carrier Report for Shurtape Technologies (10340) only (CAR.DA)
         IF CLIENT='10340' AND SEPARATE.REGIONS=0 AND CAR.DA#'' THEN
            THERE.ARE.ATTACHMENTS=0
            EMAIL.OUT=''
            EMAIL.OUT<1,1>='NOdomirok@Shurtape.Com'          ; * TO: Email addresses
            EMAIL.OUT<1,2>='SMolesa@Shurtape.Com'
            EMAIL.OUT<2>=TRIM(CLIENT.REC<126>)     ; * CC: Email addresses

            EMAIL.OUT<3>=TRIM(CLIENT.REC<127>)     ; * BCC: Email addresses

            EMAIL.OUT<3,-1>='LJjohnson@afs.net'    ; * CC: Email addresses ; *  GRB01
            EMAIL.OUT<3,-1>='MMcKay@afs.net'       ; * JMK49
            EMAIL.OUT<4>='Reports@afs.net'         ; * From Email address
            EMAIL.OUT<5,1>=CLIENT'R%5':' - ':CLIENT.NAME     ; * Subject of Email
            EMAIL.OUT<5,1>:=' ':OUT.BEG.DATE:' - ':OUT.END.DATE
            EMAIL.OUT<5,1>:=' Weekly Carrier Report'

* Email body

            EMAIL.OUT<6,-1>='AFS, LLC.                                                       Phone: 318-798-2111'        ; * JMK153

            EMAIL.OUT<6,-1>='670 Emberwood Drive                                               FAX: 318-797-3628'

            EMAIL.OUT<6,-1>='Shreveport, LA 71106                                                    www.afs.net'        ; * JMK74
            EMAIL.OUT<6,-1>=' '
            EMAIL.OUT<6,-1>=' '
            EMAIL.OUT<6,-1>='The Weekly Carrier Report includes all bills processed from ':OUT.BEG.DATE:' thru ':OUT.END.DATE:':'
            EMAIL.OUT<6,-1>='-----------------------------------------------------------------------------------'

            EMAIL.PATH='E:\ARDENT\PUBLIC\EMAILDATA\'
            PRE.EMAIL.FILENAME=CLIENT'R%5':'-':BEG.YEAR:BEG.MONTH:BEG.DAY:'-':END.YEAR:END.MONTH:END.DAY
            EMAIL.FILENAME=PRE.EMAIL.FILENAME:'-WCR.XLS'
            WRITE CAR.DA ON F.EMAILDATA,EMAIL.FILENAME THEN
               THERE.ARE.ATTACHMENTS=1
               EMAIL.OUT<6,-1>='       Weekly Carrier Report:       ':SPACE(35-LEN(EMAIL.FILENAME)):EMAIL.FILENAME
               EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME
            END ELSE
               CALL ELINE('Could not write ':EMAIL.FILENAME:' to EMAILDATA - Call IS Department.')
               CALL ELINE('Weekly Carrier Report for Nick at Shurtape IS NOT being emailed.')
            END

            EMAIL.OUT<6,-1>=' '
            EMAIL.OUT<6,-1>=' '
            EMAIL.OUT<6,-1>=' '
            EMAIL.OUT<6,-1>=' '
            EMAIL.OUT<6,-1>=' '
            EMAIL.OUT<6,-1>=' '
            EMAIL.OUT<6,-1>='                         Thank You For Your Business'

            EMAIL.OUT<7>=1               ; * Auto format (add carriage returns to end of text)

* For testing and debugging only: Replace all email addresses with our email addresses
            IF USER='FDAVID' THEN
               EMAIL.OUT<1>='DFriend@afs.net'      ; * To: Email addresses
               EMAIL.OUT<2>=''           ; * CC: Email addresses
               EMAIL.OUT<3>=''           ; * BCC: Email addresses
            END
            IF USER='NO-MKERBOW' THEN
               EMAIL.OUT<2>=''           ; * CC: Email addresses
               EMAIL.OUT<3>=''           ; * BCC: Email addresses
            END
            IF THERE.ARE.ATTACHMENTS THEN
               VIN=EMAIL.OUT
               VIN<8,-1>=EMAIL.SEND      ; * JMKXX
               VOUT=''
               CALL SENDMAIL(VIN,VOUT)   ; * This is a special email to Shurtape only
               IF VOUT<1>='ERROR' THEN
                  GOSUB EMAIL.SENDING.FAILURE
               END
            END
         END                             ; * IF CLIENT='10340' AND SEPARATE.REGIONS=0 AND CAR.DA#''


* APL West Source Files (1 file - Only for APL West)
         IF CLIENT='01078' AND NOT(SEPARATE.REGIONS) THEN    ; * APL West first time through
            THERE.ARE.ATTACHMENTS=0
            EMAIL.OUT=''
*
            EMAIL.OUT<1,1>='dfriend@afs.net'       ; * TO: Email addresses
            IF DATE() GT 15188 THEN EMAIL.OUT<1,1>='gina.moody@alconlabs.com'    ; * NPR99 07/23/09 - Temp for 07/29/09 processing
            EMAIL.OUT<1,2>='priscilla.calcotim@alconlabs.com'          ; * PKB 091211 -  111158 remove Marie Dominique Schafer add Priscilla CalCotim
            EMAIL.OUT<3>='MMcKay@afs.net'
            EMAIL.OUT<3,-1>='LJjohnson@afs.net'    ; * CC: Email addresses ; *  GRB01
            EMAIL.OUT<3,-1>='WeeklyClientEmails@afs.net'     ; *CC
            EMAIL.OUT<4>='Reports@afs.net'         ; * From Email address
            EMAIL.OUT<5,1>=CLIENT'R%5':' - ':CLIENT.NAME     ; * Subject of Email
            EMAIL.OUT<5,1>:=' ':OUT.BEG.DATE:' - ':OUT.END.DATE
            EMAIL.OUT<5,1>:=' ':CLIENT.REC<2>:' Source Files'

* Email body

            EMAIL.OUT<6,-1>='AFS, LLC.                                                  Phone: 318-798-2111'   ; * JMK153

            EMAIL.OUT<6,-1>='670 Emberwood Drive                                          FAX: 318-797-3628'

            EMAIL.OUT<6,-1>='Shreveport, LA 71106                                               www.afs.net'   ; * JMK74
            EMAIL.OUT<6,-1>=' '
            EMAIL.OUT<6,-1>=' '
            EMAIL.OUT<6,-1>='This file includes all bills processed from ':OUT.BEG.DATE:' thru ':OUT.END.DATE:':'
            EMAIL.OUT<6,-1>='------------------------------------------------------------------------------'

            EMAIL.PATH='E:\ARDENT\PUBLIC\EMAILDATA\'

* Set up and call BUILD.DF.SUB.ALCON (a special BUILD.DF.REG just for Alcon and APL West)
* This subroutine creates 9 reports and writes them to EMAILDATA for emailing here,
* but only one of the nine is emailed
            BUILD.DF.IN='' ; 
            BUILD.DF.IN<1>=CLIENT ; BUILD.DF.IN<2>=0
            BUILD.DF.IN<3>='ALL' ; BUILD.DF.IN<4>='ALL'
            BUILD.DF.IN<5>='3' ; BUILD.DF.IN<6>=BEG.DATE
            BUILD.DF.IN<7>=END.DATE ; BUILD.DF.IN<8>=''
            BUILD.DF.IN<9>='N' ; BUILD.DF.IN<10>='N'
            BUILD.DF.IN<11>='N' ; BUILD.DF.IN<12>='N'
            BUILD.DF.IN<13>=CLIENT.REC<134> ; BUILD.DF.IN<14>='STD'
            BUILD.DF.IN<15>='0' ; BUILD.DF.IN<16>='ALL'
            BUILD.DF.IN<17>=CLIENT.REC<135> ; BUILD.DF.IN<18>='1'
            BUILD.DF.IN<19>='' ; BUILD.DF.IN<20>=''
            BUILD.DF.IN<21>=USER ; BUILD.DF.IN<22>=CH.NUM
            BUILD.DF.IN<23>='1' ; BUILD.DF.IN<24>=''
            BUILD.DF.IN<25>='FROM FB.3.1.NEW' ; BUILD.DF.IN<26>='0'
            BUILD.DF.IN<27>='0' ; BUILD.DF.IN<28>='0'
            BUILD.DF.IN<45>=ONCE         ; * JMK129
            BUILD.DF.OUT=''
            CALL BUILD.DF.SUB.ALCON(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.EMAILDATA,BUILD.DF.IN,BUILD.DF.OUT)
            NUM.FILES=DCOUNT(BUILD.DF.OUT<1>,@VM)
            IF NUM.FILES#0 THEN
               THERE.ARE.ATTACHMENTS=1
               EMAIL.FILENAME=BUILD.DF.OUT<1,3>
               EMAIL.OUT<6,-1>='   APL West Source File         ':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME
               EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME
            END
            EMAIL.OUT<6,-1>=' '
            EMAIL.OUT<6,-1>=' '
            EMAIL.OUT<6,-1>=' '
            EMAIL.OUT<6,-1>=' '
            EMAIL.OUT<6,-1>=' '
            EMAIL.OUT<6,-1>=' '
            EMAIL.OUT<6,-1>='                         Thank You For Your Business'

            EMAIL.OUT<7>=1               ; * Auto format (add carriage returns to end of text)

* For testing and debugging only: Replace all email addresses with our email addresses
            IF USER='FDAVID' THEN
               EMAIL.OUT<1>='DFriend@afs.net'      ; * To: Email addresses
               EMAIL.OUT<2>=''           ; * CC: Email addresses
               EMAIL.OUT<3>=''           ; * BCC: Email addresses
            END
            IF USER='NO-MKERBOW' THEN
               EMAIL.OUT<2>=''           ; * CC: Email addresses
               EMAIL.OUT<3>=''           ; * BCC: Email addresses
            END
            IF THERE.ARE.ATTACHMENTS THEN
               VIN=EMAIL.OUT
               VIN<8,-1>=EMAIL.SEND      ; * JMKXX
               VOUT=''
               CALL SENDMAIL(VIN,VOUT)   ; * This is the regular client email
               IF VOUT<1>='ERROR' THEN
                  GOSUB EMAIL.SENDING.FAILURE
               END
            END                          ; * IF THERE.ARE.ATTACHMENTS THEN
         END                             ; * IF CLIENT='01078' AND NOT(SEPARATE.REGIONS) THEN

* Douglas Battery Client Customer Report (1 file - Only for Douglas Battery)
         IF CLIENT='00574' AND NOT(SEPARATE.REGIONS) THEN    ; * Douglas Battery first time through
            THERE.ARE.ATTACHMENTS=0
            EMAIL.OUT=''
            EMAIL.OUT<1>=TRIM(CLIENT.REC<125>)     ; * To: Email addresses
            EMAIL.OUT<2>=TRIM(CLIENT.REC<126>)     ; * CC: Email addresses
            EMAIL.OUT<3>=TRIM(CLIENT.REC<127>)     ; * BCC: Email addresses
            IF CLIENT.REC<179>#'' AND ONCE=0 THEN  ; * JMK09 ; * JMK101
               EMAIL.OUT<1>=TRIM(CLIENT.REC<179>)  ; * JMK09 TROUBLESHOOTING EMAILS
               EMAIL.OUT<2>=''           ; * JMK09
               EMAIL.OUT<3>=''           ; * JMK09
            END                          ; * JMK09
            EMAIL.OUT<3,-1>='WeeklyClientEmails@afs.net'     ; *CC
            EMAIL.OUT<4>='Reports@afs.net'         ; * From Email address
            EMAIL.OUT<5,1>=CLIENT'R%5':' - ':CLIENT.NAME     ; * Subject of Email
            EMAIL.OUT<5,1>:=' ':OUT.BEG.DATE:' - ':OUT.END.DATE
            EMAIL.OUT<5,1>:=' ':CLIENT.REC<2>:' Client Customer Report'

* Email body
            EMAIL.OUT<6,-1>='AFS, LLC.                                                  Phone: 318-798-2111'   ; * JMK153

            EMAIL.OUT<6,-1>='670 Emberwood Drive                                          FAX: 318-797-3628'

            EMAIL.OUT<6,-1>='Shreveport, LA 71106                                               www.afs.net'   ; * JMK74
            EMAIL.OUT<6,-1>=' '
            EMAIL.OUT<6,-1>=' '
            EMAIL.OUT<6,-1>='This file includes all bills processed from ':OUT.BEG.DATE:' thru ':OUT.END.DATE:':'
            EMAIL.OUT<6,-1>='------------------------------------------------------------------------------'
            EMAIL.PATH='E:\ARDENT\PUBLIC\EMAILDATA\'

* Set up and call BUILD.DF.DOUGLAS.BATTERY.SUB (a special BUILD.DF.REG just for Douglas Battery)
* This subroutine creates 1 report and writes it to EMAILDATA for emailing here
            BUILD.DF.IN='' ; 
            BUILD.DF.IN<1>=CLIENT
            BUILD.DF.IN<2>=BEG.DATE
            BUILD.DF.IN<3>=END.DATE
            BUILD.DF.IN<4>='FROM FB.3.1.NEW'
            BUILD.DF.IN<45>=ONCE         ; * JMK129
            BUILD.DF.OUT=''
            CALL BUILD.DF.DOUGLAS.BATTERY.SUB(F.CLIENTS,F.CARRIERS,F.EMAILDATA,BUILD.DF.IN,BUILD.DF.OUT)
            NUM.FILES=DCOUNT(BUILD.DF.OUT,@AM)
            IF NUM.FILES#0 THEN
               THERE.ARE.ATTACHMENTS=1
               EMAIL.FILENAME=BUILD.DF.OUT<1>
               EMAIL.OUT<6,-1>='   Douglas Battery CCR          ':SPACE(46-LEN(EMAIL.FILENAME)):EMAIL.FILENAME
               EMAIL.OUT<11,-1>=EMAIL.PATH:EMAIL.FILENAME
            END
            EMAIL.OUT<6,-1>=' '
            EMAIL.OUT<6,-1>=' '
            EMAIL.OUT<6,-1>=' '
            EMAIL.OUT<6,-1>=' '
            EMAIL.OUT<6,-1>=' '
            EMAIL.OUT<6,-1>=' '
            EMAIL.OUT<6,-1>='                         Thank You For Your Business'
            EMAIL.OUT<7>=1               ; * Auto format (add carriage returns to end of text)

* For testing and debugging only: Replace all email addresses with our email addresses
            IF USER='FDAVID' THEN
               EMAIL.OUT<1>='DFriend@afs.net'      ; * To: Email addresses
               EMAIL.OUT<2>=''           ; * CC: Email addresses
               EMAIL.OUT<3>=''           ; * BCC: Email addresses
            END

            IF THERE.ARE.ATTACHMENTS THEN
               VIN=EMAIL.OUT
               VIN<8,-1>=EMAIL.SEND      ; * JMKXX
               VOUT=''
               CALL SENDMAIL(VIN,VOUT)   ; * This is the regular client email
               IF VOUT<1>='ERROR' THEN
                  GOSUB EMAIL.SENDING.FAILURE
               END
            END                          ; * IF THERE.ARE.ATTACHMENTS THEN
         END                             ; * IF CLIENT='00574' AND NOT(SEPARATE.REGIONS) THEN

      END                                ; * IF (FROM.PROCESS) AND (FILE[1,13]='FB.BILLS.HIST')


* End Write Files to EMAILDATA and send Emails with attachments
***********************************************************************
END.SEND.EMAIL:

      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK TO BEGIN DEBUG 260...')

      LOG.SEQ.NO = 40                    ; * End
      PROC.DESC = "Preparing Email Att."
      LOG.ST.DATE = '' ; LOG.ST.TIME = '' ; LOG.END.DATE = DATE() ; LOG.END.TIME = TIME() ; LOG.REFS = ''
      LOG.REFS<1,-1> = OUTPUT<2>
      GOSUB UPD.PROC.LOGF

* If FROM.PROCESS is true and the client has regions and SEPARATE.REGIONS is not
* true, then set SEPARATE.REGIONS to true and run the whole program over again for
* individual regions.

      IF FROM.PROCESS AND (REGION='Y') AND NOT(SEPARATE.REGIONS) THEN
         SEPARATE.REGIONS=1
         CHECK.AR.BRIDGE=0
         GOTO START.REPORT.FOR.SEPARATE.REGIONS
      END

      IF SEPARATE.REGIONS AND (REG.COUNT<NUM.REGS) THEN
         GOTO SEPARATE.REGIONS.START.LOOP          ; * Process the next region
      END
***************************************************************
FINISHED.WITH.REGIONS:
***************************************************************
      IF DEBUG.SWITCH THEN CALL ELINE('PRESS BREAK TO BEGIN DEBUG 270...')

      IF FROM.PROCESS AND SEPARATE.REGIONS AND CLIENT="00883" AND PRINT.TOTAL.EXPENSE.DIST THEN
* Print one copy, no email of a special report for 00883, Pollock Paper
         DIST.MIDS=''
         DIST.IDS=''
         DIST.AMTS=''
         NUM.OF.ITMS=DCOUNT(TOTAL.DIST.MIDS,@AM)
         FOR XX=1 TO NUM.OF.ITMS
            DIST.MIDS<XX>=TOTAL.DIST.MIDS<XX>
            DIST.IDS<XX>=TOTAL.DIST.IDS<XX>
            DIST.AMTS<XX>=TOTAL.DIST.AMTS<XX>
         NEXT XX
         PRINT.TOTAL.EXPENSE.DIST=0
         TITLE.2='For Client: ':CLIENT:' ':CLIENT.NAME
         COPIES=1
         COPY.COUNT=1
         GOTO PRINT.EXPENSE.DIST
      END                                ; * IF CLIENT="00883" AND PRINT.TOTAL.EXPENSE.DIST

      GOTO THE.END
***********************************************************************

***************************************************************
EMAIL.SENDING.FAILURE:***
***************************************************************
*   This subroutine is called when an email to be sent to a client fails
*   for some reason, most probably a misspelling of the TO:, CC:, or BCC:
*   addresses.  In the case of an email failure, send a warning email to
*   Owen, David, Myra, and James saying that this email failed to go out.

      EMAIL.TO=CHANGE(EMAIL.OUT<1>,@VM,' ')
      EMAIL.CC=CHANGE(EMAIL.OUT<2>,@VM,' ')
      EMAIL.BC=CHANGE(EMAIL.OUT<3>,@VM,' ')
      EMAIL.ERROR.OUT=''

      EMAIL.ERROR.OUT<1,1>='U2Errors@afs.net'      ; * JMK72
      EMAIL.ERROR.OUT<2>=''              ; * CC: Email addresses
      EMAIL.ERROR.OUT<3>=''              ; * BCC Email addresses
      EMAIL.ERROR.OUT<4>='Reports@afs.net'         ; * From Email address
      EMAIL.ERROR.OUT<5,1>='** ERROR ** ':EMAIL.OUT<5,1>     ; * Subject
      EMAIL.ERROR.OUT<6,1>='******************************************************************************'
      EMAIL.ERROR.OUT<6,2>='This email is NOT BEING SENT due to a failure of the email program blat.'
      EMAIL.ERROR.OUT<6,3>=' '
      EMAIL.ERROR.OUT<6,4>='It is NOT being sent to the following people at client ':CLIENT:' ':CLIENT.NAME:':'
      EMAIL.ERROR.OUT<6,5>=' '
      EMAIL.ERROR.OUT<6,6>=' TO: Addresses: ':EMAIL.TO
      EMAIL.ERROR.OUT<6,7>=' CC: Addresses: ':EMAIL.CC
      EMAIL.ERROR.OUT<6,8>='BCC: Addresses: ':EMAIL.BC
      EMAIL.ERROR.OUT<6,9>='******************************************************************************'
      EMAIL.ERROR.OUT<6,-1>='Email failed for the following reason(s):'          ; * JMK72
      NUM.ERROR.LINES=DCOUNT(VOUT<3>,@VM)          ; * JMK72
      FOR X=1 TO NUM.ERROR.LINES         ; * JMK72
         EMAIL.ERROR.OUT<6,-1>=VOUT<3,X>           ; * JMK72
      NEXT X                             ; * JMK72
      EMAIL.ERROR.OUT<6,-1>='******************************************************************************'   ; * JMK72
      NUM.EMAIL.LINES=DCOUNT(EMAIL.OUT<6>,@VM)
      FOR X=1 TO NUM.EMAIL.LINES
         EMAIL.ERROR.OUT<6,-1>=EMAIL.OUT<6,X>
      NEXT X
      EMAIL.ERROR.OUT<7>=1               ; * Auto format (add carriage returns to end of text)
      EMAIL.ERROR.OUT<8>='PRIO'
      VIN=EMAIL.ERROR.OUT
      VOUT=''
      CALL SENDMAIL(VIN,VOUT)
      IF FROM.PROCESS THEN               ; * JMK139
         GOTO THE.END                    ; * JMK139
      END                                ; * JMK139
      RETURN

***************************************************************
REDRAW.SCREEN:***
***************************************************************
* Redraw screen after regions are displayed

      LN='Enter Client Number:'
      CRT @(0,3):LN:CLIENT'R%5':' ':CLIENT.NAME

      LN='Enter File Type:'
      BEGIN CASE
         CASE FILE.SEL=1 OR FILE.SEL=4
            CRT @(0,5):LN:FILE.SEL'L#2':'Current ':FILE
         CASE FILE.SEL=2
            CRT @(0,5):LN:FILE.SEL'L#2':'History ':FILE
         CASE FILE.SEL=3
            CRT @(0,5):LN:FILE.SEL'L#2':'Last Processed ':FILE
      END CASE

      LN='Enter the Beginning Date of the Report:'
      CRT @(0,7):LN:BEG.DATE'D2/'

      LN='Enter the Ending Date of the Report:   '
      CRT @(0,9):LN:END.DATE'D2/'

      LN='Enter Report Type:'
      BEGIN CASE
         CASE REPORT.TYPE='R'
            CRT @(0,11):LN:REPORT.TYPE'L#2':'Regular'
         CASE REPORT.TYPE='W'
            CRT @(0,11):LN:REPORT.TYPE'L#2':'Carrier Warning'
         CASE REPORT.TYPE='M'
            CRT @(0,11):LN:REPORT.TYPE'L#2':'Minimum Charge'
         CASE REPORT.TYPE='O'
            CRT @(0,11):LN:REPORT.TYPE'L#2':'OLA-Ovc'
         CASE REPORT.TYPE='F'
            CRT @(0,11):LN:REPORT.TYPE'L#2':'Build File'
      END CASE

      LN='Send Report to Hold File?:'
      IF HOLD.STAT THEN
         CRT @(0,13):LN:'Yes'
      END ELSE
         CRT @(0,13):LN:'No'
      END

      IF NOT(HOLD.STAT) THEN
         LN='Override Copies in Client Record to only 1?:'
         IF SUMMARY.ONLY THEN
            CRT @(0,15):LN:'Summary of Charges only'
         END ELSE
            IF ONE.COPY THEN
               CRT @(0,15):LN:'Yes, Override Copies'
            END ELSE
               CRT @(0,15):LN:'No, Do Not Override Copies'
            END
         END
      END

      LN='Only Bills with a Non-Logistics Variance?:No * THIS OPTION HAS BEEN DISABLED *'
      IF ONLY.VARIANCES THEN
         CRT @(0,17):LN                  ; * :'Yes'
      END ELSE
         CRT @(0,17):LN                  ; * :'No'
      END

      LN='Separate Report for each Region?:'
      IF SEPARATE.REGIONS THEN
         CRT @(0,19):LN:'Yes'
      END ELSE
         CRT @(0,19):LN:'No'
      END
      RETURN

***********************************************************************
SET.REGIONAL.COPIES:***
***************************************************************
* This subroutine is called if FROM.PROCESS and SEPARATE.REGIONS are both true
* to modify the value of COPIES read from CLIENT.REC<100> for printing/emailing
* regions by looking at the REG.EMAIL.PRINT switch (CLIENT.REC<145>).

      BEGIN CASE
         CASE REG.EMAIL.PRINT='N'
* Whether or not email addresses exists for this region
* No Email / No Print
            COPIES='N'
         CASE REG.EMAIL.PRINT='E'
            IF REGS<8,REG.COUNT>='' THEN
* No email address exists for this region
* No Email / No Print
               COPIES='N'
            END ELSE
* Email address exists for this region
* Email / No Print
               COPIES=0
            END
         CASE REG.EMAIL.PRINT='B'
            IF REGS<8,REG.COUNT>='' THEN
* No email address exists for this region
* No Email / Print
               IF COPIES#'N' THEN COPIES=1
            END ELSE
* Email address exists for this region
* Email / No Print
               COPIES=0
            END
         CASE REG.EMAIL.PRINT='P'
            IF REGS<8,REG.COUNT>='' THEN
* No email address exists for this region
* No Email / Print
               IF COPIES#'N' THEN COPIES=1
            END ELSE
* Email address exists for this region
* Email / Print
               IF COPIES#'N' THEN COPIES=1
            END
         CASE 1                          ; * For all other values of REG.EMAIL.PRINT default to No Copies and No Email
            COPIES='N'
      END CASE
      RETURN

***********************************************************************
BUILD.EMAIL.REPORT:***
***************************************************************
* This subroutine builds the email report in the generic array EA.  It assumes
* COPIES, EA, and LINE are set coming in.  The COPIES value is read from CLIENT.REC<100>
* and can have the following values:
* N  -- print no paper copies and send no email
* 0  -- print no paper copies but send email
* >0 -- print indicated number of paper copies and send email

      IF NOT(NUM(COPIES)) THEN RETURN
      IF COPIES>0 THEN PRINT LINE
      EA<-1>=LINE
      RETURN

***********************************************************************
CARRIER.BREAK:***
***************************************************************
* Carrier break called by Weekly Report for printing

      IF PREV.CARRIER='' ELSE
         PRINT SINGLE.BREAK
         TOT.LN=''
         X=DCOUNT(CARRIER.TOTAL,CHAR(254))
         FOR I=2 TO X
            WIDTH=FORMAT.REC<I,3>
            FORMAT=FORMAT.REC<I,2>
            FORMAT=FORMAT:'#':WIDTH
            IF CARRIER.TOTAL<I>='' THEN
               TOT.LN=TOT.LN:SPACE(WIDTH):' '
            END ELSE
               TOT.LN=TOT.LN:OCONV(CARRIER.TOTAL<I>,FORMAT):' '
            END
         NEXT I
         IF SYSTEM(4) LE 3 THEN PAGE
         PRINT TOT.LN
         PRINT DOUBLE.BREAK

      END                                ; * IF PREV.CARRIER=''
      IF CARRIER NE '' THEN
         PRINT
         PREV.CARRIER=CARRIER
         READ CARRIER.REC FROM F.CARRIERS,CARRIER ELSE CARRIER.REC=''
         PRINT '~~~~ ':CARRIER:' ':CARRIER.REC<1>:'  ':CARRIER.REC<2>:'  ':CARRIER.REC<3>:', ':CARRIER.REC<4>:' ':CARRIER.REC<5>
         PRINT
      END
      CARRIER.TOTAL=''
      RETURN

***********************************************************************
PRINT.REJECT.REPORT:***
***************************************************************
* Print reject report called by all four rejected bill reports

      REJ.DA=''
      CARRIER=''
      PREV.CARRIER=''
      CARRIER.TOTAL=''
      GRAND.TOTAL=''
      COUNTER=0
      DONE=0
      LOOP
         READNEXT PRO.ID ELSE DONE=1
      UNTIL DONE=1 DO
         COUNTER=COUNTER+1
         CALL PROG.BAR(22,COUNTER,NUM.ITMS,PER)
         READ PRO.REC FROM F.HIST,PRO.ID THEN
            LINE.DA=''
            CARRIER=FIELD(PRO.ID,'*',1)
            IF CARRIER#PREV.CARRIER AND CARRIER NE '' THEN
               IF COPIES#0 THEN PRINT
               PREV.CARRIER=CARRIER
               READ CARRIER.REC FROM F.CARRIERS,CARRIER ELSE CARRIER.REC=''
               CAR.ADDR=TRIM(CHANGE(CARRIER.REC<2>,@VM," "))
               TTEMP=CARRIER.REC<1>:'  ':CAR.ADDR:'  ':CARRIER.REC<3>:', ':CARRIER.REC<4>:' ':CARRIER.REC<5>
               TTEMP=CHANGE(TTEMP,@VM,' ')
               IF COPIES#0 THEN PRINT '~~~~ ':CARRIER:' ':TTEMP
            END                          ; * IF CARRIER#PREV.CARRIER AND CARRIER NE ''
            LINE.DA<1,1>=CARRIER
            LINE.DA<1,2>=CARRIER.REC<1>
            IF COPIES#0 THEN PRINT
            PRO=FIELD(PRO.ID,'*',2)
            LINE=PRO.REC<1>'D2/'
            LINE.DA<1,3>=PRO.REC<1>'D2/'
            LINE.DA<1,4>=PRO
            IF LINE=' ' THEN LINE='NO DATE '
            LINE:='   ':PRO'L#25'
            T.VAL=PRO.REC<8>-PRO.REC<10>-PRO.REC<11>
            LINE:='   ':T.VAL'R26,#10'
            LINE.DA<1,5>=T.VAL'R26,#10'
            IF CLIENT='01977' OR CLIENT='01979' THEN         ; * JMK135 ; * JMK136
               LINE.DA<1,6>=PRO.REC<9>   ; * JMK135
            END                          ; * JMK135
            VIN=115
            CALL FORMAT.REJECT.REASONS(VIN,PRO.REC,VOUT)
            FOR X=1 TO VOUT<1>
               T=VOUT<2,X>
               IF T='' THEN T='    ' ELSE T=T'R#2':') '
               IF COPIES#0 THEN PRINT LINE:'   ':T:VOUT<3,X>
               IF CLIENT='01977' OR CLIENT='01979' THEN      ; * JMK135 ; * JMK136
                  LINE.DA<1,7>:=T:CHANGE(VOUT<3,X>,@VM,' '):' '        ; * JMK135
               END ELSE                  ; * JMK135
                  LINE.DA<1,6>:=T:CHANGE(VOUT<3,X>,@VM,' '):' '
               END                       ; * JMK135
               LINE=STR(' ',LEN(LINE))
            NEXT X
            REJ.DA<-1>=LINE.DA
         END                             ; * READ PRO.REC FROM F.HIST,PRO.ID
      REPEAT
      RETURN
***********************************************************************
GET.ZIP.CODE:***
***************************************************************
* Get zip code

      BEGIN CASE
         CASE LEN(DEST.ID)=5
            READV CITY FROM F.ZIPS,DEST.ID,1 ELSE CITY="~~~ Unknown ~~~"
            READV STATE FROM F.ZIPS,DEST.ID,2 ELSE STATE="~~~ Unknown ~~~"
         CASE LEN(DEST.ID)=3
            CITY=''
            STATE='~~~ Unknown ~~~'
            X=DCOUNT(ZIP.REC<1>,CHAR(253))
            FOR I=1 TO X
               IF DEST.ID GE ZIP.REC<2,I> & DEST.ID LE ZIP.REC<3,I> THEN
                  STATE=ZIP.REC<1,I>
               END
            NEXT I
         CASE 1
            CITY=''
            STATE='~~~ Unknown ~~~'
      END CASE
      RETURN

***********************************************************************
8100: **** Set up laser printer
***************************************************************
* Landscape format
      LASER=''
      LASER<1>=1                         ; * Landscape
      LASER<2>=LPI                       ; * Lines per inch
      LASER<3>=DEPTH                     ; * Page length
      LASER<4>=CHAR.PER.IN               ; * Characters per inch
      LASER<5>=0                         ; * Set spacing (0=fixed,1=proprotional)
      LASER<6>=0                         ; * Italics (0=off,1=on)
      LASER<7>=1                         ; * Bin selection
      LASER<8>=0                         ; * Paper output
      LASER<9>=0                         ; * Font number
      GOTO 8120
***************************************************************
8110:
***************************************************************
* Portrait format
      LASER=''
      LASER<1>=0                         ; * Portrait
      LASER<2>=6                         ; * Lines per inch
      LASER<3>=DEPTH                     ; * Page length
      LASER<4>=CHAR.PER.IN               ; * Characters per inch
      LASER<5>=0                         ; * Set spacing (0=fixed,1=proprotional)
      LASER<6>=0                         ; * Italics (0=off,1=on)
      LASER<7>=1                         ; * Bin selection
      LASER<8>=0                         ; * Paper output
      LASER<9>=0                         ; * Font number
      GOTO 8120
***************************************************************
8115:
***************************************************************
* Landscape format
      LASER=''
      LASER<1>=1                         ; * Landscape
      LASER<2>=8                         ; * Lines per inch
      LASER<3>=DEPTH                     ; * Page length
      LASER<4>=19                        ; * Characters per inch
      LASER<5>=0                         ; * Set spacing (0=fixed,1=proprotional)
      LASER<6>=0                         ; * Italics (0=off,1=on)
      LASER<7>=1                         ; * Bin selection
      LASER<8>=0                         ; * Paper output
      LASER<9>="4102"                    ; * Font Number
      GOTO 8120
***************************************************************
8120:
***************************************************************
      LENGTH=LASER<3>-1
      EXECUTE 'TERM ,,,,,,':WIDTH:',':LENGTH
      MARGIN=0
      LASER.STR=''
      LASER.STR=ESC:"E"                  ; * Reset printer
      LASER.STR:=ESC:"&l":LASER<1>:"O"   ; * Set orientation
      LASER.STR:=ESC:"&l":LASER<2>:"D"   ; * Lines per inch
      LASER.STR:=ESC:"&l":LASER<3>:"F"   ; * Page length
      LASER.STR:=ESC:"(s":LASER<4>:"h"   ; * Char per Inch (pitch)
      LASER.STR:=LASER<5>:"p"            ; * Set spacing
      LASER.STR:=LASER<6>:"s"            ; * Italics off
      LASER.STR:="0b"                    ; * Stroke weight
      LASER.STR:="8.50v"                 ; * Point size
      LASER.STR:=LASER<9>:"T"            ; * Font
      LASER.STR:=ESC:"(8U"               ; * Select symbol set
      LASER.STR:=ESC:"&l":LASER<7>:"H"   ; * Bin selection
      LASER.STR:=ESC:"&a":MARGIN:"L"     ; * Set left margin
      LASER.STR:=ESC:'"g':LASER<8>:'F'   ; * Paper output
      PRINT LASER.STR:
      RETURN
***************************************************************
UPD.PROC.LOGF:* Upadate the process log file
***************************************************************
      IF NOT(LOGGING.FLAG) THEN RETURN   ; * Logging flag not set

      IF NOT(FROM.PROCESS) THEN RETURN

      LGVIN = '' ; LGVOUT = ''

      IF LOG.SEQ.NO NE "999" THEN
         IF SEPARATE.REGIONS THEN
            LOG.SEQ.NO = LOG.SEQ.NO : "_" : REGS<1,REG.COUNT>
            LOG.REFS<1,5> = REGS<1,REG.COUNT>
         END
      END

      LGVIN<1> = LOG.HDR.ID
      LGVIN<2> = LOG.ST.DATE
      LGVIN<3> = LOG.ST.TIME
      LGVIN<4> = LOG.END.DATE
      LGVIN<5> = LOG.END.TIME
      LGVIN<6> = CLIENT
      LGVIN<7> = ''                      ; * CARRIER
      LGVIN<8> = PROC.DESC
      LGVIN<9> = LOG.REFS                ; * Multivalued references/notes e.g SELECT stmt used/ OUTPUT etc - MAX 5
      LGVIN<10> = PROG.NAME              ; * E.G.  "FBBP FB.3.1.NEW"
      LGVIN<11> = USER
      LGVIN<12> = CH.NUM
      LGVIN<13> = PROC.EMAIL             ; * Multivalued email address to send alert to if necessary
      LGVIN<14> = LOG.SEQ.NO

      CALL UPD.LOG(LGVIN,LGVOUT,F.PROC.LOGF)

      LOG.ST.DATE = '' ; LOG.ST.TIME = '' ; LOG.END.DATE = '' ; LOG.END.TIME = '' ; LOG.REFS = '' ; PROC.EMAIL = ''
      RETURN
***********************************************************************
THE.END:***
***************************************************************

      LOG.SEQ.NO = 999
      LOG.ST.DATE = '' ; LOG.ST.TIME = '' ; LOG.END.DATE = DATE() ; LOG.END.TIME = TIME()
      PROC.DESC = "ALL Done"
      PROC.EMAIL = ""
      GOSUB UPD.PROC.LOGF

      EXECUTE 'TERM ,,,,,,132'
      CRT @(0,21)
      IF FROM.PROCESS THEN
         EXECUTE "AUTOLOGOUT 120"
      END
   END
