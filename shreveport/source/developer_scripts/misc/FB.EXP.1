*******************************************************************************
* PROGRAM FB.EXP.1.
* PROGRAM TO MODIFY FREIGHT BILL EXPENSE FIELDS
*
* FREIGHT BILLING PACKAGE
*
* AUTHOR: OWEN HOLMAN
* DATE: FEBRUARY 13, 1995
*******************************************************************************
*******************************************************************************
*
* Initialize variables
*
$OPTIONS HEADER.EJECT
$OPTIONS EXEC.EQ.PERF
$OPTIONS INFO.ABORT
      ERRMSG=''
      PROMPT''
      PROG.NAME='FB.EXP.1'
      PROG.DESC='EXPENSE FIELD CODE MAINTENANCE'
      PACK.NAME='FREIGHT BILLING'
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'FB.EXP.1' ; UPL.VOUT = ''       ; * NPR_UPL 04/23/2010
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)       ; * NPR_UPL 04/23/2010
*
* Open files
*
      OPEN '','FB.TABLES' TO F.TABLES ELSE CALL OPEN.ABORT('FB.TABLES',PROG.NAME)
*
* Read Code Table from File
*
      READ DISP.REC FROM F.TABLES,'EXPENSE.FIELDS' ELSE DISP.REC=''
*
* First page of codes
*
      PAGE=1
      GOSUB 9000
*
* Enter selection code
*
100:  HELP="Enter line number. 'B'=Back. 'T'=Top, ''=Next page. 'E'=End-&-Save. 'EX'=Exit."
      CALL GEN.IN(0,22,"Enter line number please. ###",'',Q,0,3,'','',1,-3,22,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            PAGE=PAGE+1
            GOSUB 9000
         CASE QI='B'
            PAGE=PAGE-1
            IF PAGE=0 THEN PAGE=1
            GOSUB 9000
         CASE QI='T'
            PAGE=1
            GOSUB 9000
         CASE QI='EX'
            STOP
         CASE NUM(QI)
            SEL=QI
            IF SEL LT START ! SEL GT STOP THEN
               CALL ELINE('Invalid selection.')
               GOTO 100
            END
            GOSUB 8000
         CASE QI='E'
            X=DCOUNT(DISP.REC<1>,CHAR(253))
            FOR I=X TO 1 STEP -1
               IF DISP.REC<1,I>='' THEN
                  DISP.REC=DELETE(DISP.REC,1,I)
                  DISP.REC=DELETE(DISP.REC,2,I)
                  DISP.REC=DELETE(DISP.REC,3,I)
                  DISP.REC=DELETE(DISP.REC,4,I)
               END
            NEXT I
            GOSUB 9500
*
            WRITE DISP.REC ON F.TABLES,'EXPENSE.FIELDS'
            STOP
      END CASE
      GOTO 100
*
*------------------------------------------------------------------------
* INTERNAL SUBROUTINES
*------------------------------------------------------------------------
*
* Edit code
*
8000: ROW=3+REM(SEL,18)
      IF ROW=3 THEN ROW=21
      CODE=DISP.REC<1,SEL>
      DESC=DISP.REC<2,SEL>
      ATTRIBUTE=DISP.REC<3,SEL>
      VALID.TYPE=DISP.REC<4,SEL>

8010: HELP="Enter new code. ''=Accept. 'D'=Delete. 'X'=Exit."
      CALL GEN.IN(5,ROW,CODE'L#6','',Q,0,6,'','',2,-6,ROW,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='X' THEN
         CRT @(5,ROW):CODE'L#6'
         RETURN
      END
      IF QI='' THEN
         Q=CODE
         QI=CODE
      END
      IF QI='D' THEN
         FOR X = 1 TO 5
            DISP.REC=DELETE(DISP.REC,X,SEL)
         NEXT X
         GOSUB 9000
         RETURN
      END
      CODE=QI
      CRT @(5,ROW):CODE'L#6'
*
8020: HELP="Enter code description. '<'=Back to code. 'X'=Exit."
      CALL GEN.IN(13,ROW,DESC'L#30','',Q,0,30,'','',2,-30,ROW,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X' ! QI='<'
            CRT @(13,ROW):DESC'L#30'
            GOTO 8010
         CASE QI=''
            Q=DESC
      END CASE
      DESC=Q
      CRT @(13,ROW):DESC'L#30'

8030: HELP="Please add attribute number "
      CALL GEN.IN(48,ROW,ATTRIBUTE'L#3','',Q,0,3,'','',0,-3,ROW,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X' ! QI='<'
            CRT @(43,ROW):ATTRIBUTE'L#3'
            GOTO 8020
         CASE QI='' AND NUM(QI)
            Q=ATTRIBUTE
         CASE NUM(QI)
            NULL
         CASE 1
            CALL ELINE("Invalid Entry, Please try again")
            GO 8030
      END CASE
      ATTRIBUTE=Q
      CRT @(48,ROW):ATTRIBUTE'L#3'

8040: HELP="MR0, MR1, MR2, MR3, MR4, MCU, D2/, R%5, 'X'=Exit, 'EX'it"
      CALL GEN.IN(58,ROW,VALID.TYPE'L#5','',Q,0,5,'','',2,-5,ROW,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X' ! QI='<'
            CRT @(58,ROW):VALID.TYPE'L#5'
            GOTO 8030
         CASE QI='' AND VALID.TYPE#''
            Q=VALID.TYPE
         CASE QI=''
            Q=''
         CASE QI='MR0' OR QI='MR1' OR QI='MR2' OR QI='MR3' OR QI='MR4' OR QI='D2/' OR QI = 'R%5' OR QI = 'MCU'
            NULL
         CASE 1
            CALL ELINE("Must be MR0, MR1, MR2, MR3, MR4, MCU, R%5 OR D2/ ")
            GO 8040
      END CASE
      VALID.TYPE=Q
      CRT @(58,ROW):VALID.TYPE'L#5'

      DISP.REC<1,SEL>=CODE
      DISP.REC<2,SEL>=DESC
      DISP.REC<3,SEL>=ATTRIBUTE
      DISP.REC<4,SEL>=VALID.TYPE

      RETURN

*
* Display array
*
9000: CRT @(0,3):@(-3):"  #":@(5,3):"Field   Description                    Attribute #    Type  "
*
      START=(PAGE*18)-17
      IF START GT 108 THEN
         START=1
         PAGE=1
      END
      STOP=START+17
      FOR I=START TO STOP STEP 1
         ROW=3+REM(I,18)
         IF ROW=3 THEN ROW=21
         CODE=DISP.REC<1,I>
         DESC=DISP.REC<2,I>
         ATTRIBUTE=DISP.REC<3,I>
         VALID.TYPE=DISP.REC<4,I>
         FORMAT=DISP.REC<5,I>
         PRINT @(0,ROW):I"R#3":'  ':CODE"L#6":'  ':DESC"L#30":'     ':ATTRIBUTE"L#3":'        ':VALID.TYPE"L#6"
      NEXT I
      RETURN


9500: NUM.CODES = DCOUNT(DISP.REC<1>,@VM)
      SORTED.ARRAY = ''
      FOR X = 1 TO NUM.CODES
         CODE = DISP.REC<1,X>
         LOCATE CODE IN SORTED.ARRAY<1> BY "AL" SETTING POS ELSE NULL
         INS CODE BEFORE SORTED.ARRAY<1,POS>
         INS DISP.REC<2,X> BEFORE SORTED.ARRAY<2,POS>
         INS DISP.REC<3,X> BEFORE SORTED.ARRAY<3,POS>
         INS DISP.REC<4,X> BEFORE SORTED.ARRAY<4,POS>
      NEXT X
      DISP.REC = SORTED.ARRAY
      RETURN


