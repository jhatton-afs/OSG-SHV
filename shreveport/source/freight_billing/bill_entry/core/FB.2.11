********************************************************************************
*  Confirm Eventual Pay Status (FB.2.11)
*  Copyright (C) 2001 by AFS Logistics, LLC.
*  Author: James M. Barberousse
********************************************************************************
*
* 071808 - NPR01 - Changed to allow for changing from a 'Never Pay' Bill to an 'Eventual Pay' Bill
* 030409 - NPR02 - T090253 - Highlight Client name based on ranking
* 041912 - SWB01 - PROJ 182 - Track FB's from Mail Room to Processing
*
*     Company and Program variables
*
      CO.NAME='AFS Logistics, LLC'
      PROG.NAME='FB.2.11'
      PROG.DESC='Confirm Eventual Pay/ Never Pay'
      PACK.NAME='Freight Payment'
      CALL GET.USER(USER.NAME)
      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'FB.2.11' ; UPL.VOUT = ''        ; * NPR_UPL 04/23/2010
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)       ; * NPR_UPL 04/23/2010
      USER.NAME=OCONV(USER.NAME,'MCU')

      OPEN '','BCTRL' TO F.BCTRL ELSE
         CALL OPEN.ABORT('BCTRL',PROG.NAME)
      END

      READ DBCTRL FROM F.BCTRL, USER.NAME ELSE DBCTRL = ''

*      EMPL.DEPT = DBCTRL<14>   ; * SWB01
      EMPL.TYPE = DBCTRL<14>             ; * SWB01
      EMPL.DEPT = DBCTRL<15>             ; * SWB01

      BEGIN CASE
*
* Authorized users
*
         CASE USER.NAME = 'BRIAN'
         CASE USER.NAME = 'KAREN'
         CASE USER.NAME = 'OWEN'

         CASE USER.NAME = 'DAVID'
         CASE USER.NAME = 'MKERBOW'
         CASE USER.NAME = 'SBARBEE'

         CASE USER.NAME = 'MYRA'
         CASE USER.NAME = 'KRISTY'
         CASE USER.NAME = 'DONNA'
         CASE USER.NAME = 'SSMITH'
         CASE USER.NAME = 'MARY'
         CASE USER.NAME = 'AHERBEL'
*         CASE EMPL.DEPT = 'F' OR EMPL.DEPT = 'A'   ; * SWB01
         CASE EMPL.TYPE = 'F' OR EMPL.TYPE = 'A'   ; * SWB01
*
* Restrict everyone else
*
         CASE 1
            SUBJ="Unauthorized Program Access by ":USER.NAME
            TEXT=''
            TEXT<1,-1>=USER.NAME:' ':DATE()'D2/':' ':OCONV(TIME(),'MTHS'):' ':PROG.NAME
            TEXT<1,-1>='User ':USER.NAME:' tried to access ':PROG.DESC
            TEXT<1,-1>="(This user's name was not included in the program to allow access)"
            MVIN=''
*ZZ            MVIN<1>='Owen@afs.net':@VM:'SMatthews@afs.net'
******            MVIN<1>='npratt@afs.net'
            MVIN<2>=''
            MVIN<4>='AFS'
            MVIN<5>=SUBJ
            MVIN<6>=TEXT
            CALL SENDMAIL(MVIN,MVOUT)

            CALL FB.PRINT.CENT(1,80,12,'Restricted Access Application...')
            CALL FB.PRINT.CENT(1,80,14,'Access Denied! See your supervisor for Access')
            CALL ELINE('')
            STOP
      END CASE

      MASK.CHAR='-'

*
*     Open files to start
*
      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         CALL OPEN.ABORT('CLIENTS',PROG.NAME)
      END
      OPEN '','CARRIERS' TO F.CARRIERS ELSE
         CALL OPEN.ABORT('CARRIERS',PROG.NAME)
      END

*
*     List of input variables.  Defaults are assigned.
*
90:   ****
      EP.CLIENT.ID=''
      EP.CLIENT.REC=''
      EP.CLIENT.NAME=''
      EP.CLIENT.ADDR=''
      EP.CLIENT.CITY=''
      EP.CLIENT.STATE=''
      EP.CLIENT.ZIP=''

      EP.CARRIER.ID=''
      EP.CARRIER.REC=''
      EP.CARRIER.NAME=''
      EP.CARRIER.ADDR=''
      EP.CARRIER.CITY=''
      EP.CARRIER.STATE=''
      EP.CARRIER.ZIP=''

      EP.PRO.NUMBER=''

      EP.BILL.STATUS=''
      EP.PROCESS.DATE=''

      GOSUB GET.SCREEN.DISPLAY

*
*     Display heading and prompts
*
      CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      CRT @(0,2):STR('=',79)
      CRT SCREEN.DISPLAY

*
*     Get Client ID
*
100:  ***
      CRT @(17,4):@(-4):@(17,5):@(-4):@(17,6):@(-4):
      MASK=EP.CLIENT.ID:STR(MASK.CHAR,5-LEN(EP.CLIENT.ID))
      HELP='Enter Client ID Number or Name for Search. [X]=Exit [EX]=Exit'
      CALL GEN.IN(17,4,MASK,'',Q,0,20,'','',2,17,4,0,QI,HELP,0,23)
      QI=TRIM(OCONV(QI,'MCU'))
      BEGIN CASE
         CASE QI='EX' OR QI='X'
            GOTO 9999
         CASE NOT(QI MATCHES '0N') AND QI#''
            CALL SOUNDEX.DISPLAY(QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            CRT @(0,2):STR('=',79)
            CRT SCREEN.DISPLAY
            BEGIN CASE
               CASE ITEM.LIST=''
                  CALL ELINE('No matches found.')
                  GOTO 100
               CASE DCOUNT(ITEM.LIST,@AM) GT 1
                  GOTO 100
               CASE 1
                  DATA ITEM.LIST
                  GOTO 100
            END CASE
         CASE QI=''
            IF EP.CLIENT.ID='' THEN
               GOTO 100
            END ELSE
               QI=EP.CLIENT.ID
            END
         CASE NOT(NUM(QI))
            CALL ELINE('Invalid Client ID.')
            GOTO 100
      END CASE
      EP.CLIENT.ID=QI'R%5'

*
*     Read client record
*
      READ EP.CLIENT.REC FROM F.CLIENTS,EP.CLIENT.ID ELSE
         CALL ELINE('Client ':EP.CLIENT.ID:' was not found.')
         EP.CLIENT.ID=''
         GOTO 100
      END

*
*     Make assignments from client rec and display data
*
      EP.CLIENT.NAME=EP.CLIENT.REC<2>
      EP.CLIENT.ADDR=EP.CLIENT.REC<3>
      EP.CLIENT.CITY=EP.CLIENT.REC<4>
      EP.CLIENT.STATE=EP.CLIENT.REC<5>
      EP.CLIENT.ZIP=EP.CLIENT.REC<6>
      GOSUB DATA.DISPLAY

*
*     Open BILLS files based on CLIENT.ID
*
      OPEN '','FB.BILLS,':EP.CLIENT.ID TO F.FB.BILLS ELSE
         CALL ELINE('Cannot open FB.BILLS,':EP.CLIENT.ID:'. Check Client Number.')
         GOTO 100
      END

      OPEN '','FB.BILLS.HIST,':EP.CLIENT.ID TO F.FB.BILLS.HIST ELSE
         CALL ELINE('Cannot open FB.BILLS.HIST,':EP.CLIENT.ID:'. Check Client Number.')
         GOTO 100
      END

      OPEN '','FB.BILLS.ACCESS,':EP.CLIENT.ID TO F.ACCESS ELSE         ; * SWB01
         CALL ELINE('Cannot open FB.BILLS.ACCESS,':EP.CLIENT.ID:'. Check Client Number.')  ; * SWB01
         GOTO 100                        ; * SWB01
      END                                ; * SWB01
      OPEN '','FB.TIMELINE.SUMMARY' TO F.TIMELINE.SUMMARY ELSE         ; * SWB01
         CALL ELINE('Cannot open FB.TIMELINE.SUMMARY. Notify I.T.')    ; * SWB01
         GOTO 100                        ; * SWB01
      END                                ; * SWB01
      OPEN '','FB.TABLES' TO F.TABLES ELSE         ; * SWB01
         CALL ELINE('Cannot open FB.TABLES. Notify I.T.')    ; * SWB01
         GOTO 100                        ; * SWB01
      END                                ; * SWB01
*
*     Get Carrier ID
*
200:  ***
      CRT @(17,8):@(-4):@(17,9):@(-4):@(17,10):@(-4):
      MASK=EP.CARRIER.ID:STR(MASK.CHAR,5-LEN(EP.CARRIER.ID))
      HELP='Enter Carrier ID Number or Name for Search. [X]=Back [EX]=Exit'
      CALL GEN.IN(17,8,MASK,'',Q,0,20,'','',2,17,8,0,QI,HELP,0,23)
      QI=TRIM(OCONV(QI,'MCU'))
      BEGIN CASE
         CASE QI='EX'
            GOTO 9999
         CASE QI='X'
            GOTO 100
         CASE NOT(QI MATCHES '0N') AND QI#''
            CALL SOUNDEX.DISPLAY(QI,'CARRIERS','SDX.CARRIER,NAME','1,3,4',ITEM.LIST)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            CRT @(0,2):STR('=',79)
            CRT SCREEN.DISPLAY
            GOSUB DATA.DISPLAY
            BEGIN CASE
               CASE ITEM.LIST=''
                  CALL ELINE('No matches found.')
                  GOTO 200
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                  GOTO 200
               CASE ITEM.LIST#''
                  IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
                  GOTO 200
            END CASE
         CASE QI=''
            IF EP.CARRIER.ID='' THEN
               GOTO 200
            END ELSE
               QI=EP.CARRIER.ID
            END
         CASE NOT(NUM(QI))
            CALL ELINE('Invalid Carrier ID.')
            GOTO 200
      END CASE
      EP.CARRIER.ID=QI'R%5'
*
*     Read carrier record
*
      READ EP.CARRIER.REC FROM F.CARRIERS,EP.CARRIER.ID ELSE
         CALL ELINE('"':EP.CARRIER.ID:'" was not found.')
         EP.CARRIER.ID=''
         GOTO 200
      END

*
*     Make assignments from carrier rec and display data
*
      EP.CARRIER.NAME=EP.CARRIER.REC<1>
      EP.CARRIER.ADDR=EP.CARRIER.REC<2>
      EP.CARRIER.CITY=EP.CARRIER.REC<3>
      EP.CARRIER.STATE=EP.CARRIER.REC<4>
      EP.CARRIER.ZIP=EP.CARRIER.REC<5>
      GOSUB DATA.DISPLAY

*
*     Get PRO.NUMBER
*
300:  ***
      MASK=EP.PRO.NUMBER:STR(MASK.CHAR,20-LEN(EP.PRO.NUMBER)):@(-4)
      HELP='Enter the Bill Pro Number. [X]=Back [EX]=Exit'
      CALL GEN.IN(17,12,MASK,'',Q,0,20,'','',2,17,12,0,QI,HELP,0,23)
      QI=TRIM(OCONV(QI,'MCU'))
      BEGIN CASE
         CASE QI='EX'
            GOTO 9999
         CASE QI='X'
            GOTO 200
         CASE QI=''
            IF EP.PRO.NUMBER='' THEN
               GOTO 300
            END ELSE
               QI=EP.PRO.NUMBER
            END
      END CASE
      EP.PRO.NUMBER=OCONV(QI,'MCU')
      PRO.NUMBER.ERROR=0
      GOSUB PRO.NUMBER.KEYBOARD.SHORTCUTS
      IF PRO.NUMBER.ERROR THEN
         CALL ELINE('Error. Pro Number cannot contain a "+" character.')
         EP.PRO.NUMBER=''
         GOTO 300
      END
      GOSUB DATA.DISPLAY
      EP.PRO.ID=EP.CARRIER.ID:'*':EP.PRO.NUMBER:'*':'0'

*
*     Read FB.BILLS.HIST file
*
      READU EP.PRO.REC FROM F.FB.BILLS.HIST,EP.PRO.ID ELSE
         CALL ELINE('"Bill ':EP.PRO.ID:'" was not found.')
         EP.PRO.NUMBER=''
         GOTO 300
      END
      IF EP.PRO.REC<39>#'R' THEN
         CALL ELINE('"Bill ':EP.PRO.ID:'" is not rejected')
         EP.PRO.NUMBER=''
         GOTO 300
      END

*
*     Make assignments from pro.rec and display data
*
400:  ***
*
      EP.BILL.STATUS = EP.PRO.REC<66>
      EP.PROCESS.DATE = EP.PRO.REC<37>'D2/'
      ORIG.EP.PROCESS.DATE = ICONV( EP.PROCESS.DATE, 'D2/')  ; * SWB01
      GOSUB DATA.DISPLAY
*
      ORIG.BILL.STATUS = EP.BILL.STATUS
*
      BEGIN CASE
         CASE ORIG.BILL.STATUS = 'N'
            FROM.STATUS = "NEVER PAY"
            TO.STATUS = "EVENTUAL PAY"
            NEW.EP.BILL.STATUS = "E"
            GOSUB PROCESS.STATUS
            IF RESP = 'X' OR RESP = 'N' OR RESP = '0' THEN GOTO 300
         CASE ORIG.BILL.STATUS = 'E'
            FROM.STATUS = "EVENTUAL PAY"
            TO.STATUS = "NEVER PAY"
            NEW.EP.BILL.STATUS = "N"
            GOSUB PROCESS.STATUS
            IF RESP = 'X' OR RESP = 'N' OR RESP = '0' THEN GOTO 300
         CASE 1
            CALL ELINE('This bill was NOT marked for NEVER PAY or EVENTUAL Pay.')
            GOTO 300
      END CASE
*
*     Confirm file update
*
700:  ***
*
      MASK='Update Files   : N':MASK.CHAR:@(-4)
      HELP='[Y]=Yes [N]=No [X]=Back [EX]=Exit'
      CALL GEN.IN(0,21,MASK,'',Q,0,2,'','',2,17,21,2,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI='N'
      BEGIN CASE
         CASE QI='EX'
            GOTO 9999
         CASE QI='X'
            GOTO 400
         CASE QI='N' OR QI='0'
            EP.BILL.STATUS=''
            EP.PROCESS.DATE=''
            GOSUB DATA.DISPLAY
            GOTO 300
         CASE QI='Y' OR QI='1'
            EP.PRO.REC<66>=EP.BILL.STATUS
            EP.PRO.REC<37>=EP.PROCESS.DATE
            EP.PRO.REC<67>=''
            IF FROM.STATUS = 'NEVER PAY' AND ORIG.EP.PROCESS.DATE # '' AND EP.BILL.STATUS = 'E' AND EP.PRO.REC<249> # '' THEN      ; * SWB01
*For the purposes of updating FB.TIMELINE.SUMMARY, changing a Processed
*Rejected Bill to Eventually Pay is effectively the same thing as
*Unprocessing.
               TIMELINE.TRANS.TYPE = 'UNP'         ; *  SWB01
               GOSUB UPDATE.TIMELINE.SUMMARY       ; * SWB01
               EP.PRO.REC<249> = ''      ; * SWB01
            END                          ; * SWB01
            ACCESS.REASON = 'REJ.':EP.BILL.STATUS  ; * SWB01
            GOSUB UPDATE.FB.BILLS.ACCESS           ; * SWB01
            WRITE EP.PRO.REC TO F.FB.BILLS.HIST,EP.PRO.ID ELSE
               CALL ELINE('Error writing to FB.BILLS.HIST file. Call IS Department.')
               GOTO 700
            END
            WRITE EP.PRO.REC TO F.FB.BILLS,EP.PRO.ID ELSE
               CALL ELINE('Error writing to FB.BILLS file. Call IS Department.')
               GOTO 700
            END
            CALL ELINE('Files have been updated.')
            EP.BILL.STATUS=''
            EP.PROCESS.DATE=''
            GOSUB DATA.DISPLAY
            GOTO 300
         CASE 1
            GOTO 700
      END CASE

      GOTO 9999                          ; * End program
*
*
PROCESS.STATUS:* Decide What to do about Status
*
      RESP = ""
*
      MASK='This bill is marked for ':FROM.STATUS:'. Change to ' :TO.STATUS: '? Y':MASK.CHAR:@(-4)
      HELP='[Y]=Yes [N]=No [X]=Back [EX]=Exit'
      CALL GEN.IN(0,21,MASK,'',Q,0,2,'','',2,59,21,2,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI='Y'
*
      BEGIN CASE
         CASE QI='EX'
            GOTO 9999
         CASE QI='X' OR QI='N' OR QI='0'
            EP.BILL.STATUS=''
            EP.PROCESS.DATE=''
            GOSUB DATA.DISPLAY
            RESP = QI
*          GOTO 300
         CASE QI='Y' OR QI='1'
*          EP.BILL.STATUS='E'
            EP.BILL.STATUS = NEW.EP.BILL.STATUS
            EP.PROCESS.DATE=''
            GOSUB DATA.DISPLAY
         CASE 1
            GOTO PROCESS.STATUS
      END CASE
*
      RETURN
*
*
********************************************************************************
*
*     Internal Subroutines
*
GET.SCREEN.DISPLAY:
* Build display screen

      SCREEN.DISPLAY =@(0, 4):'Client Number  :'
      SCREEN.DISPLAY:=@(0, 8):'Carrier Number :'
      SCREEN.DISPLAY:=@(0,12):'Pro Number     :'
      SCREEN.DISPLAY:=@(0,14):STR('-',79)
      SCREEN.DISPLAY:=@(0,16):'Bill Status    :'
      SCREEN.DISPLAY:=@(0,18):'Process Date   :'
      SCREEN.DISPLAY:=@(-3)
      RETURN


DATA.DISPLAY:
*     Display data

      HIN = EP.CLIENT.REC<240> ; HOUT = ""         ; * NPR02  Highlight based on ranking
      CALL CLIENT.HL(HIN,HOUT) ; HLB = HOUT<1,1> ; HLA = HOUT<1,2>     ; * NPR02

      CRT @(17,4):EP.CLIENT.ID:SPACE(3):HLB:EP.CLIENT.NAME:HLA:@(-4)   ; * NPR02
      CRT @(25,5):EP.CLIENT.ADDR:@(-4)
      CRT @(25,6):EP.CLIENT.CITY:' ':EP.CLIENT.STATE:' ':EP.CLIENT.ZIP:@(-4)
      CRT @(17, 8):EP.CARRIER.ID:SPACE(3):EP.CARRIER.NAME:@(-4)
      CRT @(25, 9):EP.CARRIER.ADDR:@(-4)
      CRT @(25,10):EP.CARRIER.CITY:' ':EP.CARRIER.STATE:' ':EP.CARRIER.ZIP:@(-4)
      CRT @(17,12):EP.PRO.NUMBER:@(-4)
      BEGIN CASE
         CASE EP.BILL.STATUS='N'
            CRT @(17,16):'NEVER PAY':@(-4)
         CASE EP.BILL.STATUS='E'
            CRT @(17,16):'EVENTUAL PAY':@(-4)
         CASE 1
            CRT @(17,16):EP.BILL.STATUS:@(-4)
      END CASE
      CRT @(17,18):EP.PROCESS.DATE:@(-3)
      RETURN


PRO.NUMBER.KEYBOARD.SHORTCUTS:
*     Use keyboard shortcuts for entering Pro Number

      PLUS.POS=INDEX(EP.PRO.NUMBER,'+',1)
      IF PLUS.POS THEN
         EP.PRO.NUMBER=CHANGE(EP.PRO.NUMBER,'+','-')
      END
      IF EP.PRO.NUMBER[LEN(EP.PRO.NUMBER),1]='-' AND (EP.CARRIER.ID='00093' OR EP.CARRIER.ID='00017') THEN
         EP.PRO.NUMBER=EP.PRO.NUMBER[1,LEN(EP.PRO.NUMBER)-1]:'X'
      END
      IF INDEX(EP.PRO.NUMBER,'+',1) THEN
         PRO.NUMBER.ERROR=1
      END
      RETURN

************************
UPDATE.TIMELINE.SUMMARY:                 ; * SWB01
************************

      IF FIELD(EP.PRO.ID, '*', 3) = 0 THEN         ; * SWB01
         IF EP.PRO.REC<246> # '' AND EP.PRO.REC<247> # '' AND ORIG.EP.PROCESS.DATE # '' THEN         ; * SWB01
            TR.VIN = EP.PRO.REC<53>      ; * SWB01
            TR.VIN<2> = EP.CLIENT.ID     ; * SWB01
            TR.VIN<3> = EP.CARRIER.ID    ; * SWB01
            TR.VIN<4> = EP.PRO.REC<246>  ; * SWB01
            TR.VIN<5> = EP.PRO.REC<247>  ; * SWB01
            TR.VIN<6> = EP.PRO.REC<248>  ; * SWB01
            TR.VIN<7> = ORIG.EP.PROCESS.DATE       ; * SWB01
            TR.VIN<8> = EP.PRO.REC<249>  ; * SWB01
            TR.VIN<9> = EP.PRO.ID        ; * SWB01
            TR.VIN<10> = TIMELINE.TRANS.TYPE       ; * SWB01

            CALL FB.UPD.TIMELINE.SUMMARY(TR.VIN, TR.VOUT, F.TIMELINE.SUMMARY)    ; * SWB01
            IF TR.VOUT # '' THEN         ; * SWB01
               TR.EMAIL.OUT=''           ; * SWB01
               TR.EMAIL.OUT<1,1>='nmeddaugh@afs.net'           ; * SWB01
               TR.EMAIL.OUT<1,2>='mkerbow@afs.net'           ; * SWB01
               TR.EMAIL.OUT<3>=''        ; * SWB01
               TR.EMAIL.OUT<4>='FB.2.3.NW@afs.net'           ; * SWB01
               TR.EMAIL.OUT<5>='Freight Bill Timeline Tracking errors'           ; * SWB01
               BEGIN CASE                ; * SWB01
                  CASE TR.VOUT[1, 11] = 'TRANS.TYPE='        ; * SWB01
*Invalid Trans Type was passed
                     TR.EMAIL.OUT<6>='An invalid TRANS.TYPE of ':FIELD(TR.VOUT, '=', 2):' was passed from FB.2.3.NW to FB.UPD.TIMELINE.TRACKING '      ; * SWB01
                     TR.EMAIL.OUT<6> := 'with the following parmaters:'          ; * SWB01
                     FOR TTEO = 1 TO 10  ; * SWB01
                        TR.EMAIL.OUT<6,-1>='TR.VIN<':TTEO:'> = ':TR.VIN<TTEO>    ; * SWB01
                     NEXT TTEO           ; * SWB01

                  CASE 1                 ; * SWB01
*This transaction caused the FB Counter in one or more of the Summmary
*records to 'go negative'. This transaction is not necessarily the one
*that CAUSED the miscount.'

                     TR.EMAIL.OUT<6>='A TIMELINE.SUMMARY transaction with a TRANS.TYPE of ':TIMELINE.TRANS.TYPE          ; * SWB01
                     TR.EMAIL.OUT<6,-1>=' was passed from FB.2.3.NW to FB.UPD.TIMELINE.TRACKING '    ; * SWB01
                     TR.EMAIL.OUT<6,-1>='resulted in one or more Summary records having a Count of less than zero '      ; * SWB01
                     TR.EMAIL.OUT<6,-1>='with the following parmaters:'          ; * SWB01
                     FOR TTEO = 1 TO 10  ; * SWB01
                        TR.EMAIL.OUT<6,-1>='TR.VIN<':TTEO:'> = ':TR.VIN<TTEO>    ; * SWB01
                     NEXT TTEO           ; * SWB01
                     TR.EMAIL.OUT<6,-1>=' '        ; * SWB01
                     TR.EMAIL.OUT<6,-1>='FB.TIMELINE.SUMMARY ID ' 'L#45  ':'Field 1  ':'Trans  ':'FB #'        ; * SWB01
                     TR.EMAIL.OUT<6,-1>=' '        ; * SWB01
                     TR.ERR.CNT = DCOUNT(TR.VOUT<1>, @VM)    ; * SWB01
                     FOR TTEC = 1 TO TR.ERR.CNT    ; * SWB01
                        TR.EMAIL.OUT<6,-1> = TR.VOUT<1, TTEC>'L#45  ':TR.VOUT<2, TTEC>'L#7  ':TR.VOUT<3, TTEC>'L#5  ':TR.VOUT<4, TTEC>       ; * SWB01
                     NEXT TTEC           ; * SWB01
               END CASE                  ; * SWB01
               IF MINIMUM(TR.VOUT<2>) >= - 5 THEN  ; * SWB01
*So as to not overwhelm the email system if something goes wrong and
*lots of the summary records go way negative, only report up until
*a count of -5
                  CALL SENDMAIL(TR.EMAIL.OUT,TR.EMAIL.VOUT)  ; * SWB01
               END ELSE                  ; * SWB01
                  TR.EMAIL.OUT=''        ; * SWB01
                  TR.EMAIL.VOUT=''       ; * SWB01
               END                       ; * SWB01

            END                          ; * SWB01
         END                             ; * SWB01
      END                                ; * SWB01

      RETURN                             ; * SWB01

***********************
UPDATE.FB.BILLS.ACCESS:                  ; * SWB01
***********************

      ACC.VIN=''                         ; * SWB01
      ACC.VOUT=''                        ; * SWB01
      ACC.VIN<1>=EP.CLIENT.ID            ; * SWB01
      ACC.VIN<2>=EP.PRO.ID               ; * SWB01
      ACC.VIN<3>=USER.NAME               ; * SWB01
      ACC.VIN<4>=EMPL.DEPT               ; * SWB01
      ACC.VIN<5>=DATE()                  ; * SWB01
      ACC.VIN<6>=TIME()                  ; * SWB01
      ACC.VIN<7>='1'                     ; * SWB01
      ACC.VIN<8>=PROG.NAME               ; * SWB01
      ACC.VIN<9>=PROG.DESC               ; * SWB01
      ACC.VIN<10>=PACK.NAME              ; * SWB01
      ACC.VIN<11>=CO.NAME                ; * SWB01
      ACC.VIN<12> = ACCESS.REASON        ; * SWB01

      CALL UPD.FB.BILLS.ACCESS(ACC.VIN,ACC.VOUT,EP.CLIENT.REC,EP.CARRIER.REC,EP.PRO.REC,F.ACCESS,F.TABLES)          ; * SWB01

      RETURN

*
* End of program
*
9999: **
      CRT @(0,0):@(-3):@(0,21):PROG.NAME:@(0,22):CO.NAME
   END
