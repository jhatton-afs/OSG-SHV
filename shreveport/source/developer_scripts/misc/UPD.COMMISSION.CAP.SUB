      SUBROUTINE UPD.COMMISSION.CAP.SUB(VIN,VOUT,AR.BRIDGE.REC,CAP.REC,F.TABLES,F.BRIDGE.LAST,F.SALES.CODE)

*
*** Update/Rebuild  - CAP Qty and Amounts per Sales Code for commission monitoring.
*

      MODE      = VIN<1>    ;* [R]ebuild or [U]pdate
      CLIENT.ID = VIN<2>
      PROC.DATE = VIN<3>
      ID.TAB    = VIN<4>

      ORIG.CAP.REC = CAP.REC

      W.CAP.AMT        = CAP.REC<1>
      W.EFFECTIVE.FROM = CAP.REC<2>
      W.EFFECTIVE.TO   = CAP.REC<3>

      CLIENT.ID2       = CAP.REC<5>

      IF MODE = "U" THEN
         BRIDGE.REC = AR.BRIDGE.REC
         GOSUB UPDATE.ACCUM.COMM
         IF ORIG.CAP.REC NE CAP.REC THEN
            WRITE CAP.REC ON F.TABLES, ID.TAB
         END
         RETURN
      END

      IF MODE = "R" THEN GOSUB REBUILD.ACCUM.COMM

      RETURN

*********************************************************************************************************

REBUILD.ACCUM.COMM:

      CAP.REC<10> = ""   ;* MV Sales Codes
      CAP.REC<11> = ""   ;* MV Qty per Sales Code
      CAP.REC<12> = ""   ;* MV Amt per Sales Code

      CAP.REC<14> = ""   ;* MV Sales Group Codes
      CAP.REC<15> = ""   ;* MV Qty per Sales Group Code
      CAP.REC<16> = ""   ;* MV Amt per Sales Group Code

      O.FROM.DATE = OCONV(W.EFFECTIVE.FROM,"D2/")
      O.TO.DATE   = OCONV(W.EFFECTIVE.TO,"D2/")
*
      STMT = \SSELECT AR.BRIDGE.LAST WITH CLIENT# = "\:CLIENT.ID:\" \
      STMT := \ AND WITH PROC.DATE GE "\:O.FROM.DATE:\" AND WITH PROC.DATE LE "\:O.TO.DATE:\"\
      STMT := \ BY PROC.DATE\

      CRT @(0,22):"Selecting records to process for Client - ":CLIENT.ID:"  ": @(-3)

*
      EXECUTE STMT CAPTURING OUTPUT

      EOF = "N"
      CNT = 0

      LOOP
         READNEXT ARBL.ID ELSE EOF = "Y"
         CNT += 1
      UNTIL EOF = "Y"
         READ BRIDGE.REC FROM F.BRIDGE.LAST, ARBL.ID THEN
            PROC.DATE = FIELD(ARBL.ID,"*",2)
            GOSUB UPDATE.ACCUM.COMM
         END
      REPEAT

      WRITE CAP.REC ON F.TABLES, ID.TAB

      RETURN
*
UPDATE.ACCUM.COMM:

      IF W.EFFECTIVE.FROM LE PROC.DATE AND PROC.DATE LE W.EFFECTIVE.TO THEN
         N.CODES = DCOUNT(BRIDGE.REC<1>,@VM)
         FOR AA = 1 TO N.CODES
            A.SALES.CODE = BRIDGE.REC<1,AA>
            A.SALES.QTY  = BRIDGE.REC<2,AA>
            A.SALES.AMT  = BRIDGE.REC<3,AA>
            READ SLSCODE.REC FROM F.SALES.CODE, A.SALES.CODE ELSE SLSCODE.REC = ''
            A.SLSCODE.GROUP = SLSCODE.REC<8>

            LOCATE A.SALES.CODE IN CAP.REC<10> BY 'AR' SETTING POS THEN
               CAP.REC<11,POS> += A.SALES.QTY
               CAP.REC<12,POS> += A.SALES.AMT
            END ELSE
               INS A.SALES.CODE BEFORE CAP.REC<10,POS>
               INS A.SALES.QTY BEFORE CAP.REC<11,POS>
               INS A.SALES.AMT BEFORE CAP.REC<12,POS>
            END

            LOCATE A.SLSCODE.GROUP IN CAP.REC<14> BY 'AR' SETTING POS THEN
               CAP.REC<15,POS> += A.SALES.QTY
               CAP.REC<16,POS> += A.SALES.AMT
            END ELSE
               INS A.SLSCODE.GROUP BEFORE CAP.REC<14,POS>
               INS A.SALES.QTY BEFORE CAP.REC<15,POS>
               INS A.SALES.AMT BEFORE CAP.REC<16,POS>
            END
         NEXT AA
      END

      RETURN
