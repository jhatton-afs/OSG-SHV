      SUBROUTINE BUILD.DF.ACC(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.FILE,VIN,VOUT)
********************************************************************************
      UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'BUILD.DF.ACC' ; UPL.VOUT = ''                    ;* NPR_UPL 04/22/2010
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/22/2010
* PROGRAM: BUILD.DF.ACC
* SUBROUTINE TO BUILD A DELIMITED FILE
********************************************************************************
* THIS PROGRAM IS A PROPRIETARY PRODUCT OF AUTOMATED FREIGHT SYSTEMS.
*
* FREIGHT BILLING/EDI PACKAGE
*
* AUTHOR       : David R. Friend
* DATE CREATED : 08/06/97
* DESCRIPTION  : This program builds a delimited file for all the bills
*                paid during the specified dates so data can be worked
*                with under excel.
********************************************************************************
* MODIFIED     : 03/24/99 Tami Seago
*                03/05/01 David Friend changed from a program to a subroutine
*                11/01/02 JMK01 - ADD LCC FILTER FOR PROCESS
*                09/08/03 JMK02 - ADD MISROUTE EMAIL ATTACHMENT
*                10/27/03 JMK03 - ONLY RETURN RECORD NAME IF DATA EXISTS
*                11/13/03 JMK04 - ADD SS ACCESS FILTERS TO PROCESSING
*                12/10/03 JMK05 - ADD LTL DETAIL TO OUTPUT DEFINITIONS
*                12/17/03 JMK06 - ADD SUMMATION TO OUTPUT
*                01/20/04 JMK07 - CORRECT INITIALIZATION FOR JMK05
*                02/03/04 JMK08 - ADD EXCLUSION FOR SUMMARY
*                02/05/04 JMK09 - ADD CALL FOR DARLING BLENDED RATE
*                07/23/04 JMK10 - FILTER OUT POSSIBLE '"' MARKS IN DATA
*                11/05/04 JMK11 - ADD OPTIONS FOR AFS OR SCT CLIENT GROUPS
*                12/07/04 JMK12 - ADD USER FIELDS FOR EXPORT
*                12/13/04 JMK13 - MAKE USER FIELDS LIKE TEXT FOR OUTPUT
*                12/15/04 JMK14 - ADD STC CLIENT SCAC CODE TO OUTPUT
*                12/17/04 JMK15 - ADD INITIAL AND SERVICE SALESMAN TO OUTPUT 22
*                12/21/04 KWM01 - ADDED EXCEPTION AROUND QUOTED FIELDS FOR MOYNO 01244
*                01/26/05 KWM01 - ADDED EXCEPTION FOR AARCOPR 10272 FOR QUOTED FIELDS
*                02/09/05 JMK16 - MAKE ACCRUAL REPORT CHANGES
*                02/14/05 JMK17 - MAKE USER FIELD CHANGES
*                04/05/05 JMK18 - MAKE SURE THE ADD.CHAR PROCESS WORKS FOR FB.2.3.NW AS WELL AS FB.3.1.NEW
*                05/09/06 JCW01 - CHANGES TO @SELECTED, CLEARSELECT, AND STMT<X>
*                06/16/06 JCW02 - USE EDI.BILLS.HIST,CLIENT.ID
* 122006 - JMK19 - ADD TROUBLESHOOTING SWITCH TO EMAIL REPORT
* 122006 - JMK20 - ADD EMPTY REPORT FOR AUTOMATED ACCRUALS WHEN SCOTT CLIENTS
* 101608 - JMK21 - T082334 - Dietrich weekly accrual reports didn't go out
* 010711 - JMK22 - C110014 - Weekly client emails ; all special reports should be in Public folders
* 020811 - JMK23 - C110092 - Estimated processing date for Accrual accounts
* 072312 - RLM01 - Sysaid #3073 - Replace former employees' email addresseswith current employees
********************************************************************************
* VIN<1>=CLIENT               CLIENT NUMBER
*                             CAN BE CLIENT NUMBER OR 'ALL'
*
* VIN<2>=LOG.ONLY             CHOICE FOR LOGISTICS CLIENTS ONLY
*                             VALID SELECTIONS (Y/N)
*
* VIN<3>=CARRIER              CARRIER NUMBER
*                             CAN BE CARRIER NUMBER OR 'ALL'
*
* VIN<4>=MODE                 TRANSPORTATION MODE
*                             THIS IS ONLY ASKED FOR IF CARRIER IS EQUAL TO 'ALL'
*                             IF YOU SPECIFY CARRIER - LEAVE THIS NULL!!!
*
* VIN<5>=FILE.SEL             FILE SELECTION
*                             VALID SELECTIONS ARE 1 - TEMP
*                                                  2 - HISTORY
*                                                  3 - LAST PROCESSED
*                             THIS IS ONLY NEEDED IF CLIENT IS EQUAL TO 'ALL'
*
* VIN<6>=BEG.DATE             BEGINNING DATE - IF CLIENT IS SPECIFIED
*                             AND YOU HAVE SELECTED 3 FOR FILE.SEL (LAST PROCESSED)
*                             THEN BEG.DATE AND END.DATE=NULL
*
* VIN<7>=END.DATE             ENDING DATE - IF CLIENT IS SPECIFIED
*                             AND YOU HAVE SELECTED 3 FOR FILE.SEL (LAST PROCESSED)
*                             THEN BEG.DATE AND END.DATE NEED TO BE NULL
*
* VIN<8>=CUT.BACK.CODE        CUT BACK CODE - LEAVE NULL FOR ALL (NO PREFERENCE)
*
* VIN<9>=MISROUTE.INFO        MISROUTE INFO - VALID SELECTIONS ARE...
*                                 'I' - INCLUDE MISROUTE ONLY
*                                 'E' - EXCLUDE MISROUTE ONLY
*                                 'N' - NO PREFERENCE
*
* VIN<10>=OVERCHARGE.INFO     OVERCHARGE INFO - VALID SELECTIONS ARE...
*                                 'I' - INCLUDE OVERCHARGE ONLY
*                                 'E' - EXCLUDE OVERCHARGE ONLY
*                                 'N' - NO PREFERENCE
*
* VIN<11>=LOGISTICS.INFO      LOGISTICS INFO - VALID SELECTIONS ARE...
*                                 'I' - INCLUDE LOGISTICS ONLY
*                                 'E' - EXCLUDE LOGISTICS ONLY
*                                 'N' - NO PREFERENCE
*
* VIN<12>=DISCOUNT.INFO       DISCOUNT INFO - VALID SELECTIONS ARE...
*                                 'I' - INCLUDE DISCOUNTS ONLY
*                                 'E' - EXCLUDE DISCOUNTS ONLY
*                                 'N' - NO PREFERENCE
*
* VIN<13>=VERSION             VERSION NUMBER - IF CLIENT[1,2]='99'
*                             THEN VERSION NUMBER WILL BE SET TO 8
*
* VIN<14>=TYPE.OF.REPORT       VALID SELECTIONS ARE...
*                              STANDARD (STD) => AUTO.EMAIL = 0
*                              REGULAR EMAIL (EMAIL) => AUTO.EMAIL = 1
*                              DIVISIONAL EMAIL (EMAIL-DIV) => AUTO.EMAIL = 1
*
* VIN<15>=SEPARATE.DIVISIONS   SEPARATE REPORT FOR DIVISION
*
* VIN<16>=DIVISIONAL.ID        DIVISION ID TO USE
*
* VIN<17>=SORT                 SORT OPTION
*
* VIN<18>=MANUAL.EMAIL         MANUAL EMAIL
*
* VIN<19>=NEW.EMAIL.ADDR       ADDRESS TO BE EMAILED TO
*
* VIN<20>=DIV.EMAIL.ADDR       ADDRESS FOR DIVISION TO BE EMAILED TO
*
* VIN<21>=USER                 USER ID
*
* VIN<22>=CH.NUM               CHANNEL NUMBER
*
* VIN<23>=AUTO                 LAST PROCESSING DATES
*
* VIN<24>=CUT.DESC             CUT BACK DESCRIPTION
*
* VIN<25>=FROM.FB.3.1.NEW      THIS IS SET TO THE LITERAL 'FROM FB.3.1.NEW' IF
*                              THE CALLING PROGRAM IS FB.3.1.NEW OR 'FROM FB.2.3.NW'
*                              IF THE CALLING PROGRAM IS FB.2.3.NW.
* VIN<26>=USING.NEW.MACRO      SWITCH SET IN FB.3.1.NEW
*                              INSERTS A "?" BEFORE CERTAIN FIELDS FOR MACRO TO WORK
* VIN<27>=DUP.ONLY             SWITCH SET IN BUILD.DF.NW.
*                              1 MEANS USE ONLY DUPLICATES
*                              0 MEANS USE ONLY NON-DUPLICATES
* VIN<28>=INC.BD               SWITCH SET IN BUILD.DF.NW.
*                              1 MEANS INCLUDE BALANCE DUE AMOUNTS WITH OVERCHARGES
*                              0 MEANS DO NOT INCLUDE BALANCE DUE AMOUNTS WITH OVERCHARGES
* VIN<29>=LCC.INFO             LCC INFO - VALID SELECTIONS ARE...
*                                 'I' - INCLUDE LCC ONLY
*                                 'E' - EXCLUDE LCC ONLY
*                                 'N' - NO PREFERENCE
*
* VIN<30>=FBLIST              FREIGHT BILL LIST FROM MISROUTE EMAIL; * JMK02
*
* VIN<31>=CLIENT.ACCESS       SS CLIENT ACCESS FILTERS ; * JMK04
*
* VIN<32>=CARRIER.ACCESS      SS CARRIER ACCESS FILTER ; * JMK04
*
* VIN<33>=SALES.ACCESS        SS SALES ACCESS FILTER ; * JMK04
*
* VIN<34>=COMM.ACCESS         SS COMMISSION ACCESS FILTER ; * JMK04
*
********************************************************************************

      $INCLUDE PROG.ADMIN INC_OPTIONS

*
* Assign parameters
*
      PROG.NAME='BUILD.DF.ACC'
      CLIENT=VIN<1>
      LOG.ONLY=VIN<2>
      CARRIER=VIN<3>
      MODE=VIN<4>
      FILE.SEL=VIN<5>
      BEG.DATE=VIN<6>
      END.DATE=VIN<7>
      OBEG.DATE=OCONV(BEG.DATE,'D2/')    ; * JMK23
      OEND.DATE=OCONV(END.DATE,'D2/')    ; * JMK23
      CUT.BACK.CODE=VIN<8>
      MISROUTE.INFO=VIN<9>
      OVERCHARGE.INFO=VIN<10>
      LOGISTICS.INFO=VIN<11>
      DISCOUNT.INFO=VIN<12>
      VERSION=VIN<13>
      IF VERSION='' THEN VERSION=1
      TYPE.OF.REPORT=VIN<14>
      SEPARATE.DIVISIONS=VIN<15>
      DIVISIONAL.ID=VIN<16>
      SORT=VIN<17>
      IF SORT='' THEN SORT=1
      MANUAL.EMAIL=VIN<18>
      NEW.EMAIL.ADDR=VIN<19>
      DIV.EMAIL.ADDR=VIN<20>
      USER=VIN<21>
      CH.NUM=VIN<22>
      AUTO=VIN<23>
      CUT.DESC=VIN<24>
      WHERE.FROM=VIN<25>
      USING.NEW.MACRO=VIN<26>
      DUP.ONLY=VIN<27>
      INC.BD=VIN<28>
      LCC.INFO=VIN<29>                   ; * JMK01
      FBLIST=VIN<30>                     ; * JMK02
      CLIENT.ACCESS=VIN<31>              ; * JMK04
      IF CLIENT.ACCESS='' THEN CLIENT.ACCESS='ALL'           ; * JMK04
      CARRIER.ACCESS=VIN<32>             ; * JMK04
      IF CARRIER.ACCESS='' THEN CARRIER.ACCESS='ALL'         ; * JMK04
      SALES.ACCESS=VIN<33>               ; * JMK04
      IF SALES.ACCESS='' THEN SALES.ACCESS='ALL'   ; * JMK04
      COMM.ACCESS=VIN<34>                ; * JMK04
      IF COMM.ACCESS='' THEN COMM.ACCESS='Y'       ; * JMK04
      PRFX='FMT'                         ; * JMK02
      IF WHERE.FROM='FROM FB.SEND.MISROUTE.EMAILS' THEN      ; * JMK02
         PRFX='MRS'                      ; * JMK02
      END                                ; * JMK02
      JMK.MESSAGE=''                     ; * JMK03
      FOR X=1 TO 30                      ; * JMK03
         JMK.MESSAGE<1,X>=VIN<X>         ; * JMK03
      NEXT X                             ; * JMK03
      CLIENT.REC=''                      ; * JMK12

      IF TYPE.OF.REPORT='EMAIL' OR TYPE.OF.REPORT='EMAIL-DIV' THEN
         AUTO.EMAIL=1
      END ELSE
         AUTO.EMAIL=0
      END

      IF FILE.SEL=1 OR FILE.SEL=4 THEN
         FILE='FB.BILLS,':CLIENT
      END ELSE
         FILE='FB.BILLS.HIST,':CLIENT
      END

*
* Initialize variables
*
      TAB=CHAR(9)
      DIVS=''
      VOUT=''
* KM 3/12/2004
      LINE.COUNT = 3
      NAME.EXT = ''
*
* Open general files
*
      OPEN '','FB.BUILD.SPEC' TO F.BUILD.SPEC ELSE
         CALL OPEN.ABORT("FB.BUILD.SPEC",PROG.NAME)
      END
*     OPEN '','EDI.BILLS.HIST' TO EDI.BILLS.HIST ELSE ; * JCW02
*        CALL OPEN.ABORT("EDI.BILLS.HIST",PROG.NAME)  ; * JCW02
*     END                                             ; * JCW02
      OPEN '','FB.CUT.BACKS' TO F.CUT.BACKS ELSE
         CALL OPEN.ABORT("FB.CUT.BACKS",PROG.NAME)
      END
      OPEN '','ZIPS.CODES' TO F.ZIPS ELSE
         CALL OPEN.ABORT("ZIPS",PROG.NAME)
      END
      OPEN '','CLIENT.SCAC' TO F.CSCAC ELSE        ; * JMK14
         CALL OPEN.ABORT("CLIENT.SCAC",PROG.NAME)  ; * JMK14
      END                                ; * JMK14
      OPEN '','AR.SLSMAN.1000.1' TO F.SLSMAN ELSE  ; * JMK15
         CALL OPEN.ABORT("AR.SLSMAN.1000.1",PROG.NAME)       ; * JMK15
      END                                ; * JMK15
      READ LI.CODES FROM F.TABLES,'LI.CODES' ELSE
         CALL ELINE('Cannot read LI.CODES from FB.TABLES')
         GOTO EXIT.PROGRAM
      END
      READ AFS.SERV.LEV FROM F.TABLES,'AIR.SERVLEV*BASE' ELSE
         CALL ELINE('Cannot read LI.CODES from FB.TABLES')
         GOTO EXIT.PROGRAM
      END
      IF CLIENT='10272' AND WHERE.FROM='FROM FB.3.1.NEW' THEN
         OPEN '','FTP.AAR' TO F.FTP.AAR ELSE
            CALL OPEN.ABORT("FTP.AAR",PROG.NAME)
         END
      END
      IF CLIENT='01244' AND WHERE.FROM='FROM FB.3.1.NEW' THEN
         OPEN '','FTP.MOYNO' TO F.FTP.MOYNO ELSE
            CALL OPEN.ABORT("FTP.MOYNO",PROG.NAME)
         END
      END

*
* Set the build version and pull the necessary information
*
*     ID='FMT*':CLIENT:'*':VERSION       ; * JMK02
      ID=PRFX:'*':CLIENT:'*':VERSION     ; * JMK02
      READ DSPECS FROM F.BUILD.SPEC,ID ELSE
*        ID='FMT**':VERSION              ; * JMK02
         ID=PRFX:'**':VERSION            ; * JMK02
         READ DSPECS FROM F.BUILD.SPEC,ID ELSE
            CALL ELINE('An ERROR occurred in BUILD.DF.ACC. Failed on DSPEC read. ID=':ID)
            GOTO EXIT.PROGRAM
         END
      END
      ID='DF.SORT*':SORT
      READ D.SORT FROM F.TABLES,ID ELSE
         CALL ELINE('Sort Version ':SORT:' has not been setup.')
         GOTO EXIT.PROGRAM
      END

*     IF CLIENT#'ALL' THEN ; * JMK11
      IF (CLIENT#'ALL' AND CLIENT#'AFS' AND CLIENT#'SCT') THEN         ; * JMK11
         CLIENT.ID=CLIENT
         READ CLIENT.REC FROM F.CLIENTS,CLIENT ELSE
            CALL ELINE('ERROR - BUILD.DF did not complete CLIENT.REC read.')
            GOTO EXIT.PROGRAM
         END
         CLIENT.NAME=CLIENT.REC<2>
         IF VERSION='111' THEN
            IF CLIENT.ID#CLIENT.REC<147> THEN
               PARENT.ID=CLIENT.REC<147>
               READV PARENT.NAME FROM F.CLIENTS,PARENT.ID,2 ELSE PARENT.NAME='Unknown Parent'
            END ELSE
               PARENT.ID=CLIENT.ID
               PARENT.NAME=CLIENT.NAME
            END
         END
         OPEN '',FILE TO FB.BILLS ELSE
            CALL OPEN.ABORT(FILE:CLIENT,PROG.NAME)
         END
         VEND=CLIENT.REC<20>
         CUST=CLIENT.REC<21>

         IF VEND='Y' OR CUST='Y' THEN
            OPEN '','VEND.CUST,':CLIENT.ID TO F.VC ELSE
               F.VC=''
            END
         END ELSE
            F.VC = ''
         END
         DIVISION=CLIENT.REC<12>
         IF DIVISION='Y' THEN
            OPEN '','DIVISION.CODES,':CLIENT TO F.DIVISION ELSE
               CALL OPEN.ABORT("DIVISION.CODES,":CLIENT,PROG.NAME)
            END
            DIV.STMT='SSELECT DIVISION.CODES,':CLIENT
            IF AUTO.EMAIL THEN DIV.STMT=DIV.STMT:' WITH 9'
            EXECUTE DIV.STMT PASSLIST CAPTURING OUTPUT
            DONE=0
            CNTR=0
            LOOP
               READNEXT DIV.ID ELSE DONE=1
            UNTIL DONE DO
               READ DIV.REC FROM F.DIVISION,DIV.ID THEN
                  CNTR+=1
                  DIVS<1,CNTR>=DIV.ID'R%5'
                  DIVS<9,CNTR>=DIV.REC<9>
                  DIVS<11,CNTR>=DIV.REC<11>        ; * Division description
               END
            REPEAT
         END
         IF DIVISIONAL.ID#'ALL' AND DIVISION='Y' THEN
            READ DDIV FROM F.DIVISION,DIVISIONAL.ID THEN
               ZIP.VAR=DDIV<1>
               CALL FB.READ.ZIP(ZIP.VAR,CITY,STATE)
               CITY.STATE=CITY:', ':STATE
               DIV.DESC=DDIV<11>
            END
         END
         CLIENT.DOW=CLIENT.REC<151>      ; * JMK23
      END


START.BUILD: ***

*
* Select data for current client
*
*************************************************************************
*
* SELECT CLIENT FILE
*

      IF AUTO.EMAIL THEN
         IF TYPE.OF.REPORT='EMAIL' THEN
            GOSUB DO.HEADINGS
            GOSUB SELECT.BILLS
            GOSUB CONTINUE.BUILD
         END ELSE
            IF TYPE.OF.REPORT='EMAIL-DIV' AND DIVISION THEN
               SEPARATE.DIVISIONS=1
               DIVISIONAL.ID='ALL'
               DIV.COUNT=0
               ZIP.VAR=''
               NUM.DIVS=DCOUNT(DIVS<1>,@VM)
               COUNTER.1=0
               CITY.STATE=''
               DIV.EMAIL.ADDR=''
               GOTO 800
            END
         END
         GOTO EXIT.PROGRAM
      END


      TEXT='Selecting Clients.'
      CALL CENTER(TEXT,80)
      CRT @(0,16):TEXT
*
      EXECUTE "SELECT VOC 'FB.BILLS.HIST' *A7" RTNLIST CLIENT.LIST CAPTURING OUTPUT
*
      ITEMS=@SELECTED
      IF @SELECTED < 1 THEN              ; * JCW01
         CALL ELINE('ERROR - No clients on file.')
         GOTO EXIT.PROGRAM
      END
      COUNTER.1=0
      PER.1=0

*     IF CLIENT='ALL' THEN ; * JMK11
      IF CLIENT='ALL' OR CLIENT='AFS' OR CLIENT='SCT' THEN   ; * JMK11
         GOSUB DO.HEADINGS
         LOOP
            READNEXT CLIENT.ID FROM CLIENT.LIST ELSE CLIENT.ID='DONE'
            IF CLIENT.ID='DONE' ELSE
               READ CLIENT.REC FROM F.CLIENTS,CLIENT.ID ELSE CLIENT.REC=''
               BEGIN CASE                ; * JMK11
                  CASE CLIENT='AFS'      ; * JMK11
                     IF CLIENT.REC<92>='00002' THEN GO SKIP.CLIENT     ; * JMK11
                  CASE CLIENT='SCT'      ; * JMK11
                     IF CLIENT.REC<92>#'00002' THEN GO SKIP.CLIENT     ; * JMK11
                  CASE 1                 ; * JMK11
               END CASE                  ; * JMK11
               IF LOG.ONLY AND CLIENT.REC<93>#'Y' THEN
                  COUNTER.1=COUNTER.1+1
                  IF AUTO.EMAIL=0 THEN CALL PROG.BAR(20,COUNTER.1,ITEMS,PER.1)
                  GOTO SKIP.CLIENT
               END
               IF SALES.ACCESS#'ALL' THEN          ; * JMK04
                  SVC.SLS=CLIENT.REC<115>          ; * JMK04
                  LOCATE(SVC.SLS,CLIENT.ACCESS,1;SPOS) ELSE  ; * JMK04
                     GOTO SKIP.CLIENT    ; * JMK04
                  END                    ; * JMK04
               END                       ; * JMK04
               CLIENT.DOW=CLIENT.REC<151>          ; * JMK23
            END
            IF CLIENT.ID[1,2]='99' THEN GO SKIP.CLIENT
            IF CLIENT.ID[1,2]='98' THEN GO SKIP.CLIENT
*           IF CLIENT.ID='00000' AND CLIENT='ALL' THEN GO SKIP.CLIENT ; * JMK11
            IF CLIENT.ID='00000' AND (CLIENT='ALL' OR CLIENT='AFS' OR CLIENT='SCT') THEN GO SKIP.CLIENT        ; * JMK11
            CLIENT.LAST.PROCESSED=CLIENT.REC<82>
         UNTIL CLIENT.ID='DONE' DO
            COUNTER.1=COUNTER.1+1
*           IF CLIENT='ALL' AND FILE.SEL=2 THEN    ; * IF all Clients and From History file ; * JMK11
            IF (CLIENT='ALL' OR CLIENT='AFS' OR CLIENT='SCT') AND FILE.SEL=2 THEN          ; * IF all Clients and From History file ; * JMK11
               IF CLIENT.LAST.PROCESSED='' THEN GO SKIP.CLIENT         ; ** No need to look if no bills were processed
               IF BEG.DATE > CLIENT.LAST.PROCESSED THEN GO SKIP.CLIENT           ; ** No need to look for Bills if BEG.DATE is Later than last processed
            END
            IF CLIENT.ID='FB.BILLS.HIST' THEN GO SKIP.CLIENT
            IF USER='brian' OR USER='michelle' OR USER = 'mike' THEN
*              IF CLIENT='ALL' THEN ; * JMK11
               IF (CLIENT='ALL' OR CLIENT='AFS' OR CLIENT='SCT') THEN  ; * JMK11
                  IF VERSION#'8' AND CLIENT.ID[1,2]='99' THEN GO SKIP.CLIENT
                  IF CLIENT.ID[1,2]='98' THEN GO SKIP.CLIENT
                  IF CLIENT.REC<30>#'A' THEN GO SKIP.CLIENT
               END
            END ELSE
               IF VERSION#'8' AND CLIENT.ID[1,2]='99' THEN GO SKIP.CLIENT
            END
*DF       IF VERSION#'8' AND CLIENT.ID[1,2]='99' THEN GO SKIP.CLIENT
            IF CLIENT.REC<2>='' THEN
               CLIENT.NAME='*** Not On File ***'
            END ELSE
               CLIENT.NAME=CLIENT.REC<2>
            END
            IF AUTO.EMAIL ELSE
               CRT @(0,17):CLIENT.ID:" ":CLIENT.NAME:" - Now selecting freight bills":@(-4):
               CALL PROG.BAR(20,COUNTER.1,ITEMS,PER.1)
            END
            VEND=CLIENT.REC<20>
            CUST=CLIENT.REC<21>
            IF CLIENT.ID#CLIENT.REC<147> THEN
               PARENT.ID=CLIENT.REC<147>
               READV PARENT.NAME FROM F.CLIENTS,PARENT.ID,2 ELSE PARENT.NAME='Unknown Parent'
            END ELSE
               PARENT.ID=CLIENT.ID
               PARENT.NAME=CLIENT.NAME
            END
            ISLS=CLIENT.REC<114>         ; * JMK15
            READ ISLS.REC FROM F.SLSMAN,ISLS ELSE ISLS.REC=''          ; * JMK15
            ISLS.NAME=ISLS.REC<1>        ; * JMK15
            SSLS=CLIENT.REC<115>         ; * JMK15
            READ SSLS.REC FROM F.SLSMAN,SSLS ELSE SSLS.REC=''          ; * JMK15
            SSLS.NAME=SSLS.REC<1>        ; * JMK15

            IF VEND='Y' OR CUST='Y' THEN
               OPEN '','VEND.CUST,':CLIENT.ID TO F.VC ELSE
                  F.VC=''
               END
            END ELSE
               F.VC = ''
            END
            OPEN '','FB.BILLS.HIST,':CLIENT.ID TO FB.BILLS THEN
               FILE='FB.BILLS.HIST,':CLIENT.ID
               GOSUB SELECT.BILLS
            END
*GOSUB SELECT.BILLS

SKIP.CLIENT: ***
         REPEAT
         GOSUB CONTINUE.BUILD
      END ELSE
800:     IF SEPARATE.DIVISIONS AND DIVISIONAL.ID='ALL' THEN
            DIV.COUNT=0
            ZIP.VAR=''
            NUM.DIVS=DCOUNT(DIVS<1>,@VM)
            ITEMS=NUM.DIVS
            LOOP
               DIV.COUNT +=1
               COUNTER.1 +=1
            UNTIL DIV.COUNT > NUM.DIVS
               DIV.ID = DIVS<1,DIV.COUNT>
               READ DDIV FROM F.DIVISION, DIV.ID THEN
                  ZIP.VAR = DDIV<1>
                  CALL FB.READ.ZIP(ZIP.VAR,CITY,STATE)
               END ELSE
                  CITY='' ; STATE=''
               END
               IF CITY='' OR STATE='' THEN
                  CITY.STATE=''
               END ELSE
                  CITY.STATE=CITY:', ': STATE
               END
               GOSUB DO.HEADINGS
               IF AUTO.EMAIL ELSE
                  CRT @(0,17):CLIENT.ID:" ":CLIENT.NAME:" ":"Division: ":DIV.ID:"- Now selecting freight bills":@(-4):
                  CALL PROG.BAR(20,COUNTER.1,ITEMS,PER.1)
               END
               IF DIV.EMAIL.ADDR = '' THEN NEW.EMAIL.ADDR = DDIV<9>
               GOSUB SELECT.BILLS
               GOSUB CONTINUE.BUILD
SKIP.DIVISION: ***
            REPEAT
         END ELSE
            GOSUB DO.HEADINGS
            GOSUB SELECT.BILLS
            GOSUB CONTINUE.BUILD
         END
      END

EXIT.PROGRAM: *** End
      RETURN


*
* Do headings
*
DO.HEADINGS: ***
*     IF CLIENT='ALL' THEN ; * JMK11
*        DATA.SUBSET=0 ; * JMK11
*     END ELSE ; * JMK11
*        DATA.SUBSET=(CARRIER#'ALL') OR (MODE#'ALL') OR (CUT.BACK.CODE#'') OR (MISROUTE.INFO#'N') OR (OVERCHARGE.INFO#'N') OR (LOGISTICS.INFO#'N') OR (DISCOUNT.INFO#'N') OR DUP.ONLY OR (CARRIER='ALL' AND MODE#'ALL') ; * JMK11
*     END ; * JMK11
      BEGIN CASE                         ; * JMK11
         CASE CLIENT='ALL'               ; * JMK11
            DATA.SUBSET=0                ; * JMK11
         CASE CLIENT='AFS'               ; * JMK11
            DATA.SUBSET=0                ; * JMK11
         CASE CLIENT='SCT'               ; * JMK11
            DATA.SUBSET=0                ; * JMK11
         CASE 1                          ; * JMK11
            DATA.SUBSET=(CARRIER#'ALL') OR (MODE#'ALL') OR (CUT.BACK.CODE#'') OR (MISROUTE.INFO#'N') OR (OVERCHARGE.INFO#'N') OR (LOGISTICS.INFO#'N') OR (DISCOUNT.INFO#'N') OR DUP.ONLY OR (CARRIER='ALL' AND MODE#'ALL')   ; * JMK11
      END CASE                           ; * JMK11
      DARRAY=''
*     IF CLIENT='ALL' THEN ; * JMK11
      BEGIN CASE                         ; * JMK11
         CASE CLIENT='ALL'               ; * JMK11
            IF LOG.ONLY THEN
               DARRAY<1>='File for All Logistics Clients '
            END ELSE
               DARRAY<1>='File for ALL Clients '
            END
         CASE CLIENT='AFS'               ; * JMK11
            IF LOG.ONLY THEN
               DARRAY<1>='File for AFS Logistics Clients '
            END ELSE
               DARRAY<1>='File for AFS Clients '
            END
         CASE CLIENT='SCT'               ; * JMK11
            IF LOG.ONLY THEN
               DARRAY<1>='File for Scott Logistics Clients '
            END ELSE
               DARRAY<1>='File for Scott Clients '
            END
         CASE 1                          ; * JMK11
            DARRAY<1>='File for Client ':CLIENT:' ':CLIENT.NAME:' '
            IF SEPARATE.DIVISIONS THEN
               IF DIVISIONAL.ID = 'ALL' THEN
                  DARRAY<1> :='for division ':DIVS<1,DIV.COUNT>:' ':DIVS<11,DIV.COUNT>:' ':CITY.STATE:' '
               END ELSE
                  DARRAY<1> :='for division ':DIVISIONAL.ID:' ':DIV.DESC:' ':CITY.STATE:' '
               END
            END
      END CASE                           ; * JMK11
*     END ELSE ; * JMK11
*     END ; * JMK11
      IF CARRIER='ALL' THEN
         DARRAY<1>=DARRAY<1>:'For ALL Carriers '
         IF MODE='ALL' THEN
            DARRAY<1>=DARRAY<1>:'For ALL Modes '
         END ELSE
            READV MODE.DESC FROM F.TRANSPORT,MODE,1 ELSE MODE.DESC='Unknown Mode'
            DARRAY<1>=DARRAY<1>:'For Mode ':MODE:' ':MODE.DESC:' '
         END
      END ELSE
         READV CARRIER.NAME FROM F.CARRIERS,CARRIER,1 ELSE CARRIER.NAME='Unknown Carrier'
         DARRAY<1>=DARRAY<1>:'For Carrier ':CARRIER:' ':CARRIER.NAME:' '
      END
      DARRAY<1>=DARRAY<1>:'Between ':BEG.DATE'D2/':' and ':END.DATE'D2/':' '
      DARRAY<1>=DARRAY<1>:'Using Version ': VERSION : ' '
      IF D.SORT<1>#'' THEN DARRAY<1>=DARRAY<1>:D.SORT<2>
      DARRAY<1>=DARRAY<1>:' on ':DATE()'D2/'
      IF DATA.SUBSET THEN
         DARRAY<1>=DARRAY<1>:'   This report may represent a subset of all data and SHOULD NOT be used for account balancing.'
      END
      IF VERSION='111' THEN
         DARRAY<3,-1>='Parent #'
         DARRAY<3,-1>='Parent Name'
         DARRAY<3,-1>='Client #'
         DARRAY<3,-1>='Client Name'
      END ELSE
         IF VERSION='22' THEN            ; * JMK15
            DARRAY<3,-1>='Client #'      ; * JMK15
            DARRAY<3,-1>='Client Name'   ; * JMK15
            DARRAY<3,-1>='Initital Salesrep'       ; * JMK15
            DARRAY<3,-1>='Service Salesrep'        ; * JMK15
         END ELSE                        ; * JMK15
*          IF CLIENT='ALL' THEN ; * JMK11
            IF CLIENT='ALL' OR CLIENT='AFS' OR CLIENT='SCT' THEN       ; * JMK11
               DARRAY<3,-1>='Client #'
               DARRAY<3,-1>='Client Name'
            END
         END                             ; * JMK15
      END
      USRFLD=''                          ; * JMK12
      ITEM.COUNT=DCOUNT(DSPECS<2>,@VM)
      FOR I = 1 TO ITEM.COUNT
         NEW.HEAD=0
         IF DSPECS<4,I>=7 AND DSPECS<3,I>='FB' THEN
*           IF CLIENT='ALL' AND LOG.ONLY THEN NEW.HEAD=1 ; * JMK11
*           IF CLIENT#'ALL' THEN ; * JMK11
            IF (CLIENT='ALL' OR CLIENT='AFS' OR CLIENT='SCT') AND LOG.ONLY THEN NEW.HEAD=1           ; * JMK11
            IF (CLIENT#'ALL' AND CLIENT#'AFS' AND CLIENT#'SCT') THEN   ; * JMK11
               IF CLIENT.REC<93>='Y' THEN NEW.HEAD=1         ; * Logistics Client
            END
         END
         IF NEW.HEAD THEN
            DARRAY<3,-1>='Benchmark Charge'
         END ELSE
            IF CLIENT.REC<191>#'' THEN   ; * JMK12
               BEGIN CASE                ; * JMK12
*                 CASE CLIENT.REC<191,1>#'' AND DSPECS<2,I>='USER FIELD 1'       ; * JMK12; * JMK17
*                    DARRAY<3,-1>=CLIENT.REC<191,1>          ; * JMK12; * JMK17
                  CASE CLIENT.REC<191,1>#'' AND DSPECS<2,I>='USER FIELD 1 (UF1)'           ; * JMK12; * JMK17
                     DARRAY<3,-1>=CLIENT.REC<191,1>:' (UF1)'           ; * JMK12; * JMK17
                     USRFLD<1>=I         ; * JMK12
*                 CASE CLIENT.REC<191,2>#'' AND DSPECS<2,I>='USER FIELD 2'       ; * JMK12; * JMK17
*                    DARRAY<3,-1>=CLIENT.REC<191,2>          ; * JMK12; * JMK17
                  CASE CLIENT.REC<191,2>#'' AND DSPECS<2,I>='USER FIELD 2 (UF2)'           ; * JMK12; * JMK17
                     DARRAY<3,-1>=CLIENT.REC<191,2>:' (UF2)'           ; * JMK12; * JMK17
                     USRFLD<2>=I         ; * JMK12
*                 CASE CLIENT.REC<191,3>#'' AND DSPECS<2,I>='USER FIELD 3'       ; * JMK12; * JMK17
*                    DARRAY<3,-1>=CLIENT.REC<191,3>          ; * JMK12; * JMK17
                  CASE CLIENT.REC<191,3>#'' AND DSPECS<2,I>='USER FIELD 3 (UF3)'           ; * JMK12; * JMK17
                     DARRAY<3,-1>=CLIENT.REC<191,3>:' (UF3)'           ; * JMK12; * JMK17
                     USRFLD<3>=I         ; * JMK12
*                 CASE CLIENT.REC<191,4>#'' AND DSPECS<2,I>='USER FIELD 4'       ; * JMK12; * JMK17
*                    DARRAY<3,-1>=CLIENT.REC<191,4>          ; * JMK12; * JMK17
                  CASE CLIENT.REC<191,4>#'' AND DSPECS<2,I>='USER FIELD 4 (UF4)'           ; * JMK12; * JMK17
                     DARRAY<3,-1>=CLIENT.REC<191,4>:' (UF4)'           ; * JMK12; * JMK17
                     USRFLD<4>=I         ; * JMK12
*                 CASE CLIENT.REC<191,5>#'' AND DSPECS<2,I>='USER FIELD 5'       ; * JMK12; * JMK17
*                    DARRAY<3,-1>=CLIENT.REC<191,5>          ; * JMK12; * JMK17
                  CASE CLIENT.REC<191,5>#'' AND DSPECS<2,I>='USER FIELD 5 (UF5)'           ; * JMK12; * JMK17
                     DARRAY<3,-1>=CLIENT.REC<191,5>:' (UF5)'           ; * JMK12; * JMK17
                     USRFLD<5>=I         ; * JMK12
*                 CASE CLIENT.REC<191,6>#'' AND DSPECS<2,I>='USER FIELD 6'       ; * JMK12; * JMK17
*                    DARRAY<3,-1>=CLIENT.REC<191,6>          ; * JMK12; * JMK17
                  CASE CLIENT.REC<191,6>#'' AND DSPECS<2,I>='USER FIELD 6 (UF6)'           ; * JMK12; * JMK17
                     DARRAY<3,-1>=CLIENT.REC<191,6>:' (UF6)'           ; * JMK12; * JMK17
                     USRFLD<6>=I         ; * JMK12
                  CASE 1                 ; * JMK12
                     DARRAY<3,-1>=DSPECS<2,I>      ; * JMK12
               END CASE                  ; * JMK12
            END ELSE                     ; * JMK12
               DARRAY<3,-1>=DSPECS<2,I>
            END                          ; * JMK12
         END
      NEXT I
      DARRAY<3,-1>='Est Proc Date'       ; * JMK23
      RETURN

*
* Select bills for the clients
*
SELECT.BILLS: ***
      IF AUTO THEN
         EXECUTE 'SELECT FB.UNPROCESS,':CLIENT.ID:' WITH FILE.NAME = "FB.BILLS,':CLIENT:'" ITEM.NAME' PASSLIST CAPTURING OUTPUT
      END
      IF FILE = 'FB.BILLS,':CLIENT.ID THEN
*        STMT='SSELECT ':FILE:' WITH 30 GE "':OCONV(BEG.DATE,'D2/') ; * JMK16
*        STMT=STMT:'" AND WITH 30 LE "':OCONV(END.DATE,'D2/'):'"' ; * JMK16
         STMT='SSELECT ':FILE            ; * JMK16
         IF CLIENT.ID[1,2]#'99' THEN
            IF FILE.SEL=1 THEN
               STMT=STMT:' AND WITH 39 = "O"'
            END
            STMT=STMT:' AND WITH 39 # "R"'
         END ELSE
            STMT=STMT:' AND WITH 39 # "R"'
         END
      END ELSE
*        STMT='SSELECT ':FILE:' WITH 37 GE "':OCONV(BEG.DATE,'D2/') ; * JMK16
*        STMT=STMT:'" AND WITH 37 LE "':OCONV(END.DATE,'D2/'):'"'   ; * JMK16
         STMT='SSELECT ':FILE            ; * JMK16
         STMT=STMT:' AND WITH 39 # "R"'
* IF USER='OWEN' THEN
*  STMT:=' AND WITH 53 = "BRIAN""BRIANP"'
*  STMT:='S OR WITH 37 GE "':OCONV(BEG.DATE,'D2/')
*  STMT=STMT:'" AND WITH 37 LE "':OCONV(END.DATE,'D2/'):'"'
*  STMT=STMT:' AND WITH 39 # "R"'
*  STMT:=STMT:' AND WITH 54 = "BRIAN""BRIANP"'
*  CRT @(0,15):@(-3):STMT:
*  CALL ELINE('Using Owens Special Select Stmt')
* END
      END
      IF CARRIER#'ALL' THEN STMT=STMT:' AND WITH CARRIER# = "':CARRIER:'"'
*OWEN*      IF CARRIER='ALL' AND MODE#'ALL' THEN STMT=STMT:' AND WITH CARRIER.MODE = "':MODE:'"'
      IF CLIENT[1,2]='99' THEN
         IF CARRIER='ALL' AND MODE#'ALL' THEN STMT=STMT:' AND WITH CARRIER.MODE = "':MODE:'"'
      END ELSE
         IF CARRIER='ALL' AND MODE#'ALL' THEN STMT=STMT:' AND WITH 21 = "':MODE:'"'
      END
      BEGIN CASE
         CASE MISROUTE.INFO = 'I'
            STMT=STMT:' AND WITH 63 # "0"'         ; * JMK01
*            STMT=STMT:' AND WITH MIS.AMT # "0"'    ; * JMK01
            IF CLIENT.ID # '00891' THEN STMT:= ' AND MR.OVG.AMT GT "0"'
         CASE MISROUTE.INFO = 'E'
            STMT=STMT:' AND WITH 63 = "0"'         ; * JMK01
*            STMT=STMT:' AND WITH MIS.AMT = "0"'    ; * JMK01
            IF CLIENT.ID # '00891' THEN STMT:= ' OR MR.OVG.AMT LT "0"'
         CASE MISROUTE.INFO = '-'
*            STMT=STMT:' AND WITH MIS.AMT # "0"'    ; * JMK01
            STMT=STMT:' AND WITH 63 # "0"'         ; * JMK01
            STMT:= ' AND MR.OVG.AMT LT "0"'
         CASE MISROUTE.INFO = 'B'
            STMT=STMT:' AND WITH 63 # "0"'         ; * JMK01
*            STMT=STMT:' AND WITH MIS.AMT # "0"'    ; * JMK01
      END CASE
      BEGIN CASE                         ; * JMK01
         CASE LCC.INFO = 'I'             ; * JMK01
            STMT=STMT:' AND WITH 143 # ""'         ; * JMK01
         CASE LCC.INFO = 'E'             ; * JMK01
            STMT=STMT:' AND WITH 143 = ""'         ; * JMK01
      END CASE                           ; * JMK01
*     IF OVERCHARGE.INFO = 'I' THEN STMT=STMT:' AND WITH 11 AND WITH 11 LT "-0.01" '
*OH   IF OVERCHARGE.INFO = 'I' THEN STMT=STMT:' AND WITH 11 AND WITH 11 # "0" '
      IF OVERCHARGE.INFO = 'I' THEN STMT=STMT:' AND WITH OVC.AND.OVC.COMM AND WITH OVC.AND.OVC.COMM # "0" '
      IF OVERCHARGE.INFO = 'E' THEN STMT=STMT:' AND WITH 11 AND WITH 11 GE "-0.01" '
      IF LOGISTICS.INFO = 'I' THEN STMT=STMT:' AND WITH 12 AND WITH 12 LT "-0.01" '
      IF LOGISTICS.INFO = 'E' THEN STMT=STMT:' AND WITH 12 AND WITH 12 GE "-0.01" '
      IF DISCOUNT.INFO = 'I' THEN STMT=STMT:' AND WITH 10 AND WITH 10 LT "-0.01" '
      IF DISCOUNT.INFO = 'E' THEN STMT=STMT:' AND WITH 10 AND WITH 10 GE "-0.01" '
      IF CUT.BACK.CODE # '' THEN
         IF CUT.DESC#'' THEN
            X=COUNT(CUT.DESC,'~')
            IF X GT 0 THEN
               FOR I=1 TO X
                  LN='[':FIELD(CUT.DESC,'~',I):']'
                  STMT = STMT:' AND WITH 41 = "':LN:'" '
               NEXT I
               IF FIELD(CUT.DESC,'~',X+1) NE '' THEN
                  LN='[':FIELD(CUT.DESC,'~',X+1):']'
                  STMT = STMT:' AND WITH 41 = "':LN:'" '
               END
            END ELSE
               LN='[':CUT.DESC:']'
               STMT = STMT:' AND WITH 41 = "' LN'" '
            END
         END
      END
      IF DUP.ONLY THEN
         STMT=STMT:' AND WITH VERSION GT "0" '
      END ELSE
         STMT=STMT:' AND WITH VERSION = "0" '
      END
      IF USER='owen' AND DATE()=12440 THEN
         STMT:= ' AND WITH 123 AND WITH 123 # "0" '
      END
      IF SEPARATE.DIVISIONS THEN
         IF DIVISIONAL.ID = 'ALL' THEN
            STMT := 'AND WITH DIV = "':DIVS<1,DIV.COUNT>:'" '
         END ELSE
            STMT := 'AND WITH DIV = "':DIVISIONAL.ID:'" '
         END
      END
      IF FILE.SEL='4' THEN
         STMT='SSELECT ':FILE:' WITH 39 = "O" AND WITH 14 = "" AND WITH VERSION = "0"'
      END
      IF D.SORT<1>#'' THEN
         LN = 'BY ':D.SORT<1>
         STMT=STMT:LN
      END
      IF WHERE.FROM='FROM FB.SEND.MISROUTE.EMAILS' THEN      ; * JMK02
         STMT='SELECT FB.BILLS.HIST,':CLIENT.ID:' WITH @ID = '         ; * JMK02
         NVAL=DCOUNT(FBLIST,@VM)         ; * JMK02
         FOR VAL=1 TO NVAL               ; * JMK02
            STMT:='"':FBLIST<1,VAL>:'"'  ; * JMK02
         NEXT VAL                        ; * JMK02
         JMK.MESSAGE<1,-1>=STMT          ; * JMK03
      END                                ; * JMK02
*     IF OCONV(USER,'MCU')='OWEN' THEN
*        CRT @(0,23)
*        CRT @(0,23):STMT
*        CRT
*        CRT 'Press ENTER to continue: ':
*        INPUT NUL
*     END
*     IF OCONV(USER,'MCU')='MKERBOW' THEN
*        CRT @(0,23)
*        CRT @(0,23):STMT
*        CRT
*        CRT 'Press ENTER to continue: ':
*        INPUT NUL
*        IF NUL='D' THEN DEBUG
*     END
      STMT=STMT:' BY CARRIER BY CARRIER# BY 2 BY 1 BY PRO'
      IF WHERE.FROM='FROM FB.SEND.MISROUTE.EMAILS' THEN      ; * JMK03
         EXECUTE STMT RTNLIST BILLS.LIST CAPTURING OUTPUT    ; * JMK03
      END ELSE                           ; * JMK03
*OWEN
         IF USER = 'OWEN--' THEN
            CRT @(0,23)
            CRT STMT
            INPUT NUL
         END
*DF         IF USER = 'DAVID' THEN
*DF           STMT='GET-LIST DAV.1'
*DF         END
         EXECUTE STMT PASSLIST RTNLIST BILLS.LIST CAPTURING OUTPUT
      END                                ; * JMK03
*     JMK.MESSAGE<1,-1>=BILLS.LIST         ; *JMK03
      JMK.MESSAGE<1,-1>=OUTPUT           ; * JMK03
      JMK.MESSAGE<1,-1>=@SELECTED        ; * JMK03
*     IF @SELECTED ELSE
      IF @SELECTED > 0 ELSE              ; * JCW01
*        IF CLIENT#'ALL' THEN ; * JMK11
         IF (CLIENT#'ALL' AND CLIENT#'AFS' AND CLIENT#'SCT') THEN      ; * JMK11
            IF SEPARATE.DIVISIONS AND DIVISIONAL.ID = 'ALL' THEN GOTO SKIP.DIVISION
* CALL ELINE('No transactions on file. (SELECT In BUILD.DF.ACC).')
            IF CLIENT.REC<92>='00002' AND CLIENT.REC<198>='Y' THEN     ; * JMK20
               GOSUB DO.HEADINGS         ; * JMK20
               GOSUB CONTINUE.BUILD      ; * JMK20
            END                          ; * JMK20
            GOTO EXIT.PROGRAM
         END
      END
      NUM.BILLS = @SELECTED

      SHOULD.SUBTOTAL = D.SORT<4>
      OLD.SUBDATA = 'FIRST-ONE'
      SUBTOTAL = ''
      TOTAL = ''
      SUB.ATTR = D.SORT<1>
      COUNTER.2=0
      PER = 0
      DONE=0

*
* Get next item to process
*

      LOOP
         READNEXT PRO.ID FROM BILLS.LIST ELSE DONE = 1
      UNTIL DONE DO
         COUNTER.2=COUNTER.2+1
         LINE=''
         NO.EDI=0
         READ PRO.REC FROM FB.BILLS,PRO.ID THEN
GET.BILL:
            COUNTER.2=COUNTER.2+1
            IF AUTO.EMAIL=0 THEN CALL PROG.BAR(22,COUNTER.2,NUM.BILLS,PER)
            ORIG.EDI.ID = PRO.REC<88>    ; * JCW02
            IF ORIG.EDI.ID # '' THEN     ; * JCW02
*           IF PRO.REC<88>#'' THEN                                             ; * JCW02
*              READ EDI.REC FROM EDI.BILLS.HIST,PRO.REC<88> ELSE NO.EDI=1      ; * JCW02
               CALL PARSE.EDI.ID(ORIG.EDI.ID, CLIENT.ID, EDI.HIST.ID)  ; * JCW02
               OPEN 'EDI.BILLS.HIST,':CLIENT.ID TO EDI.BILLS.HIST THEN           ; * JCW02
                  READ EDI.REC FROM EDI.BILLS.HIST, EDI.HIST.ID ELSE NO.EDI = 1  ; * JCW02
               END ELSE                  ; * JCW02
                  NO.EDI = 1             ; * JCW02
               END                       ; * JCW02
            END ELSE
               NO.EDI=1
            END
            IF PRO.REC<63> GT PRO.REC<8> AND CLIENT.ID # '00891' AND MISROUTE.INFO#'-' AND MISROUTE.INFO#'B' THEN
               PRO.REC<63> = 0
               PRO.REC<69> = ''
               PRO.REC<22> = ''
               PRO.REC<23> = ''
            END
            SUBDATA = PRO.REC<SUB.ATTR>
            IF SUBDATA#OLD.SUBDATA THEN
               IF SHOULD.SUBTOTAL AND OLD.SUBDATA#'FIRST-ONE' THEN DARRAY<-1> = SUBTOTAL
               OLD.SUBDATA = SUBDATA
               SUBTOTAL = ''
            END

            CARRIER.ID=OCONV(PRO.ID,'G0*1')
            READV CARRIER.MODE FROM F.CARRIERS,CARRIER.ID,44 THEN
               IF PRO.REC<21>#'' THEN CARRIER.MODE=PRO.REC<21>
               READ TR.REC FROM F.TRANSPORT,CARRIER.MODE ELSE
                  TR.REC=''
               END
            END ELSE
               TR.REC=''
            END
            SERV.LEV = ''
            SERV.LEV.ID = "AIR.SERVLEV*":CARRIER.ID
            READ SERV.LEV FROM F.TABLES,SERV.LEV.ID ELSE SERV.LEV = ''

            IF PRO.REC<17> MATCHES "5N" AND PRO.REC<17> # '' AND CLIENT[1,2]#'99' THEN
               VC.ID = PRO.REC<17>'R%5'
               READ VC.REC FROM F.VC,VC.ID ELSE
                  VC.REC = PRO.REC<17>
               END
            END ELSE
               VC.REC = PRO.REC<17>
            END
            IF VERSION='111' THEN
               LINE<1>=PARENT.ID:@VM:PARENT.NAME:@VM:CLIENT.ID:@VM:CLIENT.NAME:@VM
            END ELSE
               IF VERSION='22' THEN      ; * JMK15
                  LINE<1>=CLIENT.ID:@VM:CLIENT.NAME:@VM:ISLS.NAME:@VM:SSLS.NAME:@VM        ; * JMK15
               END ELSE                  ; * JMK15
*               IF CLIENT='ALL' THEN ; * JMK11
                  IF (CLIENT='ALL' OR CLIENT='AFS' OR CLIENT='SCT') THEN         ; * JMK11
                     LINE<1>=CLIENT.ID:@VM:CLIENT.NAME:@VM
                  END
               END                       ; * JMK15
            END
            FOR I = 1 TO ITEM.COUNT
               VAL=DSPECS<5,I>
               ATTR=DSPECS<4,I>
               IF ATTR#0 THEN
                  BEGIN CASE
                     CASE DSPECS<3,I>='FB'
                        IF VAL='' THEN
                           ITEM=PRO.REC<ATTR>
                        END ELSE
                           BEGIN CASE    ; * JMK05
                              CASE VAL='L'         ; * JMK05
                                 R.ATTR=DSPECS<13,I>         ; * JMK05
                                 R.LST=TRIM(DSPECS<14,I>)    ; * JMK05
                                 ITEM=''           ; * JMK07
                                 NITMS=DCOUNT(R.LST,' ')     ; * JMK08
                                 FOR ITM=1 TO NITMS          ; * JMK08
                                    R.VAL=FIELD(R.LST,' ',ITM)         ; * JMK08
                                    LOCATE(R.VAL,PRO.REC,R.ATTR;RPOS) THEN       ; * JMK05
                                       IF NITMS=1 THEN       ; * JMK08
                                          ITEM=PRO.REC<ATTR,RPOS>      ; * JMK08
                                       END ELSE    ; * JMK08
                                          ITEM=ITEM+PRO.REC<ATTR,RPOS>           ; * JMK05
                                       END         ; * JMK08
                                    END  ; * JMK05
                                 NEXT ITM          ; * JMK08
                              CASE VAL='S'         ; * JMK06
                                 ITEM=SUM(PRO.REC<ATTR>)     ; * JMK06
                              CASE VAL='E'         ; * JMK08
                                 ITEM=SUM(PRO.REC<ATTR>)     ; * JMK08
                                 R.ATTR=DSPECS<13,I>         ; * JMK08
                                 R.LST=TRIM(DSPECS<14,I>)    ; * JMK08
                                 NITMS=DCOUNT(R.LST,' ')     ; * JMK08
                                 FOR ITM=1 TO NITMS          ; * JMK08
                                    R.VAL=FIELD(R.LST,' ',ITM)         ; * JMK08
                                    LOCATE(R.VAL,PRO.REC,R.ATTR;RPOS) THEN       ; * JMK05
                                       ITEM=ITEM-PRO.REC<ATTR,RPOS>    ; * JMK05
                                    END  ; * JMK05
                                 NEXT ITM          ; * JMK08
                              CASE 1     ; * JMK05
                                 ITEM=PRO.REC<ATTR,VAL>
                                 IF ATTR='8' AND VAL='63' THEN
                                    IF PRO.REC<63>+0#0 THEN
                                       ITEM=PRO.REC<8>-PRO.REC<63>
                                    END ELSE
                                       ITEM=0
                                    END
                                 END
                           END CASE      ; * JMK05
                        END
                        IF CLIENT.REC<13>#'Y' THEN
                           IF ATTR='5' OR ATTR='31' OR ATTR='32' OR ATTR='33' THEN
                              ITEM=''
                           END
                        END
                        IF COMM.ACCESS='N' THEN    ; * JMK04
                           BEGIN CASE    ; * JMK04
                              CASE ATTR >= 42 AND ATTR <= 44           ; * JMK04
                                 ITEM = 'NA'       ; * JMK04
                              CASE ATTR >= 10 AND ATTR <= 12           ; * JMK04
                                 ITEM = 'NA'       ; * JMK04
                              CASE ATTR >= 34 AND ATTR <= 36           ; * JMK04
                                 ITEM = 'NA'
                           END CASE      ; * JMK04
                        END              ; * JMK04
                     CASE DSPECS<3,I>='EDI'
                        IF NOT(NO.EDI) THEN
                           IF VAL='' THEN
                              ITEM=EDI.REC<ATTR>
                           END ELSE
                              BEGIN CASE           ; * JMK05
                                 CASE VAL='L'      ; * JMK05
                                    R.ATTR=DSPECS<13,I>      ; * JMK05
                                    R.LST=TRIM(DSPECS<14,I>)           ; * JMK05
                                    ITEM=''        ; * JMK07
                                    NITMS=DCOUNT(R.LST,' ')  ; * JMK08
                                    FOR ITM=1 TO NITMS       ; * JMK08
                                       R.VAL=FIELD(R.LST,' ',ITM)      ; * JMK08
                                       LOCATE(R.VAL,EDI.REC,R.ATTR;RPOS) THEN    ; * JMK05
                                          IF NITMS=1 THEN    ; * JMK08
                                             ITEM=EDI.REC<ATTR,RPOS>   ; * JMK08
                                          END ELSE           ; * JMK08
                                             ITEM=ITEM+EDI.REC<ATTR,RPOS>        ; * JMK05
                                          END      ; * JMK08
                                       END         ; * JMK05
                                    NEXT ITM       ; * JMK08
                                 CASE VAL='S'      ; * JMK06
                                    ITEM=SUM(EDI.REC<ATTR>)  ; * JMK06
                                 CASE VAL='E'      ; * JMK08
                                    ITEM=SUM(EDI.REC<ATTR>)  ; * JMK08
                                    R.ATTR=DSPECS<13,I>      ; * JMK08
                                    R.LST=TRIM(DSPECS<14,I>)           ; * JMK08
                                    NITMS=DCOUNT(R.LST,' ')  ; * JMK08
                                    FOR ITM=1 TO NITMS       ; * JMK08
                                       R.VAL=FIELD(R.LST,' ',ITM)      ; * JMK08
                                       LOCATE(R.VAL,EDI.REC,R.ATTR;RPOS) THEN    ; * JMK05
                                          ITEM=ITEM-EDI.REC<ATTR,RPOS>           ; * JMK05
                                       END         ; * JMK05
                                    NEXT ITM       ; * JMK08
                                    ITEM=SUM.CHG-ITEM
                                 CASE 1  ; * JMK05
                                    ITEM=EDI.REC<ATTR,VAL>
*DF                                 IF ATTR='64' OR ATTR='65' THEN
*DF                                    ITEM=EDI.REC<ATTR,1,VAL>
*DF                                 END
                              END CASE   ; * JMK05
                           END
                        END ELSE
                           ITEM=''
                        END
                     CASE DSPECS<3,I>='TR'
                        IF VAL='' THEN
                           ITEM=TR.REC<ATTR>
                        END ELSE
                           BEGIN CASE    ; * JMK05
                              CASE VAL='L'         ; * JMK05
                                 R.ATTR=DSPECS<13,I>         ; * JMK05
                                 R.LST=TRIM(DSPECS<14,I>)    ; * JMK05
                                 ITEM=''           ; * JMK07
                                 NITMS=DCOUNT(R.LST,' ')     ; * JMK08
                                 FOR ITM=1 TO NITMS          ; * JMK08
                                    R.VAL=FIELD(R.LST,' ',ITM)         ; * JMK08
                                    LOCATE(R.VAL,TR.REC,R.ATTR;RPOS) THEN        ; * JMK05
                                       IF NITMS=1 THEN       ; * JMK08
                                          ITEM=TR.REC<ATTR,RPOS>       ; * JMK08
                                       END ELSE    ; * JMK08
                                          ITEM=ITEM+TR.REC<ATTR,RPOS>  ; * JMK05
                                       END         ; * JMK08
                                    END  ; * JMK05
                                 NEXT ITM          ; * JMK08
                              CASE VAL='S'         ; * JMK06
                                 ITEM=SUM(TR.REC<ATTR>)      ; * JMK06
                              CASE VAL='E'         ; * JMK08
                                 SUM.CHG=SUM(TR.REC<ATTR>)   ; * JMK08
                                 R.ATTR=DSPECS<13,I>         ; * JMK08
                                 R.LST=TRIM(DSPECS<14,I>)    ; * JMK08
                                 ITEM=''           ; * JMK07
                                 NITMS=DCOUNT(R.LST,' ')     ; * JMK08
                                 FOR ITM=1 TO NITMS          ; * JMK08
                                    R.VAL=FIELD(R.LST,' ',ITM)         ; * JMK08
                                    LOCATE(R.VAL,TR.REC,R.ATTR;RPOS) THEN        ; * JMK05
                                       ITEM=ITEM+TR.REC<ATTR,RPOS>     ; * JMK05
                                    END  ; * JMK05
                                 NEXT ITM          ; * JMK08
                                 ITEM=SUM.CHG-ITEM
                              CASE 1     ; * JMK05
                                 ITEM=TR.REC<ATTR,VAL>
                           END CASE      ; * JMK05
                        END
                     CASE DSPECS<3,I>='VC'
                        IF VAL='' THEN
                           ITEM=VC.REC<ATTR>
                           IF USER = 'OWEN---' THEN
                              IF INDEX(OCONV(VC.REC<1>,'MCU'),'CARDINAL',1) ELSE GO OWEN.REPEAT
                           END
                        END ELSE
                           BEGIN CASE    ; * JMK05
                              CASE VAL='L'         ; * JMK05
                                 R.ATTR=DSPECS<13,I>         ; * JMK05
                                 R.LST=TRIM(DSPECS<14,I>)    ; * JMK05
                                 ITEM=''           ; * JMK07
                                 NITMS=DCOUNT(R.LST,' ')     ; * JMK08
                                 FOR ITM=1 TO NITMS          ; * JMK08
                                    R.VAL=FIELD(R.LST,' ',ITM)         ; * JMK08
                                    LOCATE(R.VAL,VC.REC,R.ATTR;RPOS) THEN        ; * JMK05
                                       IF NITMS=1 THEN       ; * JMK08
                                          ITEM=VC.REC<ATTR,RPOS>       ; * JMK08
                                       END ELSE    ; * JMK08
                                          ITEM=ITEM+VC.REC<ATTR,RPOS>  ; * JMK05
                                       END         ; * JMK08
                                    END  ; * JMK05
                                 NEXT ITM          ; * JMK08
                              CASE VAL='S'         ; * JMK06
                                 ITEM=SUM(VC.REC<ATTR>)      ; * JMK06
                              CASE VAL='E'         ; * JMK08
                                 SUM.CHG=SUM(VC.REC<ATTR>)   ; * JMK08
                                 R.ATTR=DSPECS<13,I>         ; * JMK08
                                 R.LST=TRIM(DSPECS<14,I>)    ; * JMK08
                                 ITEM=''           ; * JMK07
                                 NITMS=DCOUNT(R.LST,' ')     ; * JMK08
                                 FOR ITM=1 TO NITMS          ; * JMK08
                                    R.VAL=FIELD(R.LST,' ',ITM)         ; * JMK08
                                    LOCATE(R.VAL,VC.REC,R.ATTR;RPOS) THEN        ; * JMK05
                                       ITEM=ITEM+VC.REC<ATTR,RPOS>     ; * JMK05
                                    END  ; * JMK05
                                 NEXT ITM          ; * JMK08
                                 ITEM=SUM.CHG-ITEM
                              CASE 1     ; * JMK05
                                 ITEM=VC.REC<ATTR,VAL>
                           END CASE      ; * JMK05
                        END
                  END CASE
               END ELSE
                  ITEM=PRO.ID
               END
               CONVERSION=DSPECS<6,I>
               IF CLIENT.REC<191>#'' THEN          ; * JMK12
                  IF USRFLD<1>=I THEN    ; * JMK12
                     IF CLIENT.REC<193,1>='D' THEN CONVERSION='D2/'    ; * JMK12
                     IF CLIENT.REC<193,1>='C' THEN CONVERSION='MR2'    ; * JMK12
                  END                    ; * JMK12
                  IF USRFLD<2>=I THEN    ; * JMK12
                     IF CLIENT.REC<193,2>='D' THEN CONVERSION='D2/'    ; * JMK12
                     IF CLIENT.REC<193,2>='C' THEN CONVERSION='MR2'    ; * JMK12
                  END                    ; * JMK12
                  IF USRFLD<3>=I THEN    ; * JMK12
                     IF CLIENT.REC<193,3>='D' THEN CONVERSION='D2/'    ; * JMK12
                     IF CLIENT.REC<193,3>='C' THEN CONVERSION='MR2'    ; * JMK12
                  END                    ; * JMK12
                  IF USRFLD<4>=I THEN    ; * JMK12
                     IF CLIENT.REC<193,4>='D' THEN CONVERSION='D2/'    ; * JMK12
                     IF CLIENT.REC<193,4>='C' THEN CONVERSION='MR2'    ; * JMK12
                  END                    ; * JMK12
                  IF USRFLD<5>=I THEN    ; * JMK12
                     IF CLIENT.REC<193,5>='D' THEN CONVERSION='D2/'    ; * JMK12
                     IF CLIENT.REC<193,5>='C' THEN CONVERSION='MR2'    ; * JMK12
                  END                    ; * JMK12
                  IF USRFLD<6>=I THEN    ; * JMK12
                     IF CLIENT.REC<193,6>='D' THEN CONVERSION='D2/'    ; * JMK12
                     IF CLIENT.REC<193,6>='C' THEN CONVERSION='MR2'    ; * JMK12
                  END                    ; * JMK12
               END                       ; * JMK12
               IF CONVERSION#'' THEN
*DF                  IF ITEM=PRO.ID AND DSPECS<6,I>='G1*1' THEN
*DF                    ITEM='" ':OCONV(ITEM,CONVERSION):'"'
*DF                  END ELSE
                  BEGIN CASE             ; * JMK14
                     CASE CONVERSION='CSCAC'       ; * JMK14
                        CSCAC.ID=CLIENT.ID:'*':CARRIER.ID    ; * JMK14
                        READ CSCAC.REC FROM F.CSCAC,CSCAC.ID ELSE CSCAC.REC=''   ; * JMK14
                        ITEM=CSCAC.REC<1>          ; * JMK14
                     CASE CONVERSION='ISLS'        ; * JMK55
                     CASE 1
                        ITEM=OCONV(ITEM,CONVERSION)
                  END CASE               ; * JMK14
*DF                  END
               END

               IF DSPECS<7,I>#'' THEN
                  T.FILE=DSPECS<7,I>
                  T.FILE.ITEM=''
                  BEGIN CASE
                     CASE T.FILE='CS'
                        ZIP.VAR=ITEM
                        BEGIN CASE
                           CASE ZIP.VAR MATCHES '5N'
                           CASE ZIP.VAR MATCHES '1A1N1A1N1A1N'
                           CASE ZIP.VAR MATCHES '1N1A1N1A1N1A'
                           CASE 1 ; ZIP.VAR=''
                        END CASE
                        IF ZIP.VAR='' THEN
                           T.FILE.ITEM=''
                        END ELSE
                           CALL FB.READ.ZIP(ZIP.VAR,CITY,STATE)
                           T.FILE.ITEM=CITY:", ":STATE
                        END
                     CASE T.FILE='CA'
                        READ T.FILE.ITEM FROM F.CARRIERS,ITEM ELSE T.FILE.ITEM=''
                     CASE T.FILE='CL'
                        READ T.FILE.ITEM FROM F.CLIENTS,ITEM ELSE T.FILE.ITEM=''
                     CASE T.FILE='DV'
                        IF DIVISION='Y' THEN
                           READ T.FILE.ITEM FROM F.DIVISION,ITEM ELSE T.FILE.ITEM=''
                        END ELSE
                           T.FILE.ITEM=''
                        END
                     CASE T.FILE='DVZ'
                        IF DIVISION='Y' THEN
                           READ T.FILE.ITEM FROM F.DIVISION,ITEM ELSE T.FILE.ITEM=''
                           ITEM=T.FILE.ITEM<1>
                           READ T.FILE.ITEM FROM F.ZIPS, ITEM ELSE T.FILE.ITEM=''
                        END ELSE
                           T.FILE.ITEM=''
                        END
                     CASE T.FILE='LI.CODES'
                        IF ITEM#'' THEN
                           LOCATE ITEM IN LI.CODES<1> SETTING POS THEN
                              T.FILE.ITEM=LI.CODES<2,POS>
                           END ELSE
                              T.FILE.ITEM='** Unknown **'
                           END
                        END ELSE
                           T.FILE.ITEM=''
                        END
                     CASE T.FILE='SERV.LEV'
                        IF ITEM#'' THEN
                           LOCATE ITEM IN SERV.LEV<1> SETTING POS THEN
                              T.FILE.ITEM=SERV.LEV<2,POS>
                           END ELSE
                              T.FILE.ITEM='** Unknown **'
                           END
                        END ELSE
                           T.FILE.ITEM=''
                        END
                     CASE T.FILE='AFS.SERV.LEV'
                        IF ITEM#'' THEN
                           LOCATE ITEM IN SERV.LEV<1> SETTING POS THEN
                              T.ITEM=SERV.LEV<3,POS>
                              LOCATE T.ITEM IN AFS.SERV.LEV<1> SETTING POS THEN
                                 T.FILE.ITEM=AFS.SERV.LEV<2,POS>
                              END ELSE
                                 T.FILE.ITEM=T.ITEM:' is not in BASE'
                              END
                           END ELSE
                              T.FILE.ITEM='** Unknown **'
                           END
                        END ELSE
                           T.FILE.ITEM=''
                        END

*                     CASE 1
*                        OPEN '',T.FILE TO FILE.NAME THEN
*                           READ T.FILE.ITEM FROM FILE.NAME,ITEM ELSE T.FILE.ITEM=''
*                        END ELSE
*                           T.FILE.ITEM=''
*                        END
                  END CASE
                  T.VAL=DSPECS<9,I>
                  T.ATTR=DSPECS<8,I>
                  IF T.ATTR#0 THEN
                     IF T.VAL#'' THEN
                        ITEM=T.FILE.ITEM<T.ATTR,T.VAL>
                     END ELSE
                        ITEM=T.FILE.ITEM<T.ATTR>
*                       IF USER='owen' THEN CALL ELINE('Owen its at the CA thing')
                        IF ITEM='' AND T.ATTR = 12 AND T.FILE='CA' THEN          ; * Don't Allow Blank SCAC
                           ITEM=T.FILE.ITEM<1>[1,5]
                        END
                     END
                  END
               END

               IF DSPECS<10,I> THEN
                  IF USER='david' AND NOT(NUM(ITEM)) THEN
                     CALL ELINE('PRESS BREAK')
                  END
                  IF NOT(NUM(ITEM)) THEN
* IF OCONV(USER,'MCU')='OWEN' THEN CALL ELINE('OWEN ... PRESS BREAK')
                     NULL
                  END ELSE
                     SUBTOTAL<1,I> += ITEM
                     TOTAL<1,I> += ITEM
                  END
               END
               IF ATTR = SUB.ATTR THEN
                  SUBTOTAL<1,I> = 'SUBT ': SUBDATA
                  TOTAL<1,I> = 'TOTAL '
               END

               ITEM=CHANGE(ITEM,@VM,' ')
               ITEM=TRIM(ITEM)
               ITEM=CHANGE(ITEM,'"','')  ; * JMK10
*              IF ITEM='' THEN ITEM=' '
*              IF ITEM='' THEN
*                 DARRAY<COUNTER+3>=DARRAY<COUNTER+3>:@VM
*              END ELSE
*                 DARRAY<COUNTER+3,-1>=ITEM
*              END

*              IF (WHERE.FROM='FROM FB.3.1.NEW' AND USING.NEW.MACRO) OR CLIENT='10356' THEN ; * JMK18
               CHECK.CHAR=0              ; * JMK18
               IF WHERE.FROM='FROM FB.3.1.NEW' AND USING.NEW.MACRO THEN CHECK.CHAR=1       ; * JMK18
               IF WHERE.FROM='FROM FB.2.3.NW' AND USING.NEW.MACRO THEN CHECK.CHAR=1        ; * JMK18
               IF CLIENT='10356' THEN CHECK.CHAR=1           ; * JMK18
               IF CHECK.CHAR THEN        ; * JMK18
                  ADD.CHAR=0
                  BEGIN CASE
                     CASE (DSPECS<3,I>='FB') AND (ATTR=0) AND (CONVERSION='G1*1')          ; * Pro #

                        IF USER='OWEN' THEN
                           CALL ELINE('PRESS BREAK.... AT ADD.CHAR LOGIC')
                        END

                        ADD.CHAR=1
                     CASE (DSPECS<3,I>='FB') AND (ATTR=5) AND (CONVERSION='')    ; * Expense Code
                        ADD.CHAR=1
                     CASE (DSPECS<3,I>='FB') AND (ATTR=16) AND (CONVERSION='')   ; * BOL
                        ADD.CHAR=1
                  END CASE
*                 IF ADD.CHAR THEN ITEM='?':ITEM                ; * JMK13
                  IF CLIENT = '01244' OR CLIENT = '10272' THEN         ; * KWM01
                     IF ADD.CHAR THEN ITEM='?':ITEM          ; * KWM01
                  END ELSE               ; * KWM01
                     IF ADD.CHAR THEN ITEM='=':QUOTE(ITEM)   ; * JMK13  KWM01
                  END                    ; *KWM01
               END
               IF CLIENT.REC<191>#'' THEN          ; * JMK13
                  IF USRFLD<1>=I THEN    ; * JMK13
                     IF ITEM#'' THEN     ; * JMK13
                        ITEM='=':QUOTE(ITEM)       ; * JMK13
                     END                 ; * JMK13
                  END                    ; * JMK13
                  IF USRFLD<2>=I THEN    ; * JMK13
                     IF ITEM#'' THEN     ; * JMK13
                        ITEM='=':QUOTE(ITEM)       ; * JMK13
                     END                 ; * JMK13
                  END                    ; * JMK13
                  IF USRFLD<3>=I THEN    ; * JMK13
                     IF ITEM#'' THEN     ; * JMK13
                        ITEM='=':QUOTE(ITEM)       ; * JMK13
                     END                 ; * JMK13
                  END                    ; * JMK13
                  IF USRFLD<4>=I THEN    ; * JMK13
                     IF ITEM#'' THEN     ; * JMK13
                        ITEM='=':QUOTE(ITEM)       ; * JMK13
                     END                 ; * JMK13
                  END                    ; * JMK13
                  IF USRFLD<5>=I THEN    ; * JMK13
                     IF ITEM#'' THEN     ; * JMK13
                        ITEM='=':QUOTE(ITEM)       ; * JMK13
                     END                 ; * JMK13
                  END                    ; * JMK13
                  IF USRFLD<6>=I THEN    ; * JMK13
                     IF ITEM#'' THEN     ; * JMK13
                        ITEM='=':QUOTE(ITEM)       ; * JMK13
                     END                 ; * JMK13
                  END                    ; * JMK13
               END                       ; * JMK13

               IF I < ITEM.COUNT THEN
                  LINE<1>:=ITEM:@VM
               END ELSE
                  LINE<1>:=ITEM
               END
            NEXT I
            NXT.PROC.DT=DATE()           ; * JMK23
            IF CLIENT.REC<186>#'' AND CLIENT.REC<186>#'N' THEN         ; * JMK23
               NXT.PROC.DT=PRO.REC<38>   ; * JMK23
            END                          ; * JMK23
            CALL NEXT.PROCESS.DATE(NXT.PROC.DT,CLIENT.DOW)   ; * JMK23
            ITEM=OCONV(NXT.PROC.DT,'D2/') ; * JMK23
            LINE<1>:=@VM:ITEM            ; * JMK23
            DARRAY<-1>=LINE
*-------------------------------------------
* KM 3/12/2004 To handle files that get more lines
* than excel can handle by breaking the file into sections
*-------------------------------------------
            LINE.COUNT = LINE.COUNT +1
            IF USER='KMESSENGER' THEN
               CRT@(0,10):'LINES SELECTED:':LINE.COUNT
               CRT@(0,11):'FILE VERSION:':NAME.EXT
            END
            IF LINE.COUNT >= 65000 THEN
               IF NAME.EXT = '' THEN
                  NAME.EXT = 0
               END
               IF USER='KMESSENGER' THEN
                  CALL ELINE('Kevin-About to write file version:':NAME.EXT)
                  CRT@(0,10):'LINES SELECTED:     '
                  CRT@(0,11):'FILE VERSION:     '
               END
               DARRAY.HOLD = DARRAY<1>
               DARRAY.HOLD<-1> = @VM
               DARRAY.HOLD<-1> = DARRAY<3>
               GOSUB CONTINUE.BUILD
               DARRAY = DARRAY.HOLD
               LINE.COUNT = 3
               NAME.EXT = NAME.EXT+1
            END
*-------------------------------------------
            IF INC.BD THEN
               PRO.ID=FIELD(PRO.ID,'*',1):'*':FIELD(PRO.ID,'*',2):'BD*':FIELD(PRO.ID,'*',3)
               READ PRO.REC FROM FB.BILLS,PRO.ID THEN GOTO GET.BILL
            END
         END
OWEN.REPEAT: ***
      REPEAT
      IF SHOULD.SUBTOTAL THEN
         DARRAY<-1> = SUBTOTAL<1>
         DARRAY<-1> = ''
      END
      IF SHOULD.SUBTOTAL THEN
         DARRAY<-1> = TOTAL
      END
      RETURN

*
* Continue to build and save file
*
CONTINUE.BUILD: ***
      DARRAY=CHANGE(DARRAY,@VM,TAB)
      SUMMARY.REC.NAME = 'SUMMARY_OF_CHARGES.'
      EXPENSE.REC.NAME = 'SUMMARY_OF_EXPENSES.'
      DIVISION.REC.NAME = 'SUMMARY_OF_DIVISIONS.'
*     IF CLIENT='ALL' THEN ; * JMK11
      IF (CLIENT='ALL' OR CLIENT='AFS' OR CLIENT='SCT') THEN           ; * JMK11
         RECORD.NAME=CLIENT
         SUMMARY.REC.NAME := CLIENT:'.'
         EXPENSE.REC.NAME := CLIENT:'.'
         DIVISION.REC.NAME := CLIENT:'.'
      END ELSE
         IF SEPARATE.DIVISIONS THEN
            IF DIVISIONAL.ID='ALL' THEN
               RECORD.NAME=CLIENT'R%5'
               RECORD.NAME:='-':DIVS<1,DIV.COUNT>
            END ELSE
               RECORD.NAME=CLIENT'R%5'
               RECORD.NAME:='-':DIVISIONAL.ID
            END
         END ELSE
            RECORD.NAME=CLIENT'R%5'
            SUMMARY.REC.NAME:=CLIENT:'.'
            EXPENSE.REC.NAME:=CLIENT:'.'
            DIVISION.REC.NAME:=CLIENT:'.'
         END
      END
      RECORD.NAME:='-'
      D=BEG.DATE'D2/'
      RECORD.NAME:=D[1,2]:D[4,2]
      D=END.DATE'D2/'
      RECORD.NAME:=D[1,2]:D[4,2]
      SUMMARY.REC.NAME := CH.NUM
      EXPENSE.REC.NAME := CH.NUM
      DIVISION.REC.NAME := CH.NUM
      IF NAME.EXT <> '' THEN
         RECORD.NAME:='-':NAME.EXT
      END
      RECORD.NAME:='.XLS'
      SUMMARY.REC.NAME := '.TXT'
      EXPENSE.REC.NAME := '.TXT'
      DIVISION.REC.NAME := '.TXT'

      IF WHERE.FROM='FROM FB.3.1.NEW' OR WHERE.FROM='FROM FB.2.3.NW' THEN
         IF SEPARATE.DIVISIONS THEN
            IF DIVISIONAL.ID='ALL' THEN
               RECORD.NAME=CLIENT'R%5'
               RECORD.NAME:='_':DIVS<1,DIV.COUNT>
            END ELSE
               RECORD.NAME=CLIENT'R%5'
               RECORD.NAME:='_':DIVISIONAL.ID
            END
         END ELSE
            RECORD.NAME = CLIENT'R%5'
         END
         RECORD.NAME:='-'
         D=BEG.DATE'D2/'
         RECORD.NAME:=D[7,2]:D[1,2]:D[4,2]
         RECORD.NAME:='-'
         D=END.DATE'D2/'
         RECORD.NAME:=D[7,2]:D[1,2]:D[4,2]
         IF WHERE.FROM='FROM FB.3.1.NEW' THEN
            IF DUP.ONLY THEN
               RECORD.NAME:='-DUP.XLS'
            END ELSE
               RECORD.NAME:='-BLS.XLS'
            END
         END ELSE
            RECORD.NAME:='-ACR.XLS'
         END
         WRITE DARRAY ON F.FILE,RECORD.NAME
         IF CLIENT='10272' AND WHERE.FROM='FROM FB.3.1.NEW' THEN
            WRITE DARRAY ON F.FTP.AAR,RECORD.NAME
         END
         IF CLIENT='01244' AND WHERE.FROM='FROM FB.3.1.NEW' THEN
            IF NOT(DUP.ONLY) THEN
               SPECIAL.NAME='MBLS'
               D=END.DATE'D2/'
               SPECIAL.NAME=SPECIAL.NAME:D[1,2]:D[4,2]
               SPECIAL.NAME=SPECIAL.NAME:'.XLS'
               WRITE DARRAY ON F.FTP.MOYNO,SPECIAL.NAME
            END
         END
         VOUT=''
         VOUT<1>=RECORD.NAME
         RETURN
      END

      IF WHERE.FROM='FROM FB.SEND.MISROUTE.EMAILS' THEN      ; * JMK02
         RECORD.NAME = CLIENT'R%5'       ; * JMK02
         RECORD.NAME:='-'                ; * JMK02
         D=BEG.DATE'D2/'                 ; * JMK02
         RECORD.NAME:=D[7,2]:D[1,2]:D[4,2]         ; * JMK02
         RECORD.NAME:='-'                ; * JMK02
         D=END.DATE'D2/'                 ; * JMK02
         RECORD.NAME:=D[7,2]:D[1,2]:D[4,2]         ; * JMK02
         RECORD.NAME:='-MRS.XLS'         ; * JMK02
         WRITE DARRAY ON F.FILE,RECORD.NAME        ; * JMK02
         VOUT=''                         ; * JMK02
         IF DARRAY<4>='' THEN            ; * JMK03
            JMK.MESSAGE<1,-1>='FROM BUILD.DF.ACC, LINES 1029-1039'     ; * JMK03
            EMAIL.OUT=''                 ; * JMK03
            EMAIL.OUT<1>='nmeddaugh@afs.net'   ; * JMK03
            EMAIL.OUT<2,-1>='DFriend@afs.net'
            EMAIL.OUT<5>='Missing attachment records for ':RECORD.NAME           ; * JMK03
            EMAIL.OUT<6>=JMK.MESSAGE     ; * JMK03
            EMAIL.OUT<7>=1               ; * JMK03
            EMAIL.OUT<11>='E:\ARDENT\PUBLIC\EMAILDATA\':RECORD.NAME    ; * JMK03
            CALL SENDMAIL(EMAIL.OUT,RESULT)    ; * JMK03
         END ELSE                        ; * JMK03
            VOUT<1>=RECORD.NAME          ; * JMK02
         END                             ; * JMK03
         RETURN                          ; * JMK02
      END

*IF USER='owen' THEN CALL ELINE('Owen.... going to write')
      IF USER='DAVID' THEN CALL ELINE('David... going to write')
      IF VERSION = 111 THEN              ; * Special for Cognas
         COGNAS.DARRAY=CHANGE(DARRAY,CHAR(9),"|")
         WRITE COGNAS.DARRAY ON F.FILE,RECORD.NAME
      END ELSE
         WRITE DARRAY ON F.FILE,RECORD.NAME ELSE
            CALL ELINE('Unable to write. Close Excel ':RECORD.NAME:'. Then press enter to write')
            WRITE DARRAY ON F.FILE,RECORD.NAME ELSE
               CALL ELINE('Unable to write. Aborting')
               STOP
            END
         END
         IF CLIENT='10272' AND WHERE.FROM='FROM FB.3.1.NEW' THEN
            WRITE DARRAY ON F.FTP.AAR,RECORD.NAME
         END
      END
      VOUT<1>=RECORD.NAME                ; * JMK09
      IF AUTO.EMAIL OR MANUAL.EMAIL THEN
         EMAIL.OUT=''
         IF MANUAL.EMAIL OR (AUTO.EMAIL AND SEPARATE.DIVISIONS) THEN
            EMAIL.OUT<1>=NEW.EMAIL.ADDR
         END ELSE
            EMAIL.OUT<1>=TRIM(CLIENT.REC<125>)     ; * To Address
         END
         IF AUTO.EMAIL THEN
            EMAIL.OUT<2>=TRIM(CLIENT.REC<126>)
            EMAIL.OUT<3>=TRIM(CLIENT.REC<127>)
         END
         EMAIL.OUT<2,-1>='HelpDesk@afs.net'; * JMK21
*        EMAIL.OUT<3,-1>='mkerbow@afs.net' ; * JMK21 ; * JMK22
         EMAIL.OUT<3,-1>='WeeklyClientEmails@afs.net'        ; * JMK22
         IF CLIENT.REC<179>#'' THEN      ; * JMK19
            EMAIL.OUT<1>=TRIM(CLIENT.REC<179>)     ; * JMK19
            IF EMAIL.OUT<1>='' THEN GO EXIT.PROGRAM          ; * JMK19
            EMAIL.OUT<2>=''              ; * JMK19
            EMAIL.OUT<3>=''              ; * JMK19
         END                             ; * JMK19
         EMAIL.OUT<4>='Reports@afs.net'
         EMAIL.OUT<5,1>=DARRAY<1>
         EMAIL.OUT<6>=DARRAY<1>
         EMAIL.OUT<6,2>=' The attached files are a Detail Spreadsheet and'
         EMAIL.OUT<6,3>='a Summary of Charges. If you have any questions,'
         EMAIL.OUT<6,4>=' please feel free to call Myra at 318-798-2111 x1232.'
         EMAIL.OUT<6,6>=' Thank you for your business.'
         EMAIL.OUT<11> = 'E:\ARDENT\PUBLIC\EMAILDATA\'
         EMAIL.OUT<11>:=RECORD.NAME
         IF AUTO.EMAIL THEN
            EMAIL.OUT<11,2> = 'E:\ARDENT\PUBLIC\EMAILDATA\'
            EMAIL.OUT<11,2> := SUMMARY.REC.NAME
            READ EXIST.TEST FROM F.FILE,EXPENSE.REC.NAME THEN
               EMAIL.OUT<11,3> = 'E:\ARDENT\PUBLIC\EMAILDATA\'
               EMAIL.OUT<11,3> := EXPENSE.REC.NAME
            END
            READ EXIST.TEST FROM F.FILE,DIVISION.REC.NAME THEN
               EMAIL.OUT<11,4> = 'E:\ARDENT\PUBLIC\EMAILDATA\'
               EMAIL.OUT<11,4> := DIVISION.REC.NAME
            END
         END
*        VIN = EMAIL.OUT                 ; * JMK09
*        IF EMAIL.OUT<1>#'' THEN CALL SENDMAIL(VIN,VOUT)           ; * JMK09
         EVIN = EMAIL.OUT                ; * JMK09
         IF EMAIL.OUT<1>#'' THEN CALL SENDMAIL(EVIN,EVOUT)         ; * JMK09
      END
      RETURN
