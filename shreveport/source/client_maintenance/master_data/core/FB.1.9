***********************************************************************
* Program name : FB.1.9
* Author       : BRIAN M. QUEEN
* Date written : AUGUST 29, 1992
* Library      : FBBP
$* COPYRIGHT (C) 2016 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED.
*
* This program MODIFY TRANSPORT MODES
*
* Last updated by afs (gbino) at 07:33:13 on 10/09/2017.
*
* Start modification history
* Mod nn  mm/dd/yy, init, req #, description
* 121703 - JMK01 - ADD SALES CODES TO TRANSPORT MODES
* 012104 - JMK02 - ADD SALES CODE DESCRIPTIONS
* 092314 - JMK03 - SysAid#10652 - Data push for Sage ERP
* 100917 - GRB01 - Remove disabled SQL server
* End modification history
*
************************************************************************
* Include the ODBC definitions

**********$INCLUDE UNIVERSE.INCLUDE ODBC.H
*
* Initialize variables
*
$OPTIONS HEADER.EJECT
$OPTIONS EXEC.EQ.PERF
$OPTIONS INFO.ABORT
      form = "T##########"               ; * JMK03
      dash = "----------"                ; * JMK03
      Expect = ""                        ; * JMK03
      ERRMSG=''                          ; * JMK03
      PROMPT''
      ERRORS=''                          ; * JMK03
      CODE.DESC=''                       ; * JMK03
      CODE.STATUS=''                     ; * JMK03
 *****     CALL GET.SERVER.INFO(SVR.VIN,SVR.VOUT)       ; * JMK03
 *****     SVR.NAME=SVR.VOUT<1>               ; * JMK03
      CALL GET.USER(USER)                ; * JMK03
*
* SETUP SQL CONNECTION
*
 *****     GOSUB SETUP.SQL                    ; * JMK03
      CURR.SYS='FLEX'                    ; * JMK03
      CURR.DESC='FLEX Acctg'             ; * JMK03
      PRV.SYS='FLEX'                     ; * JMK03
      PROG.NAME='FB.1.9'
      PROG.DESC='EDIT TRANSPORT MODES'
      PACK.NAME='FREIGHT BILLING'
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
       UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.1.9' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
       CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
*
* Open files
*
      OPEN '','BCUST' TO F.CLIENT ELSE CALL OPEN.ABORT("BCUST",PROG.NAME)
      OPEN '','FB.TRANSPORT' TO F.FILE ELSE
         EXECUTE 'CREATE-FILE FB.TRANSPORT 1 7' PASSLIST CAPTURING OUTPUT
         OPEN '','FB.TRANSPORT' TO F.FILE ELSE CALL OPEN.ABORT("FB.TRANSPORT",PROG.NAME)
      END
      OPEN '','AR.SALES.CODE.1000.1' TO F.CODES ELSE CALL OPEN.ABORT("AR.SALES.CODE.1000.1",PROG.NAME)         ; * JMK01
*
50:   * Select codes and build display array       ; * JMK03
*
      DISP.REC=""
      SELECT F.FILE
      LOOP
         READNEXT ID ELSE ID=""
      UNTIL ID="" DO

         READ TRAN.REC FROM F.FILE,ID ELSE TRAN.REC='~~~ Not on file ~~~'        ; * JMK01
         DESC=TRAN.REC<1>                ; * JMK01
         IF CURR.SYS='FLEX' THEN         ; * JMK03
         LOG.CD=TRAN.REC<2>              ; * JMK01
         READ LOG.REC FROM F.CODES,LOG.CD ELSE LOG.REC=''    ; * JMK02
         LOG.DESC=LOG.REC<10>            ; * JMK02
         OVG.CD=TRAN.REC<3>              ; * JMK01
         READ OVG.REC FROM F.CODES,OVG.CD ELSE OVG.REC=''    ; * JMK02
         OVG.DESC=OVG.REC<10>            ; * JMK02
         MGT.CD=TRAN.REC<4>              ; * JMK01
         READ MGT.REC FROM F.CODES,MGT.CD ELSE MGT.REC=''    ; * JMK02
         MGT.DESC=MGT.REC<10>            ; * JMK02
         END                             ; * JMK03
         IF CURR.SYS='SAGE' THEN         ; * JMK03
            LOG.CD=TRAN.REC<6>           ; * JMK03
            LOG.DESC=''                  ; * JMK03
            IF LOG.CD#'' THEN            ; * JMK03
               CODE.SLS=LOG.CD           ; * JMK03
 ******              GOSUB 9500                ; * JMK03
               LOG.DESC=CODE.DESC        ; * JMK03
            END                          ; * JMK03
            OVG.CD=TRAN.REC<7>           ; * JMK03
            OVG.DESC=''                  ; * JMK03
            IF OVG.CD#'' THEN            ; * JMK03
               CODE.SLS=OVG.CD           ; * JMK03
 *****              GOSUB 9500                ; * JMK03
               OVG.DESC=CODE.DESC        ; * JMK03
            END                          ; * JMK03
            MGT.CD=TRAN.REC<8>           ; * JMK03
            MGT.DESC=''                  ; * JMK03
            IF MGT.CD#'' THEN            ; * JMK03
               CODE.SLS=MGT.CD           ; * JMK03
 ******              GOSUB 9500                ; * JMK03
               MGT.DESC=CODE.DESC        ; * JMK03
            END                          ; * JMK03
         END                             ; * JMK03
         IF DISP.REC="" THEN
            DISP.REC<1>=ID
            DISP.REC<2>=DESC
            DISP.REC<3>=LOG.CD           ; * JMK01
            DISP.REC<4>=OVG.CD           ; * JMK01
            DISP.REC<5>=MGT.CD           ; * JMK01
            DISP.REC<6>=LOG.DESC         ; * JMK02
            DISP.REC<7>=OVG.DESC         ; * JMK02
            DISP.REC<8>=MGT.DESC         ; * JMK02
         END ELSE
            LOCATE(ID,DISP.REC,1;POS;"AR") ELSE
               DISP.REC=INSERT(DISP.REC,1,POS,0,ID)
               DISP.REC=INSERT(DISP.REC,2,POS,0,DESC)
               DISP.REC=INSERT(DISP.REC,3,POS,0,LOG.CD)      ; * JMK01
               DISP.REC=INSERT(DISP.REC,4,POS,0,OVG.CD)      ; * JMK01
               DISP.REC=INSERT(DISP.REC,5,POS,0,MGT.CD)      ; * JMK01
               DISP.REC=INSERT(DISP.REC,6,POS,0,LOG.DESC)    ; * JMK01
               DISP.REC=INSERT(DISP.REC,7,POS,0,OVG.DESC)    ; * JMK01
               DISP.REC=INSERT(DISP.REC,8,POS,0,MGT.DESC)    ; * JMK01
            END
         END
      REPEAT
      DISP.ORG=DISP.REC                  ; * JMK03
*
* First page of codes
*
      PAGE=1
      GOSUB 9000
***************************************************************
100:* Enter selection code
***************************************************************
  HELP="Enter line number. 'B'ack. 'T'op, 'S'ystem, ''=Next page. 'E'nd. 'EX'it."      ; * JMK03
      CALL GEN.IN(0,22,"Enter line number please. ###",'',Q,0,3,'','',1,-3,22,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            PAGE=PAGE+1
            GOSUB 9000
         CASE QI='B'
            PAGE=PAGE-1
            IF PAGE=0 THEN PAGE=1
            GOSUB 9000
         CASE QI='T'
            PAGE=1
            GOSUB 9000
         CASE QI='S'                     ; * JMK03
            BEGIN CASE                   ; * JMK03
               CASE CURR.SYS='FLEX'      ; * JMK03
                  IF PRV.SYS#'FLEX' THEN           ; * JMK03
                     IF DISP.ORG#DISP.REC THEN     ; * JMK03
                        CALL ELINE('You must save or cancel changes.')           ; * JMK03
                        GOTO 100         ; * JMK03
                     END                 ; * JMK03
                  END                    ; * JMK03
                  PRV.SYS=CURR.SYS       ; * JMK03
                  CURR.SYS='SAGE'        ; * JMK03
                  CURR.DESC='SAGE ERP'   ; * JMK03
                  GOTO 50                ; * JMK03
               CASE CURR.SYS='SAGE'      ; * JMK03
                  IF PRV.SYS#'SAGE' THEN           ; * JMK03
                     IF DISP.ORG#DISP.REC THEN     ; * JMK03
                        CALL ELINE('You must save or cancel changes.')           ; * JMK03
                        GOTO 100         ; * JMK03
                     END                 ; * JMK03
                  END                    ; * JMK03
                  PRV.SYS=CURR.SYS       ; * JMK03
                  CURR.SYS='FLEX'        ; * JMK03
                  CURR.DESC='FLEX Acctg'           ; * JMK03
                  GOTO 50                ; * JMK03
            END CASE                     ; * JMK03
            GOSUB 9000                   ; * JMK03
         CASE QI='EX'
            STOP
         CASE NUM(QI)
            SEL=QI
            IF SEL LT START ! SEL GT STOP THEN
               CALL ELINE('Invalid selection.')
               GOTO 100
            END
            GOSUB 8000
         CASE QI='E'
            X=DCOUNT(DISP.REC<1>,CHAR(253))
            FOR I=X TO 1 STEP -1
               IF DISP.REC<1,I>='' THEN
                  DISP.REC=DELETE(DISP.REC,1,I)
                  DISP.REC=DELETE(DISP.REC,2,I)
                  DISP.REC=DELETE(DISP.REC,3,I)    ; * JMK02
                  DISP.REC=DELETE(DISP.REC,4,I)    ; * JMK02
                  DISP.REC=DELETE(DISP.REC,5,I)    ; * JMK02
                  DISP.REC=DELETE(DISP.REC,6,I)    ; * JMK02
                  DISP.REC=DELETE(DISP.REC,7,I)    ; * JMK02
                  DISP.REC=DELETE(DISP.REC,8,I)    ; * JMK02
               END
            NEXT I
*
            Z=0
            LOOP
               Z=Z+1
               CODE=DISP.REC<1,Z>
            UNTIL CODE="" DO
               READ ITEM FROM F.FILE,CODE ELSE ITEM=''
               ITEM<1>=DISP.REC<2,Z>
               IF CURR.SYS='FLEX' THEN   ; * JMK03
               ITEM<2>=DISP.REC<3,Z>
               ITEM<3>=DISP.REC<4,Z>
               ITEM<4>=DISP.REC<5,Z>
               END ELSE                  ; * JMK03
                  ITEM<6>=DISP.REC<3,Z>  ; * JMK03
                  ITEM<7>=DISP.REC<4,Z>  ; * JMK03
                  ITEM<8>=DISP.REC<5,Z>  ; * JMK03
               END                       ; * JMK03
               WRITE ITEM ON F.FILE,CODE
            REPEAT
            STOP
      END CASE
      GOTO 100

***************************************************************
8000:* Edit code
***************************************************************
 ROW=3+REM(SEL,18)
      IF ROW=3 THEN ROW=21
      CODE=DISP.REC<1,SEL>
      DESC=DISP.REC<2,SEL>
      LOG.CD=DISP.REC<3,SEL>             ; * JMK01
      OVG.CD=DISP.REC<4,SEL>             ; * JMK01
      MGT.CD=DISP.REC<5,SEL>             ; * JMK01
      LOG.DESC=DISP.REC<6,SEL>           ; * JMK02
      OVG.DESC=DISP.REC<7,SEL>           ; * JMK02
      MGT.DESC=DISP.REC<8,SEL>           ; * JMK02
8010: HELP="Enter new code. ''=Accept. 'D'=Delete. 'X'=Exit."
      CALL GEN.IN(4,ROW,CODE'R#4','',Q,0,4,'','',2,-4,ROW,0,QI,HELP,0,23)        ; * JMK02
      QI=OCONV(QI,'MCU')
      IF QI='X' THEN
         CRT @(4,ROW):CODE'R#4 ':        ; * JMK02
         RETURN
      END
      IF QI='' THEN
         Q=CODE
      END
      IF QI='D' THEN
         DELETE F.FILE,CODE
         DISP.REC=DELETE(DISP.REC,1,SEL)
         DISP.REC=DELETE(DISP.REC,2,SEL)
         DISP.REC=DELETE(DISP.REC,3,SEL)           ; * JMK01
         DISP.REC=DELETE(DISP.REC,4,SEL)           ; * JMK01
         DISP.REC=DELETE(DISP.REC,5,SEL)           ; * JMK01
         DISP.REC=DELETE(DISP.REC,6,SEL)           ; * JMK02
         DISP.REC=DELETE(DISP.REC,7,SEL)           ; * JMK02
         DISP.REC=DELETE(DISP.REC,8,SEL)           ; * JMK02
         GOSUB 9000
         RETURN
      END
      CODE=Q
      CRT @(4,ROW):CODE'R#4 ':           ; * JMK02
***************************************************************     
8020:*Description Code
***************************************************************
      HELP="Enter new code description. Use ~ for input points. '<'=Back to code. 'X'=Exit."
      CALL GEN.IN(9,ROW,DESC'L#17','',Q,0,17,'','',2,-17,ROW,0,QI,HELP,0,23)     ; * JMK01 ; * JMK02
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='<'                     ; * JMK01
            CRT @(9,ROW):DESC'L#17 '     ; * JMK01 ; * JMK02
            GOTO 8010
         CASE QI='X'                     ; * JMK01
            CRT @(9,ROW):DESC'L#17 '     ; * JMK01 ; * JMK02
            RETURN
         CASE QI=''
            Q=DESC
      END CASE
      DESC=Q
      CRT @(9,ROW):DESC'L#17 ':          ; * JMK01 ; * JMK02
***************************************************************      
8030:*Logistics Sales Code
***************************************************************
      HELP="Enter logistics sales code. '<'=Back. 'L'=List. 'X'=Exit."           ; * JMK02
      CALL GEN.IN(27,ROW,LOG.CD'R#4','',Q,0,4,'','',2,-4,ROW,0,QI,HELP,0,23)     ; * JMK02 ; * JMK03
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            CRT @(27,ROW):LOG.CD'R#4 ':  ; * JMK02 ; * JMK03
            RETURN
         CASE QI='<'
            CRT @(27,ROW):LOG.CD'R#4 ':  ; * JMK02 ;  JMK03
            GOTO 8020
         CASE QI=''
            Q=LOG.CD
         CASE QI='L'                     ; * JMK02
            OLD.ROW=ROW                  ; * JMK02
            EXECUTE "SORT AR.SALES.CODE.1000.1 BY ID ID DESC (IH"      ; * JMK02
            CALL ELINE('')               ; * JMK02
            CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)    ; * JMK02
            GOSUB 9000                   ; * JMK02
            ROW=OLD.ROW                  ; * JMK02
            GOTO 8030                    ; * JMK02
      END CASE
      IF Q#'' THEN                       ; * JMK01
         IF CURR.SYS='FLEX' THEN         ; * JMK03
         READ TEST FROM F.CODES,Q ELSE   ; * JMK01
            CALL ELINE("Sales Code ":Q:" not on file!")      ; * JMK01
            GOTO 8030                    ; * JMK01
         END                             ; * JMK01
         LOG.DESC=TEST<10>               ; * JMK02
         END                             ; * JMK03
         IF CURR.SYS='SAGE' THEN         ; * JMK03
            CODE.SLS=Q                   ; * JMK03
            GOSUB 9500                   ; * JMK03
            IF CODE.DESC="" THEN         ; * JMK03
               CALL ELINE(Q:' is not valid code. Re-enter.')           ; * JMK03
               GOTO 8030                 ; * JMK03
            END                          ; * JMK03
            IF CODE.STATUS=0 THEN        ; * JMK03
               CALL ELINE(Q:' is not active. Re-enter.')     ; * JMK03
               GOTO 8030                 ; * JMK03
            END                          ; * JMK03
            LOG.DESC=CODE.DESC           ; * JMK03
         END                             ; * JMK03
      END                                ; * JMK01
      LOG.CD=Q
      CRT @(27,ROW):LOG.CD'R#4 ':        ; * JMK02 ; * JMK03
      CRT @(32,ROW):LOG.DESC'L#12 ':     ; * JMK02 ; * JMK03
***************************************************************      
8040:* Overcharge Sales Code
***************************************************************
      HELP="Enter overcharge sales code. '<'=Back. 'L'=List. 'X'=Exit."          ; * JMK02
      CALL GEN.IN(45,ROW,OVG.CD'R#4','',Q,0,4,'','',2,-4,ROW,0,QI,HELP,0,23)     ; * JMK02 ; * JMK03
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            CRT @(45,ROW):OVG.CD'R#4 ':  ; * JMK02 ; * JMK03
            RETURN
         CASE QI='<'
            CRT @(45,ROW):OVG.CD'R#4 ':  ; * JMK02 ; * JMK03
            GOTO 8030
         CASE QI=''
            Q=OVG.CD
         CASE QI='L'                     ; * JMK02
            OLD.ROW=ROW                  ; * JMK02
            EXECUTE "SORT AR.SALES.CODE.1000.1 BY ID ID DESC (IH"      ; * JMK02
            CALL ELINE('')               ; * JMK02
            CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)    ; * JMK02
            GOSUB 9000                   ; * JMK02
            ROW=OLD.ROW                  ; * JMK02
            GOTO 8040                    ; * JMK02
      END CASE
      IF Q#'' THEN                       ; * JMK01
         IF CURR.SYS='FLEX' THEN         ; * JMK03
         READ TEST FROM F.CODES,Q ELSE   ; * JMK01
            CALL ELINE("Sales Code ":Q:" not on file!")      ; * JMK01
            GOTO 8040                    ; * JMK01
         END                             ; * JMK01
         OVG.DESC=TEST<10>               ; * JMK02
         END                             ; * JMK03
         IF CURR.SYS='SAGE' THEN         ; * JMK03
            CODE.SLS=Q                   ; * JMK03
            GOSUB 9500                   ; * JMK03
            IF CODE.DESC="" THEN         ; * JMK03
               CALL ELINE(Q:' is not valid code. Re-enter.')           ; * JMK03
               GOTO 8040                 ; * JMK03
            END                          ; * JMK03
            IF CODE.STATUS=0 THEN        ; * JMK03
               CALL ELINE(Q:' is not active. Re-enter.')     ; * JMK03
               GOTO 8040                 ; * JMK03
            END                          ; * JMK03
            OVG.DESC=CODE.DESC           ; * JMK03
         END                             ; * JMK03
      END                                ; * JMK01
      OVG.CD=Q
      CRT @(45,ROW):OVG.CD'R#4 ':        ; * JMK02 ; * JMK03
      CRT @(50,ROW):OVG.DESC'L#12 ':     ; * JMK02 ; * JMK03
***************************************************************      
8050:* Management Sales Code
***************************************************************
      HELP="Enter management sales code. '<'=Back. 'L'=List. 'X'=Exit."          ; * JMK02
      CALL GEN.IN(63,ROW,MGT.CD'R#4','',Q,0,4,'','',2,-4,ROW,0,QI,HELP,0,23)     ; * JMK02 ; * JMK03
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            CRT @(63,ROW):MGT.CD'R#4 ':  ; * JMK02 ; * JMK03
            RETURN
         CASE QI='<'
            CRT @(63,ROW):MGT.CD'R#4 ':  ; * JMK02 ; * JMK03
            GOTO 8040
         CASE QI=''
            Q=MGT.CD
         CASE QI='L'                     ; * JMK02
            OLD.ROW=ROW                  ; * JMK02
            EXECUTE "SORT AR.SALES.CODE.1000.1 BY ID ID DESC (IH"      ; * JMK02
            CALL ELINE('')               ; * JMK02
            CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)    ; * JMK02
            GOSUB 9000                   ; * JMK02
            ROW=OLD.ROW                  ; * JMK02
            GOTO 8050                    ; * JMK02
      END CASE
      IF Q#'' THEN                       ; * JMK01
         IF CURR.SYS='FLEX' THEN         ; * JMK03
         READ TEST FROM F.CODES,Q ELSE   ; * JMK01
            CALL ELINE("Sales Code ":Q:" not on file!")      ; * JMK01
            GOTO 8050                    ; * JMK01
         END                             ; * JMK01
         MGT.DESC=TEST<10>               ; * JMK02
         END                             ; * JMK03
         IF CURR.SYS='SAGE' THEN         ; * JMK03
            CODE.SLS=Q                   ; * JMK03
  ******          GOSUB 9500                   ; * JMK03
            IF CODE.DESC="" THEN         ; * JMK03
               CALL ELINE(Q:' is not valid code. Re-enter.')           ; * JMK03
               GOTO 8050                 ; * JMK03
            END                          ; * JMK03
            IF CODE.STATUS=0 THEN        ; * JMK03
               CALL ELINE(Q:' is not active. Re-enter.')     ; * JMK03
               GOTO 8050                 ; * JMK03
            END                          ; * JMK03
            MGT.DESC=CODE.DESC           ; * JMK03
         END                             ; * JMK03
      END                                ; * JMK01
      MGT.CD=Q

      CRT @(63,ROW):MGT.CD'R#4 ':        ; * JMK02 ; * JMK03
      CRT @(68,ROW):MGT.DESC'L#12':      ; * JMK02 ; * JMK03
*
      DISP.REC<1,SEL>=CODE
      DISP.REC<2,SEL>=DESC
      DISP.REC<3,SEL>=LOG.CD             ; * JMK01
      DISP.REC<4,SEL>=OVG.CD             ; * JMK01
      DISP.REC<5,SEL>=MGT.CD             ; * JMK01
      DISP.REC<6,SEL>=LOG.DESC           ; * JMK02
      DISP.REC<7,SEL>=OVG.DESC           ; * JMK02
      DISP.REC<8,SEL>=MGT.DESC           ; * JMK02
      RETURN

***************************************************************
9000:* * Display array
***************************************************************
      CRT @(0,2):@(-4):@(27,2):CURR.SYS:' - ':CURR.DESC      ; * JMK03
      CRT @(0,3):@(-3):"#""R#3 ":        ; * JMK01 ; * JMK02
      CRT @(4,3):"Code""L#4 ":           ; * JMK01 ; * JMK02
      CRT @(9,3):"Description""L#17 ":   ; * JMK01 ; * JMK02
      CRT @(27,3):"Log""L#4 ":           ; * JMK01 ; * JMK02 ; * JMK03
      CRT @(32,3):"Description""L#12 ":  ; * JMK02 ; * JMK03
      CRT @(45,3):"Ovr""L#4 ":           ; * JMK01 ; * JMK02 ; * JMK03
      CRT @(50,3):"Description""L#12 ":  ; * JMK02 ; * JMK03
      CRT @(63,3):"Mgt""L#4 ":           ; * JMK01 ; * JMK02 ; * JMK03
      CRT @(68,3):"Description""L#12":   ; * JMK02 ; * JMK03
      START=(PAGE*18)-17
      IF START GT 108 THEN
         START=1
         PAGE=1
      END
      STOP=START+17
      FOR I=START TO STOP STEP 1
         ROW=3+REM(I,18)
         IF ROW=3 THEN ROW=21
         CODE=DISP.REC<1,I>
         DESC=DISP.REC<2,I>
         LOG.CD=DISP.REC<3,I>            ; * JMK01
         OVG.CD=DISP.REC<4,I>            ; * JMK01
         MGT.CD=DISP.REC<5,I>            ; * JMK01
         LOG.DESC=DISP.REC<6,I>          ; * JMK02
         OVG.DESC=DISP.REC<7,I>          ; * JMK02
         MGT.DESC=DISP.REC<8,I>          ; * JMK02
         CRT @(0,ROW):I"R#3 ":           ; * JMK01 ; * JMK02
         CRT @(4,ROW):CODE"R#4 ":        ; * JMK01 ; * JMK02
         CRT @(9,ROW):DESC"L#17 ":       ; * JMK01 ; * JMK02
         CRT @(27,ROW):LOG.CD"R#4 ":     ; * JMK01 ; * JMK02 ; * JMK03
         CRT @(32,ROW):LOG.DESC"L#12 ":  ; * JMK02 ; * JMK03
         CRT @(45,ROW):OVG.CD"R#4 ":     ; * JMK01 ; * JMK02 ; * JMK03
         CRT @(50,ROW):OVG.DESC"L#12 ":  ; * JMK02 ; * JMK03
         CRT @(63,ROW):MGT.CD"R#4 ":     ; * JMK01 ; * JMK02 ; * JMK03
         CRT @(68,ROW):MGT.DESC"L#12":   ; * JMK02 ; * JMK03
      NEXT I
      RETURN

***************************************************************
THE.END:***
***************************************************************
*     End of program
*
* Now just clean up the environment and leave
*
 *****     Fn = "SQLFreeStmt"
 *****     STATUS = SQLFreeStmt(STMTENV, SQL.DROP)
*****      ENVSRC='CLIENT'
*****      GOSUB CKSTMTENV

*****      Fn = "SQLDisconnect"
*****      STATUS = SQLDisconnect(CONENV)
*****      GOSUB CKCONENV

*****      Fn = "SQLFreeConnect"
*****      STATUS = SQLFreeConnect(CONENV)
 *****     GOSUB CKCONENV

*****      Fn = "SQLFreeEnv"
*****      STATUS = SQLFreeEnv(DBCENV)
*****      IF STATUS <> SQL.SUCCESS THEN
 *****        ERRORS<1,-1>="Failed to release ODBC environment"
      
   ****************************************************************
SETUP.SQL:*
***************************************************************
* Create an ODBC environment & a connection environment. Use the
* SSQLSetConnectOption to specify the Operating system user ID and
* password.

 *****     STATUS = SQLAllocEnv(DBCENV)
 *****     IF STATUS <> SQL.SUCCESS THEN
 *****        ERRORS<1,-1>="Failed to allocate an ODBC environment"
 *****        RETURN TO THE.END
 *****     END

 *****     STATUS = SQLAllocConnect(DBCENV,CONENV)
 *****     IF STATUS <> SQL.SUCCESS THEN
 *****        ERRORS<1,-1>="Failed to allocate a CONNECT environment"
 *****        RETURN TO THE.END
  *****    END

*
* Gather the data source name, userid and password for the server O/S and
* information for the DBMS at the server. The DBMS info is often also
* a user name and password, but not in all cases.
*
*****      BEGIN CASE
 *****        CASE SVR.NAME='AFS'
 *****           SOURCE='SAGETST'
 *****           UID="sa"
 *****           PWD="wd2X6cm7"
 *****        CASE 1
 *****           SOURCE='SAGETST'
 *****           UID="sa"
 *****           PWD="wd2X6cm7"
 *****     END CASE
*
* Establish a session to the specified data source
*
*     PRINT "Connecting to data source: ": SOURCE
 *****     Fn = "SQLConnect"
 *****     STATUS = SQLConnect(CONENV,SOURCE,UID,PWD)
 *****     GOSUB CKCONENV
*
* Now allocate an SQL statement environment
* to be used for executing SQL statements
*
 *****     Fn = "SQLAllocStmt"
 *****     STATUS = SQLAllocStmt(CONENV,STMTENV)
 *****     GOSUB CKCONENV

      RETURN

**********************************************************************
9500: *Function to select the data from the remote data source
**********************************************************************
* Select statements to retrieve data from sqlcostaff table
 *****    SEL01 = "SELECT TEXTDESC, SWACTV FROM ARITH WHERE IDITEM = '":CODE.SLS:"'"
* Now select the data back & list it on the terminal
 *****     Fn = "SQLExecDirect"
 *****     STATUS = SQLExecDirect(STMTENV,SEL01)
*****     GOSUB CKSTMTENV
 *****     Fn = "SQLBindCol"
 *****     STATUS = SQLBindCol(STMTENV, 1, SQL.B.CHAR, TEXTDESC)
 *****     GOSUB CKSTMTENV

  *****    STATUS = SQLBindCol(STMTENV, 2, SQL.B.CHAR, SWACTV)
  *****    GOSUB CKSTMTENV

   *****   STATUS = 0
 *****     LOOP
 *****        Fn = "SQLFetch"
 *****     WHILE STATUS <> SQL.NO.DATA.FOUND DO
  *****       STATUS = SQLFetch(STMTENV)
 *****        GOSUB CKSTMTENV
 *****        IF STATUS <> SQL.NO.DATA.FOUND  THEN
 *****           CODE.DESC=TRIM(TEXTDESC)
 *****           CODE.STATUS=SWACTV
 *****        END
  *****    REPEAT
 *****     STATUS = SQLFreeStmt(STMTENV, SQL.UNBIND)
  *****    GOSUB CKSTMTENV
      RETURN
**********************************************************************
CKCONENV:
**********************************************************************
  
      RETURN
**********************************************************************
CKSTMTENV:
**********************************************************************
   
399:  *
      RETURN
    END
