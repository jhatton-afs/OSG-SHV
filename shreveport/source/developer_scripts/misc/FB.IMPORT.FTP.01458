*************************************************************************
* Program : FB.IMPORT.FTP.01458
*           Import Bill of Lading Code data from HORIZON Products
* Author  :
* Date    : June 2006
*
* Copyright (c) 2006 by AFS Logistics, LLC. - All Rights Reserved
*************************************************************************
* 080706 - JMK01 - ADD LOGIC FOR VARIOUS FILENAMES
* 122607 - JMK02 - T071329 - Item distribution of Freight Bills
* 081808 - JMK03 - CHANGE THE AUTOMATIC LOGIN NAMES

$INCLUDE PROG.ADMIN INC_OPTIONS

* Initialize general variables
      PROMPT''
      CALL GET.USER(USER.NAME)
      CALL CHANNEL(CH.NUM)
      CMD.LINE=@SENTENCE                 ; * JMK04
      NWORDS=DCOUNT(CMD.LINE,' ')        ; * JMK04
      IF NWORDS>1 THEN                   ; * JMK04
         CLIENT.ID=FIELD(CMD.LINE,' ',2)           ; * JMK04
         AUTO=1                          ; * JMK04
      END ELSE                           ; * JMK04
         CLIENT.ID=''                    ; * JMK04
         AUTO=0                          ; * JMK04
      END                                ; * JMK04
      PROG.NAME='FB.IMPORT.FTP.01458'
      PROG.DESC='Import Horizon Industries, Inc. PO/BOL Data'
      PACK.NAME='Freight Payment'
      MASK.CHAR='-'
       UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.IMPORT.FTP.01458' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
       CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
      TAB=CHAR(9)
      ESC=CHAR(27)
      EMAIL.SENT=0
      TODAY=DATE()
      OTODAY=OCONV(TODAY,'D4/')

* Restrict program usage
      VALID.USER=1
      BEGIN CASE
         CASE USER.NAME='OLEDBAFS'
         CASE USER.NAME[1,3]='SV.'       ; * JMK03
         CASE USER.NAME='OWEN'
         CASE USER.NAME='DAVID'
         CASE USER.NAME='MKERBOW'
         CASE 1
            VALID.USER=0
      END CASE

*     IF USER.NAME='OLEDBAFS' THEN       ; * JMK03
*        CMD=1                           ; * JMK03
*     END ELSE                           ; * JMK03
*        CMD=0                           ; * JMK03
*     END                                ; * JMK03
      BEGIN CASE                         ; * JMK03
         CASE AUTO=1 ; CMD=1             ; * JMK04
         CASE USER.NAME='OLEDBAFS' ; CMD=1         ; * JMK03
         CASE USER.NAME[1,3]='SV.' ; CMD=1         ; * JMK03
         CASE 1 ; CMD=0                  ; * JMK03
      END CASE                           ; * JMK03

      IF NOT(VALID.USER) THEN
         IF CMD THEN
            ERROR.ARRAY<-1>='**  This is a restricted access application  **'
         END ELSE
            TEMP='**  This is a restricted access application  **'
            CALL CENTER(TEMP,80)
            CRT @(0,12):TEMP
         END
         GOTO THE.END
      END


* Write screen header
      IF CMD ELSE
         CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
         CRT @(0,2):STR('=',79)
      END

* Open client file and read record for client
      CLIENT.NUMBER='01458'
      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         IF CMD THEN
            ERROR.ARRAY<-1>='Cannot Open CLIENTS File!'
            GOTO THE.END
         END ELSE
            CALL OPEN.ABORT('CLIENTS',PROG.NAME)
         END
      END
      READ CLIENT.REC FROM F.CLIENTS,CLIENT.NUMBER ELSE
         IF CMD THEN
            ERROR.ARRAY<-1>='Could not read client information.'
            GOTO THE.END
         END ELSE
            CALL ELINE('Could not read client file.')
         END
         GOTO THE.END
      END

100:***
      IF CMD THEN
         QI='Y'
      END ELSE
         LN='Are you ready to import PO Bill of Lading codes from ':CLIENT.NUMBER:' ':CLIENT.REC<2>:'? '
         MASK='N-'
         HELP='[Y]=Yes [N]=No [EX]=Exit'
         CALL GEN.IN(0,5,LN:MASK,'',Q,0,2,'','',2,-2,5,1,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
      END
      BEGIN CASE
         CASE QI='EX' OR QI='N' OR QI=''
            GOTO THE.END
         CASE QI='Y'
            NULL
         CASE 1
            GOTO 100
      END CASE

* Open other files
      OPEN '','FTP.01458.HISTORY' TO F.FTP.HIST ELSE
         IF CMD THEN
            ERROR.ARRAY<-1>='Cannot Open FTP.01458.HISTORY File!'
            GOTO THE.END
         END ELSE
            CALL OPEN.ABORT('FTP.01458.HISTORY',PROG.NAME)
         END
      END
      OPEN '','FB.BOL.CRX,':CLIENT.NUMBER TO F.BOL ELSE
         IF CMD THEN
            ERROR.ARRAY<-1>='Cannot Open FB.BOL.CRX,':CLIENT.NUMBER:' File!'
            GOTO THE.END
         END ELSE
            CALL OPEN.ABORT('FB.BOL.CRX,':CLIENT.NUMBER,PROG.NAME)
         END
      END
      OPEN '','FTP.01458' TO F.FTP ELSE
         IF CMD THEN
            ERROR.ARRAY<-1>='Cannot Open FTP.01458 File!'
            GOTO THE.END
         END ELSE
            CALL OPEN.ABORT('FTP.01458',PROG.NAME)
         END
      END

* Set update date
      UPDATE.DATE=CLIENT.REC<82>+1       ; * Last processed + 1 day
      IF UPDATE.DATE<DATE() THEN
         UPDATE.DATE=DATE()
      END

      ST.DATE = DATE()   ;* NPR99
      ST.TIME = TIME()   ;* NPR99

* Start processing any files
*     STMT='SSELECT FTP.':CLIENT.NUMBER:' WITH IDU = "AFSBOL_]""AFSPO_]"' ; * JMK01
      STMT='SSELECT FTP.':CLIENT.NUMBER:' WITH IDU = "AFSBOL_]""AFSBO_]""AFSPO_]"'         ; * JMK01
      EXECUTE STMT RTNLIST CAPTURING RESULTS
      NITMS=@SELECTED
      IF NITMS=0 THEN
         IF CMD THEN
            ERROR.ARRAY<-1>='No file to process for HORIZON Products.'
         END ELSE
            CALL ELINE('No file to process for HORIZON Products.')
         END
         GOTO THE.END
      END
      EOF=0
      LOOP
         READNEXT FTP.ID ELSE EOF=1
      UNTIL EOF DO
* Make sure that we have read the file completely and it is not ; * JMK06
* still transferring via FTP.            ; * JMK06

         PRV.HI.IMPORT=""                ; * JMK06
FTP.READ.AGAIN:*                         ; * JMK06
         READ HI.IMPORT FROM F.FTP,FTP.ID ELSE
            IF CMD THEN
               ERROR.ARRAY<-1>='Cannot read ':FTP.ID:'. Aborting process.'
            END ELSE
               CALL ELINE('Cannot read ':FTP.ID:'. Aborting process.')
            END
            GOTO THE.END
         END
         IF HI.IMPORT#PRV.HI.IMPORT THEN           ; * JMK06
            SLEEP 60                     ; * JMK06
            PRV.HI.IMPORT=HI.IMPORT      ; * JMK06
            GO FTP.READ.AGAIN            ; * JMK06
         END                             ; * JMK06

* Read in the existing HORIZON Products text file
         HI.IMPORT=CHANGE(HI.IMPORT,CHAR(12),'')
         HI.IMPORT=CHANGE(HI.IMPORT,'"','')
         HI.IMPORT=CHANGE(HI.IMPORT,CHAR(9),@VM)
         HI.LAST.IMPORT=HI.IMPORT        ; * Save file for writing as "last"
         FTP.ID=OCONV(FTP.ID,'MCU')
         BEGIN CASE
            CASE FTP.ID[1,6]='AFSPO_' ; FILE.TYPE='INBOUND'
            CASE FTP.ID[1,7]='AFSBOL_' ; FILE.TYPE='OUTBOUND'
            CASE FTP.ID[1,6]='AFSBO_' ; FILE.TYPE='OUTBOUND'           ; * JMK01
            CASE 1 ; GOTO SKIP.FILE
         END CASE

* Status lines
         NATT=DCOUNT(HI.IMPORT,@AM)
         IF CMD ELSE
            CRT @(0,5):'Total items in import file = ':NATT:@(-4)
            CRT @(0,7):'Total Items processed'
            CRT @(0,8):'---------------------'
         END

* Check for an anticipated complete file transfer  ; * JMK06
* by testing the last line in the transfer for all ; * JMK06
* anticipated fields                     ; * JMK06

         FIRST.LINE=HI.IMPORT<1>         ; * JMK07
         LAST.LINE=HI.IMPORT<NATT>       ; * JMK06
         FIRST.FIELDS=DCOUNT(FIRST.LINE,@VM)       ; * JMK07
         LAST.FIELDS=DCOUNT(LAST.LINE,@VM)         ; * JMK07
         EST.COMPLETE=1                  ; * JMK06
         IF FIRST.FIELDS#LAST.FIELDS THEN          ; * JMK07
            EST.COMPLETE=0               ; * JMK07
         END                             ; * JMK07
         IF EST.COMPLETE=0 THEN          ; * JMK06
            IF CMD THEN                  ; * JMK06
               ERROR.ARRAY<-1>=FTP.ID:' may have been received incomplete. Please re-send.  Aborting process.'           ; * JMK06
            END ELSE                     ; * JMK06
               CALL ELINE(FTP.ID:' may have been received incomplete. Please re-send.  Aborting process.')     ; * JMK06
            END                          ; * JMK06
            GOTO THE.END                 ; * JMK06
         END                             ; * JMK06
* Set counters for processing
         NOT.THERE=0
         ALREADY.THERE=0
         ALREADY.THERE.CHANGED=0
         ALREADY.THERE.UNCHANGED=0
         ALREADY.THERE.BOTH.MATCH=0
         ALREADY.THERE.AMOUNTS.MATCH=0
         ALREADY.THERE.DATES.MATCH=0
         ALREADY.THERE.NEITHER.MATCH=0
         ALREADY.THERE.NULL=0

         RESULTS.ARRAY=''
         ERROR.ARRAY=''
         PERC=0

* Prepare the file for processing
         FOR ATT=1 TO NATT
            IF CMD ELSE
               CRT @(0,9):ATT'R#21'
               CALL PROG.BAR(11,ATT,NATT,PERC)
            END
            HI.LINE=HI.IMPORT<ATT>
            BEGIN CASE
               CASE FILE.TYPE='INBOUND'
                  HI.DT=ICONV(FIELD(TRIM(HI.LINE<1,1>),' ',1),'D')
                  HI.POBOL=TRIM(HI.LINE<1,2>)
                  HI.ITEM=TRIM(HI.LINE<1,3>)
                  HI.QTY=TRIM(HI.LINE<1,4>)
                  HI.WT=TRIM(HI.LINE<1,5>)
                  HI.GL=TRIM(HI.LINE<1,6>)
               CASE FILE.TYPE='OUTBOUND'
                  HI.POBOL=TRIM(HI.LINE<1,1>)
                  HI.ITEM=TRIM(HI.LINE<1,2>)
                  HI.QTY=TRIM(HI.LINE<1,3>)
                  HI.DT=ICONV(FIELD(TRIM(HI.LINE<1,4>),' ',1),'D')
                  HI.GL=TRIM(HI.LINE<1,5>)
                  HI.WT=TRIM(HI.LINE<1,6>)
            END CASE

            IF HI.POBOL#'' THEN
               READ BOL.ITEM FROM F.BOL,HI.POBOL THEN
                  ALREADY.THERE+=1
                  BEGIN CASE
                     CASE HI.POBOL=BOL.ITEM<8> AND HI.DT=BOL.ITEM<2>
                        * Numbers match, and invoice dates match
                        ALREADY.THERE.BOTH.MATCH+=1

                     CASE HI.POBOL=BOL.ITEM<8> AND HI.DT#BOL.ITEM<2>
                        * Numbers match, but invoice dates do not match
                        ALREADY.THERE.AMOUNTS.MATCH+=1
                        LINE=''
                        LINE<1,1>='BOL ITEM.ID ':HI.POBOL
                        LINE<1,2>='Order numbers match, but Order Dates do not match. File not changed.'
                        LINE<1,3>='Sales Order Number    = ':HI.POBOL
                        LINE<1,4>='Existing Order Date   = ':BOL.ITEM<2>'D4-'
                        LINE<1,5>='New Order Date        = ':HI.DT'D4-'
                        ERROR.ARRAY<-1>=LINE
                        ERROR.ARRAY<-1>=' '
                        ERROR.ARRAY<-1>=' '

                     CASE HI.POBOL#BOL.ITEM<8> AND HI.DT=BOL.ITEM<2>
                        * Numbers do not match, but invoice dates match
                        ALREADY.THERE.DATES.MATCH+=1
                        LINE=''
                        LINE<1,1>='BOL ITEM.ID ':HI.POBOL
                        LINE<1,2>='Numbers do not match, but Order Dates match. File not changed.'
                        LINE<1,3>='Existing Order Number = ':BOL.ITEM<8>
                        LINE<1,4>='New Order Number      = ':HI.POBOL
                        LINE<1,5>='Order Date            = ':BOL.ITEM<2>'D4-'
                        ERROR.ARRAY<-1>=LINE
                        ERROR.ARRAY<-1>=' '
                        ERROR.ARRAY<-1>=' '

                     CASE HI.POBOL#BOL.ITEM<8> AND HI.DT#BOL.ITEM<2>
                        * Numbers do not match, and invoice dates do not match
                        ALREADY.THERE.NEITHER.MATCH+=1
                        LINE=''
                        LINE<1,1>='BOL ITEM.ID ':HI.POBOL
                        LINE<1,2>='Numbers do not match, and Order Dates do not match. File not changed.'
                        LINE<1,3>='Existing Order Number = ':BOL.ITEM<8>
                        LINE<1,4>='New Order Number      = ':HI.POBOL
                        LINE<1,5>='Existing Order Date   = ':BOL.ITEM<2>'D4-'
                        LINE<1,6>='New Order Date        = ':HI.DT'D4-'
                        ERROR.ARRAY<-1>=LINE
                        ERROR.ARRAY<-1>=' '
                        ERROR.ARRAY<-1>=' '
                  END CASE

                  IF (BOL.ITEM<8>)="" THEN         ; * Existing number is null
                     ALREADY.THERE.NULL+=1
                     LINE=''
                     LINE<1,1>='BOL ITEM.ID ':HI.POBOL
                     LINE<1,2>='Existing Number was null. Updated to New Number.'
                     LINE<1,3>='Existing Order Number = ':BOL.ITEM<8>
                     LINE<1,4>='New Order Number      = ':HI.POBOL
                     ERROR.ARRAY<-1>=LINE
                     ERROR.ARRAY<-1>=' '
                     ERROR.ARRAY<-1>=' '
                     BOL.ITEM<2>=HI.DT
                     BOL.ITEM<4>=UPDATE.DATE
                     BOL.ITEM<8>=HI.POBOL
                  END
                  LOCATE(HI.ITEM,BOL.ITEM,10;BPOS) ELSE
                     NVAL=DCOUNT(BOL.ITEM<10>,@VM)+1         ; * JMK03
                     BOL.ITEM<10,NVAL>=HI.ITEM
                     BOL.ITEM<11,NVAL>=HI.QTY
                     BOL.ITEM<12,NVAL>=HI.WT
                     BOL.ITEM<13,NVAL>=HI.GL
                  END
               END ELSE
                  NOT.THERE+=1
                  BOL.ITEM=''
                  BOL.ITEM<2>=HI.DT
                  BOL.ITEM<4>=UPDATE.DATE
                  BOL.ITEM<8>=HI.POBOL
                  BOL.ITEM<10>=HI.ITEM
                  BOL.ITEM<11>=HI.QTY
                  BOL.ITEM<12>=HI.WT
                  BOL.ITEM<13>=HI.GL
               END
               WRITE BOL.ITEM ON F.BOL,HI.POBOL
            END
         NEXT ATT

* Update files
         WRITE HI.LAST.IMPORT ON F.FTP.HIST,FTP.ID THEN
            DELETE F.FTP,FTP.ID          ; * Delete the original text file
         END ELSE
            IF CMD THEN
               ERROR.ARRAY<-1>='Could not write 01458_RAW_LAST.TXT. Not deleting ':FTP.ID:'.'
            END ELSE
               CALL ELINE('Could not write history record. Not deleting FTP record. Call Mike.')
            END
         END

*NPR99 Start changes

LVIN    = ST.DATE     ; * Date started
LVIN<2> = ST.TIME     ; * Time started
LVIN<3> = PROG.NAME
LVIN<4> = FTP.ID       ; * Raw data file worked with
LVOUT   = ""
CALL UPDATE.BOL.FTP.LOG(LVIN,LVOUT,CLIENT.ID)

*NPR99 Start changes

SKIP.FILE:***

      REPEAT

* Screen output of results
      IF CMD THEN
      END ELSE
         CRT @(0,12):'Items already existing in the BOL cross reference file:'
         CRT @(0,13):'   1 Same Order Numbers, Same Order Dates             (not changed) = ':ALREADY.THERE.BOTH.MATCH'R#8'
         CRT @(0,14):'   2 Same Order Numbers, Different Order Dates        (not changed) = ':ALREADY.THERE.AMOUNTS.MATCH'R#8'
         CRT @(0,15):'   3 Different Order Numbers, Same Order Dates        (not changed) = ':ALREADY.THERE.DATES.MATCH'R#8'
         CRT @(0,16):'   4 Different Order Numbers, Different Order Dates   (not changed) = ':ALREADY.THERE.NEITHER.MATCH'R#8'
         CRT @(0,17):'---- Total items already in the file                                = ':ALREADY.THERE'R#8'

         CRT @(0,19):'   5 Zero or Null Order Number (occurs as 1-4 above)      (changed) = ':ALREADY.THERE.NULL'R#8'
         CRT @(0,20):'---- Total items not in the file                          (written) = ':NOT.THERE'R#8'
      END

* Email output of results
      RESULTS.ARRAY<-1>='Items already existing in the BOL cross reference file:'
      RESULTS.ARRAY<-1>='   1 Same Order Numbers, Same Order Dates             (not changed) = ':ALREADY.THERE.BOTH.MATCH'R#8'
      RESULTS.ARRAY<-1>='   2 Same Order Numbers, Different Order Dates        (not changed) = ':ALREADY.THERE.AMOUNTS.MATCH'R#8'
      RESULTS.ARRAY<-1>='   3 Different Order Numbers, Same Order Dates        (not changed) = ':ALREADY.THERE.DATES.MATCH'R#8'
      RESULTS.ARRAY<-1>='   4 Different Order Numbers, Different Order Dates   (not changed) = ':ALREADY.THERE.NEITHER.MATCH'R#8'
      RESULTS.ARRAY<-1>='---- Total items already in the file                                = ':ALREADY.THERE'R#8'
      RESULTS.ARRAY<-1>=' '
      RESULTS.ARRAY<-1>='   5 Zero or Null Order Number (occurs as 1-4 above)      (changed) = ':ALREADY.THERE.NULL'R#8'
      RESULTS.ARRAY<-1>='---- Total items not in the file                          (written) = ':NOT.THERE'R#8'

      EMAIL.OUT=''
      EMAIL.OUT<1,1>='raustin@horizonind.com'      ; * To: Email addresses
*     EMAIL.OUT<1,1>='MKerbow@afs.net'    ; * Troubleshooting
      EMAIL.OUT<2>=''                    ; * CC: Email addresses
      EMAIL.OUT<3,1>='MKerbow@afs.net'   ; * BCC: Email addresses
      EMAIL.OUT<3,2>='OHolman@afs.net'   ; * BCC: Email addresses
      EMAIL.OUT<4>='Imports@afs.net'     ; * From Email address
      EMAIL.OUT<5>='Results From Running ':PROG.NAME:' - Import Of New PO/BOL Bill of Lading Code Data For ':CLIENT.NUMBER:' ':CLIENT.REC<2>           ; * Subject of Email

      * Email body
      EMAIL.OUT<6,-1>=USER.NAME:' ran ':PROG.NAME:' (':PROG.DESC:') on ':DATE()'D2/':' at ':OCONV(TIME(),'MTHS'):' with the following results:'
      EMAIL.OUT<6,-1>=' '
      NUM=DCOUNT(RESULTS.ARRAY,@AM)
      FOR X=1 TO NUM
         EMAIL.OUT<6,-1>='   ':RESULTS.ARRAY<X>
      NEXT X

      IF ERROR.ARRAY#'' THEN
         EMAIL.OUT<6,-1>=' '
         EMAIL.OUT<6,-1>=' '
         EMAIL.OUT<6,-1>=' '
         EMAIL.OUT<6,-1>='The following conflicts occurred between existing data and new data:'
         EMAIL.OUT<6,-1>=' '
         NUM=DCOUNT(ERROR.ARRAY,@AM)
         FOR X=1 TO NUM
            EMAIL.OUT<6,-1>='   ':ERROR.ARRAY<X>
         NEXT X
      END

      EMAIL.OUT<7>=1                     ; * Auto format (add carriage returns to end of text)

      VIN=EMAIL.OUT
      VOUT=''
      CALL SENDMAIL(VIN,VOUT)
      EMAIL.SENT=1

      IF CMD ELSE
         CALL ELINE('')
      END

*************************************************************************

THE.END:***
* End of program
      IF CMD THEN
         IF EMAIL.SENT=0 AND ERROR.ARRAY#'' THEN
            EMAIL.OUT=''
            EMAIL.OUT<1,1>='raustin@horizonind.com'          ; * To: Email addresses
*           EMAIL.OUT<1,1>='MKerbow@afs.net'        ; * Troubleshooting
            EMAIL.OUT<2>=''              ; * CC: Email addresses
            EMAIL.OUT<3,1>='MKerbow@afs.net'       ; * BCC: Email addresses
            EMAIL.OUT<3,2>='OHolman@afs.net'       ; * BCC: Email addresses
            EMAIL.OUT<4>='Imports@afs.net'         ; * From Email address
            EMAIL.OUT<5>='Warnings/Errors From Running ':PROG.NAME:' - Import Of New EDP Bill of Lading Code Data For ':CLIENT.NUMBER:' ':CLIENT.REC<2>          ; * Subject of Email

* Email body
            EMAIL.OUT<6,-1>=USER.NAME:' ran ':PROG.NAME:' (':PROG.DESC:') on ':DATE()'D2/':' at ':OCONV(TIME(),'MTHS'):' with the following results:'
            EMAIL.OUT<6,-1>=' '

            EMAIL.OUT<6,-1>='The following conflicts occurred between existing data and new data:'
            EMAIL.OUT<6,-1>=' '
            NUM=DCOUNT(ERROR.ARRAY,@AM)
            FOR X=1 TO NUM
               EMAIL.OUT<6,-1>='   ':ERROR.ARRAY<X>
            NEXT X

            EMAIL.OUT<7>=1               ; * Auto format (add carriage returns to end of text)

            VIN=EMAIL.OUT
            VOUT=''
            CALL SENDMAIL(VIN,VOUT)
            EMAIL.SENT=1
         END
      END ELSE
         CRT @(0,23):
      END
   END
