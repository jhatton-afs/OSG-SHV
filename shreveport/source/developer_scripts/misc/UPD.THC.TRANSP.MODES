$OPTIONS HEADER.EJECT
$OPTIONS EXEC.EQ.PERF
$OPTIONS INFO.ABORT
ERRMSG=''
* PROGRAM UPD.THC.TRANSP.MODES
*
* Routine to maintain Tables for threshold amounts for bills per Transport Mode - 
* If Bill amount exceeds then bill will be forced to go to the Auditor
*
* FREIGHT BILLING PACKAGE
*
* May 2009  BY N PRATT
*
* Initialize variables
*
5
*
      PROMPT''
      PROG.NAME='UPD.THC.TRANSP.MODES'
      PROG.DESC = "Update Threshold Charges"
      PACK.NAME='FREIGHT BILLING'
*
       UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'UPD.THC.TRANSP.MODES' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
       CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
      CALL AFS.SCR.HEAD(CO.ID,"",'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)

      CALL GET.USER(USER.NAME)
      BEGIN CASE
        *
        * Authorized users
        *
        CASE USER.NAME = 'DAVID'
        CASE USER.NAME = 'OWEN'
        CASE USER.NAME = 'NPRATT'
        CASE USER.NAME = 'BRIAN'
        CASE USER.NAME = 'MKERBOW'
        CASE USER.NAME = 'MYRA'
        *
        * Restrict everyone else
        *
        CASE 1
          SUBJ="Unauthorized Program Access by ":USER.NAME
          TEXT=''
          TEXT<1,-1>=USER.NAME:' ':DATE()'D2/':' ':OCONV(TIME(),'MTHS'):' ':PROG.NAME
          TEXT<1,-1>='User ':USER.NAME:' tried to access ':PROG.DESC
          TEXT<1,-1>="(This user's name was not included in the program to allow access)"
          MVIN=''
*          MVIN<1>='Owen@afs.net':@VM:'SMatthews@afs.net'
******          MVIN<1> = "npratt@afs.net"
          MVIN<2>=''
          MVIN<4>='AFS'
          MVIN<5>=SUBJ
          MVIN<6>=TEXT
          CALL SENDMAIL(MVIN,MVOUT)

          CALL FB.PRINT.CENT(1,80,12,'Restricted Access Application...')
          CALL FB.PRINT.CENT(1,80,14,'Access Denied! Contact the IS Help Desk for Access')
          CALL ELINE('')
          STOP
      END CASE

*
* Open files
*
      OPEN '','CLIENTS' TO F.CLIENTS ELSE CALL OPEN.ABORT('CLIENTS',PROG.NAME)
      OPEN '','FB.TABLES' TO F.TABLES ELSE CALL OPEN.ABORT('FB.TABLES',PROG.NAME)
      OPEN '','FB.TRANSPORT' TO F.TRANSPORT ELSE CALL OPEN.ABORT('FB.TRANSPORT',PROG.NAME)

10 :
 
        MODE.ID        = ""
        MODE.ID.HOLD   = ""
        MODE.REC       = ""
        CLIENT.ID      = ""
        CLIENT.ID.HOLD = ""
        CLIENT.REC     = ""
        THOLD.AMT      = ""
        MODE.DISPLAY   = ""
        CL.DISPLAY     = ""
        THOLD.AMT      = ""
        THOLD.AMT.HOLD = ""
*
* Select and display available options
*

*
20 :  * Enter Client Number

        CALL SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
        GOSUB 5000
*
        IF CLIENT.ID.HOLD = "" THEN 
           MASK = ""
        END ELSE
           MASK = CLIENT.ID.HOLD
        END
        CLIENT.REC  = ""
*
        HELP = "Enter Client number, 'ALL', 'X'=Back, 'EX'=Exit."

        CALL GEN.IN(30,3,MASK,'',Q,0,5,'','',0,30,3,0,QI,HELP,0,23)
        QI = OCONV(QI,'MCU')

        IF QI= '' AND CLIENT.ID.HOLD = '' THEN
           CALL ELINE('Invalid Entry.')
           GOTO 20
        END ELSE
           IF QI = "ALL" THEN
              CLIENT.ID = "ALL"
              CL.DISPLAY = "ALL Clients"
              GOTO DISP.CLIENT
           END ELSE
              IF QI = "" AND CLIENT.ID.HOLD NE '' THEN QI = CLIENT.ID.HOLD
           END
        END
*
        BEGIN CASE
          CASE NUM(QI)
            CLIENT.ID = QI'R%5'
*
            READ CLIENT.REC FROM F.CLIENTS,CLIENT.ID THEN
               OLD.REC = CLIENT.REC
               CLIENT.ID.HOLD = CLIENT.ID
             END ELSE
               CALL ELINE('Client not found on file')
            END
            CL.DISPLAY = CLIENT.ID:" ":CLIENT.REC<2>
          CASE QI = "X"
             CHAIN "G"
          CASE QI = "EX"
             CHAIN "G"
          CASE ALPHA(QI)
            CALL SOUNDEX.DISPLAY(QI,'CLIENTS','SDX.CLIENTS,NAME','2',QX)
            CT = DCOUNT(QX<1>,@VM)
            CLIENT.ID = QX<1,1>'R%5'
*
            CLIENT.REC = ''
            READ CLIENT.REC FROM F.CLIENTS,CLIENT.ID THEN
               OLD.REC = CLIENT.REC
            END

            IF CLIENT.REC = '' THEN
               CALL ELINE('Client not found on file')
               CALL SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
               GOSUB 5000
               GOTO 20
            END

            CALL SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            GOSUB 5000
            CL.DISPLAY = CLIENT.ID:" ":CLIENT.REC<2>

          CASE 1
             CALL ELINE('Invalid Entry.')
             GOTO 20
        END CASE
*
DISP.CLIENT :

        CRT @(30,3) : CL.DISPLAY: SPACE(30)

*
***_____________________________________________________________________________________________________
30 :  * Enter Transport mode
*
        HELP = "Enter Transport mode, 'L'ist 'X'=Back, 'RETURN/ENTER' or 'EX'=Exit."

        IF MODE.ID.HOLD = "" THEN 
           MASK = ""
        END ELSE
           MASK = MODE.ID.HOLD
        END

        CALL GEN.IN(30,4,MASK,'',Q,0,0,'','',0,30,4,0,QI,HELP,0,23)
        QI = OCONV(QI,'MCU')

        IF QI = '' AND MODE.ID.HOLD = '' THEN
*           CALL ELINE('Invalid Entry.')
*           GOTO 30
           CHAIN "G"
        END ELSE
           IF QI = "" AND MODE.ID.HOLD NE '' THEN QI = MODE.ID.HOLD
        END
*
        BEGIN CASE
          CASE NUM(QI)
             MODE.ID = QI
             READ MODE.REC FROM F.TRANSPORT, MODE.ID THEN
               OLD.REC = MODE.REC
               MODE.ID.HOLD = MODE.ID
             END ELSE
               CALL ELINE('Mode not found on file')
               GOTO 30
            END
            MODE.DISPLAY = MODE.ID:" ":MODE.REC<1>
          CASE QI = "L"
             STMT = "SORT FB.TRANSPORT 1"
             EXECUTE STMT
             CALL ELINE("")
             GOTO 30
          CASE QI = "X" OR QI = "EX" OR QI = ''
             GOTO 20
          CASE 1
            CALL ELINE('Invalid Entry.')
            GOTO 30
        END CASE
*
        CRT @(30,4) : MODE.DISPLAY: SPACE(30)

        ID.TAB = "MODE_THC*":MODE.ID:"*":CLIENT.ID
        READ THOLD.REC FROM F.TABLES, ID.TAB ELSE THOLD.REC = ""
*
40 :  * Enter Thresh Hold Amount
*
        HELP = "Enter Threshold Amount ,X'=Back, 'EX'=Exit."

        THOLD.AMT = THOLD.REC<1>
        IF THOLD.AMT # '' THEN
           MASK = THOLD.AMT'R26(#8)'
           THOLD.AMT.HOLD = THOLD.AMT
        END ELSE
           MASK = ''
        END

        CALL GEN.IN(30,5,MASK,'AMT2',Q,0,8,'','',2,30,5,0,QI,HELP,0,23)

        QI = OCONV(QI,'MCU')

        IF QI= '' AND THOLD.AMT.HOLD = '' THEN
           CALL ELINE('Invalid Entry.')
           GOTO 40
        END ELSE
           IF QI= '' AND THOLD.AMT.HOLD NE '' THEN QI = THOLD.AMT.HOLD
        END
*
        BEGIN CASE
          CASE QI = "X"
             CALL SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
             GOSUB 5000
             GOTO 30
          CASE QI = "EX"
             CHAIN "G"
          CASE NUM(QI) AND QI GT "0"
             THOLD.AMT = QI
          CASE 1
             CALL ELINE("An amount must be entered")
             GOTO 40
        END CASE

        CRT @(30,5) : OCONV(THOLD.AMT,"MR2"): SPACE(30)

50 :  * Ask if Update to be performed
       
        HELP = "Update record?  [Y]es, [N]o , [X]=Back [EX]it"
        MASK = ' N'

        CRT @(0,22):"Select an option : ":@(-4)
        CALL GEN.IN(20,22,MASK,'',QI,0,2,'','',2,20,22,0,QI,HELP,0,23)
        QI = TRIM(OCONV(QI,'MCU'))
        IF QI = '' THEN QI=TRIM(MASK)
        BEGIN CASE
           CASE QI = 'EX'
              CHAIN "G"
           CASE QI = 'X'
              GOTO 40
           CASE QI = 'N'
           CASE QI = 'Y'
              ID.TAB = "MODE_THC*":MODE.ID:"*":CLIENT.ID
              THOLD.REC<1> = ICONV(THOLD.AMT,"MR0")
              WRITE THOLD.REC ON F.TABLES, ID.TAB            
           CASE 1
              CALL ELINE("Invalid response")
              GOTO 50
        END CASE
*
      GOTO 10
*
*------------------------------------------------------------------------
* INTERNAL SUBROUTINES
*------------------------------------------------------------------------
*
5000 * Display Main Screen
*
        DISP.SCREEN   = @(5,3) : "Client number    .... "
        DISP.SCREEN  := @(5,4) : "Transport Mode   .... "
        DISP.SCREEN  := @(5,5) : "Threshold Amount .... "

        CRT DISP.SCREEN

        CRT @(30,3) : CL.DISPLAY
        CRT @(30,4) : MODE.DISPLAY
        CRT @(30,5) : OCONV(THOLD.AMT,"MR2")
*
RETURN
