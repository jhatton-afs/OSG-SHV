$OPTIONS HEADER.EJECT
      ERRMSG=''
*
$OPTIONS EXEC.EQ.PERF
$OPTIONS INFO.ABORT
*
* PROGRAM FB.1.2
* PROGRAM TO CREATE OR MODIFY CARRIERS
*
* FREIGHT BILLING PACKAGE
*
* AUTHOR: BRIAN M. QUEEN
* DATE: NOVEMBER 13, 1990

* 101802 - JMK01 - ADD 'L' OPTION TO ENTRY HELP MESSAGE FOR PRO NUMBERS
* 111102 - JMK02 - ADD INACTIVE OPTION TO ENTRY
* 060305 - JMK03 - CHANGE UPDATE DATE FROM FIELD 24 TO FIELD 25
* 022207 - JTW01 - ADD ACH SCREEN ACCESS TO SCREEN
* PICK COMPILER INFORMATION
* ~~~~~~~~~~~~~~~~~~~~~~~~~
*  ~PICK-FILE: FBBP
*  ~PICK-RECORD: FB.1.2
*  ~ PICK-FILE: BP
*  ~ PICK-RECORD: JIM
*  ~COMPILE-REC: YES
*  ~AUTO-ANSWER: NO
*  ~RUN-REC: YES

*
* Get processing type
*
      PROMPT''
      EQU TRUE TO 1
      EQU FALSE TO 0

      INPUT P.TYPE

      IF P.TYPE # 'EDIT' THEN
         INPUT CARRIER.ID
         OPEN 'CARRIERS' TO F.CARRIERS ELSE
            CALL ELINE("Cannot open file CARRIERS")
            GOTO EXIT.FB.1.2
         END
         READ CARRIER.REC FROM F.CARRIERS,CARRIER.ID THEN
            GOSUB DISPLAY.CARRIER.COMMENT
            HELP="<ENTER> to Return to the Main Screen."
            CALL GEN.IN(0,22,'Enter selection please ##','',Q,0,2,'','',2,-2,22,0,QI,HELP,0,23)
         END ELSE
            CALL ELINE("Carrier# ":CARRIER.ID:" is not on file!")
         END
         GOTO EXIT.FB.1.2
      END

*
* Initialize variables
*
*     EXECUTE 'AUTOLOGOUT 3' ; ** Only Allow Someone in for 3 Minutes
      ADD.FLAG=0
      PROG.NAME='FB.1.2'
      PROG.DESC='CARRIER MAINTENANCE'
      PACK.NAME='FREIGHT BILLING'
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
       UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.1.2.ACH' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
       CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
      VM = CHAR(253)
      EXIT.IT = FALSE
      FIND.LOCKED.NAME = ''

      *
      * Check Digit Calculation Methods Available.
      *
      VIN='' ; VOUT='' ; VIN<1> = 'I'
      CALL CHECK.DIGIT(VIN,VOUT)
      METHODS.AVAIL=VOUT<3>
      ORG.CARRIER.XREF=''
      T.CARRIERS=''

      NUM.LINE = '123456789ABCDEFGHIJKLMNOP'

      ST.LIST = 'AL':VM:'AK':VM:'AZ':VM:'AR':VM:'CA':VM:'CO':VM:'CT'
      ST.LIST := VM:'DE':VM:'DC':VM:'FL':VM:'GA':VM:'HI':VM:'ID':VM
      ST.LIST := 'IL':VM:'IN':VM:'IA':VM:'KS':VM:'KY':VM:'LA':VM:'ME'
      ST.LIST := VM:'MD':VM:'MA':VM:'MI':VM:'MN':VM:'MS':VM:'MO':VM
      ST.LIST := 'MT':VM:'NE':VM:'NV':VM:'NH':VM:'NJ':VM:'NM':VM:'NY'
      ST.LIST := VM:'NC':VM:'ND':VM:'OH':VM:'OK':VM:'OR':VM:'PA':VM
      ST.LIST := 'RI':VM:'SC':VM:'SD':VM:'TN':VM:'TX':VM:'UT':VM:'VT'
      ST.LIST := VM:'VA':VM:'WA':VM:'WV':VM:'WI':VM:'WY'

      STATE.LIST = 'ALABAMA':VM:'ALASKA':VM:'ARIZONA':VM:'ARKANSAS':VM
      STATE.LIST := 'CALIFORNIA':VM:'COLORADO':VM:'CONNECTICUT':VM
      STATE.LIST := 'DELAWARE':VM:'DISTRICT OF COLUMBIA':VM:'FLORIDA':VM
      STATE.LIST := 'GEORGIA':VM:'HAWII':VM:'IDAHO':VM:'ILLINOIS':VM
      STATE.LIST := 'INDIANA':VM:'IOWA':VM:'KANSAS':VM:'KENTUCKY':VM
      STATE.LIST := 'LOUISIANA':VM:'MAINE':VM:'MARYLAND':VM
      STATE.LIST := 'MASSACHUSETTES':VM:'MICHIGAN':VM:'MINNESOTA':VM
      STATE.LIST := 'MISSISSIPPI':VM:'MISSOURI':VM:'MONTANA':VM:'NEBRASKA'
      STATE.LIST := VM:'NEVADA':VM:'HEW HAMPSHIRE':VM:'NEW JERSEY':VM
      STATE.LIST := 'NEW MEXICO':VM:'NEW YORK':VM:'NORTH CAROLINA':VM
      STATE.LIST := 'NORTH DAKOTA':VM:'OHIO':VM:'OKLAHOMA':VM:'OREGON':VM
      STATE.LIST := 'PENNSYLVANIA':VM:'RHODE ISLAND':VM:'SOUTH CAROLINA'
      STATE.LIST := VM:'SOUTH DAKOTA':VM:'TENNESSEE':VM:'TEXAS':VM:'UTAH'
      STATE.LIST := VM:'VERMONT':VM:'VIRGINIA':VM:'WASHINGTON':VM
      STATE.LIST := 'WEST VIRGINIA':VM:'WISCONSIN':VM:'WYOMING'

      YN.MSG='' ; YN.MASK='' ; YN.ANSWER=''


*
* Open files
*
      OPEN '','CARRIERS' TO F.CARRIERS ELSE
         CALL OPEN.ABORT("CARRIERS",PROG.NAME)
      END
      OPEN 'DICT','CARRIERS' TO F.DICT ELSE
         CALL OPEN.ABORT("DICT CARRIERS",PROG.NAME)
      END
      OPEN '','FB.TRANSPORT' TO F.TRANSPORT ELSE
         CALL OPEN.ABORT("FB.TRANSPORT",PROG.NAME)
      END
      OPEN '','ZIPS.CODES' TO F.ZIPS ELSE
         CALL OPEN.ABORT("ZIPS",PROG.NAME)
      END
      OPEN '','BCTRL' TO F.BCTRL ELSE
         CALL OPEN.ABORT("BCTRL",PROG.NAME)
      END
      OPEN '','FB.ADJUST.CARRIER' TO F.ADJUST.CARRIER ELSE
         CALL OPEN.ABORT("FB.ADJUST.CARRIER",PROG.NAME)
      END
      OPEN '','SCAC.XREF' TO F.SCAC ELSE
         CALL OPEN.ABORT("SCAC",PROG.NAME)
      END

*      USER=OCONV(SYSTEM(19),'MCU')
      CALL GET.USER(USER)
      READ DBCTRL FROM F.BCTRL,USER ELSE DBCTRL=''
      DISPLAY.MODE=1
      SUPER.USER=0
      VIN=USER
      CALL SUPER.USER(VIN,VOUT)
      SUPER.USER=VOUT<1>
      IF USER='CYNTHIA' THEN
         IF DATE() GE ICONV('02-20-02','D') AND DATE() LE ICONV('03-22-02','D') THEN
            SUPER.USER=1
         END
      END
      IF USER='DARLENE' THEN
         SUPER.USER=0
      END
      IF USER ='LEM' THEN SUPER.USER=1
      IF USER='LSMITH' THEN SUPER.USER=1
*     IF USER='CSHARP' THEN SUPER.USER=1
      IF USER='BRIANS' THEN SUPER.USER=1
      IF USER='BRIANP' THEN SUPER.USER=1
50:   IF SUPER.USER THEN
         HELP="Enter [V]iew for View Only or [C]hange."
         CALL GEN.IN(0,22,"Enter Mode V",'',q,0,1,'','',0,-1,22,0,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI='X' OR QI='EX'
               STOP
            CASE QI='V' OR QI=''
               DISPLAY.MODE=1
            CASE QI='C'
               CALL ELINE('All changes need to be performed on the IntraNet!')
               GO 50
*OH            DISPLAY.MODE=0
               DISPLAY.MODE=1
            CASE 1
               CALL ELINE('Invalid Entry')
               GOTO 50
         END CASE
      END
      IF DISPLAY.MODE THEN
         PROG.DESC=PROG.DESC:' - View'
      END ELSE
         PROG.DESC=PROG.DESC:' - Change'
      END
*
* Display screen
*
      LOOP
1000:
         CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
         CRT @(0,2):"Carrier Number....."
         IF DISPLAY.MODE THEN
            HELP="Enter carrier number, 'name' for search, [L]ist, [EX]it."
         END ELSE
            HELP="Enter carrier number, 'name' for search, [L]ist, [N]ew, [EX]it."
         END
         CALL GEN.IN(20,2,'#####','',Q,0,20,'','',2,-5,2,0,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI='X' OR QI='EX' OR QI=''
               EXIT.IT = TRUE

            CASE QI EQ 'L'
               EXECUTE 'SORT CARRIERS BY 1 1'
               CALL ELINE('')

            CASE QI='N' AND NOT(DISPLAY.MODE)
               DONE=0
               LOOP
               UNTIL DONE DO
                  READVU X FROM F.DICT,'NEXT',1 ELSE X=0
                  X=X+1
                  WRITEV X ON F.DICT,'NEXT',1
                  READ DUMMY FROM F.CARRIERS,X'R%5' ELSE DONE=1
               REPEAT
               CARRIER.ID=X'R%5'
               ORG.CARRIER.XREF='' ; T.CARRIERS='' ; XREF.LIST='' ; OLD.XREF.LIST=''
               CRT @(20,2):CARRIER.ID
               CARRIER.REC=''
               CARRIER.REC<48>='Y'
               OLD.REC=''
               EDIT.FLAG=0               ; * input all line items
               GOSUB 8000                ; * Display screen
               GOSUB 2010                ; * Enter line items
               GOSUB 3000                ; * Edit command line

            CASE NUM(QI)
               CARRIER.ID=Q'R%5'
               ORG.CARRIER.XREF='' ; T.CARRIERS='' ; XREF.LIST='' ; OLD.XREF.LIST=''
               CRT @(20,2):CARRIER.ID
               IF DISPLAY.MODE THEN
                  READ CARRIER.REC FROM F.CARRIERS,CARRIER.ID THEN
                     OLD.REC=CARRIER.REC
                     ORG.CARRIER.XREF<1>=CARRIER.REC<28>     ; * Keep copy of Orginal List
                     T.CARRIERS<1> = CARRIER.REC<28>
                     GOSUB BUILD.CARRIER.XREF
                     OLD.XREF.LIST = XREF.LIST
                     GOSUB 8000          ; * Display screen
                     GOSUB 8100          ; * Display data
                     IF P.TYPE='EDIT' THEN
                        GOSUB 3000       ; * Edit command line
                     END ELSE
                        CALL ELINE('')
                        GOTO EXIT.FB.1.2
                     END
                  END ELSE
                     CALL ELINE('Carrier does not exist on file - View Only')
                  END
               END ELSE
                  READU CARRIER.REC FROM F.CARRIERS,CARRIER.ID LOCKED
                     FIND.LOCKED.NAME = CARRIER.ID
                     GOSUB FIND.LOCKED
                     GOTO 1000
                  END THEN
                     OLD.REC=CARRIER.REC
                     ORG.CARRIER.XREF<1>=CARRIER.REC<28>     ; * Keep copy of Orginal List
                     T.CARRIERS<1> = CARRIER.REC<28>
                     GOSUB BUILD.CARRIER.XREF
                     OLD.XREF.LIST = XREF.LIST
                     GOSUB 8000          ; * Display screen
                     GOSUB 8100          ; * Display data
                     IF P.TYPE='EDIT' THEN
                        GOSUB 3000       ; * Edit command line
                     END ELSE
                        CALL ELINE('')
                        GOTO EXIT.FB.1.2
                     END
                  END ELSE
                     HELP="Carrier does not exist on file, do you wish to add."
                     CALL GEN.IN(0,22,'Create new carrier record. N','',Q,0,1,'','',2,-1,22,1,QI,HELP,0,23)
                     QI=OCONV(QI,'MCU')
                     IF QI EQ 'Y' THEN
                        CARRIER.REC=''
                        OLD.REC=''
                        CARRIER.REC<48>='Y'
                        EDIT.FLAG=0      ; * Input all line items
                        GOSUB 8000       ; * Display screen
                        GOSUB 2010       ; * Enter line items
                        GOSUB 3000       ; * Edit command line
                     END
                  END
               END

            CASE 1
               CALL SOUNDEX.DISPLAY(Q,'CARRIERS','SDX.CARRIER,NAME','1,3,4',QX)
               CT=DCOUNT(QX<1>,@VM)
               IF CT=1 THEN
                  DATA QX<1,1>
               END
*         CASE 1
*           CALL ELINE('Invalid Entry.')
         END CASE

      UNTIL (EXIT.IT = TRUE) DO
      REPEAT

EXIT.FB.1.2:


      STOP


*--------------------------------------------------------------------
*
* INTERNAL SUBROUTINES
*
*--------------------------------------------------------------------
*
* Display menu
*
8000: CRT @(30,1):"Carrier Number "
      CRT @(0, 2):"Remittance                              Correspondence"
      CRT @(0, 3):" 1 Name......": @(40, 3):"12 Name......"
      CRT @(0, 4):" 2 Addr 1....": @(40, 4):"13 Addr 1...."
      CRT @(0, 5):" 3 Addr 2....": @(40, 5):"14 Addr 2...."
      CRT @(0, 6):" 4 City......": @(40, 6):"15 City......"
      CRT @(0, 7):" 5 State.....": @(40, 7):"16 State....."
      CRT @(0, 8):" 6 Zip Code..": @(40, 8):"17 Zip Code.."
      CRT @(0, 9):" 7 Country...": @(40, 9):"18 Due days.."
      CRT @(0,10):" 8 Phone Number..":@(40,10):"19 Date Upd.."
      CRT @(0,11):" 9 Fax Number....":@(40,11):"20 States Serviced -"
      CRT @(0,12):"10 Contact......."
      CRT @(0,13):"11 Transport....."
      CRT @(0,14):"21 Comments......"
      CRT @(0,15):"22 Pro Setup....."
!      CRT @(0,16):"23 Verify RmtZip." ; * JTW01
!     CRT @(0,17):"24 Carrier XRef.."  ; * JTW01
!     CRT @(0,18):"25 Mode by Weight"  ; * JTW01
!     CRT @(0,19):"26 Print Checks..":@(40,19):"28 SCAC......" ; * JTW01
*     CRT @(0,20):"27 Email Addrs..."    ; * JMK02
!     CRT @(0,20):"27 Email Addrs...":@(40,20):"29 Status...."         ; * JTW01
      CRT @(0,16):"23 Carrier XRef.."    ; * JTW01
      CRT @(0,17):"24 Mode by Weight"    ; * JTW01
      CRT @(0,18):"25 Verify RmtZip.":@(40,18):"28 SCAC......"         ; * JTW01
      CRT @(0,19):"26 Print Checks..":@(40,19):"29 Status...."         ; * JTW01
      CRT @(0,20):"27 Email Addrs...":@(40,20):"30 ACH......."         ; * JTW01
      RETURN

*--------------------------------------------------------------------------
* Display data
*--------------------------------------------------------------------------
8100: CRT @(45, 1):CARRIER.ID'L#5'
      CRT @(13, 3):CARRIER.REC<1>'L#25'
      CRT @(13, 4):CARRIER.REC<2,1>'L#25'
      CRT @(13, 5):CARRIER.REC<2,2>'L#25'
      CRT @(13, 6):CARRIER.REC<3>'L#20'
      CRT @(13, 7):CARRIER.REC<4>'L#2'
      CRT @(13, 8):CARRIER.REC<5>'L#10'
      CRT @(13, 9):CARRIER.REC<7>'L#20'
      CRT @(17,19):CARRIER.REC<59>'L#1'
      CRT @(53, 3):CARRIER.REC<31>'L#25'
      CRT @(53, 4):CARRIER.REC<32,1>'L#25'
      CRT @(53, 5):CARRIER.REC<32,2>'L#25'
      CRT @(53, 6):CARRIER.REC<33>'L#20'
      CRT @(53, 7):CARRIER.REC<34>'L#2'
      CRT @(53, 8):CARRIER.REC<35>'L#10'
      CRT @(53, 9):CARRIER.REC<23>'L#2'
*     CRT @(53,10):CARRIER.REC<24>'D2/'  ; * JMK03
      CRT @(53,10):CARRIER.REC<25>'D2/'  ; * JMK03
!     CRT @(53,19):CARRIER.REC<12>'L#4'  ; * JTW01
      CRT @(53,20):CARRIER.REC<89>'L#2'  ; * JTW01
      CRT @(53,18):CARRIER.REC<12>'L#4'  ; * JTW01
      CRT @(53,19):CARRIER.REC<89>'L#2'  ; * JTW01
      CRT @(53,20):CARRIER.REC<102>'L#4'           ; * JTW01
*
      ST.CNT = DCOUNT(CARRIER.REC<50>,CHAR(253))
      BEGIN CASE
         CASE CARRIER.REC<50> = ''
            ST.DESC = 'None on File'
         CASE INDEX(CARRIER.REC<50>,'DC',1)
            ST.DESC = (ST.CNT - 1) : ' States and DC'
         CASE 1
            ST.DESC = ST.CNT : ' States'
      END CASE
      CRT @(61,11):ST.DESC
*
      PIN=CARRIER.REC<6>
      CALL PHONE.OUT(PIN,POUT)
      CRT @(17,10):POUT
      PIN=CARRIER.REC<8>
      CALL PHONE.OUT(PIN,POUT)
      CRT @(17,11):POUT
      CRT @(17,12):CARRIER.REC<9>'L#30'
      READV DESC FROM F.TRANSPORT,CARRIER.REC<44>,1 ELSE DESC='{UNKNOWN}'
      CRT @(17,13):CARRIER.REC<44>'L#3':' ':DESC:@(-4)


*     Display Comments -

      TEMP = CARRIER.REC<45,1>
      IF CARRIER.REC<45,2> # '' THEN TEMP:='{M}'
      IF TEMP='' THEN TEMP = '{ NONE ON FILE }'
      CRT @(17,14):TEMP
*     FOR I=1 TO 8
*       CRT @(17,13+I):CARRIER.REC<45,I>
*     NEXT I

*     Display Pro Format (Display the First One ---

      TEMP = CHANGE(CARRIER.REC<47>,@VM,', ')
      IF TEMP='' THEN
         TEMP = '{ NONE ON FILE }'
      END ELSE
         IF LEN(TEMP) > 60 THEN TEMP=TEMP'L#52':'{ MORE }'
      END
      CRT @(17,15):TEMP'L#60'


*     Display Mode by Weights

      WEIGHTS = CARRIER.REC<70>
      TEMP = ''
      IF WEIGHTS<1> = '' THEN
         TEMP = '{ NONE ON FILE }'
      END ELSE
         TEMP = '{PLEASE SEE THE WEIGHT/MODE BREAKDOWN}'
      END
!     CRT @(18,18):TEMP'L#60' ; * JTW01
      CRT @(18,17):TEMP'L#60'            ; * JTW01


*     Verify RemitZip

      BEGIN CASE
         CASE CARRIER.REC<48> ='Y'
            TEMP=' YES'
         CASE 1
            TEMP=' NO '
      END CASE
!     CRT @(17,16):TEMP ; * JTW01
      CRT @(17,18):TEMP                  ; * JTW01

*     Carrier XRef

      TEMP = CHANGE(XREF.LIST<1>,@VM,', ')
      IF TEMP='' THEN
         TEMP = '{ NONE ON FILE }'
      END ELSE
         IF LEN(TEMP) > 60 THEN TEMP=TEMP'L#52':'{ MORE }'
      END
!     CRT @(17,17):TEMP'L#60' ; * JTW01
      CRT @(17,16):TEMP'L#60'            ; * JTW01

      RETURN

*--------------------------------------------------------------------------
* Redraw Entire Display
*--------------------------------------------------------------------------
REDRAW.DISPLAY:
      CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      GOSUB 8000
      GOSUB 8100
      RETURN

*--------------------------------------------------------------------
*
* Line items input.
*
*--------------------------------------------------------------------
* Remittance Name. Item 1.
*--------------------------------------------------------------------
2010: HELP="Enter carrier's Remittance Name. [cr]=Accept."
      IF CARRIER.REC<1> EQ '' THEN DVAR='-' ELSE DVAR=CARRIER.REC<1>'L#25'
      CALL GEN.IN(13,3,DVAR,'',Q,0,25,'','',2,-25,3,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='' ; Q=CARRIER.REC<1>
         CASE QI=' ' ; Q=''
      END CASE
      CARRIER.REC<1>=TRIM(Q)
      CRT @(13,3):CARRIER.REC<1>'L#25'
      IF EDIT.FLAG THEN RETURN

*--------------------------------------------------------------------------
* Remittance Address. Item 2.
*--------------------------------------------------------------------------
2020: HELP="Enter carrier's remittance addr. [<]=Back. [cr]=Accept. [I]nternational addr."
      IF CARRIER.REC<2,1> EQ '' THEN DVAR='-' ELSE DVAR=CARRIER.REC<2,1>'L#25'
      CALL GEN.IN(13,4,DVAR,'',Q,0,25,'','',2,-25,4,0,QI,HELP,0,23)
      BEGIN CASE
         CASE Q EQ '<'
            CRT @(13,4):CARRIER.REC<2,1>'L#25'
            GOTO 2010
         CASE Q EQ 'I' OR Q EQ 'i'
            GOSUB GET.INTERNATIONAL.INFO
            GOTO 2020
         CASE QI=''
            Q=CARRIER.REC<2,1>
         CASE QI=' '
            Q=''
      END CASE
      CARRIER.REC<2,1>=Q
      CRT @(13,4):CARRIER.REC<2,1>'L#25'
      IF EDIT.FLAG THEN RETURN

*--------------------------------------------------------------------------
* 2nd line of carrier's remittance address. Item 3.
*--------------------------------------------------------------------------
2030: HELP="Enter carrier's remittance address. [<]=Back to 1st line. [cr]=Accept."
      IF CARRIER.REC<2,2> EQ '' THEN DVAR='-' ELSE DVAR=CARRIER.REC<2,2>'L#25'
      CALL GEN.IN(13,5,DVAR,'',Q,0,25,'','',2,-25,5,0,QI,HELP,0,23)
      BEGIN CASE
         CASE Q EQ '<'
            CRT @(13,5):CARRIER.REC<2,2>'L#25'
            GOTO 2020
         CASE QI=''
            Q=CARRIER.REC<2,2>
         CASE QI=' '
            Q=''
      END CASE
      CARRIER.REC<2,2>=Q
      CRT @(13,5):CARRIER.REC<2,2>'L#25'
      IF EDIT.FLAG THEN RETURN

*--------------------------------------------------------------------------
* Carrier's remittance city. Item 4.
*--------------------------------------------------------------------------
2040: HELP="Enter remittance city or zip code. [<]=Back to 2nd address. [cr]=Accept."
      IF CARRIER.REC<3> EQ '' THEN DVAR='-' ELSE DVAR=CARRIER.REC<3>'L#20'
      CALL GEN.IN(13,6,DVAR,'',Q,0,20,'','',2,-20,6,0,QI,HELP,0,23)
      ZCODE=FIELD(QI,'-',1)
      BEGIN CASE
         CASE QI='<'
            CRT @(13,6):CARRIER.REC<3>'L#20'
            GOTO 2030
         CASE QI=''
            Q=CARRIER.REC<3>
         CASE QI=' '
            Q=''
         CASE NUM(ZCODE)
            READ ZREC FROM F.ZIPS,ZCODE THEN
               CARRIER.REC<3>=ZREC<1>
               CARRIER.REC<4>=ZREC<2>
               CARRIER.REC<5>=Q
               CRT @(13,6):CARRIER.REC<3>'L#20'
               CRT @(13,7):CARRIER.REC<4>'L#2'
               CRT @(13,8):CARRIER.REC<5>'L#10'
            END ELSE
               CALL ELINE('Zip code not on file.')
               GOTO 2040
            END
         CASE 1
            CARRIER.REC<3>=Q
      END CASE
      CRT @(13,6):CARRIER.REC<3>'L#20'
      IF EDIT.FLAG THEN RETURN

*--------------------------------------------------------------------------
* Carrier's remittance state. Item 5.
*--------------------------------------------------------------------------
2050: HELP="Enter carrier's remittance state. [<]=Back to city. [cr]=Accept."
      IF CARRIER.REC<4> EQ '' THEN DVAR='-' ELSE DVAR=CARRIER.REC<4>'L#2'
      CALL GEN.IN(13,7,DVAR,'',Q,0,2,'','',2,-2,7,0,QI,HELP,0,23)
      BEGIN CASE
         CASE Q EQ '<'
            CRT @(13,7):CARRIER.REC<4>'L#2'
            GOTO 2040
         CASE QI=''
            Q=CARRIER.REC<4>
         CASE QI=' '
            Q=''
      END CASE
      CARRIER.REC<4>=Q
      CRT @(13,7):CARRIER.REC<4>'L#2'
      IF EDIT.FLAG THEN RETURN

*--------------------------------------------------------------------------
* Carrier's remittance zip code. Item 6.
*--------------------------------------------------------------------------
2060: HELP="Enter carrier's remittance zip code. [<]=Back to state. [cr]=Accept."
      IF CARRIER.REC<5> EQ '' THEN DVAR='#####-####' ELSE DVAR=CARRIER.REC<5>'L#10'
      CALL GEN.IN(13,8,DVAR,'',Q,0,10,'','',2,-10,8,0,QI,HELP,0,23)
      ZCODE=FIELD(QI,'-',1)
      BEGIN CASE
         CASE Q EQ '<'
            CRT @(13,8):CARRIER.REC<5>'L#10'
            GOTO 2050
         CASE QI=''
            Q=CARRIER.REC<5>
         CASE QI=' '
            Q=''
         CASE NUM(ZCODE)
            READ ZREC FROM F.ZIPS,ZCODE THEN
               CARRIER.REC<3>=ZREC<1>
               CARRIER.REC<4>=ZREC<2>
               CARRIER.REC<5>=Q
            END ELSE
               CALL ELINE('Zip code not on file, add to master.')
               GOTO 2060
            END
         CASE 1
            CARRIER.REC<5>=Q
      END CASE
      CRT @(13,6):CARRIER.REC<3>'L#20'
      CRT @(13,7):CARRIER.REC<4>'L#2'
      CRT @(13,8):CARRIER.REC<5>'L#10'
      IF EDIT.FLAG THEN RETURN

*--------------------------------------------------------------------------
* Carrier's country. Item 7.
*--------------------------------------------------------------------------
2070: HELP="Enter carrier's remittance country. [<]=Back to zip code. [cr]=Accept."
      IF CARRIER.REC<7> EQ '' THEN DVAR='-' ELSE DVAR=CARRIER.REC<7>'L#25'
      CALL GEN.IN(13,9,DVAR,'',Q,0,25,'','',2,-25,9,0,QI,HELP,0,23)
      BEGIN CASE
         CASE Q EQ '<'
            CRT @(13,9):CARRIER.REC<7>'L#25'
            GOTO 2060
         CASE QI=''
            Q=CARRIER.REC<7>
         CASE QI=' '
            Q=''
      END CASE
      CARRIER.REC<7>=Q
      CRT @(13,9):CARRIER.REC<7>'L#25'
      IF EDIT.FLAG THEN RETURN

*--------------------------------------------------------------------------
* Carrier's phone. Item 8.
*--------------------------------------------------------------------------
2080: HELP="Enter carrier's phone number. '<'=Back to country. ''=Accept."
      IF CARRIER.REC<6> EQ '' THEN
         DVAR="(###)###-####"
      END ELSE
         PIN=CARRIER.REC<6>
         CALL PHONE.OUT(PIN,DVAR)
      END
      CALL GEN.IN(17,10,DVAR,'PHONE',Q,0,13,'','',2,-13,10,0,QI,HELP,0,23)
      BEGIN CASE
         CASE Q EQ '<'
            PIN=CARRIER.REC<6>
            CALL PHONE.OUT(PIN,POUT)
            CRT @(17,10):POUT'L#13'
            GOTO 2070
         CASE QI=''
            Q=CARRIER.REC<6>
         CASE QI=' '
            Q=''
      END CASE
      CARRIER.REC<6>=Q
      PIN=CARRIER.REC<6>
      CALL PHONE.OUT(PIN,POUT)
      CRT @(17,10):POUT'L#13'
      IF EDIT.FLAG THEN RETURN

*--------------------------------------------------------------------------
* Carrier's fax. Item 9.
*--------------------------------------------------------------------------
2090: HELP="Enter carrier's fax number. '<'=Back to phone. ''=Accept."
      IF CARRIER.REC<8> EQ '' THEN
         DVAR="(###)###-####"
      END ELSE
         PIN=CARRIER.REC<8>
         CALL PHONE.OUT(PIN,DVAR)
      END
      CALL GEN.IN(17,11,DVAR,'PHONE',Q,0,13,'','',2,-13,11,0,QI,HELP,0,23)
      BEGIN CASE
         CASE Q EQ '<'
            PIN=CARRIER.REC<8>
            CALL PHONE.OUT(PIN,POUT)
            CRT @(17,11):POUT'L#13'
            GOTO 2080
         CASE QI=''
            Q=CARRIER.REC<8>
         CASE QI=' '
            Q=''
      END CASE
      CARRIER.REC<8>=Q
      PIN=CARRIER.REC<8>
      CALL PHONE.OUT(PIN,POUT)
      CRT @(17,11):POUT'L#13'
      IF EDIT.FLAG THEN RETURN

*--------------------------------------------------------------------------
* Carrier's contact. Item 10.
*--------------------------------------------------------------------------
2100: HELP="Enter carriers's contact. '<'=Back to fax number. ''=Accept."
      IF CARRIER.REC<9> EQ '' THEN DVAR='-' ELSE DVAR=CARRIER.REC<9>'L#30'
      CALL GEN.IN(17,12,DVAR,'',Q,0,30,'','',2,-30,12,0,QI,HELP,0,23)
      BEGIN CASE
         CASE QI EQ '<'
            CRT @(17,12):CARRIER.REC<9>'L#30'
            GOTO 2090
         CASE QI=''
            Q=CARRIER.REC<9>
         CASE QI=' '
            Q=''
      END CASE
      CARRIER.REC<9>=Q
      CRT @(17,12):CARRIER.REC<9>'L#30'
      IF EDIT.FLAG THEN RETURN

*--------------------------------------------------------------------------
* Carrier's transportation mode. Item 11.
*--------------------------------------------------------------------------
2110: HELP="Enter carrier's transp. mode classification. '<'=Back to contact. ''=Accept."
      IF CARRIER.REC<44>='' THEN DVAR='#' ELSE DVAR=CARRIER.REC<44>'L#3'
      IF CARRIER.REC<44>#'' THEN PREV.CARRIER.MODE = CARRIER.REC<44> ELSE PREV.CARRIER.MODE = ''
      CALL GEN.IN(17,13,DVAR,'',Q,0,3,'','',2,-3,13,0,QI,HELP,0,23)
      BEGIN CASE
         CASE QI='<'
            READV DESC FROM F.TRANSPORT,CARRIER.REC<44>,1 ELSE DESC='{UNKNOWN}'
            CRT @(17,13):CARRIER.REC<44>'L#3':' ':DESC:@(-4)
            GOTO 2100
         CASE QI=''
            Q=CARRIER.REC<44>
         CASE QI=' '
            Q=''
      END CASE
      IF CARRIER.REC<71> = '' THEN
         CARRIER.REC<70> = '@'
         CARRIER.REC<71> = Q
      END
      LOCATE Q IN CARRIER.REC<71> SETTING MODE.POS ELSE MODE.POS = 0
      IF MODE.POS = 0 THEN
         CALL ELINE('TRANSPORTATION MODE NOT IN MODE BY WEIGHT PLEASE ADD TO MODE BY WEIGHT FIRST')
      END ELSE
         CARRIER.REC<44>=Q
         READV DESC FROM F.TRANSPORT,CARRIER.REC<44>,1 ELSE
            CALL ELINE("Invalid Transportation Code '":CARRIER.REC<44>:"'")
            GOTO 2110
         END
      END
      CRT @(17,13):CARRIER.REC<44>'L#3':' ':DESC:@(-4)
      IF EDIT.FLAG THEN RETURN

*--------------------------------------------------------------------------
* Correspondence name. Item 12.
*--------------------------------------------------------------------------
2120: HELP="Enter carrier's correspondence name. [<]=Back to transport. [cr]=Accept."
      IF CARRIER.REC<31> EQ '' THEN DVAR='-' ELSE DVAR=CARRIER.REC<31>'L#25'
      CALL GEN.IN(53,3,DVAR,'',Q,0,25,'','',2,-25,3,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            Q=CARRIER.REC<31>
         CASE QI=' '
            Q=''
         CASE QI='<'
            GOTO 2110
      END CASE
      CARRIER.REC<31>=Q
      CRT @(53,3):CARRIER.REC<31>'L#25'
      IF EDIT.FLAG THEN RETURN

*--------------------------------------------------------------------------
* Correspondence address line 1. Item 13.
*--------------------------------------------------------------------------
2130: HELP="Enter carrier's correspondence name. [<]=Back to transport. [cr]=Accept."
      IF CARRIER.REC<32,1> EQ '' THEN DVAR='-' ELSE DVAR=CARRIER.REC<32,1>'L#25'
      CALL GEN.IN(53,4,DVAR,'',Q,0,25,'','',2,-25,4,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            Q=CARRIER.REC<32,1>
         CASE QI=' '
            Q=''
         CASE QI='<'
            GOTO 2120
      END CASE
      CARRIER.REC<32,1>=Q
      CRT @(53,4):CARRIER.REC<32,1>'L#25'
      IF EDIT.FLAG THEN RETURN

*--------------------------------------------------------------------------
* Correspondence address line 2. Item 14.
*--------------------------------------------------------------------------
2140: HELP="Enter carrier's correspondence name. [<]=Back to transport. [cr]=Accept."
      IF CARRIER.REC<32,2> EQ '' THEN DVAR='-' ELSE DVAR=CARRIER.REC<32,2>'L#25'
      CALL GEN.IN(53,5,DVAR,'',Q,0,25,'','',2,-25,5,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            Q=CARRIER.REC<32,2>
         CASE QI=' '
            Q=''
         CASE QI='<'
            GOTO 2130
      END CASE
      CARRIER.REC<32,2>=Q
      CRT @(53,5):CARRIER.REC<32,2>'L#25'
      IF EDIT.FLAG THEN RETURN

*--------------------------------------------------------------------------
* Carrier's correspondence city. Item 15.
*--------------------------------------------------------------------------
2150: HELP="Enter carrier's remittance city or zip. [<]=Back to 2nd address. [cr]=Accept."
      IF CARRIER.REC<33> EQ '' THEN DVAR='-' ELSE DVAR=CARRIER.REC<33>'L#20'
      CALL GEN.IN(53,6,DVAR,'',Q,0,20,'','',2,-20,6,0,QI,HELP,0,23)
      ZCODE=FIELD(QI,'-',1)
      BEGIN CASE
         CASE Q EQ '<'
            CRT @(53,6):CARRIER.REC<33>'L#20'
            GOTO 2140
         CASE QI=''
            Q=CARRIER.REC<33>
         CASE QI=' '
            Q=''
         CASE NUM(ZCODE)
            READ ZREC FROM F.ZIPS,ZCODE THEN
               CARRIER.REC<33>=ZREC<1>
               CARRIER.REC<34>=ZREC<2>
               CARRIER.REC<35>=Q
            END ELSE
               CALL ELINE('Zip code not on file, add to master.')
               GOTO 2150
            END
         CASE 1
            CARRIER.REC<35>=Q
      END CASE
      CRT @(53,6):CARRIER.REC<33>'L#20'
      CRT @(53,7):CARRIER.REC<34>'L#2'
      CRT @(53,8):CARRIER.REC<35>'L#10'
      IF EDIT.FLAG THEN RETURN

*--------------------------------------------------------------------------
* Carrier's correspondence state. Item 16.
*--------------------------------------------------------------------------
2160: HELP="Enter carrier's correspondence state. [<]=Back to city. [cr]=Accept."
      IF CARRIER.REC<34> EQ '' THEN DVAR='-' ELSE DVAR=CARRIER.REC<34>'L#2'
      CALL GEN.IN(53,7,DVAR,'',Q,0,2,'','',2,-2,7,0,QI,HELP,0,23)
      BEGIN CASE
         CASE Q EQ '<'
            CRT @(53,7):CARRIER.REC<34>'L#2'
            GOTO 2150
         CASE QI=''
            Q=CARRIER.REC<34>
         CASE QI=' '
            Q=''
      END CASE
      CARRIER.REC<34>=Q
      CRT @(53,7):CARRIER.REC<34>'L#2'
      IF EDIT.FLAG THEN RETURN

*--------------------------------------------------------------------------
* Carrier's correspondence zip code. Item 17.
*--------------------------------------------------------------------------
2170: HELP="Enter carrier's correspondence zip code. [<]=Back to state. [cr]=Accept."
      IF CARRIER.REC<35> EQ '' THEN DVAR='#####-####' ELSE DVAR=CARRIER.REC<35>'L#10'
      CALL GEN.IN(53,8,DVAR,'',Q,0,10,'','',2,-10,8,0,QI,HELP,0,23)
      ZCODE=FIELD(QI,'-',1)
      BEGIN CASE
         CASE Q EQ '<'
            CRT @(53,8):CARRIER.REC<35>'L#10'
            GOTO 2160
         CASE QI=''
            Q=CARRIER.REC<35>
         CASE QI=' '
            Q=''
         CASE NUM(ZCODE)
            READ ZREC FROM F.ZIPS,ZCODE THEN
               CARRIER.REC<33>=ZREC<1>
               CARRIER.REC<34>=ZREC<2>
               CARRIER.REC<35>=Q
               CRT @(53,6):CARRIER.REC<33>'L#20'
               CRT @(53,7):CARRIER.REC<34>'L#2'
               CRT @(53,8):CARRIER.REC<35>'L#10'
            END ELSE
               CALL ELINE('Zip code not on file, add to master.')
               CARRIER.REC<35>=Q
            END
      END CASE
      CARRIER.REC<35>=Q
      CRT @(53,8):CARRIER.REC<35>'L#10'
      IF EDIT.FLAG THEN RETURN

*--------------------------------------------------------------------------
* Carrier's terms (Due Days). Item 18.
*--------------------------------------------------------------------------
2180: HELP="Enter carrier's terms. (# days) '<'=Back to transport. ''=Accept."
      IF CARRIER.REC<23>='' THEN DVAR='30' ELSE DVAR=CARRIER.REC<23>'L#2'
      CALL GEN.IN(53,9,DVAR,'',Q,0,2,'','',2,-2,9,0,QI,HELP,0,23)
      BEGIN CASE
         CASE QI='<'
            CRT @(53,9):CARRIER.REC<23>'L#2'
            GOTO 2170
         CASE QI=''
            IF CARRIER.REC<23>='' THEN CARRIER.REC<23>=30
            Q=CARRIER.REC<23>
         CASE QI=' '
            Q=0
      END CASE
      CARRIER.REC<23>=Q
      CRT @(53,9):CARRIER.REC<23>'L#2'
      IF EDIT.FLAG THEN RETURN

*--------------------------------------------------------------------------
* Date carrier opened. Item 19.
*--------------------------------------------------------------------------
2190: HELP="Enter date carrier opened '<'=Back to terms. ''=Accept."
      IF CARRIER.REC<24>='' THEN DVAR=DATE()'D2/' ELSE DVAR=CARRIER.REC<24>'D2/'
      CALL GEN.IN(53,10,DVAR,'DATE',Q,0,8,'','',2,-8,10,0,QI,HELP,0,23)
      BEGIN CASE
         CASE QI='<'
            CRT @(53,10):CARRIER.REC<24>'D2/'
            GOTO 2180
         CASE QI=''
            IF CARRIER.REC<24>='' THEN CARRIER.REC<24>=DATE()
            Q=CARRIER.REC<24>
      END CASE
      CARRIER.REC<24>=Q
      CRT @(53,10):CARRIER.REC<24>'D2/'
      IF EDIT.FLAG THEN RETURN

*--------------------------------------------------------------------------
* Carrier's comments. Item 21.
*--------------------------------------------------------------------------
2210:
      GOSUB DISPLAY.CARRIER.COMMENT

      IF DISPLAY.MODE THEN
         HELP="<ENTER> to Return to the Main Screen."
         CALL GEN.IN(0,22,'Enter selection please ##','',Q,0,2,'','',2,-2,22,0,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI='' OR QI='X' OR QI='EX'
               NULL
            CASE 1
               CALL ELINE('Invalid Entry - View Only')
               GOTO 2210
         END CASE
      END ELSE
         FOR I=1 TO 8
            COMMENT=CARRIER.REC<45,I>'L#60'
            ROW=I+9
            HELP="Enter carrier comment. Line ":I:" ' '=Clear. ''=Accept."
            CRT @(10,ROW):I'R#2':'|':
            CALL GEN.IN(13,ROW,COMMENT,'',Q,0,60,'','',2,-60,ROW,0,QI,HELP,0,23)
            BEGIN CASE
               CASE QI=''
                  CRT @(10,ROW):I'R#2':'|':CARRIER.REC<45,I>'L#60':

               CASE QI=' '
                  FOR J=I TO 7
                     CARRIER.REC<45,J>=CARRIER.REC<45,J+1>
                  NEXT J
                  CARRIER.REC<45,8>=''
                  FOR J=I TO 8
                     CRT @(10,J+9):J'R#2':'|':CARRIER.REC<45,J>'L#60':
                  NEXT J
                  I=I-1

               CASE 1
                  CARRIER.REC<45,I>=Q
                  CRT @(10,ROW):I'R#2':'|':CARRIER.REC<45,I>'L#60':
            END CASE
         NEXT I
      END
      GOSUB REDRAW.DISPLAY
      IF EDIT.FLAG THEN RETURN

*--------------------------------------------------------------------------
* Pro Format. Item 22.
*--------------------------------------------------------------------------
2220:
      GOSUB PRO.NUMBER.SETUP
      GOSUB REDRAW.DISPLAY
      IF EDIT.FLAG THEN RETURN           ; * Are we editing? Or setting up a new
      IF DCOUNT(CARRIER.REC<47>,@VM) = 0 THEN
         CALL ELINE('You must specify a Pro Format for New Carriers')
         GOTO 2220
      END
      RETURN

*--------------------------------------------------------------------------
* Carrier XReference. Item 23.
*--------------------------------------------------------------------------
2230:
      *
      * Display Headers
      *
      GOSUB DSP.XREF.HDR
      IF DISPLAY.MODE THEN
         OPTIONS='EX':@VM:'X':@VM
         OPTIONS.HELP="<ENTER> to Return to the Main Screen"
      END ELSE
         OPTIONS='D':@VM:'A':@VM:'EX':@VM:'X':@VM
         OPTIONS.HELP="Choose [A]dd Carrier  [D]elete Carrier"
      END
      OPTIONS.MIN.NUM = 1 ; OPTIONS.MAX.NUM = 0

CXS.UPDATE:
      GOSUB DSP.XREF.LIST

CXS.1:
      GOSUB CHOOSE.OPTION
      BEGIN CASE
            *
            * DELETE - Remove an entry
            *
         CASE OPTION = 'D'
            IF XREF.LINES < 1 THEN
               CALL ELINE('No Entries to delete.')
            END ELSE
               AFN.MSG = "Select Entry to Delete :"
               AFN.MIN = 1
               AFN.MAX = XREF.LINES
               AFN.MASK = ''
               GOSUB ASK.FOR.NUM
               BEGIN CASE
                  CASE QI=''
                  CASE QI='EX'
                     EXIT.IT = TRUE
                  CASE QI='X'
                     RETURN.BACK = TRUE
                  CASE 1
                     * Delete the selected entry -
                     DEL XREF.LIST<1,AFN.ANSWER>   ; * Carrier ID..
                     DEL XREF.LIST<2,AFN.ANSWER>   ; * Name
                     DEL XREF.LIST<3,AFN.ANSWER>   ; * City
                     DEL XREF.LIST<4,AFN.ANSWER>   ; * State
                     XREF.LINES-=1
                     IF NOT(EXIT.IT) THEN GOTO CXS.UPDATE
               END CASE
            END
            *
            * ADD - Add an entry
            *
         CASE OPTION = 'A'
            IF XREF.LINES >= 15 THEN
               CALL ELINE('Maximum number of lines reached.')
            END ELSE
               XREF.ITEM.NUM = XREF.LINES+1
               XREF.CAR.ID = ''
               XREF.CAR.NAME = ''
               XREF.CAR.CITY = ''
               XREF.CAR.ST = ''
               GOSUB XREF.ADD.LINE
               GOTO CXS.UPDATE
            END
            *
            * X - Return to Carrier Main screen
            *
         CASE OPTION = '' OR OPTION='X'
            RETURN.BACK = TRUE
            *
            * EX - Exit Program
            *
         CASE OPTION = 'EX'
            EXIT.IT = TRUE
      END CASE

      *
      * Did anyone type EX anywhere? If so, fall out.
      *
      IF EXIT.IT THEN RETURN.BACK = TRUE
      IF NOT(RETURN.BACK) THEN GOTO CXS.1
      RETURN.BACK = 0
      GOSUB STORE.CARRIER.XREF
      GOSUB REDRAW.DISPLAY
      RETURN

*--------------------------------------------------------------------------
* Mode by weight (kd 4/21). Item 24.
* Changed (tbs 09/14/99)
*--------------------------------------------------------------------------
2240:
      VIN<1>=CARRIER.REC<70>
      VIN<2>=CARRIER.REC<71>
      VIN<3>=DISPLAY.MODE
      VIN<4>=CARRIER.REC<44>
      VIN<5>=CARRIER.ID
      VIN<6>=CARRIER.REC<1>
      CALL FB.1.2.MODE.BY.WEIGHT(VIN,VOUT,F.TRANSPORT)
      CARRIER.REC<70>=VOUT<1>
      CARRIER.REC<71>=VOUT<2>
      GOSUB REDRAW.DISPLAY
      RETURN

*--------------------------------------------------------------------------
* Toggle Status of Check Remittance Zip. Item 25.
* ENABLE/DISABLE (If Blank assume 'YES')
*--------------------------------------------------------------------------
2250:
      BEGIN CASE
         CASE CARRIER.REC<48>='Y'
            CARRIER.REC<48>='N'
         CASE 1
            CARRIER.REC<48>='Y'
      END CASE
      GOSUB 8100
      RETURN

*--------------------------------------------------------------------------
* Print Checks Flag - KD 5/25. Item 26.
*--------------------------------------------------------------------------
2260:
      HELP='Enter Y or N for check printing toggle'
      IF CARRIER.REC<59>#'' THEN
         MASK=CARRIER.REC<59>
      END ELSE
         MASK='Y'
      END
      IF CARRIER.REC<59>='N' THEN
         CRT @(0,20):"Reason: ":CARRIER.REC<60>:
      END
      CALL GEN.IN(17,19,MASK,'',Q,0,1,'','',0,17,19,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            IF CARRIER.REC<59>='N' THEN
               GO LOCK.REASON
            END ELSE
               IF CARRIER.REC<59>='' THEN
                  CARRIER.REC<59>='Y'
               END
               CRT @(17,19):CARRIER.REC<59>:
               RETURN
            END
         CASE QI='X'
            IF CARRIER.REC<59>='' THEN
               CARRIER.REC<59>='Y'
               CRT @(17,19):CARRIER.REC<59>:
            END
            RETURN
         CASE QI='EX'
            STOP
         CASE QI='N'
            IF CARRIER.REC<59>='N' ELSE
               CARRIER.REC<59>='N'
            END

LOCK.REASON:
            CRT @(17,19):CARRIER.REC<59>:
            CRT @(0,20):"Reason: ":CARRIER.REC<60>:
            IF CARRIER.REC<60>#'' THEN
               MASK=CARRIER.REC<60>
            END ELSE
               MASK=STR('-',72)
            END
            HELP="Please Enter a reason for no longer printing checks"
            CALL GEN.IN(8,20,MASK,'',Q,0,72,'','',0,8,20,1,QI,HELP,0,23)
            QI=OCONV(QI,'MCU')
            BEGIN CASE
               CASE QI=''
                  IF CARRIER.REC<60>='' THEN
                     CALL ELINE("Must have a reason if set to 'N'")
                     CRT @(0,20):@(-3):
                     GO 2260
                  END ELSE
                     CRT @(0,20):@(-3):
                     RETURN
                  END
               CASE QI='X'
                  CRT @(0,20):@(-3):
                  RETURN
               CASE QI='EX'
                  STOP
               CASE 1
                  CARRIER.REC<60>=Q
                  CRT @(0,20):@(-3)
                  RETURN
            END CASE
            RETURN
         CASE QI='Y'
            IF CARRIER.REC<59>='Y' THEN
               CRT @(17,19):CARRIER.REC<59>:
               CRT @(0,20):@(-3):
               RETURN
            END ELSE
               IF CARRIER.REC<59>='' THEN
                  CARRIER.REC<59>='Y'
                  CRT @(17,19):CARRIER.REC<59>:
                  CRT @(0,20):@(-3):
                  RETURN
               END
            END
            IF CARRIER.REC<59>='N' THEN
               IF USER='OWEN' OR USER='BRIAN' OR USER='KAREN' OR USER='MISSY' THEN
                  CARRIER.REC<59>='Y'
                  CRT @(17,19):CARRIER.REC<59>:
                  CRT @(0,20):@(-3):
                  CARRIER.REC<60>=''
                  RETURN
               END ELSE
                  CALL ELINE ("Call a manager - only managers may change this value back to 'Y'")
                  CRT @(17,19):CARRIER.REC<59>:
                  CRT @(0,20):@(-3):
                  RETURN
               END
            END
         CASE 1
            CALL ELINE("Invalid entry - must be EX, X, N, or Y")
            GO 2260
      END CASE
      RETURN

*--------------------------------------------------------------------------
* Email Addresses. Item 27.
*--------------------------------------------------------------------------
2270:
      CALL FB.1.2.EMAIL(CARRIER.REC,DISPLAY.MODE)
      GOSUB REDRAW.DISPLAY
      IF EDIT.FLAG THEN RETURN

*--------------------------------------------------------------------------
* Enter unique 4 letter-only SCAC (Standard Carrier Alpha Code). Item 28.
*--------------------------------------------------------------------------
2280:
      HELP="Enter unique 4 letter Standard Carrier Alpha Code. [L]=List [ENTER]=Skip"
      IF CARRIER.REC<12>='' THEN DVAR='----' ELSE DVAR=CARRIER.REC<12>
!     CALL GEN.IN(53,19,DVAR,'',Q,0,4,'','',2,53,19,0,QI,HELP,0,23) ; * JTW01
      CALL GEN.IN(53,18,DVAR,'',Q,0,4,'','',2,53,18,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=CARRIER.REC<12>
      IF QI='L' THEN
         EXECUTE 'SORT SCAC.XREF 1'
         CALL ELINE('')
         CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
         GOSUB 8000                      ; * Redisplay screen
         GOSUB 8100                      ; * Redisplay data
         GOTO 2280
      END
      IF QI#'' THEN
         IF (LEN(QI)#4) OR (NUM(QI)) OR (NOT(NUM(QI)) AND NOT(ALPHA(QI))) THEN
            CALL ELINE('Use exactly 4 letters with no other characters.')
            GOTO 2280
         END
         READ CARRIER.SCAC FROM F.SCAC,QI THEN
            IF CARRIER.SCAC<1>#CARRIER.ID THEN
               CALL ELINE('This code is already being used for Carrier ':CARRIER.SCAC<1>'L#5':'.')
               GOTO 2280
            END
         END
      END
      CARRIER.REC<12>=QI
!     CRT @(53,19):CARRIER.REC<12>'L#4':@(-4) ; * JTW01
      CRT @(53,18):CARRIER.REC<12>'L#4':@(-4)      ; * JTW01
      RETURN
*-----------------------------------------------------------------------
* Enter Status Flag; * JMK02
*-----------------------------------------------------------------------
2290:                                    ; * JMK02
      HELP="Enter Status Flag [A]ctive [I]nactive"           ; * JMK02
      IF CARRIER.REC<89>='' THEN DVAR='-' ELSE DVAR=CARRIER.REC<89>    ; * JMK02
!     CALL GEN.IN(53,20,DVAR,'',Q,0,4,'','',2,53,20,0,QI,HELP,0,23)    ; * JMK02
      CALL GEN.IN(53,19,DVAR,'',Q,0,4,'','',2,53,19,0,QI,HELP,0,23)    ; * JTW01
      QI=OCONV(QI,'MCU')                 ; * JMK02
      IF QI='' THEN QI=CARRIER.REC<89>   ; * JMK02
      IF QI#'A' AND QI#'I' THEN          ; * JMK02
         CALL ELINE('Enter "A" or "I" only.')      ; * JMK02
         GO 2290                         ; * JMK02
      END                                ; * JMK02
      CARRIER.REC<89>=QI                 ; * JMK02
!     CRT @(53,20):CARRIER.REC<89>'L#2':@(-4)      ; * JMK02
      CRT @(53,19):CARRIER.REC<89>'L#2':@(-4)      ; * JTW01
      RETURN                             ; * JMK02

*-----------------------------------------------------------------------
* Enter ACH; * JTW01
*-----------------------------------------------------------------------
2300:                                    ; * JTW01
      CALL FB.CARRIER.ACH(CARRIER.ID,CARRIER.REC)   ; * JTW01
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1) ; *JTW01
      GOSUB 8000 ; * JTW01
      GOSUB 8100 ; * JTW01
      RETURN

STORE.CARRIER.XREF:
      CARRIER.REC<28> = XREF.LIST<1>
      RETURN

*--------------------------------------------------------------------------
* UPDATE.XREF.CARRIERS
*
* The Carrier XREF LISTING is updated BEFORE the saving of the carrier record
*
* NOTE: If you edit carrier 'X' and delete all the XRef carriers then all of
* the other carriers will have their xref carriers removed.  Owen knows this.
*
* If you remove carrier 'B', the carrier 'B' no longer has ANY connections
* to the rest of the XREF carriers.
*
*--------------------------------------------------------------------------
UPDATE.XREF.CARRIERS:
      *
      * Remove the XREF list from carriers which have been removed from
      * the XREF listing
      *
      T.REMOVED.CARRIERS=''
      T.NUM.ENTRIES = DCOUNT(OLD.XREF.LIST<1>,@VM)
      FOR X = 1 TO T.NUM.ENTRIES
         T.CAR.ID = OLD.XREF.LIST<1,X>'R%5'
         LOCATE T.CAR.ID IN XREF.LIST<1> SETTING WHERE ELSE
            T.REMOVED.CARRIERS<-1>=T.CAR.ID
UXC.10:
            READU T.CAR.REC FROM F.CARRIERS,T.CAR.ID LOCKED
               FIND.LOCKED.NAME = T.CAR.ID
               GOSUB FIND.LOCKED
               GOTO UXC.10
            END ELSE
               CALL ELINE("UPDATE.XREF.CARRIERS: Unable to Read Carrier ":T.CAR.ID:". Call Programming!!!.")
               GOTO UXC.10
            END
            T.CAR.REC<28> = ''           ; * Clear this carrier from the XRef
UXC.11:
            WRITE T.CAR.REC ON F.CARRIERS,T.CAR.ID ELSE
               CALL ELINE("UPDATE.XREF.CARRIERS: Unable to Write to carrier ":T.CAR.ID:". Call Programming!!!.")
               GOTO UXC.11
            END
         END
      NEXT X
      *
      * Remove the XREF list from carriers which have been removed from
      * the XREF listing
      *
      T.NUM.ENTRIES = DCOUNT(XREF.LIST<1>,@VM)
      T.CURRENT.ID = CARRIER.ID'R%5'
      FOR X = 1 TO T.NUM.ENTRIES
         T.CAR.ID = XREF.LIST<1,X>'R%5'
         T.WORK.LIST = XREF.LIST<1>
         LOCATE T.CURRENT.ID IN T.WORK.LIST<1> BY 'AR' SETTING POS ELSE
            INS T.CURRENT.ID BEFORE T.WORK.LIST<1,POS>
         END
UXC.20:
         READU T.CAR.REC FROM F.CARRIERS,T.CAR.ID LOCKED
            FIND.LOCKED.NAME = T.CAR.ID
            GOSUB FIND.LOCKED
            GOTO UXC.20
         END ELSE
            CALL ELINE("UPDATE.XREF.CARRIERS: Unable to Read Carrier ":T.CAR.ID:". Call Programming!!!")
            GOTO UXC.20
         END
         *
         * Remove the current carrier number from the carrier list
         *
         LOCATE T.CAR.ID IN T.WORK.LIST<1> SETTING WHERE THEN
            DEL T.WORK.LIST<1,WHERE>
         END
         T.CAR.REC<28> = T.WORK.LIST
UXC.21:
         WRITE T.CAR.REC ON F.CARRIERS,T.CAR.ID ELSE
            CALL ELINE("UPDATE.XREF.CARRIERS: Unable to Write to carrier ":T.CAR.ID:". Call Programming!!!")
            GOTO UXC.21
         END
      NEXT X

      RETURN

*--------------------------------------------------------------------------
*
*--------------------------------------------------------------------------
BUILD.CARRIER.XREF:
      *
      * XREF.LIST<1,X> = CARRIER.ID
      * XREF.LIST<2,X> = CARRIER.NAME
      * XREF.LIST<3,X> = CARRIER.CITY
      * XREF.LIST<4,X> = CARRIER.ST
      *
      XREF.LIST = ''
      T.POS = 1
      LOOP
      WHILE (T.POS <= DCOUNT(T.CARRIERS<1>,@VM))
         T.CAR.ID = T.CARRIERS<1,T.POS>'R%5'
BCX.10:
         READ T.CAR.REC FROM F.CARRIERS,T.CAR.ID ELSE
            CALL ELINE("Carrier ":T.CAR.ID:" no longer exists!")
            T.CAR.REC=''
         END
         T.COUNT = DCOUNT(T.CAR.REC<28>,@VM)
         FOR X = 1 TO T.COUNT
            T.CAR.ID2 = T.CAR.REC<28,X>'R%5'
            IF T.CAR.ID2 # CARRIER.ID THEN
               LOCATE T.CAR.ID2 IN T.CARRIERS<1> SETTING WHERE ELSE T.CARRIERS<1,-1>=T.CAR.ID2
            END
         NEXT
         XREF.LIST<1,T.POS> = T.CAR.ID   ; * ID
         XREF.LIST<2,T.POS> = T.CAR.REC<1>         ; * NAME
         XREF.LIST<3,T.POS> = T.CAR.REC<3>         ; * CITY
         XREF.LIST<4,T.POS> = T.CAR.REC<4>         ; * STATE
         T.POS+=1
      REPEAT

      XREF.LINES=DCOUNT(XREF.LIST<1>,@VM)
      *
      * Sort our list
      *
      T.XREF.LIST=''
      FOR X = 1 TO XREF.LINES
         LOCATE XREF.LIST<1,X> IN T.XREF.LIST<1> BY 'AR' SETTING POS ELSE
            INS XREF.LIST<1,X> BEFORE T.XREF.LIST<1,POS>
            INS XREF.LIST<2,X> BEFORE T.XREF.LIST<2,POS>
            INS XREF.LIST<3,X> BEFORE T.XREF.LIST<3,POS>
            INS XREF.LIST<4,X> BEFORE T.XREF.LIST<4,POS>
         END
      NEXT X

      XREF.LIST = T.XREF.LIST

      RETURN

*--------------------------------------------------------------------------
*
*--------------------------------------------------------------------------
XREF.ADD.LINE:

      XREF.Y.POS = XREF.ITEM.NUM+6
      FAILURE = ''

      IF XREF.CAR.ID THEN
         MASK = XREF.CAR.ID'R%5'
      END ELSE
         MASK = '#####'
      END
      HELP = "Enter the carrier number.  [N]ext [X]=Back [EX]it"
      CALL GEN.IN(4,XREF.Y.POS,MASK,'',Q,0,20,'','',2,4,XREF.Y.POS,1,QI,HELP,0,23)
      IF QI='' THEN QI=XREF.CAR.ID
      QI = TRIM(OCONV(QI,'MCU'))

      BEGIN CASE
         CASE QI = 'N'
            DONE = 0
            READVU X FROM F.DICT,'NEXT',1 ELSE X = 0
            LOOP
            UNTIL DONE DO
               X = X+1
               READ DUMMY FROM F.CARRIERS,X'R%5' ELSE DONE = 1
            REPEAT

         CASE QI='X'
            FAILURE = TRUE

         CASE QI='EX'
            FAILURE = TRUE
            EXIT.IT = TRUE

         CASE NOT(QI MATCHES "0N")
            CALL SOUNDEX.DISPLAY(QI,'CARRIERS','SDX.CARRIER,NAME','1,3,4',ITEM.LIST)
            BEGIN CASE
               CASE ITEM.LIST = ''
                  GOSUB DSP.XREF.HDR
                  GOSUB DSP.XREF.LIST
                  GOTO XREF.ADD.LINE     ; * ENTER CARRIER
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                  GOSUB DSP.XREF.HDR
                  GOSUB DSP.XREF.LIST
                  GOTO XREF.ADD.LINE     ; * ENTER CARRIER
               CASE ITEM.LIST # ''
                  IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
                  GOSUB DSP.XREF.HDR
                  GOSUB DSP.XREF.LIST
                  GOTO XREF.ADD.LINE     ; * ENTER CARRIER
            END CASE

         CASE QI=''
            FAILURE = TRUE

         CASE NUM(QI)
            T.CAR.ID = Q'R%5'
            T.CAR.REC = ''

            IF T.CAR.ID = CARRIER.ID THEN
               CALL ELINE('ERROR - Carrier # ':T.CAR.ID:' is the current carrier you are editing!')
               GOTO XREF.ADD.LINE        ; * ENTER CARRIER
            END

            LOCATE T.CAR.ID IN XREF.LIST<1> SETTING WHERE THEN
               CALL ELINE('Carrier ':T.CAR.ID:' is already listed.  Please try again.')
               GOTO XREF.ADD.LINE
            END
XAL.10:
            READ T.CAR.REC FROM F.CARRIERS,T.CAR.ID ELSE
               CALL ELINE("Carrier ":T.CAR.ID:" not a valid carrier number. Please try again.")
               GOTO XREF.ADD.LINE
            END

            XREF.LIST<1,XREF.ITEM.NUM> = T.CAR.ID  ; * ID
            T.CARRIERS<1> = XREF.LIST<1>
            GOSUB BUILD.CARRIER.XREF

         CASE 1
            GOTO XREF.ADD.LINE
      END CASE

      RETURN

*--------------------------------------------------------------------------
* DSP.XREF.LIST
*--------------------------------------------------------------------------
DSP.XREF.LIST:

      LINES=DCOUNT(XREF.LIST<1>,@VM)
      T.OLD = XREF.ITEM.NUM
      FOR X = 1 TO 15
         XREF.Y.POS = X+6
         IF X <= LINES THEN
            XREF.ITEM.NUM = X
            GOSUB DSP.XREF.LINE
         END ELSE
            CRT @(0,XREF.Y.POS):@(-4)
         END
      NEXT X
      XREF.ITEM.NUM=T.OLD

      RETURN

*--------------------------------------------------------------------------
* DSP.XREF.LINE
*--------------------------------------------------------------------------
DSP.XREF.LINE:

      LINE = XREF.ITEM.NUM'R%2'
      LINE:= '  '
      LINE:= XREF.LIST<1,XREF.ITEM.NUM>'R%5'
      LINE:= '  '
      LINE:= XREF.LIST<2,XREF.ITEM.NUM>'L#25'
      LINE:= '  '
      LINE:= XREF.LIST<3,XREF.ITEM.NUM>'L#20'
      LINE:= '  '
      LINE:= XREF.LIST<4,XREF.ITEM.NUM>'L#2'
      CRT @(0,XREF.Y.POS):LINE

      RETURN

*--------------------------------------------------------------------------
*
*--------------------------------------------------------------------------
DSP.XREF.HDR:
      CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)

      CRT @(0,2):STR('=',79):
      CRT @(0,3):'CARRIER: (':CARRIER.ID'R%5':'), ':CARRIER.REC<1>:' (':CARRIER.REC<3>:', ':CARRIER.REC<4>:')':@(-4)
      CRT @(0,4):STR('-',79):

      LINE1 ='##'
      LINE1:= SPACE(2)
      LINE1:= ' ID  '
      LINE1:= SPACE(2)
      LINE1:= 'Carrier Name''L#25'
      LINE1:= SPACE(2)
      LINE1:= 'City''L#20'
      LINE1:= SPACE(2)
      LINE1:= 'ST'

      LINE2 = '--'
      LINE2:= SPACE(2)
      LINE2:= STR('-',5)
      LINE2:= SPACE(2)
      LINE2:= STR('-',25)
      LINE2:= SPACE(2)
      LINE2:= STR('-',20)
      LINE2:= SPACE(2)
      LINE2:= '--'

      CRT @(0,5):LINE1:
      CRT @(0,6):LINE2:

      RETURN

*--------------------------------------------------------------------------
* Pro Number and Check Digit setup screen
*--------------------------------------------------------------------------
PRO.NUMBER.SETUP:

      RETURN.BACK = 0
      CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      GOSUB DSP.PNS.HDR
      IF DISPLAY.MODE THEN
         OPTIONS='EX':@VM:'X':@VM
         OPTIONS.HELP="<ENTER> to Return to the Main Screen."
      END ELSE
         IF CARRIER.REC<63>='LOCK' AND NOT(DBCTRL<6>) THEN
            OPTIONS='EX':@VM:'X':@VM
            OPTIONS.HELP="<ENTER> to Return to the Main Screen."
         END ELSE
            OPTIONS='A':@VM:'D':@VM:'EX':@VM:'X':@VM
            OPTIONS.HELP="Enter the Line Number to change or [A]dd a new line [D]elete a line"
         END
      END

PNS.UPDATE:
      GOSUB DSP.PNS.LIST                 ; * Inits PNS.LINES
      IF DISPLAY.MODE THEN
         OPTIONS.MIN.NUM = 1
         OPTIONS.MAX.NUM = 0
      END ELSE
         IF CARRIER.REC<63>='LOCK' AND NOT(DBCTRL<6>) THEN
            OPTIONS.MIN.NUM = 1
            OPTIONS.MAX.NUM = 0
         END ELSE
            OPTIONS.MIN.NUM = 1
            OPTIONS.MAX.NUM = PNS.LINES
         END
      END

PNS.1:

      GOSUB CHOOSE.OPTION
      BEGIN CASE
            *
            * DELETE - Remove an entry
            *
         CASE OPTION = 'D'
            AFN.MSG = "Select Entry to Delete :"
            AFN.MIN = 1
            AFN.MAX = PNS.LINES
            AFN.MASK = ''
            GOSUB ASK.FOR.NUM
            BEGIN CASE
               CASE QI=''
               CASE QI='EX'
                  EXIT.IT = TRUE
               CASE QI='X'
                  RETURN.BACK = TRUE
               CASE 1
                  PNS.DEL.LINE = AFN.ANSWER
                  GOSUB PNS.DELETE.ENTRY
                  IF NOT(EXIT.IT) THEN GOTO PNS.UPDATE
            END CASE
            *
            * ADD - Add an entry
            *
         CASE OPTION = 'A'
            IF PNS.LINES >= 8 THEN
               CALL ELINE('Maximum number of lines reached.')
            END ELSE
               PNS.ITEM.NUM = PNS.LINES+1
               GOSUB PNS.EDIT.LINE
               IF FAILURE THEN
                  GOTO PNS.UPDATE
               END ELSE
                  PNS.LINES+=1
                  GOSUB DSP.PNS.LINE
               END
            END
            *
            * X - Return to Carrier Main screen
            *
         CASE OPTION = '' OR OPTION='X'
            RETURN.BACK = TRUE
            *
            * EX - Exit Program
            *
         CASE OPTION = 'EX'
            EXIT.IT = TRUE
            *
            * EDIT - Edit Line
            *
         CASE NUM(OPTION)
            IF OPTION > 0 AND OPTION <= PNS.LINES THEN
               PNS.ITEM.NUM = OPTION
               GOSUB PNS.EDIT.LINE
               GOSUB DSP.PNS.LINE
            END ELSE
               CALL ELINE('Line number out of range - Please select from the above list.')
            END
      END CASE

      IF EXIT.IT THEN RETURN.BACK = TRUE
      IF NOT(RETURN.BACK) THEN GOTO PNS.1
      RETURN.BACK = 0
      RETURN

*--------------------------------------------------------------------------
* CHOOSE.OPTION
*--------------------------------------------------------------------------
CHOOSE.OPTION:
      NUM.OPTIONS = DCOUNT(OPTIONS,@VM)
PCO.1:
      CRT @(0,22):'Option: ':@(-4)
      MASK = ''
      CALL GEN.IN(8,22,MASK,'',Q,0,3,'','',2,8,22,0,QI,OPTIONS.HELP,0,23)

      QI=TRIM(OCONV(QI,"MCU"))
      NQI = NUM(QI)
      LOCATE QI IN OPTIONS<1>,1 SETTING LQI ELSE LQI = 0
      BEGIN CASE
         CASE LQI > 0
         CASE QI=''
         CASE NQI >= OPTIONS.MIN.NUM AND NQI <= OPTIONS.MAX.NUM
         CASE 1
            IF DISPLAY.MODE THEN
               CALL ELINE('Invalid Option - View Only')
            END ELSE
               IF CARRIER.REC<63>='LOCK' AND NOT(DBCTRL<6>) THEN
                  CALL ELINE('Invalid Options - Pro Number Locked - No Changes - See Programming')
               END ELSE
                  CALL ELINE('Invalid Option.  Please try again')
               END
            END
            GOTO PCO.1
      END CASE
      OPTION = QI
      RETURN

*--------------------------------------------------------------------------
*
*--------------------------------------------------------------------------
PNS.DELETE.ENTRY:
      *
      * Delete the selected entry -
      *
      * PROGRAMMER WARNING!  Be aware that if you delete the line that
      * you have currently initialized then they will be reloaded with the
      * new line.
      *
      DEL CARRIER.REC<51,PNS.DEL.LINE>
      DEL CARRIER.REC<47,PNS.DEL.LINE>
      DEL CARRIER.REC<52,PNS.DEL.LINE>
      DEL CARRIER.REC<53,PNS.DEL.LINE>
      DEL CARRIER.REC<54,PNS.DEL.LINE>
      DEL CARRIER.REC<55,PNS.DEL.LINE>
      DEL CARRIER.REC<56,PNS.DEL.LINE>
      DEL CARRIER.REC<57,PNS.DEL.LINE>
      DEL CARRIER.REC<58,PNS.DEL.LINE>
      DEL CARRIER.REC<61,PNS.DEL.LINE>
      DEL CARRIER.REC<62,PNS.DEL.LINE>
      *
      * Did the user delete on the current line/entry?
      *
      IF PNS.DEL.LINE = PNS.ITEM.NUM THEN
         PNS.LINES-=1
         IF PNS.ITEM.NUM > PNS.LINES THEN PNS.ITEM.NUM = PNS.LINES
         GOSUB INIT.PNS.LINE
      END
      RETURN

*--------------------------------------------------------------------------
*
*--------------------------------------------------------------------------
DSP.PNS.LIST:
      PNS.LINES=DCOUNT(CARRIER.REC<47>,@VM)
      FOR X = 1 TO 8
         PNS.Y.POS = X*2+4
         IF X <= PNS.LINES THEN
            PNS.ITEM.NUM = X
            GOSUB INIT.PNS.LINE
            GOSUB DSP.PNS.LINE
         END ELSE
            CRT @(0,PNS.Y.POS):@(-4)
            CRT @(0,PNS.Y.POS+1):@(-4)
         END
      NEXT X
      RETURN

*--------------------------------------------------------------------------
*
*--------------------------------------------------------------------------
PNS.EDIT.LINE:
      *
      * This assumes that the local variables have
      * already been loaded for this entry to edit
      *
      PNS.Y.POS = PNS.ITEM.NUM*2+4
      FAILURE = 0
      GOSUB INIT.PNS.LINE
      GOSUB DSP.PNS.LINE
      CRT @(0,22):@(-4)

      *---------------------------
      * Mask Active Flag
      *---------------------------
PEL.ACT:
*     HELP="Enter [Y]es this format is active or [N]o for Inactive/Disabled."    ; * JMK01
      HELP="Enter [Y] for active, [N] for inactive or [L] for lookup only."      ; * JMK01
      BACK = 0
PEL.ACT.1:
      MASK = MASK.ACTIVE'L#3'
      CALL GEN.IN(3,PNS.Y.POS,MASK,'',Q,0,3,'','',2,3,PNS.Y.POS,0,QI,HELP,0,23)
      IF QI='' THEN QI=MASK
      QI=TRIM(OCONV(QI,"MCU"))
      BEGIN CASE
         CASE QI='X' OR QI=''
            FAILURE = 1
            RETURN
         CASE QI='EX'
            FAILURE = 1
            EXIT.IT = 1
            RETURN
         CASE QI='Y' OR QI='YES' OR QI='1'
            MASK.ACTIVE = 'Y'
            MASK.ACTIVE.STR = 'Yes'
         CASE QI='L' OR QI='LOOK'
            MASK.ACTIVE='L'
            MASK.ACTIVE.STR='Lkp'
         CASE QI='N' OR QI='NO' OR QI='0'
            MASK.ACTIVE = 'N'
            MASK.ACTIVE.STR = 'No'
         CASE 1
            CALL ELINE('Invalid Option.  Please try again')
            GOTO PEL.ACT.1
      END CASE
      CRT @(3,PNS.Y.POS):MASK.ACTIVE.STR'L#3'

      *---------------------------
      * Pro Mask Entry Routine
      *---------------------------
PEL.MASK:
*   HELP="Enter the mask for the pro number."
      HELP="Enter Mask, Samples: NNNN=4N, NN-NNN=2N'-'3N, NNNAANN=3N2A2N"
      BACK = 0
PEL.MASK.1:
      MASK = PRO.FORMAT:' '
      CALL GEN.IN(7,PNS.Y.POS,MASK,'',Q,0,18,'','',2,7,PNS.Y.POS,0,QI,HELP,0,23)
      IF QI='' THEN QI=MASK
      IF INDEX(QI,'-',1) THEN
         IF INDEX(QI,"'",1)=0 THEN
            CALL ELINE("Cannot Contain a dash and not a single quote")
            GO PEL.MASK.1
         END
      END
      QI=TRIM(OCONV(QI,"MCU"))
      BEGIN CASE
         CASE QI='X'
            BACK = 1
         CASE QI='EX'
            FAILURE = 1
            EXIT.IT = 1
            RETURN
         CASE QI#''
            T.PRO.FORMAT = QI
            VIN=T.PRO.FORMAT
            CALL MASK(VIN,VOUT)
            IF VOUT<1>='' THEN GOTO PEL.MASK
            PRO.EXAMPLE = VOUT<1>
            PRO.FORMAT = T.PRO.FORMAT
            PRO.NUM.LINE = NUM.LINE[1,LEN(PRO.EXAMPLE)]
         CASE 1
            CALL ELINE('Invalid Option.  Please try again')
            GOTO PEL.MASK.1
      END CASE
      CRT @(7,PNS.Y.POS):PRO.FORMAT'L#18'
      CRT @(26,PNS.Y.POS):PRO.EXAMPLE'L#18'
      CRT @(26,PNS.Y.POS+1):PRO.NUM.LINE'L#18'
      IF BACK THEN GOTO PEL.ACT

      *---------------------------
      * Check Digit YN
      *---------------------------
PEL.YN:
      HELP="Enter [Y]es there is a check digit in the format or [N]o Check Digit."
      BACK = 0
PEL.YN.1:
      MASK = CHECK.DIG.ACTIVE:' '
      CALL GEN.IN(45,PNS.Y.POS,MASK,'',Q,0,2,'','',2,45,PNS.Y.POS,0,QI,HELP,0,23)
      IF QI='' THEN QI=MASK
      QI=TRIM(OCONV(QI,"MCU"))
      BEGIN CASE
         CASE QI='X'
            BACK = 1
         CASE QI='EX'
            FAILURE = 1
            EXIT.IT = 1
            RETURN
         CASE QI='Y' OR QI='N'
            CHECK.DIG.ACTIVE = QI
         CASE 1
            CALL ELINE('Invalid Option.  Please try again')
            GOTO PEL.YN.1
      END CASE
      CRT @(45,PNS.Y.POS):CHECK.DIG.ACTIVE
      IF BACK THEN GOTO PEL.MASK
      IF CHECK.DIG.ACTIVE = 'N' THEN GOTO PEL.OLD.BEG

      *---------------------------
      * Check Digit Pos
      *---------------------------
PEL.POS:
      HELP="Enter the character position of the Check Digit. Values are 1-":PRO.NUM.LINE[LEN(PRO.EXAMPLE),1]
      BACK = 0
PEL.POS.1:
      MASK = CHECK.DIG.POS.STR:' '
      CALL GEN.IN(49,PNS.Y.POS,MASK,'',Q,0,2,'','',2,49,PNS.Y.POS,0,QI,HELP,0,23)
      IF QI='' THEN QI=MASK
      QI=TRIM(OCONV(QI,"MCU"))
      IF QI='' THEN DIG.POS = 0 ELSE DIG.POS = INDEX(PRO.NUM.LINE,QI,1)
      BEGIN CASE
         CASE QI='X'
            BACK = 1
         CASE QI='EX'
            FAILURE = 1
            EXIT.IT = 1
            RETURN
         CASE DIG.POS > 0
            CHECK.DIG.POS = DIG.POS
            CHECK.DIG.POS.STR=NUM.LINE[CHECK.DIG.POS,1]
         CASE 1
            CALL ELINE('Invalid Option.  Try Again.')
            GOTO PEL.POS.1
      END CASE
      CRT @(49,PNS.Y.POS):CHECK.DIG.POS.STR
      IF BACK THEN GOTO PEL.YN

      *---------------------------
      * Seed Beg Digit (starting)
      *---------------------------
PEL.SEED.BEG:
      HELP="Enter the starting character position that the Check Digit is calculated from"
      BACK = 0
PEL.SEED.BEG.1:
      MASK = SEED.BEG.POS.STR:' '
      CALL GEN.IN(52,PNS.Y.POS,MASK,'',Q,0,2,'','',2,52,PNS.Y.POS,0,QI,HELP,0,23)
      IF QI='' THEN QI=MASK
      QI=TRIM(OCONV(QI,"MCU"))
      IF QI='' THEN BEG.POS = 0 ELSE BEG.POS = INDEX(PRO.NUM.LINE,QI,1)
      BEGIN CASE
         CASE QI='X'
            BACK = 1
         CASE QI='EX'
            FAILURE = 1
            EXIT.IT = 1
            RETURN
         CASE BEG.POS = CHECK.DIG.POS
            CALL ELINE('Beginning Position can not contain the Check Digit.  Please try again' )
            GOTO PEL.SEED.BEG.1
         CASE BEG.POS > 0
            SEED.BEG.POS = BEG.POS
            SEED.BEG.POS.STR=NUM.LINE[SEED.BEG.POS,1]
         CASE 1
            CALL ELINE('Invalid Option.  Try Again')
            GOTO PEL.SEED.BEG.1
      END CASE
      CRT @(52,PNS.Y.POS):SEED.BEG.POS.STR
      IF BACK THEN GOTO PEL.POS

      *---------------------------
      * Seed End Digit (ending)
      *---------------------------
PEL.SEED.END:
      HELP="Enter the ending character position that the Check Digit is calculated from"
      BACK = 0
PEL.SEED.END.1:
      MASK = SEED.END.POS.STR:' '
      CALL GEN.IN(54,PNS.Y.POS,MASK,'',Q,0,2,'','',2,54,PNS.Y.POS,0,QI,HELP,0,23)
      IF QI='' THEN QI=MASK
      QI=TRIM(OCONV(QI,"MCU"))
      IF QI='' THEN END.POS = 0 ELSE END.POS = INDEX(PRO.NUM.LINE,QI,1)
      BEGIN CASE
         CASE QI='X'
            BACK = 1
         CASE QI='EX'
            FAILURE = 1
            EXIT.IT = 1
            RETURN
         CASE END.POS > 0
            BEGIN CASE
               CASE END.POS<SEED.BEG.POS
                  CALL ELINE('Invalid Entry!  Ending Position is before the Starting Position')
                  GOTO PEL.SEED.END.1
               CASE SEED.BEG.POS <= CHECK.DIG.POS AND END.POS >= CHECK.DIG.POS
                  CALL ELINE('Ending Position can not contain the Check Digit.  Please try again' )
                  GOTO PEL.SEED.END.1
               CASE 1
                  SEED.END.POS = END.POS
                  SEED.END.POS.STR=NUM.LINE[SEED.END.POS,1]
            END CASE
         CASE 1
            CALL ELINE('Invalid Option.  Try Again')
            GOTO PEL.SEED.END.1
      END CASE
      CRT @(54,PNS.Y.POS):SEED.END.POS.STR
      IF BACK THEN GOTO PEL.SEED.BEG

      *---------------------------
      * Method Selection
      *---------------------------
PEL.METHOD:
      HELP="Enter the Calculation method to use to determine the Check Digit."
      BACK = 0
PEL.METHOD.1:
      CRT @(0,22):'METHODS AVAIL :':CHANGE(METHODS.AVAIL,@VM,' ')
      MASK = METHOD.STR:' '
      CALL GEN.IN(57,PNS.Y.POS,MASK,'',Q,0,6,'','',2,57,PNS.Y.POS,0,QI,HELP,0,23)
      IF QI='' THEN QI=MASK
      QI=TRIM(OCONV(QI,"MCU"))
      LOCATE QI IN METHODS.AVAIL<1> SETTING METHOD.POS ELSE METHOD.POS = 0
      BEGIN CASE
         CASE QI='X'
            BACK = 1
         CASE QI='EX'
            FAILURE = 1
            EXIT.IT = 1
            RETURN
         CASE METHOD.POS > 0
            METHOD.STR = METHODS.AVAIL<1,METHOD.POS>
         CASE 1
            CALL ELINE('Invalid Option.  Try Again')
            GOTO PEL.METHOD.1
      END CASE
      CRT @(57,PNS.Y.POS):METHOD.STR
      CRT @(0,22):@(-4)
      IF BACK THEN GOTO PEL.SEED.END

      *---------------------------
      * Old Beg Digit (starting)
      *---------------------------
PEL.OLD.BEG:
      HELP="Enter the range of characters to use when looking up an old style pro number."
      BACK = 0
PEL.OLD.BEG.1:
      MASK = OLD.BEG.POS.STR:' '
      CALL GEN.IN(68,PNS.Y.POS,MASK,'',Q,0,2,'','',2,68,PNS.Y.POS,0,QI,HELP,0,23)
      IF QI='' THEN QI=MASK
      QI=TRIM(OCONV(QI,"MCU"))
      IF QI='' THEN BEG.POS = 0 ELSE BEG.POS = INDEX(PRO.NUM.LINE,QI,1)
      BEGIN CASE
         CASE QI='X'
            BACK = 1
         CASE QI='EX'
            FAILURE = 1
            EXIT.IT = 1
            RETURN
         CASE QI = ''
            OLD.BEG.POS=''
            OLD.BEG.POS.STR=''
         CASE BEG.POS > 0
            OLD.BEG.POS = BEG.POS
            OLD.BEG.POS.STR=NUM.LINE[OLD.BEG.POS,1]
         CASE 1
            CALL ELINE('Invalid Option.  Try Again')
            GOTO PEL.OLD.BEG.1
      END CASE
      CRT @(68,PNS.Y.POS):OLD.BEG.POS.STR
      IF BACK THEN
         BEGIN CASE
            CASE CHECK.DIG.ACTIVE = 'N'
               GOTO PEL.YN
            CASE 1
               GOTO PEL.METHOD
         END CASE
      END

      *---------------------------
      * Old End Digit (ending)
      *---------------------------
PEL.OLD.END:
      HELP="Enter the range of characters to use when looking up an old style pro number."
      BACK = 0
PEL.OLD.END.1:
      MASK = OLD.END.POS.STR:' '
      CALL GEN.IN(72,PNS.Y.POS,MASK,'',Q,0,2,'','',2,72,PNS.Y.POS,0,QI,HELP,0,23)
      IF QI='' THEN QI=MASK
      QI=TRIM(OCONV(QI,"MCU"))
      IF QI='' THEN END.POS = 0 ELSE END.POS=INDEX(PRO.NUM.LINE,QI,1)
      BEGIN CASE
         CASE QI='X'
            BACK = 1
         CASE QI='EX'
            FAILURE = 1
            EXIT.IT = 1
            RETURN
         CASE QI=''
            OLD.END.POS=''
            OLD.END.POS.STR=''

         CASE END.POS>0
            BEGIN CASE
               CASE END.POS<OLD.BEG.POS
                  CALL ELINE('Invalid Entry!  Ending Position is before the Starting Position')
                  GOTO PEL.OLD.END.1
               CASE BEG.POS = 1 AND END.POS = LEN(PRO.NUM.LINE)
                  CALL ELINE('Error! The Old Pro range you entered covers the entire pro number!')
                  GOTO PEL.OLD.END.1
               CASE 1
                  OLD.END.POS= END.POS
                  OLD.END.POS.STR=NUM.LINE[OLD.END.POS,1]
            END CASE
         CASE 1
            CALL ELINE('Invalid Option.  Try Again')
            GOTO PEL.OLD.END.1
      END CASE
      CRT @(72,PNS.Y.POS):OLD.END.POS.STR
      IF BACK THEN GOTO PEL.OLD.BEG

      GOSUB STORE.PNS.LINE

      RETURN

*--------------------------------------------------------------------------
*
*--------------------------------------------------------------------------
INIT.PNS.LINE:
      MASK.ACTIVE=CARRIER.REC<51,PNS.ITEM.NUM>
      BEGIN CASE
         CASE MASK.ACTIVE='Y'
            MASK.ACTIVE.STR='Yes'
         CASE MASK.ACTIVE='N'
            MASK.ACTIVE.STR='No'
         CASE MASK.ACTIVE='L'
            MASK.ACTIVE.STR='Lkp'
         CASE 1
            MASK.ACTIVE.STR='???'
      END CASE
      PRO.FORMAT=CARRIER.REC<47,PNS.ITEM.NUM>
      VIN=PRO.FORMAT
      CALL MASK(VIN,VOUT)
      PRO.EXAMPLE=VOUT<1>[1,16]          ; * Trim to size - Just in case!
      PRO.NUM.LINE = NUM.LINE[1,LEN(PRO.EXAMPLE)]
      CHECK.DIG.ACTIVE =CARRIER.REC<52,PNS.ITEM.NUM>
      CHECK.DIG.POS =CARRIER.REC<53,PNS.ITEM.NUM>
      SEED.BEG.POS =CARRIER.REC<54,PNS.ITEM.NUM>
      SEED.END.POS =CARRIER.REC<55,PNS.ITEM.NUM>
      METHOD.STR =CARRIER.REC<56,PNS.ITEM.NUM>
      OLD.BEG.POS =CARRIER.REC<57,PNS.ITEM.NUM>
      OLD.END.POS =CARRIER.REC<58,PNS.ITEM.NUM>

      *
      * The following lines were added to support older
      * proformat setup entries.
      *
      IF CHECK.DIG.POS='' THEN
         CHECK.DIG.POS.STR=''
      END ELSE
         CHECK.DIG.POS.STR=NUM.LINE[CHECK.DIG.POS,1]
      END

      IF SEED.BEG.POS='' THEN
         SEED.BEG.POS.STR=''
      END ELSE
         SEED.BEG.POS.STR=NUM.LINE[SEED.BEG.POS,1]
      END

      IF SEED.END.POS='' THEN
         SEED.END.POS.STR=''
      END ELSE
         SEED.END.POS.STR=NUM.LINE[SEED.END.POS,1]
      END

      IF OLD.BEG.POS='' THEN
         OLD.BEG.POS.STR=''
      END ELSE
         OLD.BEG.POS.STR=NUM.LINE[OLD.BEG.POS,1]
      END

      IF OLD.END.POS='' THEN
         OLD.END.POS.STR=''
      END ELSE
         OLD.END.POS.STR=NUM.LINE[OLD.END.POS,1]
      END

      IF PRO.FORMAT # '' AND MASK.ACTIVE = '' THEN
         MASK.ACTIVE ='Y'
         CARRIER.REC<51,PNS.ITEM.NUM>='Y'
      END

      IF CHECK.DIG.ACTIVE='' THEN
         CHECK.DIG.ACTIVE = 'N'
         CARRIER.REC<52,PNS.ITEM.NUM> = 'N'
      END
      RETURN

*--------------------------------------------------------------------------
*
*--------------------------------------------------------------------------
STORE.PNS.LINE:
      CHANGE.FLAG=0
      IF CARRIER.REC<51,PNS.ITEM.NUM> # MASK.ACTIVE THEN CHANGE.FLAG=1
      IF CARRIER.REC<47,PNS.ITEM.NUM> # PRO.FORMAT THEN CHANGE.FLAG=1
      IF CARRIER.REC<52,PNS.ITEM.NUM> # CHECK.DIG.ACTIVE THEN CHANGE.FLAG=1
      IF CARRIER.REC<53,PNS.ITEM.NUM> # CHECK.DIG.POS THEN CHANGE.FLAG=1
      IF CARRIER.REC<54,PNS.ITEM.NUM> # SEED.BEG.POS THEN CHANGE.FLAG=1
      IF CARRIER.REC<55,PNS.ITEM.NUM> # SEED.END.POS THEN CHANGE.FLAG=1
      IF CARRIER.REC<56,PNS.ITEM.NUM> # METHOD.STR THEN CHANGE.FLAG=1
      IF CARRIER.REC<57,PNS.ITEM.NUM> # OLD.BEG.POS THEN CHANGE.FLAG=1
      IF CARRIER.REC<58,PNS.ITEM.NUM> # OLD.END.POS THEN CHANGE.FLAG=1
      CARRIER.REC<51,PNS.ITEM.NUM> = MASK.ACTIVE
      CARRIER.REC<47,PNS.ITEM.NUM> = PRO.FORMAT
      CARRIER.REC<52,PNS.ITEM.NUM> = CHECK.DIG.ACTIVE
      CARRIER.REC<53,PNS.ITEM.NUM> = CHECK.DIG.POS
      CARRIER.REC<54,PNS.ITEM.NUM> = SEED.BEG.POS
      CARRIER.REC<55,PNS.ITEM.NUM> = SEED.END.POS
      CARRIER.REC<56,PNS.ITEM.NUM> = METHOD.STR
      CARRIER.REC<57,PNS.ITEM.NUM> = OLD.BEG.POS
      CARRIER.REC<58,PNS.ITEM.NUM> = OLD.END.POS
      IF CHANGE.FLAG THEN
         CARRIER.REC<61,PNS.ITEM.NUM> = USER
         CARRIER.REC<62,PNS.ITEM.NUM> = DATE()
      END
      RETURN

*--------------------------------------------------------------------------
*
*--------------------------------------------------------------------------
DSP.PNS.LINE:
      LINE = PNS.ITEM.NUM'R%2'
      LINE:= ' '
      LINE:= MASK.ACTIVE.STR'L#3'
      LINE:= ' '
      LINE:= PRO.FORMAT'L#18'
      LINE:= ' '
      LINE:= PRO.EXAMPLE'L#18'
      LINE:= ' '
      LINE:= CHECK.DIG.ACTIVE'L#2'
      LINE:= ' '
      LINE:= ' ':CHECK.DIG.POS.STR'L#1':' '
      LINE:= ' '
      LINE:= SEED.BEG.POS.STR'L#1':'-':SEED.END.POS.STR'L#1':' '
      LINE:= ' '
      LINE:= METHOD.STR'L#6'
      LINE:= SPACE(5)
      LINE:= OLD.BEG.POS.STR'L#1':' - ':OLD.END.POS.STR'L#1'

      CRT @(0,PNS.Y.POS):LINE
      CRT @(0,PNS.Y.POS+1):@(-4)
      RETURN

*--------------------------------------------------------------------------
*
*--------------------------------------------------------------------------
DSP.PNS.HDR:

      CALL FB.PRINT.CENT(1,80,1,'(':CARRIER.ID'R%5':'), ':CARRIER.REC<1>)
      CRT @(0,2):STR('=',79):

      LINE1 = SPACE(7)
      LINE1:= STR('-',12):' Pro Number ':STR('-',13)
      LINE1:= ' '
      LINE1:= STR('-',3):' Check Digit ':STR('-',2)
      LINE1:= SPACE(3)
      LINE1:= 'Old Style'

      LINE2 = 'Ln'
      LINE2:= ' '
      LINE2:= 'Act'
      LINE2:= '   '
      LINE2:= SPACE(5):'Mask':SPACE(7)
      LINE2:= ' '
      LINE2:= SPACE(5):'Example':SPACE(4)
      LINE2:= SPACE(3)
      LINE2:= 'YN'
      LINE2:= ' '
      LINE2:= 'Pos'
      LINE2:= ' '
      LINE2:= 'Seed'
      LINE2:= ' '
      LINE2:= 'Method'
      LINE2:= SPACE(5)
      LINE2:= 'Range'

      LINE3 = '--'
      LINE3:= ' '
      LINE3:= '---'
      LINE3:= ' '
      LINE3:= STR('-',18)
      LINE3:= ' '
      LINE3:= STR('-',18)
      LINE3:= ' '
      LINE3:= STR('-',2)
      LINE3:= ' '
      LINE3:= STR('-',3)
      LINE3:= ' '
      LINE3:= STR('-',4)
      LINE3:= ' '
      LINE3:= STR('-',6)
      LINE3:= SPACE(5)
      LINE3:= STR('-',5)

      CRT @(0,3):LINE1:
      CRT @(0,4):LINE2:
      CRT @(0,5):LINE3:

      RETURN

*--------------------------------------------------------------------------
* States Serviced by this Carrier
*--------------------------------------------------------------------------
GET.STATES:*
*
      CRT @(0,2) : @(-3) :
      CRT 'States Serviced:'
      FOR I = 1 TO 17
         CRT @( 0,3+I) : I 'R#2' :
         CRT @(25,3+I) : (I+17) 'R#2' :
         CRT @(50,3+I) : (I+34) 'R#2'
      NEXT I
*
      SAVE.STATES = ''
      LOOP
         FOR I = 1 TO 51
            STATE = CARRIER.REC<50,I>
            ROW = 3 + I - (INT((I-1)/17) * 17)
            COL = (25 * INT((I-1)/17)) + 4
            IF STATE = '' THEN
               ST.DESC = SPACE(20)
               CRT @(COL,ROW) : ST.DESC :
            END ELSE
               LOCATE STATE IN ST.LIST<1>,1 SETTING ST.POS THEN
                  ST.DESC = SPACE(20)
                  ST.DESC[1,20] = STATE.LIST<1,ST.POS>
                  SAVE.STATES<1,I> = STATE
                  SAVE.STATES<2,I> = ST.POS
                  CRT @(COL,ROW) : ST.DESC 'L#20' :
               END
            END
         NEXT I

TRY.AGAIN:
         IF DISPLAY.MODE THEN
            HELP="<ENTER> to Return to Main Screen"
         END ELSE
            HELP="Enter line number, [D]elete all states, [A]dd all states, ''=Exit."
         END
         CALL GEN.IN(0,22,'Enter selection please ##','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         IF DISPLAY.MODE THEN
            IF Q # '' THEN
               CALL ELINE('Invalid Entry - View Only')
               GOTO TRY.AGAIN
            END
         END

      UNTIL Q = '' DO
         BEGIN CASE
            CASE QI = 'D'
               CARRIER.REC<50> = ''
               SAVE.STATES = ''
               ST.CNT = 0
            CASE QI = 'A'
               CARRIER.REC<50> = ST.LIST
               ST.CNT = 51
            CASE QI GE 1 AND QI LE 51
               TIME.2.STOP = ''
               HELP = "Enter state abbreviation, ' ' = Delete, '' = Accept."
               FOR I = QI TO 51 UNTIL TIME.2.STOP
                  ROW = 3 + I - (INT((I-1)/17) * 17)
                  COL = (25 * INT((I-1)/17)) + 4
                  CALL GEN.IN(COL,ROW,'','',Q,0,2,'','',2,COL,ROW,0,QI,HELP,0,23)
                  QI=OCONV(QI,'MCU')
                  BEGIN CASE
                     CASE Q = ''
                        TIME.2.STOP = 1
                     CASE QI = ' '
                        LOCATE CARRIER.REC<50,I> IN SAVE.STATES<1>,1 SETTING ST.POS THEN
                           SAVE.STATES<1> = DELETE( SAVE.STATES,1,ST.POS,0 )
                        END
                        TIME.2.STOP = 1
                     CASE 1
                        LOCATE QI IN ST.LIST<1>,1 SETTING ST.POS THEN
                           CARRIER.REC<50,I> = QI
                           ST.DESC = SPACE(20)
                           ST.DESC[1,20] = STATE.LIST<1,ST.POS>
                           CRT @(COL,ROW) : ST.DESC 'L#20' :
                           LOCATE ST.POS IN SAVE.STATES<2>,1 BY 'AR' SETTING SS.POS ELSE
                              SAVE.STATES = INSERT( SAVE.STATES,1,SS.POS,0,QI )
                              SAVE.STATES = INSERT( SAVE.STATES,2,SS.POS,0,ST.POS )
                           END
                        END ELSE
                           CALL ELINE(QI : ' is not a state.')
                           CRT @(COL,ROW) : SPACE(20) :
                           I -= 1
                        END
                  END CASE
               NEXT I
               CARRIER.REC<50> = SAVE.STATES<1>
               ST.CNT = DCOUNT(CARRIER.REC<50>,VM)
            CASE 1
               CALL ELINE('Invalid Entry.')
         END CASE
      REPEAT
*
      CRT @(0,2) : @(-3) :
      GOSUB 8000
      GOSUB 8100
      RETURN

*
*-------------------------------------------------------------------
*
GET.INTERNATIONAL.INFO:***
      CALL FB.DRAW.BOX(8,12,67,10,' ','')
      CALL FB.DRAW.BOX(9,13,65,9,' ','+=+|+=+|')
      CALL FB.DRAW.BOX(9,13,65,3,' ','+=+|+=+|')
      CALL FB.PRINT.CENT(9,74,14,"I N T E R N A T I O N A L   A D D R E S S")
      FOR I=1 TO 5
         INTERNATION.ADDRESS=CARRIER.REC<64,I>'L#30'
         ROW=I+15
         CRT @(10,ROW):I'R#2':'|':INTERNATION.ADDRESS
      NEXT I

      IF DISPLAY.MODE THEN
         HELP="<ENTER> to Return to the Main Screen."
         CALL GEN.IN(0,22,'Enter selection please ##','',Q,0,2,'','',2,-2,22,0,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI='' OR QI='X' OR QI='EX'
               NULL
            CASE 1
               CALL ELINE('Invalid Entry - View Only')
               GOTO 2210
         END CASE
      END ELSE
         FOR I=1 TO 5
            INTERNATIONAL.ADDRESS=CARRIER.REC<64,I>'L#30'
            ROW=I+15
            HELP="Enter international address. Line ":I:" ' '=Clear. ''=Accept."
            CRT @(10,ROW):I'R#2':'|':
            CALL GEN.IN(13,ROW,INTERNATIONAL.ADDRESS,'',Q,0,30,'','',2,-30,ROW,0,QI,HELP,0,23)
            BEGIN CASE
               CASE QI=''
                  CRT @(10,ROW):I'R#2':'|':CARRIER.REC<64,I>'L#30':

               CASE QI=' '
                  FOR J=I TO 4
                     CARRIER.REC<64,J>=CARRIER.REC<64,J+1>
                  NEXT J
                  CARRIER.REC<64,5>=''
                  FOR J=I TO 5
                     CRT @(10,J+15):J'R#2':'|':CARRIER.REC<64,J>'L#30':
                  NEXT J
                  I=I-1

               CASE 1
                  CARRIER.REC<64,I>=Q
                  CRT @(10,ROW):I'R#2':'|':CARRIER.REC<64,I>'L#30':
            END CASE
         NEXT I
      END
      GOSUB REDRAW.DISPLAY
      RETURN

*--------------------------------------------------------------------
*
* Edit command line.
*
*--------------------------------------------------------------------
3000:
      RETURN.BACK = FALSE

      *
      * Ask for user input
      *
      LOOP
         IF DISPLAY.MODE THEN
! JTW01     HELP="Enter number 20-22 or 24-25 or 27 to display or [R]edisplay [EX]it"
            HELP="Enter number 20-22 or 23-24 or 27 to display or [R]edisplay [EX]it"
         END ELSE
*           HELP="Enter number 1 thru 28 to Edit or [D]elete [R]edisplay [EX]it"           ; * JMK02
! JTW01     HELP="Enter number 1 thru 29 to Edit or [D]elete [R]edisplay [EX]it"           ; * JMK02
            HELP="Enter number 1 thru 30 to Edit or [D]elete [R]edisplay [EX]it"           ; * JTW01
         END
         CALL GEN.IN(0,22,'Enter selection please ##','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI='EX'
               EXIT.IT = TRUE
               RETURN.BACK = TRUE
            CASE QI='X' OR QI=''
               RETURN.BACK = TRUE
            CASE NUM(Q)
*              IF Q GT 0 AND Q LE 28 THEN          ; * JMK02
! JTW01        IF Q GT 0 AND Q LE 29 THEN          ; * JMK02
               IF Q GT 0 AND Q LE 30 THEN          ; * JTW01
                  EDIT.FLAG=1
                  IF DISPLAY.MODE THEN
*                    ON Q GOSUB 9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,GET.STATES,2210,2220,9999,2240,2250,9999,2270,9999    ; * JMK02
!                    ON Q GOSUB 9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,GET.STATES,2210,2220,9999,2240,2250,9999,2270,9999,9999         ; * JTW01
                     ON Q GOSUB 9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,GET.STATES,2210,2220,2230,2240,9999,9999,2270,9999,9999,2300    ; * JTW01
                  END ELSE
*                    ON Q GOSUB 2010,2020,2030,2040,2050,2060,2070,2080,2090,2100,2110,2120,2130,2140,2150,2160,2170,2180,2190,GET.STATES,2210,2220,2230,2240,2250,2260,2270,2280    ; * JMK02
!                    ON Q GOSUB 2010,2020,2030,2040,2050,2060,2070,2080,2090,2100,2110,2120,2130,2140,2150,2160,2170,2180,2190,GET.STATES,2210,2220,2230,2240,2250,2260,2270,2280,2290         ; * JTW01
                     ON Q GOSUB 2010,2020,2030,2040,2050,2060,2070,2080,2090,2100,2110,2120,2130,2140,2150,2160,2170,2180,2190,GET.STATES,2210,2220,2230,2240,2250,2260,2270,2280,2290,2300    ; * JTW01
                  END
               END ELSE
*                 CALL ELINE('Line number must be between 1 and 28. Please re-enter line number.')   ; * JMK02
! JTW01           CALL ELINE('Line number must be between 1 and 29. Please re-enter line number.')   ; * JMK02
                  CALL ELINE('Line number must be between 1 and 30. Please re-enter line number.')   ; * JTW01
               END
            CASE NOT(DISPLAY.MODE) AND QI='D'
               VIN=USER
               CALL SUPER.USER(VIN,VOUT)
               IF VOUT<1>#1 THEN
                  SUBJ='-s"Carrier Maintenance Security Violation"'
                  TEXT=USER:' ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
                  TEXT<-1>=CARRIER.ID:' ':CARRIER.REC<1>
                  TEXT<-1>='User ':USER:' attempted to delete this Carrier'
                  EXECUTE 'mail ':SUBJ:' owen',//IN. < TEXT
                  CALL ELINE('Security Violation! You are not authorized to delete Carriers!')
                  GO 3000
               END
               HELP='Enter Y to delete or N not to delete'
               CALL GEN.IN(0,22,'Are you sure? N','',Q,0,1,'','',2,-1,22,1,QI,HELP,0,23)
               QI=OCONV(QI,'MCU')
               IF QI='Y' THEN
                  CALL SOUNDEX.EDIT(CARRIER.REC<1>,'',CARRIER.ID,'SDX.CARRIER,NAME')
                  IF OLD.REC<12>#'' THEN
                     READ CARRIER.SCAC FROM F.SCAC,OLD.REC<12> THEN
                        DELETE F.SCAC,OLD.REC<12>
                     END
                  END
                  DELETE F.CARRIERS,CARRIER.ID
               END ELSE
                  GO 3000
               END
               RETURN
            CASE QI='R'
               GOSUB REDRAW.DISPLAY
            CASE 1
               IF DISPLAY.MODE THEN
                  CALL ELINE('Invalid Entry - View Only')
               END ELSE
                  CALL ELINE('Invalid Entry.')
               END
         END CASE

         IF EXIT.IT THEN RETURN.BACK = TRUE

      UNTIL (RETURN.BACK = TRUE) DO
      REPEAT

      *
      * Check for changes and prompt to save..
      *
      IF OLD.REC NE CARRIER.REC THEN
         HELP='Carrier information has changed. Enter Y to update.'
         CALL GEN.IN(0,22,'Update? Y','',Q,0,1,'','',2,-1,22,1,QI,HELP,0,23)
         Q=OCONV(Q,'MCU')
         IF Q EQ 'Y' OR Q EQ '' THEN
            IF CARRIER.REC<1> NE OLD.REC<1> THEN
               CALL SOUNDEX.EDIT(OLD.REC<1>,CARRIER.REC<1>,CARRIER.ID,'SDX.CARRIER,NAME')
            END
            LOCATE CARRIER.REC<44> IN CARRIER.REC<71> SETTING MODE.POS ELSE MODE.POS = 0
            IF MODE.POS = 0 THEN
               CALL ELINE('TRANSPORTATION MODE NOT IN MODE BY WEIGHT PLEASE CORRECT')
               GO 3000
            END
            IF (LEN(CARRIER.REC<12>)=4) AND (ALPHA(CARRIER.REC<12>)) THEN
               READ CARRIER.SCAC FROM F.SCAC,CARRIER.REC<12> THEN
                  IF CARRIER.SCAC<1>#CARRIER.ID THEN
                     CALL ELINE('Entered SCAC is already being used for Carrier ':CARRIER.SCAC<1>'L#5':'.')
                     GO 3000
                  END
               END ELSE
                  IF OLD.REC<12>#'' THEN
                     READ CARRIER.SCAC FROM F.SCAC,OLD.REC<12> THEN
                        DELETE F.SCAC,OLD.REC<12>
                     END
                  END
                  WRITE CARRIER.ID'L#5' ON F.SCAC,CARRIER.REC<12>
               END
            END ELSE
               CARRIER.REC<12>=''
            END
            GOSUB UPDATE.XREF.CARRIERS
            CARRIER.REC<25>=DATE()       ; ** Force an Update for the last Activity
            WRITE CARRIER.REC ON F.CARRIERS,CARRIER.ID
            ADJUST.CARRIER.ID=CARRIER.ID:'*':DATE():'*':TIME():'*':USER
            WRITE CARRIER.REC ON F.ADJUST.CARRIER,ADJUST.CARRIER.ID
         END
*        END ELSE
*           HELP=CHAR(7):"Continue with edit or abort."
*           CALL GEN.IN(0,22,'Continue edit. Y','',Q,0,1,'','',2,-1,22,1,QI,HELP,0,23)
*           Q=OCONV(Q,'MCU')
*           IF Q='Y' OR Q='' THEN GOTO 3000
*        END
      END
      IF NOT(DISPLAY.MODE) THEN RELEASE F.CARRIERS,CARRIER.ID
      RETURN

*--------------------------------------------------------------------------
* Display Carrier Comment's (Boxed)
*--------------------------------------------------------------------------
DISPLAY.CARRIER.COMMENT:

      CALL FB.DRAW.BOX(8,6,67,16,' ','')
      CALL FB.DRAW.BOX(9,7,65,12,' ','+=+|+=+|')
      CALL FB.DRAW.BOX(9,7,65,3,' ','+=+|+=+|')
      CALL FB.PRINT.CENT(9,74,8,"C A R R I E R   C O M M E N T S")
      FOR I=1 TO 8
         COMMENT=CARRIER.REC<45,I>'L#60'
         ROW=I+9
         CRT @(10,ROW):I'R#2':'|':COMMENT
      NEXT I

      RETURN

*----------------------------------------------------------------------
* ASK.Y.OR.N  - General Yes No prompt routine.
*----------------------------------------------------------------------
ASK.Y.OR.N:***
      YN.ANSWER = ''
Y.OR.N:
      HELP = CHAR(7):"Entry Options: [Y]-Yes [N]-No [X]-Back"
      CRT @(0,22):YN.MSG:@(-4)
      MASK = YN.MASK'L#1'
      Q=''
      CALL GEN.IN(LEN(YN.MSG)+1,22,MASK,'',Q,0,1,'','',2,LEN(YN.MSG)+1,22,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')

      IF QI='' THEN QI=MASK
      BEGIN CASE
         CASE QI = '1'
            QI='Y'
         CASE QI = '0'
            QI='N'
         CASE QI = 'Y'
         CASE QI = 'N'
         CASE QI = 'X'
         CASE 1
            CALL ELINE('Invalid entry.')
            GOTO Y.OR.N
      END CASE

      CRT @(0,22):@(-4):
      CRT @(0,23):@(-4):
      YN.ANSWER = QI
      RETURN

*----------------------------------------------------------------------
* ASK.FOR.NUM
*
* A General NUMBER prompt routine.
*
* AFN.MIN  - MIN VALUE ALLOWABLE
* AFN.MAX  - MAX VALUE ALLOWABLE
* AFN.MSG  - MESSAGE TO DISPLAY
* AFN.MASK - DEFAULT VALUE
*----------------------------------------------------------------------
ASK.FOR.NUM:***
      AFN.ANSWER = ''
AFN.1:
      HELP = "Entry Options: [":AFN.MIN:"-":AFN.MAX:"] [X]-Back"
      CRT @(0,22):AFN.MSG:@(-4)
      MASK = AFN.MASK:' '
      Q=''
      CALL GEN.IN(LEN(AFN.MSG)+1,22,MASK,'',Q,0,LEN(AFN.MAX),'','',2,LEN(AFN.MSG)+1,22,0,QI,HELP,0,23)
      IF QI='' THEN QI=MASK
      QI = TRIM(OCONV(QI,'MCU'))

      BEGIN CASE
         CASE QI = 'X' OR QI='EX' OR QI=''
         CASE QI>=AFN.MIN AND QI<=AFN.MAX
         CASE 1
            CALL ELINE('Invalid entry. Please try again.')
            GOTO AFN.1
      END CASE

      AFN.ANSWER=QI
      CRT @(0,22):@(-4):
      CRT @(0,23):@(-4):

      RETURN

*--------------------------------------------------------------------------
* FIND.LOCKED:
* Find the person who has locked the file FIND.LOCKED.NAME and displays it
* on the screen
*--------------------------------------------------------------------------
FIND.LOCKED:

      STMT = 'LIST.READU EVERY'
      EXECUTE STMT CAPTURING OUTPUT
      FL.LEN = DCOUNT(OUTPUT,@AM)
      FL.USER = 'Someone'
      FOUND = FALSE

      FOR X = 1 TO FL.LEN UNTIL FOUND
         T.USER = OCONV(TRIM(OUTPUT<X>[44,9]),'MCU')
         T.FILE = TRIM(OUTPUT<X>[53,17])
         IF T.FILE = FIND.LOCKED.NAME THEN
            FL.USER = T.USER
            FOUND = TRUE
         END
      NEXT

      CALL ELINE(FL.USER:" is in Carrier ":FIND.LOCKED.NAME:". Find them and tell them to get out of that carrier!")

      RETURN

*--------------------------------------------------------------------------
* DEBUG
*--------------------------------------------------------------------------
DEBUG:
      *
      * Was a special debug message passed? If not, Use the default.
      *
      IF DEBUG.MSG = '' THEN DEBUG.MSG='DEBUG POINT - BREAK IT!'
      CRT @(0,0):DEBUG.MSG:
      INPUT NULL,1
      CRT @(0,0):SPACE(LEN(DEBUG.MSG)):
      DEBUG.MSG=''                       ; * Clear it to prevent reuse of special.

      RETURN
9999: CALL ELINE('Invalid Entry - View Only')
      RETURN
