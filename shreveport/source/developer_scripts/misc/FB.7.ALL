* PROGRAM FB.7.ALL
* Program to Print "All FB.7 Reports"
*
* FREIGHT BILLING PACKAGE
*
* AUTHOR: Owen Holman
* DATE: May 15, 1995
*
* FORMATTING MODS:
* Cody Henderson - Oct. 15, 1996
*
***********************************************************************
*
* Last updated by AFS.SOURCE (valerie) at 13:56:25 on 05/13/1994.
*   ADDED NEW DIVISION CODES INSERT.
* Last updated by AFS (valerie) at 12:41:20 on 03/31/1994.
*   UPDATED FOR UNIVERSE
*
$INCLUDE PROG.ADMIN INC_OPTIONS
$INCLUDE FILE.DEFS INC_DIVISION.CODES
*
* Initialize variables
*
*
      PROMPT''
      PROG.STRING=''
      PROG.DES=''
      DATE.TYPE=''
      PROG.STRING<-1>='FB.7.3.2' ; PROG.DES<-1>='Carrier Freight Cost Analysis'
      PROG.STRING<-1>='FB.7.3.3' ; PROG.DES<-1>='State & City Fraffic Analysis'
      PROG.STRING<-1>='FB.7.3.4' ; PROG.DES<-1>='State Traffic Analysis'
      PROG.STRING<-1>='FB.7.3.5' ; PROG.DES<-1>='Freight Class Statistics'
      PROG.STRING<-1>='FB.7.3.6' ; PROG.DES<-1>='State & City Traffic Analysis W/Carriers'
*     PROG.STRING<-1>='FB.7.3.7' ; PROG.DES<-1>='State & City Truckload Traffic Analysis'
      OPEN '','BCUST' TO F.CLIENT ELSE
        CALL OPEN.ABORT('BCUST',PROG.NAME)
      END
      CALL CHANNEL(CH.NUM)
      STATUS=''
      PROG.NAME='FB.7.ALL'
      PROG.DESC='Print All Traffic Survey Reports'
      PACK.NAME='Freight Billing'
*
       UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.7.ALL' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
       CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
* Display screen heading
*
30    CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
***********************************************************************
*
* Get client number to process
*
50    HELP.PROMPT="Enter the client number you want to process. S=Search. ''=Exit."
      CRT @(0,3):@(-3)
      CALL GEN.IN(0,3,'Enter Client Number #####','',Q,0,20,'','',1,-5,3,0,QI,HELP.PROMPT,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
        CASE QI='' ! QI='EX' ! QI='X'
          STOP
        CASE ALPHA(QI)
          CALL SOUNDEX.DISPLAY(QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
          CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
          IF ITEM.LIST='' ! DCOUNT(ITEM.LIST<1>,@VM) > 1 THEN GOTO 50
          IF NOT(NUM(ITEM.LIST<1,1>)) THEN GOTO 50
          Q=ITEM.LIST<1,1>'R%5'
      END CASE
      CLIENT.ID=Q'R%5'
      IF CLIENT.ID[1,2]#99 THEN
        CALL ELINE('Invalid entry. Client Number must begin with 99.')
        GOTO 50
      END
      READ CLIENT.REC FROM F.CLIENT,CLIENT.ID ELSE
        CALL ELINE('ERROR - Client ':CLIENT.ID:' not on file.')
        GOTO 50
      END
      CRT @(20,3):CLIENT.ID:' ':CLIENT.REC<2>
*
* Get current period beginning and ending dates
*
100   HELP='Enter the beginning date.'
      CALL GEN.IN(0,5,'Beginning date.  ':DATE()'D2/','DATE',BEG.DATE,0,8,'','',1,-8,5,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='X' THEN GOTO 50
      IF QI='EX' THEN STOP
      IF QI='' THEN BEG.DATE=DATE()
      CRT @(17,5):BEG.DATE'D2/'
*
* Get current period ending date
*
200   HELP='Enter the ending date.'
      CALL GEN.IN(0,7,'Ending date.     ':DATE()'D2/','DATE',END.DATE,0,8,'','',1,-8,7,0,QI,HELP,0,23)
      IF QI='X' THEN GOTO 100
      IF QI='EX' THEN STOP
      IF QI='' THEN END.DATE=DATE()
      IF END.DATE LT BEG.DATE THEN
        CALL ELINE('Invalid ending date.')
        GOTO 200
      END
      CRT @(17,7):END.DATE'D2/'

*
* Get date type
*
225   HELP='Enter the date type for the selection. "E"=Data Entry Date "S"=Ship Date'
      IF DATE.TYPE # '' THEN
        MASK = DATE.TYPE
      END ELSE
        MASK = 'E'
      END
      CALL GEN.IN(0,9,'Data entry date or ship date. ':MASK,'',Q,0,8,'','',1,-1,9,0,QI,HELP,0,23)
      BEGIN CASE
        CASE QI='X'
          GOTO 200
        CASE QI='EX'
          STOP
        CASE QI='' OR QI='E'
          DATA.TYPE='ENTRY'
        CASE QI='S'
          DATA.TYPE='SHIP'
        CASE 1
          CALL ELINE('Invalid entry, please try again')
          GO 225
      END CASE
      CRT @(30,9):DATA.TYPE

     TIMES=DCOUNT(PROG.STRING,CHAR(254))
     START=10
     IF START+TIMES>23 THEN
       PRINT 'NEED PROGRAMMER TO ADD MORE SPACE'
       ABORT
     END
     FOR X = 1 TO TIMES
       PRINT @(10,START+X):PROG.STRING<X>:@(20,START+X):PROG.DES<X>
     NEXT X
300:  HELP="X=Change. EX=Exit. RETURN=Continue."
      CALL GEN.IN(0,22,'Enter selection please. --','',Q,0,2,'','',0,-2,22,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            CRT @(0,22):@(-3):
            GO 225
         CASE QI='EX'
            STOP
         CASE QI=''
            NULL
         CASE 1
            CALL ELINE('Invalid entry. Must be X, EX, or RETURN.')
            GOTO 300
      END CASE
*
* Start processing
*
     TIMES=DCOUNT(PROG.STRING,CHAR(254))
     FOR X = 1 TO TIMES
       IF PROG.STRING<X> = 'FB.7.3.2' THEN DATA 'NORMAL'
       DATA CLIENT.ID
       DATA BEG.DATE'D2/'
       DATA END.DATE'D2/'
       DATA DATE.TYPE
       DATA ""
       EXECUTE PROG.STRING<X>
     NEXT X
