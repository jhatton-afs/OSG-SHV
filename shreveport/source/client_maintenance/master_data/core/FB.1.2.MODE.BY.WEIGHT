*****************************************************************************
* FB.1.2.MODE.BY.WEIGHT
* SUBROUTINE CALLED BY FB.1.2 (CARRIER MAINTENANCE)
* USED AS SELECTION 25 TO EDIT MODE BY WEIGTH SETTINGS/GROUPS
* WRITTEN 4/26/99 BY KED
* REWRITTEN 09/14/99 BY TAMI SEAGO
*****************************************************************************
SUBROUTINE FB.1.2.MODE.BY.WEIGHT(VIN,VOUT,F.TRANSPORT)
$INCLUDE FILE.DEFS INC_CLIENTS

  WEIGHTS=VIN<1>
  MODES=VIN<2>
  DISPLAY.MODE=VIN<3>
  CARRIER.DEF.MODE=VIN<4>
  CARRIER.ID=VIN<5>
  CARRIER.NAME=VIN<6>
  PROG.NAME='FB.1.2.MODE.BY.WEIGHT'
  PROG.DESC='Setup Transportaion modes by weight for freight bills'
  CO.NAME='AFS Logistics, LLC'
  PACK.NAME='Freight Billing'

   UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.1.2.MODE.BY.WEIGHT' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
   CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
  IF WEIGHTS<1,1>='' THEN
    WEIGHTS<1,1>='@'
    MODES<1,1>=CARRIER.DEF.MODE
  END 
  GOSUB INIT.SCREEN
  GOSUB DISPLAY.DATA
****************************************************************************
GET.INPUT:
****************************************************************************
  GOSUB DISPLAY.DATA
  IF DISPLAY.MODE=0 THEN 
    HELP='Enter Line Number - [X]-Back - [EX]it - [ENTER]-Update'
    DESC='Enter Line Number ##'
  END ELSE
    HELP='View Mode Only - No change - [X]-Back - [EX]it'
    DESC='Enter Your Choice ##'
  END
  CALL GEN.IN(0,22,DESC,'',Q,0,2,'L','',0,18,22,0,QI,HELP,0,23)
  QI=OCONV(QI,'MCU')
  BEGIN CASE
    CASE QI=''
        GOSUB CHECK.RECORD
    CASE NUM(QI)
      IF DISPLAY.MODE=0 THEN
        IF Q LT 1 OR Q GT 5 THEN
          CALL ELINE("INVALID SELECTION - CAN ONLY BE 1-5")
          GO GET.INPUT
        END 
        IF Q>1 AND WEIGHTS<1,Q-1>='' THEN
            CALL ELINE("MUST START ON FIRST EMPTY LINE OR LINE 1")
            GO GET.INPUT
        END
        SEL = Q
        GO ENTER.WEIGHT
      END ELSE
        CALL ELINE("INVALID SELECTION - VIEW ONLY")
        GO GET.INPUT
      END
    CASE QI='X'
        GO CHECK.RECORD
    CASE QI='EX'
        STOP
    CASE 1
      CALL ELINE("INVALID SELECTION")
      GO GET.INPUT
  END CASE

RETURN
****************************************************************************
ENTER.WEIGHT:
****************************************************************************
  GOSUB DISPLAY.DATA
  HELP="Enter weight - [D]elete Line - [X] Back to Menu - [EX]it"
  IF WEIGHTS<1,SEL> # '' THEN
    IF WEIGHTS<1,SEL> = '@' THEN
      MASK = 'AND UP'
    END ELSE
      MASK = WEIGHTS<1,SEL>'L#6'
    END
  END ELSE
    MASK = '------'
  END
  CALL GEN.IN(3,SEL+7,MASK,'',Q,0,6,'L','',0,-6,SEL+7,0,QI,HELP,0,23)
  BEGIN CASE
    CASE QI='' AND WEIGHTS<1,SEL> # ''
      Q=WEIGHTS<1,SEL>
    CASE (QI='' AND WEIGHTS<1,SEL> = '') OR QI = '@'     
      LOCATE '@' IN WEIGHTS<1> SETTING POS ELSE POS = 0
      IF POS # SEL AND POS # 0 THEN
        CALL ELINE('YOU CAN ONLY HAVE 1 AND UP WEIGHT')
        GO ENTER.WEIGHT
      END
      IF WEIGHTS<1,SEL> = '' AND WEIGHTS<1,SEL+1>#'' THEN
        CALL ELINE("CAN'T PUT WEIGHT AND UP ON LINE WITH WEIGHT ON NEXT LINE")
        GO ENTER.WEIGHT
      END ELSE
        WEIGHTS<1,SEL>='@'
      END
    CASE QI='D'
      DEL WEIGHTS<1,SEL>
      DEL MODES<1,SEL>
      DEL MODE.DESC<1,SEL>
      GO GET.INPUT
    CASE QI='EX'
      STOP
    CASE QI='X'
      GOSUB DISPLAY.DATA
      GO GET.INPUT
    CASE NUM(QI)
      WEIGHTS<1,SEL>=Q
    CASE NOT(NUM(QI))
      CALL ELINE("INVALID ENTRY")
      GO ENTER.WEIGHT
  END CASE
  GOSUB DISPLAY.DATA

****************************************************************************
ENTER.MODE:
****************************************************************************
  CRT @(0,23):@(-3):
  IF WEIGHTS<1,SEL>='@' THEN
    HELP="Enter Mode for Weight 'And Up' - [X] Back to Menu - [EX]it"
  END ELSE
    HELP="Enter Mode for Weight ":WEIGHTS<1,SEL>:" - [D]elete Line - [X] Back to Menu - [EX]it"
  END
  IF MODES<1,SEL>#'' THEN MASK = MODES<1,SEL>'L#4' ELSE MASK = '----'
  CALL GEN.IN(20,SEL+7,MASK,'',Q,0,2,'L','',0,-4,SEL+7,0,QI,HELP,0,23)
  BEGIN CASE
    CASE QI=''
      IF MODES<1,SEL>='' THEN
        CALL ELINE('PLEASE ENTER A MODE')
        GO ENTER.MODE       
      END
    CASE QI='EX'
      STOP
    CASE QI='X'
      CRT @(0,23):@(-3):
      GO ENTER.WEIGHT
    CASE NUM(QI)
      MODES<1,SEL>=Q
  END CASE
  GOSUB DISPLAY.DATA
GO GET.INPUT

****************************************************************************
*INTERNAL SUBROUTINES
****************************************************************************
INIT.SCREEN:
****************************************************************************
  CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
  CRT @(0,3):"-------------------------------------------------------------------------------"
  CRT @(0,4):"Carrier: ":CARRIER.ID:" - ":CARRIER.NAME
  CRT @(0,5):"-------------------------------------------------------------------------------"
  CRT @(0,6):"   Weight": ; CRT @(20,6):"Mode"
  FOR X = 1 TO 5
    CRT @(0,X+7):X:"  ------": ; CRT @(20,X+7):"----"
  NEXT
RETURN
****************************************************************************
DISPLAY.DATA:
****************************************************************************
  FOR COUNT=1 TO 5
    IF MODES<1,COUNT>#'' THEN
      READV DESC FROM F.TRANSPORT,MODES<1,COUNT>,1 ELSE DESC='{UNKNOWN}'
      MODE.DESC<1,COUNT>=DESC
    END
    IF WEIGHTS<1,COUNT> = '@' THEN WEIGHT.DESC = 'AND UP' ELSE WEIGHT.DESC = WEIGHTS<1,COUNT>
    CRT @(0,COUNT+7):COUNT:'  ':WEIGHT.DESC'L#6'
    CRT @(20,COUNT+7):MODES<1,COUNT>'L#4':'  ':MODE.DESC<1,COUNT>:@(-3):
  NEXT    
RETURN
****************************************************************************
CHECK.RECORD:
****************************************************************************
CHECK.RECORD.VERIFY.EXIT:

    LOCATE '@' IN WEIGHTS<1> SETTING POS ELSE
      CALL ELINE("Can Not Exit Without 'And UP' weight!")
      GO GET.INPUT
    END
    VOUT<1>=WEIGHTS
    VOUT<2>=MODES
  RETURN
