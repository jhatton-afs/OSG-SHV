*-----------------------
* MODIFICATIONS
* 05/09/06 : JCW01 : CHANGES TO @SELECTED, CLEARSELECT, AND STMT<X>
*-----------------------
* ADD FB.PAY TO THE LIST...
      CRT @(-1):
      OPEN 'CLIENTS' TO F.CLIENTS ELSE ABORT
      OPEN 'FB.OPEN.BILLS' TO F.OPEN ELSE ABORT
*     OPEN 'FB.CHECKS' TO F.CHECKS ELSE ABORT

      OPEN 'FB.CHECKS.HDR' TO F.CHECKS.HDR ELSE ABORT        ; *OH 09-20-2007
      OPEN 'FB.CHECKS.DTL' TO F.CHECKS.DTL ELSE ABORT        ; *OH 09-20-2007

      OPEN 'FB.BILLS.CRX' TO F.BILLS.CRX ELSE ABORT
      OPEN 'DICT','FB.BILLS.HIST' TO D.F.HIST ELSE ABORT
      OPEN 'DICT','FB.BILLS' TO D.F.BILLS ELSE ABORT
      OPEN 'FB.PAY' TO F.PAY ELSE ABORT
      OPEN 'CLIENT.CARRIER.XREF' TO F.CLI.CAR.XREF ELSE ABORT
      OPEN 'FB.STATUS.UPDATE' TO F.STATUS.UPDATE ELSE ABORT
      CALL GET.USER(USER)
      OPEN 'BILLDATA.':USER TO F.BD ELSE ABORT
      TESTING=0
      PER.1=1
      PER.2=1

*    CARRIER.ID   ='11476'
*    CARRIER.ID   ='01739'
*    CARRIER.ID   ='03348'
*    CARRIER.ID<2>='02482'
*    CARRIER.ID<3>='00114'
*    CARRIER.ID   ='01739'
*    CARRIER.ID   ='12341' ; * Transportation, Inc from NNN, NNNN, NNNNN to NNNNNN 02-04-03
*    CARRIER.ID   ='00164' ; * 00164 Arrow Trucking, from nn-nnnnn-n to nnnnnnnnnnn
*    CARRIER.ID   ='00788' ; * 00788 Volunteer Express, Inc.
*    CARRIER.ID   ='01739' ; * 01739 Service Transport 2N-7N to 9N 03-04-03 AND 1N-7N TO '0':8N
*    CARRIER.ID   ='00535' ; * 00535 Associated Global Systems aaa7N TO 7N  03-31-03
*    CARRIER.ID   ='00362' ; * 00362 Acme Truck Lines "70-"6n to "7"6n
*    CARRIER.ID   ='00585' ; * 00585 Landstar Inway "3A-7N" to "7N"  11-21-03
*    CARRIER.ID   ='10707' ; * 10707 Landstar Inway "2X-9N" to "9N"  03-26-04
*    CARRIER.ID   ='00018' ; * 00018 Saia "10N" to "11N"  07-22-04 to Standardize the format
*    CARRIER.ID   ='00500'                ; * 00500 Roadrunner "8N" to "08N"  02-10-05 RR added a zero on the front
*    CARRIER.ID   ='00601' ; * 00601 Estes Express Lines "10N" (Imported Data) to "3N'-'7N" Real format
*    CARRIER.ID   ='00562'
*    CARRIER.ID   ='00789' ;* Lynden Air Freight 3A8N TO 8N, They are rebilling with different 3As
*    CARRIER.ID   ='02696' ;* 02696 Oak Harbor Freight Lines, dropping first 3, and changing 7 to 8 by adding a zero.
*    CARRIER.ID='20631'
*    CARRIER.ID='00748'                 ; * Vitran Express - CHANGING FROM "'00'9N" TO "9N"
*    CARRIER.ID ='02696'                ; * 02696 Oak Harbor Freight Lines, dropping first 3, and changing 7 to 8 by adding a zero. 2009-07-29
     CARRIER.ID='01522'  ; * Add Check Digit to pro numbers for the Patrick Industries Client 2010-07-20
************************************************************************
* Old Pro format goes Here
*      OLD.PRO.FORMAT="9N" ; * 10-30-97 FOR 06142 Cornhusker
*      OLD.PRO.FORMAT="3N'-'7N'-'1N" ; * 10-28-97 FOR 00562 Motor Cargo
*      OLD.PRO.FORMAT="2N'-'3N'-'3N" ; * 04-29-97 for 00250
*      OLD.PRO.FORMAT="1A9N" ; * 00446, 02482, 00114 12-11-06
*      OLD.PRO.FORMAT="3N'0'7N" ; * 00092 Merchants/Abilene 12-5-96
*      OLD.PRO.FORMAT="'0'3N'-0'7N" ; * 00092 Merchants/Abilene 12-5-96
*00508 12-5-96      OLD.PRO.FORMAT="8N"
*     OLD.PRO.FORMAT="1N'-'5N"
*     OLD.PRO.FORMAT="7N"; * 03227 Boyd Bros. 11-3-97
*     OLD.PRO.FORMAT="7N'-00'" ; * 01319 Oklahoma Tank/United Petr
*     OLD.PRO.FORMAT="'N'5N"
*     OLD.PRO.FORMAT="3N'-'7N" ; * 664 Southwestern Motor Transport
*     OLD.PRO.FORMAT="8N" ; * 664 Southwestern Motor Transport
*     OLD.PRO.FORMAT="9N" ; * 664 Southwestern Motor Transport
*     OLD.PRO.FORMAT="2N'-'6N" ; * 664 Southwestern Motor Transport
*     OLD.PRO.FORMAT="10N" ; * 664 Southwestern Motor Transport
*     OLD.PRO.FORMAT="4N'-'1N" ; * 2323
*     OLD.PRO.FORMAT="1N'-'5N" ; * 00642 AFS Brokerage
*     OLD.PRO.FORMAT="3A'-'7N'-'3N" ; * 00858 Landstar Inway Dba Ind. Frt
*     OLD.PRO.FORMAT="3A7N" ; * 00858 Landstar Inway Dba Ind. Frt
*     OLD.PRO.FORMAT="7N'-'2N" ; * 04781 Risinger
*     OLD.PRO.FORMAT="9N" ; * 04781 Risinger
*     OLD.PRO.FORMAT="1X'-'4N'-'4N'-'2N" ; * 00915 Mayflower
*     OLD.PRO.FORMAT="4N" ; * 03951 VS Delivery
*     OLD.PRO.FORMAT="2N'-'6N" ; * 00018 Saia
*     OLD.PRO.FORMAT="8N" ; * 05795 Carter & Sons 2/4/99
*     OLD.PRO.FORMAT="7N" ; * 05795 Carter & Sons 2/4/99
*     OLD.PRO.FORMAT="3N'-'6N" ; * 00563 USF Dugan 2/5/99
*     OLD.PRO.FORMAT="3N'-'7N" ; * 00103 Wichita-Southeast Kansas Transit, Inc
*     OLD.PRO.FORMAT="3N'-'7N" ; * 01021 Beaufort Transfer Company 3/31/00
*     OLD.PRO.FORMAT="'0'7N"   ; * 03348 AMA Transportation EDI including 0 and paper does not 04/15/02
*     OLD.PRO.FORMAT="8N1A" ; * 12264 Quality Carriers, Inc.
*     OLD.PRO.FORMAT="7N'-'2N" ; * 00155 Universal Am-Can Ltd. Forcing the last two to be 00
*     OLD.PRO.FORMAT="11N" ; * 00748 Vitran Express 09/30/02
*     OLD.PRO.FORMAT="1A6N1A" ; * 01359 American Transport, Inc. 09/30/02
*     OLD.PRO.FORMAT="3N'-'6N" ; * 00714 USF Bestway 09/30/02
*     OLD.PRO.FORMAT="3N'-'6N" ; * 01739 Service Transport 10/18/02
*     OLD.PRO.FORMAT="3A7N" ; * 01068 Team Air Express 12/18/02 Changed from aaannnnnnn to nnnnnnn
*     OLD.PRO.FORMAT="8N" ; * 11476 Everypoint Logistics Changed from 8N to 7N Owen 01-27-03
*     OLD.PRO.FORMAT="5N" ; * 11476 Everypoint Logistics Changed from 8N to 7N Owen 01-27-03
*     OLD.PRO.FORMAT="2N'-'7N" ; * 01739 Service Transport Inc. CHANGED FROM NN-NNNNNNN TO NNNNNNNNN Owen 01-31-03
*     OLD.PRO.FORMAT="2N'-'6N" ; * 01739 Service Transport Inc. CHANGED FROM NN-NNNNNN TO NNNNNNNN0 Owen 01-31-03
*     OLD.PRO.FORMAT="3N" ; * 12341  Transportation, Inc from NNN   to NNNNNN Owen 02-04-03
*     OLD.PRO.FORMAT="4N" ; * 12341  Transportation, Inc from NNNN  to NNNNNN Owen 02-04-03
*     OLD.PRO.FORMAT="5N" ; * 12341  Transportation, Inc from NNNNN to NNNNNN Owen 02-04-03
*     OLD.PRO.FORMAT="2N'-'5N'-'1N" ; * 00164 Arrow Trucking, from 2N-5N-1N to 11N
*     OLD.PRO.FORMAT="1N'-'5N'-'1N" ; * 00164 Arrow Trucking, from 1N-5N-1N to 11N
*     OLD.PRO.FORMAT="'45-1'5N'-'1N" ; * 00164 Arrow Trucking, from '45-1'5N'-'1N to 11N
*     OLD.PRO.FORMAT="8N"; * '00788' ; * 00788 Volunteer Express, Inc. From 8N to 10N Owen 03-03-03
*     OLD.PRO.FORMAT="'0'10N"; * '00788' ; * 00788 Volunteer Express, Inc. From 9N to 10N Owen 03-03-03
*     OLD.PRO.FORMAT="2N'-'7N" ; * 01739 Service Transport 2N-7N to 9N 03-04-03
*     OLD.PRO.FORMAT="2N'-'6N" ; * 01739 Service Transport 1N-7N to 9N 03-04-03
*     OLD.PRO.FORMAT="3A7N" ; * 00535 Associated Global Systems aaa7N TO 7N  03-31-03
*     OLD.PRO.FORMAT="'96-'6N" ; * 00362 Acme Truck Lines "70-"6n to "7"6n
*     OLD.PRO.FORMAT="3A'-'7N" ; * 00585 Landstar Inway "3A-7N" to "7N"  11-21-03
*     OLD.PRO.FORMAT="2X'-'9N" ; * 10707 Landstar Inway "2X-9N" to "9N"  03-26-04
*     OLD.PRO.FORMAT="10N"     ; * 00018 Saia "10N" to "11N"  07-22-04 to Standardize the format
*     OLD.PRO.FORMAT="8N"                ; * 00500 Roadrunner "8N" to "08N"  02-10-05 RR added a zero on the front
*     OLD.PRO.FORMAT="'00'8N"      ; * 00500 Roadrunner "8N" to "08N"  02-10-05 RR added a zero on the front
*     OLD.PRO.FORMAT="10N"     ; * 00601 Estes Express Lines "10N" (Imported Data) to "3N'-'7N" Real format
*     OLD.PRO.FORMAT="3N'-'8N"
*     OLD.PRO.FORMAT="3A8N"     ; * 00789 Lynden Air Freight 3A8N TO 8N, They are rebilling with different 3As
*     OLD.PRO.FORMAT="7N"; * 03878 Norrenberns 01-28-2008 (Changing from 7n, 8n, & 9n to 10N
*     OLD.PRO.FORMAT="3N'-'7N" ; * 02696 Oak Harbor Freight Lines, dropping first 3 and dash, and changing 7 to 8 by adding a zero.
*     OLD.PRO.FORMAT="3N'-'8N" ; * 02696 Oak Harbor Freight Lines, dropping first 3 and dash.
* OLD.PRO.FORMAT="10N"
*     OLD.PRO.FORMAT="'00'9N"            ; * 00748 Vitran Express merged with Chris and Pjax
*     OLD.PRO.FORMAT="3N'-'8N"           ; * 02696 Oak Harbor Freight Lines, dropping first 3 and dash.
*     OLD.PRO.FORMAT="3N'-'6N'"          ; * For Adding check digit to Patrick Industries
      OLD.PRO.FORMAT="8N"                ; * For Adding check digit to Patrick Industries

** DON'T FORGET TO GO DOWN & MODIFY NEW.PRO ~LINE 311
************************************************************************
      VIN=OLD.PRO.FORMAT
      CALL MASK(VIN,VOUT)
      MASK=VOUT<1>
      MASK.LEN=LEN(MASK)
      ERROR.ARRAY=''
      DICT=''
      DICT<1>='S'
      DICT<2>=0
      DICT<3>='Pattern'
      DICT<8>='G1*1':@VM:'T1,':MASK.LEN:@VM:'P(':OLD.PRO.FORMAT:')'
      DICT<9>='L'
      DICT<10>=20
      DICT<22>='Used to Find Pro Patterns'
      WRITE DICT ON D.F.HIST,'PRO.PATTERN'
      WRITE DICT ON D.F.BILLS,'PRO.PATTERN'
      DICT=''
      DICT<1>='S'
      DICT<2>=0
      DICT<3>='Pattern'
      DICT<8>='G1*1':@VM:'T1,':MASK.LEN+1:@VM:'P(11N)'
      DICT<9>='L'
      DICT<10>=20
      DICT<22>='Used to Find Pro Patterns'
*     WRITE DICT ON D.F.HIST,'PRO.PATTERN.1'
*     WRITE DICT ON D.F.BILLS,'PRO.PATTERN.1'
      TEXT='Selecting Clients.'
      CALL CENTER(TEXT,80)
      CRT @(0,10):TEXT
*
      STMT= "SELECT VOC 'FB.BILLS.HIST' *A7"
      STMT="SELECT CLIENTS '30032'"
      PRINT STMT
      EXECUTE STMT RTNLIST CLIENT.LIST CAPTURING OUTPUT
      ITEMS = @SELECTED
*     IF NOT( @SELECTED ) THEN ; * JCW01
      IF @SELECTED < 1 THEN              ; * JCW01
         CALL ELINE('ERROR - No clients on file.')
         STOP
      END
      COUNTER.1=0
      PER=0
      LOOP
         READNEXT CLIENT.ID FROM CLIENT.LIST ELSE CLIENT.ID='DONE'
      UNTIL CLIENT.ID='DONE' DO
         COUNTER.1=COUNTER.1+1
         IF CLIENT.ID='FB.BILLS.HIST' THEN GO SKIP.CLIENT
*       Check to see if the carrier has been used for this client... if not then skip it...
         READ DXREF FROM F.CLI.CAR.XREF,CLIENT.ID THEN
            LOCATE CARRIER.ID IN DXREF SETTING POS ELSE GO SKIP.CLIENT
         END
         IF CLIENT.ID[1,2]='99' THEN GO SKIP.CLIENT
         READV CLIENT.NAME FROM F.CLIENTS,CLIENT.ID,2 ELSE
            CLIENT.NAME='*** Not On File ***'
         END
         CRT @(0,16):CLIENT.ID:" ":CLIENT.NAME:" - Now selecting freight bills":@(-4):
         CALL PROG.BAR(18,COUNTER.1,ITEMS,PER.1)
         EDI=0
         OPEN 'EDI.BILLS.HIST,':CLIENT.ID TO F.EDI.BILLS.HIST THEN
            EDI=1
         END
         OPEN '','FB.BILLS.HIST,':CLIENT.ID TO F.BILLS.HIST THEN
            OPEN '','FB.BILLS,':CLIENT.ID TO F.BILLS ELSE
*           CALL ELINE('CANNOT OPEN FB.BILLS,':CLIENT.ID:' Skipping Client')
               GO SKIP.CLIENT
            END
*****************************************************************************
            UP.OPEN=1
            OPEN '','FB.UNPROCESS,':CLIENT.ID TO F.UNPROCESS ELSE
               UP.OPEN=0
            END
            IF DATE()=14921 AND USER='OWEN' THEN UP.OPEN=0
            FPX=1
            OPEN '','FB.PROC.DATE.XREF,':CLIENT.ID TO F.FPX ELSE FPX=0
*****************************************************************************
            FOX=1
            OPEN '','FB.OPEN.DATE.XREF,':CLIENT.ID TO F.FOX ELSE FOX=0
            STMT='SELECT FB.BILLS.HIST,':CLIENT.ID
            TIMES=DCOUNT(CARRIER.ID,@AM)
            STMT:=' WITH CARRIER# = '
            FOR X = 1 TO TIMES
               STMT:='"':CARRIER.ID<X>:'"'
            NEXT X
*         STMT:=' WITH CARRIER# = "':CARRIER.ID:'"'
            STMT:=' AND WITH PRO.PATTERN'
*           STMT:=' AND WITH NO PRO.PATTERN.1'
*DFSTMT:=' AND WITH PRO = "4813846990]"'
STMT='GET-LIST OWEN17'
*DFSTMT='GET-LIST DAV.17'
            PRINT @(0,12):STMT
            EXECUTE STMT RTNLIST BILLS.LIST CAPTURING OUTPUT
            NUM.BILLS = @SELECTED
*         IF SYSTEM(11) ELSE GO SKIP.CLIENT ; * No Bills
            CRT @(0,16):CLIENT.ID:" ":CLIENT.NAME:" - Now processing ":NUM.BILLS:" Freight Bills":@(-4):
            COUNTER.2=0
            LOOP
               DONE=0
               READNEXT PRO.ID FROM BILLS.LIST ELSE DONE=1
            UNTIL DONE=1 DO
               PRO=FIELD(PRO.ID,"*",2)


*******************************************************************************************
* Strip out AD, BD, and / to get at "Base Pro Number"
*******************************************************************************************

*
* Start evaluating pro to process
*
*OH 02-05-2009*               RAW.PRO=PRO
*OH 02-05-2009** Check for AD
*OH 02-05-2009*               PRO.STR=RAW.PRO[12,2]
*OH 02-05-2009*               IF PRO.STR='AD' THEN GOTO SKIP.BILL
*OH 02-05-2009** Check for BD
*OH 02-05-2009*               PRO.STR=RAW.PRO[12,2]
*OH 02-05-2009*               IF PRO.STR='BD' THEN GOTO SKIP.BILL
*OH 02-05-2009** Check for /
*OH 02-05-2009*               PRO.STR=RAW.PRO[12,1]
*OH 02-05-2009*               IF PRO.STR='/' THEN GOTO SKIP.BILL
*OH 02-05-2009*
*OH 02-05-2009*               BD.POS=INDEX(RAW.PRO,'BD',1)
*OH 02-05-2009*               IF BD.POS THEN
*OH 02-05-2009*                  RAW.PRO=RAW.PRO[1,BD.POS-1]
*OH 02-05-2009*               END
*OH 02-05-2009*
*OH 02-05-2009*               AD.POS=INDEX(RAW.PRO,'AD',1)
*OH 02-05-2009*               IF AD.POS THEN
*OH 02-05-2009*                  RAW.PRO=RAW.PRO[1,AD.POS-1]
*OH 02-05-2009*               END
*OH 02-05-2009*
*OH 02-05-2009*               SLASH.POS=INDEX(RAW.PRO,'/',1)
*OH 02-05-2009*               IF SLASH.POS THEN
*OH 02-05-2009*                  RAW.PRO=RAW.PRO[1,SLASH.POS-1]
*OH 02-05-2009*               END
*OH 02-05-2009*
*OH 02-05-2009*               IF RAW.PRO MATCHES OLD.PRO.FORMAT ELSE GOTO SKIP.BILL

               WHATS.LEFT=PRO[MASK.LEN+1,999]      ; * Get the part of the pro after the format you are searching for
               BEGIN CASE
                  CASE WHATS.LEFT = ''   ; * Its Good to Go it, Matches Exactly  -> do the work
                  CASE WHATS.LEFT[1,2] = 'AD'      ; * This is a proper AD bill -> do the work
                  CASE WHATS.LEFT[1,2] = 'BD'      ; * This is a proper BD Bill -> do the work
                  CASE WHATS.LEFT[1,1] = '/' AND NUM(WHATS.LEFT[2,999]) AND WHATS.LEFT#""  ; * Valid "/"0N bill -> do the Work
                  CASE 1
                     CRT 'Skipping PRO: ':PRO:' Not vaild for changing'
INPUT NUL
                     GOTO SKIP.BILL
               END CASE

*******************************************************************************************
*
*******************************************************************************************



*IF PRO[1,11] MATCHES "11N" THEN
*  GOTO SKIP.BILL
*END
************************************************************************
* New Pro format goes Here
*           NEW.PRO=PRO[1,7] ; * 10-30-97 For 06142 Cornhusker
*           NEW.PRO=PRO[1,11] ; * 10-28-97 for 00562
*           NEW.PRO=PRO[1,2]:PRO[4,3]:PRO[8,3] ; * 04-29-97 for 00250
*           NEW.PRO=PRO[2,9999];* 00446, 02482, 00114 12-11-96
*           NEW.PRO=PRO[1,3]:'-':PRO[5,999];* 00092 Merchants/Abilene 12-5-96
*           NEW.PRO=PRO[2,3]:'-':PRO[7,999];* 00092 Merchants/Abilene 12-5-96
*           NEW.PRO=PRO[1,1]:'-':PRO[2,999]
*           NEW.PRO=PRO[1,6]:PRO[8,999]
*           NEW.PRO=PRO[1,1]:'.':PRO[2,999]
*00508 12-5-96            NEW.PRO="00":PRO
*           NEW.PRO=PRO[1,1]:'-00':PRO[3,9999]
*           NEW.PRO=PRO[2,6]
*           NEW.PRO=PRO[1,7]
*           NEW.PRO=0:PRO[2,5]
*           NEW.PRO=(PRO[1,3]:PRO[5,7])'R%11':PRO[12,999]
*           NEW.PRO=PRO[1,8]'R%11':PRO[9,999]
*           NEW.PRO=PRO[1,9]'R%11':PRO[10,999]
*           NEW.PRO=(PRO[1,2]:PRO[4,6])'R%11':PRO[10,999]
*           NEW.PRO=(PRO[1,10])'R%11':PRO[11,999]
*           NEW.PRO=PRO[1,4]:PRO[6,999]
*           NEW.PRO=PRO[1,2]:'00':PRO[3,999]
*           NEW.PRO=PRO[1,11]
*           NEW.PRO=PRO[1,3]:"-":PRO[4,999]
*           NEW.PRO=PRO[1,7]:PRO[11,999]
*           NEW.PRO=PRO[1,7]:PRO[10,999]
*           NEW.PRO=PRO[1,11]:PRO[15,999] ; * 00915 Mayflower
*           NEW.PRO="00":PRO ; * 03951 VS Delivery
*           NEW.PRO=PRO[1,2]:0:PRO[4,MASK.LEN-3]:0:PRO[MASK.LEN+1,999] ; * 00018 Saia
*           NEW.PRO="00":PRO
*           NEW.PRO=PRO[1,3]:PRO[5,9999] ; * 00563 USF Dugan 3/5/99
*           NEW.PRO=PRO[1,3]:PRO[5,9999] ; * 00103 WSKT 5/26/99
*           NEW.PRO=PRO[1,3]:PRO[5,9999] ; * 01021 Beaufort 3/31/00
*           NEW.PRO=PRO[2,7] ; * 03348 AMA Transportation EDI including 0 and paper does not 04/15/02
**          NEW.PRO=PRO[1,8] ; * 12264 Quality Carriers, Inc.
*           NEW.PRO=PRO[1,8]:"00":PRO[11,9999] ; * 00155 Universal Am-Can Ltd.
*           NEW.PRO=PRO[5,9999] ; * 00748 Vitran 09/30/02
*           NEW.PRO=PRO[2,6]:PRO[9,999] ; * American Transport, Inc. 09/30/02
*           NEW.PRO=PRO[1,3]:PRO[5,999] ; * USF Bestway 09/30/02
*           NEW.PRO=PRO[1,3]:PRO[5,999] ; * 01739 Service Transport 10/18/02
*           NEW.PRO=PRO[4,9999]         ; * 01068 Team Air Express 12/18/02 Changed from aaannnnnnn to nnnnnnn
*           NEW.PRO=PRO[2,9999]         ; * 11476 Everypoint Logistics Changed from 8N to 7N Owen 01-27-03
*           NEW.PRO="00":PRO            ; * 11476 Everypoint Logistics Changed from 5N to 7N Owen 01-27-03
*           NEW.PRO=PRO[1,2]:PRO[3,999] ; * 01739 Service Transport Inc. CHANGED FROM NN-NNNNNNN TO NNNNNNNNN Owen 01-31-03
*           NEW.PRO=PRO[1,2]:PRO[3,6]:"0":PRO[10,999] ; * 01739 Service Transport Inc. CHANGED FROM NN-NNNNNN TO NNNNNNNN0 Owen 01-31-03
*           NEW.PRO="000":PRO ; * 12341  Transportation, Inc from NNN   to NNNNNN Owen 02-04-03
*           NEW.PRO="00":PRO  ; * 12341  Transportation, Inc from NNNN  to NNNNNN Owen 02-04-03
*           NEW.PRO="0":PRO   ; * 12341  Transportation, Inc from NNNNN to NNNNNN Owen 02-04-03
*           NEW.PRO=PRO[1,2]:"0":PRO[4,5]:"00":PRO[10,999] ;  * "2N'-'5N'-'1N" ; * 00164 Arrow Trucking, from 2N-5N-1N to 11N
*           NEW.PRO="0":PRO[1,1]:"0":PRO[3,5]:"00":PRO[9,999] ;  * "1N'-'5N'-'1N" ; * 00164 Arrow Trucking, from 1N-5N-1N to 11N
*           NEW.PRO=PRO[1,2]:PRO[4,6]:"00":PRO[11,999] ; * 00164 Arrow Trucking, from '45-1'5N'-'1N to 11N
*           NEW.PRO="00":PRO ; * '00788' ; * 00788 Volunteer Express, Inc. From 8N to 10N Owen 03-03-03
*           NEW.PRO=PRO[2,999] ; * '00788' ; * 00788 Volunteer Express, Inc. From 9N to 10N Owen 03-03-03
*           NEW.PRO=PRO[1,2]:PRO[4,9999] ; * 01739 Service Transport 2N-7N to 9N 03-04-03
*           NEW.PRO="0":PRO[1,2]:PRO[4,9999] ; * 01739 Service Transport 2N-7N to 9N 03-04-03
*           NEW.PRO=PRO[4,999] ; * 00535 Associated Global Systems aaa7N TO 7N  03-31-03
*           NEW.PRO="2":PRO[4,999] ; * 00362 Acme Truck Lines "70-"6n to "7"6n
*           NEW.PRO=PRO[5,9999]    ; * 00585 Landstar Inway "3A-7N" to "7N"  11-21-03
*           NEW.PRO=PRO[4,9999]    ; * 10707 Landstar Inway "2X-9N" to "9N"  03-26-04
*           NEW.PRO='0':PRO        ; * 00018 Saia "10N" to "11N"  07-22-04 to Standardize the format
*           NEW.PRO='0':PRO           ; * 00500 Roadrunner "8N" to "08N"  02-10-05 RR added a zero on the front
*           NEW.PRO=PRO[2,999]     ; * 00500 Roadrunner "8N" to "08N"  02-10-05 RR added a zero on the front
*           NEW.PRO=PRO[1,3]:'-':PRO[4,999] ; * 00601 Estes Express Lines "10N" (Imported Data) to "3N'-'7N" Real format
*           NEW.PRO=PRO[1,11]
*           NEW.PRO=PRO[4,999]     ; * 00789 Lynden Air Freight 3A8N TO 8N, They are rebilling with different 3As
*           NEW.PRO="000":PRO ; * 03878 Norrenberns 01-28-2008 (Changing from 7n, 8n, & 9n to 10N
*           NEW.PRO="0":PRO[5,999] ; * 02696 Oak Harbor Freight Lines, dropping first 3, and changing 7 to 8 by adding a zero. 10-27-08
*           NEW.PRO=PRO[5,999] ; * 02696 Oak Harbor Freight Lines, dropping first 3 (from 3N-8N).
* NEW.PRO='005-':PRO[2,999]
* NEW.PRO="0":PRO
*              NEW.PRO=PRO[3,999]        ; * 00748 Vitran Express merged with Chris and Pjax
*              NEW.PRO=PRO[5,999]        ; * 02696 Oak Harbor Freight Lines, dropping first 3 (from 3N-8N).

VIN=''
VIN<2>='MOD10'
VIN<3>=PRO[1,8]
CALL CHECK.DIGIT(VIN,VOUT)
IF VOUT<1>#"" THEN
  CALL ELINE("Check Digit Problem with Pro: ":PRO:" Program stopping")
END
CHECK.DIGIT=VOUT<2>
*              NEW.PRO=PRO[1,10]:"-":CHECK.DIGIT:PRO[11,999]
               NEW.PRO=PRO[1,8]:CHECK.DIGIT:PRO[9,999]

* Will this program work with the new Multi-Level EDI History???


* Dont forget to end with a 999 for AD, ADAD, BD, BDBD, etc....
*CALL ELINE('Owen Press Break')
************************************************************************
               NEW.ID=CARRIER.ID:"*":NEW.PRO:"*":FIELD(PRO.ID,"*",3)
               NEW.EDI.ID=CLIENT.ID:"*":NEW.ID
               COUNTER.2=COUNTER.2+1
*           PRINT @(0,22):COUNTER.2'L%6':PRO.ID:
*           CRT @(0,17):CLIENT.ID:' ':PRO.ID:@(-4):
               IF NUM.BILLS>0 THEN CALL PROG.BAR(20,COUNTER.2,NUM.BILLS,PER.2)
************************************************************************
               LOOKPRO=PRO
               LOOP UNTIL INDEX(LOOKPRO[LEN(LOOKPRO)-1,2],'AD',1)=0 DO
                  LOOKPRO=LOOKPRO[1,LEN(LOOKPRO)-2]
               REPEAT
               LOOP UNTIL INDEX(LOOKPRO[LEN(LOOKPRO)-1,2],'BD',1)=0 DO
                  LOOKPRO=LOOKPRO[1,LEN(LOOKPRO)-2]
               REPEAT
*           LOOP UNTIL NOT(LOOKPRO[LEN(LOOKPRO)-1,2] MATCHES "0X'-'1N") DO
*             LOOKPRO=LOOKPRO[1,LEN(LOOKPRO)-2]
*           REPEAT
               LOOP UNTIL NOT(LOOKPRO[LEN(LOOKPRO)-1,2] MATCHES "0X'/'1N") DO
                  LOOKPRO=LOOKPRO[1,LEN(LOOKPRO)-2]
               REPEAT
************************************************************************
*           IF NOT(PRO[1,MASK.LEN] MATCHES OLD.PRO.FORMAT) THEN GO SKIP.BILL

               IF PRO.ID=NEW.ID THEN GO SKIP.BILL  ; * Nothing to do
               IF TESTING AND USER#'MKERBOW' THEN  ; *OWEN
                  CRT @(0,23):"Found One! ",PRO.ID,NEW.ID:@(-4):
                  INPUT NUL:
               END
               CRT @(0,22):COUNTER.2'R%5':' of ':NUM.BILLS:'  ':PRO.ID:"    ":NEW.ID:@(-4):
               NEW.ON.FILE=0
               AMOUNT.ON.FILE=''
               READV NUL FROM F.BILLS,NEW.ID,1 THEN NEW.ON.FILE=1
               READV AMOUNT.ON.FILE FROM F.BILLS.HIST,NEW.ID,8 THEN NEW.ON.FILE=1
               READV NUL FROM F.BILLS.CRX,NEW.ID,1 THEN NEW.ON.FILE=1
               IF EDI THEN
*DF                 READV NUL FROM F.EDI.BILLS.HIST,NEW.EDI.ID,1 THEN NEW.ON.FILE=1
                  READV NUL FROM F.EDI.BILLS.HIST,NEW.ID,1 THEN NEW.ON.FILE=1
               END
*****************************************************************************
               IF UP.OPEN THEN
                  READV NUL FROM F.UNPROCESS,'FB.BILLS,':CLIENT.ID:'*':NEW.ID,1 THEN NEW.ON.FILE=1
               END
*****************************************************************************
               IF NEW.ON.FILE=1 THEN
*             CALL ELINE('ERROR Cannot Change Bill ':PRO.ID:' Client ':CLIENT.ID:' Already on File')
                  ERROR=CLIENT.ID:@VM:CLIENT.NAME:@VM:PRO.ID:@VM:AMOUNT.ON.FILE/100:@VM:NEW.ID:@VM:'Already on File!'
                  ERROR.TEXT=CHANGE(ERROR,@VM,' ')
                  IF TESTING AND USER#'MKERBOW' THEN
                     CALL ELINE(ERROR.TEXT)
                  END ELSE
                     CRT @(0,23):ERROR.TEXT[1,79]:
                  END
                  ERROR.ARRAY<-1>=ERROR
                  GO SKIP.BILL
               END
               READ DBILL FROM F.BILLS.HIST,PRO.ID THEN
                  IF DBILL<88>#'' THEN
                     OLD.EDI.ID=DBILL<88>
                     OLD.EDI.HIST.ID=FIELD(OLD.EDI.ID,"*",2):"*":FIELD(OLD.EDI.ID,"*",3):"*":FIELD(OLD.EDI.ID,"*",4)
                     DBILL<88>=NEW.EDI.ID
                     IF EDI THEN
*DF                       READ DEDI.BILLS FROM F.EDI.BILLS.HIST,OLD.EDI.ID THEN
                        READ DEDI.BILLS FROM F.EDI.BILLS.HIST,OLD.EDI.HIST.ID THEN
*DF                          IF TESTING ELSE DELETE F.EDI.BILLS.HIST,OLD.EDI.ID
                           IF TESTING ELSE DELETE F.EDI.BILLS.HIST,OLD.EDI.HIST.ID
*DF                          IF TESTING ELSE WRITE DEDI.BILLS ON F.EDI.BILLS.HIST,NEW.EDI.ID
                           IF TESTING ELSE WRITE DEDI.BILLS ON F.EDI.BILLS.HIST,NEW.ID
                        END
                     END
                  END
                  IF TESTING ELSE DELETE F.BILLS.HIST,PRO.ID
                  IF TESTING ELSE WRITE DBILL ON F.BILLS.HIST,NEW.ID
                  CALL UPD.FB.STATUS.UPDATE(CLIENT.ID,PRO.ID,F.STATUS.UPDATE) ; * JMK248
                  CHECK.NO=DBILL<14>

*OH               IF CHECK.NO#'' THEN
*OH                  READ DCHECKS FROM F.CHECKS,CHECK.NO THEN
*OH                     LOCATE PRO.ID IN DCHECKS<7> SETTING POS THEN
*OH                        DCHECKS<7,POS>=NEW.ID
*OH                        IF TESTING ELSE WRITE DCHECKS ON F.CHECKS,CHECK.NO
*OH                     END
*OH                  END

*OH                  OPEN '','FB.CHECKS,':CLIENT.ID TO F.CL.CHECKS THEN
*OH                     READ DCHECKS FROM F.CL.CHECKS,CHECK.NO THEN
*OH                        LOCATE PRO.ID IN DCHECKS<7> SETTING POS THEN
*OH                           DCHECKS<7,POS>=NEW.ID
*OH                           IF TESTING ELSE WRITE DCHECKS ON F.CL.CHECKS,CHECK.NO
*OH                        END
*OH                     END
*OH                  END
*OH               END


                  IF CHECK.NO#'' THEN
                     READV DTL.CNT FROM F.CHECKS.HDR,CHECK.NO,25 THEN
                        FOR X = 1 TO DTL.CNT
                           CHECK.DTL.ID=CHECK.NO:"*":X
                           READ DCHK.DTL FROM F.CHECKS.DTL,CHECK.DTL.ID THEN
                              IF DCHK.DTL<1>=PRO.ID THEN
                                 DCHK.DTL<1>=NEW.ID
                                 IF TESTING ELSE WRITE DCHK.DTL ON F.CHECKS.DTL,CHECK.DTL.ID
                              END
                           END
                        NEXT X
                     END
                  END

                  IF FPX THEN
                     PROC.DATE=DBILL<37>
                     IF PROC.DATE#'' AND DBILL<39>='O' THEN
                        READ DFPX FROM F.FPX,PROC.DATE ELSE DFPX=''
                        LOCATE PRO.ID IN DFPX SETTING POS THEN
                           DEL DFPX<POS>
                        END
                        DFPX<-1>=NEW.ID
                        IF TESTING ELSE WRITE DFPX ON F.FPX,PROC.DATE
                     END
                  END
*****************************************************************************
                  READ DBILL FROM F.BILLS,PRO.ID THEN
                     IF DBILL<88>#'' THEN
                        DBILL<88>=NEW.EDI.ID
                     END
                     IF TESTING ELSE DELETE F.BILLS,PRO.ID
                     IF TESTING ELSE WRITE DBILL ON F.BILLS,NEW.ID
                  END
               END
               READ DBILL FROM F.BILLS.CRX,PRO.ID THEN
                  IF TESTING ELSE DELETE F.BILLS.CRX,PRO.ID
                  IF TESTING ELSE WRITE DBILL ON F.BILLS.CRX,NEW.ID
               END
*****************************************************************************
               IF UP.OPEN THEN
                  READ DBILL FROM F.UNPROCESS,'FB.BILLS,':CLIENT.ID:'*':PRO.ID THEN
                     IF TESTING ELSE DELETE F.UNPROCESS,'FB.BILLS,':CLIENT.ID:'*':PRO.ID
                     IF TESTING ELSE WRITE DBILL ON F.UNPROCESS,'FB.BILLS,':CLIENT.ID:'*':NEW.ID
                  END
               END
*****************************************************************************
               PAY.ID=CLIENT.ID:"*":PRO.ID
               NEW.PAY.ID=CLIENT.ID:"*":NEW.ID
               READ DBILL FROM F.PAY,PAY.ID THEN
                  IF TESTING ELSE DELETE F.PAY,PAY.ID
                  IF TESTING ELSE WRITE DBILL ON F.PAY,NEW.PAY.ID
               END
*****************************************************************************
               OPEN.ID=CLIENT.ID:"*":PRO.ID
               NEW.OPEN.ID=CLIENT.ID:"*":NEW.ID
               READ DBILL FROM F.OPEN,OPEN.ID THEN
                  IF TESTING ELSE DELETE F.OPEN,OPEN.ID
                  IF TESTING ELSE WRITE DBILL ON F.OPEN,NEW.OPEN.ID
                  IF FOX THEN
                     PROC.DATE=DBILL<37>
                     READ DFOX FROM F.FOX,PROC.DATE ELSE DFOX=''
                     LOCATE OPEN.ID IN DFOX SETTING POS THEN
                        DEL DFOX<POS>
                     END
                     DFOX<-1>=NEW.OPEN.ID
                     IF TESTING ELSE WRITE DFOX ON F.FOX,PROC.DATE
                  END
*****************************************************************************
               END
SKIP.BILL:     ***
            REPEAT
         END
SKIP.CLIENT:***
      REPEAT
      IF ERROR.ARRAY#'' THEN
         ERROR.ARRAY="Client #":@VM:"Client Name":@VM:"Old Pro Number":@VM:"$ on File":@VM:"New Pro Number":@VM:"Error":ERROR.ARRAY
         ERROR.ARRAY=CHANGE(ERROR.ARRAY,@VM,CHAR(9))
         ERROR.ID='CHANGE_PRO_ERRORS-':CARRIER.ID:'.XLS'
TRY.AGAIN:***
         WRITE ERROR.ARRAY ON F.BD,ERROR.ID ELSE
            CALL ELINE('Close your Spreadseet ':ERROR.ID)
            GO TRY.AGAIN
         END
         CRT @(0,23)
         FOR X = 1 TO 5
            CRT
         NEXT X
         CRT "Errors Written to BILLDATA.":USER:" ":ERROR.ID
         CRT
         CRT "Press [Enter] to Acknowledge: ":
         INPUT NUL
      END
