*THIS FILE CURRENTLY BEING WORKED ON BY KEITH
      SUBROUTINE FB.2.1.ZIP(ZIP.ARR,F.CLIENTS.CUSTS,F.EXPENSE,QI)
*
* SUBROUTINE TO ENTER ZIP CODES
*
* FREIGHT BILLING PACKAGE
*
* AUTHOR:      VALERIE DOTY
* DATE:        JULY 21, 1994
* DESCRIPTION: THIS PROGRAM ALLOWS THE ENTRY OF UP TO 50 ZIP CODES FOR
*              THE ROUTE OF THIS SHIPMENT.  THE FIRST ZIP MUST BE THE
*              ORIGIN, THE LAST MUST BE THE DESTINATION, AND ALL THE
*              ZIPS MUST BE IN ORDER SO THE MILEAGE WILL CALCULATE
*              CORRECTLY.  COPIED FROM FB.2.1.DIST.
*
* THIS PROGRAM IS A PROPRIETARY PRODUCT OF AUTOMATED FREIGHT SYSTEMS
* AND MAY NOT BE USED, COPIED OR MODIFIED WITHOUT THE EXPRESS
* WRITTEN CONSENT OF SAME.
*
*********************************************************************
*
$INCLUDE PROG.ADMIN INC_OPTIONS
*
* Initialize variables
*
      PROMPT ''
      OPT = QI
      IF OPT = 'I' THEN
         INQUIRE = 1
         MODE = 'EDIT'
      END ELSE
         INQUIRE = 0
         MODE = 'INPUT'
      END
      LN = 0
      UPDATE.CUST.ZIP='N'
      GOSUB CLEAR.WINDOW
*
* Display headings
*
      IF OPT = 'V' THEN
         CRT @(27,6):"-------------------- Zip Codes --------------------"
         CRT @(27,7):" Cust#  Name    Zip  City & ST   Wght  Expense"
         CRT @(27,8):STR("-",51)
      END ELSE
         CRT @(24,6):"--------------------- Zip Codes ----------------------"
         CRT @(24,7):"Lin Cust#  Name    Zip  City & ST   Wght  Expense"
         CRT @(24,8):STR("-",55)
      END
*
* Start input
*
      PAGE = 1
      GOSUB 9000
*
* Enter zip code line number.
*
100:  IF MODE = 'INPUT' THEN
         LN += 1
         QI = LN
         IF LN GT STOP THEN
            PAGE += 1
            GOSUB 9000
         END
      END ELSE
         HELP = "Enter Line Num. ''=End. 'B'=Back. 'F'=Forward page. 'EX'=Exit."
         CALL GEN.IN(36,16,'Enter line number. ###','',Q,0,3,'','',0,-3,
            16,0,QI,HELP,0,23)
      END
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI = 'B'
            PAGE -= 1
            IF PAGE = 0 THEN PAGE=1
            GOSUB 9000
         CASE QI = 'F'
            PAGE += 1
            GOSUB 9000
         CASE QI = ''
            GOTO 9900
         CASE QI = 'X'
            GOSUB CLEAR.WINDOW
            RETURN
         CASE QI = 'EX'
            RELEASE
            STOP
         CASE NUM(QI) AND INQUIRE
            CALL ELINE('Cannot access detail in inquiry.')
         CASE NUM(QI)
            SEL = QI
            GOSUB 8000
            BEGIN CASE
               CASE QI = '' & OPT='V'
                  RETURN
               CASE QI = 'X'
                  GOSUB CLEAR.WINDOW
                  RETURN
               CASE LN + 1 > 50 AND MODE = 'INPUT'
                  MODE = 'EDIT'
               CASE 1
                  NULL
            END CASE
      END CASE
*
      GOTO 100
*
*-----------------------------------------------------------------------
*
* INTERNAL SUBROUTINES
*
*-----------------------------------------------------------------------
*
* Enter zip codes
*
8000: IF SEL LT START ! SEL GT STOP THEN
         CALL ELINE('Invalid entry.')
         RETURN
      END
*
      GOSUB 9100
      IF SEL=1 THEN GO 8010
*
8005: HELP = "Enter Cust #. "
      IF OPT = 'V' THEN
         MASK = SPACE(6)
         HELP := "''=End. 'X'=Back. 'EX'=Exit."
      END ELSE
         HELP := "''=Accept. 'D'=Delete. 'E'=Change Mode. 'X'=Back. 'EX'=Exit."
         MASK = ZIP.ARR<4,SEL>'L#6'
      END
      CALL GEN.IN(27,LINE,MASK,'',Q,0,6,'','',2,-6,LINE,0,QI,
         HELP,0,23)
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI = 'EX'
            RELEASE
            STOP
         CASE QI = 'X'
            IF OPT NE 'V' THEN CRT @(27,LINE):ZIP.ARR<4,SEL>'L#6'
            SEL=SEL-1
            LINE=LINE-1
            IF MODE='INPUT' THEN LN=LN-1
            IF SEL=1 THEN
              GO 8010
            END ELSE
              GO 8020
            END
         CASE QI = 'D' & OPT NE 'V'
            DEL ZIP.ARR<1,SEL>
            DEL ZIP.ARR<2,SEL>
            DEL ZIP.ARR<3,SEL>
            DEL ZIP.ARR<4,SEL>
            DEL ZIP.ARR<5,SEL>
            DEL ZIP.ARR<6,SEL>
            GOSUB 9000
            RETURN
         CASE QI = 'E' & OPT NE 'V'
            MODE = 'EDIT'
            CRT @(27,LINE):ZIP.ARR<4,SEL>'L#6'
            RETURN
         CASE QI = '' & OPT NE 'V'
            Q = ZIP.ARR<4,SEL>
            IF Q = '' & MODE = 'INPUT' THEN
               MODE = 'EDIT'
               RETURN
            END
            IF Q = '' THEN RETURN
         CASE QI = ''
            X = DCOUNT(ZIP.ARR<1>,CHAR(253))
            FOR I = 1 TO X
               IF ZIP.ARR<7,I> NE '*' THEN
                  CALL ELINE('All zip codes have not been verified.')
                  GOTO 8005
               END
            NEXT I
            RETURN
         CASE OPT = 'V'
            IF QI # ZIP.ARR<4,SEL> THEN
               CALL ELINE('INVALID CUST #.')
               GOTO 8005
            END
            ZIP.ARR<7,SEL> = '*'
         CASE NUM(QI) AND LEN(QI) < 6
            IF ZIP.ARR<4,SEL>#Q'R%5' THEN
              UPDATE.CUST.ZIP='Y'
            END
            ZIP.ARR<4,SEL> = Q'R%5'
         CASE 1
            CALL ELINE('INVALID CUST #.')
            GOTO 8005
      END CASE
*
      IF OPT NE 'V' THEN
         CUST.NUM = ZIP.ARR<4,SEL>
         GOSUB 8080
         IF ACK = 'ERR' THEN
           CALL ELINE('Client number ':ZIP.ARR<4,SEL>:' is not on file')
           GOTO 8005
         END
         IF ACK = 'ERR-NO.CODE' THEN
           CALL ELINE('Client number ':ZIP.ARR<4,SEL>:' does not have an A or I code')
           GOTO 8005
         END
         CRT @(27,LINE):ZIP.ARR<4,SEL>'L#5'
      END
*
8010: HELP = "Enter Zip Code. "
      IF OPT = 'V' THEN
         MASK = SPACE(6)
         HELP := "''=End. 'X'=Back. 'EX'=Exit."
      END ELSE
         HELP := "''=Accept. 'D'=Delete. 'E'=Change Mode. 'X'=Back. 'EX'=Exit."
         MASK = ZIP.ARR<1,SEL>'L#6'
      END
      CALL GEN.IN(42,LINE,MASK,'',Q,0,6,'','',2,-6,LINE,0,QI,
         HELP,0,23)
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI = 'EX'
            RELEASE
            STOP
         CASE QI = 'X'
            IF OPT NE 'V' THEN CRT @(42,LINE):ZIP.ARR<1,SEL>'L#6'
            IF SEL=1 THEN
              RETURN
            END ELSE
              GOTO 8005
            END
         CASE QI = 'D' & OPT NE 'V'
            DEL ZIP.ARR<1,SEL>
            DEL ZIP.ARR<2,SEL>
            DEL ZIP.ARR<3,SEL>
            DEL ZIP.ARR<4,SEL>
            DEL ZIP.ARR<5,SEL>
            GOSUB 9000
            RETURN
         CASE QI = 'E' & OPT NE 'V'
            MODE = 'EDIT'
            CRT @(42,LINE):ZIP.ARR<1,SEL>'L#6'
            RETURN
         CASE QI = '' & OPT NE 'V'
            Q = ZIP.ARR<1,SEL>
            IF Q = '' & MODE = 'INPUT' THEN
               MODE = 'EDIT'
               RETURN
            END
            IF Q = '' THEN RETURN
*df         CASE QI = ''
*df            X = DCOUNT(ZIP.ARR<1>,CHAR(253))
*df            FOR I = 1 TO X
*df               IF ZIP.ARR<7,I> NE '*' THEN
*df                  CALL ELINE('All zip codes have not been verified.')
*df                  GOTO 8010
*df               END
*df            NEXT I
*df            RETURN
         CASE OPT = 'V'
            IF QI # ZIP.ARR<1,SEL> THEN
               CALL ELINE('INVALID ZIP CODE.')
               GOTO 8010
            END
            ZIP.ARR<7,SEL> = '*'
         CASE NUM(QI) AND LEN(QI) < 6
            ZIP.ARR<1,SEL> = Q
         CASE QI MATCH '1A1N1A1N1A1N'
            ZIP.ARR<1,SEL> = Q
         CASE 1
            CALL ELINE('INVALID ZIP CODE.')
            GOTO 8010
      END CASE
*
      IF OPT NE 'V' THEN
         CODE = ZIP.ARR<1,SEL>
         GOSUB 8090
         IF ACK = 'ERR' THEN GOTO 8010
         CRT @(42,LINE):ZIP.ARR<1,SEL>'L#6'
      END
      IF SEL=1 THEN RETURN
*
8020: HELP = "Enter Weight. "
      IF OPT = 'V' THEN
         MASK = SPACE(5)
         HELP := "''=End. 'X'=Back. 'EX'=Exit."
      END ELSE
         HELP := "''=Accept. 'X'=Back. 'EX'=Exit."
         MASK = ZIP.ARR<5,SEL>'R#5'
      END
      CALL GEN.IN(60,LINE,MASK,'',Q,0,5,'','',2,-5,LINE,0,QI,
         HELP,0,23)
      QI = OCONV(QI,'MCU')
      IF QI='' AND ZIP.ARR<5,SEL>#'' AND OPT # 'V' THEN
        QI=ZIP.ARR<5,SEL>
        Q=QI
      END
      BEGIN CASE
         CASE QI = 'EX'
            RELEASE
            STOP
         CASE QI = 'X'
            IF OPT NE 'V' THEN CRT @(60,LINE):ZIP.ARR<5,SEL>'R#5'
            GOTO 8010
*df         CASE QI = '' AND OPT = 'V'
*df            X = DCOUNT(ZIP.ARR<5>,CHAR(253))
*df            FOR I = 1 TO X
*df               IF ZIP.ARR<7,I> NE '*' THEN
*df                  CALL ELINE('All zip codes have not been verified.')
*df                  GOTO 8020
*df               END
*df            NEXT I
*df            RETURN
         CASE OPT = 'V'
            IF QI # ZIP.ARR<5,SEL> THEN
               CALL ELINE('INVALID WEIGHT.')
               GOTO 8020
            END
            ZIP.ARR<7,SEL> = '*'
         CASE NUM(QI) AND QI > 0 
            ZIP.ARR<5,SEL> = Q
         CASE 1
            CALL ELINE('INVALID WEIGHT.')
            GOTO 8020
      END CASE
      CRT @(60,LINE):ZIP.ARR<5,SEL>'R#5'
*
8030: HELP = "Enter Expense Code. "
      IF OPT = 'V' THEN
         MASK = SPACE(13)
         HELP := "''=End. 'X'=Back. 'EX'=Exit."
      END ELSE
         HELP := "''=Accept. 'X'=Back. 'EX'=Exit."
         MASK = ZIP.ARR<6,SEL>'R#13'
      END
      CALL GEN.IN(66,LINE,MASK,'',Q,0,13,'','',2,-13,LINE,0,QI,
         HELP,0,23)
      QI = OCONV(QI,'MCU')
      IF QI='' AND ZIP.ARR<6,SEL>#'' AND OPT#'V' THEN
        QI=ZIP.ARR<6,SEL>
        Q=QI
      END
      BEGIN CASE
         CASE QI = 'EX'
            RELEASE
            STOP
         CASE QI = 'X'
            IF OPT NE 'V' THEN CRT @(66,LINE):ZIP.ARR<6,SEL>'L#13'
            GOTO 8020
*df         CASE QI = '' AND OPT = 'V'
*df            X = DCOUNT(ZIP.ARR<6>,CHAR(253))
*df            FOR I = 1 TO X
*df               IF ZIP.ARR<7,I> NE '*' THEN
*df                  CALL ELINE('All zip codes have not been verified.')
*df                  GOTO 8030
*df               END
*df            NEXT I
*df            RETURN
         CASE OPT = 'V'
            IF LEN(QI)=4 THEN QI='1-':QI:'-6035'
            IF QI # ZIP.ARR<6,SEL> THEN
               CALL ELINE('INVALID EXPENSE CODE.')
               GOTO 8030
            END
            ZIP.ARR<7,SEL> = '*'
*DF         CASE NUM(QI) AND QI > 0 
*DF            ZIP.ARR<5,SEL> = Q
*DF         CASE 1
*DF            CALL ELINE('INVALID WEIGHT.')
*DF            GOTO 8020
      END CASE
      IF LEN(Q)=4 THEN Q='1-':Q:'-6035'
      READ DUMMY FROM F.EXPENSE,Q ELSE
        CALL ELINE(Q:' Is a Invalid Expense Code')
        GOTO 8030
      END
      IF DUMMY<5>='I' THEN
        CALL ELINE(Q:' Is an Inactive Expense Code')
        GOTO 8030
      END
      ZIP.ARR<6,SEL>=Q
      CRT @(66,LINE):ZIP.ARR<6,SEL>'L#13'
*
      RETURN
*
* Check for valid customer number
*
8080: IF CUST.NUM # '' THEN
        READ DCUST.REC FROM F.CLIENTS.CUSTS,CUST.NUM ELSE
          ACK='ERR'
          RETURN
        END
*DF        BEGIN CASE
*DF          CASE DCUST.REC<2>='A' 
*DF            ZIP.ARR<6,SEL>='1-0102-6035'
*DF          CASE DCUST.REC<2>='I' 
*DF            ZIP.ARR<6,SEL>='1-0070-6035'
*DF          CASE -1
*DF            ACK='ERR-NO.CODE'
*DF            RETURN 
*DF        END CASE
        CRT @(33,LINE) : DCUST.REC<1>'L#8'
        IF UPDATE.CUST.ZIP='Y' THEN
          ZIP.ARR<1,SEL>=DCUST.REC<7>
          UPDATE.CUST.ZIP='N'
        END
        ACK=''
      END
      RETURN
8090: IF CODE # '' THEN
         CITY='' ; STATE=''
         CALL FB.READ.ZIP( CODE, CITY, STATE )
         IF CITY='' THEN ACK='ERR' ; RETURN
         ZIP.ARR<2,SEL> = CITY
         ZIP.ARR<3,SEL> = STATE
      END
      CITY.STATE=TRIM(ZIP.ARR<2,SEL>'L#8':' ':ZIP.ARR<3,SEL>'L#2')
      CRT @(48,LINE) : CITY.STATE'L#11'
      ACK = ''
*
      RETURN
*
* Print page
*
9000: START = (PAGE * 7) - 6
      STOP = START + 6
      FOR SEL = START TO STOP
         GOSUB 9100
         IF OPT NE 'V' THEN
            IF ZIP.ARR<1,SEL> = '' THEN
               CRT @(24,LINE):SEL'L#3':@(-4):
            END ELSE
               CRT @(24,LINE):SEL'L#2':' ':ZIP.ARR<4,SEL>'L#5':
               IF SEL#1 THEN
                 CUST.NUM=ZIP.ARR<4,SEL>
                 GOSUB 8080
               END
               CRT @(42,LINE):ZIP.ARR<1,SEL>'L#6':
               IF ZIP.ARR<2,SEL> = '' AND ZIP.ARR<3,SEL> = '' THEN
                  CODE = ZIP.ARR<1,SEL>
                  GOSUB 8090
               END ELSE
                   CITY.STATE=TRIM(ZIP.ARR<2,SEL>'L#8':' ':ZIP.ARR<3,SEL>'L#2')
                  CRT @(48,LINE) : CITY.STATE'L#11'
               END
               IF SEL#1 THEN
                 CRT @(60,LINE):ZIP.ARR<5,SEL>'R#5'
                 CRT @(66,LINE):ZIP.ARR<6,SEL>'L#13'
               END
            END
         END
      NEXT SEL
*
      RETURN
*
* Calculate line
*
9100: X = REM(SEL,9)
      IF X = 0 THEN X = 9
      LINE = 8 + X
*
      RETURN
*
* Compress zip codes and return
*
9900: IF NOT(INQUIRE) THEN
         TIMES = DCOUNT(ZIP.ARR<1>,CHAR(253))
         NEW.ZIP.ARR=''
         LAST.ZIP='FIRST'
         ZIP.POS=1
         FOR I = 1 TO TIMES
           IF ZIP.ARR<1,I>#'' THEN
             IF LAST.ZIP=ZIP.ARR<1,I> AND LAST.ZIP#'FIRST' ELSE
               FOR X = 1 TO 6
                 NEW.ZIP.ARR<X,ZIP.POS>=ZIP.ARR<X,I>
               NEXT X
               ZIP.POS=ZIP.POS+1
*              LAST.ZIP=ZIP.ARR<1,I> ; * Allow Dups Per Paul
             END
           END
         NEXT I
      END
      ZIP.ARR=NEW.ZIP.ARR
      GOSUB CLEAR.WINDOW
*
      RETURN
*
CLEAR.WINDOW:***
      FOR I = 6 TO 16
        CRT @(24,I):@(-4)
      NEXT I
      RETURN
*
**********************************************************************
*
   END
