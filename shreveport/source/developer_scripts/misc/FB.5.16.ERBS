* PROGRAM FB.5.16.ERBS
* Routine to make sense of Easton Riddell Bell sports weekly refund spreadsheets from STI.
*
* Builds Client#-zero.txt files from a file supplied by STI
*  and then gives the option to run FB.5.16 which will do the actual zeroing of bills.
*
* Bell
* Easton
* Riddell Elyria
* Riddell Chicago
* Riddell Recon

** "01148"   Bell Sports Inc., IL
** "01371"   Riddell, OH
** "01398"   Riddell Consumer, IL
** "01539"   Easton, UT
** "01704"   Riddell-Reconditioned Equip, OH
** "01747"   Bell Micro, CA

$INCLUDE PROG.ADMIN INC_OPTIONS
$INCLUDE FILE.DEFS INC_CLIENTS
*
SEQ=0
PROMPT''
CALL GET.USER(USER)
CALL CHANNEL(CH.NUM)

OPEN '','BILLDATA.':USER TO F.BILLDATA ELSE
   CALL ELINE("Cant Open file BILLDATA.":USER)
   STOP
END

OPEN '','FB.BILLS.CRX' TO F.BILLS.CRX ELSE
   CALL ELINE("Cant Open file FB.BILLS.CRX")
   STOP
END

OPEN 'FBWORK':CH.NUM TO F.WORK ELSE
   EXECUTE 'CREATE-FILE FBWORK':CH.NUM:' 1 1001'
   OPEN '','FBWORK':CH.NUM TO F.WORK ELSE
      CALL OPEN.ABORT('FBWORK':CH.NUM,PROG.NAME)
   END
END

PROG.NAME='FB.5.16.ERBS'
PROG.DESC="Zero FB for Easton, Riddell & Bell Sports"
PACK.NAME="Freight Billing"

 UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.5.16.ERBS' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
 CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
CALL AFS.SCR.HEAD(CO.ID, FILE.ID, '', PROG.NAME, PROG.DESC, PACK.NAME, CO.NAME, TIME.DATE, 1)

CRT @(0,03):@(-3):
CRT @(0,05):\Instructions for use BEFORE Continuing:\
CRT @(0,07):\Step  1) Open GSR file supplied from STI or client/s\
CRT @(0,09):\Step  2) Delete Non Invoice related lines, total and summary lines\
CRT @(0,11):\Step  3) Do a 'Save As' - choose 'Other formats - Text(TAB delimited) (*.txt)'\
CRT @(0,12):"         I.E (CLICK File, CLICK Save As, 'Change Save as type:' to:"
CRT @(0,13):\            (Text (Tab Delimited)(*.txt))\
CRT @(0,15):\Step  4) Name the file Inv_Easto_YYYYMMDD.txt (Example: Inv_Easto_20091015.txt)\
CRT @(0,17):\         Ignore the 'Not Compatible' messages you receive and click OK, then YES\

CLIENTS = ''

CLEARFILE F.WORK

*
*** ID.XLS = "Inv_Easto_20090914_2132-1.txt"
*** ID.XLS = "Inv_Easto_20091008_1707-1Easton.txt"
*** ID.XLS = "Inv_Easto_20091015.txt"

ENTER.SOURCE.FILE:***

ID.FILE = ''

HELP = 'Enter Source file e.g. Inv_Easto_20091015.txt,  [EX]it'

CALL GEN.IN(0,22,'Enter Source file ','',Q,0,22,'','',0,-22,18,1,QI,HELP,0,23)
BEGIN CASE
   CASE QI='X' OR QI='x'
      CRT @(0,18):@(-3):
      GOTO ENTER.SOURCE.FILE
   CASE QI='EX' OR QI='ex' OR QI='Ex' OR QI='eX'
      STOP
   CASE QI=''
      CALL ELINE('Entry is required')
      GO ENTER.SOURCE.FILE
END CASE

ID.FILE=QI

CRT @(0,22):ID.FILE
*
READ XLS.REC FROM F.BILLDATA,ID.FILE ELSE
   CALL ELINE("Can't read item ":ID.FILE:" on your u: drive")
   GO ENTER.SOURCE.FILE
END

** Remove blank lines
CONVERT CHAR(9) TO @VM IN XLS.REC

NEW.XLS.REC = ''
N.LINES = DCOUNT(XLS.REC,@AM)
FOR IL = 1 TO N.LINES
   W.LINE = XLS.REC<IL>
   TST.FIELD = W.LINE<1,1>
   IF TST.FIELD NE '' THEN NEW.XLS.REC<-1> = W.LINE
NEXT IL

XLS.REC = NEW.XLS.REC

CRT @(0,03):@(-3):
*
CONVERT CHAR(9) TO @VM IN XLS.REC
*
N.LINES = DCOUNT(XLS.REC,@AM)
FOR IL = 1 TO N.LINES
   W.LINE = XLS.REC<IL>
   TRACKING.ID = TRIM(W.LINE<1,6>)
   TRACKING.ID2 = TRACKING.ID[4,99]
   IF TRACKING.ID[1,3] = "735" AND TRACKING.ID[4,1] = "0" THEN TRACKING.ID2 = TRACKING.ID[5,99]

   IF TRACKING.ID = "" THEN GOTO SKIPIT

   CRT @(10,10):"Locating Bill ":TRACKING.ID:"  --- Line # ":IL:" of ": N.LINES : @(-4)

   FND.REC = ''

   W.CARRIER = "00015"
   ID.PRO = W.CARRIER:"*":TRACKING.ID:"*0"
   READ TEST.REC FROM F.BILLS.CRX, ID.PRO THEN
      FND.REC<1,-1> = TEST.REC<1>
      FND.REC<2,-1> = W.CARRIER
      FND.REC<3,-1> = ID.PRO
   END

   ID.PRO = W.CARRIER:"*":TRACKING.ID2:"*0"
   READ TEST.REC FROM F.BILLS.CRX, ID.PRO THEN
      FND.REC<1,-1> = TEST.REC<1>
      FND.REC<2,-1> = W.CARRIER
      FND.REC<3,-1> = ID.PRO
   END

   W.CARRIER = "01075"
   ID.PRO = W.CARRIER:"*":TRACKING.ID:"*0"
   READ TEST.REC FROM F.BILLS.CRX, ID.PRO THEN
      FND.REC<1,-1> = TEST.REC<1>
      FND.REC<2,-1> = W.CARRIER
      FND.REC<3,-1> = ID.PRO
   END

   ID.PRO = W.CARRIER:"*":TRACKING.ID2:"*0"
   READ TEST.REC FROM F.BILLS.CRX, ID.PRO THEN
      FND.REC<1,-1> = TEST.REC<1>
      FND.REC<2,-1> = W.CARRIER
      FND.REC<3,-1> = ID.PRO
   END

   N.RECS = DCOUNT(FND.REC<1>,@VM)

   IF N.RECS LE "0" THEN
      WRK.CLIENT = "ERROR"                                       ;* Bill not found.
      READ WORK.REC FROM F.WORK, WRK.CLIENT ELSE WORK.REC = ""
      WORK.REC<-1> = TRACKING.ID
      WRITE WORK.REC ON F.WORK, WRK.CLIENT
   END ELSE
      FOR II = 1 TO N.RECS
         WRK.CLIENT = FND.REC<1,II>
         WRK.PRO    = FND.REC<3,II>
         READ WORK.REC FROM F.WORK, WRK.CLIENT ELSE WORK.REC = ""
         LOCATE WRK.PRO IN WORK.REC SETTING POS THEN
            CRT FND.REC<1,II>:"  ":
            CRT FND.REC<2,II>:"  ":
            CRT FND.REC<3,II>:"  ":
            CRT FND.REC<4,II> 
            CALL ELINE(" Possible Duplicate")       
         END ELSE
            WORK.REC<-1> = WRK.PRO:"|":IL
            XLS.REC<IL,17> = FND.REC<1,II>
            XLS.REC<IL,18> = FND.REC<2,II>
            XLS.REC<IL,19> = FND.REC<3,II>
            XLS.REC<IL,20> = FND.REC<4,II>
            WRITE WORK.REC ON F.WORK, WRK.CLIENT
         END
      NEXT II
   END

SKIPIT :
   
NEXT IL

TOTAL.ARRAY = ''
*
EOF = "N"
EXECUTE \SSELECT FBWORK\:CH.NUM CAPTURING OUTPUT
*
LOOP
   READNEXT WRK.CLIENT ELSE EOF = "Y"
UNTIL EOF = "Y" DO
   READ WRK.REC FROM F.WORK, WRK.CLIENT THEN
      GOSUB BUILD.ARRAY
   END
REPEAT

READ WORK.REC FROM F.WORK, 'ERROR' THEN
   CRT @(0,3):@(-3)
   CRT @(0,4):"Bills not found"
   CRT @(0,5):"---------------"
   CRT
   NB = DCOUNT(WORK.REC,@AM)
   FOR MB = 1 TO NB
       CRT WORK.REC<MB,1> "R#15"
   NEXT MB
   CALL ELINE("Please check on the bills which could not be found above")

*   W.DATE = OCONV(DATE(),"D2/")
*   CONVERT "/" TO "" IN W.DATE
*   ID.ZERO = "ERROR_":W.DATE:"_NOTFOUND-ZERO.XLS"
*   WRITE WORK.REC ON F.BILLDATA, ID.ZERO
*   CALL ELINE("Check file ":ID.ZERO:" on your U: drive for missing bills above")
END

CONVERT @VM TO CHAR(9) IN XLS.REC
ID.RECON = FIELD(ID.FILE,".",1):"_RECON.XLS"

WRITE XLS.REC ON F.BILLDATA,ID.RECON THEN
   CALL ELINE("Reconciliation file ":ID.RECON:" written to your U: drive")
END


GOSUB ZERO.BILLS

STOP

BUILD.ARRAY :

OPEN '','FB.BILLS.HIST,':WRK.CLIENT TO F.BILLS.HIST ELSE
   RETURN
END

OLDEST.BILL.DATE    = ""
OLDEST.PROCESS.DATE = ""
LATEST.BILL.DATE    = ""
LATEST.PROCESS.DATE = ""

TOT.SRC.CHARGE = 0  ;* Total amount from source file
TOT.CHARGE = 0
TOT.BILLS  = 0

CL.XLS.REC = ' '
CL.XLS.REC<2> = ' '               ;* Add dummy line to mimick the usual SS spreadsheet used
CL.XLS.REC<3,1> = "Carrier #"
CL.XLS.REC<3,5> = "Pro #"
CL.XLS.REC<3,6> = "Bill Date"
CL.XLS.REC<3,7> = "Process Date"
CL.XLS.REC<3,17> = "Actual Charge"

N.PROS = DCOUNT(WRK.REC,@AM)
FOR PR = 1 TO N.PROS
**   CRT @(10,12):"Building Client 'zero' file - bill ":PR:" of ":N.PROS : @(-4)
   ID.HIST = FIELD(WRK.REC<PR>,"|",1)
   SRC.LN  = FIELD(WRK.REC<PR>,"|",2)
   SRC.CHARGE = XLS.REC<SRC.LN,7>
   CONVERT "$" TO "" IN SRC.CHARGE
   SRC.CHARGE = ICONV(SRC.CHARGE,"MR2")
   READ HIST.REC FROM F.BILLS.HIST, ID.HIST ELSE GOTO SKIPIT3
   BILL.DATE = HIST.REC<1>
   BILL.CHARGE = HIST.REC<8> + 0
   PROCESS.DATE = HIST.REC<37>
   XLINE = FIELD(ID.HIST,"*",1)
   XLINE<1,5> = \ \:FIELD(ID.HIST,"*",2):\ \
   XLINE<1,6> = OCONV(BILL.DATE,"D2/")
   XLINE<1,7> = OCONV(PROCESS.DATE,"D2/")
   XLINE<1,17> = OCONV(BILL.CHARGE,"MR2")
   XLINE<1,18> = OCONV(SRC.CHARGE,"MR2")

   XLS.REC<SRC.LN,16> = OCONV(BILL.CHARGE,"MR2")

   TEST.STR = HIST.REC<213,1>
   TEST.STR = FIELD(TEST.STR,"$",2)
   TEST.STR = FIELD(TEST.STR,",",1)

**   CRT PR "R#3":" ":WRK.CLIENT "R%5" : " " : ID.HIST "L#25" : " -- " : TEST.STR[1,9] "R#9":" -- ":OCONV(BILL.CHARGE,"MR2") "R#9" :  @(-4)

   CRT @(10,12):"Building 'zero' file for client ":WRK.CLIENT "R%5" : "  - bill # ": PR "R#3" : " out of " : N.PROS : @(-4)

   XLINE<1,20> = TEST.STR
   XLINE<1,21> = HIST.REC<213,1>

   CL.XLS.REC<-1> = XLINE

   IF OLDEST.BILL.DATE = "" OR BILL.DATE < OLDEST.BILL.DATE THEN
      OLDEST.BILL.DATE = BILL.DATE
   END

   IF OLDEST.PROCESS.DATE = "" OR PROCESS.DATE < OLDEST.PROCESS.DATE THEN
      OLDEST.PROCESS.DATE = PROCESS.DATE
   END

   IF LATEST.BILL.DATE = "" OR BILL.DATE > LATEST.BILL.DATE THEN
      LATEST.BILL.DATE = BILL.DATE
   END

   IF LATEST.PROCESS.DATE = "" OR PROCESS.DATE > LATEST.PROCESS.DATE THEN
      LATEST.PROCESS.DATE = PROCESS.DATE
   END

   TOT.CHARGE += BILL.CHARGE
   TOT.SRC.CHARGE += SRC.CHARGE
   TOT.BILLS += 1
  
SKIPIT3 :

NEXT PR

CONVERT @VM TO CHAR(9) IN CL.XLS.REC

ID.XLS = WRK.CLIENT:'-zero.txt'

WRITE CL.XLS.REC ON F.BILLDATA, ID.XLS

TOT.STR = WRK.CLIENT
TOT.STR<1,2> = TOT.BILLS
TOT.STR<1,3> = TOT.CHARGE
TOT.STR<1,4> = OLDEST.BILL.DATE
TOT.STR<1,5> = OLDEST.PROCESS.DATE
TOT.STR<1,6> = LATEST.BILL.DATE
TOT.STR<1,7> = LATEST.PROCESS.DATE
TOT.STR<1,8> = TOT.SRC.CHARGE

TOTAL.ARRAY<-1> = TOT.STR

RETURN

ZERO.BILLS :

GR.TOT.BILLS  = 0
GR.TOT.CHARGE = 0
GR.TOT.SCHARGE = 0

CRT @(0,03):@(-3)

HLINE1 = "Client   Bill     Source       FP         Bill Date            Process  Date"
HLINE2 = "        Count     Amount     Amount     From   -    To         From  -    To"
HLINE3 = "-----   ------ ---------  ---------   -------------------   -------------------"

CRT @(0,3):HLINE1
CRT @(0,4):HLINE2
CRT @(0,5):HLINE3

N.CLX = DCOUNT(TOTAL.ARRAY,@AM)
FOR CN = 1 TO N.CLX
   ROW = 5 + (2*CN)
   TOT.STR = TOTAL.ARRAY<CN>
   WRK.CLIENT = TOT.STR<1,1>
   TOT.BILLS  = TOT.STR<1,2>
   TOT.CHARGE = TOT.STR<1,3>
   OLDEST.BILL.DATE = TOT.STR<1,4>
   OLDEST.PROCESS.DATE = TOT.STR<1,5>
   LATEST.BILL.DATE = TOT.STR<1,6>
   LATEST.PROCESS.DATE = TOT.STR<1,7>
   TOT.SRC.CHARGE = TOT.STR<1,8>

   CRT @(0,ROW) : WRK.CLIENT "R#5"
   CRT @(8,ROW) : TOT.BILLS "R#5"
   CRT @(15,ROW): OCONV(TOT.SRC.CHARGE,"MR2,") "R#9"
   CRT @(26,ROW) : OCONV(TOT.CHARGE,"MR2,") "R#9"
   BDATE.STR = OCONV(OLDEST.BILL.DATE,"D2/"):" - ":OCONV(LATEST.BILL.DATE,"D2/")
   CRT @(38,ROW) : BDATE.STR "L#19"
   PDATE.STR = OCONV(OLDEST.PROCESS.DATE,"D2/"):" - ":OCONV(LATEST.PROCESS.DATE,"D2/")
   CRT @(60,ROW) : PDATE.STR "L#19"
   GR.TOT.BILLS  += TOT.BILLS
   GR.TOT.CHARGE += TOT.CHARGE
   GR.TOT.SCHARGE += TOT.SRC.CHARGE
NEXT CN

CRT @(8,ROW+1):STR("=",5):"  ":STR("=",9):"  ":STR("=",9)
CRT @(0,ROW+2):"Total":"  ":GR.TOT.BILLS "R#6" : " " : OCONV(GR.TOT.SCHARGE,"MR2,") "R#10" : " " : OCONV(GR.TOT.CHARGE,"MR2,") "R#10"

CRT @(0,ROW+4) : STR("-",79)

DIFF.TOT = ABS(GR.TOT.SCHARGE - GR.TOT.CHARGE)
IF DIFF.TOT NE "0" THEN
   CRT @(0,ROW+5):">> Descrepancy of ":OCONV(DIFF.TOT,"MR2,") "R#6" :" between source file and bills found in FP<<"
END

Y.OR.N :

YN.MSG = "Run the process to zero bills Y/N "
YN.MASK = 'N'

HELP = "Entry Options: [Y]-Yes [N]-No [X]-Back [EX]it"

CRT @(0,22):YN.MSG:@(-4)
MASK = YN.MASK'L#2'
Q=''
CALL GEN.IN(LEN(YN.MSG)+1,22,MASK,'',Q,0,2,'','',2,LEN(YN.MSG)+1,22,0,QI,HELP,0,23)
QI = OCONV(QI,'MCU')

IF QI='' THEN QI=MASK
BEGIN CASE
   CASE QI = '1'
      QI='Y'
   CASE QI = '0'
      QI='N'
   CASE QI = 'Y'
      YN.ANSWER = 'Y'
   CASE QI = 'N'
      YN.ANSWER = 'N'
   CASE QI = 'X'
      YN.ANSWER = 'X'
   CASE QI = 'EX'
      STOP
   CASE 1
      CALL ELINE('Invalid entry.')
      GOTO Y.OR.N
END CASE

CRT @(0,22):@(-4):
CRT @(0,23):@(-4):
YN.ANSWER = QI

IF YN.ANSWER NE "Y" THEN RETURN

*** Go ahead and run the FB.5.16 PROCESS TO ZERO BILLS.
*
FOR CN = 1 TO N.CLX
   WRK.CLIENT = TOTAL.ARRAY<CN,1>
   DATA WRK.CLIENT
**   DATA "PER DAVID HOVIS DO NOT PAY, GUARANTEED SERVICE REFUNDS"
   EXECUTE "FB.5.16"
NEXT CN

RETURN
