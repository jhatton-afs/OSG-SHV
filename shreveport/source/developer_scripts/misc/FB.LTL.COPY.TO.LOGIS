*======================================================================
* PROGRAM : FB.LTL.COPY.TO.LOGIS
*
* PROGRAMMER : David R Friend
*
* Copy Contract related tariffs etc to Logistics/Benchmark fields.
*   For use when clients go from Freight Payment only to Logistics as well.
*
*======================================================================
*   COPYRIGHT (C) 1996 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED
*       ----------------------------------------------------
*  This program is sole property of AFS Logistics, LLC (AUTOMATED
*  FREIGHT SYSTEMS) and may not be used, copied, or modified without
*  the express written consent of Brian Barker of AFS Logistics, LLC.
*======================================================================
*
*  NPR01 - T100639 - Add option for Copying Contract related tariffs etc to Logistics/Benchmark fields.

$INCLUDE PROG.ADMIN INC_OPTIONS

   TABLE.NUM = ''

   PROMPT''
   CALL GET.USER(USER.NAME)
   PROG.NAME='FB.LTL.COPY.TO.LOGIS'
   PROG.DESC='LTL Audit Table Copy'
   PACK.NAME='User :':USER.NAME
   CO.NAME='AFS Logistics, LLC'
   UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.LTL.COPY.TO.LOGIS' ; UPL.VOUT = ''                    ;* NPR_UPL 07/02/2010
   CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                     ;* NPR_UPL 07/02/2010

   BEGIN CASE
      CASE USER.NAME = "OWEN"
      CASE USER.NAME = "MKERBOW"
      CASE USER.NAME = "DAVID"
      CASE USER.NAME = "NPRATT"
      CASE USER.NAME = "SSHAFER"
      CASE USER.NAME = "TBURNS"
      CASE USER.NAME = "AHICKS" ; * TICKET 3092 - DRF 07/06/12
      CASE USER.NAME = "NKELLY" ; * TICKET 5817 - DRF 04/30/13
      CASE 1
         CALL ELINE("You are Unauthorized to use this program")
         STOP
   END CASE

   OPEN '','CLIENTS' TO F.CLIENTS ELSE
      CALL OPEN.ABORT("CLIENTS",PROG.NAME)
   END
   OPEN '','CARRIERS' TO F.CARRIERS ELSE
      CALL OPEN.ABORT("CARRIERS",PROG.NAME)
   END

   OPEN '','FB.AUDIT.TABLES.HIST' TO F.AUDIT.TABLES.HIST ELSE
      CALL OPEN.ABORT("FB.AUDIT.TABLES.HIST",PROG.NAME)
   END

10 :

   GOSUB DSP.SCREEN
   CLIENT.ID = ''
   CARRIER.ID = ''
   CARRIER.NAME = ''
   CARRIER.CITY = ''
   CARRIER.STATE = ''
   TABLE.REC = ''
   TABLE.DESC = ''

50:
   HELP = "Enter client name or number to copy from. [EX] = Exit"
   IF CLIENT.ID='' THEN
     MASK = '#####'
     CRT @(20, 3):@(-4)
     CRT @(20, 4):@(-4)
     CRT @(20, 5):@(-4)
   END ELSE
     MASK = CLIENT.ID
   END
   CALL GEN.IN(20,3,MASK,'',Q,0,20,'','',2,-5,3,1,QI,HELP,0,23)
   IF QI='' THEN QI=CLIENT.ID
   QI = OCONV(QI,'MCU')
   BEGIN CASE
      CASE QI='EX' OR QI='X'
         STOP
      CASE QI='' AND CLIENT.ID=''
         STOP
      CASE NUM(QI) AND QI # ''
           CLIENT.ID = QI'R%5'
      CASE NOT(QI MATCHES "0N") AND QI # ''
           CALL SOUNDEX.DISPLAY(QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
           GOSUB DSP.SCREEN
           BEGIN CASE
              CASE ITEM.LIST = ''
                 GOTO 50                            ;* START OVER
              CASE DCOUNT(ITEM.LIST,@AM) GT 1
                 GOTO 50                            ;* START OVER
              CASE 1
                 DATA ITEM.LIST
                 GOTO 50                            ;* START OVER
           END CASE
      CASE 1
           CALL ELINE('Invalid Client Name, Try Again.')
           GOTO 50
   END CASE

   *
   * Open Client Records
   *
   READ CLIENT.REC FROM F.CLIENTS,CLIENT.ID ELSE
      CALL ELINE("Client number ":CLIENT.ID:" is not a valid client #")
      GOTO 50
   END

   CLIENT.NAME=CLIENT.REC<2>
   CRT @(20, 3):CLIENT.ID:', ':CLIENT.NAME:@(-4)
   CRT @(20, 4):CLIENT.REC<3,1>:' ':CLIENT.REC<3,2>:@(-4)
   CRT @(20, 5):CLIENT.REC<4>:', ':CLIENT.REC<5>:' ':CLIENT.REC<6>:@(-4)

   *
   * Open Client Audit File
   *
   OPEN '','FB.AUDIT.TABLES,':CLIENT.ID TO F.AUDIT.TABLES ELSE
      CALL ELINE('Error ':CLIENT.ID:' is not setup for any audit tables.')
      GOTO 50
   END


   *------------------------------------------
   * ASK FOR CARRIER
   *------------------------------------------
150:

* NPR01   HELP="Enter carrier number, 'name' for search, [L]ist, [EX]it."
   HELP="Enter carrier number, [ALL], 'name' for search, [L]ist, [EX]it."   ;* NPR01
   IF CARRIER.ID THEN
      MASK = CARRIER.ID
   END ELSE
      MASK = '#####'
      CRT @(20, 7):@(-4)
      CRT @(20, 8):@(-4)
   END

200:
   CALL GEN.IN(20,7,MASK,'',Q,0,20,'','',2,20,7,0,QI,HELP,0,23)
   IF QI='' THEN QI=MASK
   QI=OCONV(QI,'MCU')

   BEGIN CASE
     CASE QI='X'
        GOSUB DSP.DATA
        GOTO 50

     CASE QI='EX'
        STOP

     CASE QI EQ 'L'
        EXECUTE 'SORT FB.AUDIT,':CLIENT.ID:' BY CARRIER# CARRIER.NAME CARRIER.CITY CARRIER.STATE'
        CALL ELINE('')
        GOSUB DSP.SCREEN
        GOSUB DSP.DATA
        GOTO 200

     CASE NUM(QI)
        CARRIER.ID=QI'R%5'
        CRT @(20,7):CARRIER.ID
     CASE QI = "ALL"                  ;* NPR01
        CARRIER.ID = QI               ;* NPR01
        TABLE.REC = ''                ;* NPR01
        GOTO 300                      ;* NPR01
     CASE 1
       CALL SOUNDEX.DISPLAY(Q,'CARRIERS','SDX.CARRIER,NAME','1,3,4',QX)
       CT=DCOUNT(QX<1>,@VM)
       IF CT=1 THEN
          DATA QX<1,1>
       END
       GOSUB DSP.SCREEN
       GOSUB DSP.DATA
       GOTO 200

     CASE 1
       CALL ELINE('Invalid Entry.')
   END CASE
   *
   * Open Carrier Records
   *
   READ CARRIER.REC FROM F.CARRIERS,CARRIER.ID ELSE
       CALL ELINE('"':CARRIER.ID:'" is an invalid Carrier Number. Try Again.')
       GOTO 150
   END

   CARRIER.NAME  = CARRIER.REC<1>
   CARRIER.CITY  = CARRIER.REC<3>
   CARRIER.STATE = CARRIER.REC<4>
   GOSUB DSP.DATA

   *------------------------------------------
   * TABLE NUMBER
   *------------------------------------------
300:

   HELP = "Enter TABLE NUMBER to copy from., [ALL], [SPACE]=Select [EX] = Exit"
   IF TABLE.NUM THEN
      MASK = TABLE.NUM:' '
   END ELSE
      MASK = '##'
      CRT @(20, 10):@(-4)
      CRT @(20, 11):@(-4)
   END

310:
   CALL GEN.IN(20,10,MASK,'',Q,0,20,'','',2,20,10,1,QI,HELP,0,23)
   IF QI='' AND TABLE.NUM THEN QI=TABLE.NUM
   IF QI=' ' THEN QI=''
   QI = TRIM(OCONV(QI,'MCU'))
   BEGIN CASE
      CASE QI = 'EX'
         STOP

      CASE QI='X'
         GOSUB DSP.DATA
         GOTO 150
      CASE QI='ALL'                    ;* NPR01
         TABLE.NUM = QI                ;* NPR01
         CRT @(20, 10):TABLE.NUM:@(-4)
         GOTO 700                      ;* NPR01
      CASE QI=''
          VIN=CLIENT.ID
          VIN<2>=CARRIER.ID
          VOUT=''
          CALL AUDIT.TABLE.SELECT(VIN,VOUT)
          BEGIN CASE
             CASE VOUT<1> = 'EX'
                STOP
             CASE VOUT<1> = 'X'
                GOSUB DSP.SCREEN
                GOSUB DSP.DATA
                GOTO 300
             CASE 1
                GOSUB DSP.SCREEN
                GOSUB DSP.DATA
                TABLE.NUM = VOUT<1>
          END CASE


      CASE (QI GE '0' AND QI LE '99') OR (QI GE 'A' AND QI LE 'Z')
         TABLE.NUM = QI

      CASE 1
         CALL ELINE('Invalid Table Number, Try Again.')
         TABLE.NUM=''
         GOTO 310
   END CASE

325:
   CRT @(20, 10):TABLE.NUM:@(-4)

   KEY = CARRIER.ID:'*':TABLE.NUM
   READ TABLE.REC FROM F.AUDIT.TABLES, KEY ELSE
     CALL ELINE('Table ':TABLE.NUM:' is not on file. Pick an existing table to copy from')
     TABLE.NUM=''
     GOTO 300
   END
   CRT @(20, 10):TABLE.NUM : "  - " : TABLE.REC<31>[1,59]:@(-4)

   FND = 0
   NVL = DCOUNT(TABLE.REC<12>,@VM)
   FOR BM = 12 TO 16
      FOR VL = 1 TO NVL
         IF TABLE.REC<BM,VL> NE '' THEN
            FND = 1 ; EXIT
         END
      NEXT VL
      IF FND = 1 THEN EXIT
   NEXT BM

   IF FND THEN
      CALL ELINE("Found Benchmark data on this table. Cannot copy")
      GOTO 310
   END

700:* Select tables to update based on selections

   W.STMT = \SSELECT FB.AUDIT.TABLES,\:CLIENT.ID : \ WITH EVERY 16 = ""\
   
   IF CARRIER.ID NE "ALL" THEN
      W.STMT := \ AND WITH CARRIER# = "\:CARRIER.ID:\"\
   END
   IF TABLE.NUM NE "ALL" THEN
      W.STMT := \ AND WITH TABLE# = "\:TABLE.NUM:\"\
   END

   EXECUTE W.STMT CAPTURING OUTPUT

   N.ITEMS = @SELECTED
   IF N.ITEMS LE 0 THEN
      CALL ELINE("No tables found to update with benchmark data")
      GOTO 50
   END ELSE
      CRT @(20, 12) : N.ITEMS :" tables found to update with benchmark data"
   END

800:
     HELP='[U]pdate, [X]-back, or [EX]it'
     CALL GEN.IN(0,22,'Enter Option: --','',Q,0,4,'','',2,-2,22,1,QI,HELP,0,23)
     QI = OCONV(QI,'MCU')
     BEGIN CASE
        CASE QI = 'EX'
           STOP
        CASE QI = 'X'
           GOTO 310
        CASE QI = 'U' 
           GOSUB COPY.DATA
        CASE 1
           CALL ELINE('Invalid Entry - Please Try Again')
           GOTO 800
     END CASE

     GOTO 10

     STOP

*----------------------------------------------------------------------
* Display Screen
*----------------------------------------------------------------------
DSP.SCREEN:***

    CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
    CRT @(0,2):STR('-',79);
    CRT @(0, 3):'Copy From: Client :':@(-4)
    CRT @(11, 7):'Carrier:':@(-4)
    CRT @(11,10):'Table  :':@(-4)

RETURN


*----------------------------------------------------------------------
* Display Screen Data
*----------------------------------------------------------------------
DSP.DATA:***

    IF CLIENT.ID THEN
       CRT @(20, 3):CLIENT.ID:', ':CLIENT.NAME:@(-4)
       CRT @(20, 4):CLIENT.REC<3,1>:' ':CLIENT.REC<3,2>:@(-4)
       CRT @(20, 5):CLIENT.REC<4>:', ':CLIENT.REC<5>:' ':CLIENT.REC<6>:@(-4)
    END
    IF CARRIER.ID THEN
       CRT @(20, 7):CARRIER.ID:', ':CARRIER.NAME:@(-4)
       CRT @(20, 8):CARRIER.CITY:', ':CARRIER.STATE:@(-4)
    END ELSE
       CRT @(20, 7):@(-4)
       CRT @(20, 8):@(-4)
    END
    IF TABLE.NUM THEN
       CRT @(20, 10):TABLE.NUM : "  - " : TABLE.REC<31>[1,59]:@(-4)
    END ELSE
       CRT @(20, 10):@(-4)
    END

RETURN

COPY.DATA :
*
EOF = "N"

LOOP
   READNEXT TAB.ID ELSE EOF = "Y"
UNTIL EOF = "Y" DO
   READU AUD.TAB.REC FROM F.AUDIT.TABLES, TAB.ID THEN
      ID.HIST = CLIENT.ID:"*":TAB.ID
      WRITE AUD.TAB.REC ON F.AUDIT.TABLES.HIST, ID.HIST

      NV = DCOUNT(AUD.TAB.REC<2>,@VM)
      FOR II = 2 TO 6
         FOR NN = 1 TO NV
         IF AUD.TAB.REC<II+10,NN> = "" THEN AUD.TAB.REC<II+10,NN> = AUD.TAB.REC<II,NN>
            IF II = 2 THEN 
               IF AUD.TAB.REC<17,NN> = "" THEN AUD.TAB.REC<17,NN> = 0
            END
         NEXT NN
      NEXT II

      IF AUD.TAB.REC<28> = "" THEN AUD.TAB.REC<28> = AUD.TAB.REC<27>
      IF AUD.TAB.REC<39> = "" THEN AUD.TAB.REC<39> = AUD.TAB.REC<38>
      IF AUD.TAB.REC<42> = "" THEN AUD.TAB.REC<42> = AUD.TAB.REC<41>
      FOR JJ = 49 TO 51
         IF AUD.TAB.REC<JJ+3> = "" THEN AUD.TAB.REC<JJ+3> = AUD.TAB.REC<JJ>
      NEXT JJ
      IF AUD.TAB.REC<58> = "" THEN AUD.TAB.REC<58> = AUD.TAB.REC<57>
      IF AUD.TAB.REC<60> = "" THEN AUD.TAB.REC<60> = AUD.TAB.REC<59>

      AUD.TAB.REC<46,-1> = USER.NAME
      AUD.TAB.REC<47,-1> = DATE()
      AUD.TAB.REC<48,-1> = TIME()

      WRITEU AUD.TAB.REC ON F.AUDIT.TABLES, TAB.ID
      RELEASE F.AUDIT.TABLES, TAB.ID
   END
REPEAT
*
RETURN
