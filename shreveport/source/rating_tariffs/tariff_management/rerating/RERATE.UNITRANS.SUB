      SUBROUTINE RERATE.UNITRANS.SUB(RVIN,RVOUT)
*
      UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'RERATE.UNITRANS.SUB' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                    ;* NPR_UPL 04/23/2010
* FREIGHT BILLING PACKAGE
*
* AUTHOR: OWEN HOLMAN
* DATE: JUNE 15, 2001
*
* THIS PROGRAM IS A PROPRIETARY PRODUCT OF AUTOMATED FREIGHT SYSTEMS
* AND MAY NOT BE USED, COPIED OR MODIFIED WITHOUT THE EXPRESSRITTEN CONSENT OF SAME.
*
****************************************************************
* MODIFICATIONS:
* 103108 - JMK01 - T081156 - Change BLS column heading from Benchmark to Gross Charges
* 052809 - JMK02 - C090692 - Need to not take commissions on Fuel
* 091409 - JMK03 - ALL FOR AFS500 RATES
* 110609 - JMK04 - C091350 - Reid Supply -- UPS Freight --- Fuel Commission
****************************************************************
* Initialize variables
****************************************************************
      CRT @(0,20):@(-3):
      TEXT='Reviewing Rates...'
      CALL CENTER(TEXT,80)
      CRT @(0,20):TEXT
      DATA.START=2                       ; * Line number that 1st line of data is on
      BILLDATA.USER=RVIN<1>              ; * Name of BILLDATA FILE THAT DATA IS IN
      ITEM.NAME=RVIN<2>                  ; * Name of "File" in BILLDATA
      CLIENT.OPT=RVIN<3>
      IF CLIENT.OPT='' THEN
         CLIENT.OPT='79999'                 ; * 'OLA' Client Number (Rating Files)
      END
      CARRIER.OPT=RVIN<4>
      IF CARRIER.OPT='' THEN
         CARRIER.OPT='A'                    ; * Rate all (Least Cost) or a specific carrier
      END

      TARIFF.SELECTED = RVIN<5>

      CALL CHANNEL(CH.NUM)
      CALL GET.USER(USER)

      CLIENT.AUDIT=1
      ERROR=''
      PROG.NAME='RERATE.UNITRANS.SUB'
      PROG.DESC="(Re) Rate freight on shipments using OLA setups"
      PACK.NAME="Freight Billing"
      CONTR.AMT=''
      BENCH.AMT=''
      CARRIER.EST.ARRAY=''
      ERROR.ARRAY=''
      VALID.CLASSES=50:@VM:55:@VM:60:@VM:65:@VM:70:@VM:77:@VM:85:@VM:92:@VM:100:@VM:110:@VM:125:@VM:150:@VM:175:@VM:200:@VM:250:@VM:300:@VM:400:@VM:500
*
* Open general files
*
      OPEN 'BILLDATA.':BILLDATA.USER TO F.BILLDATA ELSE
         ERROR = "CANNOT OPEN FILE BILLDATA.":BILLDATA.USER
         GO 9000
      END
      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         ERROR = "CANNOT OPEN FILE CLIENTS"
         GO 9000
      END
      OPEN '','FB.TABLES' TO F.TABLES ELSE
         ERROR = "CANNOT OPEN FILE F.TABLES"
         GO 9000
      END
      OPEN '','CARRIERS' TO F.CARRIERS ELSE
         ERROR = "CANNOT OPEN FILE CARRIERS"
         GO 9000
      END

*NPR01      OPEN '','FB.NFSC' TO F.NFSC ELSE
*NPR01         ERROR = "CANNOT OPEN FILE FB.NFSC"
*NPR01         GO 9000
*NPR01      END

      OPEN '','FB.BC.FSC' TO F.NFSC ELSE
         ERROR = "CANNOT OPEN FILE FB.BC.FSC"
         GO 9000
      END

      OPEN '','FB.TABLES' TO F.TABLES ELSE
         ERROR = "CANNOT OPEN FILE FB.TABLES"
         GO 9000
      END

*---- Open mileage input and output files

      OPEN '','PCIN' TO F.PCIN ELSE
         ERROR = "CANNOT OPEN FILE PCIN"
         GO 9000
      END
      OPEN '','PCOUT' TO F.PCOUT ELSE
         ERROR = "CANNOT OPEN FILE  "
         GO 9000
      END
      OPEN '','ZIPS.CODES' TO F.ZIPS ELSE
         ERROR = "CANNOT OPEN ZIPS FILE "
         GO 9000
      END
      OPEN '','CAN.ZIP.CODES' TO F.CAN.ZIPS ELSE
         ERROR = "CANNOT OPEN CAN.ZIP.CODES FILE "
         GO 9000
      END

*
* Read Source Data
*
      READ DA FROM F.BILLDATA,ITEM.NAME ELSE
         ERROR = "CANNOT READ BILLDATA." : BILLDATA.USER : " " : ITEM.NAME : " .. Aborting!"
         GO 9000
      END
*     DA=@AM:DA

      TAB=CHAR(9)
      DA=CHANGE(DA,TAB,@VM)
      NEW.DA=''
      NROWS=DCOUNT(DA,@AM)
      NCOLS=DCOUNT(DA<1>,@VM)
      HDG.LINE=DA<1>
      LOCATE 'Error' IN HDG.LINE<1> SETTING ERRPOS ELSE ERRPOS=1
      LOCATE 'Actual Charge' IN HDG.LINE<1> SETTING ACPOS ELSE
         LOCATE 'Charges' IN HDG.LINE<1> SETTING ACPOS ELSE
            ACPOS=2
         END
      END

*      LOCATE 'FSC %' IN HDG.LINE<1> SETTING FSCP.POS ELSE
*         ERROR = "No 'FSC %' Column found"
*         GO 9000
*      END
*      LOCATE 'FSC Amount' IN HDG.LINE<1> SETTING FSC.POS ELSE
*         ERROR = "No 'FSC Amount' Column found"
*         GO 9000
*      END

      LOCATE 'Origin Zip' IN HDG.LINE<1> SETTING OPOS ELSE
         ERROR = "No 'Origin Zip' Column found"
         GO 9000
      END
      LOCATE 'Dest Zip' IN HDG.LINE<1> SETTING DPOS ELSE
         ERROR = "No 'Dest Zip' Column found"
         GO 9000
      END

      LOCATE 'Bill Date' IN HDG.LINE<1> SETTING BD.POS ELSE
         ERROR = "No 'Bill Date' Column found"
         GO 9000
      END

      NUM.CLS=COUNT(HDG.LINE<1>,'Class')
      IF NUM.CLS = 0 THEN
         ERROR = "No 'Class' Column found"
         GO 9000
      END
      NUM.WGT=COUNT(HDG.LINE<1>,'Weight')
      IF NUM.WGT = 0 THEN
         ERROR = "No 'Weight' Column found"
         GO 9000
      END

*      IF NUM.WGT = 1 AND USER = "XNPRATT" THEN  ;* NPR01
*         HDG.LINE<1,7>='FSC Amount'             ;* NPR01  
*         HDG.LINE<1,8>='Contract Total'         ;* NPR01
*         NEW.DA<1>=HDG.LINE                     ;* NPR01
*      END                                       ;* NPR01

      CARPOS=''
*
* Process the data
*
      BRK.CARRIER=''
      PRV.CLIENT.ID=''
      BRK.PRO=''
      ROW.PER=''
      DET.ERRS = 0

      FOR ROW = 1 TO NROWS
         CALL PROG.BAR(22,ROW,NROWS,ROW.PER)
         IF ROW < DATA.START THEN
            NEW.DA<ROW>=DA<ROW>
            IF ROW='3' THEN
               NEW.DA<ROW>=HDG.LINE
            END
            GO SKIP.LINE
         END
         LINE=DA<ROW>
         LINE<1,1>=''
         CLIENT.ID=CLIENT.OPT
         IF CLIENT.ID#PRV.CLIENT.ID THEN
*
* Open client's files.
*
            AUDIT.CLIENT=1
            AUDIT.CLIENT.ID = CLIENT.ID
            OPEN '','FB.AUDIT,':CLIENT.ID TO F.AUDIT THEN
               READV SUB.CLIENT FROM F.AUDIT,'SUBSTITUTE',1 THEN
                  AUDIT.CLIENT.ID = SUB.CLIENT
                  OPEN '','FB.AUDIT,':AUDIT.CLIENT.ID TO F.AUDIT ELSE CLIENT.AUDIT=0
               END ELSE
                  AUDIT.CLIENT.ID = CLIENT.ID
               END
            END ELSE CLIENT.AUDIT=0
            IF CLIENT.AUDIT=0 THEN
               ERROR = "Client ":CLIENT.ID:" is not setup for freight estimates"
*               NEW.DA<-1>=LINE
                GOTO ERROR.TRAP
            END
            OPEN '','FB.AUDIT.TABLES,':AUDIT.CLIENT.ID TO F.AUDIT.TABLES ELSE
               ERROR = "Cannot open file FB.AUDIT.TABLES,":AUDIT.CLIENT.ID
*               NEW.DA<-1>=LINE
                GOTO ERROR.TRAP
            END
            OPEN '','FB.AUDIT.ZIPS,':AUDIT.CLIENT.ID TO F.AUDIT.ZIPS ELSE
               ERROR = "Cannot open FB.AUDIT.ZIPS,":AUDIT.CLIENT.ID:" No On-Line Audit Allowed!"
*               NEW.DA<-1>=LINE
                GOTO ERROR.TRAP
            END
            OPEN '','FB.BILLS.HIST,':AUDIT.CLIENT.ID TO F.BILLS ELSE
               ERROR = "Cannot open FB.BILLS.HIST,":AUDIT.CLIENT.ID:" No On-Line Audit Allowed!"
*               NEW.DA<-1>=LINE
                GOTO ERROR.TRAP
            END
            PRV.CLIENT.ID=CLIENT.ID
         END

         ERROR=''
         BEGIN CASE
            CASE CARRIER.OPT='L'
               CARRIER.ID='ALL'
            CASE 1
               CARRIER.ID=CARRIER.OPT
         END CASE
         ORIG.ZIP=CHANGE(FIELD(LINE<1,OPOS>,'-',1),' ','')
         CONVERT " " TO "" IN ORIG.ZIP                                  ;* NPR01
         IF NUM(ORIG.ZIP) AND ORIG.ZIP#'' THEN ORIG.ZIP=ORIG.ZIP'R%5'
         DEST.ZIP=CHANGE(FIELD(LINE<1,DPOS>,'-',1),' ','')
         CONVERT " " TO "" IN DEST.ZIP                                  ;* NPR01
         IF NUM(DEST.ZIP) AND DEST.ZIP#'' THEN DEST.ZIP=DEST.ZIP'R%5'
* Classes, Weights, & Codes
         PRV.CLASS=''
         CLASSES=''
         WEIGHTS=''
         CLS.CNT=0
         MISC.CHG.CODES=''
         MISC.CHG.AMTS=''
         CODE.START=26
         IF CLIENT.OPT='ALL' THEN CODE.START+=2
         FOR Y = 5 TO NCOLS
            IF HDG.LINE<1,Y>='Class' AND (LINE<1,Y>#'' OR LINE<1,Y+1>#'') THEN
               CLS.CNT+=1
*NPR01               CLASSES<1,CLS.CNT>=LINE<1,Y>
*NPR01               WEIGHTS<1,CLS.CNT>=LINE<1,Y+1>
               W.CLASS  = LINE<1,Y>                         ;* NPR01
               W.WEIGHT = LINE<1,Y+1>                       ;* NPR01
               CONVERT "," TO "" IN W.WEIGHT                ;* NPR01
               CONVERT '"' TO '' IN W.WEIGHT                ;* NPR01
               IF W.CLASS=77.5 THEN W.CLASS=77              ;* NPR01
               IF W.CLASS=92.5 THEN W.CLASS=92              ;* NPR01
               CLASSES<1,CLS.CNT> = W.CLASS                 ;* NPR01
               WEIGHTS<1,CLS.CNT> = W.WEIGHT                ;* NPR01
            END
         NEXT Y

         IF CLASSES = '' OR WEIGHTS = '' THEN
            ERROR = "Make sure that at least one pair of 'Class' and 'Weight' are present'"
            GOTO ERROR.TRAP
         END

         A.VOUT=''
         FSC.CVOUT=''
         FSC.BVOUT=''
         MODE='EFF'
         ORATE.DATE=OCONV(LINE<1,BD.POS>,'D2/')
         VIN.ARRAY=''
         IF CARRIER.OPT='A' THEN
            CARRIER.ID='99990'
            CLIENT.ID='79999'
            IF CLIENT.ID#PRV.CLIENT.ID THEN
*
* Open client's files.
*
               AUDIT.CLIENT=1
               AUDIT.CLIENT.ID = CLIENT.ID
               OPEN '','FB.AUDIT,':CLIENT.ID TO F.AUDIT THEN
                  READV SUB.CLIENT FROM F.AUDIT,'SUBSTITUTE',1 THEN
                     AUDIT.CLIENT.ID = SUB.CLIENT
                     OPEN '','FB.AUDIT,':AUDIT.CLIENT.ID TO F.AUDIT ELSE CLIENT.AUDIT=0
                  END ELSE
                     AUDIT.CLIENT.ID = CLIENT.ID
                  END
               END ELSE CLIENT.AUDIT=0
               IF CLIENT.AUDIT=0 THEN
                  ERROR = "Client ":CLIENT.ID:" is not setup for freight estimates"
*                  NEW.DA<-1>=LINE
                   GOTO ERROR.TRAP
               END
               OPEN '','FB.AUDIT.TABLES,':AUDIT.CLIENT.ID TO F.AUDIT.TABLES ELSE
                  ERROR = "Cannot open file FB.AUDIT.TABLES,":AUDIT.CLIENT.ID
*                  NEW.DA<-1>=LINE
                   GOTO ERROR.TRAP
               END
               OPEN '','FB.AUDIT.ZIPS,':AUDIT.CLIENT.ID TO F.AUDIT.ZIPS ELSE
                  ERROR = "Cannot open FB.AUDIT.ZIPS,":AUDIT.CLIENT.ID:" No On-Line Audit Allowed!"
*                  NEW.DA<-1>=LINE
                   GOTO ERROR.TRAP
               END
               OPEN '','FB.BILLS.HIST,':AUDIT.CLIENT.ID TO F.BILLS ELSE
                  ERROR = "Cannot open FB.BILLS.HIST,":AUDIT.CLIENT.ID:" No On-Line Audit Allowed!"
*                  NEW.DA<-1>=LINE
                   GOTO ERROR.TRAP
               END
               PRV.CLIENT.ID=CLIENT.ID
            END

         END
         BENCH.AMT=''
         CONTR.AMT=''
         BENCH.FSC.AMT=''
         CONTR.FSC.AMT=''
         EFF.BENCH.AMT=''
         EFF.CONTR.AMT=''
         EFF.BENCH.FRT.AMT=''
         EFF.BENCH.FSC.AMT=''
         EFF.CONTR.FRT.AMT=''
         EFF.CONTR.FSC.AMT=''
         EFF.CONS.FRT.AMT=''
         EFF.CONS.FSC.AMT=''
         EFF.CARRIER.ID=''
         EFF.CARRIER.NAME=''
         GOSUB RATE.SHIPMENT
         EFF.BENCH.AMT=BENCH.AMT
         EFF.CONTR.AMT=CONTR.AMT
         EFF.BENCH.FRT.AMT=BENCH.AMT-BENCH.FSC.AMT
         EFF.BENCH.FSC.AMT=BENCH.FSC.AMT
         EFF.CONTR.FRT.AMT=CONTR.AMT-CONTR.FSC.AMT
         EFF.CONTR.FSC.AMT=CONTR.FSC.AMT
         EFF.CONS.FRT.AMT=EFF.BENCH.FRT.AMT-EFF.CONTR.FRT.AMT
         EFF.CONS.FSC.AMT=EFF.BENCH.FSC.AMT-EFF.CONTR.FSC.AMT
         EFF.CARRIER.ID=CARRIER.EST.ARRAY<2,1>
         EFF.CARRIER.NAME=CARRIER.EST.ARRAY<3,1>
         IF EFF.BENCH.AMT+0=0 AND EFF.CONTR.AMT+0=0 THEN
            EFF.CARRIER.ID='None'
            EFF.CARRIER.NAME='No Approved Carriers for this Route'
         END
         LINE<1,2>=EFF.CONTR.FRT.AMT'R26'

ERROR.TRAP :

         IF ERROR#'' THEN
            DET.ERRS = 1
            LINE<1,1>=ERROR
         END

         NEW.DA<-1>=LINE
SKIP.LINE: ****
      NEXT ROW
      NEW.DA=CHANGE(NEW.DA,@VM,TAB)

      W.TARIFF.SELECTED = TARIFF.SELECTED
      CONVERT " " TO "" IN W.TARIFF.SELECTED
      ID.BLD = 'RR_':W.TARIFF.SELECTED : "_" : ITEM.NAME  

      WRITE NEW.DA ON F.BILLDATA, ID.BLD
      RVOUT<1>=ID.BLD
      ERROR=''
      RETURN
      STOP

RATE.SHIPMENT: ***
*     IF USER='MKERBOW' AND ROW='131' THEN DEBUG
*    X=LEN(OSHIP.DATE)
*    CALL DATE.IN(OSHIP.DATE,"",1)
      RATE.DATE=ICONV(ORATE.DATE,'D')
      IF RATE.DATE='' THEN
         ERROR='Invaid Ship Date of ':ORATE.DATE
         RETURN
      END
      IF RATE.DATE > DATE() THEN
         ERROR='Ship date cannot be in the future. Use today as the date.'
         RETURN
      END
*     IF CARRIER.OPT='L' THEN CARRIER.ID='ALL'
      NUM.WEIGHTS = DCOUNT(WEIGHTS,@VM)
      TOT.WEIGHT = 0
      TOT.WEIGHT = SUM(WEIGHTS)
      IF TOT.WEIGHT GT 15000 THEN
         ERROR = "Total weight exceeds program limits. Please contact AFS"
         RETURN
      END
      NVAL1=DCOUNT(CLASSES<1>,@VM)
      NVAL=NVAL1
      NVAL2=DCOUNT(WEIGHTS<1>,@VM)
      IF NVAL2>NVAL THEN NVAL=NVAL2

*** IF USER = "NPRATT" THEN DEBUG

      FOR VAL=1 TO NVAL
         CLS=CLASSES<1,VAL>
         IF CLS='' THEN
            ERROR = 'Weight #':VAL:' does not have a class code assigned to it.'
            RETURN
         END
         LOCATE CLS IN VALID.CLASSES<1> SETTING POS ELSE
            ERROR = CLS:' is an invalid class.'
            RETURN
         END
         WGT=WEIGHTS<1,VAL>
         IF NOT(NUM(WGT)) OR WGT = "" THEN WGT = 0
         IF WGT+0=0 THEN
            ERROR = 'Class #':VAL:' does not have a valid weight assigned to it.'
            RETURN
         END
      NEXT VAL
*----
* READ TABLES THAT MAY BE NEEDED
*----
      READ DTARIFF.DATE.XREF FROM F.TABLES,'TARIFF.DATE.XREF' ELSE DTARIFF.DATE.XREF=''
      READ DTARIFFS FROM F.TABLES,'TARIFFS' ELSE DTARIFFS=''
      READ LI.CODES FROM F.TABLES,'LI.CODES' ELSE LI.CODES=''
      READ DCLIENTS FROM F.CLIENTS,CLIENT.ID ELSE
         ERROR = "Client ":CLIENT.ID:" not on file."
         RETURN
      END
      CL.LOG.FSC=DCLIENTS<111>
      LOGISTICS=DCLIENTS<93>='Y'
      CARR.ONLY.FSC=DCLIENTS<189>
      MAX.LTL=15000
      IF DCLIENTS<150>#'' THEN MAX.LTL=DCLIENTS<150>
      IN.QUOTE.PERC = DCLIENTS<136>
      OUT.QUOTE.PERC = DCLIENTS<137>
      TP.QUOTE.PERC = DCLIENTS<138>
      IOT='O'
      BEGIN CASE
         CASE IOT = "I"
            IOT.DESC = "Inbound"
            SAVINGS.QUOTE.PERC=IN.QUOTE.PERC
         CASE IOT = "O"
            IOT.DESC = "Outbound"
            SAVINGS.QUOTE.PERC=OUT.QUOTE.PERC
         CASE IOT = "T"
            IOT.DESC = "Third Party"
            SAVINGS.QUOTE.PERC=TP.QUOTE.PERC
      END CASE
      IF SAVINGS.QUOTE.PERC = 'NO' THEN
         ERROR="Cannot Rate! Quote percent has not been set up."
         RETURN
      END


*
* Select Carrier(s) (Even if only one) to Loop thru
*
      STMT= 'SELECT FB.AUDIT,':AUDIT.CLIENT.ID
      STMT:=' WITH 1 = "LTLALL"'
      IF CARRIER.ID # 'ALL' THEN
         STMT:=" AND WITH CARRIER# '":CARRIER.ID:"'"
      END ELSE
         STMT:=' AND WITH 11 = "ENABLE"'
         STMT:=' AND WITH 13 = "Y"'      ; * Core Carrier Flag = "Y"
      END
      EXECUTE STMT RTNLIST CHECK.LIST CAPTURING OUTPUT
      IF @SELECTED < 1 THEN
         IF CARRIER.ID # 'ALL' THEN
            ERROR='Carrier ':CARRIER.ID:' is not set up for freight estimates'
         END ELSE
            ERROR='There are no core carriers set up for freight estimates'
         END
         RETURN
      END
*
* Setup AUDIT.VIN
*
*    SHIP.DATE=OSHIP.DATE
*    IF SHIP.DATE='' THEN
*      ERROR='Invaid Ship Date of ':OSHIP.DATE
*      RETURN
*    END

      READ O.ZIP.REC FROM F.ZIPS,ORIG.ZIP ELSE
         READ O.ZIP.REC FROM F.CAN.ZIPS,ORIG.ZIP ELSE
            ERROR=ORIG.ZIP:' ZIP NOT ON FILE, PLEASE TRY ANOTHER ZIP'
            RETURN
         END
      END
      ORIG.CITY = O.ZIP.REC<1>
      ORIG.ST = O.ZIP.REC<2>

      READ D.ZIP.REC FROM F.ZIPS,DEST.ZIP ELSE
         READ D.ZIP.REC FROM F.CAN.ZIPS,DEST.ZIP ELSE
            ERROR=DEST.ZIP:' ZIP NOT ON FILE, PLEASE TRY ANOTHER ZIP'
            RETURN
         END
      END
      DEST.CITY = D.ZIP.REC<1>
      DEST.ST = D.ZIP.REC<2>

      A.VIN=''
      A.VIN<3>=RATE.DATE
      A.VIN<11>=AUDIT.CLIENT.ID
      A.VIN<12>=IOT
      A.VIN<13,1>=ORIG.ZIP
      A.VIN<13,2>=ORIG.CITY
      A.VIN<13,3>=ORIG.ST
      A.VIN<14,1>=DEST.ZIP
      A.VIN<14,2>=DEST.CITY
      A.VIN<14,3>=DEST.ST
      A.VIN<16>=USER

*     A.VIN<17>=1                        ; *Misroute Flag to Ignore Misc Charge Code Errors
      A.VIN<18>=CLASSES
      A.VIN<19>=WEIGHTS
      A.VIN<21>=MISC.CHG.CODES
      A.VIN<22>=MISC.CHG.AMTS
      A.VIN<23>=MISC.CHG.AMTS
      A.VIN<24>=LOGISTICS
      A.VIN<25>=''
      A.VIN<35>=CL.LOG.FSC='N'           ; * Flag to NOT Calculate Log FSC
      A.VIN<46>=MAX.LTL                  ; * JMK02
      A.VIN<48>=DCLIENTS<188>            ; * JMK03 Forced Benchmark Minimum Flag Y/N
      A.VIN<49>=CARR.ONLY.FSC            ; * JMK05
*
**** Begin "Loop" of all Carriers *****
*
      CARRIER.EST.ARRAY=''
*<1>=Amount (MV Lowest to Highest)
*<2>=Carrier #
*<3>=Carrier Name
*<4>=Carrier Address
*<5>=Carrier City
*<6>=Carrier State
*<7>=Error (If Any)
*<8>=Flag
GET.NEXT.CARRIER:
      READNEXT CHECK.CARRIER.ID FROM CHECK.LIST ELSE
         RETURN
      END
      ERROR=''
      IF AUDIT.CLIENT.ID='01505' THEN
         CARR.ONLY.FSC=DCLIENTS<189>
         IF CARR.ONLY.FSC='Y' OR CARR.ONLY.FSC='C' THEN
            BEGIN CASE
               CASE CHECK.CARRIER.ID='00124'
                  CARR.ONLY.FSC='N'
               CASE CHECK.CARRIER.ID='01786'
                  CARR.ONLY.FSC='N'
               CASE CHECK.CARRIER.ID='05156'
                  CARR.ONLY.FSC='N'
               CASE CHECK.CARRIER.ID='08924'
                  CARR.ONLY.FSC='N'
            END CASE
         END
         A.VIN<49>=CARR.ONLY.FSC
      END
      IF AUDIT.CLIENT.ID='01758' THEN    ; * JMK02
         CARR.ONLY.FSC=DCLIENTS<189>     ; * JMK02
         IF CARR.ONLY.FSC='Y' OR CARR.ONLY.FSC='C' THEN      ; * JMK02
            BEGIN CASE                   ; * JMK02
               CASE CHECK.CARRIER.ID='00748'       ; * JMK02
                  CARR.ONLY.FSC='N'      ; * JMK02
            END CASE                     ; * JMK02
         END                             ; * JMK02
         A.VIN<49>=CARR.ONLY.FSC         ; * JMK02
      END                                ; * JMK02
      IF AUDIT.CLIENT.ID='01784' THEN    ; * JMK04
         CARR.ONLY.FSC=DCLIENTS<189>     ; * JMK04
         IF CARR.ONLY.FSC='Y' OR CARR.ONLY.FSC='C' THEN      ; * JMK04
            BEGIN CASE                   ; * JMK04
               CASE CHECK.CARRIER.ID='00014'       ; * JMK04
                  CARR.ONLY.FSC='N'      ; * JMK04
            END CASE                     ; * JMK04
         END                             ; * JMK04
         A.VIN<49>=CARR.ONLY.FSC         ; * JMK04
      END                                ; * JMK04
      IF AUDIT.CLIENT.ID='01810' THEN    ; * JMK04
         CARR.ONLY.FSC=DCLIENTS<189>     ; * JMK04
         IF CARR.ONLY.FSC='Y' OR CARR.ONLY.FSC='C' THEN      ; * JMK04
            BEGIN CASE                   ; * JMK04
               CASE CHECK.CARRIER.ID='00014'       ; * JMK04
                  CARR.ONLY.FSC='N'      ; * JMK04
            END CASE                     ; * JMK04
         END                             ; * JMK04
         A.VIN<49>=CARR.ONLY.FSC         ; * JMK04
      END                                ; * JMK04
      GOSUB GET.CARRIER.INFO
      IF ERROR#'' AND CARRIER.ID # 'ALL' THEN
         ERROR='Carrier ':CARRIER.ID:' is not set up for freight estimates'
         RETURN
      END
**********************************************************************
      A.VIN<10>= CHECK.CARRIER.ID        ; * Add "Current" Carrier to AUDIT.VIN
      A.VIN<50>= CHECK.CARRIER.SCAC      ; * JMK26
      A.VIN<51>= CHECK.CARRIER.TYPE      ; * JMK26

      A.VIN<55>= TARIFF.SELECTED

      VIN=A.VIN
      A.VOUT=''
      TEST.VIN=CHANGE(A.VIN,@AM,@VM)

IF USER = "XNPRATT" THEN
   CALL ELINE("GOING TO FB.AUTO.NP")
   DEBUG
END

      CALL FB.AUTO.NP(VIN,A.VOUT,D.AUDIT,CONTR.DFSC,BENCH.DFSC,DTARIFFS,DTARIFF.DATE.XREF,LI.CODES,F.AUDIT.TABLES,F.AUDIT.ZIPS,F.PCIN,F.PCOUT,F.TABLES)

IF USER = "XNPRATT" THEN
   CALL ELINE("COMING FROM FB.AUTO.NP")
   DEBUG
END

      WHY=A.VOUT<24>                     ; * Save for Debugging purposes
      A.VOUT<24>=''                      ; * Kill Why So you can look at A.VOUT with Debugger
      CONTR.AMT = A.VOUT<8>
      BENCH.AMT = A.VOUT<9>
      OLA.ERROR = A.VOUT<1>
      CONTR.FSC.AMT=A.VOUT<46,7>
      BEGIN CASE
         CASE A.VIN<49>='Y'
            BENCH.FSC.AMT=A.VOUT<47,7>
         CASE A.VIN<49>='C'
            BENCH.FSC.AMT=A.VOUT<47,7>
         CASE A.VIN<49>='O'
            BENCH.FSC.AMT=A.VOUT<83,7>
         CASE 1
            BENCH.FSC.AMT=A.VOUT<48,7>
      END CASE
      IF USER='NO-MKERBOW' THEN
         BEGIN CASE
            CASE OLA.ERROR#''
               TEST.VIN<1,-1>=OLA.ERROR
            CASE A.VOUT<2>='MA'
               TEST.VIN<1,-1>='Shipping Point Set to N'
            CASE CONTR.AMT#''
               TEST.VIN<1,-1>='BA=':BENCH.AMT'R26'
               TEST.VIN<1,-1>='BF=':BENCH.FSC.AMT'R26'
               TEST.VIN<1,-1>='CA=':CONTR.AMT'R26'
               TEST.VIN<1,-1>='CF=':CONTR.FSC.AMT'R26'
         END CASE
         VIN.ARRAY<-1>=TEST.VIN
      END
      AUDIT=A.VOUT<2>
      IF OLA.ERROR # "" THEN
         IF CARRIER.ID # 'ALL' AND CONTR.AMT+0=0 THEN
            ERROR=OLA.ERROR
            RETURN
         END
      END
      IF AUDIT # "Y" AND CARRIER.ID="ALL" THEN GO GET.NEXT.CARRIER
      IF AUDIT = "MA" THEN OLA.ERROR = "Not an approved carrier for this shipment!"
      IF CONTR.AMT+0=0 THEN GO GET.NEXT.CARRIER
      IF LOGISTICS AND BENCH.AMT+0=0 THEN GO GET.NEXT.CARRIER
*
*** Add Quote Percentage Logic Here ***
**********************************************************************

*** Locate and set percentages for quotes and commissions

      IF LOGISTICS THEN
         LOCATE RATE.DATE IN DCLIENTS<84> BY 'AR' SETTING POS ELSE
            POS=POS-1
         END
         COMM.PERC = DCLIENTS<85,POS>
         SAVINGS = BENCH.AMT-CONTR.AMT
         LOG.COMM = SAVINGS*COMM.PERC/100
         CL.SAVINGS = SAVINGS - LOG.COMM
         SAVINGS.QUOTE.AMT = CL.SAVINGS*(1-SAVINGS.QUOTE.PERC/10000)
         QUOTE.AMT=OCONV(CONTR.AMT + LOG.COMM + SAVINGS.QUOTE.AMT,'MR0')
      END ELSE
         QUOTE.AMT=CONTR.AMT
      END
      QUOTE.AMT=CONTR.AMT
*********************************************************************
* Special deal for BFG Quincy Compressor
*********************************************************************
*    IF CLIENT.ID='00981' THEN
*      BEGIN CASE
*        CASE CLIENT.ID='00981' AND IOT='O' AND ORIG.ZIP='62305'; * Quincy
*          QUOTE.AMT=(QUOTE.AMT*1.1)'R0'
*        CASE CLIENT.ID='00981' AND IOT='O' AND ORIG.ZIP='36507'; * Bay Minette
*          QUOTE.AMT=(QUOTE.AMT*1.12)'R0'
*        CASE CLIENT.ID='00761' AND IOT='O'
*          QUOTE.AMT=(QUOTE.AMT*1.12)'R0'
*      END CASE
*    END
*********************************************************************
**********************************************************************
*

      LOCATE (QUOTE.AMT:'_':BENCH.AMT) IN CARRIER.EST.ARRAY<1> BY 'AR' SETTING POS ELSE NULL
      INS (QUOTE.AMT:'_':BENCH.AMT) BEFORE CARRIER.EST.ARRAY<1,POS>
      INS CHECK.CARRIER.ID BEFORE CARRIER.EST.ARRAY<2,POS>
      INS CHECK.CARRIER.NAME BEFORE CARRIER.EST.ARRAY<3,POS>
      INS CHECK.CARRIER.STREET BEFORE CARRIER.EST.ARRAY<4,POS>
      INS CHECK.CARRIER.CITY BEFORE CARRIER.EST.ARRAY<5,POS>
      INS CHECK.CARRIER.STATE BEFORE CARRIER.EST.ARRAY<6,POS>
      INS OLA.ERROR BEFORE CARRIER.EST.ARRAY<7,POS>
      INS BENCH.AMT BEFORE CARRIER.EST.ARRAY<8,POS>
      INS BENCH.FSC.AMT BEFORE CARRIER.EST.ARRAY<9,POS>
      INS CONTR.AMT BEFORE CARRIER.EST.ARRAY<10,POS>
      INS CONTR.FSC.AMT BEFORE CARRIER.EST.ARRAY<11,POS>
      GO GET.NEXT.CARRIER
GET.CARRIER.INFO: ***
      READ CHECK.CARRIER.REC FROM F.CARRIERS,CHECK.CARRIER.ID ELSE
         ERROR = "Carrier ":CHECK.CARRIER.ID:" not on file."
         RETURN
      END
      CHECK.CARRIER.NAME = CHECK.CARRIER.REC<1>
      CHECK.CARRIER.STREET = TRIM(CHANGE(CHECK.CARRIER.REC<2>,@VM,' '))
      CHECK.CARRIER.CITY = CHECK.CARRIER.REC<3>
      CHECK.CARRIER.STATE = CHECK.CARRIER.REC<4>
      CHECK.CARRIER.SCAC = CHECK.CARRIER.REC<12>   ; *Added By ROB GAUDET 9/23/2003
      CHECK.CARRIER.STATUS = CHECK.CARRIER.REC<89>           ; * JMK14
      IF CHECK.CARRIER.STATUS = "I" THEN           ; * JMK14
         ERROR = "CARRIER IS NOT ACTIVE - CARRIER# ":CHECK.CARRIER.ID  ; * JMK14
         RETURN                          ; * JMK14
      END                                ; * JMK14
      CHECK.CARRIER.TYPE = 'A'           ; * JMK09
      IF CHECK.CARRIER.REC<44>='6' THEN  ; * JMK09
         CHECK.CARRIER.TYPE='B'          ; * JMK09
      END                                ; * JMK09
      CHECK.CARRIER.TEXT=TRIM(CHECK.CARRIER.ID:' ':CHECK.CARRIER.NAME:' ':CHECK.CARRIER.STREET:' ':CHECK.CARRIER.CITY)
      READ D.AUDIT FROM F.AUDIT, CHECK.CARRIER.ID ELSE
         ERROR = "CARRIER NOT SETUP FOR AUTO AUDIT - CARRIER#":CHECK.CARRIER.ID
         RETURN
      END
      IF D.AUDIT<11>#'ENABLE' THEN
         ERROR='Not Considered in On-Line Audit - Carrier Disabled'
         RETURN
      END
*NPR01      IF USER='DAVID' THEN
*NPR01      READ BENCH.DFSC FROM F.NFSC,'B*':CHECK.CARRIER.ID:'*':AUDIT.CLIENT.ID ELSE 
*NPR01         READ BENCH.DFSC FROM F.NFSC,'B*':CHECK.CARRIER.ID ELSE BENCH.DFSC=''
*NPR01      END
*NPR01      END ELSE
*NPR01      READ BENCH.DFSC FROM F.NFSC,CHECK.CARRIER.ID ELSE BENCH.DFSC=''
*NPR01      END

      READ BENCH.DFSC FROM F.NFSC,'B*':CHECK.CARRIER.ID:'*':AUDIT.CLIENT.ID ELSE  ;*NPR01
         READ BENCH.DFSC FROM F.NFSC,'B*':CHECK.CARRIER.ID ELSE BENCH.DFSC=''     ;*NPR01
      END                                                                         ;*NPR01

      IF BENCH.DFSC<30>='DISABLE' THEN
         BENCH.DFSC=''                   ; ** No Effect
         CONTR.DFSC=''
      END ELSE
*NPR01        IF USER='DAVID' THEN
*NPR01        READ CONTR.DFSC FROM F.NFSC,'C*':CHECK.CARRIER.ID:'*':AUDIT.CLIENT.ID ELSE
*NPR01           READ CONTR.DFSC FROM F.NFSC,'C*':CHECK.CARRIER.ID ELSE CONTR.DFSC=BENCH.DFSC
*NPR01        END
*NPR01        END ELSE
*NPR01        READ CONTR.DFSC FROM F.NFSC,CHECK.CARRIER.ID:"*":AUDIT.CLIENT.ID ELSE CONTR.DFSC=BENCH.DFSC
*NPR01        END

         READ CONTR.DFSC FROM F.NFSC,'C*':CHECK.CARRIER.ID:'*':AUDIT.CLIENT.ID ELSE          
            READ CONTR.DFSC FROM F.NFSC,'C*':CHECK.CARRIER.ID ELSE CONTR.DFSC=BENCH.DFSC
         END

         IF CONTR.DFSC<30>='DISABLE' THEN CONTR.DFSC=''
      END
      RETURN

9000: ****

      CALL ELINE(ERROR)           ;* NPR01
      IF ERROR#'' THEN            ;* NPR01
         RVOUT<1>=""              ;* NPR01
         RVOUT<2>=ERROR           ;* NPR01
         IF ERROR = "" AND DET.ERRS THEN
            RVOUT<2>= "Errors encountered in Excel file "
         END
      END                         ;* NPR01
      RETURN                      ;* NPR01

      STOP
