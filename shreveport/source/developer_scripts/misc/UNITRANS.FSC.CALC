* FREIGHT BILLING PACKAGE
*
* Routine to recalc FSC from a supplied spreadsheet  -  See Also RERATE.UNITRANS.SS
*
* AUTHOR : N.C.G. Pratt
* DATE   : January 2011
*
*
****************************************************************
* MODIFICATIONS:
*
****************************************************************
* Initialize variables
****************************************************************
*
* Open general files
*
CALL GET.USER(USER)

ERROR = ''

      OPEN 'BILLDATA.':USER TO F.BILLDATA ELSE
         ERROR = "CANNOT OPEN FILE BILLDATA.":USER : " File"
         GOTO EXIT.PROGRAM
      END
      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         ERROR = "CANNOT OPEN FILE CLIENTS"
         GOTO EXIT.PROGRAM
      END
      OPEN '','FB.TABLES' TO F.TABLES ELSE
         ERROR = "CANNOT OPEN FILE F.TABLES"
         GOTO EXIT.PROGRAM
      END
      OPEN '','CARRIERS' TO F.CARRIERS ELSE
         ERROR = "CANNOT OPEN FILE CARRIERS"
         GOTO EXIT.PROGRAM
      END

      OPEN '','FB.TABLES' TO F.TABLES ELSE
         ERROR = "CANNOT OPEN FILE FB.TABLES"
         GOTO EXIT.PROGRAM
      END

*---- Open mileage input and output files

      OPEN '','PCIN' TO F.PCIN ELSE
         ERROR = "CANNOT OPEN FILE PCIN"
         GOTO EXIT.PROGRAM
      END
      OPEN '','PCOUT' TO F.PCOUT ELSE
         ERROR = "CANNOT OPEN FILE PCOUT"
         GOTO EXIT.PROGRAM
      END
      OPEN '','ZIPS.CODES' TO F.ZIPS ELSE
         ERROR = "CANNOT OPEN ZIPS FILE "
         STOP
      END
      OPEN '','CAN.ZIP.CODES' TO F.CAN.ZIPS ELSE
         ERROR = "CANNOT OPEN CAN.ZIP.CODES FILE "
         GOTO EXIT.PROGRAM
      END

      OPEN '','FB.BC.FSC' TO F.NFSC ELSE
         ERROR = "CANNOT OPEN FILE FB.BC.FSC"
         GOTO EXIT.PROGRAM
      END

      INPUT ITEM.NAME

*** CRT " ITEM.NAME  " : ITEM.NAME ; DEBUG

      READ DA FROM F.BILLDATA,ITEM.NAME ELSE
         ERROR = 'BILLDATA.':USER:' ':ITEM.NAME:' is not on file.. Aborting!'
         GOTO EXIT.PROGRAM
      END

      TAB=CHAR(9)
      DA=CHANGE(DA,TAB,@VM)
      NEW.DA=''
      NROWS=DCOUNT(DA,@AM)
      NCOLS=DCOUNT(DA<1>,@VM)
      HDG.LINE = DA<1>

      LOCATE 'FSC %' IN HDG.LINE<1> SETTING FSCP.POS ELSE
         ERROR = "No 'FSC %' column found - Aborting FSC Calculation"
         GOTO EXIT.PROGRAM
      END
      LOCATE 'FSC Amount' IN HDG.LINE<1> SETTING FSC.POS ELSE
         ERROR = "No 'FSC Amount' column found - Aborting FSC Calculation"
         GOTO EXIT.PROGRAM
      END

      LOCATE 'Origin Zip' IN HDG.LINE<1> SETTING OPOS ELSE
         ERROR = "No 'Origin Zip' column found - Aborting FSC Calculation"
         GOTO EXIT.PROGRAM
      END
      LOCATE 'Dest Zip' IN HDG.LINE<1> SETTING DPOS ELSE
         ERROR = "No 'Dest Zip' column found - Aborting FSC Calculation"
         GOTO EXIT.PROGRAM
      END

      LOCATE 'Carrier #' IN HDG.LINE<1> SETTING CARR.POS ELSE
         ERROR = "No 'Carrier #' column found - Aborting FSC Calculation"
         GOTO EXIT.PROGRAM
      END

      LOCATE 'Bill Date' IN HDG.LINE<1> SETTING BDPOS ELSE
         ERROR = "No 'Bill Date' column found - Aborting FSC Calculation"
         GOTO EXIT.PROGRAM
      END

IF USER = "XNPRATT" THEN
   CRT @(-1)

   CRT "FSCP.POS  : " : FSCP.POS
   CRT "FSC.POS   : " : FSC.POS
   CRT "DPOS      : " : DPOS
   CRT "OPOS      : " : OPOS
   CRT "BD.POS    : " : BDPOS
   CRT "CARR.POS  : " : CARR.POS
   DEBUG
END

      NEW.DA<1>=HDG.LINE                 ;* NPR01

      FOR IR = 2 TO NROWS
         LINE = DA<IR>
         CONVERT '"' TO '' IN LINE
         CONVERT ',' TO '' IN LINE

         CONTR.DFSC = ""
         FSC.PERC = ""
         FSC.AMT  = ""
         ERR = ""

*         CARRIER = TRIM(LINE<1,9>)
         CARRIER = TRIM(LINE<1,CARR.POS>)
         IF NUM(CARRIER) AND CARRIER NE "" THEN
            CARRIER.ID = CARRIER "R%5"
         END ELSE         
            CARRIER.ID = ""
            BEGIN CASE
               CASE CARRIER = "AAA COOPER TRANSPORTATION"
                  CARRIER.ID = "00050"
               CASE CARRIER = "AVERITT EXPRESS"
                  CARRIER.ID = "00787"
               CASE CARRIER = "CELTIC INTERNATIONAL"
                  CARRIER.ID = "21630"
               CASE CARRIER = "CENTRAL FREIGHT LINES"
                  CARRIER.ID = "00030"
               CASE CARRIER = "CON-WAY CENTRAL EXPRESS" OR CARRIER = "CON-WAY FREIGHT" OR CARRIER = "CON-WAY WESTERN EXPRESS" OR CARRIER = "CON-WAY SOUTHERN EXPRESS"
                  CARRIER.ID = "02653"                      ;* "00494" ??
               CASE CARRIER = "DAYTON FREIGHT"
                  CARRIER.ID = "02715"
               CASE CARRIER = "ESTES EXPRESS LINES"
                  CARRIER.ID = "00601"
               CASE CARRIER = "N & M TRANSFER CO INC"
                  CARRIER.ID = "02199"
               CASE CARRIER = "OVERNITE TRANSPORTATION"
                  CARRIER.ID = ""
               CASE CARRIER = "PITT OHIO EXPRESS INC"
                  CARRIER.ID = "01786"
               CASE CARRIER = "R & L CARRIERS" OR CARRIER = "R&L" OR CARRIER = "R & L CARRIERS" OR CARRIER[1,3] = "R&L"
                  CARRIER.ID = "00114"
               CASE CARRIER = "ROADWAY EXPRESS INC" OR CARRIER = "YRC"
                  CARRIER.ID = "00017"
               CASE CARRIER = "TST OVERLAND EXPRESS"
                  CARRIER.ID = "12244"
               CASE CARRIER = "USF HOLLAND"
                  CARRIER.ID = "00124"
               CASE CARRIER = "BRYAN TRUCK LINE INC"
                  CARRIER.ID = "06205"
               CASE 1
                  CARRIER.ID = ''
            END CASE
         END

         FREIGHT.AMOUNT = ICONV(TRIM(LINE<1,2>),"MR2")
***         WEIGHT = TRIM(LINE<1,6>)
***         CONVERT "," TO "" IN WEIGHT

         TOT.WEIGHT = 0
         GOSUB GET.WEIGHT

         MILES = "100"

         IF TOT.WEIGHT NE "" AND TOT.WEIGHT GT "0" THEN
            NULL
         END ELSE
            ERR = "Invalid total weight '" : TOT.WEIGHT : "'"
         END

         INP.BILL.DATE  = TRIM(LINE<1,BDPOS>)
         BILL.DATE = ICONV(INP.BILL.DATE,"D4/")
         IF BILL.DATE = "" THEN
            ERR = "Invalid Date - '":INP.BILL.DATE:"'"
         END

IF USER = "XNPRATT" THEN
   CRT "BILL.DATE  ":BILL.DATE
   CRT "TOT.WEIGHT ":TOT.WEIGHT
   DEBUG
END

         ORIG.STATE = TRIM(LINE<1,OPOS>)          ;* Inserted prior to running RERATE.UNITRANS.SS
         DEST.STATE = TRIM(LINE<1,DPOS>)          ;* Inserted prior to running RERATE.UNITRANS.SS

         ORIG.ZIP=CHANGE(FIELD(LINE<1,OPOS>,'-',1),' ','')
         CONVERT " " TO "" IN ORIG.ZIP                                  ;* NPR01
         IF NUM(ORIG.ZIP) AND ORIG.ZIP#'' THEN ORIG.ZIP=ORIG.ZIP'R%5'
         DEST.ZIP=CHANGE(FIELD(LINE<1,DPOS>,'-',1),' ','')
         CONVERT " " TO "" IN DEST.ZIP                                  ;* NPR01
         IF NUM(DEST.ZIP) AND DEST.ZIP#'' THEN DEST.ZIP=DEST.ZIP'R%5'

         DEST.STATE = DEST.ZIP
         ORIG.STATE = ORIG.ZIP

         READ CARRIER.REC FROM F.CARRIERS, CARRIER.ID ELSE
            CALL ELINE('Invalid Carrier - ':CARRIER.ID)
            ERR = 'Invalid Carrier - ':CARRIER.ID
         END

         IF ERR = "" THEN
            READ CONTR.DFSC FROM F.NFSC,'C*':CARRIER.ID ELSE
               CALL ELINE('No FSC data for C*':CARRIER.ID:"  Carrier ":CARRIER)
               ERR = "No FSC data for C*":CARRIER.ID:"  Carrier ":CARRIER
            END

            VIN = ""
            VIN<1> = BILL.DATE
            VIN<2> = TOT.WEIGHT
            VIN<3> = MILES
***         VIN<5> = CC
            VIN<6> = FREIGHT.AMOUNT
            VIN<7> = ORIG.STATE                  ; * Special for Xpedx and AFS
            VIN<8> = DEST.STATE                  ; * Special for AFS
            VOUT = ''

            IF CONTR.DFSC NE '' THEN
               CALL CALC.FSC(VIN,VOUT,CONTR.DFSC,F.TABLES)
               FSC.PERC = VOUT<3>
               ERR      = VOUT<4>
            END ELSE
               ERR = 'No FSC data for C*':CARRIER.ID
            END

            FSC.AMT  = VOUT<1>
            FSC.PERC = VOUT<3>
         END

         IF ERR = "" THEN
            LINE<1,FSCP.POS>=FSC.PERC/1000       ;* NPR01
            LINE<1,FSC.POS>=OCONV(FSC.AMT,"MR2")
         END ELSE
            LINE<1,1> = ERR
         END
         NEW.DA<IR> = LINE

*CRT @(-1)
*FOR II = 1 TO 20
*   CRT II "R#3": " " : VOUT<II>
*NEXT II
*CRT
*CRT LINE
*IF USER = "NPRATT" THEN DEBUG
*CALL ELINE("")

      NEXT IR

      NEW.DA=CHANGE(NEW.DA,@VM,TAB)

*** IF USER = "NPRATT" THEN ITEM.NAME = "TESTER.XLS"

      WRITE NEW.DA ON F.BILLDATA, ITEM.NAME THEN
         CALL ELINE("File ": ITEM.NAME : " written to your U: drive")
      END ELSE
         CALL ELINE("FAILED to write file ": ITEM.NAME: " to your U: drive")
      END

EXIT.PROGRAM: *

IF ERROR NE "" THEN
   CALL ELINE(ERROR)
END
*
      STOP

********************* SUBROUTINES **************************************************************

GET.WEIGHT :
*
   CLASSES = ""
   WEIGHTS = ""
   CLS.CNT = 0
   WT.ERR = ""

   FOR Y = 5 TO NCOLS
      IF HDG.LINE<1,Y>='Class' AND (LINE<1,Y>#'' OR LINE<1,Y+1>#'') THEN
         CLS.CNT+=1
         W.CLASS  = LINE<1,Y>                         ;* NPR01
         W.WEIGHT = LINE<1,Y+1>                       ;* NPR01
         CONVERT "," TO "" IN W.WEIGHT                ;* NPR01
         CONVERT '"' TO '' IN W.WEIGHT                ;* NPR01
         IF W.CLASS=77.5 THEN W.CLASS=77              ;* NPR01
         IF W.CLASS=92.5 THEN W.CLASS=92              ;* NPR01
         CLASSES<1,CLS.CNT> = W.CLASS                 ;* NPR01
         WEIGHTS<1,CLS.CNT> = W.WEIGHT                ;* NPR01

         IF NOT(NUM(W.WEIGHT)) OR W.WEIGHT = "" THEN W.WEIGHT = 0
         IF W.WEIGHT+0=0 THEN
            WT.ERR = 'Class #':W.CLASS:' does not have a valid weight assigned to it.'
         END

      END
   NEXT Y

   IF WT.ERR = "" THEN   
      TOT.WEIGHT = SUM(WEIGHTS)
   END ELSE
      TOT.WEIGHT = ""
   END
*
RETURN
