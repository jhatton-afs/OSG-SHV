* PROGRAM: FB.5.4.REPRINT.STUBS
* PROGRAM TO REPRINT A CHECK STUB
*
* FRIEGHT BILLING PACKAGE
*
* AUTHOR: David R. Friend
* DATE: March 17, 2000
*
* THIS PROGRAM IS A PROPRIETARY PRODUCT OF AUTOMATED FREIGHT SYSTEMS
* AND MAY NOT BE USED, COPIED OR MODIFIED WITHOUT THE
* EXPRESS WRITTEN CONSENT OF SAME.
*
***********************************************************************
* 091306 : JCW01 : USE NEW FB.CHECKS FILES
*
***********************************************************************
*
*
*  LASER NOTES:
*     The following setting allow the program to choose which tray
*     to print from on multiple tray printers - PROVIDED that tray
*     linking is NOT TURNED ON!!!
*
*        CHAR(27):"&l1H"     - Selects TOP Bin (OR MAINFEED)
*        CHAR(27):"&l4H"     - Selectes BOTTOM bin (or Secondary)
*
*
$INCLUDE PROG.ADMIN INC_OPTIONS
$INCLUDE FILE.DEFS INC_FB.BILLS.HIST
*
* Initialize variables
*
      PROMPT ''
      ESC=CHAR(27)

      CALL GET.USER(USER)
      BILL.LIST='' ; * Used for Storing Bill ID's in Pre Processing
      PREV.CLIENT=''
      CHECK.REC=''
      CLIENT.CHECK.REC=''
      CHECK.AMT=0
      CLIENT.CHECK.AMT=0
      CLIENT.EDI.AMT=0
      ERRMSG=''
      FIRST.CHECK=0 ; * Special Flag for Problem with Fujitsu
      ADJ.CD='N'
      CARRIER.NUM.CODE=''
      ADJ.AMOUNT=''
      CHECK.TYPE='B'
      MAN.CHECK=0
      NO.MAN.ITEMS=0
      NO.FRT.ITEMS=0
      BOTH.MAN.FRT=0
      FRT.ONLY=0
      MAN.ONLY=0
*
      PROG.NAME='FB.5.4.REPRINT.STUBS'
      PROG.DESC='STUB REPRINTING'
      PACK.NAME='FREIGHT PAYMENT'
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
       UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.5.4.REPRINT.STUBS' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
       CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
*
* Open files
*
      OPEN '','FB.BANKS' TO F.BANK ELSE
        CALL OPEN.ABORT("FB.BANKS",PROG.NAME)
      END
      OPEN '','FB.BILLS.CRX' TO F.CRX ELSE
        CALL OPEN.ABORT("FB.BILLS.CRX",PROG.NAME)
      END
*     OPEN '','FB.CHECKS' TO F.CHECKS ELSE          ; * JCW01
*       CALL OPEN.ABORT("FB.CHECKS",PROG.NAME)      ; * JCW01
*     END                                           ; * JCW01
      OPEN '','FB.CHECKS.HDR' TO F.CHECKS ELSE      ; * JCW01
        CALL OPEN.ABORT("FB.CHECKS.HDR",PROG.NAME)  ; * JCW01
      END                                           ; * JCW01
      OPEN '','FB.CHECKS.DTL' TO F.CHECKS.D ELSE    ; * JCW01
        CALL OPEN.ABORT("FB.CHECKS.DTL",PROG.NAME)  ; * JCW01
      END                                           ; * JCW01
      OPEN '','CARRIERS' TO F.CARRIER ELSE
        CALL OPEN.ABORT("CARRIERS",PROG.NAME)
      END
      OPEN '','CLIENTS' TO F.CLIENTS ELSE
        CALL OPEN.ABORT("CLIENTS",PROG.NAME)
      END
      OPEN '','FB.TABLES' TO F.TABLES ELSE
        CALL OPEN.ABORT("FB.TABLES",PROG.NAME)
      END
      READ ADJ.CODE FROM F.TABLES,'CHECK.ADJUST' ELSE
        CALL ELINE('Table CHECK.ADJUST is not setup')
        STOP
      END
*
* Enter check number
*
100   HELP="Enter check number. [cr]=Exit."
      CALL GEN.IN(8,3,'######','',Q,0,6,'','',1,-6,3,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
        CASE QI='X' ! QI='EX' ! QI=''
          STOP
        CASE NUM(QI)
          NULL
        CASE 1
          CALL ELINE('Invalid entry.')
          GOTO 100
      END CASE
      CHECK.NUM=Q'R%6'
      CRT @(8,3):CHECK.NUM
*
* Get bank type
*
200   HELP="Enter bank type. [cr]=Accept. [X]=Back to check. [EX]=Abort."
      CALL GEN.IN(14,3,'*F','',Q,0,2,'','',1,-1,3,0,QI,HELP,0,23)
      BEGIN CASE
        CASE QI='X'
          CRT @(14,3):'  ':
          GOTO 100
        CASE QI='EX'
          STOP
        CASE QI=''
          Q='F'
        CASE ALPHA(QI)
          NULL
        CASE 1
          CALL ELINE('Invalid bank type.')
          GOTO 200
      END CASE
      BANK.TYPE=Q
      CRT @(14,3):'*':BANK.TYPE'L#2'
*
* Get check item
*
      CHECK.ID=CHECK.NUM:'*':BANK.TYPE
      READ CHECK.REC FROM F.CHECKS,CHECK.ID THEN
        PRO.ARR=''
*       NUM.PROS=DCOUNT(CHECK.REC<7>,CHAR(253))                       ; * JCW01
*       FOR I=1 TO NUM.PROS                                           ; * JCW01
*         PRO.ARR<-1>=CHECK.REC<7,I>                                  ; * JCW01
*       NEXT I                                                        ; * JCW01
        NUM.PROS = CHECK.REC<25>                                      ; * JCW01
        FOR I = 1 TO NUM.PROS                                         ; * JCW01
          DTL.ID = CHECK.ID:'*':I                                     ; * JCW01
          READV PRO FROM F.CHECKS.D, DTL.ID, 1 THEN                   ; * JCW01
            PRO.ARR<-1> = PRO                                         ; * JCW01
          END ELSE                                                    ; * JCW01
            MSG = 'Record ':DTL.ID:' not found in file FB.CHECKS.DTL; program will stop.' ; * JCW01
            MSG := CHAR(10):CHAR(13)                                  ; * JCW01
            MSG := 'Notify Jay Webert in Information Systems.':CHAR(10):CHAR(13)  ; * JCW01
            CALL ELINE(MSG)                                           ; * JCW01
            STOP                                                      ; * JCW01
          END                                                         ; * JCW01
        NEXT I                                                        ; * JCW01
*DF     IF NUM.PROS=0 THEN NUM.PROS=1
*DF     IF CHECK.REC<7>#'' AND CHECK.REC<7>#'Void' THEN
*DF       IF CHECK.REC<14>#'' THEN NUM.PROS=NUM.PROS+1
*DF     END
        IF CHECK.REC<14>#'' THEN
          ADJ.CD=CHECK.REC<13>
        END
        CHECK.DATE=CHECK.REC<2>
        CARRIER.ID=CHECK.REC<3>
        AMOUNT=CHECK.REC<4>
        IF CARRIER.ID#'0' THEN
          READ CARRIER.REC FROM F.CARRIER,CARRIER.ID ELSE CARRIER.REC='Unknown'
          CARRIER.NAME=CARRIER.REC<1>
          CARRIER.INFO=CARRIER.NAME:' ':CARRIER.REC<2,1>:' ':CARRIER.REC<2,2>:' ':CARRIER.REC<3>:' ':CARRIER.REC<4>:' ':CARRIER.REC<5>
          CARRIER.INFO=TRIM(CARRIER.INFO)
        END ELSE
          CARRIER.NAME=CHECK.REC<15>
          CARRIER.INFO=CARRIER.NAME:' ':CHECK.REC<17,1>:' ':CHECK.REC<17,2>:' ':CHECK.REC<18>:' ':CHECK.REC<19>:' ':CHECK.REC<20>
          CARRIER.INFO=TRIM(CARRIER.INFO)
        END
        CRT @(27,3):AMOUNT'R26,#11'
        CRT @(49,3):CHECK.DATE'D2/'
        CRT @(8,4):CARRIER.ID:' ':CARRIER.NAME
      END ELSE
        CALL ELINE('Check ':CHECK.ID:' not on file.')
        CRT @(8,3):SPACE(9)
        GOTO 100
      END
*
* Verify entries
*
400   HELP="Enter Y if correct or N if incorrect. 'X'=Back to Date. 'EX'=Exit."
      CALL GEN.IN(0,22,'Correct? N','',Q,0,1,'','',0,-1,22,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
        CASE QI='N' ! QI=''
          CRT @(0,3):@(-3)
          GOTO 100
        CASE QI='Y'
          NULL
        CASE 1
          GOTO 400
      END CASE
500:
      PRT.NUM=2               ;* Missy's Printer
      HELP="Enter the printer number on which to reprint stubs."
      CALL GEN.IN(0,20,'Enter printer number ':PRT.NUM'L#3','',Q,0,3,'','',1,-3,20,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN Q=PRT.NUM
      PRT.NUM=Q
      CRT @(21,20):PRT.NUM'L#3'
      HELP="Enter either Y or N."

510   CALL GEN.IN(0,22,'Is printer number correct? Y','',Q,0,1,'','',0,-1,22,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
        CASE QI='Y' ! QI=''
          NULL
        CASE QI='N'
          GOTO 500
        CASE 1
          GOTO 510
      END CASE

      CALL PRINTER.NUM(PRT.NUM,QUEUE)
      EXECUTE 'SP-ASSIGN F':QUEUE
      EXECUTE 'TERM ,,,,,,133,84'
      PRINTER ON
      GOSUB 9000
      PRINT ESC:"(s16.7h"
      PRINT ESC:"&l8D"
      PRINT ESC:"&l82F"
*DF      PRINT ESC:'&l1H':   ;* TOP Bin Selection
      PREV.CARRIER=''
      PREV.CLIENT=''
      CHECK.AMT=0
      COUNTER=0
*
* Build stub array
*
      STUB=''
      ATTR=1
*     IF CHECK.REC<7>='' THEN   ; * JCW01
      IF CHECK.REC<25> = 0 THEN ; * JCW01
        STUB<-1>=CHECK.REC<16>
      END ELSE
        FOR ITEM.NUM = 1 TO NUM.PROS
          PRO.ID = PRO.ARR<ITEM.NUM>
          READ PRO.REC FROM F.CRX,PRO.ID THEN

            CLIENT=PRO.REC<1>
            CARRIER=FIELD(PRO.ID,'*',1)
            CLIENT.BREAK = 0
            IF CARRIER NE PREV.CARRIER THEN GO PRINT.CHECK
            IF CLIENT NE PREV.CLIENT THEN
              READ DCLIENTS FROM F.CLIENTS,CLIENT ELSE
                DCLIENTS=''
                DCLIENTS<2>=CLIENT:' Not On File!'
              END
              CLIENT.BREAK.AMT=CLIENT.CHECK.AMT
              GOSUB 8200; * Print client payment break line
              CLIENT.NAME=DCLIENTS<2>
              PREV.CLIENT=CLIENT
            END
            GO SKIP.PRINT.CHECK
PRINT.CHECK:***
            PREV.CARRIER=CARRIER
            PREV.CLIENT=CLIENT
            READ DCLIENTS FROM F.CLIENTS,CLIENT ELSE
              DCLIENTS=''
              DCLIENTS<2>=CLIENT:' Not On File!'
            END
            CLIENT.NAME=DCLIENTS<2>
*
*START PROCESSING
SKIP.PRINT.CHECK:***
            IF CARRIER = '00015' AND PRO.REC<88>#'' THEN ON.STUB=0 ELSE ON.STUB=1
*           Don't Include Pro Numbers on FedEx EDI Bills
            PRO.NUM=FIELD(PRO.ID,'*',2)
            VERSION=FIELD(PRO.ID,'*',3)
            PRO.DATE=PRO.REC<2>
            PRO.AMT=PRO.REC<8>
            BILL.AMT=PRO.REC<8>-PRO.REC<11>-PRO.REC<10>
            IF BILL.AMT=PRO.AMT THEN BILL.AMT='' ; * Don't Show if Same
            CHECK.AMT=CHECK.AMT+PRO.AMT
            CLIENT.CHECK.AMT=CLIENT.CHECK.AMT+PRO.AMT
            IF ON.STUB ELSE GO SKIP.STUB
            CUT.DESC=''
            CUT.COUNT=0
*           FOR I=1 TO 3
* Don't even look at the logisitcs description in 3... we dont need it!
            FOR I=1 TO 2
              IF TRIM(PRO.REC<41,I>) NE '' THEN
                IF CUT.DESC='' THEN
                  CUT.DESC=' <--':TRIM(PRO.REC<41,I>)
                END ELSE
                  CUT.DESC=CUT.DESC:',':TRIM(PRO.REC<41,I>)
                END
              END
            NEXT I
*
* Build stub array
*
            TEXT=SPACE(1):PRO.DATE'D2/'
            TEXT:=SPACE(2):PRO.NUM'L#14'
            TEXT:=BILL.AMT'R26Z,#9'
            TEXT:=PRO.AMT'R26,#9'
            TEXT:=SPACE(1)
            BASE.LEN=LEN(STUB<ATTR>)
            TEXT.LEN=LEN(TEXT)
            DESC.LEN=LEN(CUT.DESC)
            TOT.LEN=BASE.LEN+TEXT.LEN+DESC.LEN
            IF TOT.LEN GT 132 THEN
              IF BASE.LEN > 0 THEN ATTR=ATTR+1
              STUB<ATTR>=TEXT
              IF CUT.DESC NE '' THEN
                X=DCOUNT(CUT.DESC,',')
                FOR I=1 TO X
                  C.TEXT=FIELD(CUT.DESC,',',I)
                  IF I NE X THEN C.TEXT=C.TEXT:', '
                  BASE.LEN=LEN(STUB<ATTR>)
                  DESC.LEN=LEN(C.TEXT)
                  TOT.LEN=BASE.LEN+DESC.LEN
                  IF TOT.LEN GE 132 THEN ATTR=ATTR+1
                  STUB<ATTR>=STUB<ATTR>:C.TEXT
                NEXT I
*
              END
            END ELSE
              STUB<ATTR>=STUB<ATTR>:TEXT:CUT.DESC
            END
            BEGIN CASE
              CASE LEN(STUB<ATTR>) LE 44
                STUB<ATTR>=STUB<ATTR>'L#44'
              CASE LEN(STUB<ATTR>) LE 88
                STUB<ATTR>=STUB<ATTR>'L#88'
              CASE 1
                STUB<ATTR>=STUB<ATTR>'L#132'
            END CASE
          END
SKIP.STUB:***
        NEXT ITEM.NUM
*
        PREV.CARRIER=CARRIER
        CLIENT.BREAK.AMT=CLIENT.CHECK.AMT
        GOSUB 8200; * Print client payment break line
        IF ADJ.CD # 'N' THEN
          LOCATE ADJ.CD IN ADJ.CODE<1> SETTING POS THEN
            STUB<-1>=' Adjustments: ':ADJ.CODE<2,POS>'L#21':' ':ADJ.CODE<3,POS>'R26#7'
            CHECK.AMT=CHECK.AMT+ADJ.CODE<3,POS>
           ATTR=ATTR+1
          END
        END
        STUB<-1>=' Total for check: ':CHECK.NUM:' = ':CHECK.AMT'R26,#16'
        ATTR=ATTR+1
      END
*
* Print overflow check stubs
*
      CRT @(0,3):@(-3):
      TEXT='Reprinting stubs.'
      CALL CENTER(TEXT,80)
      CRT @(0,10):TEXT
      ATTR=0
      LN.COUNT=0
      PAGE=0
450   IF LN.COUNT=0 ! LN.COUNT=78 THEN
        LN.COUNT=0
        PAGE=PAGE+1
*       PRINT ''
        PRINT CHAR(12):'Check Number ':CHECK.NUM:'  Check Date ':CHECK.DATE'D2/':'  To: ':CARRIER.INFO'L#76':SPACE(1):'Page ':PAGE
        PRINT ''
*       IF CHECK.REC<7> # '' THEN                           ; * JCW01
        IF CHECK.REC<7> = "Void" OR CHECK.REC<25> > 0 THEN  ; * JCW01
          FOR I=1 TO 3
            PRINT 'DATE''R#7':'PRO NUMBER''R#14':'$ BILLED''R#13':
            PRINT '$ PAID''R#8':'  ':
          NEXT I
        END
        PRINT ''
      END
      ATTR=ATTR+1
      LN.COUNT=LN.COUNT+1
      IF STUB<ATTR> NE '' THEN
        PRINT STUB<ATTR>
        GOTO 450
      END
      IF STUB<ATTR+1> NE '' THEN GO 450
      PRINTER OFF
      PRINTER CLOSE
      RELEASE
      CALL ELINE('')
      STOP
*-----------------------------------------------------------------------
*
* INTERNAL SUBROUTINES
*
*-----------------------------------------------------------------------
*
* Put client break line on check stub
*
8200  IF STUB<ATTR> NE '' THEN ATTR=ATTR+1
      TEXT=STR('-',130)
      TEXT1=CLIENT.BREAK.AMT'R26,':' For ':CLIENT.NAME
      LTEXT1=LEN(TEXT1)
      LSTART=INT((130-LTEXT1)/2)
      TEXT[LSTART,LTEXT1]=TEXT1
      STUB<ATTR>=' ':TEXT
      CLIENT.CHECK.AMT=0
*
      RETURN
*
* Configure the printer to Small (Condensed) Print
*
9000 *----
      BEGIN CASE
        CASE PRT.NUM = 1 OR PRT.NUM = 2
*         PRINT CHAR(15):
        CASE PRT.NUM = 4 OR PRT.NUM = 5 OR PRT.NUM = 6 OR PRT.NUM = 7
          GOSUB SETUP.PTR
        END CASE
      RETURN

SETUP.PTR:****
      LASER.STR=''
*      LASER.STR:= ESC:'E' ; * Printer Reset
*      LASER.STR:= ESC:'&l0O' ; * Portrait
*      LASER.STR:= ESC:'&l8D' ; * 8 LPI
*      LASER.STR:= ESC:'&l82F' ; * 82 Lines on Logical Page Length
*      * 82nd line is on the new page
*      LASER.STR:= ESC:'(8U' ; * 8U - Roman-8 Font
*      LASER.STR:= ESC:'(s0p' ; * Fixed Pitch
*      LASER.STR:= '19h' ; * 19 CPI
*      LASER.STR:= '0s' ; * Upright Style
*      LASER.STR:= '0b' ; * Medium Stroke Weight
*      LASER.STR:= '3T' ; * Typeface

      LASER.STR:= ESC:'E'      ;* Printer Reset
      LASER.STR:= ESC:'&l0O'   ;* 0 = Portrait 1=Landscape
      LASER.STR:= ESC:'&l8D'   ;* 8 LPI
      LASER.STR:= ESC:'&l82F'  ;* 82 Lines on Logical Page Length
      LASER.STR:= ESC:'(s0p'   ;* 0=Fixed Pitch 1=Proportional
      LASER.STR:= '16.67h'     ;* 16.67 CPI
      LASER.STR:= '8.50v'      ;* 8.50 Point Size
      LASER.STR:= '0s'         ;* Upright Style
      LASER.STR:= '0b'         ;* Medium Stroke Weight (1=SemiBold,2=DemiBold,3,4...)
      LASER.STR:= '0T'         ;* Typeface

      PRINT LASER.STR:
RETURN

9100 *---- Print Stub on Paper
        ATTR=0
        LN.COUNT=0
        PAGE=0
9150     IF LN.COUNT=0 ! LN.COUNT=55 THEN
          LN.COUNT=0
          PAGE=PAGE+1
*OH       PRINT @(-1):SPACE(58):'Remittance Advice':SPACE(50):'Page ':PAGE
          PRINT @(-1):'Control #: ':CHECK.NUM'L#8':
          PRINT SPACE(3):'Reference Date: ':CHECK.DATE'D2/':
          PRINT SPACE(12):'Remittance Advice':
          PRINT SPACE(50):'Page ':PAGE
          PRINT ''
          IF MAN.CHECK THEN
            PRINT ''
          END ELSE
            FOR X = 1 TO 3
              PRINT 'DATE''R#7':'PRO NUMBER''R#14':'$ BILLED''R#13':
              PRINT '$ PAID''R#8':'  ':
            NEXT X
          END
          PRINT ; * Drop down
          FOR X = 1 TO 3
            PRINT SPACE(1):STR('-',08): ; * Date
            PRINT SPACE(2):STR('-',14): ; * Pro
            PRINT SPACE(1):STR('-',08): ; * $ Billed
            PRINT SPACE(1):STR('-',08): ; * $ Paid
            PRINT SPACE(1):
          NEXT  X
          PRINT ; * Drop Down
        END
        ATTR=ATTR+1
        LN.COUNT=LN.COUNT+1
        IF STUB<ATTR> NE '' THEN
          PRINT STUB<ATTR>
          GOTO 9150
        END
        IF LN.COUNT> 46 THEN
          PAGE=PAGE+1
          PRINT @(-1):'Control #: ':CHECK.NUM'L#8':
          PRINT SPACE(3):'Reference Date: ':CHECK.DATE'D2/':
          PRINT SPACE(12):'Remittance Advice':
          PRINT SPACE(50):'Page ':PAGE
          FOR X = 1 TO 3
            PRINT ''
          NEXT X
          LN.COUNT=0
        END
        FOR X = LN.COUNT TO 46
          PRINT ''
        NEXT X
        * Now positioned for abbrievated Information
     RETURN
