$OPTIONS HEADER.EJECT
$OPTIONS EXEC.EQ.PERF
$OPTIONS INFO.ABORT
ERRMSG=''
* PROGRAM FB.6.7.1
* PROGRAM TO ENTER OR DISPLAY COMMISSION RATES FOR SALESMAN PER SALES CODE.
*
* FREIGHT BILLING PACKAGE
*
* APRIL 2009  BY N PRATT
*
      PROMPT''
      PROG.NAME='FB.6.7.1'
      PROG.DESC = "Salesman Commission Maintenance"
      PACK.NAME='FREIGHT BILLING'
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
       UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.6.7.1.MK1' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
       CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010

      CALL GET.USER(USER.NAME)

      GROUPS = "CC":@VM:"LG":@VM:"MS":@VM:"OC":@VM:"PB"                                              
      GROUPS<2> = "Carrier Charges":@VM:"Logistics":@VM:"Miscellanious":@VM:"Overcharges":@VM:"Fees"

* IF USER.NAME NE "NPRATT" THEN                                    ;* ZZ
*    CALL ELINE("Temporarily unavailable - Under Construction")    ;* ZZ
*    STOP                                                          ;* ZZ
* END                                                              ;* ZZ

      BEGIN CASE
        *
        * Authorized users
        *
        CASE USER.NAME = 'DAVID'
        CASE USER.NAME = 'OWEN'
        CASE USER.NAME = 'NPRATT'
        CASE USER.NAME = 'DEBBIE'
        CASE USER.NAME = 'KAREN'
        CASE USER.NAME = 'MKERBOW'
        CASE USER.NAME = 'PBASS'
        *
        * Restrict everyone else
        *
        CASE 1
          SUBJ="Unauthorized Program Access by ":USER.NAME
          TEXT=''
          TEXT<1,-1>=USER.NAME:' ':DATE()'D2/':' ':OCONV(TIME(),'MTHS'):' ':PROG.NAME
          TEXT<1,-1>='User ':USER.NAME:' tried to access ':PROG.DESC
          TEXT<1,-1>="(This user's name was not included in the program to allow access)"
          MVIN=''
*          MVIN<1>='Owen@afs.net':@VM:'SMatthews@afs.net'
******          MVIN<1> = "npratt@afs.net"
          MVIN<2>=''
          MVIN<4>='AFS'
          MVIN<5>=SUBJ
          MVIN<6>=TEXT
          CALL SENDMAIL(MVIN,MVOUT)

          CALL FB.PRINT.CENT(1,80,12,'Restricted Access Application...')
          CALL FB.PRINT.CENT(1,80,14,'Access Denied! Contact the IS Help Desk for Access')
          CALL ELINE('')
          STOP
      END CASE

*
* Open files
*
      OPEN '','FB.SLSMAN.COMM' TO F.SLSMAN.COMM ELSE CALL OPEN.ABORT('FB.SLSMAN.COMM',PROG.NAME)
      OPEN '','FB.COMM.INDEX1' TO F.COMM.INDEX1 ELSE CALL OPEN.ABORT('FB.COMM.INDEX1',PROG.NAME)
      OPEN '','FB.COMM.INDEX2' TO F.COMM.INDEX2 ELSE CALL OPEN.ABORT('FB.COMM.INDEX2',PROG.NAME)
      OPEN '','AR.SLSMAN.1000.1' TO F.SLSMAN ELSE CALL OPEN.ABORT('AR.SLSMAN.1000.1',PROG.NAME)
      OPEN '','AR.SALES.CODE.1000.1' TO F.SALES.CODE ELSE CALL OPEN.ABORT('AR.SALES.CODE.1000.1',PROG.NAME)
*
* Select and display available freight types
*
*
100  * Start Entry for screen 1
*

      GOSUB INIT.VARS
      GOSUB SETUP.SCREEN1

110 * Enter Initial Salesman

      GOSUB 1100

120 * Enter Servicing Salesman

      GOSUB 1200
      IF RET.FLAG = 'BACK' THEN GOTO 110

130 * Enter Commission Salesman

      IF COMM.INDX.REC2<1> = "" THEN
         GOSUB 1300
         IF RET.FLAG = 'BACK' THEN GOTO 120
      END

190 * Select Commission salesman to work with

      HELP="Select Line # of Commision Salesman. [X]=Back [EX]=Exit."
      CALL GEN.IN(0,22,"Enter line number please. ###",'',Q,0,3,'','',0,-3,22,0,QI,HELP,0,23)
      QI = OCONV(QI,"MCU")

      BEGIN CASE
         CASE QI=' '
            CALL ELINE("Invalid Response")
         CASE QI='EX'
            GOTO EXIT.HERE
         CASE QI='X'
            RET.FLAG = 'BACK'
            SERVC.SLSMAN.NO.NAME = ''
            SERVC.SLSMAN.ID = ''
            COMM.INDX.REC2 = ''
            GOSUB SETUP.SCREEN1
            GOSUB DISPLAY.DATA1
            GOTO 120
         CASE QI NE ''
            MAX.CS = DCOUNT(COMM.INDX.REC2,@AM)
            IF Q GE 1 AND Q LE MAX.CS + 1 THEN
               CS.SELECT = Q
               GOSUB 1300
               IF CS.SELECT = 1 AND RET.FLAG = 'BACK' THEN
                  SERVC.SLSMAN.NO.NAME = ''
                  SERVC.SLSMAN.ID = ''
                  COMM.INDX.REC2 = ''
                  GOSUB SETUP.SCREEN1
                  GOSUB DISPLAY.DATA1
                  GOTO 120
               END
            END ELSE
               CALL ELINE("Invalid Response")
               GOTO 190
            END
         CASE 1
            CALL ELINE("Invalid Response")
            GOTO 190
      END CASE

      COMM.SLSMAN.NO   = COMM.INDX.REC2<CS.SELECT>
      ID.SLSMAN.COMM = COMM.SLSMAN.NO:"*":INIT.SLSMAN.ID:'*':SERVC.SLSMAN.ID
      READ SLS.COMM.REC FROM F.SLSMAN.COMM, ID.SLSMAN.COMM ELSE SLS.COMM.REC = ""

      COMM.SLSMAN.NO.NAME = '??'
      READV COMM.SLSMAN.NAME FROM F.SLSMAN, COMM.SLSMAN.NO, 1 THEN
        COMM.SLSMAN.NO.NAME = COMM.SLSMAN.NO:" ":COMM.SLSMAN.NAME
      END

*
200  * Start Entry for screen 2 - Selection Date Range from a list

GOSUB SETUP.SCREEN2
GOSUB DISPLAY.DATA2

DTS.SELECT = 1

IF RET.FLAG = 'BACK' THEN
   COMM.SLSMAN.NO      = ""
   ID.SLSMAN.COMM      = ""
   COMM.SLSMAN.NO.NAME = ""
   GOSUB SETUP.SCREEN1
   GOSUB DISPLAY.DATA1
   GOTO 190
END

*qq GOSUB 2100   ;* Enter Effective Date ranges



290 * Select Date range to work with

HELP="Select Line # of Date range to work with. [A]dd a range [X]=Back [EX]=Exit."
CALL GEN.IN(0,22,"Enter line number please. ###",'',Q,0,3,'','',0,-3,22,0,QI,HELP,0,23)
QI = OCONV(QI,"MCU")
DTS.SELECT = ''
DT.ERR = ''
BEGIN.DT = ''
END.DT = ''
RET.FLAG = ''

*DEBUG
BEGIN CASE
   CASE QI=' '
      CALL ELINE("Invalid Response")
   CASE QI='EX'
      GOTO EXIT.HERE
   CASE QI='X' 
      GOSUB SETUP.SCREEN1
      GOSUB DISPLAY.DATA1
      GOTO 190
   CASE QI='A'
      LAST.BEGIN.DT = SLS.COMM.REC<1,1>
      LAST.END.DT   = SLS.COMM.REC<2,1>
      IF LAST.END.DT = '' AND LAST.BEGIN.DT NE '' THEN
         CALL ELINE("Close last effective date range before adding a new date range")
         DT.ERR = 1
         GOTO 290
      END
      NO.DTS = DCOUNT(SLS.COMM.REC<1>,@VM)
      DTS.SELECT = NO.DTS + 1
      
      GOSUB 2100 ;* Enter Effective Date ranges

      IF RET.FLAG = '' THEN
         GOSUB CHECK.DATE.RANGE
* CRT @(0,22): ; DEBUG
         IF DT.ERR THEN
            BEGIN.DT = '' ; END.DT = ''
            CRT @(DT.COL,DT.ROW):SPACE(8)
            CRT @(DT.COL+10,DT.ROW):SPACE(8)
            SLS.COMM.REC<1,DTS.SELECT> = BEGIN.DT
            SLS.COMM.REC<2,DTS.SELECT> = END.DT
            X = DCOUNT(SLS.COMM.REC<1>,@VM)
            FOR I=X TO 1 STEP -1
               BD = SLS.COMM.REC<1,I>
               ED = SLS.COMM.REC<2,I>
               IF BD = '' AND ED = '' THEN
                  SLS.COMM.REC=DELETE(SLS.COMM.REC,1,I)
                  SLS.COMM.REC=DELETE(SLS.COMM.REC,2,I)
                  SLS.COMM.REC=DELETE(SLS.COMM.REC,3,I)
                  SLS.COMM.REC=DELETE(SLS.COMM.REC,4,I)
               END
            NEXT X
            GOTO 290
         END
      END
      IF RET.FLAG = 'BACK' THEN
         COMM.SLSMAN.NO      = ""
         ID.SLSMAN.COMM      = ""
         COMM.SLSMAN.NO.NAME = ""
         GOSUB SETUP.SCREEN1
         GOSUB DISPLAY.DATA1
         GOTO 190
      END
      IF END.DT = '' AND BEGIN.DT = '' THEN
         CALL ELINE("FROM Date may not be blank")
         DT.ERR = 1
         GOTO 290
      END
      IF DT.ERR THEN GOTO 290
   CASE QI NE ''
      MAX.DTS = DCOUNT(SLS.COMM.REC<1>,@VM)
*QQ      IF Q GE 1 AND Q LE MAX.DTS THEN
      IF Q GE 1 AND Q LE MAX.DTS+1 THEN
         DTS.SELECT = Q
         BEGIN.DT = SLS.COMM.REC<1,DTS.SELECT>
         END.DT   = SLS.COMM.REC<2,DTS.SELECT>
         GOSUB 2100 ;* Enter Effective Date ranges
         IF DT.ERR THEN GOTO 290
      END ELSE
         CALL ELINE("Invalid Response")
         GOTO 290
      END

   CASE 1
      CALL ELINE("Invalid Response")
      GOTO 290
END CASE

IF DT.ERR THEN GOTO 290
    
300  * Start Entry for screen 3

PG.CNT = 1

GOSUB SETUP.SCREEN3
GOSUB BUILD.DETAIL.ARRAY
GOSUB DISPLAY.DATA3
*
* Choose line number

IF DISP.REC = "" THEN
   SEL = 1
   NEW.ITEM = 1
   GOSUB ENTER.SLSCODE.DETAIL
   GOSUB 9000 
END  
*
310  

RET.FLAG = '' 

* HELP="Line #. 'B'=Back. 'T'=Top, ''=Next pg. 'LP'=Last Pg. 'E'=End-&-Save. 'EX'=Exit."

* HELP = "Enter number to edit. [B]ack [F]orward [N]ew [D]elete [CR]=Next [U]pdate [EX]it"
HELP = "Enter number to edit. [P]rev [T]op [CR]=Next [U]pdate [X]=Back [EX]it"


      CALL GEN.IN(0,22,"Enter line number please. ###",'',Q,0,3,'','',0,-3,22,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU') 
      BEGIN CASE
        CASE QI=''
           PG.CNT=PG.CNT+1
           IF PG.CNT GT LAST.PG THEN
              CALL ELINE('No more pages')
              PG.CNT=PG.CNT-1
              GOTO 310
           END
           GOSUB 9000
*RR        CASE QI='B'
        CASE QI='P'
           PG.CNT=PG.CNT-1
           IF PG.CNT=0 THEN PG.CNT=1
           GOSUB 9000
        CASE QI='T'
           PG.CNT=1
           GOSUB 9000
        CASE QI='LP'
           PG.CNT=LAST.PG
           GOSUB 9000
        CASE QI='EX'
           GOTO EXIT.HERE
        CASE QI='X'
           RET.FLAG = 'BACK'
           BEGIN.DT = ''
           END.DT = ''
           GOSUB SETUP.SCREEN2
           GOSUB DISPLAY.DATA2
           GOTO 290
        CASE NUM(QI)
           SEL=QI
           IF SEL LT START ! SEL GT STOP+1 THEN
             CALL ELINE('Invalid selection.')
             GOTO 310
           END
           GOSUB 8000
           GOSUB 9000
*RR        CASE QI='E'
        CASE QI='U'
           X=DCOUNT(DISP.REC<1>,CHAR(253))
           FOR I=X TO 1 STEP -1
             IF DISP.REC<1,I>='' THEN
                DISP.REC=DELETE(DISP.REC,1,I)
                DISP.REC=DELETE(DISP.REC,2,I)
                DISP.REC=DELETE(DISP.REC,3,I)
                DISP.REC=DELETE(DISP.REC,4,I)
             END
           NEXT I
*
           ID.SLSMAN.COMM = COMM.SLSMAN.NO:"*":INIT.SLSMAN.ID:'*':SERVC.SLSMAN.ID
           READ UPD.REC FROM F.SLSMAN.COMM, ID.SLSMAN.COMM ELSE UPD.REC = ""

           LOCATE BEGIN.DT IN UPD.REC<1> BY "DR" SETTING DT.POS THEN
              UPD.REC<2,DT.POS> = END.DT  ;* Close date range if neccessary
              UPD.REC<3,DT.POS> = ""  ;* Reset , ready for re-population
              UPD.REC<4,DT.POS> = ""  ;* Reset , ready for re-population
           END ELSE
              UPD.REC = INSERT(UPD.REC,1,DT.POS,0,BEGIN.DT)
              UPD.REC = INSERT(UPD.REC,2,DT.POS,0,END.DT)
              UPD.REC = INSERT(UPD.REC,3,DT.POS,0,"")
              UPD.REC = INSERT(UPD.REC,4,DT.POS,0,"")
           END

           N.SLS.CODES = DCOUNT(DISP.REC<1>,CHAR(253))

           FOR I.SLS.CODE = 1 TO N.SLS.CODES
              T.SLS.CODE = DISP.REC<1,I.SLS.CODE>
              T.RATE = DISP.REC<4,I.SLS.CODE>
              IF T.SLS.CODE NE '' THEN
                 SC.POS = I.SLS.CODE
                 UPD.REC<3,DT.POS,SC.POS> = T.SLS.CODE
                 UPD.REC<4,DT.POS,SC.POS> = T.RATE
              END
           NEXT I.SLS.CODE

           WRITE UPD.REC ON F.SLSMAN.COMM, ID.SLSMAN.COMM

           IF INIT.SLSMAN.ID = 'ALL' OR SERVC.SLSMAN.ID = 'ALL' THEN
              NULL
           END ELSE
              ID.FB.INDX2 = INIT.SLSMAN.ID:'*':SERVC.SLSMAN.ID
              READ NEW.INDX2.REC FROM F.COMM.INDEX2, ID.FB.INDX2 ELSE NEW.INDX2.REC = ''

              MAX.CS = DCOUNT(COMM.INDX.REC2,@AM)
              FOR CSM = 1 TO MAX.CS
                 W.COMM.SLSMAN.ID = COMM.INDX.REC2<CSM>
                 LOCATE W.COMM.SLSMAN.ID IN NEW.INDX2.REC BY "AR" SETTING SLS.POS ELSE
                    INS W.COMM.SLSMAN.ID BEFORE NEW.INDX2.REC<SLS.POS> 
                 END
                 WRITE NEW.INDX2.REC ON F.COMM.INDEX2, ID.FB.INDX2
              NEXT CSM
           END

           GOTO 100
      END CASE

      GOTO 310
*
*------------------------------------------------------------------------
* INTERNAL SUBROUTINES
*------------------------------------------------------------------------

1100:* Enter Initial Salesman

      RET.FLAG = ''
      INIT.SLSMAN.ID.HOLD = INIT.SLSMAN.ID


      MASK=INIT.SLSMAN.NO.NAME:STR(MASK.CHAR,30-LEN(INIT.SLSMAN.NO.NAME))

*      HELP='Enter Initial salesman number or name. [L]ist [X]=Back'

      HELP='Enter Initial salesman number or name. [ALL]  [EX]=Exit'
      CALL GEN.IN(25,03,MASK,'',Q,0,31,'','',0,25,03,0,QI,HELP,0,23)

      QI=OCONV(QI,'MCU')
      IF QI = '' THEN QI = INIT.SLSMAN.ID.HOLD

      BEGIN CASE
         CASE QI = 'EX' OR QI='X'
            GOTO EXIT.HERE
         CASE QI = 'ALL'
            INIT.SLSMAN.ID = QI
            INIT.SLSMAN.NO.NAME=QI
*         CASE QI='L'
*            GOSUB POP.UP.LIST.OF.SALESMEN
*            IF SELECTION='NO DATA' THEN GOTO 1300
*            IF SELECTION='E' THEN
*               DATA 8
*               RETURN
*            END
         CASE NUM(QI)
            QI=QI'R%5'
            READ INIT.SLSM.REC FROM F.SLSMAN,QI THEN
               INIT.SLSMAN.ID = QI
               INIT.SLSMAN.NO.NAME=INIT.SLSMAN.ID:' ':INIT.SLSM.REC<1>'L#25'
            END ELSE
               CALL ELINE('Salesman number ':QI:' is not on file.')
               GOTO 1100
            END
         CASE ALPHA(QI)
            IF QI = "ALL" THEN
               NULL
            END ELSE
               CALL SOUNDEX.DISPLAY(QI,'AR.SLSMAN.1000.1','AR.SLSMAN.1000.1,SDX.NAME','1',QX)
               QI=QX<1,1>'R%5'
               READ INIT.SLSM.REC FROM F.SLSMAN,QI THEN
                  INIT.SLSMAN.ID = QI
                  INIT.SLSMAN.NO.NAME=INIT.SLSMAN.ID:' ':INIT.SLSM.REC<1>'L#25'
               END ELSE
                  CALL ELINE('Salesman number ':QI:' is not on file.')
                  GOTO 1100
               END
               GOSUB SETUP.SCREEN1
               GOSUB DISPLAY.DATA1
            END
         CASE 1
            CALL ELINE("Invalid Response")
            GOTO 1100
      END CASE

      CRT @(25,03):INIT.SLSMAN.NO.NAME

RETURN

1200:* Enter Servicing Salesman

      RET.FLAG = ''
      SERVC.SLSMAN.ID.HOLD = SERVC.SLSMAN.ID

      MASK=SERVC.SLSMAN.NO.NAME:STR(MASK.CHAR,30-LEN(SERVC.SLSMAN.NO.NAME))

*      HELP='Enter Servicing salesman number or name. [L]ist [X]=Back'
      HELP='Enter Servicing salesman number or name. [ALL] [X]=Back [EX]=Exit'
      CALL GEN.IN(25,04,MASK,'',Q,0,31,'','',0,25,04,0,QI,HELP,0,23)

      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            SERVC.SLSMAN.ID = SERVC.SLSMAN.ID.HOLD
            CRT @(25,04):@(-4)
            RET.FLAG = 'BACK'
         CASE QI = 'EX'
            GOTO EXIT.HERE
         CASE QI = 'ALL'
            SERVC.SLSMAN.ID = QI
            SERVC.SLSMAN.NO.NAME=QI
*         CASE QI='L'
*            GOSUB POP.UP.LIST.OF.SALESMEN
*            IF SELECTION='NO DATA' THEN GOTO 1300
*            IF SELECTION='E' THEN
*               DATA 8
*               RETURN
*            END
         CASE NUM(QI)
            QI=QI'R%5'
            READ SERVC.SLSM.REC FROM F.SLSMAN,QI THEN
               SERVC.SLSMAN.ID = QI
               SERVC.SLSMAN.NO.NAME=SERVC.SLSMAN.ID:' ':SERVC.SLSM.REC<1>'L#25'
            END ELSE
               CALL ELINE('Salesman number ':QI:' is not on file.')
               GOTO 1200
            END
         CASE ALPHA(QI)
            IF QI = "ALL" THEN
               NULL
            END ELSE
               CALL SOUNDEX.DISPLAY(QI,'AR.SLSMAN.1000.1','AR.SLSMAN.1000.1,SDX.NAME','1',QX)
               QI=QX<1,1>'R%5'
               READ SERVC.SLSM.REC FROM F.SLSMAN,QI THEN
                  SERVC.SLSMAN.ID = QI
                  SERVC.SLSMAN.NO.NAME=SERVC.SLSMAN.ID:' ':SERVC.SLSM.REC<1>'L#25'
               END ELSE
                  CALL ELINE('Salesman number ':QI:' is not on file.')
                  GOTO 1200
               END
               GOSUB SETUP.SCREEN1
               GOSUB DISPLAY.DATA1
            END
         CASE 1
            CALL ELINE("Invalid Response")
            GOTO 1200
      END CASE

      CRT @(25,04):SERVC.SLSMAN.NO.NAME
*
      ID.INDEX2 = INIT.SLSMAN.ID:'*':SERVC.SLSMAN.ID
      READ COMM.INDX.REC2 FROM F.COMM.INDEX2, ID.INDEX2 ELSE COMM.INDX.REC2 = ""

      GOSUB DISPLAY.DATA1

RETURN

1300:* Enter Commission Salesman

      RET.FLAG = ''
      CS.CNT = 1

      IF COMM.INDX.REC2<1> = "" THEN
         CS.CNT = 1
         FOR II = 1 TO 24
            IF INT(CS.CNT/13) = 0 THEN
               CS.ROW = CS.CNT+9
               CS.COL = 6
            END ELSE
               CS.ROW = CS.CNT-3
               CS.COL = 48
            END
            RET.FLAG = ''
            GOSUB 1350
            IF RET.FLAG = 'BACK' THEN
*               LOOP
*               WHILE CS.CNT GT 1 OR RET.FLAG = 'BACK' DO
*                  GOSUB 1350
*               REPEAT
               RETURN
            END
            IF RET.FLAG = 'DONE' THEN
               II = 24 ;* Done Entering Commissionable Salesman
            END ELSE
               CS.CNT += 1
            END
         NEXT II
      END ELSE
         CS.CNT = CS.SELECT
         IF INT(CS.CNT/13) = 0 THEN
            CS.ROW = CS.CNT+9
            CS.COL = 6
         END ELSE
            CS.ROW = CS.CNT-3
            CS.COL = 48
         END
         GOSUB 1350
      END

      RETURN

1350:* Enter Commission Salesman

*CRT @(0,0):"  CS.CNT ":CS.CNT : @(-4) ; DEBUG

      COMM.SLSMAN.NO   = COMM.INDX.REC2<CS.CNT>
      COMM.SLSMAN.NO.NAME = ''
      COMM.SLSMAN.ID = COMM.SLSMAN.NO
      RET.FLAG = ''

      IF COMM.SLSMAN.NO NE '' THEN
         READV COMM.SLSMAN.NAME FROM F.SLSMAN, COMM.SLSMAN.NO, 1 ELSE COMM.SLSMAN.NAME = ''
         COMM.SLSMAN.NO.NAME = COMM.SLSMAN.NO:"  ":COMM.SLSMAN.NAME
      END
      MASK=COMM.SLSMAN.NO.NAME:STR(MASK.CHAR,30-LEN(COMM.SLSMAN.NO.NAME))
      COMM.SLSMAN.NO.NAME.HOLD = MASK

      HELP='Enter Commission salesman # or name. CR to Select [X] Back [EX]=Exit'
      CALL GEN.IN(CS.COL,CS.ROW,MASK,'',Q,0,31,'','',0,CS.COL,CS.ROW,0,QI,HELP,0,23)
* DEBUG
* CRT @(0,0):"  CS.CNT ":CS.CNT : @(-4) ; DEBUG
      QI=OCONV(QI,'MCU')

      BEGIN CASE
         CASE QI = ''
            IF COMM.SLSMAN.ID NE '' THEN
               QI = COMM.SLSMAN.ID
            END ELSE
               RET.FLAG = 'DONE'
               RETURN
            END
         CASE QI='X'
            RET.FLAG = 'BACK'
            CS.SELECT = CS.CNT
            IF CS.CNT = 1 THEN
               SERVC.SLSMAN.NO.NAME = ''
               SERVC.SLSMAN.ID = ''
               COMM.INDX.REC2 = ''
               COMM.SLSMAN.ID = ''
               COMM.SLSMAN.NO = ''
               GOSUB SETUP.SCREEN1
               GOSUB DISPLAY.DATA1
            END ELSE
               CS.CNT = CS.CNT -1
               CRT @(CS.COL,CS.ROW):COMM.SLSMAN.NO.NAME.HOLD : SPACE(30-LEN(COMM.SLSMAN.NO.NAME.HOLD))
               CS.ROW = CS.ROW -1
               GOTO 1350
            END
         CASE QI = 'EX'
            GOTO EXIT.HERE
         CASE QI=''
            IF COMM.SLSMAN.NO NE '' THEN
               QI = COMM.SLSMAN.NO
            END ELSE
               IF TRIM(COMM.SLSMAN.NO.NAME) EQ '' THEN
                  RET.FLAG = "DONE"
               END
            END
         CASE NUM(QI)
            QI=QI'R%5'
            COMM.SLSMAN.ID = QI
*QQ            LOCATE COMM.SLSMAN.ID IN COMM.INDX.REC2<1> SETTING DMY THEN
            LOCATE COMM.SLSMAN.ID IN COMM.INDX.REC2 SETTING DMY THEN
               CALL ELINE('Salesman number ':QI:' Has already been entered.')
               GOTO 1350
            END
            READ COMM.SLSM.REC FROM F.SLSMAN,COMM.SLSMAN.ID THEN
               COMM.SLSMAN.NO.NAME=COMM.SLSMAN.ID:' ':COMM.SLSM.REC<1>'L#25'
            END ELSE
               CALL ELINE('Salesman number ':QI:' is not on file.')
               GOTO 1350
            END
         CASE ALPHA(QI)
            CALL SOUNDEX.DISPLAY(QI,'AR.SLSMAN.1000.1','AR.SLSMAN.1000.1,SDX.NAME','1',QX)
* CRT @(0,0):"  CS.CNT ":CS.CNT : @(-4) ; DEBUG
            QI=QX<1,1>'R%5'
            READ COMM.SLSM.REC FROM F.SLSMAN,QI THEN
               COMM.SLSMAN.ID = QI
               COMM.SLSMAN.NO = QI
               COMM.SLSMAN.NO.NAME=COMM.SLSMAN.ID:' ':COMM.SLSM.REC<1>'L#25'
               COMM.INDX.REC2<CS.CNT> = COMM.SLSMAN.ID
            END ELSE
               CALL ELINE('Salesman number ':QI:' is not on file.')
               GOTO 1350
            END
            GOSUB SETUP.SCREEN1
            GOSUB DISPLAY.DATA1
            CS.CNT = DCOUNT(COMM.INDX.REC2,@AM)
            IF INT(CS.CNT/13) = 0 THEN
               CS.ROW = CS.CNT+9
               CS.COL = 6
            END ELSE
               CS.ROW = CS.CNT-3
               CS.COL = 48
            END
         CASE 1
            CALL ELINE("Invalid Response")
            GOTO 1350
      END CASE

      COMM.SLSMAN.NO.NAME = ''
      IF COMM.SLSMAN.ID NE '' THEN
         COMM.INDX.REC2<CS.CNT> = COMM.SLSMAN.ID
         COMM.SLSMAN.NO   = COMM.INDX.REC2<CS.CNT>
         READV COMM.SLSMAN.NAME FROM F.SLSMAN, COMM.SLSMAN.NO, 1 ELSE COMM.SLSMAN.NAME = ''
         COMM.SLSMAN.NO.NAME = COMM.SLSMAN.NO:" ":COMM.SLSMAN.NAME "L#25"
      END

      CRT @(CS.COL,CS.ROW):COMM.SLSMAN.NO.NAME  :

RETURN

2100:* Enter Effective Date ranges

      RET.FLAG = ''
      DT.CNT = 1

      IF SLS.COMM.REC<1,DTS.SELECT> = "" AND DTS.SELECT = '' THEN
         DT.CNT = 1
         FOR II = 1 TO 22
            IF INT(DT.CNT/12) = 0 THEN
               DT.ROW = DT.CNT+10
               DT.COL = 6
            END ELSE
               DT.ROW = DT.CNT-1
               DT.COL = 46
            END
            RET.FLAG = ''
            GOSUB 2150
*            GOSUB 2200
            IF RET.FLAG = 'BACK' THEN
               IF DT.CNT = 1 THEN
                  RETURN
               END ELSE
                  DT.CNT  = DT.CNT - 1
               END
            END ELSE
            END
            IF RET.FLAG = 'DONE' THEN
               II = 22 ;* Done Entering Dates
               CONTINUE  ;* Skip Prompt for End date - Hopefully
            END ELSE
               DT.CNT += 1
            END
            GOSUB 2200
            IF RET.FLAG = 'BACK' THEN
               IF DT.CNT = 1 THEN
                  RETURN
               END ELSE
                  DT.CNT  = DT.CNT - 1
               END
            END ELSE
            END
         NEXT II
      END

*      IF SLS.COMM.REC<1,DTS.SELECT> NE "" OR DTS.SELECT NE '' THEN
      IF DTS.SELECT NE '' THEN
*         DTS.SELECT = DCOUNT(SLS.COMM.REC<1>,@VM)
         DT.CNT = DTS.SELECT
         IF INT(DT.CNT/12) = 0 THEN
            DT.ROW = DT.CNT+10
            DT.COL = 6
         END ELSE
            DT.ROW = DT.CNT-1
            DT.COL = 46
         END
         RET.FLAG = ''
         GOSUB 2150
         IF RET.FLAG = 'BACK' THEN RETURN
         GOSUB 2200
         IF RET.FLAG = 'BACK' THEN RETURN
      END

* CRT @(0,0):"  CS.CNT ":CS.CNT : @(-4) ; DEBUG
* CALL ELINE("")

      RETURN

2150:* Enter Begin Date

      HELP='Enter Effective Date FROM. [cr]=Accept'
*      MASK=''
      MASK = SLS.COMM.REC<1,DTS.SELECT> 'D2/'
      N.DTS = DCOUNT(SLS.COMM.REC<1>,@VM)

      CALL GEN.IN(DT.COL,DT.ROW,MASK,'DATE',Q,0,8,'','',0,DT.COL,DT.ROW,0,QI,HELP,0,23)

      BEGIN CASE
         CASE QI=' '
            CALL ELINE("Invalid Response")
         CASE QI='EX'
            GOTO EXIT.HERE
         CASE QI='X'
            RET.FLAG = 'BACK'
            CRT @(DT.COL,DT.ROW) : SPACE(8)
            RETURN
         CASE QI NE ''
* CRT @(0,0):"  CS.CNT ":CS.CNT : @(-4) ; DEBUG
            BEGIN.DT=Q
            LOCATE BEGIN.DT IN SLS.COMM.REC<1> BY "AR" SETTING DT.POS THEN
               NULL
            END ELSE
               DT.POS = DT.CNT
            END
            SLS.COMM.REC<1,DT.POS> = BEGIN.DT
         CASE QI = ''
            W.BEGIN.DT = SLS.COMM.REC<1,DT.CNT>
            W.END.DT   = SLS.COMM.REC<2,DT.CNT>
            IF W.BEGIN.DT = '' THEN
               IF W.END.DT = '' THEN
                  RET.FLAG = 'DONE'
                  RETURN
               END
            END
            BEGIN.DT = W.BEGIN.DT
         CASE 1
            CALL ELINE("Invalid Response")
            GOTO 2100 
      END CASE

      CRT @(DT.COL,DT.ROW):BEGIN.DT'D2/'

RETURN

2200:* Enter End Date

      HELP='Enter Effective Date TO. [space]=Clear [cr]=Accept'

* DEBUG
      W.BEGIN.DT = SLS.COMM.REC<1,DT.CNT>
      LOCATE W.BEGIN.DT IN SLS.COMM.REC<1> BY "DR" SETTING BDT.POS THEN
         END.DT = SLS.COMM.REC<2,BDT.POS>
         MASK= END.DT 'D2/'
      END ELSE
         END.DT = ''
         MASK=''
      END

      CALL GEN.IN(DT.COL+10,DT.ROW,MASK,'DATE',Q,0,8,'','',0,DT.COL+10,DT.ROW,0,QI,HELP,0,23)

      BEGIN CASE
         CASE QI=' '
            END.DT =''
            CRT @(DT.COL+10,DT.ROW):SPACE(8)
            RETURN
         CASE QI='EX'
            GOTO EXIT.HERE
         CASE QI='X'
            RET.FLAG = 'BACK'
            CRT @(DT.COL+10,DT.ROW) : SPACE(8)
            RETURN
         CASE QI = ''
            END.DT=Q
            GOSUB CHECK.DATE.RANGE
            IF DT.ERR THEN
               IF BEGIN.DT NE '' THEN CRT @(DT.COL,DT.ROW):BEGIN.DT 'D2/'
               IF SLS.COMM.REC<2,BDT.POS> NE "" THEN D.END.DT = SLS.COMM.REC<2,BDT.POS> ELSE D.END.DT = SPACE(8)
               CRT @(DT.COL+10,DT.ROW) : D.END.DT 'D2/'
*CALL ELINE("DT CHK1")
               GOTO 2200
            END
            SLS.COMM.REC<2,BDT.POS> = END.DT
         CASE QI NE ''
            END.DT=Q
            GOSUB CHECK.DATE.RANGE
            IF DT.ERR THEN
               IF BEGIN.DT NE '' THEN CRT @(DT.COL,DT.ROW):BEGIN.DT'D2/'
               IF SLS.COMM.REC<2,BDT.POS> NE "" THEN D.END.DT = SLS.COMM.REC<2,BDT.POS> ELSE D.END.DT = SPACE(8)
               CRT @(DT.COL+10,DT.ROW) : D.END.DT 'D2/'
*CALL ELINE("DT CHK 2")
               GOTO 2200
            END
            SLS.COMM.REC<2,BDT.POS> = END.DT
         CASE 1
            CALL ELINE("Invalid Response")
            GOTO 2200 
      END CASE
      CRT @(DT.COL+10,DT.ROW):END.DT'D2/'

RETURN
*
ENTER.SLSCODE.DETAIL :
*

GOSUB 8000
IF W.SLS.CODE = '' THEN
   NULL
END ELSE
   SEL += 1
   GOTO ENTER.SLSCODE.DETAIL
END
*
RETURN
*
* Edit code
*
8000 

      ROW=8+REM(SEL,13)
      IF ROW=8 THEN ROW=21


      W.SLS.CODE = DISP.REC<1,SEL>
      W.SLS.CODE.GROUP = DISP.REC<2,SEL> 
      W.SLS.CODE.DESC = DISP.REC<3,SEL>
*
      SLS.CODE.HOLD = W.SLS.CODE

8010  HELP="Enter Sales Code. ''=Accept. 'D'=Delete. 'EX'=Exit."
*
      CALL GEN.IN(4,ROW,W.SLS.CODE'R#5','',Q,0,5,'R','',0,4,ROW,0,QI,HELP,0,23)
*      IF QI = 'X' OR QI = 'EX' THEN

* DEBUG
      IF QI = 'EX' THEN
         GOTO EXIT.HERE
      END

      IF NUM(QI) AND QI GT "999" THEN
         CALL ELINE("This is a Scott Traffic code and is to be handled the same as the AFS equivalent")
         GOTO 8010
      END

      IF QI = 'ALL' THEN
         SLS.CODE = 'ALL'
         SLS.CODE.GROUP = 'ALL'
         SLS.CODE.DESC = 'ALL CODES'
         GOTO 8005
      END

      IF QI='D' THEN
         DISP.REC=DELETE(DISP.REC,1,SEL)
         DISP.REC=DELETE(DISP.REC,2,SEL)
         DISP.REC=DELETE(DISP.REC,3,SEL)
         DISP.REC=DELETE(DISP.REC,4,SEL)
         GOSUB 9000
         RETURN
      END

      W.SLS.CODE=Q

      IF QI='' THEN
         IF NEW.ITEM THEN
            NEW.ITEM = 0
            GOTO 8999
         END
         Q = SLS.CODE.HOLD
         QI = SLS.CODE.HOLD
      END ELSE
         ERROR = "0"
*
         N.SLS.CODES = DCOUNT(DISP.REC<1>,CHAR(253))
         FOR II = 1 TO N.SLS.CODES
            T.SLS.CODE = DISP.REC<1,II>
            IF T.SLS.CODE = W.SLS.CODE THEN
               IF II NE SEL THEN ERROR = "1" ; CONTINUE
            END
         NEXT II
         IF ERROR THEN
            CALL ELINE("This SLS.CODE already exists in the list")
            GOTO 8010
         END 
      END

      SLS.CODE = Q

      GR.DESC = ''
      READ SLS.CODE.REC FROM F.SALES.CODE, SLS.CODE ELSE
         ERRMSG = "Sales code ":SLS.CODE:" Not found RETURN/ENTER to try again"
         LOCATE SLS.CODE IN GROUPS<1> SETTING GPOS THEN
            GR.CODE = GROUPS<1,GPOS>
            GR.DESC = GROUPS<2,GPOS>
         END
         IF GR.DESC = '' THEN
            CALL ELINE("Code ":SLS.CODE:"   Not found RETURN/ENTER to try again")
            GOTO 8010
         END
      END

      IF GR.DESC = '' THEN
         SLS.CODE.GROUP  = SLS.CODE.REC<8>
         SLS.CODE.DESC   = SLS.CODE.REC<10>
         SLS.CODE.STATUS = SLS.CODE.REC<18>
         IF SLS.CODE.STATUS NE "A" THEN
            CALL ELINE("Code ":SLS.CODE:" Appears to be Inactive?")
            GOTO 8010
         END
      END ELSE
         SLS.CODE.GROUP = SLS.CODE
         SLS.CODE.DESC = GR.DESC        
      END

*      CRT @(10,ROW):SLS.CODE "R#5"
*      CRT @(16,ROW):" ":SLS.CODE.DESC "L#50"
8005 
      CRT @(04,ROW):SLS.CODE "R#4"
      CRT @(09,ROW):SLS.CODE.GROUP "R#5"
      CRT @(15,ROW):SLS.CODE.DESC[1,50] "L#50"


8020  HELP="Enter Rate. ''=Accept. 'D'=Delete. 'EX'=Exit."

      W.RATE = DISP.REC<4,SEL>
      RATE.HOLD = W.RATE 
*
      CALL GEN.IN(74,ROW,W.RATE'R#5','',Q,0,5,'R',0,0,74,ROW,0,QI,HELP,0,23)
 
      IF QI=  'EX' THEN
         GOTO EXIT.HERE
      END

      IF QI='' THEN
         W.RATE = RATE.HOLD
      END ELSE
         W.RATE = ICONV(Q,"MR2")
      END

      CRT @(74,ROW):OCONV(W.RATE,"MR2") "R#5"
*
      DISP.REC<1,SEL>=SLS.CODE
      DISP.REC<2,SEL>=SLS.CODE.GROUP
      DISP.REC<3,SEL>=SLS.CODE.DESC
      DISP.REC<4,SEL>=W.RATE

8999 

*      IF SEL GE 13 THEN PG.CNT += 1
*     GOSUB 9000
      IF REM(SEL,13) = 0 THEN
         PG.CNT += 1
         GOSUB 9000
      END

      RETURN
*
* Display array
*
9000
*
      CRT @(0,9):@(-3)

      START=(PG.CNT*13)-12
      IF START GT 999 THEN
        START=1
        PG.CNT=1
      END
      STOP=START+12

      FOR I=START TO STOP STEP 1
         SROW=8+REM(I,13)
         IF SROW=8 THEN SROW=21
         CRT @(0,SROW):I "R#3"
      NEXT I

* CRT @(60,22):"PC ":PG.CNT:" ":START:" - ":STOP : ; INPUT QQ

      MAX.LINES = DCOUNT(DISP.REC<1>,CHAR(253))

      IF MAX.LINES = '' OR MAX.LINES = 0 THEN MAX.LINES = 1

      IF STOP GT MAX.LINES THEN STOP = MAX.LINES
      FOR I=START TO STOP STEP 1
         ROW=8+REM(I,13)
         IF ROW=8 THEN ROW=21
         W.ID.SLS.CODE = DISP.REC<1,I>
         W.SLS.CODE.GROUP = DISP.REC<2,I> 
         W.SLS.CODE.DESC = DISP.REC<3,I>
         W.RATE = DISP.REC<4,I> 
         CRT @(0,ROW):I "R#3"
         CRT @(04,ROW):W.ID.SLS.CODE "R#4"
         CRT @(09,ROW):W.SLS.CODE.GROUP "R#5"
         CRT @(15,ROW):W.SLS.CODE.DESC[1,50] "L#50"
         CRT @(74,ROW):OCONV(W.RATE,"MR2") "R#6"
      NEXT I
*QQ      CRT @(0,ROW+1):I "R#3"
      LAST.PG = INT(MAX.LINES/12)+1

      RETURN

*
SETUP.SCREEN1 :
*
CRT @(-1)
CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
*
*SCREEN1 =  @(0,3):"1. Initial Salesman    : "
*SCREEN1 := @(0,4):"2. Servicing Salesman  : "
SCREEN1 =  @(0,3):"   Initial Salesman    : "
SCREEN1 := @(0,4):"   Servicing Salesman  : "
SCREEN1 := @(0,5):STR("-",79)
*SCREEN1 := @(0,6):"3. Commission Salesman : "
SCREEN1 := @(0,6):"   Commission Salesman : "
SCREEN1 := @(0,7):"   -------------------   "
SCREEN1 := @(0,8):"LN#   Code.  Name                         LN#   Code.  Name"
SCREEN1 := @(0,9):"---   -----  -------------------------    ---   -----  ------------------------*"

FOR II = 1 TO 24
   IF INT(II/13) = 0 THEN
      CS.ROW = II+9
      CS.COL = 0
   END ELSE
      CS.ROW = II-3
      CS.COL = 42
   END
   SCREEN1 := @(CS.COL,CS.ROW):II "R#3"
NEXT II
CRT SCREEN1

*
RETURN
*
DISPLAY.DATA1 :
*

DATA1 =  ""
DATA1 := @(25,03):INIT.SLSMAN.NO.NAME
DATA1 := @(25,04):SERVC.SLSMAN.NO.NAME

FOR DS = 1 TO 24
   COMM.SLSMAN.NO = COMM.INDX.REC2<DS>
   IF COMM.SLSMAN.NO NE '' THEN
      IF INT(DS/13) = 0 THEN
         CS.ROW = DS+9
         CS.COL = 0
      END ELSE
         CS.ROW = DS-3
         CS.COL = 42
      END
      COMM.SLSMAN.NO = COMM.INDX.REC2<DS>
      READV COMM.SLSMAN.NAME FROM F.SLSMAN, COMM.SLSMAN.NO, 1 ELSE COMM.SLSMAN.NAME = ''
      COMM.SLSMAN.NO.NAME = COMM.SLSMAN.NO:"  ":COMM.SLSMAN.NAME "L#25"
      DATA1  := @(CS.COL,CS.ROW):DS "R#3" :SPACE(3):COMM.SLSMAN.NO.NAME
   END
NEXT DS
*
CRT DATA1

*CALL ELINE("")
*
RETURN

*
SETUP.SCREEN2 :
*
CRT @(-1)

CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
*
SCREEN2 =  @(0,3):"   Initial Salesman    : "
SCREEN2 := @(0,4):"   Servicing Salesman  : "
SCREEN2 := @(0,5):"   Commission Salesman : "
SCREEN2 := @(0,6):STR("-",79)
SCREEN2 := @(0,7):"   Effective Dates"
SCREEN2 := @(0,8):"   ---------------"
SCREEN2 := @(0 , 9):"LN#   From      To"
SCREEN2 := @(40, 9):"LN#   From      To"
SCREEN2 := @(0 ,10):"---   ----      --"
SCREEN2 := @(40,10):"---   ----      --"

FOR II = 1 TO 22
   IF INT(II/12) = 0 THEN
      CS.ROW = II+10
      CS.COL = 0
   END ELSE
      CS.ROW = II-1
      CS.COL = 40
   END
   SCREEN2 := @(CS.COL,CS.ROW):II "R#3"
NEXT II

CRT SCREEN2
*
RETURN
*
DISPLAY.DATA2 :
*
DATA2 = ''
DATA2 := @(25,03):INIT.SLSMAN.NO.NAME
DATA2 := @(25,04):SERVC.SLSMAN.NO.NAME
DATA2 := @(25,05):COMM.SLSMAN.NO.NAME

FOR DT = 1 TO 22
   W.DT.FROM = SLS.COMM.REC<1,DT>
   W.DT.TO   = SLS.COMM.REC<2,DT>
   IF W.DT.FROM NE '' THEN
      IF INT(DT/12) = 0 THEN
         CS.ROW = DT+10
         CS.COL = 6
      END ELSE
         CS.ROW = DT-1
         CS.COL = 46
      END

      DATA2 := @(CS.COL,CS.ROW) : OCONV(W.DT.FROM,"D2/") : "  "
      DATA2 := OCONV(W.DT.TO,"D2/")
   END
NEXT DT

CRT DATA2

*
RETURN
*
SETUP.SCREEN3 :
*
CRT @(-1)

CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
*
SCREEN2 = @(0,3):"   Initial Salesman    : "
SCREEN2 := @(0,4):"   Servicing Salesman  : "
SCREEN2 :=  @(0,5):"   Commission Salesman : "
SCREEN2 := @(0,6):STR("-",80)

SCREEN2 := @(56,4):"Begin Date :  "
SCREEN2 := @(56,5):"End Date   :  "

SCREEN2 := @(0,7):" LN Code Group Description                                                Rate %" 
SCREEN2 := @(0,8):"--- ---- ----- ---------------------------------------------------------- ------"

FOR SS = 9 TO 21
   SC.LN = SS-8
   CRT @(0,SS) : SC.LN "R#3"
NEXT SS

CRT SCREEN2
*
RETURN
*
DISPLAY.DATA3 :
*

CRT @(25,03):INIT.SLSMAN.NO.NAME
CRT @(25,04):SERVC.SLSMAN.NO.NAME
CRT @(25,05):COMM.SLSMAN.NO.NAME
CRT @(70,04):BEGIN.DT'D2/'
CRT @(70,05):END.DT'D2/'

GOSUB 9000
*
RETURN
*
BUILD.DETAIL.ARRAY :
*
DISP.REC = ''

LOCATE BEGIN.DT IN SLS.COMM.REC<1> BY "DR" SETTING BDT.POS THEN
   SLS.CODES = SLS.COMM.REC<3,BDT.POS>
   N.SC = DCOUNT(SLS.CODES,@SVM)
*
   FOR II = 1 TO N.SC
      ID.SLS.CODE = SLS.CODES<1,1,II>
      FND.CODE = 0
      READ SLS.CODE.REC FROM F.SALES.CODE, ID.SLS.CODE THEN
         W.SLS.CODE = ID.SLS.CODE
         W.SLS.CODE.DESC = SLS.CODE.REC<10>
         W.SLS.GROUP     = SLS.CODE.REC<8>
         FND.CODE = 1
      END

      GR.DESC = ''
      LOCATE ID.SLS.CODE IN GROUPS<1> SETTING GPOS THEN
         W.SLS.CODE = ID.SLS.CODE
         W.SLS.CODE.DESC = GROUPS<2,GPOS>
         W.SLS.GROUP     = W.SLS.CODE
         FND.CODE = 1
      END
      IF FND.CODE THEN
         DISP.REC<1,-1> = W.SLS.CODE
         DISP.REC<2,-1> = W.SLS.GROUP
         DISP.REC<3,-1> = W.SLS.CODE.DESC
         DISP.REC<4,-1> = SLS.COMM.REC<4,BDT.POS,II>
      END
   NEXT II
END

*
RETURN
*
INIT.VARS :
*
MASK.CHAR = ''
DISP.REC = ''
MODE.CNT = 0
KEY.SUFFIX = ''

SLS.COMM.REC = ''

PG.CNT = 1


COMM.SLSMAN.ID  = ""
INIT.SLSMAN.ID  = ""
SERVC.SLSMAN.ID = ""

COMM.SLSMAN.NO.NAME   = ""
INIT.SLSMAN.NO.NAME   = ""
SERVC.SLSMAN.NO.NAME  = ""

BEGIN.DT = ""
END.DT   = ""

LAST.BEGIN.DT = ""
LAST.END.DT   = ""

NEW.ITEM = 0

COMM.INDX.REC2 = ""

DATE.ARRAY  = ""

RETURN

POP.UP.LIST.OF.SALESMEN:***

      SALESMAN.CODE=''
      IF SALESMAN.LIST='' THEN
         EXECUTE 'SSELECT AR.SLSMAN.1000.1 BY NAME' CAPTURING OUTPUT
         NUM.SALESMAN=@SELECTED
*        IF NUM.SALESMAN=0 THEN
         IF NUM.SALESMAN < 1 THEN
            CALL ELINE('No salesmen on file.')
            SELECTION='NO DATA'
            RETURN
         END
         DONE=0
         LOOP
            READNEXT SALESMAN.ID ELSE DONE=1
         UNTIL DONE=1
            READ SLSM.REC FROM F.SLSMAN,SALESMAN.ID THEN
               SALESMAN.LIST<-1>=SPACE(11):SALESMAN.ID'R%5':SPACE(10):SLSM.REC<1>'L#50'
            END
         REPEAT
         FOR X=1 TO NUM.SALESMAN
            SALESMAN.LIST<X>:=SPACE(79-LEN(SALESMAN.LIST<X>))
         NEXT X
         HEADING=' Salesman Number          Salesman Name'
         HEADING:=SPACE(79-LEN(HEADING))
      END
      SELECTION=''
      CRT @(0,23):'Select Principle Salesman for this account.':@(-4):
      CALL POP.UP.LIST(SALESMAN.LIST,HEADING,7,16,SELECTION)
      IF SELECTION#'E' THEN              ; * Exited POP.UP.LIST with no choice
         SALESMAN.CODE=TRIM(SALESMAN.LIST<SELECTION>[12,5])
      END
      RETURN
*
CHECK.DATE.RANGE :
*
DT.ERR = ''
NEW.BEGIN.DT = BEGIN.DT
NEW.END.DT   = END.DT

IF NEW.END.DT NE "" THEN
   IF NEW.END.DT LT NEW.BEGIN.DT THEN
      CALL ELINE("To date may not be before From date")
      DT.ERR = 1
   END
END

TDTS = DCOUNT(SLS.COMM.REC<1>,@VM)

IF NEW.BEGIN.DT GT LAST.BEGIN.DT AND NEW.END.DT GT LAST.END.DT THEN
   IF NEW.BEGIN.DT GT LAST.END.DT THEN
      NULL
   END ELSE
      CALL ELINE("New FROM date must be after latest effective TO date")
      DT.ERR = 1
   END
END ELSE
   IF NEW.BEGIN.DT LE LAST.BEGIN.DT THEN
      CALL ELINE("New FROM date is less than OR equal to the oldest effective FROM date")
      DT.ERR = 1
   END
   IF NEW.END.DT NE "" THEN
      IF NEW.END.DT LE LAST.END.DT THEN
         CALL ELINE("New TO date is less than OR equal to the oldest effective TO date")
         DT.ERR = 1
      END
   END
END
*
RETURN
*
EXIT.HERE :
*
STOP
