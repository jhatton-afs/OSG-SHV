      SUBROUTINE FB.2.1.AIR.FREIGHT(VIN,VOUT,AIR.CODES,SERVICE.LEV,QI)
*
      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'FB.2.1.AIR.FREIGHT' ; UPL.VOUT = ''       ; * NPR_UPL 04/23/2010
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)       ; * NPR_UPL 04/23/2010
* SUBROUTINE TO ENTER AIR FREIGHT INFORMATION
*
* FREIGHT BILLING PACKAGE
*
* AUTHOR: TAMI SEAGO
* DATE: APRIL 15, 1999
*
* THIS PROGRAM IS A PROPRIETARY PRODUCT OF AUTOMATED FREIGHT SYSTEMS
* AND MAY NOT BE USED, COPIED OR MODIFIED WITHOUT THE EXPRESS
* WRITTEN CONSENT OF SAME.
*
********************************************************************
* 081005 - JMK01 - RECALCULATE FRT WHEN ADDITIONAL LINES ARE ENTERED
* 100308 - JMK04 - C082257 - Add description to the FB Details for the MISC code
* 020112 - SWB01 - Ticket 1619 - Preserve all ready entered data when
*                                IN Change Mode.
* 040813 - SWB02 - SysAid#5528 - Freight Bill details become duplicated or inflated
*
*
      $INCLUDE PROG.ADMIN INC_OPTIONS
      $INCLUDE FILE.DEFS INC_CLIENTS
*
* Initialize variables
*
      PROMPT''
      SERVICE.LEVEL = VIN<1>
      AIR.PIECES = VIN<2>
      AIR.CHRG.CODES = VIN<3>
      AIR.CHRG.AMTS = VIN<4>
      DIM.WEIGHT = VIN<5>
      ACTUAL.WGT = VIN<6>
      CARRIER.ID = VIN<7>
      CARRIER.NAME = VIN<8>
      ORIG = VIN<9>
      DEST = VIN<10>
      ACTUAL.CHG = VIN<11>
      IF AIR.CHRG.CODES = '' THEN        ; * JMK01
         AIR.CHRG.CODES = 'BASE'         ; * JMK01
         AIR.CHRG.AMTS = ACTUAL.CHG      ; * JMK01
      END                                ; * JMK01
      CC=VIN<12>
      OPT = VIN<13>
      USER=VIN<14>
      MISC.REASON = VIN<15>              ; * JMK04
      PROG.NAME='FB.2.1.AIR.FREIGHT'


*
* Open files
*

      BEGIN CASE
         CASE OPT='I'
            MODE='EDIT'
            INQUIRE=0
         CASE OPT='E'
            MODE='INPUT'
            INQUIRE=0
         CASE OPT='V'
            RETURN
      END CASE


*
* Start input
*
      GOSUB DISPLAY.SCREEN
      GOSUB DISPLAY.DATA

ENTER.SERVICE.LEVEL: ***
      HELP=""
      NUM.SERVICE = DCOUNT(SERVICE.LEV<1>,@VM)
      FOR X = 1 TO NUM.SERVICE
         HELP = HELP:"[":X:"]":SERVICE.LEV<1,X>:' '
      NEXT X
      HELP = HELP[1,79]
      IF SERVICE.LEVEL #'' THEN MASK = SERVICE.LEVEL ELSE MASK = ''
      CRT @(0,22):@(-4):"[EX]it [X]=Back [L]ist Codes":
      CALL GEN.IN(16,2,MASK,'',Q,0,4,'','',1,16,2,0,QI,HELP,0,23)
      IF QI = '' THEN QI = SERVICE.LEVEL
      BEGIN CASE
         CASE QI=''
            IF MODE # 'EDIT' THEN
               QI = SERVICE.LEVEL
            END ELSE
               CALL ELINE('You Must Enter a Service Level')
            END
         CASE QI='X'
            IF SERVICE.LEVEL # '' THEN
               GO EXIT.SUBROUTINE
            END
            RETURN
         CASE QI='EX'
            STOP
         CASE QI='L'
            VIN<1> = CARRIER.ID
            VIN<2> = CARRIER.NAME
            CALL LIST.SERVICE.LEVELS(VIN,CODE.RETURNED,SERVICE.LEV)
            GOSUB DISPLAY.SCREEN
            GOSUB DISPLAY.DATA
            Q=CODE.RETURNED<1>
         CASE 1
            IF NUM(QI) THEN
               NUMB=QI
               QI=SERVICE.LEV<1,QI>
               IF QI='' THEN
                  CALL ELINE("NO CODE ASSOCIATED WITH NUMBER ":NUMB)
                  GO ENTER.SERVICE.LEVEL
               END
            END
            Q=QI
      END CASE
      LOCATE Q IN SERVICE.LEV<1> SETTING POS THEN
         SERVICE.LEVEL = Q
         SERVICE.DESC=SERVICE.LEV<2,POS>
      END ELSE
         CALL ELINE('This is not a valid service level')
         GO ENTER.SERVICE.LEVEL
      END
      CRT @(16,2):SERVICE.LEVEL'L#4':' ':SERVICE.DESC'L#25'
      CRT @(0,22):@(-4)

*
* Enter bill of air pieces
*

ENTER.PIECES: ***

      HELP="Enter Number of Pieces 'X'= Back to Service Level 'EX'= Exit"
      IF AIR.PIECES # '' THEN MASK = AIR.PIECES'R#6' ELSE MASK = '     '
      CALL GEN.IN(16,3,MASK,'',Q,0,6,'','',1,16,3,0,QI,HELP,0,23)
      IF QI = '' THEN QI = AIR.PIECES
      BEGIN CASE
         CASE QI=''
            IF AIR.PIECES #'' THEN
               IF MODE = 'EDIT' THEN
                  QI = AIR.PIECES
               END
            END ELSE
               CALL ELINE('You Must Enter the Number of Pieces')
               GO ENTER.PIECES
            END
         CASE QI='X'
            CRT @(16,3):SPACE(30)
            GO ENTER.SERVICE.LEVEL
         CASE QI='EX'
            STOP
         CASE NUM(QI)
            IF INT(QI)#QI OR QI LE 0 THEN
               CALL ELINE('Must be a positive whole number')
               GO ENTER.PIECES
            END
            Q = QI
         CASE 1
            CALL ELINE('Must be a number')
            GO ENTER.PIECES
      END CASE
      AIR.PIECES = QI
      CRT @(16,3): AIR.PIECES'R#6'
      IF AIR.PIECES > 5000 THEN CALL ELINE('WARNING! Air Pieces is over 5,000! Check it!')

      LN = 0
ENTER.CHRG.DETAIL: ***
      IF MODE='INPUT' THEN
         LN = LN+1
         QI=LN
         IF LN GT 10 THEN
            MODE='EDIT'
            GO ENTER.CHRG.DETAIL
         END
      END ELSE
         GOSUB CALCULATE.TOTAL
         HELP="Enter Line Num. ''=End. 'X'=Back. 'EX'=Exit.":@(-4)
         LINE = "Enter line number. ## ":@(-4)
         CALL GEN.IN(0,22,LINE,'',Q,0,3,'','',0,-5,22,0,QI,HELP,0,23)
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      END

BEGIN.INPUT: ***
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            IF MODE = 'EDIT' THEN
               GO EXIT.SUBROUTINE
            END ELSE
               GO ENTER.CHRG.DETAIL
            END
         CASE QI='X'
            GO ENTER.PIECES
         CASE QI='EX'
            STOP
         CASE NUM(QI)
            IF INQUIRE THEN
               CALL ELINE('Can not access detail in inquiry!')
               CC+=1 ; GOSUB PRINT.CC
            END ELSE
               IF QI > 1 THEN
                  IF AIR.CHRG.CODES<1,QI-1>='' THEN
                     CALL ELINE("Cannot Skip a line.  You must select the next blank line")
                     GO ENTER.CHRG.DETAIL
                  END
               END
            END
            SEL = QI
            GOSUB ENTER.AIR.CODE
      END CASE
      GO ENTER.CHRG.DETAIL

*
* End of program
*

*-----------------------------------------------------------------------
*
* INTERNAL SUBROUTINES
*
*-----------------------------------------------------------------------
*

*
* Enter air freight code
*
ENTER.AIR.CODE: ***
      IF SEL LT 1 OR SEL GT 10 THEN
         CALL ELINE('Invalid entry.')
         RETURN
      END
      LINE = SEL+6

*
8010: HELP="[ ]=Done [L]ist Codes [D]el [E]dit [X]=Back [EX]it"
      IF SEL = 1 THEN
         QI = 'BASE'
      END ELSE
         IF AIR.CHRG.CODES<1,SEL>='' THEN
            MASK = ''
         END ELSE
            MASK = AIR.CHRG.CODES<1,SEL>'L#4'
         END
         CALL GEN.IN(3,LINE,MASK,'',Q,0,4,'','',2,3,LINE,0,QI,HELP,0,23)
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      END
      CRT @(0,22):@(-4):
      QI=OCONV(QI,'MCU')
      IF QI='+' THEN QI='BASE'
      IF QI='*' THEN QI='BYD'
      BEGIN CASE
         CASE SEL = 1 AND QI = 'X'
            CRT @(3,LINE):AIR.CHRG.CODES<1,SEL>'L#4':
            GO ENTER.PIECES
         CASE QI=''
            Q = AIR.CHRG.CODES<1,SEL>
            IF Q = '' THEN
               IF MODE='INPUT' THEN MODE='EDIT'
               RETURN
            END
         CASE QI='EX'
            STOP
         CASE QI='L'
            CALL LIST.AIR.CODES('',CODE.RETURNED)
            GOSUB DISPLAY.SCREEN
            GOSUB DISPLAY.DATA
            Q=CODE.RETURNED<1>
         CASE QI='X' OR QI = ' '
            CRT @(3,LINE):AIR.CHRG.CODES<1,SEL>'L#4':
            MODE='EDIT'
            RETURN
         CASE QI='D'
            DEL AIR.CHRG.CODES<1,SEL>
            DEL AIR.CHRG.AMTS<1,SEL>
            DEL MISC.REASON<1,SEL>       ; * JMK04
            IF MODE='INPUT' THEN MODE='EDIT'
            GOSUB DISPLAY.SCREEN
            GOSUB DISPLAY.DATA
            RETURN
         CASE QI='E'
            CRT @(3,LINE):AIR.CHRG.CODES<1,SEL>:@(-4)
            MODE='EDIT'
            RETURN
         CASE 1
            IF NUM(QI) THEN
               NUMB=QI
               QI=AIR.CODES<1,QI>
               IF QI='' THEN
                  CALL ELINE("NO CODE ASSOCIATED WITH NUMBER ":NUMB)
                  GO 8010
               END
            END ELSE IF QI='BYD' OR QI='BASE' THEN           ; * SWB02
               IF AIR.CHRG.AMTS<1,SEL> <= 0 THEN   ; * SWB02
                  CALL ELINE(QI:' is <= 0. Reduce an Accessorial amount.')       ; * SWB02
                  RETURN                 ; * SWB02
               END                       ; * SWB02
            END                          ; * SWB02
            Q=QI
      END CASE

      LOCATE Q IN AIR.CODES<1> SETTING POS THEN
         DESC=AIR.CODES<2,POS>
         AIR.CHRG.CODES<1,SEL>=Q
         CRT @(3,LINE):Q'L#4'
         CRT @(8,LINE):DESC'L#25'
      END ELSE
         CALL ELINE('Code not on file!  You must enter a valid line item code!')
         GO 8010
      END

ENTER.CHARGE: ***
*
* Enter Charge
*
      LINE.BALANCE.MSG = ''              ; * SWB02
      LINE.BALANCE.AMT = ''              ; * SWB02
      IF OCONV(AIR.CHRG.AMTS<1,SEL>, 'MD2') >= BALANCE.AMT THEN        ; * SWB02
         LINE.BALANCE.AMT = OCONV(AIR.CHRG.AMTS<1,SEL>, 'MD2') - BALANCE.AMT     ; * SWB02
         LINE.BALANCE.MSG = '- Enter ':FMT(LINE.BALANCE.AMT, 'MR2'):' or less to balance.'           ; * SWB02
      END                                ; * SWB02
*      HELP="Enter the Charge ''=ACCEPT 'X'=Back 'EX'=Exit"    ; * SWB02
      HELP="Enter the Charge ''=ACCEPT 'X'=Back 'EX'=Exit ":LINE.BALANCE.MSG     ; * SWB02
      IF SEL = 1 AND AIR.CHRG.AMTS<1,1> = 0 THEN MASK = '0.00''R#8' ELSE MASK=AIR.CHRG.AMTS<1,SEL>'R26Z#8'
      CALL GEN.IN(35,LINE,MASK,'AMT2',Q,0,8,'','',2,-8,LINE,0,QI,HELP,0,23)
      CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      QI=TRIM(OCONV(QI,'MCU'))
      BEGIN CASE
         CASE QI=''
            Q=AIR.CHRG.AMTS<1,SEL>
            IF Q='' THEN
               IF SEL # 1 THEN
                  CALL ELINE('Entry is required')
                  GO ENTER.CHARGE
               END ELSE
                  Q = 0
               END
            END ELSE IF Q < 0 THEN       ; * SWB02
               CALL ELINE('The Amount must be a number equal to or greater than 0.')       ; * SWB02
               GO ENTER.CHARGE           ; * SWB02
            END
         CASE QI='X'
            PRINT @(35,LINE):AIR.CHRG.AMTS<1,SEL>'R26#8'
            IF SEL = 1 THEN GO ENTER.PIECES
            GO 8010
         CASE QI='EX'
            STOP
         CASE NUM(QI)
            IF QI LE 0 THEN
               IF SEL # 1 THEN
                  CALL ELINE('Must be a number greater than 0')
                  GO ENTER.CHARGE
               END ELSE
                  IF QI LT 0 THEN
                     IF AIR.CHRG.AMTS<1, SEL> < ABS(Q) THEN  ; * SWB02
                        CALL ELINE('You cannot make the FRT charge less than 0.')          ; * SWB02
                        GO ENTER.CHARGE  ; * SWB02
                     END                 ; * SWB02
                     LOCATE 'FUEL' IN AIR.CHRG.CODES<1> SETTING CHRG.POS THEN    ; * JMK01
                        CALL ELINE('Must be 0 or greater')
                        GO ENTER.CHARGE
                     END ELSE            ; * JMK01
                        AIR.CHRG.CODES<1,-1>='FUEL'          ; * JMK01
                        AIR.CHRG.AMTS<1,-1>=-Q     ; * JMK01
                        AIR.CHRG.AMTS<1,1>=AIR.CHRG.AMTS<1,1>+Q        ; * JMK01
                        GOSUB DISPLAY.DATA         ; * JMK01
                        GO ENTER.CHARGE  ; * JMK01
                     END                 ; * JMK01
                  END
               END
            END
         CASE 1
            CALL ELINE('You must enter a valid number!')
            GO ENTER.CHARGE
      END CASE
      AIR.CHRG.AMTS<1,SEL>=Q
      PRINT @(35,LINE):Q'R26#8'
*
8020: *
*
      IF AIR.CHRG.CODES<1,SEL>='MISC' THEN         ; * JMK04
         HELP="Enter reason for MISC code. 'X'=Back. 'EX'=Exit.":@(-4)           ; * JMK04
         MASK=MISC.REASON<1,SEL>         ; * JMK04
         CALL GEN.IN(48,LINE,MASK,'',Q,0,30,'','',0,48,LINE,0,QI,HELP,0,23)      ; * JMK04
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC  ; * JMK04
         BEGIN CASE                      ; * JMK04
            CASE QI='EX'                 ; * JMK04
               STOP                      ; * JMK04
            CASE QI = 'X'                ; * JMK04
               CRT @(48,LINE):MISC.REASON<1,SEL>'L#30':      ; * JMK04
               GO ENTER.CHARGE           ; * JMK04
*SWB01            CASE QI='' OR QI=' '         ; * JMK04
            CASE QI=''                   ; * SWB01
               QI=MASK                   ; * SWB01
*SWB01               CRT @(48,LINE):MISC.REASON<1,SEL>'L#30':      ; * SWB01
            CASE QI=' '                  ; * SWB01
               CALL ELINE('You must enter a reason for the MISC code.')          ; * JMK04
               GO 8020                   ; * JMK04
            CASE 1                       ; * JMK04
               MISC.REASON<1,SEL>=Q      ; * JMK04
               CRT @(48,LINE):MISC.REASON<1,SEL>'L#30'       ; * JMK04
         END CASE                        ; * JMK04
      END                                ; * JMK04

      GOSUB CALCULATE.TOTAL
      GOSUB DISPLAY.DATA                 ; * JMK01
      RETURN

DISPLAY.SCREEN: ***
*
* Display screen headings
*
      CRT @(0,0):@(-3)
      CRT @(0,0):"AIR FREIGHT INFORMATION"
      CRT @(0,2):"Service Level : "
      CRT @(0,3):"Air Pieces    : "
      CRT @(0,5):"LN Code Description                 Charges"
      CRT @(0,6):"-- ---- -------------------------- ---------"
      FOR X = 1 TO 10
         CRT @(0,X+6):X'R%2'
      NEXT X
      CRT @(51,0):"Additional Information"
      CRT @(47,1):"-------------------------------"
      CRT @(47,2):"Orig     :  ":ORIG'R24'
      CRT @(47,3):"Dest     :  ":DEST'R24'
      CRT @(47,4):"Ship Wgt : ":ACTUAL.WGT'R#6'
      CRT @(47,5):"Dim Wgt  : ":DIM.WEIGHT'R#6'
      CRT @(47,6):"Actu Chg : $":ACTUAL.CHG'R26#8'
      CRT @(35,17):"========="
      CRT @(0,18):"TOTAL"
      RETURN

DISPLAY.DATA: ***
*
* Display Data
*
      GOSUB CALCULATE.TOTAL
      LOCATE SERVICE.LEVEL IN SERVICE.LEV<1> SETTING POS THEN
         SERVICE.DESC=SERVICE.LEV<2,POS>
      END ELSE
         SERVICE.DESC = ''
      END
      CRT @(16,2):SERVICE.LEVEL'L#4':' ':SERVICE.DESC'L#25'
      CRT @(16,3): AIR.PIECES'R#6'
      FOR X=1 TO 10 UNTIL AIR.CHRG.CODES<1,X>=''
         D.LINE=X+6
         IF AIR.CHRG.CODES<1,X>='' THEN
            PRINT @(0,D.LINE):X'R%2'
         END ELSE
            PRINT @(0,D.LINE):X'R%2':    ; * Selection
            PRINT @(3,D.LINE):AIR.CHRG.CODES<1,X>'L#4':      ; * Code
            LOCATE AIR.CHRG.CODES<1,X> IN AIR.CODES<1> SETTING POS THEN
               DESC=AIR.CODES<2,POS>
            END ELSE
               DESC='** Not On File **'
            END
            PRINT @(8,D.LINE):DESC'L#20':          ; * Code Description
            PRINT @(35,D.LINE):AIR.CHRG.AMTS<1,X>'R26#8':    ; * Charges
            PRINT @(48,D.LINE):MISC.REASON<1,X>'L#30':       ; * SWB01
         END
      NEXT X


CALCULATE.TOTAL: ***
*     TOTAL.CHARGES=0                    ; * JMK01
*     FOR X=1 TO 10 UNTIL AIR.CHRG.CODES<1,X>=''   ; * JMK01
*        CHARGES = AIR.CHRG.AMTS<1,X>    ; * JMK01
*        TOTAL.CHARGES+= CHARGES         ; * JMK01
*     NEXT X                             ; * JMK01
      FRT.CHG=0                          ; * JMK01
      MIS.CHG=0                          ; * JMK01
      NVAL=DCOUNT(AIR.CHRG.CODES<1>,@VM)           ; * JMK01
      FOR VAL=1 TO NVAL                  ; * JMK01
         CHRG = AIR.CHRG.AMTS<1,VAL>     ; * JMK01
         IF NOT(NUM(CHRG)) THEN CHRG=0   ; * JMK01
         BEGIN CASE                      ; * JMK01
            CASE AIR.CHRG.CODES<1,VAL>='BASE'      ; * JMK01
               FRT.CHG+=CHRG             ; * JMK01
            CASE 1                       ; * JMK01
               MIS.CHG+=CHRG             ; * JMK01
         END CASE                        ; * JMK01
      NEXT VAL                           ; * JMK01
      ADJ.FRT.CHG=ACTUAL.CHG-MIS.CHG     ; * JMK01
      LOCATE('BASE',AIR.CHRG.CODES,1;FPOS) THEN    ; * JMK01
         AIR.CHRG.AMTS<1,FPOS>=ADJ.FRT.CHG
      END                                ; * JMK01
      TOTAL.CHARGES=SUM(AIR.CHRG.AMTS<1>)          ; * JMK01
*     TOTAL.CHARGES=0                    ; * JMK01
*     FOR X=1 TO 10 UNTIL AIR.CHRG.CODES<1,X>=''   ; * JMK01
*        CHARGES = AIR.CHRG.AMTS<1,X>    ; * JMK01
*        IF NOT(NUM(CHARGES)) THEN CHARGES=''      ; * JMK01
*        TOTAL.CHARGES+= CHARGES         ; * JMK01
*     NEXT X                             ; * JMK01
      BALANCE.MSG = ''                   ; * SWB02
      BALANCE.AMT = 0                    ; * SWB02
      IF AIR.CHRG.AMTS<1,1> + 0 < 0 THEN           ; * SWB02
         BALANCE.AMT = FMT(OCONV(AIR.CHRG.AMTS<1,1>, 'MD2') * -1, 'MR2')         ; * SWB02
         BALANCE.MSG = 'Need to reduce non-FRT by ':BALANCE.AMT        ; * SWB02
      END                                ; * SWB02
*     CRT @(35,18):TOTAL.CHARGES'R26#8'        ; * Total Charges    ; * SWB02
      CRT @(35,18):TOTAL.CHARGES'R26#8':SPACE(2):BALANCE.MSG:@(-4)     ; * Total Charges     ; * SWB02
      RETURN

PRINT.CC: ***
      IF USER#'OWEN' THEN RETURN
      PRINT @(0,0):@(-4):'Characters: ':CC'R#4':
      RETURN

EXIT.SUBROUTINE: * Exit & Return to Calling Program
      IF TOTAL.CHARGES # ACTUAL.CHG AND QI #'EX' THEN
         CALL ELINE('The total on this page must match the Actual Charges!')
         MODE = 'EDIT'
         GOSUB DISPLAY.SCREEN
         GOSUB DISPLAY.DATA
         BEGIN CASE
            CASE SERVICE.LEVEL = ''
               GO ENTER.SERVICE.LEVEL
            CASE AIR.PIECES = ''
               GO ENTER.PIECES
            CASE 1
               GO ENTER.CHRG.DETAIL
         END CASE
      END
      CODE.1 = AIR.CHRG.CODES<1, 1>      ; * SWB02
      IF CODE.1 = 'BASE' OR CODE.1 = 'BYD' THEN    ; * SWB02
         IF AIR.CHRG.AMTS<1, 1> <= 0 THEN          ; * SWB02
            IF TOTAL.CHARGES = 0 AND AIR.CHRG.AMTS<1, 1> <= 0 THEN               ; * SWB02
               CALL ELINE('The charge for ':CODE.1:' cannot be less than 0!')    ; * SWB02
               MODE = 'EDIT'                ; * SWB02
               GOSUB DISPLAY.SCREEN         ; * SWB02
               GOSUB DISPLAY.DATA           ; * SWB02
               QI = CC                      ; * SWB02
               GO ENTER.CHRG.DETAIL         ; * SWB02
            END ELSE                        ; * SWB02
               IF TOTAL.CHARGES > 0 AND AIR.CHRG.AMTS<1, 1> < 0 THEN               ; * SWB02
                  CALL ELINE('The charge for ':CODE.1:' must be equal to or greater than 0!')   ; * SWB02
                  MODE = 'EDIT'             ; * SWB02
                  GOSUB DISPLAY.SCREEN      ; * SWB02
                  GOSUB DISPLAY.DATA        ; * SWB02
                  QI = CC                   ; * SWB02
                  GO ENTER.CHRG.DETAIL      ; * SWB02
               END                          ; * SWB02
            END                             ; * SWB02
         END                                ; * SWB02
      END                                   ; * SWB02
      VOUT=''
      VOUT<1>= SERVICE.LEVEL
      VOUT<2> = AIR.PIECES
      VOUT<3> = AIR.CHRG.CODES
      VOUT<4> = AIR.CHRG.AMTS
      VOUT<5> = CC
      VOUT<6> = MISC.REASON              ; * JMK04
      RETURN
