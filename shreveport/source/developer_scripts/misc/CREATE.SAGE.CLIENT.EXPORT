***********************************************************************
* Program name : CREATE.SAGE.CLIENT.EXPORT
* Author       : MIKE KERBOW
* Date written : 11-11-2014
* Library      : FBBP
* COPYRIGHT (C) 2023 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED.
*
* TO BUILD AN EXPORT FILE FOR  CLIENTS TO IMPORT INTO SAGE
*
* Last updated by afs (AFSLOGISTICS\gbino) at 14:09:03 on 03/21/2023.
*
* Start modification history
* 112614 - JMK01 - Adjust Division format for Airgas South (01267)
* 073115 - SWB01 - SysAid# 19099 - If Corporate Name is blank in Clients file
*                  Use field 1 of AR.CUST.1000.1 like is done in
*                  UPD.QV.CLIENT.INFO
* 093015 - SWB02 - SysAid# 20183 - Shift Pre Date and Inital Date columns
* 040423 - GRB01 - ACCU-2061 Do not send established by sales info
* 072623 - GRB02 - ACCU-2354 Add prepay parcel
* End modification history
*
************************************************************************
    ***  INPUT PROGRAM.MODE
    PROGRAM.MODE = 'AUTO'
      CALL GET.USER.NEW(USER,CH.NUM)
      USER=OCONV(USER,'MCL')
*
      DOW=""
      DOW<1,1>="Sun"
      DOW<1,2>="Mon"
      DOW<1,3>="Tue"
      DOW<1,4>="Wed"
      DOW<1,5>="Thu"
      DOW<1,6>="Fri"
      DOW<1,7>="Sat"
      TODAY=DATE()
      TAB=CHAR(9)
      PROMPT''
      ERRMSG=''
      PROG.NAME='Create Sage Client Export'
      PROG.DESC="Build File of Clients Information for Sage Import"
      PACK.NAME="Freight Billing"
      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'CREATE.SAGE.CLIENT.EXPORT' ; UPL.VOUT = ''
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)
DEBUG
      YN.ANSWER = ''
      YN.MSG=''
      QUOTE.COMMAS = 1
      CLIENT.TYPE=''
      PIPE='|'
      CHGS=0

      BILLDATA.REC = ''
      OPEN '','VOC' TO F.VOC ELSE
         GOSUB CALL.NET.ADMIN
         CALL ELINE('UNABLE TO OPEN VOC FILE')
         STOP
      END
      OPEN 'CLIENTS' TO F.CLIENTS ELSE 
       CALL OPEN.ABORT("CLIENTS",PROG.NAME)
      END	

      OPEN '','ZIPS.CODES' TO F.ZIPS ELSE
         CALL OPEN.ABORT("ZIPS",PROG.NAME)
      END
      OPEN '','SHV.CLIENT.NDX' TO F.SHV.NDX ELSE
         CALL OPEN.ABORT("SHV.CLIENT.NDX",PROG.NAME)
      END
      OPEN '','AR.SLSMAN.1000.1' TO F.SLSMAN ELSE  ; * JMK1
         CALL OPEN.ABORT('AR.SLSMAN.1000.1',PROG.NAME)       ; * JMK1
      END                                ; * JMK1
      OPEN '','AR.CUST.1000.1' TO F.CUST ELSE      ; * SWB01
         CALL OPEN.ABORT('AR.CUST.1000.1',PROG.NAME)         ; * SWB01
      END                                ; * SWB01
      OPEN '','PPP.CLIENT' TO F.PPP ELSE
         CALL OPEN.ABORT('PPP.CLIENT',PROG.NAME)
      END

      READ BILLDATA.REC FROM F.VOC,"BILLDATA" ELSE
         GOSUB CALL.NET.ADMIN
         CALL ELINE('UNABLE TO OPEN "VOC BILLDATA"')
         STOP
      END

      BILLDATA.REC<2>:='\':USER
      WRITE BILLDATA.REC ON F.VOC,"BILLDATA.":USER ELSE
         GOSUB CALL.NET.ADMIN
         CALL ELINE("YOUR USER NAME '":USER:"' IS NOT IN THE BILLDATA FOLDER - PLEASE SEE JIM/OWEN")
         STOP
      END

      OPEN '','BILLDATA.':USER TO BILLDATA ELSE
         GOSUB CALL.NET.ADMIN
         CALL ELINE('UNABLE TO OPEN "BILLDATA."':USER)
         STOP
      END
      OPEN '','&SAVEDLISTS&' TO F.SL ELSE
         CALL OPEN.ABORT("&SAVEDLISTS&",PROG.NAME)
      END
      OPEN '','SAGE.EXPORT.CLIENT' TO F.EXPORT ELSE
         CALL OPEN.ABORT('SAGE.EXPORT.CLIENT',PROG.NAME)
      END
      RECORD.NAME=''                     ; * Dest record name for output file...

************************************************************
* Enter CLIENT number.
************************************************************
      CLIENT.ID='ALL'                    ; * Init default entry...
      ACTIVE.INFO = 'ALL'
      DIVISIONS = 'Y'
      REGIONS='Y'
      IF PROGRAM.MODE='AUTO' THEN
         EXTENSION='.TXT'
         LIN.MODE='HDR'
         QUOTE.COMMAS = 0
         READ CK.IDS FROM F.SL,'NEW.SAGE.CLIENT' ELSE CK.IDS=''
         IF CK.IDS='' THEN RETURN
         SEQ.CODE=1
TRY.NEXT.SEQ:***
         NEW.LIST.ID='CLIENT.':DATE()'D2-':'.':SEQ.CODE'R%3'
         READ DUMMY FROM F.SL,NEW.LIST.ID THEN
            SEQ.CODE=SEQ.CODE+1
            RELEASE F.SL,NEW.LIST.ID
            GOTO TRY.NEXT.SEQ
         END ELSE
            WRITE CK.IDS ON F.SL,NEW.LIST.ID
            WRITE '' ON F.SL,'NEW.SAGE.CLIENT'
            EXTENSION='-':DATE()'D2-':'-':SEQ.CODE'R%3':'.TXT'
            CLIENT.SL=NEW.LIST.ID
            GOTO EXPORT.FILE
         END
      END

ENTER.CLIENT:***
      CALL AFS.SCR.HEAD(CO.ID, FILE.ID, '', PROG.NAME, PROG.DESC, PACK.NAME, CO.NAME, TIME.DATE, 1)
***********************************************************
ENTER.CLIENT.1:
***********************************************************
      HELP="Enter CLIENT number or name for search, [TS]Traffic Survey, [EX]it."
      IF CLIENT.ID='' THEN
         MASK='#####'
      END ELSE
         MASK=CLIENT.ID
      END

      CALL GEN.IN(0,4,'Enter CLIENT number :':MASK,'',Q,0,25,'','',2,-LEN(MASK),4,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=CLIENT.ID ; Q=CLIENT.ID
      CLIENT.SL=''

      BEGIN CASE
         CASE QI='' OR QI='ALL'
            Q='ALL'
         CASE QI='TS'
            Q='TS'
            CLIENT.TYPE='TS'
            CHGS=0
            DIVISIONS='N'
         CASE QI='AFS'
            Q='AFS'
            CHGS=0
            DIVISIONS='N'
         CASE QI='AFP'
            Q='AFP'
            CHGS=0
            DIVISIONS='N'
         CASE QI='STC'
            Q='STC'
            CHGS=0
            DIVISIONS='N'
         CASE QI='UNI'
            Q='UNI'
            CHGS=0
            DIVISIONS='N'
         CASE QI='UFM'
            Q='UFM'
            CHGS=0
            DIVISIONS='N'
         CASE QI='LGI'
            Q='LGI'
            CHGS=0
            DIVISIONS='N'
         CASE QI='EX' OR QI='X'
            STOP
         CASE QI[1,1]='('
            Q='ALL'
            CLIENT.SL=QI[2,9999]
            READ SL.TEST FROM F.SL,CLIENT.SL ELSE
               CALL ELINE(CLIENT.SL:' is not a compiled list of clients')
               GOTO ENTER.CLIENT.1
            END
         CASE NOT(QI MATCHES "0N")
            CALL SOUNDEX.DISPLAY(QI,'CLIENTS','SDX.CLIENTS,NAME',2,ITEM.LIST)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            BEGIN CASE
               CASE ITEM.LIST=''
                  GOTO ENTER.CLIENT
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                  GOTO ENTER.CLIENT
               CASE ITEM.LIST NE ''
                  IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
                  GOTO ENTER.CLIENT
            END CASE
         CASE NUM(QI)
            Q=QI'R%5'
         CASE 1
            GOTO ENTER.CLIENT
      END CASE

      CLIENT.ID=Q
      DF.ARRAY=''
      CRT @(0,4):'Enter CLIENT Number :':CLIENT.ID:@(-4):
      IF CLIENT.ID='ALL' THEN
         ACTIVE.INFO='ALL'
      END
***********************************************************
ENTER.ACTIVE:***
***********************************************************
      HELP="Do you want <A>ctive, <I>nactive or All. ENTER for all. X=Exit. EX=Exit."
      IF ACTIVE.INFO='' THEN
         MASK='ALL'
      END ELSE
         MASK=ACTIVE.INFO
      END

      CALL GEN.IN(0,6,'Active, Inactive or ALL :':MASK,'',Q,0,20,'','',2,-LEN(MASK),6,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=ACTIVE.INFO ; Q=ACTIVE.INFO

      BEGIN CASE
         CASE QI='ALL' OR QI = ''
            Q='ALL'
         CASE QI='EX'
            STOP
         CASE QI='X'
            GO ENTER.CLIENT.1
         CASE QI='I'
            Q='I'
         CASE QI='A'
            Q='A'
         CASE 1
            GOTO ENTER.ACTIVE
      END CASE

      ACTIVE.INFO=Q
      CRT @(0,6):'Active, Inactive or ALL :':ACTIVE.INFO:@(-4):
***********************************************************
ENTER.REGIONS:***
***********************************************************
      HELP="Do you want regional information? Y=Yes N=No X=Back EX=Exit"
      IF REGIONS='' THEN
         MASK='N'
      END ELSE
         MASK=REGIONS
      END

      CALL GEN.IN(0,8,'Regional Information :':MASK,'',Q,0,20,'','',2,-LEN(MASK),8,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=REGIONS ; Q=REGIONS

      BEGIN CASE
         CASE QI=''
         CASE QI='EX'
            STOP
         CASE QI='X'
            GO ENTER.ACTIVE
         CASE QI='Y'
            Q='Y'
         CASE QI='N'
            Q='N'
         CASE 1
            GOTO ENTER.REGIONS
      END CASE
      REGIONS=Q
      CRT @(0,8):'Regional Information    :':REGIONS:@(-4):
***********************************************************
ENTER.DIVISIONS:***
***********************************************************
      HELP="Do you want divisional information? Y=Yes N=No X=Back EX=Exit"
      IF DIVISIONS='' THEN
         MASK='N'
      END ELSE
         MASK=DIVISIONS
      END
      CALL GEN.IN(0,10,'Divisional Information :':MASK,'',Q,0,20,'','',2,-LEN(MASK),10,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=DIVISIONS ; Q=DIVISIONS
      BEGIN CASE
         CASE QI=''
         CASE QI='EX'
            STOP
         CASE QI='X'
            GO ENTER.ACTIVE
         CASE QI='Y'
            Q='Y'
         CASE QI='N'
            Q='N'
         CASE 1
            GOTO ENTER.DIVISIONS
      END CASE
      DIVISIONS=Q
      CRT @(0,10):'Divisional Information :':DIVISIONS:@(-4):

      EXTENSION='.TXT'
***********************************************************
ENTER.EXTENSION:***
***********************************************************
      HELP="Enter the exported file extension (.XLS=Excel, .TXT=Outlook, etc) [X]=Back"
      MASK=EXTENSION

      CALL GEN.IN(0,12,'Enter File Extension:':MASK,'',Q,0,4,'','',2,-LEN(MASK),12,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=EXTENSION ; Q=EXTENSION

      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            GO ENTER.DIVISIONS
         CASE QI = 'EX'
            STOP
         CASE QI # ''
            IF INDEX(QI,"*",1) OR INDEX(QI,",",1) OR INDEX(QI,"?",1) OR INDEX(QI,"'",1) OR INDEX(QI,'"',1) THEN
               CALL ELINE("Extensions can not contain '*,?":'"')
               GOTO ENTER.EXTENSION
            END
            EXTENSION = CHANGE(QI,'.','')
            EXTENSION = '.':EXTENSION
         CASE 1
            GOTO ENTER.EXTENSION
      END CASE
      DF.ARRAY=''
      CRT @(0,12):'Enter File Extension:':EXTENSION:@(-4):
***********************************************************
ASK.HEADER:
***********************************************************
      YN.MASK = 'Y '

ASK.HEADER.1:
      YN.MSG = 'Include a column header :'
      HELP = CHAR(7):"Entry Options: [Y]-Yes [N]-No [X]-Back"
      CRT @(0,14):YN.MSG:@(-4)
      MASK = YN.MASK
      Q=''
      CALL GEN.IN(LEN(YN.MSG)+1,14,MASK,'',Q,0,3,'','',2,LEN(YN.MSG)+1,14,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      IF QI='' THEN QI=TRIM(MASK)
      BEGIN CASE
         CASE QI = 'Y'
            RESP='Yes'
            LIN.MODE='HDR'
            GOSUB PROCESS.CUR.LINE
         CASE QI = 'N'
            RESP='No '
         CASE QI = 'X'
            GOTO ENTER.EXTENSION
         CASE QI = 'EX'
            STOP
         CASE 1
            CALL ELINE('Invalid entry.')
            GOTO ASK.HEADER.1
      END CASE
      CRT @(LEN(YN.MSG)+1,14):RESP
ASK.QUOTES:
      YN.MASK = 'N '
***********************************************************
ASK.QUOTES.1:
***********************************************************
      YN.MSG = 'Quote enclosed commas in text fields :'
      HELP = CHAR(7):"Entry Options: [Y]-Yes [N]-No, Recommended [X]-Back"
      CRT @(0,16):YN.MSG:@(-4)
      MASK = YN.MASK
      Q=''
      CALL GEN.IN(LEN(YN.MSG)+1,16,MASK,'',Q,0,3,'','',2,LEN(YN.MSG)+1,16,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      IF QI='' THEN QI=TRIM(MASK)
      BEGIN CASE
         CASE QI = 'Y'
            RESP='Yes'
            QUOTE.COMMAS = 1
         CASE QI = 'N'
            RESP='No '
            QUOTE.COMMAS = 0
         CASE QI = 'X'
            GOTO ASK.HEADER
         CASE QI = 'EX'
            STOP
         CASE 1
            CALL ELINE('Invalid entry.')
            GOTO ASK.QUOTES.1
      END CASE
      CRT @(LEN(YN.MSG)+1,16):RESP
ASK.CORRECT:
      YN.MASK = 'Y '
***********************************************************
ASK.CORRECT.1:
***********************************************************
      YN.MSG = 'Is the above correct? :'
      HELP = CHAR(7):"Entry Options: [Y]-Yes [N]-No [X]-Back"
      CRT @(0,18):YN.MSG:@(-4)
      MASK = YN.MASK
      Q=''
      CALL GEN.IN(LEN(YN.MSG)+1,18,MASK,'',Q,0,3,'','',2,LEN(YN.MSG)+1,18,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      IF QI='' THEN QI=TRIM(MASK)
      BEGIN CASE
         CASE QI = 'Y'
            CRT @(LEN(YN.MSG)+1,18):'Yes'
         CASE QI = 'X' OR QI='N'
            GOTO ASK.QUOTES
         CASE QI = 'EX'
            STOP
         CASE 1
            CALL ELINE('Invalid entry.')
            GOTO ASK.CORRECT.1
      END CASE

***********************************************************
EXPORT.FILE:***
***********************************************************
      UNIQUE.CLIENT=1
      IF CLIENT.ID='ALL' THEN UNIQUE.CLIENT=0
      IF CLIENT.ID='AFS' THEN UNIQUE.CLIENT=0
      IF CLIENT.ID='AFP' THEN UNIQUE.CLIENT=0
      IF CLIENT.ID='STC' THEN UNIQUE.CLIENT=0
      IF CLIENT.ID='UNI' THEN UNIQUE.CLIENT=0
      IF CLIENT.ID='UFM' THEN UNIQUE.CLIENT=0
      IF CLIENT.ID='LGI' THEN UNIQUE.CLIENT=0
      IF CLIENT.ID='TS' THEN UNIQUE.CLIENT=0
      IF UNIQUE.CLIENT=0 THEN
         RECORD.NAME = 'SAGE-ALL-CLIENTS'
         IF CLIENT.ID='AFS' THEN RECORD.NAME = 'SAGE-AFS-CLIENTS'
         IF CLIENT.ID='AFP' THEN RECORD.NAME = 'SAGE-AFP-CLIENTS'
         IF CLIENT.ID='STC' THEN RECORD.NAME = 'SAGE-STC-CLIENTS'
         IF CLIENT.ID='UNI' THEN RECORD.NAME = 'SAGE-UNI-CLIENTS'
         IF CLIENT.ID='UFM' THEN RECORD.NAME = 'SAGE-UFM-CLIENTS'
         IF CLIENT.ID='LGI' THEN RECORD.NAME = 'SAGE-LGI-CLIENTS'
         IF CLIENT.TYPE='TS' THEN
            RECORD.NAME='SAGE-TS-CLIENTS'
         END
         IF REGIONS='Y' THEN
            RECORD.NAME:='-REGS'
         END
         IF DIVISIONS='Y' THEN
            RECORD.NAME:='-DIVS'
         END
         IF CHGS THEN
            RECORD.NAME:='-CHGS'
         END
         RECORD.NAME:=EXTENSION
         GOSUB EXPORT.ALL.CLIENTS
      END ELSE
         CLIENT.ID=CLIENT.ID'R#5'
         RECORD.NAME = 'CLIENT-':CLIENT.ID
         IF REGIONS='Y' THEN
            RECORD.NAME:='-REGS'
         END
         IF DIVISIONS='Y' THEN
            RECORD.NAME:='-DIVS'
         END
         IF CHGS THEN
            RECORD.NAME:='-CHGS'
         END
         RECORD.NAME:=EXTENSION
         GOSUB EXPORT.CLIENT
      END

      CRT @(0,18):"CLIENT File Export completed.":@(-4):
      CRT @(0,19):@(-4):
      CRT @(0,20):"The Exported file name is '":RECORD.NAME:"'":@(-4):
      CRT @(0,21):@(-4):
      CRT @(0,22):@(-4):

      IF PROGRAM.MODE#'AUTO' THEN
         CALL ELINE('Done.')

         CLIENT.ID='EX'
         GOTO ENTER.CLIENT
      END
      STOP
***********************************************************
EXPORT.ALL.CLIENTS:*
***********************************************************
      IF CLIENT.SL#'' THEN
         GL.STMT='GET-LIST ':CLIENT.SL
         EXECUTE GL.STMT RTNLIST CLIENT.LIST CAPTURING GL.OUTPUT
      END
      STMT="SSELECT CLIENTS"
      AND.FLG=0
      IF ACTIVE.INFO # 'ALL' THEN
         STMT := ' WITH 30 = "':ACTIVE.INFO:'"'
         AND.FLG=1
      END
      IF CLIENT.TYPE='TS' THEN
         IF AND.FLG THEN STMT:=' AND '
         STMT:=' WITH @ID EQ "99]"'
         AND.FLG=1
      END
      IF CLIENT.TYPE#'TS' THEN
         IF AND.FLG THEN STMT:=' AND '
         STMT:=' WITH @ID NE "99]"'
         AND.FLG=1
      END
      IF CLIENT.ID='AFS' THEN
         IF AND.FLG THEN STMT:=' AND '
         STMT:=' WITH 92 = "00000"'
         AND.FLG=1
      END
      IF CLIENT.ID='AFP' THEN
         IF AND.FLG THEN STMT:=' AND '
         STMT:=' WITH 92 = "00001"'
         AND.FLG=1
      END
      IF CLIENT.ID='STC' THEN
         IF AND.FLG THEN STMT:=' AND '
         STMT:=' WITH 92 = "00002"'
         AND.FLG=1
      END
      IF CLIENT.ID='UNI' THEN
         IF AND.FLG THEN STMT:=' AND '
         STMT:=' WITH 92 = "00003"'
         AND.FLG=1
      END
      IF CLIENT.ID='UFM' THEN
         IF AND.FLG THEN STMT:=' AND '
         STMT:=' WITH 92 = "00004"'
         AND.FLG=1
      END
      IF CLIENT.ID='LGI' THEN
         IF AND.FLG THEN STMT:=' AND '
         STMT:=' WITH 92 = "00005"'
         AND.FLG=1
      END

      IF CLIENT.SL#'' THEN
         EXECUTE STMT PASSLIST CLIENT.LIST RTNLIST CLIENTS CAPTURING OUTPUT
      END ELSE
         EXECUTE STMT RTNLIST CLIENTS CAPTURING OUTPUT
      END
      CLIENT.ITEMS = @SELECTED
      IF @SELECTED < 1 THEN
         CALL ELINE('ERROR - No CLIENTS on file.')
         STOP
      END

      CLIENT.CNT=0
      PER.1=''
      LOOP
         READNEXT CLIENT.ID FROM CLIENTS ELSE CLIENT.ID='DONE'
      UNTIL CLIENT.ID='DONE' DO
         CLIENT.CNT+=1
  ****       CALL PROG.BAR(20,CLIENT.CNT,CLIENT.ITEMS,PER.1)
         RPT.REC=0
         IF CLIENT.TYPE#'TS' AND CLIENT.ID[1,2]#'99' THEN RPT.REC=1
         IF CLIENT.TYPE='TS' AND CLIENT.ID[1,2]='99' THEN RPT.REC=1
         IF RPT.REC THEN
            READ CLIENT.REC FROM F.CLIENTS,CLIENT.ID ELSE CLIENT.REC='*** Not On File ***'
            READ SHV.NDX.REC FROM F.SHV.NDX,CLIENT.ID ELSE SHV.NDX.REC='*** Not Assigned ***'
            CRT @(0,17):CLIENT.ID:" ":CLIENT.REC<1>:" - Now Exporting Information":@(-4):
            ACCT.OWNER=CLIENT.REC<302>
            READ ACCT.OWNER.REC FROM F.SLSMAN,ACCT.OWNER ELSE ACCT.OWNER.REC=''
            INI.SLS=CLIENT.REC<114>
            READ INI.SLS.REC FROM F.SLSMAN,INI.SLS ELSE INI.SLS.REC=''
            SVC.SLS=CLIENT.REC<115>
            READ SVC.SLS.REC FROM F.SLSMAN,SVC.SLS ELSE SVC.SLS.REC=''
            ACCT.MGR=CLIENT.REC<264>
            READ ACCT.MGR.REC FROM F.SLSMAN,ACCT.MGR ELSE ACCT.MGR.REC=''
            AUDITOR=CLIENT.REC<71>
            LIN.MODE='CLI'
            GOSUB PROCESS.CUR.LINE
            IF REGIONS = 'Y' THEN
               OPEN 'REGION.CODES,':CLIENT.ID TO F.REG.CODES THEN
                  STMT="SSELECT REGION.CODES,":CLIENT.ID
                  IF ACTIVE.INFO # 'ALL' THEN
                     STMT := ' WITH 7 = "':ACTIVE.INFO:'"'
                  END
                  EXECUTE STMT RTNLIST REG.CODES CAPTURING OUTPUT
                  LOOP
                     READNEXT REG.ID FROM REG.CODES ELSE REG.ID='DONE'
                  UNTIL REG.ID='DONE' DO
                     READ REG.REC FROM F.REG.CODES,REG.ID ELSE REG.REC='*** Not On File ***'
                     IF TRIM(REG.REC<11>)='' THEN REG.REC<11>=CLIENT.REC<2>
                     LIN.MODE='REG'
                     GOSUB PROCESS.CUR.LINE
                  REPEAT
               END
            END
            IF DIVISIONS = 'Y' THEN
               OPEN 'DIVISION.CODES,':CLIENT.ID TO F.DIV.CODES THEN
                  STMT="SSELECT DIVISION.CODES,":CLIENT.ID
                  IF ACTIVE.INFO # 'ALL' THEN
                     STMT := ' WITH 7 = "':ACTIVE.INFO:'"'
                  END
                  EXECUTE STMT RTNLIST DIV.CODES CAPTURING OUTPUT
                  LOOP
                     READNEXT DIV.ID FROM DIV.CODES ELSE DIV.ID='DONE'
                  UNTIL DIV.ID='DONE' DO
                     READ DIV.REC FROM F.DIV.CODES,DIV.ID ELSE DIV.REC='*** Not On File ***'
                     IF TRIM(DIV.REC<11>)='' THEN DIV.REC<11>=CLIENT.REC<2>
                     LIN.MODE='DIV'
                     IF DIV.REC<7> = "A" THEN
                     GOSUB PROCESS.CUR.LINE
                   END
                  REPEAT
               END
            END
         END
      REPEAT

      GOSUB WRITE.FILE

      RETURN

***********************************************************
EXPORT.CLIENT:
***********************************************************
      CLIENT.CNT=0
      READ CLIENT.REC FROM F.CLIENTS,CLIENT.ID ELSE
         CLIENT.REC='*** Not On File ***'
      END
      READ SHV.NDX.REC FROM F.SHV.NDX,CLIENT.ID ELSE SHV.NDX.REC='*** Not Assigned ***'
      ACCT.OWNER=CLIENT.REC<302>
      READ ACCT.OWNER.REC FROM F.SLSMAN,ACCT.OWNER ELSE ACCT.OWNER.REC=''
      INI.SLS=CLIENT.REC<114>
      READ INI.SLS.REC FROM F.SLSMAN,INI.SLS ELSE INI.SLS.REC=''
      SVC.SLS=CLIENT.REC<115>
      READ SVC.SLS.REC FROM F.SLSMAN,SVC.SLS ELSE SVC.SLS.REC=''
      ACCT.MGR=CLIENT.REC<264>
      READ ACCT.MGR.REC FROM F.SLSMAN,ACCT.MGR ELSE ACCT.MGR.REC=''
      AUDITOR=CLIENT.REC<71>

      CRT @(0,17):CLIENT.ID:" ":CLIENT.REC<1>:" - Now Exporting Information":@(-4):
      LIN.MODE='CLI'
      GOSUB PROCESS.CUR.LINE
      IF REGIONS = 'Y' THEN
         OPEN 'REGION.CODES,':CLIENT.ID TO F.REG.CODES THEN
            STMT="SSELECT REGION.CODES,":CLIENT.ID
            IF ACTIVE.INFO # 'ALL' THEN
               STMT := ' WITH 7 = "':ACTIVE.INFO:'"'
            END
            EXECUTE STMT RTNLIST REG.CODES CAPTURING OUTPUT
            LOOP
               READNEXT REG.ID FROM REG.CODES ELSE REG.ID='DONE'
            UNTIL REG.ID='DONE' DO
               READ REG.REC FROM F.REG.CODES,REG.ID ELSE REG.REC='*** Not On File ***'
               IF TRIM(REG.REC<11>)='' THEN REG.REC<11>=CLIENT.REC<2>
               LIN.MODE='REG'
               GOSUB PROCESS.CUR.LINE
            REPEAT
         END
      END
      DEBUG
      IF DIVISIONS = 'Y' THEN
         OPEN 'DIVISION.CODES,':CLIENT.ID TO F.DIV.CODES THEN
            STMT="SSELECT DIVISION.CODES,":CLIENT.ID
            IF ACTIVE.INFO # 'ALL' THEN
               STMT := ' WITH 7 = "':ACTIVE.INFO:'"'
            END
            EXECUTE STMT RTNLIST DIV.CODES CAPTURING OUTPUT
            LOOP
               READNEXT DIV.ID FROM DIV.CODES ELSE DIV.ID='DONE'
            UNTIL DIV.ID='DONE' DO
               READ DIV.REC FROM F.DIV.CODES,DIV.ID ELSE DIV.REC='*** Not On File ***'
               IF TRIM(DIV.REC<11>)='' THEN DIV.REC<11>=CLIENT.REC<2>
               LIN.MODE='DIV'
               IF DIV.REC<7> = "A" THEN
               GOSUB PROCESS.CUR.LINE
             END
            REPEAT
         END
      END
      GOSUB WRITE.FILE

      RETURN
* HDR = Heading Line Descriptions
* CLI = Client Line Data Elements
* DIV = Division Line Data Elements
***********************************************************
PROCESS.CUR.LINE:
***********************************************************

      CUR.LINE=''
*
*--- Client/Division ID ---*
*
      IF LIN.MODE='HDR' THEN T='Client ID'
      IF LIN.MODE='CLI' THEN T=QUOTE(CLIENT.ID'R%5')

      IF LIN.MODE='REG' THEN T=QUOTE(CLIENT.ID'R%5-':REG.ID)           ; * JMK01
      IF CLIENT.ID='01267' OR CLIENT.ID='01675' OR CLIENT.ID='05638' OR CLIENT.ID='01749' OR CLIENT.ID='05500' OR CLIENT.ID='01457' OR CLIENT.ID='05049' OR CLIENT.ID='05548' OR CLIENT.ID='05026' THEN  ; * JMK01
         IF LIN.MODE='DIV' THEN T=QUOTE(CLIENT.ID'R%5-':DIV.ID'R%6')   ; * JMK01
      END ELSE                           ; * JMK01
         IF LIN.MODE='DIV' THEN T=QUOTE(CLIENT.ID'R%5-':DIV.ID'R%5')   ; * JMK01
      END                                ; * JMK01
      GOSUB APPEND.LINE
*
*--- Client/Division Name ---*
*
      IF LIN.MODE='HDR' THEN T='Name'
      IF LIN.MODE='CLI' THEN T=CLIENT.REC<2>
      IF LIN.MODE='REG' THEN T=REG.REC<11>
      IF LIN.MODE='DIV' THEN T=DIV.REC<11>
      GOSUB APPEND.LINE
*
*---Client/Division Address Line 1 ---*
*
      IF LIN.MODE='HDR' THEN T='Address 1'
      IF LIN.MODE='CLI' THEN T=CLIENT.REC<3,1>
      IF LIN.MODE='REG' THEN T=REG.REC<14>
      IF LIN.MODE='DIV' THEN T=DIV.REC<14>
      GOSUB APPEND.LINE
*
*--- Client/Division Address Line 2 ---*
*
      IF LIN.MODE='HDR' THEN T='Address 2'
      IF LIN.MODE='CLI' THEN T=CLIENT.REC<3,2>
      IF LIN.MODE='REG' THEN T=''
      IF LIN.MODE='DIV' THEN T=''
      GOSUB APPEND.LINE
*
*--- Client/Division City ---*
*
      IF LIN.MODE='HDR' THEN T='City'
      IF LIN.MODE='CLI' THEN T=CLIENT.REC<4>
      IF LIN.MODE='REG' THEN T=REG.REC<16>
      IF LIN.MODE='DIV' THEN T=DIV.REC<16>
      GOSUB APPEND.LINE
*
*--- Client/Division State ---*
*
      IF LIN.MODE='HDR' THEN T='State'
      IF LIN.MODE='CLI' THEN T=CLIENT.REC<5>
      IF LIN.MODE='REG' THEN T=REG.REC<17>
      IF LIN.MODE='DIV' THEN T=DIV.REC<17>
      GOSUB APPEND.LINE
*
*--- Client/Division Zip Code ---*
*
      IF LIN.MODE='HDR' THEN T='Zip Code'
      IF LIN.MODE='CLI' THEN T=CLIENT.REC<6>
      IF LIN.MODE='REG' THEN T=REG.REC<1>
      IF LIN.MODE='DIV' THEN T=DIV.REC<1>
      GOSUB APPEND.LINE
*
*--- Client/Division Contact ---*
*
      IF LIN.MODE='HDR' THEN T='Contact'
      IF LIN.MODE='CLI' THEN T=CLIENT.REC<46>
      IF LIN.MODE='REG' THEN T=REG.REC<23>
      IF LIN.MODE='DIV' THEN T=DIV.REC<23>
      GOSUB APPEND.LINE
*
*--- Client/Division Telephone ---*
*
      IF LIN.MODE='HDR' THEN T='Telephone'
      IF LIN.MODE='CLI' THEN
         PHONE = CLIENT.REC<31>
         GOSUB FORMAT.PHONE.STR
         T=PHONE
      END
      IF LIN.MODE='REG' THEN
         PHONE = REG.REC<18>
         GOSUB FORMAT.PHONE.STR
         T=PHONE
      END
      IF LIN.MODE='DIV' THEN
         PHONE = DIV.REC<18>
         GOSUB FORMAT.PHONE.STR
         T=PHONE
      END
      GOSUB APPEND.LINE
*
*--- Client/Division Fax ---*
*
      IF LIN.MODE='HDR' THEN T='Fax'
      IF LIN.MODE='CLI' THEN
         PHONE = CLIENT.REC<45>
         GOSUB FORMAT.PHONE.STR
         T=PHONE
      END
      IF LIN.MODE='REG' THEN
         PHONE = REG.REC<19>
         GOSUB FORMAT.PHONE.STR
         T=PHONE
      END
      IF LIN.MODE='DIV' THEN
         PHONE = DIV.REC<19>
         GOSUB FORMAT.PHONE.STR
         T=PHONE
      END
      GOSUB APPEND.LINE
*
*--- Day to Process ---*
*
      IF LIN.MODE='HDR' THEN
         T='Day to Process'
      END ELSE
         DOW.DESC=''
         IF CLIENT.REC<151>#'' THEN
            DOW.DESC=CLIENT.REC<151>:'-':DOW<1,CLIENT.REC<151>+1>
         END
         T=DOW.DESC
      END
      GOSUB APPEND.LINE
*
*--- Average Days to Pay ---*
*
      IF LIN.MODE='HDR' THEN
         T='Avg Days to Pay'
      END ELSE
         CL.LAST.CHECKS=CLIENT.REC<117>
         CL.BANK=CLIENT.REC<81>
         CL.LAST.PROC.DATES=CLIENT.REC<118>
         IF CL.LAST.CHECKS#'' AND CL.BANK # 'V' AND CL.BANK # 'N' THEN
            NUM.OF.CHECK.DATES=DCOUNT(CL.LAST.CHECKS,@VM)
            IF NUM.OF.CHECK.DATES > 8 THEN NUM.OF.CHECK.DATES = 8      ; * Only get the latest 8 items
            SUM.OF.DATES=0
            FOR XX = 1 TO NUM.OF.CHECK.DATES
               SUM.OF.DATES = SUM.OF.DATES + CL.LAST.CHECKS<1,XX> - CL.LAST.PROC.DATES<1,XX>
            NEXT XX
            AVG.DAYS = SUM.OF.DATES/NUM.OF.CHECK.DATES
            AVG.DAYS = AVG.DAYS + .99    ; * Round up
            AVG.DAYS = AVG.DAYS'R0'
            IF CLIENT.ID='00932' THEN AVG.DAYS=21
         END ELSE
            AVG.DAYS='Awaiting Payment'
         END
         T=AVG.DAYS
      END
      GOSUB APPEND.LINE
*
*--- Client/Division Initial Salesrep ID ---*
*
      IF LIN.MODE='HDR' THEN
         T='Init Slsrep'
      END ELSE
         T=INI.SLS
      END
      GOSUB APPEND.LINE
*
*--- Payment Type ---*
*
      IF LIN.MODE='HDR' THEN
         T='Payment Type'
      END ELSE
         T=CLIENT.REC<152>
      END
      GOSUB APPEND.LINE
*
*--- Company Code ---*
*
      IF LIN.MODE='HDR' THEN
         T='Co Code'
      END ELSE
         T=CLIENT.REC<92>'R%5'
      END
      GOSUB APPEND.LINE
*
*--- Client/Division Report TO: Email ---*
*
      FOR VAL=1 TO 10
         IF LIN.MODE='HDR' THEN T='Rpt Email Address'
         IF LIN.MODE='CLI' THEN T=CLIENT.REC<125,VAL>
         IF LIN.MODE='REG' THEN T=REG.REC<9,VAL>
         IF LIN.MODE='DIV' THEN T=DIV.REC<9,VAL>
         GOSUB APPEND.LINE
      NEXT VAL
*
*--- Client/Division Report CC: Email ---*
*
      FOR VAL=1 TO 10
         IF LIN.MODE='HDR' THEN T='Rpt CC Address'
         IF LIN.MODE='CLI' THEN T=CLIENT.REC<126,VAL>
         IF LIN.MODE='REG' THEN T=REG.REC<12,VAL>
         IF LIN.MODE='DIV' THEN T=DIV.REC<12,VAL>
         GOSUB APPEND.LINE
      NEXT VAL
*
*--- Client/Division Collection TO: Email ---*
*
      FOR VAL=1 TO 10
         IF LIN.MODE='HDR' THEN
            T='Rpt CC Address'
         END ELSE
            T=CLIENT.REC<222,VAL>
         END
         GOSUB APPEND.LINE
      NEXT VAL
*
*--- Client/Division Invoice Flag ---*
*
      IF LIN.MODE='HDR' THEN
         T='Invoice Cust'
      END ELSE
         T=CLIENT.REC<42>
      END
      GOSUB APPEND.LINE
*
*--- Client/Division PreAudit Start Date ---*
*
*      IF LIN.MODE='HDR' THEN    ; * SWB02
*         T='PreAudit Start'    ; * SWB02
*      END ELSE    ; * SWB02
*         PA.START.DT=CLIENT.REC<27>    ; * SWB02
*         IF PA.START.DT>0 THEN    ; * SWB02
*            PA.START.DT=PA.START.DT'D2/'    ; * SWB02
*         END ELSE    ; * SWB02
*            PA.START.DT=' '    ; * SWB02
*         END    ; * SWB02
*         T=PA.START.DT    ; * SWB02
*      END    ; * SWB02
*      GOSUB APPEND.LINE    ; * SWB02
*
*--- Initial Contract Date ---*    ; * SWB02
*
      IF LIN.MODE='HDR' THEN             ; * SWB02
         T='Initial Contract Date'       ; * SWB02
      END ELSE                           ; * SWB02
         T=CLIENT.REC<234> 'D2/'         ; * SWB02
      END                                ; * SWB02
      GOSUB APPEND.LINE
*
*--- Client/Division Pay Frequency (Days) ---*
*
      IF LIN.MODE='HDR' THEN
         T='Pay Feq (Days)'
      END ELSE
         T=CLIENT.REC<38>
      END
      GOSUB APPEND.LINE
*
*--- Client/Division Fiscal Year ---*
*
      IF LIN.MODE='HDR' THEN
         T='Fiscal Year'
      END ELSE
         T=CLIENT.REC<29>
      END
      GOSUB APPEND.LINE
*
*--- Client/Division Invoice ---*
*
      IF LIN.MODE='HDR' THEN
         T='Invoice'
      END ELSE
         T=CLIENT.REC<44>
      END
      GOSUB APPEND.LINE
*
*--- Client/Division Account Owner ID ---*
*
      IF LIN.MODE='HDR' THEN
         T='Account Owner'
      END ELSE
         T =""                           ; * GRB01
         **     T=ACCT.OWNER ;* GRB01
      END
      GOSUB APPEND.LINE
*
*--- Client/Division Service Salesrep ID ---*
*
      IF LIN.MODE='HDR' THEN
         T='Svc Slsrep'
      END ELSE
         T=SVC.SLS
      END
      GOSUB APPEND.LINE
*
*--- Client/Division Account Manager ID ---*
*
      IF LIN.MODE='HDR' THEN
         T='Acct Manager'
      END ELSE
         T=ACCT.MGR
      END
      GOSUB APPEND.LINE
*
*--- Client/Division Auditor ---*
*
      IF LIN.MODE='HDR' THEN
         T='Auditor'
      END ELSE
         T=AUDITOR
      END
      GOSUB APPEND.LINE
*
*--- Logistics Client ---*
*
      IF LIN.MODE='HDR' THEN
         T='Logistics Client'
      END ELSE
         T=CLIENT.REC<93>
      END
      GOSUB APPEND.LINE
*
*--- Logistics Start Date ---*
*
      IF LIN.MODE='HDR' THEN
         T='Logistics Start Date'
      END ELSE
         T=OCONV(CLIENT.REC<149>,"D2/")
      END
      GOSUB APPEND.LINE
*
*--- In/Out/Both ---*
*
      IF LIN.MODE='HDR' THEN
         T='In/Out/Both'
      END ELSE
         T=CLIENT.REC<11>
      END
      GOSUB APPEND.LINE
*
*--- Division Codes ---*
*
      IF LIN.MODE='HDR' THEN
         T='Division Codes'
      END ELSE
         T=CLIENT.REC<12>
      END
      GOSUB APPEND.LINE
*
*--- Expense Codes ---*
*
      IF LIN.MODE='HDR' THEN
         T='Expense Codes'
      END ELSE
         T=CLIENT.REC<13>
      END
      GOSUB APPEND.LINE
*
*--- Orgins ---*
*
      IF LIN.MODE='HDR' THEN
         T='Origins'
      END ELSE
         T=CLIENT.REC<14>
      END
      GOSUB APPEND.LINE
*
*--- Destinations ---*
*
      IF LIN.MODE='HDR' THEN
         T='Destinations'
      END ELSE
         T=CLIENT.REC<15>
      END
      GOSUB APPEND.LINE
*
*--- Weights ---*
*
      IF LIN.MODE='HDR' THEN
         T='Weights'
      END ELSE
         T=CLIENT.REC<16>
      END
      GOSUB APPEND.LINE
*
*--- Zip Codes ---*
*
      IF LIN.MODE='HDR' THEN
         T='Zip Codes'
      END ELSE
         T=CLIENT.REC<17>
      END
      GOSUB APPEND.LINE
*
*--- Bill of Lading ---*
*
      IF LIN.MODE='HDR' THEN
         T='Bill of Lading'
      END ELSE
         T=CLIENT.REC<18>
      END
      GOSUB APPEND.LINE
*
*--- Purchase Order ---*
*
      IF LIN.MODE='HDR' THEN
         T='Purchase Order'
      END ELSE
         T=CLIENT.REC<19>
      END
      GOSUB APPEND.LINE
*
*--- Distributions ---*
*
      IF LIN.MODE='HDR' THEN
         T='Distributions'
      END ELSE
         T=CLIENT.REC<24>
      END
      GOSUB APPEND.LINE
*
*--- Vendor Names ---*
*
      IF LIN.MODE='HDR' THEN
         T='Vendor Names'
      END ELSE
         T=CLIENT.REC<20>
      END
      GOSUB APPEND.LINE
*
*--- Customer Names ---*
*
      IF LIN.MODE='HDR' THEN
         T='Customer Names'
      END ELSE
         T=CLIENT.REC<21>
      END
      GOSUB APPEND.LINE
*
*--- Def Zip ---*
*
      IF LIN.MODE='HDR' THEN
         T='Def Zip'
      END ELSE
         T=CLIENT.REC<25,1>:' ':CLIENT.REC<25,2>
      END
      GOSUB APPEND.LINE
*
*--- Due Dates ---*
*
      IF LIN.MODE='HDR' THEN
         T='Due Dates'
      END ELSE
         T=CLIENT.REC<10>
      END
      GOSUB APPEND.LINE
*
*--- Mileages ---*
*
      IF LIN.MODE='HDR' THEN
         T='Mileages'
      END ELSE
         T=CLIENT.REC<26>
      END
      GOSUB APPEND.LINE
*
*--- BOL Cross Ref ---*
*
      IF LIN.MODE='HDR' THEN
         T='BOL Cross Ref'
      END ELSE
         T=CLIENT.REC<8>
      END
      GOSUB APPEND.LINE
*
*--- Logistics Distribution ---*
*
      IF LIN.MODE='HDR' THEN
         T='Logistic Dist'
      END ELSE
         T=CLIENT.REC<7>
      END
      GOSUB APPEND.LINE
*
*--- Class ---*
*
      IF LIN.MODE='HDR' THEN
         T='Class'
      END ELSE
         T=CLIENT.REC<74>
      END
      GOSUB APPEND.LINE
*
*--- Override Division Zip ---*
*
      IF LIN.MODE='HDR' THEN
         T='Ovrrde Div Zip'
      END ELSE
         T=CLIENT.REC<75>
      END
      GOSUB APPEND.LINE
*
*--- Air Traffic Survey ---*
*
      IF LIN.MODE='HDR' THEN
         T='Air Traff Surv'
      END ELSE
         T=CLIENT.REC<76>
      END
      GOSUB APPEND.LINE
*
*--- Zip Routes ---*
*
      IF LIN.MODE='HDR' THEN
         T='Zip Routes'
      END ELSE
         T=CLIENT.REC<47>
      END
      GOSUB APPEND.LINE
*
*--- Misroutings ---*
*
      IF LIN.MODE='HDR' THEN
         T='Misroutings'
      END ELSE
         T=CLIENT.REC<69>
      END
      GOSUB APPEND.LINE
*
*--- Truck Load Survey ---*
*
      IF LIN.MODE='HDR' THEN
         T='Trk Load Surv'
      END ELSE
         T=CLIENT.REC<70,3>
      END
      GOSUB APPEND.LINE
*
*--- Bank ---*
*
      IF LIN.MODE='HDR' THEN
         T='Bank'
      END ELSE
         T=CLIENT.REC<81>
      END
      GOSUB APPEND.LINE
*
*--- Last Process Date ---*
*
      IF LIN.MODE='HDR' THEN
         T='Last Process Date'
      END ELSE
         T=OCONV(CLIENT.REC<82>,"D2/")'R#8'
      END
      GOSUB APPEND.LINE
*
*--- Region Field ---*
*
      IF LIN.MODE='HDR' THEN T='Client Region'
      IF LIN.MODE='CLI' THEN T=''
      IF LIN.MODE='REG' THEN T=''
      IF LIN.MODE='DIV' THEN T=DIV.REC<45>
      GOSUB APPEND.LINE
*
*--- Initial Contract Date ---*    ; * SWB02
*
*      IF LIN.MODE='HDR' THEN    ; * SWB02
*         T='Initial Contract Date'    ; * SWB02
*      END ELSE    ; * SWB02
*         T=CLIENT.REC<234> 'D2/'    ; * SWB02
*      END    ; * SWB02
*      GOSUB APPEND.LINE    ; * SWB02
*
      *--- Client/Division PreAudit Start Date ---*    ; * SWB02
*
      IF LIN.MODE='HDR' THEN             ; * SWB02
         T='PreAudit Start'              ; * SWB02
      END ELSE                           ; * SWB02
         PA.START.DT=CLIENT.REC<27>      ; * SWB02
         IF PA.START.DT>0 THEN           ; * SWB02
            PA.START.DT=PA.START.DT'D2/'           ; * SWB02
         END ELSE                        ; * SWB02
            PA.START.DT=' '              ; * SWB02
         END                             ; * SWB02
         T=PA.START.DT                   ; * SWB02
      END
      GOSUB APPEND.LINE
*
*--- Initial Contract Terms ---*
*
      IF LIN.MODE='HDR' THEN
         T='Initial Contract Terms (MTHS)'
      END ELSE
         T=CLIENT.REC<235>
      END
      GOSUB APPEND.LINE
*
*--- Renewal Contract Date ---*
*
      IF LIN.MODE='HDR' THEN
         T='Renewal Contract Date'
      END ELSE
         T=CLIENT.REC<236> 'D2/'
      END
      GOSUB APPEND.LINE
*
*--- Renewal Contract Terms ---*
*
      IF LIN.MODE='HDR' THEN
         T='Renewal Contract Terms (MTHS)'
      END ELSE
         T=CLIENT.REC<237>
      END
      GOSUB APPEND.LINE
*
*--- Logistics Cancel Date ---*
*
      IF LIN.MODE='HDR' THEN
         T='Logistics Cancel Date'
      END ELSE
         T=CLIENT.REC<238> 'D2/'
      END
      GOSUB APPEND.LINE
*
*--- FP Due Date ---*
*
      IF LIN.MODE='HDR' THEN
         T='FP Due Days'
      END ELSE
         T=CLIENT.REC<186>
      END
      GOSUB APPEND.LINE
*
*--- EDI Print Opts ---*
*
      IF LIN.MODE='HDR' THEN
         T='EDI Print Opts'
      END ELSE
         T=CLIENT.REC<70,13>
      END
      GOSUB APPEND.LINE
*
*--- KEYER ---*
*
      IF LIN.MODE='HDR' THEN
         T='Data Entry Keyer'
      END ELSE
         T=CLIENT.REC<265>
      END
      GOSUB APPEND.LINE
*
*--- Max Audit LTL WT ---*
*
      IF LIN.MODE='HDR' THEN
         T='Max Audit LTL Wt'
      END ELSE
         T=CLIENT.REC<150>
      END
      GOSUB APPEND.LINE
*
*--- Electronic Billing Approved ---*
*
      IF LIN.MODE='HDR' THEN
         T='Electronic Billing Approved'
      END ELSE
         T=CLIENT.REC<270>
      END
      GOSUB APPEND.LINE
*
*--- Electronic Billing Approved Notes ---*
*
      IF LIN.MODE='HDR' THEN
         T='Electronic Billing Notes'
      END ELSE
         T=CLIENT.REC<271>
      END
      GOSUB APPEND.LINE
*
*--- EDI Start Date ---*
*
      IF LIN.MODE='HDR' THEN
         T='EDI Start Date'
      END ELSE
         T=OCONV(CLIENT.REC<225>, 'D2/')
      END
      GOSUB APPEND.LINE
*
*--- Client Parent ID ---*
*
      IF LIN.MODE='HDR' THEN
         T='Client Parent ID'
      END ELSE
         T=CLIENT.REC<147>
      END
      GOSUB APPEND.LINE
*
*--- Client Type ---*
*
      IF LIN.MODE='HDR' THEN
         T='Client Type'
      END ELSE
         T=CLIENT.REC<250>
      END
      GOSUB APPEND.LINE

*
*--- CAR Ref1 ---*
*
      IF LIN.MODE='HDR' THEN
         T='CAR Ref1'
      END ELSE
         T=CLIENT.REC<245>
      END
      GOSUB APPEND.LINE

*
*--- CAR Ref2 ---*
*
      IF LIN.MODE='HDR' THEN
         T='CAR Ref2'
      END ELSE
         T=CLIENT.REC<246>
         IF T = '' THEN                  ; * SWB01
            CUST.ID=CLIENT.ID'R%12'      ; * SWB01
            READ CUST.REC FROM F.CUST,CUST.ID ELSE CUST.REC=''         ; * SWB01
            T=CUST.REC<1>                ; * SWB01
         END
      END
      GOSUB APPEND.LINE

*
*--- Alias ---*
*
      IF LIN.MODE='HDR' THEN
         T='Alias'
      END ELSE
         T=CHANGE(CLIENT.REC<226>,@VM,';')
      END
      GOSUB APPEND.LINE

*
*--- SLC Bill Terms ---*
*
      IF LIN.MODE='HDR' THEN
         T='SLC Terms ID'
      END ELSE
         T=CLIENT.REC<282>
      END
      GOSUB APPEND.LINE
*
*--- Client/Division Initial Salesrep ID ---*
*
      IF LIN.MODE='HDR' THEN
         T='Init Slsrep'
      END ELSE
         T=INI.SLS
      END
      GOSUB APPEND.LINE

*
*--- Client Pre Paid Parcel ---*      GRB02
*
      IF LIN.MODE='HDR' THEN
         T='Pre Paid Parcel'
      END ELSE
         READ PPP.REC FROM F.PPP,CLIENT.ID THEN
            IF PPP.REC<1> # '' AND PPP.REC<1> LT DATE() THEN
               T = "Y"
            END ELSE
               T = "N"
            END
         END ELSE
            T = "N"
         END
      END
      GOSUB APPEND.LINE

      DF.ARRAY<-1>=CUR.LINE

      RETURN
***********************************************************     
APPEND.LINE:
***********************************************************
      T=CHANGE(T,@VM,' ')
      IF QUOTE.COMMAS AND INDEX(T,',',1) THEN T='"':T:'"'
*     IF TRIM(T)='' THEN T=' '
      LNVAL=DCOUNT(CUR.LINE<1>,@VM)
      CUR.LINE<1,LNVAL+1>=T
      RETURN

***********************************************************
WRITE.FILE:
***********************************************************
      DF.ARRAY=CHANGE(DF.ARRAY,@VM,PIPE)
      WRITE.TEST=1
      WRITE DF.ARRAY ON F.EXPORT,RECORD.NAME ELSE
         IF WRITE.TEST < 5 THEN
            CALL ELINE("Cannot write the file.  Please see if this is open.")
            WRITE.TEST+=1
            GO WRITE.FILE
         END ELSE
            CALL ELINE("Cannot write the file.  Please try again later.")
         END
      END
      RETURN

***********************************************************
CALL.NET.ADMIN:***
***********************************************************
      CALL ELINE("CALL NETWORK ADMINISTRATOR!")
      CALL ELINE("CALL NETWORK ADMINISTRATOR!!!!!")

      RETURN
***********************************************************
ASK.Y.OR.N:***
***********************************************************
      YN.ANSWER = ''
Y.OR.N:
      HELP = CHAR(7):"Entry Options: [Y]-Yes [N]-No [X]-Back"
      CRT @(0,22):YN.MSG:@(-4)
      MASK = YN.MASK'L#1'
      Q=''
      CALL GEN.IN(LEN(YN.MSG)+1,22,MASK,'',Q,0,1,'','',2,LEN(YN.MSG)+1,22,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')

      IF QI='' THEN QI=MASK
      BEGIN CASE
         CASE QI = '1'
            QI='Y'
         CASE QI = '0'
            QI='N'
         CASE QI = 'Y'
         CASE QI = 'N'
         CASE QI = 'X'
         CASE 1
            CALL ELINE('Invalid entry.')
            GOTO Y.OR.N
      END CASE

      CRT @(0,22):@(-4):
      CRT @(0,23):@(-4):
      YN.ANSWER = QI

      RETURN

***********************************************************
FORMAT.PHONE.STR:
***********************************************************

      PHONE=TRIM(OCONV(PHONE,'MCN')'R### ###-####')

      RETURN
