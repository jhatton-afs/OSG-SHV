      SUBROUTINE BUILD.DF.VOUCHER.DIETRICH(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.FILE,VIN,VOUT)
********************************************************************************
      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'BUILD.DF.VOUCHER.DIETRICH' ; UPL.VOUT = ''          ; * NPR_UPL 04/22/2010
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)       ; * NPR_UPL 04/22/2010
* PROGRAM: BUILD.DF.VOUCHER.DIETRICH
* SUBROUTINE TO BUILD A DELIMITED FILE
********************************************************************************
* THIS PROGRAM IS A PROPRIETARY PRODUCT OF AUTOMATED FREIGHT SYSTEMS.
*
* FREIGHT BILLING/EDI PACKAGE
*
* AUTHOR : David R. Friend
* DATE CREATED : 08/06/97
* DESCRIPTION  : This program builds a delimited file for all the bills
*                paid during the specified dates so data can be worked
*                with under excel.
********************************************************************************
* MODIFIED     : 05/09/06 JCW01 CHANGES TO @SELECTED, CLEARSELECT, AND STMT<X>
* 090806 - JMK01 - ADD EXPENSE DISTRIBUTION REPORT TO EMAIL
* 122006 - JMK02 - ADD TROUBLESHOOTING SWITCH TO REPORT
* 102010 - JMK03 - ADD TROUBLESHOOTING OVERRIDE TO REPORT
* 010711 - JMK04 - C110014 - Weekly client emails ; all special reports should be in Public folders 
********************************************************************************
* VIN<1>=CLIENT               CLIENT NUMBER
*                             CAN BE CLIENT NUMBER OR 'ALL'
*
* VIN<2>=LOG.ONLY             CHOICE FOR LOGISTICS CLIENTS ONLY
*                             VALID SELECTIONS (Y/N)
*
* VIN<3>=CARRIER              CARRIER NUMBER
*                             CAN BE CARRIER NUMBER OR 'ALL'
*
* VIN<4>=MODE                 TRANSPORTATION MODE
*                             THIS IS ONLY ASKED FOR IF CARRIER IS EQUAL TO 'ALL'
*                             IF YOU SPECIFY CARRIER - LEAVE THIS NULL!!!
*
* VIN<5>=FILE.SEL             FILE SELECTION
*                             VALID SELECTIONS ARE 1 - TEMP
*                                                  2 - HISTORY
*                                                  3 - LAST PROCESSED
*                             THIS IS ONLY NEEDED IF CLIENT IS EQUAL TO 'ALL'
*
* VIN<6>=BEG.DATE             BEGINNING DATE - IF CLIENT IS SPECIFIED
*                             AND YOU HAVE SELECTED 3 FOR FILE.SEL (LAST PROCESSED)
*                             THEN BEG.DATE AND END.DATE=NULL
*
* VIN<7>=END.DATE             ENDING DATE - IF CLIENT IS SPECIFIED
*                             AND YOU HAVE SELECTED 3 FOR FILE.SEL (LAST PROCESSED)
*                             THEN BEG.DATE AND END.DATE NEED TO BE NULL
*
* VIN<8>=CUT.BACK.CODE        CUT BACK CODE - LEAVE NULL FOR ALL (NO PREFERENCE)
*
* VIN<9>=MISROUTE.INFO        MISROUTE INFO - VALID SELECTIONS ARE...
*                                 'I' - INCLUDE MISROUTE ONLY
*                                 'E' - EXCLUDE MISROUTE ONLY
*                                 'N' - NO PREFERENCE
*
* VIN<10>=OVERCHARGE.INFO     OVERCHARGE INFO - VALID SELECTIONS ARE...
*                                 'I' - INCLUDE OVERCHARGE ONLY
*                                 'E' - EXCLUDE OVERCHARGE ONLY
*                                 'N' - NO PREFERENCE
*
* VIN<11>=LOGISTICS.INFO      LOGISTICS INFO - VALID SELECTIONS ARE...
*                                 'I' - INCLUDE LOGISTICS ONLY
*                                 'E' - EXCLUDE LOGISTICS ONLY
*                                 'N' - NO PREFERENCE
*
* VIN<12>=DISCOUNT.INFO       DISCOUNT INFO - VALID SELECTIONS ARE...
*                                 'I' - INCLUDE DISCOUNTS ONLY
*                                 'E' - EXCLUDE DISCOUNTS ONLY
*                                 'N' - NO PREFERENCE
*
* VIN<13>=VERSION             VERSION NUMBER - IF CLIENT[1,2]='99'
*                             THEN VERSION NUMBER WILL BE SET TO 8
*
* VIN<14>=TYPE.OF.REPORT       VALID SELECTIONS ARE...
*                              STANDARD (STD) => AUTO.EMAIL = 0
*                              REGULAR EMAIL (EMAIL) => AUTO.EMAIL = 1
*                              DIVISIONAL EMAIL (EMAIL-DIV) => AUTO.EMAIL = 1
*
* VIN<15>=SEPARATE.DIVISIONS   SEPARATE REPORT FOR DIVISION
*
* VIN<16>=DIVISIONAL.ID        DIVISION ID TO USE
*
* VIN<17>=SORT                 SORT OPTION
*
* VIN<18>=MANUAL.EMAIL         MANUAL EMAIL
*
* VIN<19>=NEW.EMAIL.ADDR       ADDRESS TO BE EMAILED TO
*
* VIN<20>=DIV.EMAIL.ADDR       ADDRESS FOR DIVISION TO BE EMAILED TO
*
* VIN<21>=USER                 USER ID
*
* VIN<22>=CH.NUM               CHANNEL NUMBER
*
* VIN<23>=AUTO                 LAST PROCESSING DATES
*
* VIN<24>=CUT.DESC             CUT BACK DESCRIPTION
*
* VIN<25>=FROM.FB.3.1.NEW      THIS IS SET TO THE LITERAL 'FROM FB.3.1.NEW' IF
*                              THE CALLING PROGRAM IS FB.3.1.NEW OR 'FROM FB.2.3.NW'
*                              IF THE CALLING PROGRAM IS FB.2.3.NW.
* VIN<26>=USING.NEW.MACRO      SWITCH SET IN FB.3.1.NEW
*                              INSERTS A "?" BEFORE CERTAIN FIELDS FOR MACRO TO WORK
* VIN<27>=DUP.ONLY             SWITCH SET IN BUILD.DF.NW.
*                              1 MEANS USE ONLY DUPLICATES
*                              0 MEANS USE ONLY NON-DUPLICATES
* VIN<28>=INC.BD               SWITCH SET IN BUILD.DF.NW.
*                              1 MEANS INCLUDE BALANCE DUE AMOUNTS WITH OVERCHARGES
*                              0 MEANS DO NOT INCLUDE BALANCE DUE AMOUNTS WITH OVERCHARGES
* VIN<29>=LCC.INFO             LCC INFO - VALID SELECTIONS ARE...
*                                 'I' - INCLUDE LCC ONLY
*                                 'E' - EXCLUDE LCC ONLY
*                                 'N' - NO PREFERENCE
*
* VIN<30>=FBLIST              FREIGHT BILL LIST FROM MISROUTE EMAIL; * JMK02
*
* VIN<31>=CLIENT.ACCESS       SS CLIENT ACCESS FILTERS ; * JMK04
*
* VIN<32>=CARRIER.ACCESS      SS CARRIER ACCESS FILTER ; * JMK04
*
* VIN<33>=SALES.ACCESS        SS SALES ACCESS FILTER ; * JMK04
*
* VIN<34>=COMM.ACCESS         SS COMMISSION ACCESS FILTER ; * JMK04
*
* VIN<35>=TL.INFO             TL PARAMETERS FOR FB FILTER ; * JMK19
*
* VIN<45>=ONCE                OPTION TO OVERRIDE TROUBLESHOOTING ; * JMK03
********************************************************************************

$INCLUDE PROG.ADMIN INC_OPTIONS

*
* Assign parameters
*
      PROG.NAME='BUILD.DF.VOUCHER.DIETRICH'
      CLIENT=VIN<1>
      LOG.ONLY=VIN<2>
      CARRIER=VIN<3>
      MODE=VIN<4>
      FILE.SEL=VIN<5>
      BEG.DATE=VIN<6>
      END.DATE=VIN<7>
      CUT.BACK.CODE=VIN<8>
      MISROUTE.INFO=VIN<9>
      OVERCHARGE.INFO=VIN<10>
      LOGISTICS.INFO=VIN<11>
      DISCOUNT.INFO=VIN<12>
      VERSION=VIN<13>
      IF VERSION='' THEN VERSION=1
      TYPE.OF.REPORT=VIN<14>
      SEPARATE.DIVISIONS=VIN<15>
      DIVISIONAL.ID=VIN<16>
      SORT=VIN<17>
      IF SORT='' THEN SORT=1
      MANUAL.EMAIL=VIN<18>
      NEW.EMAIL.ADDR=VIN<19>
      DIV.EMAIL.ADDR=VIN<20>
      USER=VIN<21>
      CH.NUM=VIN<22>
      AUTO=VIN<23>
      CUT.DESC=VIN<24>
      WHERE.FROM=VIN<25>
      USING.NEW.MACRO=VIN<26>
      DUP.ONLY=VIN<27>
      INC.BD=VIN<28>
      LCC.INFO=VIN<29>
      FBLIST=VIN<30>
      CLIENT.ACCESS=VIN<31>
      IF CLIENT.ACCESS='' THEN CLIENT.ACCESS='ALL'
      CARRIER.ACCESS=VIN<32>
      IF CARRIER.ACCESS='' THEN CARRIER.ACCESS='ALL'
      SALES.ACCESS=VIN<33>
      IF SALES.ACCESS='' THEN SALES.ACCESS='ALL'
      COMM.ACCESS=VIN<34>
      IF COMM.ACCESS='' THEN COMM.ACCESS='Y'
      TL.INFO=VIN<35>
      ONCE=VIN<45>+0                     ; * JMK66
      END.DW=END.DATE 'DW'
      CLIENT.REC=''

      IF TYPE.OF.REPORT='EMAIL' OR TYPE.OF.REPORT='EMAIL-DIV' THEN
         AUTO.EMAIL=1
      END ELSE
         AUTO.EMAIL=0
      END

      IF FILE.SEL=1 OR FILE.SEL=4 THEN
         FILE='FB.BILLS,':CLIENT
      END ELSE
         FILE='FB.BILLS.HIST,':CLIENT
      END

*
* Initialize variables
*
      TAB=CHAR(9)
      DIVS=''
      VOUT=''
      LINE.COUNT = 0
      NAME.EXT = ''
      OBDATE=OCONV(BEG.DATE,'D4/')
      OEDATE=OCONV(BEG.DATE,'D4/')
      GOSUB ASSIGN.STATIC
*
* Open general files
*
      OPEN '','CLIENT.SCAC' TO F.CSCAC ELSE
         CALL OPEN.ABORT("CLIENT.SCAC",PROG.NAME)
      END

      IF (CLIENT#'ALL' AND CLIENT#'AFS' AND CLIENT#'SCT') THEN
         CLIENT.ID=CLIENT
         READ CLIENT.REC FROM F.CLIENTS,CLIENT ELSE
            CALL ELINE('ERROR - BUILD.DF did not complete CLIENT.REC read.')
            GOTO EXIT.PROGRAM
         END
         CLIENT.NAME=CLIENT.REC<2>
         OPEN '',FILE TO FB.BILLS ELSE
            CALL OPEN.ABORT(FILE:CLIENT,PROG.NAME)
         END
      END


START.BUILD:***

*
* Select data for current client
*
*************************************************************************
*
* SELECT CLIENT FILE
*

      IF AUTO.EMAIL THEN
         IF TYPE.OF.REPORT='EMAIL' THEN
            GOSUB SELECT.BILLS
            GOSUB CONTINUE.BUILD
         END
         GOTO EXIT.PROGRAM
      END


      TEXT='Selecting Clients.'
      CALL CENTER(TEXT,80)
      CRT @(0,16):TEXT
*
      EXECUTE "SELECT VOC 'FB.BILLS.HIST' *A7" RTNLIST CLIENT.LIST CAPTURING OUTPUT
*
      ITEMS=@SELECTED
*     IF NOT( @SELECTED ) THEN ; * JCW01
      IF @SELECTED < 1 THEN              ; * JCW01
         CALL ELINE('ERROR - No clients on file.')
         GOTO EXIT.PROGRAM
      END
      COUNTER.1=0
      PER.1=0

      IF CLIENT='ALL' OR CLIENT='AFS' OR CLIENT='SCT' THEN
         LOOP
            READNEXT CLIENT.ID FROM CLIENT.LIST ELSE CLIENT.ID='DONE'
            IF CLIENT.ID='DONE' ELSE
               READ CLIENT.REC FROM F.CLIENTS,CLIENT.ID ELSE CLIENT.REC=''
               BEGIN CASE
                  CASE CLIENT='AFS'
                     IF CLIENT.REC<92>='00002' THEN GO SKIP.CLIENT
                  CASE CLIENT='SCT'
                     IF CLIENT.REC<92>#'00002' THEN GO SKIP.CLIENT
                  CASE 1
               END CASE
               IF LOG.ONLY AND CLIENT.REC<93>#'Y' THEN
                  COUNTER.1=COUNTER.1+1
                  IF AUTO.EMAIL=0 THEN CALL PROG.BAR(20,COUNTER.1,ITEMS,PER.1)
                  GOTO SKIP.CLIENT
               END
            END
            IF CLIENT.ID[1,2]='99' THEN GO SKIP.CLIENT
            IF CLIENT.ID[1,2]='98' THEN GO SKIP.CLIENT
            IF CLIENT.ID='00000' AND (CLIENT='ALL' OR CLIENT='AFS' OR CLIENT='SCT') THEN GO SKIP.CLIENT
            CLIENT.LAST.PROCESSED=CLIENT.REC<82>
         UNTIL CLIENT.ID='DONE' DO
            COUNTER.1=COUNTER.1+1
            IF (CLIENT='ALL' OR CLIENT='AFS' OR CLIENT='SCT') AND FILE.SEL=2 THEN          ; * IF all Clients and From History file ; * JMK11
               IF CLIENT.LAST.PROCESSED='' THEN GO SKIP.CLIENT         ; ** No need to look if no bills were processed
               IF BEG.DATE > CLIENT.LAST.PROCESSED THEN GO SKIP.CLIENT           ; ** No need to look for Bills if BEG.DATE is Later than last processed
            END
            IF CLIENT.ID='FB.BILLS.HIST' THEN GO SKIP.CLIENT
            IF CLIENT.REC<2>='' THEN
               CLIENT.NAME='*** Not On File ***'
            END ELSE
               CLIENT.NAME=CLIENT.REC<2>
            END
            IF AUTO.EMAIL ELSE
               CRT @(0,17):CLIENT.ID:" ":CLIENT.NAME:" - Now selecting freight bills":@(-4):
               CALL PROG.BAR(20,COUNTER.1,ITEMS,PER.1)
            END
            VEND=CLIENT.REC<20>
            CUST=CLIENT.REC<21>
            OPEN '','FB.BILLS.HIST,':CLIENT.ID TO FB.BILLS THEN
               FILE='FB.BILLS.HIST,':CLIENT.ID
               GOSUB SELECT.BILLS
            END

SKIP.CLIENT:***
         REPEAT
         GOSUB CONTINUE.BUILD
      END ELSE
         GOSUB SELECT.BILLS
         GOSUB CONTINUE.BUILD
      END

EXIT.PROGRAM:*** End
      RETURN


*
* Select bills for the clients
*
SELECT.BILLS:***
      IF AUTO THEN
         EXECUTE 'SELECT FB.UNPROCESS,':CLIENT.ID:' WITH FILE.NAME = "FB.BILLS,':CLIENT:'" ITEM.NAME' PASSLIST CAPTURING OUTPUT
      END
      IF FILE = 'FB.BILLS,':CLIENT.ID THEN


         STMT='SSELECT ':FILE:' WITH 30 GE "':OCONV(BEG.DATE,'D2/')
         STMT=STMT:'" AND WITH 30 LE "':OCONV(END.DATE,'D2/'):'"'
         IF CLIENT.ID[1,2]#'99' THEN
            IF FILE.SEL=1 THEN
               STMT=STMT:' AND WITH 39 = "O"'
            END
            STMT=STMT:' AND WITH 39 # "R"'
         END ELSE
            STMT=STMT:' AND WITH 39 # "R"'
         END
      END ELSE
         STMT='SSELECT ':FILE:' WITH 37 GE "':OCONV(BEG.DATE,'D2/')
         STMT=STMT:'" AND WITH 37 LE "':OCONV(END.DATE,'D2/'):'"'
         STMT=STMT:' AND WITH 39 # "R"'
         STMT=STMT:' AND WITH VERSION = "0"'
      END
      IF FILE.SEL='4' THEN
         STMT='SSELECT ':FILE:' WITH 39 = "O" AND WITH 14 = "" AND WITH VERSION = "0"'
      END
      STMT=STMT:' BY CARRIER# BY 1 BY PRO'
      EXECUTE STMT PASSLIST RTNLIST BILLS.LIST CAPTURING OUTPUT
*     IF @SELECTED ELSE     ; * JCW01
      IF @SELECTED > 0 ELSE              ; * JCW01
         IF (CLIENT#'ALL' AND CLIENT#'AFS' AND CLIENT#'SCT') THEN
            GOTO EXIT.PROGRAM
         END
      END
      NUM.BILLS = @SELECTED

      COUNTER.2=0
      PER = 0
      DONE=0
      TEMP.ID=''
      TEMP.REC=''
      OLD.CARRIER.ID=''

*
* Get next item to process
*

      LOOP
         READNEXT PRO.ID FROM BILLS.LIST ELSE DONE = 1
      UNTIL DONE DO
         COUNTER.2=COUNTER.2+1
         LINE=''
         READ PRO.REC FROM FB.BILLS,PRO.ID THEN
GET.BILL:
            COUNTER.2=COUNTER.2+1
            IF AUTO.EMAIL=0 THEN CALL PROG.BAR(22,COUNTER.2,NUM.BILLS,PER)
            CARRIER.ID=OCONV(PRO.ID,'G0*1')
            PRO.NUM=OCONV(PRO.ID,'G1*1')
            IF CARRIER.ID#OLD.CARRIER.ID THEN
               IF OLD.CARRIER.ID#'' THEN
                  GOSUB CREATE.TOTALS
               END
               OLD.CARRIER.ID=CARRIER.ID
               GOSUB CREATE.CHEQUE
               GOSUB CREATE.REMITH
            END
            GOSUB CREATE.REMITD
         END
      REPEAT
      GOSUB CREATE.TOTALS
      RETURN

*****
ASSIGN.STATIC:*****
*****
      EXP.REC=''
      CHEQUE.REC=''
      REMITH.REC=''
      REMITD.BLK=''
      CHEQUE.CNT=0
      REMITH.CNT=0
      REMITD.CNT=0
      TOTALS.CNT=0
      TOT.PAY.CNT=0
      TOT.PAY.AMT=0
      TOT.ACTUAL.CHG=0
      TOTALS.REC=''
      PMT.REF.NO=''
      PMT.REF.DT=''
      PMT.MTHD='OTCHK'
      BANK.ID='NORTHERN TR'
      BANK.ACCT.NO='301SCOTT'
      BANK.NO='071923828'
      BANK.NAME='THE NORTHERN TRUST COMPANY'
      BANK.ADD.FMT='US1'
      BANK.ADD.LINE1=''
      BANK.ADD.LINE2=''
      BANK.ADD.BOX1='50 SOUTH LA SALLE STREET'
      BANK.ADD.BOX2=''
      BANK.ADD.CITY='CHICAGO'
      BANK.ADD.ZIP='60675'
      BANK.ADD.ST='IL'
      PAY.NAME='Dietrich Industries, Inc.'
      PAY.ADD.FMT='US2'
      PAY.ADD.LINE1='A Worthington Industries Company'
      PAY.ADD.LINE2=''
      PAY.ADD.BOX1='4200 Route 22 Highway East'
      PAY.ADD.BOX2='Suite 3 PO Box 68'
      PAY.ADD.CITY='Blairsville'
      PAY.ADD.ZIP='15717'
      PAY.ADD.ST='PA'
      VEND.LOC=''
      VEND.ADD.FMT='US2'
      FACTOR.ID=''
      FACTOR.LOC=''
      FACTOR.NAME=''
      SEC.SIGN.AMT='1000000000.00'
      SEC.SIGN.DISP=''
      DISC.AMT='0.00'
      DISC.DISP=''
      EARN.WH.AMT='0.00'
      EARN.WH.DISP=''
      PAY.STS='PAID'
      TRAN.CURR.CODE='USD'
      CURR.DEC='2'
      DEC.SEP='.'
      THOU.SEP=','
      PAY.AMT.SCRIPT=''
      OVRFLOW.MSG=''
      REMIT.MSG=''
      BILL.DT=OEDATE[7,4]:OEDATE[1,2]:OEDATE[4,2]
      RETURN
*****
CREATE.CHEQUE:*****
*****
      READ CARRIER.REC FROM F.CARRIERS,CARRIER.ID ELSE CARRIER.REC=''
      CARRIER.DAYS=CARRIER.REC<23>
      FORM.ID='CHEQUE'
      VEND.ID=CARRIER.ID
      VEND.NAME=CARRIER.REC<1>
      VEND.ADD.LINE1=CARRIER.REC<2,1>
      VEND.ADD.LINE2=''
      VEND.ADD.BOX1=CARRIER.REC<2,2>
      VEND.ADD.BOX2=''
      VEND.ADD.CITY=CARRIER.REC<3>
      VEND.ADD.ZIP=CARRIER.REC<5>
      VEND.ADD.ST=CARRIER.REC<4>
      TOT.PAY.CNT=0
      TOT.PAY.AMT=0
      TOT.ACTUAL.CHG=0
      TOT.PAY.DISP=''
      CHEQUE.REC<1,1>=FORM.ID 'L#6'
      CHEQUE.REC<1,2>=PMT.REF.NO 'R#10'
      CHEQUE.REC<1,3>=PMT.REF.DT 'L#8'
      CHEQUE.REC<1,4>=PMT.MTHD 'L#5'
      CHEQUE.REC<1,5>=BANK.ID 'L#11'
      CHEQUE.REC<1,6>=BANK.ACCT.NO 'L#17'
      CHEQUE.REC<1,7>=BANK.NO 'L#17'
      CHEQUE.REC<1,8>=BANK.NAME 'L#70'
      CHEQUE.REC<1,9>=BANK.ADD.FMT 'L#6'
      CHEQUE.REC<1,10>=BANK.ADD.LINE1 'L#35'
      CHEQUE.REC<1,11>=BANK.ADD.LINE2 'L#35'
      CHEQUE.REC<1,12>=BANK.ADD.BOX1 'L#35'
      CHEQUE.REC<1,13>=BANK.ADD.BOX2 'L#35'
      CHEQUE.REC<1,14>=BANK.ADD.CITY 'L#35'
      CHEQUE.REC<1,15>=BANK.ADD.ZIP 'L#9'
      CHEQUE.REC<1,16>=BANK.ADD.ST 'L#9'
      CHEQUE.REC<1,17>=PAY.NAME 'L#35'
      CHEQUE.REC<1,18>=PAY.ADD.FMT 'L#6'
      CHEQUE.REC<1,19>=PAY.ADD.LINE1 'L#35'
      CHEQUE.REC<1,20>=PAY.ADD.LINE2 'L#35'
      CHEQUE.REC<1,21>=PAY.ADD.BOX1 'L#35'
      CHEQUE.REC<1,22>=PAY.ADD.BOX2 'L#35'
      CHEQUE.REC<1,23>=PAY.ADD.CITY 'L#35'
      CHEQUE.REC<1,24>=PAY.ADD.ZIP 'L#9'
      CHEQUE.REC<1,25>=PAY.ADD.ST 'L#9'
      CHEQUE.REC<1,26>=VEND.ID 'L#10'
      CHEQUE.REC<1,27>=VEND.LOC 'L#3'
      CHEQUE.REC<1,28>=VEND.NAME 'L#45'
      CHEQUE.REC<1,29>=VEND.ADD.FMT 'L#6'
      CHEQUE.REC<1,30>=VEND.ADD.LINE1 'L#35'
      CHEQUE.REC<1,31>=VEND.ADD.LINE2 'L#35'
      CHEQUE.REC<1,32>=VEND.ADD.BOX1 'L#35'
      CHEQUE.REC<1,33>=VEND.ADD.BOX2 'L#35'
      CHEQUE.REC<1,34>=VEND.ADD.CITY 'L#35'
      CHEQUE.REC<1,35>=VEND.ADD.ZIP 'L#9'
      CHEQUE.REC<1,36>=VEND.ADD.ST 'L#9'
      CHEQUE.REC<1,37>=TOT.PAY.CNT 'R%5'
      CHEQUE.REC<1,38>=TOT.PAY.AMT 'R%18'
      CHEQUE.REC<1,39>=SEC.SIGN.AMT 'R%18'
      CHEQUE.REC<1,40>=PAY.STS 'L#4'
      CHEQUE.REC<1,41>=TRAN.CURR.CODE 'L#3'
      CHEQUE.REC<1,42>=CURR.DEC 'L#1'
      CHEQUE.REC<1,43>=DEC.SEP 'L#1'
      CHEQUE.REC<1,44>=THOU.SEP 'L#1'
      CHEQUE.REC<1,45>=TOT.PAY.DISP 'R*35'
      CHEQUE.REC<1,46>=SEC.SIGN.AMT 'R2,*35'
      CHEQUE.REC<1,47>=PAY.AMT.SCRIPT 'R*255'
      CHEQUE.CNT+=1
      RETURN
*****
CREATE.REMITH:*****
*****
      FORM.ID='REMITH'
      REMITH.REC<1,1>=FORM.ID 'L#6'
      REMITH.REC<1,2>=PMT.REF.NO 'R#10'
      REMITH.REC<1,3>=PMT.REF.DT 'L#8'
      REMITH.REC<1,4>=VEND.ID 'L#10'
      REMITH.REC<1,5>=VEND.LOC 'L#3'
      REMITH.REC<1,6>=VEND.NAME 'L#45'
      REMITH.REC<1,7>=FACTOR.ID 'L#10'
      REMITH.REC<1,8>=FACTOR.LOC 'L#3'
      REMITH.REC<1,9>=FACTOR.NAME 'L#45'
      REMITH.CNT+=1
      RETURN
*****
CREATE.REMITD:*****
*****
      ACTUAL.CHG=PRO.REC<8>
      PAY.AMT=ACTUAL.CHG'R26'
      PAY.DISP=FIELD(PAY.AMT,'.',1)'R0,':' Dollars and ':FIELD(PAY.AMT,'.',2):' Cents'
      TOT.ACTUAL.CHG+=ACTUAL.CHG
      TOT.PAY.AMT=TOT.ACTUAL.CHG'R26'
      TOT.PAY.CNT+=1
      TOT.PAY.DISP=FIELD(TOT.PAY.AMT,'.',1)'R0,':' Dollars and ':FIELD(TOT.PAY.AMT,'.',2):' Cents'
      CHEQUE.REC<1,37>=TOT.PAY.CNT 'R%5'
      CHEQUE.REC<1,38>=TOT.PAY.AMT 'R%18'
      CHEQUE.REC<1,45>=TOT.PAY.DISP 'R2,*35'
      TERM.DAYS=PRO.REC<38>-PRO.REC<1>
      IF PRO.REC<38>='' THEN
         TERM.DAYS=CARRIER.DAYS
      END
      BEGIN CASE
         CASE TERM.DAYS=0
            TERMS='Due on receipt'
         CASE TERM.DAYS=1
            TERMS='Net 1 Day'
         CASE 1
            TERMS='Net ':TERM.DAYS:' Days'
      END CASE
      REMITD.REC=''
      FORM.ID='REMITD'
      REMITD.REC<1,1>=FORM.ID
      REMITD.REC<1,2>=PMT.REF.NO 'R#10'
      REMITD.REC<1,3>=PMT.REF.DT 'L#8'
      REMITD.REC<1,4>=PRO.NUM 'L#22'
      REMITD.REC<1,5>=BILL.DT 'L#8'
      REMITD.REC<1,6>=PAY.AMT 'R%18'
      REMITD.REC<1,7>=DISC.AMT 'R%18'
      REMITD.REC<1,8>=EARN.WH.AMT 'R%18'
      REMITD.REC<1,9>=PAY.AMT 'R%18'
      REMITD.REC<1,10>=PRO.REC<16> 'L#12'
      REMITD.REC<1,11>=REMIT.MSG 'L#60'
      REMITD.REC<1,12>=PAY.NAME 'L#35'
      REMITD.REC<1,13>=PAY.AMT 'R2,*35'
      REMITD.REC<1,14>=TERMS 'L#35'
      REMITD.BLK<-1>=REMITD.REC
      REMITD.CNT+=1
      RETURN
*****
CREATE.TOTALS:*****
*****
      TOT.REMIT.AMT=TOT.PAY.AMT
      TOT.REMIT.DISP=FIELD(TOT.REMIT.AMT,'.',1)'R0,':' Dollars and ':FIELD(TOT.REMIT.AMT,'.',2):' Cents'
      TOT.DISC.AMT='0.00'
      TOT.DISC.DISP=''
      TOT.WITH.AMT='0.00'
      TOT.WITH.DISP=''
      FORM.ID='TOTALS'
      TOTALS.REC<1,1>=FORM.ID'L#6'
      TOTALS.REC<1,2>=PMT.REF.NO 'R#10'
      TOTALS.REC<1,3>=PMT.REF.DT 'L#8'
      TOTALS.REC<1,4>=TOT.PAY.AMT 'R%18'
      TOTALS.REC<1,5>=TOT.DISC.AMT 'R%18'
      TOTALS.REC<1,6>=TOT.WITH.AMT 'R%18'
      TOTALS.REC<1,7>=TOT.REMIT.AMT 'R%18'
      TOTALS.REC<1,8>=OVRFLOW.MSG 'L#60'
      TOTALS.REC<1,9>=TOT.REMIT.AMT 'R2,*35'
      TOTALS.REC<1,10>=TOT.DISC.AMT 'R2,*35'
      TOTALS.REC<1,11>=TOT.WITH.AMT 'R2,*35'
      TOTALS.REC<1,12>=TOT.REMIT.AMT 'R2,*35'
      TOTALS.CNT+=1
      GOSUB BUILD.EXPORT
      RETURN
*****
BUILD.EXPORT:*****
*****
*-------------------------------------------
* KM 3/12/2004 To handle files that get more lines
* than excel can handle by breaking the file into sections
*-------------------------------------------
      LINE.COUNT += CHEQUE.CNT
      LINE.COUNT += REMITH.CNT
      LINE.COUNT += REMITD.CNT
      LINE.COUNT += TOTALS.CNT
      IF USER='KMESSENGER' THEN
         CRT@(0,10):'LINES SELECTED:':LINE.COUNT
         CRT@(0,11):'FILE VERSION:':NAME.EXT
      END
      IF LINE.COUNT >= 65000 THEN
         IF NAME.EXT = '' THEN
            NAME.EXT = 0
         END
         IF USER='KMESSENGER' THEN
            CALL ELINE('Kevin-About to write file version:':NAME.EXT)
            CRT@(0,10):'LINES SELECTED:     '
            CRT@(0,11):'FILE VERSION:     '
         END
         GOSUB CONTINUE.BUILD
         DARRAY = ''
         LINE.COUNT = 0
         NAME.EXT = NAME.EXT+1
      END
*-------------------------------------------
      EXP.REC<-1>=CHEQUE.REC
      EXP.REC<-1>=REMITH.REC
      EXP.REC<-1>=REMITD.BLK
      EXP.REC<-1>=TOTALS.REC
      CHEQUE.REC=''
      REMITH.REC=''
      REMITD.BLK=''
      TOTALS.REC=''
      CHEQUE.CNT=0
      REMITH.CNT=0
      REMITD.CNT=0
      TOTALS.CNT=0
      RETURN
*
* Continue to build and save file
*
CONTINUE.BUILD:***
      EXP.REC=CHANGE(EXP.REC,@VM,'')
      RECORD.NAME='scot'
      EOW.ADD=5-END.DW
      EOW.DATE=END.DATE+EOW.ADD
      D=EOW.DATE'D2/'
      RECORD.NAME:=D[1,2]:D[4,2]
      RECORD.NAME:='.afs'
      WRITE EXP.REC ON F.FILE,RECORD.NAME ELSE
         CALL ELINE('Unable to write. Close Excel ':RECORD.NAME:'. Then press enter to write')
         WRITE EXP.REC ON F.FILE,RECORD.NAME ELSE
            CALL ELINE('Unable to write. Aborting')
            STOP
         END
      END
      VOUT<1>=RECORD.NAME
      IF AUTO.EMAIL OR MANUAL.EMAIL THEN
         EMAIL.OUT=''
         IF USER='MKERBOW' THEN
            CLIENT.REC<125>='mkerbow@afs.net'
            CLIENT.REC<126>=''
            CLIENT.REC<127>=''
         END
         IF MANUAL.EMAIL OR (AUTO.EMAIL AND SEPARATE.DIVISIONS) THEN
            EMAIL.OUT<1>=NEW.EMAIL.ADDR
         END ELSE
            EMAIL.OUT<1>=TRIM(CLIENT.REC<125>)     ; * To Address
         END
         IF AUTO.EMAIL THEN
            EMAIL.OUT<2>=TRIM(CLIENT.REC<126>)
            EMAIL.OUT<3>=TRIM(CLIENT.REC<127>)
*           EMAIL.OUT<3,-1>='mkerbow@afs.net'      ; * JMK04
            EMAIL.OUT<3,-1>='WeeklyClientEmails@afs.net'     ; * JMK04
         END
*        IF CLIENT.REC<179>#'' THEN      ; * JMK02 ; * JMK03
         IF CLIENT.REC<179>#'' AND ONCE=0 THEN     ; * JMK02 ; * JMK03
            EMAIL.OUT<1>=TRIM(CLIENT.REC<179>)     ; * JMK02
            IF EMAIL.OUT<1>='' THEN STOP           ; * JMK02
            EMAIL.OUT<2>=''              ; * JMK02
            EMAIL.OUT<3>=''              ; * JMK02
         END                             ; * JMK02
         EMAIL.OUT<4>='Reports@afs.net'
         EMAIL.OUT<5,1>='Dietrich Check Print Output Transaction'
         BODY.TEXT='The attached file is the Dietrich Check Print Output Transaction File.'
         EMAIL.OUT<6>=BODY.TEXT
         EMAIL.OUT<11> = 'E:\ARDENT\PUBLIC\EMAILDATA\'
         EMAIL.OUT<11>:=RECORD.NAME
         EVIN = EMAIL.OUT                ; * JMK09
         IF EMAIL.OUT<1>#'' THEN CALL SENDMAIL(EVIN,EVOUT)   ; * JMK09
      END
      RETURN

   END
