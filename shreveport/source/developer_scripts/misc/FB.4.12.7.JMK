      ****************************************
      * Program name : FB.4.12.7.JMK
      * Author       : NCG PRATT
      * Date written : May 28, 2008
      * Library      : FBBP
      * COPYRIGHT (C) 1998 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED.
      *
      *
      * Create keyer analysis spreadsheet
* Last updated by afs (gbino) at 06:51:18 on 04/29/2016.
      *
      * Start modification history
      * Mod nn  mm/dd/yy, init, req #, description
      * 120412 - JMK01 - Add QlikView Feed for Myra's review
      * End modification history
      *
      ****************************************
*
* Initialize variables
*
$OPTIONS HEADER.EJECT
$OPTIONS EXEC.EQ.PERF
$OPTIONS INFO.ABORT
      ERRMSG=''
      COMMON PROGPARAMS(24)
      EQU PROGFROM TO PROGPARAMS(1)
      EQU USER TO PROGPARAMS(2)
      EQU PROCDATE TO PROGPARAMS(3)
      EQU CH.NUM TO PROGPARAMS(4)
*
      CALL GET.USER(USER)
      CALL CHANNEL(CH.NUM)
      PROG.NAME='FB.4.12.7.JMK'
      PROG.DESC='KEYER  ANALYSIS SPREADSHEET(XLS)'
* Begin GRB01
      VIN1=""
      VIN1<1> = PROG.NAME
      VIN1<2> = USER
      VIN1<3> = SYSTEM(18)
      VIN1<4> = "S"
      CALL PROGTRACK(VIN1,VOUT1)
* End GRB01
      PACK.NAME='FREIGHT BILLING'
      CO.NAME='AFS Logistics, LLC'
      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'FB.4.12.7' ; UPL.VOUT = ''      ; * NPR_UPL 04/23/2010
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)       ; * NPR_UPL 04/23/2010

      QV.FLG=0                           ; * JMK01
      GET (ARG.,1) OBEG.DATE THEN        ; * JMK01
         BEG.DATE=ICONV(OBEG.DATE,'D')   ; * JMK01
         QV.FLG=1                        ; * JMK01
      END ELSE                           ; * JMK01
         BEG.DATE=''                     ; * JMK01
      END                                ; * JMK01
      GET (ARG.,2) OEND.DATE THEN        ; * JMK01
         END.DATE=ICONV(OEND.DATE,'D')   ; * JMK01
         QV.FLG=1                        ; * JMK01
      END ELSE                           ; * JMK01
         END.DATE=''                     ; * JMK01
      END                                ; * JMK01
*
* Open files
*
      OPEN '','CLIENTS' TO F.CLIENT ELSE CALL OPEN.ABORT("CLIENTS",PROG.NAME)
      OPEN '','BCTRL' TO F.BCTRL ELSE CALL OPEN.ABORT("BCTRL",PROG.NAME)
      OPEN '','LOCATIONS' TO F.LOCATIONS ELSE CALL OPEN.ABORT("LOCATIONS",PROG.NAME)
      OPEN '','TC.WEEKLY' TO F.TC.WEEKLY ELSE CALL OPEN.ABORT("TC.WEEKLY",PROG.NAME)
*
      OPEN '','EMP.HR.PERF' TO F.EMP.HR.PER ELSE CALL OPEN.ABORT("EMP.HR.PERF",PROG.NAME)
*
      OPEN '','VOC' TO F.VOC ELSE
         CALL ELINE('UNABLE TO OPEN VOC FILE')
         STOP
      END
*
      READ BILLDATA.REC FROM F.VOC,"BILLDATA" ELSE
         CALL ELINE('UNABLE TO OPEN "VOC BILLDATA"')
         STOP
      END
*
      BILLDATA.REC<2>:='\':USER
      WRITE BILLDATA.REC ON F.VOC,"BILLDATA.":USER ELSE
         CALL ELINE("YOUR USER NAME '":USER:"' IS NOT IN THE BILLDATA FOLDER - PLEASE CALL THE HELPDESK")
         STOP
      END
      OPEN '','BILLDATA.':USER TO F.BILLDATA ELSE
         CALL ELINE('UNABLE TO OPEN "BILLDATA."':USER)
         STOP
      END

      OPEN '','FBWORK':CH.NUM TO F.WORK ELSE
         EXECUTE 'CREATE-FILE FBWORK':CH.NUM:' 1 1001' PASSLIST CAPTURING OUTPUT
         OPEN '','FBWORK':CH.NUM TO F.WORK ELSE
            CALL OPEN.ABORT('FBWORK':CH.NUM,PROG.NAME)
         END
      END
      OPEN 'DICT','FBWORK':CH.NUM TO F.DICT.WORK ELSE
         CALL OPEN.ABORT('DICT FBWORK':CH.NUM,PROG.NAME)
      END
*
***********************************************************************
* Clear work file
*
      CLEARFILE F.WORK
*
* Create work file dictionary items
*
      TEMP=''
      TEMP<1>='S'
      TEMP<2>=0
      TEMP<8>='G0*1'
      TEMP<9>='L'
      TEMP<10>='15'
      WRITE TEMP ON F.DICT.WORK,'BILL.TYPE'
*
      TEMP=''
      TEMP<1>='S'
      TEMP<2>=0
      TEMP<8>='G1*1'
      TEMP<9>='L'
      TEMP<10>='15'
      WRITE TEMP ON F.DICT.WORK,'LOCATION'
*
      TEMP=''
      TEMP<1>='S'
      TEMP<2>=0
      TEMP<8>='G2*1'
      TEMP<9>='L'
      TEMP<10>='15'
      WRITE TEMP ON F.DICT.WORK,'KEYER'
*
      TEMP=''
      TEMP<1>='S'
      TEMP<2>='11'
      TEMP<9>='R'
      TEMP<10>='15'
      WRITE TEMP ON F.DICT.WORK,'TOTAL.CHARS'
*
      TEMP=''
      TEMP<1>='S'
      TEMP<2>='3'
      TEMP<9>='R'
      TEMP<10>='15'
      WRITE TEMP ON F.DICT.WORK,'TOTAL.BILLS'
*
      COL.HEADERS = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"   ; * EXCEL Column headers
*
      HLINE1 = "Freight Bills Keyed "    ; * 05-17-2008 - 05-23-2008
*
      HLINE2 = ""
      COL.NO = 1
      HLINE2<1,COL.NO> = "Name" ; COL.NO += 1
      LOC.COL = COL.NO
      HLINE2<1,COL.NO> = "Loc." ; COL.NO += 1
      HLINE2<1,COL.NO> = "Dept." ; COL.NO += 1
      TC.HOURS.COL = COL.NO
      HLINE2<1,COL.NO> = "TC Hours Worked" ; COL.NO += 1
      HLINE2<1,COL.NO> = "Non FP Hours Worked" ; COL.NO += 1
      HLINE2<1,COL.NO> = "FP Hours Worked" ; COL.NO += 1
      HLINE2<1,COL.NO> = "Chars. Keyed" ; COL.NO += 1
      HLINE2<1,COL.NO> = "Chars. Verified" ; COL.NO += 1
      TOT.CHARS.COL = COL.NO
      HLINE2<1,COL.NO> = "Total Chars" ; COL.NO += 1
      AVG.CHARS.COL = COL.NO
      HLINE2<1,COL.NO> = "Avg. Chars/FP HR" ; COL.NO += 1
      BILLS.KEYED.COL = COL.NO
      HLINE2<1,COL.NO> = "Bills Keyed" ; COL.NO += 1
      HLINE2<1,COL.NO> = "Bills Verified" ; COL.NO += 1
      TOT.BILLS.COL = COL.NO
      HLINE2<1,COL.NO> = "Total Bills" ; COL.NO += 1
      AVG.BILLS.COL = COL.NO
      HLINE2<1,COL.NO> = "Avg. Bills /FP HR" ; COL.NO += 1

      CHAR.PERC.COL.NO = COL.NO
      HLINE2<1,COL.NO> = "Character Percentage" ; COL.NO += 1
*
      BILLS.PERC.COL.NO = COL.NO
      HLINE2<1,COL.NO> = "Bills Keyed Percentage" ; COL.NO += 1
*
      TYPE.COL = COL.NO
      HLINE2<1,COL.NO> = "Bill Type" ; COL.NO += 1
*
      TOTAL.COL.NO = COL.NO
      HLINE2<1,COL.NO> = "Total Row to Use" ; COL.NO += 1
      OLD.ROW.POS = COL.NO
      HLINE2<1,COL.NO> = "Old Row Pos" ; COL.NO += 1
*
      CALC.TYPE.COL.NO = COL.NO
      HLINE2<1,COL.NO> = "Calc. Type" ; COL.NO += 1
*
      CALC.FORMULA.COL.NO1 = COL.NO
      HLINE2<1,COL.NO> = "Calc. Formula 1" ; COL.NO += 1
*
      CALC.FORMULA.COL.NO2 = COL.NO
      HLINE2<1,COL.NO> = "Calc. Formula 2" ; COL.NO += 1
*
      HLINE3 = "Paper Bills:"
*
      TODAY = DATE()
      SDATE = TODAY
      EDATE = TODAY + 6
*
      THIS.FRIDAY = ""
      DAY.STR = "MTWTFSS"
*
      FOR DX = SDATE TO EDATE
         W.DAY = OCONV(DX,"DD")
         W.DAY.ALPHA = OCONV(DX,"DWA")
         W.DOW = OCONV(DX,"DW")
         W.MTH = OCONV(DX,"DM")
         W.MTH.ALPHA = OCONV(DX,"DMA")
         W.YEAR = OCONV(DX,"DY")
*
         IF W.DOW = "5" THEN THIS.FRIDAY = DX
*   CRT "DAY    " : W.DAY "R#3" :" ": W.DAY.ALPHA "L#12" :" ":OCONV(DX,"DW") :" ":

*   CRT "MONTH  " : W.MTH "R#3" :" ": W.MTH.ALPHA "L#12" "  ":W.YEAR : " ":DX
      NEXT DX
*
      LAST.SATURDAY = THIS.FRIDAY - 6
*
      CALL SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
*
*
* Enter beginning date.
*
ENTER.BEGIN.DATE:***
*
      IF BEG.DATE='' THEN                ; * JMK01
         CRT @(0,3):" Last Saturday  ":OCONV(LAST.SATURDAY,"D2/")
         CRT @(0,5):" This Friday    ":OCONV(THIS.FRIDAY,"D2/")
*
         BEG.DATE = LAST.SATURDAY
         HELP="Enter from date. nn=Day. nn/nn=Month & Day. [T]oday, [Y]esterday EX=Exit."
*
         LN='Enter the Beginning date  : ':BEG.DATE'D2/'
         CALL GEN.IN(0,7,LN,'DATE',Q,0,8,'','',0,-8,7,0,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI="T"
               Q=TODAY
            CASE QI = "Y"
               Q=TODAY-1
            CASE QI='EX'
               STOP
         END CASE
         BEG.DATE=Q
         CRT @(28,7):BEG.DATE'D2/'
      END                                ; * JMK01
*
* Enter ending date.
*
ENTER.END.DATE:***
*
      IF END.DATE='' THEN                ; * JMK01
         IF BEG.DATE = LAST.SATURDAY THEN
            END.DATE = THIS.FRIDAY
         END ELSE
            END.DATE = BEG.DATE + 6
         END
*
         HELP="Enter End date. nn=Day. nn/nn=Month & Day. [T]oday, [Y]esterday X=Back EX=Exit."
*
         LN='Enter the Ending Date     : ':END.DATE'D2/'
         CALL GEN.IN(0,9,LN,'DATE',Q,0,9,'','',0,-8,9,0,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI="T"
               Q=TODAY
            CASE QI = "Y"
               Q=TODAY-1
            CASE QI='X'
               CRT @(0,9):@(-3):
               GOTO ENTER.BEGIN.DATE
            CASE QI='EX'
               STOP
         END CASE
         END.DATE=Q

         IF BEG.DATE GT END.DATE THEN
            CALL ELINE("End Date may not be before the Start Date - RETURN to re-enter")
            CRT @(28,9):SPACE(10)
            GOTO ENTER.BEGIN.DATE
         END

         IF END.DATE GT TODAY THEN
            CALL ELINE("Future Date Invalid - RETURN to re-enter")
            CRT @(28,9):SPACE(10)
            GOTO ENTER.END.DATE
         END

         DAYS=END.DATE-BEG.DATE+1
         CRT @(28,9):END.DATE'D2/'
      END                                ; * JMK01
*
      QV.ARRAY=''                        ; * JMK01
      IF QV.FLG THEN                     ; * JMK01
         OPEN '','BILLDATA.QV.KEYED' TO F.BILLDATA ELSE      ; * JMK01
            OPEN 'VOC' TO F.VOC ELSE     ; * JMK01
               CALL OPEN.ABORT('VOC',PROG.NAME)    ; * JMK01
            END                          ; * JMK01
            READ BILLDATA.REC FROM F.VOC,"BILLDATA" ELSE     ; * JMK01
               CALL ELINE('UNABLE TO OPEN "VOC BILLDATA"')   ; * JMK01
               STOP                      ; * JMK01
            END                          ; * JMK01
            BILLDATA.REC<2>:='\QlikView\KEYED'     ; * JMK01
            WRITE BILLDATA.REC ON F.VOC,"BILLDATA.QV.KEYED" ELSE       ; * JMK01
               CALL ELINE('UNABLE TO WRITE "BILLDATA.QV.KEYED"')       ; * JMK01
               STOP                      ; * JMK01
            END                          ; * JMK01
            OPEN '','BILLDATA.QV.KEYED' TO F.BILLDATA ELSE   ; * JMK01
               CALL ELINE('UNABLE TO OPEN "BILLDATA.QV.KEYED"')        ; * JMK01
               STOP                      ; * JMK01
            END                          ; * JMK01
         END                             ; * JMK01
         QV.ARRAY<1,1>='UserID'          ; * JMK01
         QV.ARRAY<1,2>='Name'            ; * JMK01
         QV.ARRAY<1,3>='Loc.'            ; * JMK01
         QV.ARRAY<1,4>='Dept.'           ; * JMK01
         QV.ARRAY<1,5>='TC Hours Worked'           ; * JMK01
         QV.ARRAY<1,6>='Non FP Hours Worked'       ; * JMK01
         QV.ARRAY<1,7>='FP Hours Worked'           ; * JMK01
         QV.ARRAY<1,8>='Chars. Keyed'    ; * JMK01
         QV.ARRAY<1,9>='Chars Verified'  ; * JMK01
         QV.ARRAY<1,10>='Total Chars'    ; * JMK01
         QV.ARRAY<1,11>='Avg. Chars/FP HR'         ; * JMK01
         QV.ARRAY<1,12>='Bills Keyed'    ; * JMK01
         QV.ARRAY<1,13>='Bills Verified'           ; * JMK01
         QV.ARRAY<1,14>='Total Bills'    ; * JMK01
         QV.ARRAY<1,15>='Avg. Bills/FP HR'         ; * JMK01
         QV.ARRAY<1,16>='Bill Type'      ; * JMK01
         QV.ARRAY<1,17>='Date'           ; * JMK01
      END                                ; * JMK01

*
      STMT = 'SELECT EMP.HR.PERF WITH DATE GE "':OCONV(BEG.DATE,'D2/'):'"'
      STMT := ' AND WITH DATE LE "':OCONV(END.DATE,'D2/'):'"'
*
      CRT @(10,12) : " Now selecting Records ":@(-4)
      EXECUTE STMT RTNLIST EMP.LIST CAPTURING OUTPUT
*
      EMP.ITEMS = @SELECTED
      IF EMP.ITEMS LE 0 THEN
         IF QV.FLG ELSE                  ; * JMK01
            CALL ELINE('ERROR - No RECORDS on file.')
         END                             ; * JMK01
         STOP
      END
*
      CRT @(10,14) : " Now processing selected Records ":@(-4)
*
      COUNTER.1=0
      PER.1=0
*
      LOOP
         READNEXT ID.EMP.HR.PERF FROM EMP.LIST ELSE ID.EMP.HR.PERF='DONE'
      UNTIL ID.EMP.HR.PERF='DONE' DO
         COUNTER.1=COUNTER.1+1
         READ HR.PERF.REC FROM F.EMP.HR.PER, ID.EMP.HR.PERF THEN
            HR.USER = FIELD(ID.EMP.HR.PERF,"*",1)
            IF HR.USER = "EDI" THEN GOTO SKIP      ; * SKIP
            W.PREFIX = FIELD(HR.USER,":",1)
            IF W.PREFIX = "EDI" THEN EDI.FLAG = "1" ELSE EDI.FLAG = "0"
            STP = LEN(HR.USER)-4
            W.SUFFIX = HR.USER[STP,5]
            IF W.SUFFIX = "AUDIT" THEN   ; * Currently Myra or Mary have logons ending in AUDIT
               HR.USER = HR.USER[1,STP-1]
            END

*           IF HR.USER = "EDI" THEN HR.USER = "DAVID"
            HR.DATE = FIELD(ID.EMP.HR.PERF,"*",2)
            HR.HOUR = FIELD(ID.EMP.HR.PERF,"*",3)
            HR.BILLS.ENTERED = HR.PERF.REC<1>
            HR.BILLS.VERIFIED = HR.PERF.REC<2>
            HR.BILLS.TOT = HR.BILLS.ENTERED + HR.BILLS.VERIFIED
            HR.CHARS.ENTERED = HR.PERF.REC<8>
            HR.CHARS.VERIFIED = HR.PERF.REC<9>
            HR.CHARS.TOT = HR.CHARS.ENTERED + HR.CHARS.VERIFIED
*
            IF EDI.FLAG THEN HR.USER = FIELD(HR.USER,":",2)
*
            READ CTRL.REC FROM F.BCTRL, HR.USER ELSE CTRL.REC = ""
            DEPT = CTRL.REC<15>
*
            IF DEPT = "FP" OR DEPT = "LG" THEN
               NULL
            END ELSE
               GOTO SKIP                 ; * Only Freight Payment
            END
*
            HR.LOC = CTRL.REC<23>
*
            USER.NAME = CTRL.REC<13>
*
            IF HR.LOC = "" THEN HR.LOC = "99999"   ; * Dummy number
            IF EDI.FLAG THEN
               BILL.TYPE = "EDI"
            END ELSE
               BILL.TYPE = "PAPER"
            END
*
            ID.WORK = BILL.TYPE:"*":HR.LOC:"*":HR.USER
*
            READ WORK.REC FROM F.WORK, ID.WORK ELSE WORK.REC = ""
            WORK.REC<1> += HR.BILLS.ENTERED
            WORK.REC<2> += HR.BILLS.VERIFIED
            WORK.REC<3> += HR.BILLS.TOT
            WORK.REC<8> += HR.CHARS.ENTERED
            WORK.REC<9> += HR.CHARS.VERIFIED
            WORK.REC<11> += HR.CHARS.TOT
            WORK.REC<13> = USER.NAME
            WORK.REC<15> = DEPT
            WORK.REC<16> = EDI.FLAG
            WORK.REC<17> = BILL.TYPE
*
            WRITE WORK.REC ON F.WORK, ID.WORK
*
         END
*
SKIP:
         CALL PROG.BAR(20,COUNTER.1,EMP.ITEMS,PER.1)
      REPEAT
*
      HLINE1 := " ":BEG.DATE 'D2/':" - ":END.DATE 'D2/'
      XLS.ARRAY = HLINE1
      XLS.ARRAY<2> = HLINE2
      XLS.ARRAY<3> = HLINE3
*
      XLS.ARRAY2 = HLINE2
*
      SUMMARY.ARRAY = ""
      SUMMARY.ROW.CNT = 1
*
*
      STMT = \SSELECT FBWORK\:CH.NUM
**     STMT := \ BY-DSND BILL.TYPE BY LOCATION BY TOTAL.BILLS WITH TOTAL.BILLS GE "25"\
      STMT := \ BY-DSND BILL.TYPE BY LOCATION BY TOTAL.CHARS\
*
      CRT @(10,16) : " Now selecting Records ":@(-4)
      EXECUTE STMT RTNLIST STAT.LIST CAPTURING OUTPUT
*

      STAT.ITEMS = @SELECTED
      IF STAT.ITEMS LE 0 THEN
         IF QV.FLG ELSE                  ; * JMK01
            CALL ELINE('ERROR - No RECORDS on WORK file.')
         END                             ; * JMK01
         STOP
      END
*
      CRT @(10,14) : " Now processing selected Records ":@(-4)
*
      COUNTER.1=0
      PER.1=0
*
      LOOP
         READNEXT ID.WORK FROM STAT.LIST ELSE ID.WORK = 'DONE'
      UNTIL ID.WORK = 'DONE' DO
         READ WORK.REC FROM F.WORK, ID.WORK ELSE WORK.REC = ""
         GOSUB BUILD.DETAIL.LINE
      REPEAT
*
* Calculate Totals
*
      LOC.TOT.EMP.HOURS = 0
      LOC.TOT.CHARS.ENTERED = 0
      LOC.TOT.BILLS.ENTERED = 0
      LOC.TOT.BILLS.VERIFIED = 0
*
      TYPE.TOT.EMP.HOURS = 0
      TYPE.TOT.CHARS.ENTERED = 0
      TYPE.TOT.BILLS.ENTERED = 0
      TYPE.TOT.BILLS.VERIFIED = 0
*
      LOC = XLS.ARRAY2<2,2>
      LOC.HOLD = LOC
*
      TYPE = XLS.ARRAY2<2,TYPE.COL>
      TYPE.HOLD = TYPE
*
      ST.ROW = DCOUNT(XLS.ARRAY,@AM) + 1           ; * Skip to first row after headings
      NEW.ROW.CNT = ST.ROW
      LAST.DET.ROW = NEW.ROW.CNT
      LAST.DET.ROW2 = NEW.ROW.CNT
*
      GT.TOTALS.ARRAY = ""
      GT.TOTALS.ROW.TO.USE = 1
*
      TYPE.TOTALS.ARRAY = ""
      TYPE.TOTALS.ROW.TO.USE = 1
*
      N.LINES = DCOUNT(XLS.ARRAY2,@AM)
      FOR I.LINE = 2 TO N.LINES
         W.LINE = XLS.ARRAY2<I.LINE>
*
         LOC = XLS.ARRAY2<I.LINE,2>
         TYPE = XLS.ARRAY2<I.LINE,TYPE.COL>

*
         W.EMP.HOURS = XLS.ARRAY2<I.LINE,6>
         IF W.EMP.HOURS = "" THEN W.EMP.HOURS = "0"
         W.CHARS.ENTERED = XLS.ARRAY2<I.LINE,7>
         W.CHARS.VERIFIED = XLS.ARRAY2<I.LINE,8>
*
         W.BILLS.ENTERED = XLS.ARRAY2<I.LINE,10>
         W.BILLS.VERIFIED = XLS.ARRAY2<I.LINE,11>
*
         IF TYPE EQ TYPE.HOLD THEN
            IF NUM(W.EMP.HOURS) THEN TYPE.TOT.EMP.HOURS += W.EMP.HOURS
            IF NUM(W.CHARS.ENTERED) THEN TYPE.TOT.CHARS.ENTERED += W.CHARS.ENTERED
            IF NUM(W.BILLS.ENTERED) THEN TYPE.TOT.BILLS.ENTERED += W.BILLS.ENTERED
            IF NUM(W.BILLS.VERIFIED) THEN TYPE.TOT.BILLS.VERIFIED += W.BILLS.VERIFIED
            LAST.DET.ROW = NEW.ROW.CNT
            IF LOC EQ LOC.HOLD THEN
               IF NUM(W.EMP.HOURS) THEN LOC.TOT.EMP.HOURS += W.EMP.HOURS
               IF NUM(W.CHARS.ENTERED) THEN LOC.TOT.CHARS.ENTERED += W.CHARS.ENTERED
               IF NUM(W.BILLS.ENTERED) THEN LOC.TOT.BILLS.ENTERED += W.BILLS.ENTERED
               IF NUM(W.BILLS.VERIFIED) THEN LOC.TOT.BILLS.VERIFIED += W.BILLS.VERIFIED
               LAST.DET.ROW = NEW.ROW.CNT
            END ELSE
               IF NUM(LOC.TOT.EMP.HOURS) AND LOC.TOT.EMP.HOURS NE "0" THEN
                  TOT.BILLS.PER.HR = LOC.TOT.BILLS.ENTERED/LOC.TOT.EMP.HOURS
                  TOT.BILLS.VER.PER.HR = LOC.TOT.BILLS.VERIFIED/LOC.TOT.EMP.HOURS
                  TOT.CHARS.PER.HR = LOC.TOT.CHARS.ENTERED/LOC.TOT.EMP.HOURS
               END ELSE
                  TOT.BILLS.PER.HR = "0"
                  TOT.BILLS.VER.PER.HR = "0"
                  TOT.CHARS.PER.HR = "0"
               END
*
               GOSUB BUILD.LOC.TOTAL.LINE
*
               LOC.HOLD = LOC
*
               IF NUM(W.EMP.HOURS) THEN LOC.TOT.EMP.HOURS = W.EMP.HOURS
               IF NUM(W.CHARS.ENTERED) THEN LOC.TOT.CHARS.ENTERED = W.CHARS.ENTERED
               IF NUM(W.BILLS.ENTERED) THEN LOC.TOT.BILLS.ENTERED = W.BILLS.ENTERED
               IF NUM(W.BILLS.VERIFIED) THEN LOC.TOT.BILLS.VERIFIED = W.BILLS.VERIFIED
            END
         END ELSE
            IF NUM(TYPE.TOT.EMP.HOURS) AND TYPE.TOT.EMP.HOURS NE "0" THEN
               TOT.BILLS.PER.HR = TYPE.TOT.BILLS.ENTERED/TYPE.TOT.EMP.HOURS
               TOT.BILLS.VER.PER.HR = TYPE.TOT.BILLS.VERIFIED/TYPE.TOT.EMP.HOURS
               TOT.CHARS.PER.HR = TYPE.TOT.CHARS.ENTERED/TYPE.TOT.EMP.HOURS
            END ELSE
               TOT.BILLS.PER.HR = "0"
               TOT.BILLS.VER.PER.HR = "0"
               TOT.CHARS.PER.HR = "0"
            END
*
            GOSUB BUILD.LOC.TOTAL.LINE
            GOSUB BUILD.TYPE.TOTAL.LINE
*
            LOC.HOLD = LOC
            TYPE.HOLD = TYPE
*
            IF NUM(W.EMP.HOURS) THEN TYPE.TOT.EMP.HOURS = W.EMP.HOURS
            IF NUM(W.CHARS.ENTERED) THEN TYPE.TOT.CHARS.ENTERED = W.CHARS.ENTERED
            IF NUM(W.BILLS.ENTERED) THEN TYPE.TOT.BILLS.ENTERED = W.BILLS.ENTERED
            IF NUM(W.BILLS.VERIFIED) THEN TYPE.TOT.BILLS.VERIFIED = W.BILLS.VERIFIED
         END
         W.LINE<1,TOTAL.COL.NO> = GT.TOTALS.ROW.TO.USE
*
         LAST.DET.ROW2 = NEW.ROW.CNT
*
         XLS.ARRAY<NEW.ROW.CNT> = W.LINE ; NEW.ROW.CNT += 1
      NEXT I.LINE
*
      IF LOC.TOT.EMP.HOURS = "" THEN LOC.TOT.EMP.HOURS = 0
      IF NUM(LOC.TOT.EMP.HOURS) THEN NULL ELSE LOC.TOT.EMP.HOURS = 0
*
      IF LOC.TOT.EMP.HOURS = "" OR LOC.TOT.EMP.HOURS = 0 THEN
         TOT.BILLS.PER.HR = ""
         TOT.BILLS.VER.PER.HR = ""
         TOT.CHARS.PER.HR = ""
      END ELSE
         TOT.BILLS.PER.HR = LOC.TOT.BILLS.ENTERED/LOC.TOT.EMP.HOURS
         TOT.BILLS.VER.PER.HR = LOC.TOT.BILLS.VERIFIED/LOC.TOT.EMP.HOURS
         TOT.CHARS.PER.HR = LOC.TOT.CHARS.ENTERED/LOC.TOT.EMP.HOURS
      END
*
      GOSUB BUILD.LOC.TOTAL.LINE
*
      GOSUB BUILD.TYPE.TOTAL.LINE
*
      GOSUB BUILD.GRAND.TOTAL.LINE
*
      GOSUB RESET.ROW.CALCS              ; * Reset row numbers after insertion of totals messed up row counter
*
      XLS.ARRAY<-1> = " "
      XLS.ARRAY<-1> = " "
      XLS.ARRAY<-1> = " "
      XLS.ARRAY<-1> = "Summary :"
*
      SUMMARY.ROW = DCOUNT(XLS.ARRAY,@AM) + 1
      SUMMARY.ROW.ST = SUMMARY.ROW
*
      N.SUM = DCOUNT(NEW.SUMMARY.ARRAY,@AM)
*
      SUMMARY.GT.ROW = SUMMARY.ROW + (N.SUM-1)
*
      GT.LINE = NEW.SUMMARY.ARRAY<N.SUM>
      GT.BILL.TOTAL = GT.LINE<1,TOT.BILLS.COL>
*
      PERC.CALC.ROW.LET = COL.HEADERS[TOT.CHARS.COL,1]
      PERC2.CALC.ROW.LET = COL.HEADERS[BILLS.KEYED.COL,1]

      TOTAL.ROW.LET = COL.HEADERS[TOT.BILLS.COL,1]
*
      FOR I.SUM = 1 TO (N.SUM-1)
         XLS.ARRAY<SUMMARY.ROW> = NEW.SUMMARY.ARRAY<I.SUM>
         PERC.CALC.FORMULA = "=":PERC.CALC.ROW.LET:SUMMARY.ROW:"/(":PERC.CALC.ROW.LET:SUMMARY.GT.ROW:")"
         XLS.ARRAY<SUMMARY.ROW,CHAR.PERC.COL.NO> = PERC.CALC.FORMULA
         PERC2.CALC.FORMULA = "=":PERC2.CALC.ROW.LET:SUMMARY.ROW:"/(":PERC2.CALC.ROW.LET:SUMMARY.GT.ROW:")"
         XLS.ARRAY<SUMMARY.ROW,BILLS.PERC.COL.NO> = PERC2.CALC.FORMULA
         SUMMARY.ROW.END = SUMMARY.ROW
         SUMMARY.ROW += 1
      NEXT I.SUM
*
      N.GT.COLS = DCOUNT(GT.LINE,@VM)
      XLS.ARRAY<SUMMARY.ROW,TYPE.COL> = ""         ; * Clear one cell
*
      FOR I.COL = 1 TO BILLS.PERC.COL.NO
         IF I.COL LE TC.HOURS.COL THEN
            GT.STR = NEW.SUMMARY.ARRAY<N.SUM,I.COL>
            IF GT.STR NE "GT" THEN XLS.ARRAY<SUMMARY.ROW,I.COL> = GT.STR
         END ELSE
            GT.COL.LET = COL.HEADERS[I.COL,1]
            BEGIN CASE
               CASE I.COL = AVG.CHARS.COL
                  GT.FORMULA = "=":GT.COL.LET:SUMMARY.ROW.ST:"/":GT.COL.LET:SUMMARY.ROW.END
                  TOT.CHARS.LET = COL.HEADERS[TOT.CHARS.COL,1]
                  FP.HRS.LET = COL.HEADERS[FP.HRS.COL,1]
                  CHARS.PER.HR.STR = "=":TOT.CHARS.LET:SUMMARY.ROW:"/":FP.HRS.LET:SUMMARY.ROW
                  GT.FORMULA = CHARS.PER.HR.STR
               CASE I.COL = AVG.BILLS.COL
                  GT.FORMULA = "=":GT.COL.LET:SUMMARY.ROW.ST:"/":GT.COL.LET:SUMMARY.ROW.END
                  BILLS.KEYED.LET = COL.HEADERS[BILLS.KEYED.COL,1]
                  FP.HRS.LET = COL.HEADERS[FP.HRS.COL,1]
                  BILLS.PER.HR.STR = "=":BILLS.KEYED.LET:SUMMARY.ROW:"/":FP.HRS.LET:SUMMARY.ROW
                  GT.FORMULA = BILLS.PER.HR.STR
               CASE 1
                  GT.FORMULA = "=SUM(":GT.COL.LET:SUMMARY.ROW.ST:":":GT.COL.LET:SUMMARY.ROW.END:")"
            END CASE
            XLS.ARRAY<SUMMARY.ROW,I.COL> = GT.FORMULA
         END
      NEXT I.COL
*
* Clear out work Columns and some total related cells
*
      N.ROWS = DCOUNT(XLS.ARRAY,@AM)
*
      FOR I.ROW = 1 TO N.ROWS
         N.COLS = DCOUNT(XLS.ARRAY<I.ROW>,@VM)
         FOR I.COL = 1 TO N.COLS
            IF I.COL GE TOTAL.COL.NO THEN
               XLS.ARRAY<I.ROW,I.COL> = ""
            END
            IF I.COL = 1 THEN
               CHECK.STRING = XLS.ARRAY<I.ROW,I.COL>
               IF INDEX(CHECK.STRING,"Total",1) THEN
                  XLS.ARRAY<I.ROW,LOC.COL> = ""
               END
            END
         NEXT I.COL
      NEXT I.ROW
*
      IF QV.FLG THEN                     ; * JMK01
         NATT=DCOUNT(QV.ARRAY,@AM)       ; * JMK01
         IF NATT > 1 THEN                ; * JMK01
            CONVERT @VM TO CHAR(9) IN QV.ARRAY     ; * JMK01
            W.BEG.DATE = OCONV(BEG.DATE,"D2/")     ; * JMK01
            CONVERT "/" TO "" IN W.BEG.DATE        ; * JMK01
            ID.XLS = "FB_KEYED_":W.BEG.DATE:".XLS"           ; * JMK01
            WRITE QV.ARRAY ON F.BILLDATA, ID.XLS   ; * JMK01
         END                             ; * JMK01
      END ELSE                           ; * JMK01
         CONVERT @VM TO CHAR(9) IN XLS.ARRAY
*
         W.BEG.DATE = OCONV(BEG.DATE,"D2/")
         CONVERT "/" TO "" IN W.BEG.DATE
         W.END.DATE = OCONV(END.DATE,"D2/")
         CONVERT "/" TO "" IN W.END.DATE
         ID.XLS = "FB_KEYED_":W.BEG.DATE:"_":W.END.DATE:".XLS"
         WRITE XLS.ARRAY ON F.BILLDATA, ID.XLS
*
*
         CONVERT @VM TO CHAR(9) IN XLS.ARRAY2
*
         ID.XLS2 = "FB_KEYED2_":W.BEG.DATE:"_":W.END.DATE:".XLS"
         WRITE XLS.ARRAY2 ON F.BILLDATA, ID.XLS2
*
         CALL ELINE("File ":ID.XLS:" may be found in your own U: drive directory")
      END                                ; * JMK01
*
* Begin GRB01
      VIN1=""
      VIN1<1> = PROG.NAME
      VIN1<2> = USER
      VIN1<3> = SYSTEM(18)
      VIN1<4> = "E"
      CALL PROGTRACK(VIN1,VOUT1)
* End GRB01
      STOP
*
CALC.EMP.HOURS:
*
      PAID.HRS = ""
      DAYS = ""
      TIME.IN7 = ""
      TIME.OUT8 = ""
      TIME.QTY9 = ""
      TIME.IN10 = ""
      TIME.OUT11 = ""
*
      L.END.DATE = END.DATE + 7          ; * Go ahead in time to catch next Friday date
*
      FOR IDT = BEG.DATE TO L.END.DATE
         ID.TCW = HR.USER:"*":IDT
         READ DTC.WEEKLY FROM F.TC.WEEKLY, ID.TCW THEN
            WEEK.PAID.HRS = DTC.WEEKLY<2>
            IF PAID.HRS = "" THEN
               PAID.HRS = DTC.WEEKLY<4>
               DAYS = DTC.WEEKLY<5>
               TIME.IN7 = DTC.WEEKLY<7>
               TIME.OUT8 = DTC.WEEKLY<8>
               TIME.QTY9 = DTC.WEEKLY<9>
               TIME.IN10 = DTC.WEEKLY<10>
               TIME.OUT11 = DTC.WEEKLY<11>
            END ELSE
               PAID.HRS = PAID.HRS :@VM: DTC.WEEKLY<4>
               DAYS = DAYS :@VM: DTC.WEEKLY<5>
               TIME.IN7 = TIME.IN7 :@VM: DTC.WEEKLY<7>
               TIME.OUT8 = TIME.OUT8 :@VM: DTC.WEEKLY<8>
               TIME.QTY9 = TIME.QTY9 :@VM: DTC.WEEKLY<9>
               TIME.IN10 = TIME.IN10 :@VM: DTC.WEEKLY<10>
               TIME.OUT11 = TIME.OUT11 :@VM: DTC.WEEKLY<11>
            END
         END
      NEXT IDT
*
*
      WEEK.TOT.TIME = 0
      DAY.TOT.TIME = 0
      DAY.PAID.HRS = 0
      TODAY.TOT.TIME = 0
      REQUIRED.TIME.WTD = 0              ; * Hours required for the week up until yesterday (Hours for Week till yesterday)
      T.DAY.POS = OCONV(TODAY,"DW")
      DAY.TODAY = T.DAY.POS
      N.DAYS = DCOUNT(DAYS,@VM)
      FOR I.DAY = 1 TO N.DAYS
         W.DATE = DAYS<1,I.DAY>
         IF W.DATE GE BEG.DATE AND W.DATE LE END.DATE THEN
            NULL
         END ELSE
            GOTO SKIP.DATE
         END
         W.DAY.POS = OCONV(W.DATE,"DW")
         W.DAY = DAY.STR[W.DAY.POS,1]
         IF W.DATE NE TODAY THEN
            N.PERS = DCOUNT(TIME.IN7<1,I.DAY>,@SVM)
            FOR I.PER = 1 TO N.PERS
               IN.DIFF = TIME.IN10<1,I.DAY,I.PER> - TIME.IN7<1,I.DAY,I.PER>
               OUT.DIFF = TIME.OUT11<1,I.DAY,I.PER> - TIME.OUT8<1,I.DAY,I.PER>
               NET.DIFF = IN.DIFF + OUT.DIFF
               IF TIME.QTY9<1,I.DAY,I.PER> GT "0" THEN
                  WEEK.TOT.TIME += TIME.QTY9<1,I.DAY,I.PER>
                  TODAY.TOT.TIME += TIME.QTY9<1,I.DAY,I.PER>
               END
            NEXT I.PER
            IF TODAY.TOT.TIME GT "0" THEN
               IF W.DAY NE "S" THEN REQUIRED.TIME.WTD += (8 * 60 * 60)           ; * Hours required for the week up until yesterday
            END
         END ELSE
            N.PERS = DCOUNT(TIME.IN7<1,I.DAY>,@SVM)
            DAY.PAID.HRS = 0
            FOR I.PER = 1 TO N.PERS
               W.DAY.TOT.TIME = 0
               ST.TIME = TIME.IN7<1,I.DAY,I.PER>
               END.TIME = TIME.OUT8<1,I.DAY,I.PER>
               IF END.TIME = "" THEN END.TIME = TIME()
               DIFF.TIME = TIME.QTY9<1,I.DAY,I.PER>
               IF DIFF.TIME = "" THEN
                  DIFF.TIME = END.TIME - ST.TIME
               END
               DAY.TOT.TIME += DIFF.TIME
               DAY.PAID.HRS = PAID.HRS<1,I.DAY>
            NEXT I.PER
         END
*
SKIP.DATE:
*
      NEXT I.DAY
*
      RETURN
*
BUILD.DETAIL.LINE:
*
      HR.BILL.TYPE = FIELD(ID.WORK,"*",1)
      HR.LOC = FIELD(ID.WORK,"*",2)
      HR.USER = FIELD(ID.WORK,"*",3)
*
      READV LOC.DESC FROM F.LOCATIONS, HR.LOC, 1 ELSE LOC.DESC = HR.LOC
      LOC.DESC = FIELD(LOC.DESC,",",1)
      LOC.DESC = TRIM(OCONV(LOC.DESC,"MCU"))
      CONVERT " " TO "" IN LOC.DESC
*
      USER.NAME = WORK.REC<13>
      DEPT = WORK.REC<15>
      EDI.FLAG = WORK.REC<16>
*
*IF EDI.FLAG THEN HR.LOC = FIELD(HR.LOC,":",2)
*
      READV LOC.DESC FROM F.LOCATIONS, HR.LOC, 1 ELSE LOC.DESC = HR.LOC
      LOC.DESC = FIELD(LOC.DESC,",",1)
      LOC.DESC = TRIM(OCONV(LOC.DESC,"MCU"))
      CONVERT " " TO "" IN LOC.DESC
*
      BEGIN CASE
         CASE LOC.DESC = "SHREVEPORT"
            LOC.DESC = "SHV"
         CASE LOC.DESC = "PITTSBURGH"
            LOC.DESC = "PIT"
         CASE LOC.DESC = "DALLAS"
            LOC.DESC = "DAL"
         CASE LOC.DESC = "TULSA"
            LOC.DESC = "TUL"
         CASE 1
            LOC.DESC = ""
      END CASE
*
* IF EDI.FLAG THEN LOC.DESC = LOC.DESC:" - EDI"
*
*     IF USER='MKERBOW' THEN DEBUG

      ID.TCW = HR.USER:"*":END.DATE
      READ TCW.REC FROM F.TC.WEEKLY, ID.TCW ELSE TCW.REC = ""
*
      EMP.SECONDS.ONE = TCW.REC<1>
      EMP.MINS.ONE = EMP.SECONDS.ONE/60
      EMP.HOURS.ONE = EMP.MINS.ONE/60
*
      GOSUB CALC.EMP.HOURS
*
      EMP.SECONDS = WEEK.TOT.TIME
*
      EMP.MINS = EMP.SECONDS/60
      EMP.HOURS = EMP.MINS/60
*
      HR.BILLS.ENTERED = WORK.REC<1>
      HR.BILLS.VERIFIED = WORK.REC<2>
      HR.BILLS.TOT = WORK.REC<3>
      HR.CHARS.ENTERED = WORK.REC<8>
      HR.CHARS.VERIFIED = WORK.REC<9>
      HR.CHARS.TOT = WORK.REC<11>
*
      IF EMP.HOURS NE 0 THEN
         BILLS.PER.HR = HR.BILLS.ENTERED/EMP.HOURS
         BILLS.VER.PER.HR = HR.BILLS.VERIFIED/EMP.HOURS
         CHARS.PER.HR = HR.CHARS.ENTERED/EMP.HOURS
      END ELSE
         BILLS.PER.HR = 0
         BILLS.VER.PER.HR = 0
         CHARS.PER.HR = 0
      END
*
      THIS.ROW = DCOUNT(XLS.ARRAY2,@AM) + 1
*
      QV.LINE=''                         ; * JMK01
      DET.COL = 1
      XLINE = ""
      XLINE<1,DET.COL> = HR.USER:" - ":USER.NAME
      QV.LINE<1,1>=HR.USER               ; * JMK01
      QV.LINE<1,2>=USER.NAME             ; * JMK01
      DET.COL += 1
      XLINE<1,DET.COL> = LOC.DESC
      QV.LINE<1,3>=LOC.DESC              ; * JMK01
      DET.COL += 1
      XLINE<1,DET.COL> = DEPT
      QV.LINE<1,4>=DEPT                  ; * JMK01
*
* TC Hours Worked
*
      DET.COL += 1
      IF EMP.HOURS = "" OR EMP.HOURS = "0" THEN EMP.HOURS = "0.001"    ; * Dummy value to prevent DIV by zero error on Spreadsheet
      TC.HRS.WORKED=OCONV(EMP.HOURS*100,"MR2")     ; * JMK01
      XLINE<1,DET.COL> = TC.HRS.WORKED
      TC.HRS.COL = DET.COL
      QV.LINE<1,5>=TC.HRS.WORKED         ; * JMK01
*
* Non FP Hours Worked
*
      DET.COL += 1
*
      XLINE<1,DET.COL> = "0"             ; * This stays and is for the user to enter some time here for non FP related activities ; * JMK01
      BEGIN CASE                         ; * JMK01
         CASE HR.USER='CMCALLISTER'      ; * JMK01
            NFP.FACTOR=10                ; * JMK01
         CASE HR.USER='CWARD'            ; * JMK01
            NFP.FACTOR=50                ; * JMK01
         CASE HR.USER='JMHILL'           ; * JMK01
            NFP.FACTOR=35                ; * JMK01
         CASE HR.USER='KJOHNSON'         ; * JMK01
            NFP.FACTOR=20                ; * JMK01
         CASE HR.USER='MYRA'             ; * JMK01
            NFP.FACTOR=98                ; * JMK01
         CASE HR.USER='MARY'             ; * JMK01
            NFP.FACTOR=90                ; * JMK01
         CASE HR.USER='SMICHALIK'        ; * JMK01
            NFP.FACTOR=10                ; * JMK01
         CASE HR.USER='SROSALIES'        ; * JMK01
            NFP.FACTOR=85                ; * JMK01
         CASE 1                          ; * JMK01
            NFP.FACTOR=0                 ; * JMK01
      END CASE                           ; * JMK01
      NFP.HRS.WORKED=OCONV(TC.HRS.WORKED*NFP.FACTOR,'MR2')   ; * JMK01
      XLINE<1,DET.COL> = NFP.HRS.WORKED  ; * This stays and is for the user to enter some time here for non FP related activities ; * JMK01
*
      NFP.HRS.COL = DET.COL
*     NFP.HRS.WORKED='0'                 ; * JMK01 ; * JMK01
      QV.LINE<1,6>=NFP.HRS.WORKED        ; * JMK01
*
* FP Hours Worked
*
      DET.COL += 1
      TC.HRS.LET = COL.HEADERS[TC.HRS.COL,1]
      NFP.HRS.LET = COL.HEADERS[NFP.HRS.COL ,1]
      FP.HRS.STR = "=":TC.HRS.LET:THIS.ROW:"-":NFP.HRS.LET:THIS.ROW
      XLINE<1,DET.COL> = FP.HRS.STR
      FP.HRS.COL = DET.COL
      QV.LINE<1,7>=TC.HRS.WORKED-NFP.HRS.WORKED    ; * JMK01
*
* Chars Keyed
*
      DET.COL += 1
      XLINE<1,DET.COL> = HR.CHARS.ENTERED
      CHARS.ENTERED.COL = DET.COL
      QV.LINE<1,8>=HR.CHARS.ENTERED      ; * JMK01
*
* Chars Verified
*
      DET.COL += 1
      XLINE<1,DET.COL> = HR.CHARS.VERIFIED
      CHARS.VERIFIED.COL = DET.COL
      QV.LINE<1,9>=HR.CHARS.VERIFIED     ; * JMK01
*
* Total Chars Entered & Verified
*
      DET.COL += 1
      CHARS.ENTERED.LET = COL.HEADERS[CHARS.ENTERED.COL,1]
      CHARS.VERIFIED.LET = COL.HEADERS[CHARS.VERIFIED.COL,1]
      HR.TOT.CHARS.STR = "=":CHARS.ENTERED.LET:THIS.ROW:"+":CHARS.VERIFIED.LET:THIS.ROW
      XLINE<1,DET.COL> = HR.TOT.CHARS.STR
      TOT.CHARS.COL = DET.COL
      QV.LINE<1,10>=HR.CHARS.ENTERED+HR.CHARS.VERIFIED       ; * JMK01
*
* Avg. Chars/FP HR - Total
*
      DET.COL += 1
      FP.HRS.LET = COL.HEADERS[FP.HRS.COL,1]
      TOT.CHARS.LET = COL.HEADERS[TOT.CHARS.COL,1]
      CHARS.PER.HR.STR = "=IFERROR(":TOT.CHARS.LET:THIS.ROW:"/":FP.HRS.LET:THIS.ROW:',0)'  ; * JMK01
      XLINE<1,DET.COL> = CHARS.PER.HR.STR
      IF TC.HRS.WORKED+0=0 THEN          ; * JMK01
         QV.LINE<1,11>='0'               ; * JMK01
      END ELSE                           ; * JMK01
         QV.LINE<1,11>=(HR.CHARS.ENTERED+HR.CHARS.VERIFIED)/TC.HRS.WORKED        ; * JMK01
      END                                ; * JMK01
*
* Bills Keyed
*
      DET.COL += 1
      XLINE<1,DET.COL> = HR.BILLS.ENTERED
      BILLS.ENTERED.COL = DET.COL
      QV.LINE<1,12>=HR.BILLS.ENTERED     ; * JMK01
*
* Bills Verified
*
      DET.COL += 1
      XLINE<1,DET.COL> = HR.BILLS.VERIFIED
      BILLS.VERIFIED.COL = DET.COL
      QV.LINE<1,13>=HR.BILLS.VERIFIED    ; * JMK01
*
* Total Bills Entered & Verified
*
      DET.COL += 1
      BILL.TOT.COL = DET.COL
      BILLS.ENTERED.LET = COL.HEADERS[BILLS.ENTERED.COL,1]
      BILLS.VERIFIED.LET = COL.HEADERS[BILLS.VERIFIED.COL,1]
      HR.TOT.BILLS.STR = "=":BILLS.ENTERED.LET:THIS.ROW:"+":BILLS.VERIFIED.LET:THIS.ROW
      XLINE<1,DET.COL> = HR.TOT.BILLS.STR
      QV.LINE<1,14>=HR.BILLS.ENTERED+HR.BILLS.VERIFIED       ; * JMK01
*
* Avg. Bills Keyed/FP HR
*
      DET.COL += 1
      FP.HRS.LET = COL.HEADERS[FP.HRS.COL,1]
*NPR777      TOT.BILLS.KEYED.LET = COL.HEADERS[BILLS.KEYED.COL,1]
      TOT.BILLS.KEYED.LET = COL.HEADERS[TOT.BILLS.COL,1]
      BILLS.PER.HR.STR = "=IFERROR(":TOT.BILLS.KEYED.LET:THIS.ROW:"/":FP.HRS.LET:THIS.ROW:',0)'      ; * JMK01
      XLINE<1,DET.COL> = BILLS.PER.HR.STR
      IF TC.HRS.WORKED+0=0 THEN          ; * JMK01
         QV.LINE<1,15>='0'               ; * JMK01
      END ELSE                           ; * JMK01
         QV.LINE<1,15>=(HR.BILLS.ENTERED+HR.BILLS.VERIFIED)/TC.HRS.WORKED        ; * JMK01
      END                                ; * JMK01
*
* Percentage Column - Based on Total Characters keyed
*
      DET.COL += 1
      XLINE<1,DET.COL> = ""              ; * Calculated later
*
* Percentage Column - Based on Total Bills keyed
*
      DET.COL += 1
      XLINE<1,DET.COL> = ""              ; * Calculated later
*
* Bill type - PAPER or EDI
*
      DET.COL += 1
      XLINE<1,DET.COL> = HR.BILL.TYPE
      QV.LINE<1,16>=HR.BILL.TYPE         ; * JMK01
      QV.LINE<1,17>=BEG.DATE'D4/'        ; * JMK01
*
* Total Row to Use
*
      DET.COL += 1
      XLINE<1,DET.COL> = THIS.ROW        ; *  "Total Row to Use"
*
* Old Row Pos before totals inserted
*
      DET.COL += 1
      XLINE<1,DET.COL> = THIS.ROW        ; *  "Old Row Pos"
*
* Calc. Type - Used when rebuilding Excel Calc strings
*
      CALC.TYPE = "1"                    ; * Percentage calculated against total for Trans type e.g. "Paper" and the persons Location e.g. SHV
      DET.COL += 1
      XLINE<1,DET.COL> = CALC.TYPE
*
* Calc. Formula - Stores Excel Calc string
*
      DET.COL += 1
      XLINE<1,DET.COL> = ""
*
      XLS.ARRAY2<-1> = XLINE
      QV.ARRAY<-1>=QV.LINE               ; * JMK01

*
BUILD.DETAIL.END:*
*
      RETURN
*
RESET.ROW.CALCS:
*
* Build Percentage Calcs for total rows
*
*
      PERC.CALC.ROW.LET = COL.HEADERS[TOT.CHARS.COL,1]
      PERC2.CALC.ROW.LET = COL.HEADERS[BILLS.KEYED.COL,1]
*
      GT.PERC.STR = ""
      GT.PERC2.STR = ""
*
      NEW.SUMMARY.ARRAY = ""
*
      N.SUM = DCOUNT(SUMMARY.ARRAY,@AM)
      FOR I.SUM = 1 TO N.SUM
         CALC.LINE = SUMMARY.ARRAY<I.SUM>
         TOTAL.LOC = CALC.LINE<1,LOC.COL>
         TOTAL.TYPE = CALC.LINE<1,TYPE.COL>
         TOTAL.CALC.TYPE = CALC.LINE<1,CALC.TYPE.COL.NO>
*
         STOTAL.COL.NO = TOTAL.COL.NO
         STOTAL.ROW.NO = CALC.LINE<1,STOTAL.COL.NO>
*
         IF TOTAL.LOC NE "TT" THEN
            NEW.SUMMARY.ARRAY<-1> = CALC.LINE
         END
*
         PERC.CALC.ROW.LET = COL.HEADERS[TOT.CHARS.COL,1]
         PERC2.CALC.ROW.LET = COL.HEADERS[BILLS.KEYED.COL,1]
*
         PERC.DIVOSOR.ROW = ""
         BEGIN CASE
            CASE TOTAL.CALC.TYPE = 2
               PERC.STR = ""
               PERC2.STR = ""
               FOR J.SUM = I.SUM TO N.SUM
                  CALC.LINE2 = SUMMARY.ARRAY<J.SUM>
                  TOTAL.LOC2 = CALC.LINE2<1,LOC.COL>
                  TOTAL.TYPE2 = CALC.LINE2<1,TYPE.COL>
                  TOTAL.CALC.TYPE2 = CALC.LINE2<1,CALC.TYPE.COL.NO>
                  IF TOTAL.CALC.TYPE2 GT TOTAL.CALC.TYPE THEN
                     PERC.DIVOSOR.ROW = CALC.LINE2<1,TOT.CHARS.COL>
*
                     PERC.DIVOSOR.STR = CALC.LINE2<1,TOT.CHARS.COL>
                     PERC.DIVOSOR.STR = FIELD(PERC.DIVOSOR.STR,"=",2)
                     PERC2.DIVOSOR.STR = CALC.LINE2<1,BILLS.KEYED.COL>
                     PERC2.DIVOSOR.STR = FIELD(PERC2.DIVOSOR.STR,"=",2)
*
                     PERC.STR = "=":PERC.CALC.ROW.LET:STOTAL.ROW.NO:"/(":PERC.DIVOSOR.STR:")"
                     PERC2.DIVOSOR.ROW = CALC.LINE2<1,TOT.CHARS.COL>
                     PERC2.STR = "=":PERC2.CALC.ROW.LET:STOTAL.ROW.NO:"/(":PERC2.DIVOSOR.STR:")"

                     J.SUM = N.SUM
                  END
               NEXT J.SUM
               SUMMARY.ARRAY<I.SUM,CALC.FORMULA.COL.NO1> = PERC.STR
               SUMMARY.ARRAY<I.SUM,CALC.FORMULA.COL.NO2> = PERC2.STR
               XLS.ARRAY<STOTAL.ROW.NO,CHAR.PERC.COL.NO> = PERC.STR
               XLS.ARRAY<STOTAL.ROW.NO,BILLS.PERC.COL.NO > = PERC2.STR
*
            CASE TOTAL.CALC.TYPE = 3
               PERC.STR = ""
               PERC2.STR = ""
               FOR J.SUM = I.SUM TO N.SUM
                  CALC.LINE2 = SUMMARY.ARRAY<J.SUM>
                  TOTAL.LOC2 = CALC.LINE2<1,LOC.COL>
                  TOTAL.TYPE2 = CALC.LINE2<1,TYPE.COL>
                  TOTAL.CALC.TYPE2 = CALC.LINE2<1,CALC.TYPE.COL.NO>
                  IF TOTAL.CALC.TYPE2 GT TOTAL.CALC.TYPE THEN
                     PERC.DIVOSOR.ROW = CALC.LINE2<1,TOT.CHARS.COL>
                     PERC.STR = "=":PERC.CALC.ROW.LET:STOTAL.ROW.NO:"/(":PERC.CALC.ROW.LET:PERC.DIVOSOR.ROW:")"
*
                     PERC.DIVOSOR.ROW = CALC.LINE2<1,TOT.CHARS.COL>
*
                     PERC.DIVOSOR.STR = CALC.LINE2<1,TOT.CHARS.COL>
                     PERC.DIVOSOR.STR = FIELD(PERC.DIVOSOR.STR,"=",2)
                     PERC2.DIVOSOR.STR = CALC.LINE2<1,BILLS.KEYED.COL>
                     PERC2.DIVOSOR.STR = FIELD(PERC2.DIVOSOR.STR,"=",2)
*
                     PERC.STR = "=":PERC.CALC.ROW.LET:STOTAL.ROW.NO:"/(":PERC.DIVOSOR.STR:")"
                     PERC2.DIVOSOR.ROW = CALC.LINE2<1,TOT.CHARS.COL>
                     PERC2.STR = "=":PERC2.CALC.ROW.LET:STOTAL.ROW.NO:"/(":PERC2.DIVOSOR.STR:")"
*
                     IF GT.PERC.STR = "" THEN
                        CHAR.PERC.COL.LET = COL.HEADERS[CHAR.PERC.COL.NO,1]
                        GT.PERC.STR = "=":CHAR.PERC.COL.LET:STOTAL.ROW.NO
                     END ELSE
                        GT.PERC.STR := "+":CHAR.PERC.COL.LET:STOTAL.ROW.NO
                     END
                     IF GT.PERC2.STR = "" THEN
                        BILLS.PERC.COL.LET = COL.HEADERS[BILLS.PERC.COL.NO,1]
                        GT.PERC2.STR = "=":BILLS.PERC.COL.LET:STOTAL.ROW.NO
                     END ELSE
                        GT.PERC2.STR := "+":BILLS.PERC.COL.LET:STOTAL.ROW.NO
                     END
                     J.SUM = N.SUM
                  END
               NEXT J.SUM
               SUMMARY.ARRAY<I.SUM,CALC.FORMULA.COL.NO1> = PERC.STR
               SUMMARY.ARRAY<I.SUM,CALC.FORMULA.COL.NO2> = PERC2.STR
               XLS.ARRAY<STOTAL.ROW.NO,CHAR.PERC.COL.NO> = PERC.STR
               XLS.ARRAY<STOTAL.ROW.NO,BILLS.PERC.COL.NO > = PERC2.STR
            CASE TOTAL.CALC.TYPE = 4
               SUMMARY.ARRAY<I.SUM,CALC.FORMULA.COL.NO1> = GT.PERC.STR           ; * Should be 100.00 %
               SUMMARY.ARRAY<I.SUM,CALC.FORMULA.COL.NO2> = GT.PERC2.STR          ; * Should be 100.00 %
               XLS.ARRAY<STOTAL.ROW.NO,CHAR.PERC.COL.NO> = GT.PERC.STR           ; * Should be 100.00 %
               XLS.ARRAY<STOTAL.ROW.NO,BILLS.PERC.COL.NO > = GT.PERC2.STR        ; * Should be 100.00 %
         END CASE
      NEXT I.SUM
*
      N.ROWS = DCOUNT(XLS.ARRAY,@AM)
*
      FOR I.ROW = 4 TO N.ROWS
         CALC.LINE = XLS.ARRAY<I.ROW>
         IF CALC.LINE<1,2> NE "" THEN
***      FOR I.COL = 4 TO TOTAL.COL.NO
            FOR I.COL = 4 TO BILLS.PERC.COL.NO
               CALC.STRING = CALC.LINE<1,I.COL>
               IF NUM(CALC.STRING) OR CALC.STRING = "" THEN
                  NULL
               END ELSE
                  OLD.ROW = CALC.LINE<1,OLD.ROW.POS>
                  IF OLD.ROW NE "" AND NUM(OLD.ROW) THEN
                     CALC.STRING = CHANGE(CALC.STRING,OLD.ROW,I.ROW)
                     CALC.LINE<1,I.COL> = CALC.STRING
                  END
               END
            NEXT I.COL
*
            XLS.ARRAY<I.ROW> = CALC.LINE
*
            PERC.STR = ""
            PERC2.STR = ""
*
            CALC.STRING = TRIM(CALC.LINE<1,1>)
            IF CALC.STRING NE "" THEN
               IF INDEX(CALC.STRING,"Total",1) THEN
                  NULL
               END ELSE
                  T.ROW = CALC.LINE<1,TOTAL.COL.NO>          ; * Work column for holding the total to use in percentage calcs.
                  TOTAL.ROW = GT.TOTALS.ARRAY<T.ROW>
*
                  TOT.CHAR.SUM.STR = FIELD(XLS.ARRAY<TOTAL.ROW,TOT.CHARS.COL>,"=",2)
                  BILLS.KEYED.SUM.STR = FIELD(XLS.ARRAY<TOTAL.ROW,BILLS.KEYED.COL>,"=",2)
*
                  CL = COL.HEADERS[TOT.CHARS.COL,1]
                  PERC.STR = "=":CL:I.ROW:"/(":TOT.CHAR.SUM.STR:")"
                  XLS.ARRAY<I.ROW,CHAR.PERC.COL.NO> = PERC.STR
*
                  CL = COL.HEADERS[BILLS.KEYED.COL,1]
                  PERC2.STR = "=":CL:I.ROW:"/(":BILLS.KEYED.SUM.STR:")"
                  XLS.ARRAY<I.ROW,BILLS.PERC.COL.NO > = PERC2.STR
*
               END
            END
         END
      NEXT I.ROW
*
      RETURN
*
BUILD.LOC.TOTAL.LINE:
*
      XLS.ARRAY<NEW.ROW.CNT> = " " ; NEW.ROW.CNT += 1
*XLS.ARRAY<NEW.ROW.CNT> = " "    ; NEW.ROW.CNT += 1
*
      BEGIN CASE
         CASE LOC.HOLD = "SHV"
            TOT.LOC.DESC = "Shreveport"
         CASE LOC.HOLD = "PIT"
            TOT.LOC.DESC = "Pittsburgh"
         CASE LOC.HOLD = "DAL"
            TOT.LOC.DESC = "Dallas"
         CASE LOC.HOLD = "TUL"
            TOT.LOC.DESC = "Tulsa"
         CASE 1
            TOT.LOC.DESC = ""
      END CASE
*
      DTYPE = TYPE.HOLD
      IF DTYPE NE "EDI" THEN DTYPE = OCONV(TYPE.HOLD,"MCT")
      TLINE = TOT.LOC.DESC:" ":DTYPE:" Totals"
*
      COL.NO = 2 ; CL = COL.HEADERS[COL.NO,1]
      TLINE<1,COL.NO> = LOC.HOLD
*
* Sum TC Total Hours Worked
*
      COL.NO = 4 ; CL = COL.HEADERS[COL.NO,1]
      TC.HRS.SUM.STR = "=SUM(":CL:ST.ROW:":":CL:LAST.DET.ROW2:")"
      TLINE<1,COL.NO> = TC.HRS.SUM.STR
*
* Sum  Non FP Hours Worked
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
      NFP.HRS.SUM.STR = "=SUM(":CL:ST.ROW:":":CL:LAST.DET.ROW2:")"
      TLINE<1,COL.NO> = NFP.HRS.SUM.STR
*
* Sum  FP Hours Worked
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
      FP.HRS.SUM.STR = "=SUM(":CL:ST.ROW:":":CL:LAST.DET.ROW2:")"
      TLINE<1,COL.NO> = FP.HRS.SUM.STR
      FP.HRS.COL = COL.NO
*
* Sum  Chars Keyed
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
      ENT.CHARS.SUM.STR = "=SUM(":CL:ST.ROW:":":CL:LAST.DET.ROW2:")"
      TLINE<1,COL.NO> = ENT.CHARS.SUM.STR
*
* Sum Chars Verified
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
      VER.CHARS.SUM.STR = "=SUM(":CL:ST.ROW:":":CL:LAST.DET.ROW2:")"
      TLINE<1,COL.NO> = VER.CHARS.SUM.STR
*
* Sum Total Chars
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
      TOT.CHARS.SUM.STR = "=SUM(":CL:ST.ROW:":":CL:LAST.DET.ROW2:")"
      TLINE<1,COL.NO> = TOT.CHARS.SUM.STR
      TOT.CHARS.COL = COL.NO
*
* Avg. Chars/FP HR - Total
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
      FP.HRS.LET = COL.HEADERS[FP.HRS.COL,1]
      TOT.CHARS.LET = COL.HEADERS[TOT.CHARS.COL,1]
*
      CHARS.PER.HR.STR = "=":TOT.CHARS.LET:NEW.ROW.CNT:"/":FP.HRS.LET:NEW.ROW.CNT
      TLINE<1,COL.NO> = CHARS.PER.HR.STR
*
* Sum Bills Keyed
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
      BILLS.ENTERED.SUM.STR = "=SUM(":CL:ST.ROW:":":CL:LAST.DET.ROW2:")"
      TLINE<1,COL.NO> = BILLS.ENTERED.SUM.STR
*
* Sum Bills Verified
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
      BILLS.VERIFIED.SUM.STR = "=SUM(":CL:ST.ROW:":":CL:LAST.DET.ROW2:")"
      TLINE<1,COL.NO> = BILLS.VERIFIED.SUM.STR
*
* Sum Total Bills
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
      BILLS.TOTAL.SUM.STR = "=SUM(":CL:ST.ROW:":":CL:LAST.DET.ROW2:")"
      TLINE<1,COL.NO> = BILLS.TOTAL.SUM.STR
      TOT.BILLS.COL = COL.NO
*
* Avg. Bills Keyed /FP HR
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
      FP.HRS.LET = COL.HEADERS[FP.HRS.COL,1]
      TOT.BILLS.LET = COL.HEADERS[BILLS.KEYED.COL,1]
      BILLS.PER.HR.STR = "=":TOT.BILLS.LET:NEW.ROW.CNT:"/":FP.HRS.LET:NEW.ROW.CNT
      TLINE<1,COL.NO> = BILLS.PER.HR.STR
*
* Percentage Column - Based on Total Characters keyed
*
      COL.NO += 1
      TLINE<1,COL.NO> = ""               ; * Calculated later
*
* Percentage Column - Based on Total Bills keyed
*
      COL.NO += 1
      TLINE<1,COL.NO> = ""               ; * Calculated later
*
      CALC.TYPE = "2"                    ; * Percentage calculated against total for Trans type e.g. "Paper"
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
      TLINE<1,CALC.TYPE.COL.NO> = CALC.TYPE
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
      TLINE<1,COL.NO> = TYPE.HOLD
*
      TYPE.TOTALS.ARRAY<TYPE.TOTALS.ROW.TO.USE> = NEW.ROW.CNT
      TYPE.TOTALS.ROW.TO.USE += 1
*
      GT.TOTALS.ARRAY<GT.TOTALS.ROW.TO.USE> = NEW.ROW.CNT
      GT.TOTALS.ROW.TO.USE += 1
*
      SLINE = TLINE
      SLINE<1,TOTAL.COL.NO> = NEW.ROW.CNT
*
      XLS.ARRAY<NEW.ROW.CNT> = TLINE ; NEW.ROW.CNT += 1
*
      SUMMARY.ARRAY<SUMMARY.ROW.CNT> = SLINE ; SUMMARY.ROW.CNT += 1
*
      XLS.ARRAY<NEW.ROW.CNT> = " " ; NEW.ROW.CNT += 1
*
*XLS.ARRAY<NEW.ROW.CNT> = " "    ; NEW.ROW.CNT += 1
*
      ST.ROW = NEW.ROW.CNT
      LAST.DET.ROW = NEW.ROW.CNT
*
      RETURN
*
BUILD.TYPE.TOTAL.LINE:
*
      XLS.ARRAY<NEW.ROW.CNT> = " " ; NEW.ROW.CNT += 1
*XLS.ARRAY<NEW.ROW.CNT> = " "    ; NEW.ROW.CNT += 1
*
      DTYPE = TYPE.HOLD
      IF DTYPE NE "EDI" THEN DTYPE = OCONV(TYPE.HOLD,"MCT")
      TLINE = DTYPE:" ":" Totals"
*
      COL.NO = 2 ; CL = COL.HEADERS[COL.NO,1]
      TLINE<1,COL.NO> = "TT"             ; * Type Total line
*
      N.TYPE.TOTALS = DCOUNT(TYPE.TOTALS.ARRAY,@AM)
*
* Sum TC Total Hours Worked
*
      COL.NO = 4 ; CL = COL.HEADERS[COL.NO,1]
*
      GOSUB BUILD.TYPE.STRING
      TC.HRS.SUM.STR = TYPE.STRING
      TLINE<1,COL.NO> = TC.HRS.SUM.STR
*
* Sum  Non FP Hours Worked
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
*
      GOSUB BUILD.TYPE.STRING
      NFP.HRS.SUM.STR = TYPE.STRING
      TLINE<1,COL.NO> = NFP.HRS.SUM.STR
*
* Sum  FP Hours Worked
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
*
      GOSUB BUILD.TYPE.STRING
      FP.HRS.SUM.STR = TYPE.STRING
      TLINE<1,COL.NO> = FP.HRS.SUM.STR
      FP.HRS.COL = COL.NO
*
* Sum  Chars Keyed
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
*
      GOSUB BUILD.TYPE.STRING
      ENT.CHARS.SUM.STR = TYPE.STRING
      TLINE<1,COL.NO> = ENT.CHARS.SUM.STR
*
* Sum Chars Verified
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
*
      GOSUB BUILD.TYPE.STRING
      VER.CHARS.SUM.STR = TYPE.STRING
      TLINE<1,COL.NO> = VER.CHARS.SUM.STR
*
* Sum Total Chars
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
*
      GOSUB BUILD.TYPE.STRING
      TOT.CHARS.SUM.STR = TYPE.STRING
      TLINE<1,COL.NO> = TOT.CHARS.SUM.STR
      TOT.CHARS.COL = COL.NO
*
* Avg. Chars/FP HR - Total
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
      FP.HRS.LET = COL.HEADERS[FP.HRS.COL,1]
      TOT.CHARS.LET = COL.HEADERS[TOT.CHARS.COL,1]
*
      CHARS.PER.HR.STR = "=":TOT.CHARS.LET:NEW.ROW.CNT:"/":FP.HRS.LET:NEW.ROW.CNT
      TLINE<1,COL.NO> = CHARS.PER.HR.STR
*
* Sum Bills Keyed
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
*
      GOSUB BUILD.TYPE.STRING
      BILLS.ENTERED.SUM.STR = TYPE.STRING
      TLINE<1,COL.NO> = BILLS.ENTERED.SUM.STR
*
* Sum Bills Verified
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
*
      GOSUB BUILD.TYPE.STRING
      BILLS.VERIFIED.SUM.STR = TYPE.STRING
      TLINE<1,COL.NO> = BILLS.VERIFIED.SUM.STR
*
* Sum Total Bills
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
*
      GOSUB BUILD.TYPE.STRING
      BILLS.TOTAL.SUM.STR = TYPE.STRING
      TLINE<1,COL.NO> = BILLS.TOTAL.SUM.STR
      TOT.BILLS.COL = COL.NO
*
* Avg. Bills Keyed /FP HR
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
      FP.HRS.LET = COL.HEADERS[FP.HRS.COL,1]
      BILLS.KEYED.LET = COL.HEADERS[BILLS.KEYED.COL,1]
      BILLS.PER.HR.STR = "=":BILLS.KEYED.LET:NEW.ROW.CNT:"/":FP.HRS.LET:NEW.ROW.CNT
      TLINE<1,COL.NO> = BILLS.PER.HR.STR
*
* Percentage Column - Based on Total Characters keyed
*
      COL.NO += 1
      W.PERCENTAGE.STR = "000"           ; * To be calculated later
      TLINE<1,COL.NO> = W.PERCENTAGE.STR
*
* Percentage Column - Based on Total Bills keyed
*
      COL.NO += 1
      W.PERCENTAGE.STR = "000"           ; * To be calculated later
      TLINE<1,COL.NO> = W.PERCENTAGE.STR
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
*
      CL = COL.HEADERS[TYPE.COL,1]
      TLINE<1,TYPE.COL> = TYPE.HOLD
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
      CALC.TYPE = "3"                    ; * Calculated against Grand Total Line
      TLINE<1,CALC.TYPE.COL.NO> = CALC.TYPE
*
      SLINE = TLINE
      SLINE<1,TOTAL.COL.NO> = NEW.ROW.CNT
*
      XLS.ARRAY<NEW.ROW.CNT> = TLINE
*
      SUMMARY.ARRAY<SUMMARY.ROW.CNT> = SLINE ; SUMMARY.ROW.CNT += 1
*
      NEW.ROW.CNT += 1
      XLS.ARRAY<NEW.ROW.CNT> = " " ; NEW.ROW.CNT += 1
*
      IF I.LINE LT N.LINES THEN          ; * Dont set up next type header if no more LOC lines
         DTYPE = TYPE
         IF DTYPE NE "EDI" THEN DTYPE = OCONV(DTYPE,"MCL")
         XLS.ARRAY<NEW.ROW.CNT> = DTYPE:" Bills:" ; NEW.ROW.CNT += 1
      END
*
      TYPE.TOTALS.ARRAY = ""
      TYPE.TOTALS.ROW.TO.USE = 1
*
      ST.ROW = NEW.ROW.CNT
      LAST.DET.ROW = NEW.ROW.CNT
*
      RETURN
*
BUILD.TYPE.STRING:
*
      TYPE.TOTAL.ROW = TYPE.TOTALS.ARRAY<1>
      TYPE.STRING = "=":CL:TYPE.TOTAL.ROW
      FOR TR = 2 TO N.TYPE.TOTALS
         TYPE.TOTAL.ROW = TYPE.TOTALS.ARRAY<TR>
         TYPE.STRING := "+":CL:TYPE.TOTAL.ROW
      NEXT TR
*
      RETURN
*
BUILD.GRAND.TOTAL.LINE:
*
      N.TOTALS = DCOUNT(GT.TOTALS.ARRAY,@AM)
*
      XLS.ARRAY<NEW.ROW.CNT> = " " ; NEW.ROW.CNT += 1
*XLS.ARRAY<NEW.ROW.CNT> = " "    ; NEW.ROW.CNT += 1
*
      TLINE = "Grand Totals"
*
      COL.NO = 2 ; CL = COL.HEADERS[COL.NO,1]
      TLINE<1,COL.NO> = "GT"
*
* Sum TC Total Hours Worked
*
      COL.NO = 4 ; CL = COL.HEADERS[COL.NO,1]
*
      GOSUB BUILD.GT.STRING
      TC.HRS.SUM.STR = GT.STRING
      TLINE<1,COL.NO> = TC.HRS.SUM.STR
*
* Sum  Non FP Hours Worked
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
*
      GOSUB BUILD.GT.STRING
      NFP.HRS.SUM.STR = GT.STRING
      TLINE<1,COL.NO> = NFP.HRS.SUM.STR
*
* Sum  FP Hours Worked
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
*
      GOSUB BUILD.GT.STRING
      FP.HRS.SUM.STR = GT.STRING
      TLINE<1,COL.NO> = FP.HRS.SUM.STR
      FP.HRS.COL = COL.NO
*
* Sum  Chars Keyed
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
*
      GOSUB BUILD.GT.STRING
      ENT.CHARS.SUM.STR = GT.STRING
      TLINE<1,COL.NO> = ENT.CHARS.SUM.STR
*
* Sum Chars Verified
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
*
      GOSUB BUILD.GT.STRING
      VER.CHARS.SUM.STR = GT.STRING
      TLINE<1,COL.NO> = VER.CHARS.SUM.STR
*
* Sum Total Chars
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
*
      GOSUB BUILD.GT.STRING
      TOT.CHARS.SUM.STR = GT.STRING
      TLINE<1,COL.NO> = TOT.CHARS.SUM.STR
      TOT.CHARS.COL = COL.NO
*
* Avg. Chars/FP HR - Total
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
      FP.HRS.LET = COL.HEADERS[FP.HRS.COL,1]
      TOT.CHARS.LET = COL.HEADERS[TOT.CHARS.COL,1]
*
      CHARS.PER.HR.STR = "=":TOT.CHARS.LET:NEW.ROW.CNT:"/":FP.HRS.LET:NEW.ROW.CNT
      TLINE<1,COL.NO> = CHARS.PER.HR.STR
*
* Sum Bills Keyed
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
*
      GOSUB BUILD.GT.STRING
      BILLS.ENTERED.SUM.STR = GT.STRING
      TLINE<1,COL.NO> = BILLS.ENTERED.SUM.STR
*
* Sum Bills Verified
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
*
      GOSUB BUILD.GT.STRING
      BILLS.VERIFIED.SUM.STR = GT.STRING
      TLINE<1,COL.NO> = BILLS.VERIFIED.SUM.STR
*
* Sum Total Bills
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
*
      GOSUB BUILD.GT.STRING
      BILLS.TOTAL.SUM.STR = GT.STRING
      TLINE<1,COL.NO> = BILLS.TOTAL.SUM.STR
      TOT.BILLS.COL = COL.NO
*
* Avg. Bills Keyed/FP HR
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
      FP.HRS.LET = COL.HEADERS[FP.HRS.COL,1]
      BILLS.KEYED.LET = COL.HEADERS[BILLS.KEYED.COL,1]
      BILLS.PER.HR.STR = "=":BILLS.KEYED.LET:NEW.ROW.CNT:"/":FP.HRS.LET:NEW.ROW.CNT
      TLINE<1,COL.NO> = BILLS.PER.HR.STR
*
* Percentage
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
      W.PERCENTAGE.STR = "100.00"
      TLINE<1,COL.NO> = W.PERCENTAGE.STR
*
      CL = COL.HEADERS[TYPE.COL,1]
      TLINE<1,TYPE.COL> = "ALL"          ; * Total for all types
*
      COL.NO += 1 ; CL = COL.HEADERS[COL.NO,1]
      CALC.TYPE = "4"                    ; * Grand Total Line
      TLINE<1,CALC.TYPE.COL.NO> = CALC.TYPE
*
      GT.TOTALS.ARRAY<GT.TOTALS.ROW.TO.USE> = NEW.ROW.CNT
      GT.TOTALS.ROW.TO.USE += 1
      XLS.ARRAY<NEW.ROW.CNT> = TLINE
*
      SLINE = TLINE
      SLINE<1,TOTAL.COL.NO> = NEW.ROW.CNT
*
      NEW.ROW.CNT += 1
      XLS.ARRAY<NEW.ROW.CNT> = ""
*
      SUMMARY.ARRAY<SUMMARY.ROW.CNT> = SLINE ; SUMMARY.ROW.CNT += 1
*
      RETURN
*
BUILD.GT.STRING:
*
      TOTAL.ROW = GT.TOTALS.ARRAY<1>
      GT.STRING = "=":CL:TOTAL.ROW
      FOR TR = 2 TO N.TOTALS
         TOTAL.ROW = GT.TOTALS.ARRAY<TR>
         GT.STRING := "+":CL:TOTAL.ROW
      NEXT TR
*
      RETURN
