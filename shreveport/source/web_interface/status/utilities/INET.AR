** For the initial load program See INET.AR.INITIAL
* 043015 - JMK01 - Create document id lists for daily extracts
      CALL GET.USER(USER)
      IF USER='DAVID' THEN USER='OWEN'
      IF USER='ROB' THEN USER='OWEN'
*DFIF USER#'OWEN' THEN STOP
      IF USER#'OLEDBAFS' THEN TESTING=1 ELSE TESTING=0
      IF USER='OWEN' THEN OWEN=1 ELSE OWEN=0
      IF USER='MKERBOW' THEN MIKE=1 ELSE MIKE=0
*TESTING = 0
      IF TESTING THEN
*  HEADING "'C'Test Mode'"
      END
      SQL.UPDATE.DATE=DATE()
* PREPARE AR FILES FOR ENTRY TO SQL TABLE
*
* AUTHOR: ROB GAUDET
* DATE: APRIL 2, 2002
*
* THIS PROGRAM IS A PROPRIETARY PRODUCT OF AUTOMATED FREIGHT SYSTEMS
* AND MAY NOT BE USED, COPIED OR MODIFIED WITHOUT THE EXPRESS
* WRITTEN CONSENT OF SAME.
*

      PROG.NAME=''
      PROG.DESC='AR MOVE TO SQL'

      INPUT CLIENT.ID

      IF TESTING THEN
         PRINT 'clientid' : CLIENT.ID
      END

      OPEN '$SAVEDLISTS$' TO F.SL ELSE ; * JMK01
      END ; * JMK01
      SL.ID='ARUPD.':SQL.UPDATE.DATE ; * JMK01
      SL.REC='' ; * JMK01
      OPEN 'AR.TRANS.1000.1' TO F.ART ELSE
      END
      IF OWEN THEN
         OPEN 'BILLDATA.OWEN' TO F.BD ELSE ABORT
         OPEN 'TEMP1' TO F.TEMP1 ELSE ABORT
         CLEARFILE F.TEMP1
         DA=''
      END
      IF MIKE THEN
         OPEN 'BILLDATA.MKERBOW' TO F.BD ELSE ABORT
         OPEN 'TEMP.MKERBOW' TO F.TEMP1 ELSE ABORT
         CLEARFILE F.TEMP1
         DA=''
      END

      METADATA = ""
      METADATA<1,1> = "VARCHAR" ; METADATA<1,2> = "client_id" ; METADATA<1,3> = 0
      METADATA<2,1> = "VARCHAR" ; METADATA<2,2> = "ar_id" ; METADATA<2,3> = 0
      METADATA<3,1> = "VARCHAR" ; METADATA<3,2> = "trans_amount" ; METADATA<3,3> = 0
      METADATA<4,1> = "VARCHAR" ; METADATA<4,2> = "trans_date" ; METADATA<4,3> = 0
      METADATA<5,1> = "VARCHAR" ; METADATA<5,2> = "par_id" ; METADATA<5,3> = 0
      METADATA<6,1> = "VARCHAR" ; METADATA<6,2> = "pay_type" ; METADATA<6,3> = 0


      IF TESTING THEN
         CONVERT @AM TO ' ' IN METADATA
      END ELSE
         CONVERT @AM TO CHAR(30) IN METADATA
      END
      CRT "%METADATA:":METADATA

      AR.LIST = ""
*** Need to select the NON-DR transactions that have "Links" to other transactions that HAVE an SQL flag in <32>
      STMT = 'SSELECT AR.TRANS.1000.1'
*************************************************************************
      STMT:= ' WITH TYPE = "DR"'
*KEVIN 01-28-05 ADDED CHECK FOR CLIENT.ID = ALL TO GET ALL RECORDS TO REBUILD SQL TABLE COMPLETELY
      IF CLIENT.ID = '' THEN
         STMT:= ' AND WITH SQL.FLAG = "" '
      END
* REMOVED BY CLM 05/19/06      STMT:= ' AND WITH TR.DATE GE "':(DATE()-365)'D4/':'"'
* STMT:= ' AND WITH CLIENT.STATUS = "A"'
      STMT:= ' AND WITH DESC # "VOID"'
      IF CLIENT.ID # '' AND CLIENT.ID # 'ALL' THEN
         STMT:=' AND WITH CLIENT# = "':CLIENT.ID:'"'
      END
*************************************************************************

      STMT:=' OR '

*************************************************************************
      STMT:= ' WITH TYPE = "DR"'
      IF CLIENT.ID = '' THEN
         STMT:= ' AND WITH SQL.FLAG = "" '
      END
      STMT:= ' AND WITH BALANCE # "0"'
      IF CLIENT.ID # '' AND CLIENT.ID # 'ALL' THEN
         STMT:=' AND WITH CLIENT# = "':CLIENT.ID:'"'
      END
*************************************************************************

      STMT:=' OR '

*************************************************************************
      STMT:= ' WITH TYPE # "DR"'
      IF CLIENT.ID = '' THEN
         STMT:= ' AND WITH SQL.FLAG = "" '
      END
* STMT:= ' AND WITH CLIENT.STATUS = "A"'
      STMT:= ' AND WITH DESC # "VOID"'
      IF CLIENT.ID # '' AND CLIENT.ID # 'ALL' THEN
         STMT:=' AND WITH CLIENT# = "':CLIENT.ID:'"'
      END
      STMT:= ' AND WITH SQL.RELATIVES'
*************************************************************************

* PRINT STMT
* INPUT NUL
*STMT='GET-LIST OWEN1'
*DFSTMT="SELECT AR.TRANS.1000.1 'CR*50356'"
      EXECUTE STMT CAPTURING OUTPUT
* EXECUTE 'GET-LIST INET.AR' CAPTURING OUTPUT
      NUMFILES = @SELECTED
      IF NUMFILES = 0 THEN
      END

      ROW = ''
      DONE=0
      LOOP
      UNTIL DONE=1 DO
         READNEXT ART.ID ELSE DONE=1
         DR.ARRAY=ART.ID
         PARENT.CNTR=0
         LOOP
            PARENT.CNTR+=1
            PART.ID=DR.ARRAY<1,PARENT.CNTR>
         UNTIL PART.ID='' DO
            READ DART FROM F.ART,PART.ID THEN

               IF PART.ID="CR*083267" AND USER='OWEN' THEN
                  CRT ''
                  CRT ''
                  CRT 'Owen... On CR*083267..... Press Break'
                  INPUT NUL
               END

               FILE.TYPE = FIELD(PART.ID,"*",1)    ; *RETURNS FIRST TWO CHARACTERS
               IF FILE.TYPE = "DR" THEN
* Just report the Debit and the amount
                  ROW<1> = DART<1>[8,5]  ; * CLIENT ID
                  ROW<2> = PART.ID       ; * TRANSACTION ID
                  GOSUB GET.PAYMENT.TYPE
                  ROW<3> = DART<8>       ; * TRANSACTION AMOUNT
                  ROW<4> = DART<4>'D4/'  ; * TRANSACTION DATE
                  ROW<5> = PART.ID
                  ROW<6> = PAYMENT.TYPE
                  IF TESTING THEN
                     IF OWEN THEN
                        ROW=CHANGE(ROW,@AM,@VM)
                        DA<-1>=ROW
                     END ELSE
                        CONVERT @AM TO ' ' IN ROW
                     END
                  END ELSE
                     CONVERT @AM TO CHAR(30) IN ROW
                  END
                  CRT ROW
                  READV TEST.DATE FROM F.ART,PART.ID,32 ELSE ; * JMK01
                     LOCATE PART.ID IN SL.REC SETTING ART.POS ELSE ; * JMK01
                        SL.REC<-1>=PART.ID ; * JMK01
                     END ; * JMK01
                  END ; * JMK01
                  WRITEV SQL.UPDATE.DATE ON F.ART,PART.ID,32
                  GO NEXT.DR.ARRAY
               END
* Report all of the children (Payments) with their associated DR
               NUM.PARENTS = DCOUNT(DART<10>,@VM)
               FOR X=1 TO NUM.PARENTS
                  DR.ID=DART<10,X>
                  ROW<1> = DART<1>[8,5]  ; * CLIENT ID
                  ROW<2> = PART.ID       ; * TRANSACTION ID
                  AMOUNT=0
                  TIMES=DCOUNT(DART<11,X>,@SVM)
                  FOR Z = 1 TO TIMES
                     AMOUNT+=DART<11,X,Z>
                  NEXT Z
                  ROW<3> = -AMOUNT       ; * TRANSACTION AMOUNT
                  ROW<4> = DART<4>'D4/'  ; * TRANSACTION DATE
                  GOSUB GET.PAYMENT.TYPE
                  ROW<5> = DR.ID
                  ROW<6> = PAYMENT.TYPE
                  IF TESTING THEN
                     IF OWEN THEN
                        ROW=CHANGE(ROW,@AM,@VM)
                        DA<-1>=ROW
                     END ELSE
                        CONVERT @AM TO ' ' IN ROW
                     END
                  END ELSE
                     CONVERT @AM TO CHAR(30) IN ROW
                  END
                  CRT ROW
               NEXT X
               READV TEST.DATE FROM F.ART,ART.ID,32 ELSE ; * JMK01
                  LOCATE ART.ID IN SL.REC SETTING ART.POS ELSE ; * JMK01
                     SL.REC<-1>=ART.ID ; * JMK01
                  END ; * JMK01
               END ; * JMK01
               WRITEV SQL.UPDATE.DATE ON F.ART,ART.ID,32
            END
NEXT.DR.ARRAY: ***
         REPEAT
      REPEAT
      IF SL.REC#'' THEN ; * JMK01
         WRITE SL.REC ON F.SL,SL.ID ; * JMK01
      END ; * JMK01
      IF OWEN THEN
         DA=CHANGE(DA,@VM,CHAR(9))
         WRITE DA ON F.BD,'ARDATA'
         CRT @(0,23):"Wrote ARDATA on BILLDATA.OWEN"
      END
      IF MIKE THEN
         DA=CHANGE(DA,@VM,CHAR(9))
         WRITE DA ON F.BD,'ARDATA'
         CRT @(0,23):"Wrote ARDATA on BILLDATA.MKERBOW"
      END

      STOP
GET.PAYMENT.TYPE: ***
      PAYMENT.TYPE=OCONV(TRIM(DART<7>),'MCU')
      BEGIN CASE
         CASE PAYMENT.TYPE='WIRE' OR PAYMENT.TYPE='DDS' ; NULL
         CASE PAYMENT.TYPE[1,2]="CK"
            PAYMENT.TYPE="CK"
         CASE 1
            PAYMENT.TYPE='NA'
      END CASE
      RETURN
