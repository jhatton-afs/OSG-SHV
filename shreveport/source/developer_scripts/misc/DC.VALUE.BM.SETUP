* PROGRAM: DC.VALUE.BM.SETUP
* PROGRAM TO STORE CONTRACT INFORMATION AND LIMITS FOR BROKERED INSURANCE
*
* AUTHOR: DUANE SPEARS
* DATE:  September 29, 2011
*
* 01/27/12 - DRF   - Modified this to be more standardize.
*
      $OPTIONS HEADER.EJECT
      $OPTIONS EXEC.EQ.PERF
      $OPTIONS INFO.ABORT
      ERRMSG=''
      CALL CHANNEL(CH.NUM)
      CALL GET.USER(USER.NAME)
      DISP.NOTE = '' ; EOL = @(-4)
      PROG.NAME = 'DC.VALUE.BM.SETUP'
      PROG.DESC = 'Contract Data Entry'
      PACK.NAME = 'FREIGHT BROKERAGE'
      CO.NAME='AFS Logisitcs, LLC'
      PRMPT = 1 ; DONE = 0 ; FINISHED = 0
      DELIMITER = @VM ; CLIENT.SEL = '' ; CARRIER.SEL = ''
      UPD.FLG = 0 ; VALUE = '' ; EFFDT.SEL = ''
      CLIENT.ID = '' ; CARRIER.ID = '' ; ACCT.ID = '' ; BEGIN.DATE = ''
      END.DATE = '' ; PART.FLAG = '' ; CLIENT.SEL = '' ; CLIENT.NAME = ''
      BUY.AMT = '' ; SELL.AMT = '' ; OVER.AMOUNT=''
      OLD.BEGIN.DATE=''
      OLD.END.DATE=''
      EDIT.MASK.CHAR='-'

* Set access privileges
* 3 Levels of access:
*    0 - Access Denied
*    1 - View Access only
*    2 - Full View/Edit Access

      BEGIN CASE
         CASE USER.NAME='OWEN'
            USER.ACCESS=2
         CASE USER.NAME='CHRIS'
            USER.ACCESS=2
         CASE USER.NAME='JDARWIN'
            USER.ACCESS=2
         CASE USER.NAME='NRATH'
            USER.ACCESS=2
         CASE USER.NAME='NPRATT'
            USER.ACCESS=2
         CASE USER.NAME='RRANEY'
            USER.ACCESS=2
         CASE USER.NAME='DAVID'
            USER.ACCESS=2
         CASE USER.NAME='MKERBOW'
            USER.ACCESS=2
         CASE USER.NAME='JAMES'
            USER.ACCESS=2
         CASE USER.NAME='BRIANP'
            USER.ACCESS=2
         CASE USER.NAME='NPRATT'
            USER.ACCESS=2
         CASE USER.NAME='DWIMBERLY'
            USER.ACCESS=2
         CASE USER.NAME='AHERBEL'
            USER.ACCESS=2
         CASE USER.NAME='LCORKERN'
            USER.ACCESS=2
         CASE 1
            USER.ACCESS=1
      END CASE

      IF USER.ACCESS=0 THEN PROG.DESC:=' - Access Denied'
      IF USER.ACCESS=1 THEN PROG.DESC:=' - View Access'
      IF USER.ACCESS=2 THEN PROG.DESC:=' - Full Access'
      GOSUB DISPLAY.SCRN

      IF USER.ACCESS=0 THEN
         CALL FB.PRINT.CENT(1,80,12,'Restricted Access Application - Access Denied')
         CALL FB.PRINT.CENT(1,80,14,'Request access through your supervisor')
         CALL ELINE('')
         GOTO THE.END
      END

      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'DC.VALUE.BM.SETUP' ; UPL.VOUT = ''        ; * NPR_UPL 04/14/2010
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT) ;     ; * NPR_UPL 04/14/2010

      CALL CHANNEL(CH.NUM)
      OPEN '','BR.LIMITS' TO F.LIMITS ELSE CALL OPEN.ABORT('BR.LIMITS',PROG.NAME)
      OPEN '','CLIENTS' TO F.CLIENTS ELSE CALL OPEN.ABORT('CLIENTS',PROG.NAME)
      OPEN '','CARRIERS' TO F.CARRIERS ELSE CALL OPEN.ABORT('CARRIERS',PROG.NAME)
      OPEN '','EDI.CAR.ACNT.XREF' TO F.ECAX ELSE CALL OPEN.ABORT('CLIENTS',PROG.NAME)
      GOSUB DISPLAY.SCRN

* Client
GET.CLIENT: ***
      IF CLIENT.ID THEN
         EDIT.MASK=CLIENT.ID'R%5'
      END ELSE
         EDIT.MASK=STR(EDIT.MASK.CHAR,5)
      END
      HELP='Enter client ID, [L]ist existing setups'
      CALL GEN.IN(12,4,EDIT.MASK,'',Q,0,20,'','',2,12,4,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' AND CLIENT.ID#'' THEN QI=CLIENT.ID
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='L'
            GOSUB DISPLAY.BENCHMARKS
            GOSUB DISPLAY.SCRN
            GOTO GET.CLIENT
         CASE NOT(QI MATCHES "0N")
            CALL SOUNDEX.DISPLAY(QI,'CLIENTS','SDX.CLIENTS,NAME','2,3,4',ITEM.LIST)
            BEGIN CASE
               CASE ITEM.LIST=''
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
               CASE ITEM.LIST#''
                  IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
            END CASE
            GOSUB DISPLAY.SCRN
            GOTO GET.CLIENT
         CASE NUM(QI) AND QI#''
            QI=QI'R%5'
            READ CLIENT.REC FROM F.CLIENTS,QI THEN
               CLIENT.ID=QI
               CLIENT.NAME=CLIENT.REC<2>
               CLIENT.CITY=CLIENT.REC<4>
               CLIENT.STATE=CLIENT.REC<5>
            END ELSE
               CALL ELINE('ERROR - Client ':QI:' is not a valid client.')
               GOTO GET.CLIENT
            END
         CASE QI=''
            CALL ELINE('Client id is required')
            GOTO GET.CLIENT
         CASE 1
            CALL ELINE('Invalid entry. Please try again')
            GOTO GET.CLIENT
      END CASE
      CLIENT.TXT=CLIENT.ID'R%5':' ':CLIENT.NAME:' (':CLIENT.CITY:', ':CLIENT.STATE:')'
      CRT @(12,4):CLIENT.TXT'L#50'        ; * JMK01


* Carrier
GET.CARRIER: ***
      IF CARRIER.ID THEN
         EDIT.MASK=CARRIER.ID'R%5'
      END ELSE
         EDIT.MASK=STR(EDIT.MASK.CHAR,5)
      END
      HELP='Enter Carrier ID'
      CALL GEN.IN(12,5,EDIT.MASK,'',Q,0,20,'','',2,12,5,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' AND CARRIER.ID#'' THEN QI=CARRIER.ID
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            IF CARRIER.ID#'' THEN
               CARRIER.TXT=CARRIER.ID'R%5':' ':CARRIER.NAME
               CRT @(12,5):CARRIER.TXT'L#30'
            END ELSE
               CRT @(12,5):SPACE(30)
            END
            GOTO GET.CLIENT
         CASE NOT(QI MATCHES "0N")
            VIN=0                        ; * Starting Chars In
            VOUT=''
            CALL SOUNDEX.DISPLAY.NEW(VIN,VOUT,QI,'CARRIERS','SDX.CARRIER,NAME','1,2,3,4',ITEM.LIST)
            GOSUB DISPLAY.SCRN
            GOSUB DISPLAY.DATA
            BEGIN CASE
               CASE ITEM.LIST = ''
                  GOTO GET.CARRIER
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                  GOTO GET.CARRIER
               CASE ITEM.LIST # ''
                  IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
                  GOTO GET.CARRIER
            END CASE
         CASE NUM(QI) AND QI#''
            QI=QI'R%5'
            READ CARRIER.REC FROM F.CARRIERS,QI THEN
               CARRIER.ID=QI
               CARRIER.NAME=CARRIER.REC<1>
            END ELSE
               CALL ELINE('ERROR - Carrier ':QI:' is not a valid carrier.')
               GOTO GET.CARRIER
            END
         CASE QI=''
            CALL ELINE('Carrier id is required')
            GOTO GET.CARRIER
         CASE 1
            CALL ELINE('Invalid entry. Please try again')
            GOTO GET.CARRIER
      END CASE
      CARRIER.TXT=CARRIER.ID'R%5':' ':CARRIER.NAME
      CRT @(12,5):CARRIER.TXT'L#30'



      LIMIT.RECID = CLIENT.ID:'*':CARRIER.ID
      READ LIMITS.REC FROM F.LIMITS,LIMIT.RECID THEN
         NUM.OF.ITEMS=DCOUNT(LIMITS.REC<1>,@VM)
         BEGIN.DATE=LIMITS.REC<1,NUM.OF.ITEMS>
         OLD.BEGIN.DATE=BEGIN.DATE
         END.DATE=LIMITS.REC<2,NUM.OF.ITEMS>
         PART.FLAG=LIMITS.REC<3,NUM.OF.ITEMS>
         OVER.AMOUNT=LIMITS.REC<7,NUM.OF.ITEMS>
         BUY.AMT=LIMITS.REC<9,NUM.OF.ITEMS>
         SELL.AMT=LIMITS.REC<10,NUM.OF.ITEMS>
         NUM.SEL=NUM.OF.ITEMS
         GOSUB DISPLAY.DATA
         GOTO ENTER.OPTION
      END ELSE
         LIMITS.REC=''
         NUM.OF.ITEMS=0
         NUM.SEL=1
         BEGIN.DATE=''
         OLD.BEGIN.DATE=BEGIN.DATE
         END.DATE=''
         OLD.END.DATE=END.DATE
         PART.FLAG=''
         OVER.AMOUNT=''
         BUY.AMT=''
         SELL.AMT=''
         GOTO INPUT.DATA
      END
*DF         READ EDAX.REC FROM F.ECAX, EDAX.ID ELSE
*DF            DISP.NOTE = 'Record ':EDAX.ID:' does not exist '
*DF            DISP.NOTE := 'in file EDI.CAR.ACNT.XREF'
*DF         END
*DF      END
ENTER.OPTION: ***
      CRT @(0,22):'Enter option: ':@(-4)
      EDIT.MASK=STR(EDIT.MASK.CHAR,2)
      HELP='[U]pdate, [D]elete or [C]opy Act/Inact'
      HELP='[U]pdate, [1-6] [F]orward Page [B]ack Page, or [A]dd new effictive date range'
      CALL GEN.IN(15,22,EDIT.MASK,'',Q,0,3,'','',3,15,22,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'                    ; * Exit
            GOTO THE.END
         CASE QI='X'                     ; * Back to client
            GOTO GET.CARRIER
         CASE QI='U'                     ; * Update (and exit)
            IF USER.ACCESS=1 THEN
               CALL ELINE('View access only no update performed')
               GOTO THE.END
            END
            GOSUB SAVE.RECORD
            GOTO THE.END
         CASE QI='A'
            IF LIMITS.REC<2,NUM.OF.ITEMS>='' THEN
               CALL ELINE('You must have an ending effective date before you can add a new range')
               GOTO ENTER.OPTION
            END
            BEGIN.DATE=LIMITS.REC<2,NUM.OF.ITEMS>+1
            OLD.BEGIN.DATE=BEGIN.DATE
            END.DATE=''
            OLD.END.DATE=END.DATE
            PART.FLAG=LIMITS.REC<3,NUM.OF.ITEMS>
            OVER.AMOUNT=LIMITS.REC<7,NUM.OF.ITEMS>
            BUY.AMT=LIMITS.REC<9,NUM.OF.ITEMS>
            SELL.AMT=LIMITS.REC<10,NUM.OF.ITEMS>
            GOTO INPUT.DATA
            GOTO ENTER.OPTION
         CASE QI='F'
            IF NUM.SEL+1 > NUM.OF.ITEMS THEN
               CALL ELINE('You are already at the last page')
            END ELSE
               NUM.SEL=NUM.SEL+1
               BEGIN.DATE=LIMITS.REC<1,NUM.SEL>
               OLD.BEGIN.DATE=BEGIN.DATE
               END.DATE=LIMITS.REC<2,NUM.SEL>
               OLD.END.DATE=END.DATE
               PART.FLAG=LIMITS.REC<3,NUM.SEL>
               OVER.AMOUNT=LIMITS.REC<7,NUM.SEL>
               BUY.AMT=LIMITS.REC<9,NUM.SEL>
               SELL.AMT=LIMITS.REC<10,NUM.SEL>
               GOSUB DISPLAY.DATA
            END
            GOTO ENTER.OPTION
         CASE QI='B'
            IF NUM.SEL-1 < 1 THEN
               CALL ELINE('You are already at the first page')
            END ELSE
               NUM.SEL=NUM.SEL-1
               BEGIN.DATE=LIMITS.REC<1,NUM.SEL>
               OLD.BEGIN.DATE=BEGIN.DATE
               END.DATE=LIMITS.REC<2,NUM.SEL>
               OLD.END.DATE=END.DATE
               PART.FLAG=LIMITS.REC<3,NUM.SEL>
               OVER.AMOUNT=LIMITS.REC<7,NUM.SEL>
               BUY.AMT=LIMITS.REC<9,NUM.SEL>
               SELL.AMT=LIMITS.REC<10,NUM.SEL>
               GOSUB DISPLAY.DATA
            END
            GOTO ENTER.OPTION
         CASE QI='1'
            GOSUB GET.BEGIN.DATE
            LIMITS.REC<1,NUM.SEL>=BEGIN.DATE
            GOTO ENTER.OPTION
         CASE QI='2'
            GOSUB GET.END.DATE
            LIMITS.REC<2,NUM.SEL>=END.DATE
            GOTO ENTER.OPTION
         CASE QI='3'
            GOSUB GET.PARTICIPATING
            LIMITS.REC<3,NUM.SEL>=PART.FLAG
            GOTO ENTER.OPTION
         CASE QI='4'
            GOSUB GET.OVER.AMOUNT
            LIMITS.REC<7,NUM.SEL>=OVER.AMOUNT
            GOTO ENTER.OPTION
         CASE QI='5'
            GOSUB GET.BUY.RATE
            LIMITS.REC<9,NUM.SEL>=BUY.AMT
            GOTO ENTER.OPTION
         CASE QI='6'
            GOSUB GET.SELL.RATE
            LIMITS.REC<10,NUM.SEL>=SELL.AMT
            GOTO ENTER.OPTION
         CASE 1
            CALL ELINE('Invalid entry. Please try again')
            GOTO ENTER.OPTION
      END CASE

INPUT.DATA: ***
      GOSUB DISPLAY.DATA
ENT.BEG.DATE: ***
      X.BACK=0
      GOSUB GET.BEGIN.DATE
      IF X.BACK THEN
         X.BACK=0
         GOTO GET.CARRIER
      END
ENT.END.DATE: ***
      GOSUB GET.END.DATE
      IF X.BACK THEN
         X.BACK=0
         GOTO ENT.BEG.DATE
      END
ENT.PARTICIPATING: ***
      GOSUB GET.PARTICIPATING
      IF X.BACK THEN
         X.BACK=0
         GOTO ENT.END.DATE
      END
ENT.OVER.AMOUNT: ***
      GOSUB GET.OVER.AMOUNT
      IF X.BACK THEN
         X.BACK=0
         GOTO ENT.PARTICIPATING
      END
ENT.BUY.RATE: ***
      GOSUB GET.BUY.RATE
      IF X.BACK THEN
         X.BACK=0
         GOTO ENT.OVER.AMOUNT
      END
ENT.SELL.RATE: ***
      GOSUB GET.SELL.RATE
      IF X.BACK THEN
         X.BACK=0
         GOTO ENT.BUY.RATE
      END
      LOCATE BEGIN.DATE IN LIMITS.REC<1> BY "AR" SETTING POS ELSE
         INS BEGIN.DATE BEFORE LIMITS.REC<1,POS>
         INS END.DATE BEFORE LIMITS.REC<2,POS>
         INS PART.FLAG BEFORE LIMITS.REC<3,POS>
         INS OVER.AMOUNT BEFORE LIMITS.REC<7,POS>
         INS BUY.AMT BEFORE LIMITS.REC<9,POS>
         INS SELL.AMT BEFORE LIMITS.REC<10,POS>
         NUM.SEL=POS
         NUM.OF.ITEMS=NUM.OF.ITEMS+1
      END
      GOTO ENTER.OPTION

GET.BEGIN.DATE: ***
      MASK = OLD.BEGIN.DATE'D2/'
      CRT @(0,22):"Enter the Beginning Date for these Rates.":@(-4)
      HELP ="OPTIONS: [T]oday [EX]it Program"
      CALL GEN.IN(19,7,MASK,'DATE',Q,0,8,'','',2,19,7,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      BEGIN CASE
*
* Exit program
*
         CASE QI = 'EX'
            GOTO THE.END

         CASE QI = 'X'
            X.BACK=1
            CRT @(19,7):OLD.BEGIN.DATE'D2/'
            IF OLD.BEGIN.DATE='' THEN
               CRT @(19,7):'        '
            END
            RETURN
*
* Todays date
*
         CASE QI = 'T'
            Q = DATE()
         CASE QI = ''
            Q = OLD.BEGIN.DATE
      END CASE

      BEGIN.DATE = TRIM(Q)
      CRT @(19,7):BEGIN.DATE'D2/'
      IF BEGIN.DATE='' THEN
         CALL ELINE('Entry is required')
         GOTO GET.BEGIN.DATE
      END


      IF OLD.BEGIN.DATE # BEGIN.DATE THEN
         FOR T = 1 TO NUM.OF.ITEMS
            IF T # NUM.SEL THEN          ; * Skip entry currently editing...
               CHECK = 0
               IF BEGIN.DATE => LIMITS.REC<1,T> THEN CHECK+=1
               IF BEGIN.DATE <= LIMITS.REC<2,T> THEN CHECK+=1
               IF CHECK=2 THEN
                  CALL ELINE("Beginning Date resides within a prior date range.  Try again.")
                  BEGIN.DATE = OLD.BEGIN.DATE
                  GOTO GET.BEGIN.DATE
               END
            END
         NEXT
      END
      OLD.BEGIN.DATE=BEGIN.DATE
      RETURN
GET.END.DATE: ***
      MASK = OLD.END.DATE'D2/'
      CRT @(0,22):"Enter the Ending Date for these Rates.":@(-4)
      HELP ="OPTIONS: [T]oday [SPACE] to clear Ending Date [X]=Back [EX]it Program"
      CALL GEN.IN(19,8,MASK,'DATE',Q,0,8,'','',2,19,8,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI = 'X'
            X.BACK=1
            CRT @(19,8):OLD.END.DATE'D2/'
            IF OLD.END.DATE='' THEN
               IF OLD.BEGIN.DATE='' THEN
                  CRT @(19,8):'        '
               END ELSE
                  CRT @(19,8):' [OPEN] '
               END
            END
            RETURN
*
* Exit program
*
         CASE QI = 'EX'
            GOTO THE.END
*
* Todays date
*
         CASE QI = 'T'
            Q = DATE()
         CASE QI = '' AND OLD.END.DATE
            Q = OLD.END.DATE

      END CASE

      IF TRIM(Q)='' THEN
         Q=''
         CRT @(19,8):' [OPEN] '
         FOR T = 1 TO NUM.OF.ITEMS
            IF T #NUM.SEL THEN
               IF BEGIN.DATE <= LIMITS.REC<2,T> THEN
                  CALL ELINE('Date found between the eff. dates')
                  END.DATE=OLD.END.DATE
                  GOTO GET.END.DATE
               END
            END
         NEXT T
      END
      IF Q THEN
         END.DATE = TRIM(Q)
         CRT @(19,8):END.DATE'D2/'

         IF END.DATE < BEGIN.DATE THEN
            CALL ELINE("Invalid Date - The Ending date can't be before the Beginning date!")
            END.DATE = OLD.END.DATE
            GOTO GET.END.DATE
         END

         FOR T = 1 TO NUM.OF.ITEMS
            IF T # NUM.SEL THEN
               CHECK = 0
               IF END.DATE => LIMITS.REC<1,T> THEN CHECK = 1
               IF END.DATE <= LIMITS.REC<2,T> THEN CHECK +=1
               IF CHECK=2 THEN
                  CALL ELINE("Ending Date resides within a prior date range.  Try again.")
                  END.DATE = OLD.END.DATE
                  GOTO GET.END.DATE
               END

               CHECK = 0
               IF BEGIN.DATE < LIMITS.REC<1,T> THEN CHECK= 1
               IF END.DATE => LIMITS.REC<1,T> THEN CHECK+=1
               IF END.DATE > LIMITS.REC<2,T> THEN CHECK+=1
               IF CHECK=3 THEN
                  CALL ELINE("Ending Date includes a prior date range.  Try again.")
                  END.DATE = OLD.END.DATE
                  GOTO GET.END.DATE
               END
            END
         NEXT
      END
      OLD.END.DATE=END.DATE

      RETURN
* Participating
GET.PARTICIPATING: ***
      IF PART.FLAG='' THEN
         PART.FLAG='Y'
      END
      EDIT.MASK=PART.FLAG
      HELP='Enter [Y]es or [N]o if this setup is participating in the Declared Value'
      CALL GEN.IN(24,10,EDIT.MASK'L#2','',Q,0,2,'','',2,24,10,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' AND PART.FLAG#'' THEN QI=PART.FLAG
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            X.BACK=1
            CRT @(24,10):PART.FLAG'L#2'
            RETURN
         CASE QI='Y'
         CASE QI='N'
         CASE 1
            CALL ELINE('Invalid Entry')
            GOTO GET.PARTICIPATING
      END CASE
      PART.FLAG=QI
      CRT @(24,10):PART.FLAG'L#2'
      RETURN

GET.OVER.AMOUNT: ***
      IF OVER.AMOUNT='' THEN
         OVER.AMOUNT='500000'
      END
      EDIT.MASK=OVER.AMOUNT
      HELP='Enter the amount over that you wish to review'
      CALL GEN.IN(24,11,EDIT.MASK'R26#8','AMT2',Q,0,8,'','',2,24,11,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' AND OVER.AMOUNT#'' THEN
         QI=OVER.AMOUNT
         Q=OVER.AMOUNT
      END
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            X.BACK=1
            CRT @(24,11):OVER.AMOUNT'R26#8'
            RETURN
         CASE NUM(QI)
            IF QI < 0 THEN
               CALL ELINE('Over amount cannot be less than Zero')
               GOTO GET.OVER.AMOUNT
            END
         CASE 1
            CALL ELINE('Invalid Entry')
            GOTO GET.OVER.AMOUNT
      END CASE
      OVER.AMOUNT=Q'R0'
      CRT @(24,11):OVER.AMOUNT'R26#8'
      RETURN

GET.BUY.RATE: ***
      EDIT.MASK=BUY.AMT
      HELP='Enter the buy rate'
      CALL GEN.IN(14,13,EDIT.MASK'R26#4','AMT2',Q,0,4,'','',2,14,13,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' AND BUY.AMT#'' THEN
         QI=BUY.AMT
         Q=BUY.AMT
      END
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            X.BACK=1
            CRT @(14,13):BUY.AMT'R26#4'
            RETURN
         CASE NUM(QI)
            IF QI < 0 THEN
               CALL ELINE('Buy amount cannot be less than Zero')
               GOTO GET.BUY.RATE
            END
            QI=QI'R0'
         CASE 1
            CALL ELINE('Invalid Entry')
            GOTO GET.BUY.RATE
      END CASE
      BUY.AMT=QI
      CRT @(14,13):BUY.AMT'R26#4'
      RETURN

GET.SELL.RATE: ***
      EDIT.MASK=SELL.AMT
      HELP='Enter the sell rate'
      CALL GEN.IN(14,14,EDIT.MASK'R26#4','AMT2',Q,0,4,'','',2,14,14,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' AND SELL.AMT#'' THEN
         QI=SELL.AMT
         Q=SELL.AMT
      END
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            X.BACK=1
            CRT @(14,14):SELL.AMT'R26#4'
            RETURN
         CASE NUM(QI)
            QI=QI'R0'
            IF QI < BUY.AMT THEN
               CALL ELINE('Sell Amount cannot be less than the buy amount')
               GOTO GET.SELL.RATE
            END
         CASE 1
            CALL ELINE('Invalid Entry')
            GOTO GET.SELL.RATE
      END CASE
      SELL.AMT=QI
      CRT @(14,14):SELL.AMT'R26#4'
      RETURN

DISPLAY.SCRN:
      CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      CRT @(0,2):STR('=',79):
      CRT @(0,4):"   Client# :"
      CRT @(0,5):"   Carrier#:"

      CRT @(0,7):'1. Eff Start date :'
      CRT @(0,8):'2. Eff End date   :'
      CRT @(0,10):'3. Participating (Y/N) :'
      CRT @(0,11):'4. Review items over   :'
      CRT @(0,13):"5. Buy Rate  :"
      CRT @(0,14):"6. Sell Rate :"
      RETURN

DISPLAY.DATA:
      IF CLIENT.ID THEN
         CLIENT.TXT=CLIENT.ID'R%5':' ':CLIENT.NAME:' (':CLIENT.CITY:', ':CLIENT.STATE:')'
         CRT @(12,4):CLIENT.TXT'L#50'
      END
      IF CARRIER.ID THEN
         CARRIER.TXT=CARRIER.ID'R%5':' ':CARRIER.NAME
         CRT @(12,5):CARRIER.TXT'L#40'
      END

      CRT @(19,7):BEGIN.DATE'D2/'
      IF BEGIN.DATE='' THEN
         CRT @(19,7):'        '
      END
      CRT @(19,8):END.DATE'D2/'
      IF BEGIN.DATE#'' AND END.DATE='' THEN
         CRT @(19,8):' [OPEN] '
      END
      IF BEGIN.DATE='' AND END.DATE='' THEN
         CRT @(19,8):'        '
      END
      CRT @(24,10):PART.FLAG'L#2'
      IF PART.FLAG='' THEN
         CRT @(24,10):'  '
      END
      CRT @(24,11):OVER.AMOUNT'R26#8'
      IF OVER.AMOUNT='' THEN
         CRT @(24,11):'        '
      END
      CRT @(14,13):BUY.AMT'R26#4'
      IF BUY.AMT='' THEN
         CRT @(14,13):'    '
      END
      CRT @(14,14):SELL.AMT'R26#4'
      IF SELL.AMT='' THEN
         CRT @(14,14):'    '
      END
      RETURN

SAVE.RECORD:
      REC.ID = CLIENT.ID:'*':CARRIER.ID
      WRITE LIMITS.REC ON F.LIMITS, REC.ID
      RETURN

DISPLAY.BENCHMARKS: ***

      CRT @(0,0):@(-1)
      STMT='SORT BR.LIMITS CLIENT# CARRIER# (I'
      EXECUTE STMT
      CALL ELINE('')
      RETURN

********************************************************************************

THE.END: ***
      CRT @(0,22):@(-3):
      END                                   ; * End program
