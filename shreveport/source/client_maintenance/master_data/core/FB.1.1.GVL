***********************************************************************
*       ----------------------------------------------------
* This program is the sole property of AFS Logistics, LLC (AUTOMATED
* FREIGHT SYSTEMS) and may not be used, copied, or modified without
* the express written consent of Brian Barker of AFS Logistics, LLC.
*
***********************************************************************
* COPYRIGHT (C) 2011 by AFS LOGISTICS LLC. -- ALL RIGHTS RESERVED
*       ----------------------------------------------------
* This program is the sole property of AFS Logistics, LLC (AUTOMATED
* FREIGHT SYSTEMS) and may not be used, copied, or modified without
* the express written consent of Brian Barker of AFS Logistics, LLC.
*
* FREIGHT BILLING PACKAGE
* PROGRAM FB.1.1.GVL
*
* AUTHOR : MIKE KERBOW
* DATE   : JANUARY 2013
*
* Program to allow updates to all AFS employee-related data in the CLIENTS
* file record as specfied in Information Technology Projects 80 and 87.
*       ----------------------------------------------------
*
* EDIT HISTORY:
*
*
********************************************************************************
* PICK COMPILER INFORMATION
* ~~~~~~~~~~~~~~~~~~~~~~~~~
*  ~PICK-FILE: FBBP
*  ~PICK-RECORD: FB.1.1.GVL
*  ~ PICK-FILE: BP
*  ~ PICK-RECORD: JIM
*  ~COMPILE-REC: YES
*  ~AUTO-ANSWER: NO
*  ~RUN-REC: NO
********************************************************************************
* 031413 - JMK01 - Replace the SLC Parent ID with the SHV Parent ID
* 081913 - JMK02 - SysAid#6557 - Accuterm Client Maintenance for SLC Authorization
* 090913 - JMK03 - SysAid#6951 - Add Access to Accuterm
* 091013 - JMK04 - Project#XXX - Add FrtDataFlg to Client record
* 121613 - JMK05 - SysAid#7611 - Accuterm
* 012914 - JMK06 - Add Processing Date option for Frt Data Export
* 060214 - JMK07 - Project#441 - Add SLC Body Details to invoice
* 061014 - JMK08 - SysAid#10079 - Need to grant Luz Escobar AccuTerm access (same as mine)
* 072914 - JMK09 - SsyAid#10955 - Sales codes
* 082114 - DRF01 - SysAid 11000 - Gave Kim Edwards access to the program
* 022615 - DRF02 - SysAid 15591 - Gave Laura Metz access similar to Elisa.
* 050515 - DRF03 - SysAid 10652 - Update client list of changes for SAGE export
* 031616 - GRB01 - SysAid 22964 - Gave user MWYNN access
* 051816 - GRB02 - SysAid 24614 Added ATAYLOR access 
***********************************************************************
      $OPTIONS EXEC.EQ.PERF
      $OPTIONS INFO.ABORT
      $OPTIONS HEADER.EJECT
      $INCLUDE FILE.DEFS INC_ADDS60.CODES
*
* Initialize general variables
*
      PROMPT''
      CALL GET.USER(USER)
      REV.NORMAL=TERM.ESC.SEQ:CHAR(TERM.REV+TERM.DIM)
      REV.HILITE=TERM.ESC.SEQ:CHAR(TERM.REV)
      REV.OFF=TERM.ESC.SEQ:CHAR(TERM.NORMAL)
      POSITION.HOLDER='* Holds Position in DA *'
      MASK.CHAR='-'
      REDSPLY=0
      SAVED.CLIENT.REC=CLIENT.REC
      ALREADY.ADDED=0
      ALREADY.DELETED=0
      SELECTION=''
      SALESMAN.LIST=''                   ; * Initially null, but loaded only once if needed
      PROG.DESC='Client Maintenance - GVL Fields'
      PACK.NAME='Freight Billing'
      PROG.NAME='FB.1.1.GVL'
      BILL.FREQ=''
      BILL.FREQ<1,1>='1' ; BILL.FREQ<2,1>='Weekly'
      BILL.FREQ<1,2>='2' ; BILL.FREQ<2,2>='Monthly'
      BILL.TERM=''
      BILL.TERM<1,1>='1' ; BILL.TERM<2,1>='Net 15'
      BILL.TERM<1,2>='2' ; BILL.TERM<2,2>='Net 30'
      BILL.TERM<1,3>='3' ; BILL.TERM<2,3>='Net 45'
      BILL.TERM<1,4>='4' ; BILL.TERM<2,4>='Net 60'
      BILL.TERM<1,5>='5' ; BILL.TERM<2,5>='Due on Receipt'
*
* Open files
*
      OPEN '','BCUST' TO F.CLIENT ELSE CALL OPEN.ABORT("BCUST",PROG.NAME)
      OPEN '','FB.ADJUST.CLIENT' TO F.ADJUST.CLIENT ELSE CALL OPEN.ABORT("FB.ADJUST.CLIENT",PROG.NAME)
      OPEN '','FB.TABLES' TO F.FB.TABLES ELSE CALL OPEN.ABORT("FB.TABLES",PROG.NAME)
      OPEN '','BCTRL' TO F.BCTRL ELSE CALL OPEN.ABORT("BCTRL",PROG.NAME)         ; * NPR01
      OPEN '','AR.SLSMAN.1000.1' TO F.SLSMAN ELSE CALL OPEN.ABORT('AR.SLSMAN.1000.1',PROG.NAME)
      OPEN '','CC.XREF' TO F.CC.XREF ELSE CALL OPEN.ABORT("CC.XREF",PROG.NAME)
      OPEN '','FB.CAR.CTRL' TO F.CAR.CTRL ELSE
         CALL OPEN.ABORT("FB.CAR.CTRL",PROG.NAME)
      END
      OPEN '','&SAVEDLISTS&' TO F.SL ELSE          ; * DRF03
         CALL OPEN.ABORT("&SAVEDLISTS&",PROG.NAME)     ; * DRF03
      END     ; * DRF03
*
* Display page heading
*
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,PERIOD,PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
*
* Get company file information
*
      BEGIN CASE
         CASE USER='BRIAN'
         CASE USER='BRIANP'
         CASE USER='BROSE'

         CASE USER='BFRANKLIN'
         CASE USER='DAVID'
         CASE USER='PBASS'
         
         CASE USER='ABROOKS'
         CASE USER='AMOULDING'
*        CASE USER='CCURREY'
         CASE USER='EMERTIN'
         CASE USER='HWEGGELAND'          ; * JMK05
         CASE USER = 'MWYNN'             ;* GRB01
         CASE USER='JMARTIN'             ; * JMK02
         CASE USER='JAMERSON'
*        CASE USER='JHAYNES'
         CASE USER='JMARTIN'             ; * JMK02
         CASE USER='KEDWARDS'             ; * DRF01
*        CASE USER='LCORKERN'            ; * JMK05
         CASE USER='LESCOBAR'            ; * JMK08
         CASE USER='LMETZ'            ; * DRF02
         CASE USER='MARY'
*        CASE USER='MCHAMBERLAIN'
         CASE USER='MHARRIS'
         CASE USER='ATAYLOR'              ;* GRB02
         CASE USER='NRATH'
         CASE USER='VZHOU'               ; * JMK03

         CASE 1
            CALL ELINE("Unauthorized Access")
            STOP
      END CASE
*
* Enter client number. If not on file then create if desired.
*
100:  CRT @(0,2):@(-3)
      HELP="Enter client number or name to search. [EX]=Exit"
      CALL GEN.IN(0,3,'Enter Client Number : #####','',Q,0,20,'','',2,-5,3,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X' OR QI='EX' OR QI=''
            STOP
         CASE NOT(QI MATCHES "0N")
            CALL SOUNDEX.DISPLAY(QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            IF ITEM.LIST='' ! DCOUNT(ITEM.LIST<1>,@VM) > 1 THEN GOTO 100
            IF NOT(NUM(ITEM.LIST<1,1>)) THEN GOTO 100
            Q=ITEM.LIST<1,1>'R%5'
            READ CLIENT.REC FROM F.CLIENT,Q ELSE
               CALL ELINE("Not a valid client. Have Myra enter cilent first")
               GOTO 100
            END
         CASE NUM(QI)
            Q = QI'R%5'
            READ CLIENT.REC FROM F.CLIENT,Q ELSE
               CALL ELINE("Not a valid client. Have Myra enter cilent first")
               GOTO 100
            END
         CASE 1
            GOTO 100
      END CASE
      CLIENT.ID=Q
      CBVIN=''
      CBVIN<1>=CLIENT.ID
      CALL CLIENT.BLOCK(CBVIN,CBVOUT,F.CAR.CTRL)
      CLIENT.TITLE=CBVOUT<1>:CLIENT.ID:' ':CLIENT.REC<2>:@(-6)
      CALL CENTER(CLIENT.TITLE,80)
*
* Read client item
*
      OLD.CLIENT.REC=CLIENT.REC
      SHV.PARENT.ID=CLIENT.REC<147>      ; * JMK01
      SLC.PARENT.ID=CLIENT.REC<274>
      SLC.CLIENT.CODE=CLIENT.REC<275>
      SLC.FEDX.GRD.GSR=CLIENT.REC<276>
      SLC.FEDX.EXP.GSR=CLIENT.REC<277>
      SLC.FRT.CLIENT=CLIENT.REC<278>
      SLC.ACTIVE.RN.CLIENT=CLIENT.REC<279>
      SLC.RATING.ID=CLIENT.REC<280>
      SLC.BILL.FREQ.ID=CLIENT.REC<281>
      SLC.BILL.TERMS.ID=CLIENT.REC<282>
      SLC.CUST.PO=CLIENT.REC<283>
      SLC.ACCT.REP.ID=CLIENT.REC<284>
      SLC.PARENT.RESELLER=CLIENT.REC<285>
      SLC.ACTIVE.LTLRN.CLIENT=CLIENT.REC<286>
      SLC.ACTIVE.GL.CODING=CLIENT.REC<287>
      SLC.FBO.CLIENT=CLIENT.REC<288>
      SLC.KEY.ACCT=CLIENT.REC<289>
      SLC.UPS.GRD.GSR=CLIENT.REC<290>
      SLC.UPS.AIR.GSR=CLIENT.REC<291>
      SLC.FEDX.RATE.AUDIT=CLIENT.REC<292>
      SLC.UPS.RATE.AUDIT=CLIENT.REC<293>
      SLC.FEDX.BILL.FREQ=CLIENT.REC<294>
      SLC.UPS.BILL.FREQ=CLIENT.REC<295>
      SLC.EST.SAVING.PCT=CLIENT.REC<296>
      SLC.COMPETE.ID=CLIENT.REC<297>
      SLC.COMPETE.FEE=CLIENT.REC<298>
      SLC.LOGICA.FEE=CLIENT.REC<299>
      SLC.COMPETE.WKLY.SAVINGS=CLIENT.REC<300>
      SLC.FRTDATA=CLIENT.REC<241>        ; * JMK04
      SLC.INV.DTLS=CLIENT.REC<303>       ; * JMK07
      CLI.UPD=0
      SLC.BILL.FREQ.DESC=''
      SLC.BILL.TERMS.DESC=''
      SLC.FEDX.BILL.FREQ.DESC=''
      SLC.UPS.BILL.FREQ.DESC=''
      LOCATE SLC.BILL.FREQ.ID IN BILL.FREQ<1> SETTING BFPOS THEN
         SLC.BILL.FREQ.DESC=BILL.FREQ<2,BFPOS>
      END
      LOCATE SLC.BILL.TERMS.ID IN BILL.TERM<1> SETTING BTPOS THEN
         SLC.BILL.TERMS.DESC=BILL.TERM<2,BTPOS>
      END
      LOCATE SLC.FEDX.BILL.FREQ IN BILL.FREQ<1> SETTING FFPOS THEN
         SLC.FEDX.BILL.FREQ.DESC=BILL.FREQ<2,FFPOS>
      END
      LOCATE SLC.UPS.BILL.FREQ IN BILL.FREQ<1> SETTING UFPOS THEN
         SLC.UPS.BILL.FREQ.DESC=BILL.FREQ<2,UFPOS>
      END
      READ SHV.PARENT.REC FROM F.CLIENT,SHV.PARENT.ID ELSE   ; * JMK01
         SHV.PARENT.REC=''               ; * JMK01
         SHV.PARENT.REC<2>='***Not on File***'     ; * JMK01
      END                                ; * JMK01
*
* Setup screen
      CRT @(0,2):@(-3):CLIENT.TITLE
200: ***
      CRT @(0,3):@(-3)
      CRT @(0,3):STR('=',79)
      CRT @(0,20):STR('=',79)
*
205: ***
*
*     CRT @( 0, 4):' 1 SLC Parent ID   : ':SLC.PARENT.ID     ; * JMK01
      CRT @( 0, 4):' 1 SHV Parent ID   : ':SHV.PARENT.ID:' ':TRIM(SHV.PARENT.REC<2>)'L#25'           ; * JMK01
      CRT @( 0, 5):' 2 GVL Client Code : ':SLC.CLIENT.CODE
      CRT @( 0, 6):' 3 Rating ID       : ':SLC.RATING.ID'L#25'
      CRT @( 0, 7):' 4 Cust PO         : ':SLC.CUST.PO'L#25'
      CRT @( 0, 8):' 5 Est Savings %   : ':SLC.EST.SAVING.PCT'R26,#12'
      CRT @( 0, 9):' 6 Comp Fee        : ':SLC.COMPETE.FEE'R26,#12'
      CRT @( 0,10):' 7 Logica Fee      : ':SLC.LOGICA.FEE'R26,#12'
      CRT @( 0,11):' 8 Comp Wkly Save  : ':SLC.COMPETE.WKLY.SAVINGS'R26,#12'
      CRT @( 0,12):' 9 Bill Freq ID    : ':SLC.BILL.FREQ.ID'R#3 ':SLC.BILL.FREQ.DESC
      CRT @( 0,13):'10 Bill Terms ID   : ':SLC.BILL.TERMS.ID'R#3 ':SLC.BILL.TERMS.DESC
      CRT @( 0,14):'11 GVL Acct Rep ID : ':SLC.ACCT.REP.ID'R#3'
      CRT @( 0,15):'12 FedEx Bill Freq : ':SLC.FEDX.BILL.FREQ'R#3 ':SLC.FEDX.BILL.FREQ.DESC
      CRT @( 0,16):'13 UPS Bill Freq   : ':SLC.UPS.BILL.FREQ'R#3 ':SLC.UPS.BILL.FREQ.DESC
      CRT @( 0,17):'14 Comp ID         : ':SLC.COMPETE.ID'R#3'

      CRT @(55, 4):'15 FedEx Ground GSR  : ':SLC.FEDX.GRD.GSR
      CRT @(55, 5):'16 FedEx Express GSR : ':SLC.FEDX.EXP.GSR
      CRT @(55, 6):'17 Freight Client    : ':SLC.FRT.CLIENT
      CRT @(55, 7):'18 Active RN Client  : ':SLC.ACTIVE.RN.CLIENT
      CRT @(55, 8):'19 Parent Reseller   : ':SLC.PARENT.RESELLER
      CRT @(55, 9):'20 Active LTL RN     : ':SLC.ACTIVE.LTLRN.CLIENT
      CRT @(55,10):'21 Active GL Coding  : ':SLC.ACTIVE.GL.CODING
      CRT @(55,11):'22 FBO CLient        : ':SLC.FBO.CLIENT
      CRT @(55,12):'23 Key Account       : ':SLC.KEY.ACCT
      CRT @(55,13):'24 UPS Ground GSR    : ':SLC.UPS.GRD.GSR
      CRT @(55,14):'25 UPS Air GSR       : ':SLC.UPS.AIR.GSR
      CRT @(55,15):'26 FedEx Rate Audit  : ':SLC.FEDX.RATE.AUDIT
      CRT @(55,16):'27 UPS Rate Audit    : ':SLC.UPS.RATE.AUDIT
      CRT @(55,17):'28 Freight Data Flag : ':SLC.FRTDATA     ; * JMK04
      CRT @(55,18):'29 Invoice Details   : ':SLC.INV.DTLS    ; * JMK07

*
210: ***
*
      IF CLI.UPD THEN
         HELP='Enter number to edit. [U]pdate [EX]it'
      END ELSE
         HELP='Enter number to edit. [EX]it'
      END
      CALL GEN.IN(0,22,'Enter Selection: --','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'                    ; * Exit without changes (abandon all changes)
            STOP

         CASE QI='U' AND CLI.UPD
            REQ.FIELDS=''
            IF SLC.CLIENT.CODE='' THEN REQ.FIELDS<1,-1>='2 Client Code'
            IF SLC.BILL.FREQ.ID='' THEN REQ.FIELDS<1,-1>='9 Billing Frequency'
            IF SLC.BILL.TERMS.ID='' THEN REQ.FIELDS<1,-1>='10 Billing Terms'
            IF SLC.ACCT.REP.ID='' THEN REQ.FIELDS<1,-1>='11 Account Executive'
            IF SLC.FEDX.GRD.GSR='' THEN REQ.FIELDS<1,-1>='15 FedEx Ground GSR'
            IF SLC.FEDX.EXP.GSR='' THEN REQ.FIELDS<1,-1>='16 FedEx Express GSR'
            IF SLC.FRT.CLIENT='' THEN REQ.FIELDS<1,-1>='17 Freight Client'
            IF SLC.ACTIVE.RN.CLIENT='' THEN REQ.FIELDS<1,-1>='18 Active RN Client'
            IF SLC.PARENT.RESELLER='' THEN REQ.FIELDS<1,-1>='19 Parent Reseller'
            IF SLC.ACTIVE.LTLRN.CLIENT='' THEN REQ.FIELDS<1,-1>='20 Active LTL RN'
            IF SLC.ACTIVE.GL.CODING='' THEN REQ.FIELDS<1,-1>='21 Active GL Coding'
            IF SLC.FBO.CLIENT='' THEN REQ.FIELDS<1,-1>='22 FBO CLient'
            IF SLC.KEY.ACCT='' THEN REQ.FIELDS<1,-1>='23 Key Account'
            IF SLC.UPS.GRD.GSR='' THEN REQ.FIELDS<1,-1>='24 UPS Ground GSR'
            IF SLC.UPS.AIR.GSR='' THEN REQ.FIELDS<1,-1>='25 UPS Air GSR'
            IF SLC.FEDX.RATE.AUDIT='' THEN REQ.FIELDS<1,-1>='26 FedEx Rate Audit'
            IF SLC.UPS.RATE.AUDIT='' THEN REQ.FIELDS<1,-1>='27 UPS Rate Audit'
            IF REQ.FIELDS#'' THEN
               REQ.NVAL=DCOUNT(REQ.FIELDS<1>,@VM)
               IF REQ.NVAL=1 THEN
                  CALL ELINE(REQ.FIELDS<1,1>:' is required. Please re-enter.')
               END ELSE
                  CALL ELINE('Several required fields are missing. Please review.')
               END
               GOTO 210
            END

            CLIENT.REC<147>=SHV.PARENT.ID          ; * JMK01
            CLIENT.REC<241>=SLC.FRTDATA  ; * JMK04
            CLIENT.REC<274>=SLC.PARENT.ID
            CLIENT.REC<275>=SLC.CLIENT.CODE
            CLIENT.REC<276>=SLC.FEDX.GRD.GSR
            CLIENT.REC<277>=SLC.FEDX.EXP.GSR
            CLIENT.REC<278>=SLC.FRT.CLIENT
            CLIENT.REC<279>=SLC.ACTIVE.RN.CLIENT
            CLIENT.REC<280>=SLC.RATING.ID
            CLIENT.REC<281>=SLC.BILL.FREQ.ID
            CLIENT.REC<282>=SLC.BILL.TERMS.ID
            CLIENT.REC<283>=SLC.CUST.PO
            CLIENT.REC<284>=SLC.ACCT.REP.ID
            CLIENT.REC<285>=SLC.PARENT.RESELLER
            CLIENT.REC<286>=SLC.ACTIVE.LTLRN.CLIENT
            CLIENT.REC<287>=SLC.ACTIVE.GL.CODING
            CLIENT.REC<288>=SLC.FBO.CLIENT
            CLIENT.REC<289>=SLC.KEY.ACCT
            CLIENT.REC<290>=SLC.UPS.GRD.GSR
            CLIENT.REC<291>=SLC.UPS.AIR.GSR
            CLIENT.REC<292>=SLC.FEDX.RATE.AUDIT
            CLIENT.REC<293>=SLC.UPS.RATE.AUDIT
            CLIENT.REC<294>=SLC.FEDX.BILL.FREQ
            CLIENT.REC<295>=SLC.UPS.BILL.FREQ
            CLIENT.REC<296>=SLC.EST.SAVING.PCT
            CLIENT.REC<297>=SLC.COMPETE.ID
            CLIENT.REC<298>=SLC.COMPETE.FEE
            CLIENT.REC<299>=SLC.LOGICA.FEE
            CLIENT.REC<300>=SLC.COMPETE.WKLY.SAVINGS
            CLIENT.REC<303>=SLC.INV.DTLS           ; * JMK07
            WRITE CLIENT.REC ON F.CLIENT,CLIENT.ID
            WRITEV CLIENT.ID ON F.CC.XREF,SLC.CLIENT.CODE,1
            IF CLIENT.ID[1,2]#'99' THEN     ; * DRF03
               SAGE.VIN=''     ; * DRF03
               SAGE.VIN<1>='NEW.SAGE.CLIENT'     ; * DRF03
               SAGE.VIN<2>=CLIENT.ID     ; * DRF03
               SAGE.VOUT=''     ; * DRF03
               CALL UPD.SAGE.CHANGE.REC(SAGE.VIN,SAGE.VOUT,F.SL)     ; * DRF03
            END     ; * DRF03
            SQLVIN=''
            SQLVIN<1>=USER
            SQLVIN<2>=CLIENT.ID
            SQLVOUT=''
            CALL UPD.SQL.CLIENT.SUB(SQLVIN,SQLVOUT,CLIENT.REC)
            CALL UPD.SQL.QCLIENT.SUB(SQLVIN,SQLVOUT,CLIENT.REC,F.SLSMAN)
            ADJUST.CLIENT.ID=CLIENT.ID:'*':DATE():'*':TIME():'*':USER
            WRITE CLIENT.REC ON F.ADJUST.CLIENT,ADJUST.CLIENT.ID
            GOTO EXIT.PROGRAM

         CASE QI='' AND CLI.UPD=0        ; * JMK01
            GOTO 100                     ; * JMK01

         CASE QI=''
            CALL ELINE('Invalid entry - Command not recognized.')
            GOTO 210

         CASE NUM(QI)                    ; * Edit numbered item
*           IF QI<1 OR QI>27 THEN        ; * JMK04
*           IF QI<1 OR QI>28 THEN        ; * JMK04 ; * JMK07
            IF QI<1 OR QI>29 THEN        ; * JMK04 ; * JMK07
               CALL ELINE('Invalid entry - Number out of range.')
               GOTO 210
            END ELSE
*              ON QI GOSUB 1000,2000,3000,4000,5000,6000,7000,8000,9000,10000,11000,12000,13000,14000,15000,16000,17000,18000,19000,20000,21000,22000,23000,24000,25000,26000,27000  ; * JMK04
*              ON QI GOSUB 1000,2000,3000,4000,5000,6000,7000,8000,9000,10000,11000,12000,13000,14000,15000,16000,17000,18000,19000,20000,21000,22000,23000,24000,25000,26000,27000,28000      ; * JMK04 ; * JMK07
               ON QI GOSUB 1000,2000,3000,4000,5000,6000,7000,8000,9000,10000,11000,12000,13000,14000,15000,16000,17000,18000,19000,20000,21000,22000,23000,24000,25000,26000,27000,28000,29000          ; * JMK04 ; * JMK07
               GOTO 205
            END

         CASE 1
            CALL ELINE('Invalid entry - Command not recognized.')
            GOTO 210
      END CASE


* 1 SLC Parent ID
1000: ***
*     MASK=SLC.PARENT.ID:STR(MASK.CHAR,10-LEN(SLC.PARENT.ID)) ; * JMK01
*     HELP='Enter the SLC Parent ID [X]=Back [EX]=Exit'       ; * JMK01
*     CALL GEN.IN(21,4,MASK,'',Q,0,10,'','',2,21,4,0,QI,HELP,0,23)     ; * JMK01
*     QI=OCONV(QI,'MCU')                 ; * JMK01
*     IF QI='' THEN QI=SLC.PARENT.ID     ; * JMK01
*     BEGIN CASE                         ; * JMK01
*        CASE QI='EX'                    ; * JMK01
*           STOP                         ; * JMK01
*        CASE QI='X' OR QI=''            ; * JMK01
*           RETURN                       ; * JMK01
*        CASE QI=' '                     ; * JMK01
*           QI=''                        ; * JMK01
*        CASE NUM(QI)                    ; * JMK01
*        CASE 1                          ; * JMK01
*           GOTO 1000                    ; * JMK01
*     END CASE                           ; * JMK01
*     IF SLC.PARENT.ID#QI THEN CLI.UPD=1 ; * JMK01
*     SLC.PARENT.ID=QI                   ; * JMK01
*     RETURN                             ; * JMK01
*
* Enter Parent-Client ID to group regional companies together
*
      IF CLIENT.REC<92>='00005' THEN
         HELP="Enter the Parent-Client ID."        ; * JMK01
         IF CLIENT.REC<147>='' THEN MASK='#####' ELSE MASK=CLIENT.REC<147>'R%5'  ; * JMK01
         CALL GEN.IN(21,4,MASK,'',Q,0,5,'','',2,21,4,0,QI,HELP,0,23)   ; * JMK01
         IF QI='' THEN Q=SHV.PARENT.ID   ; * JMK01
         Q=Q'R%5'                        ; * JMK01
         CRT @(21,4):Q                   ; * JMK01
         IF Q='' OR NOT(NUM(Q)) THEN     ; * JMK01
            CALL ELINE('Invalid entry.')           ; * JMK01
            GOTO 1000                    ; * JMK01
         END                             ; * JMK01
         READ SHV.PARENT.REC FROM F.CLIENT,Q ELSE  ; * JMK01
            CALL ELINE('Error: Parent ID ':Q:' not on file.')          ; * JMK01
            GOTO 1000                    ; * JMK01
         END                             ; * JMK01
         IF SHV.PARENT.REC<30>#CLIENT.REC<30> THEN           ; * JMK01
            CALL ELINE('Error: Parent ID ':Q:' does not match status.')          ; * JMK01
            GOTO 1000                    ; * JMK01
         END                             ; * JMK01
         CRT @(21,4):Q:' ':SHV.PARENT.REC<2>'L#25'           ; * JMK01
         PARENT.CLIENT.NAME=TRIM(SHV.PARENT.REC<2>)          ; * JMK01
         IF Q=CLIENT.ID THEN             ; * JMK01
            CALL ELINE('Parent Record ':PARENT.CLIENT.NAME:' matches Client.')   ; * JMK01
         END ELSE                        ; * JMK01
            CALL ELINE('Parent Record ':PARENT.CLIENT.NAME:' DOES NOT match Client.')      ; * JMK01
         END                             ; * JMK01
         IF SHV.PARENT.ID#QI THEN CLI.UPD=1        ; * JMK01
         SHV.PARENT.ID=Q                 ; * JMK01
      END ELSE
         CALL ELINE('Please contact Myra to change this field')
      END
      CRT @(21,4):SHV.PARENT.ID:' ':TRIM(SHV.PARENT.REC<2>)'L#25'      ; * JMK01
      RETURN                             ; * JMK01

* 1 SLC Client Code
2000: ***
      MASK=SLC.CLIENT.CODE:STR(MASK.CHAR,10-LEN(SLC.CLIENT.CODE))
      HELP='Enter the GVL Client Code [X]=Back [EX]=Exit'
      CALL GEN.IN(21,5,MASK,'',Q,0,10,'','',2,21,5,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=SLC.CLIENT.CODE
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            GOTO 1000
         CASE QI=' '
            QI=''
         CASE LEN(QI)='4'
         CASE 1
            GOTO 2000
      END CASE
      READ TEST FROM F.CC.XREF,QI THEN
         IF CLIENT.ID#TEST<1> THEN
            CALL ELINE(QI:' already used. Try again.')
            GOTO 2000
         END
      END
      IF SLC.CLIENT.CODE#QI THEN CLI.UPD=1
      SLC.CLIENT.CODE=QI
      RETURN

* 3 Rating ID
3000: ***
      MASK=SLC.RATING.ID:STR(MASK.CHAR,25-LEN(SLC.RATING.ID))
      HELP='Enter the GVL Rating ID [X]=Back [EX]=Exit'
      CALL GEN.IN(21,6,MASK,'',Q,0,25,'','',2,21,6,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=SLC.RATING.ID
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            GOTO 2000
         CASE QI=' '
            QI=''
         CASE TRIM(QI)=''
            GOTO 3000
      END CASE
      IF SLC.RATING.ID#QI THEN CLI.UPD=1
      SLC.RATING.ID=QI
      RETURN

* 4 Customer PO
4000: ***
      MASK=SLC.CUST.PO:STR(MASK.CHAR,25-LEN(SLC.CUST.PO))
      HELP='Enter the GVL Customer PO [X]=Back [EX]=Exit'
      CALL GEN.IN(21,7,MASK,'',Q,0,25,'','',2,21,7,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=SLC.CUST.PO
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            GOTO 3000
         CASE QI=' '
            QI=''
         CASE TRIM(QI)=''
            GOTO 4000
      END CASE
      IF SLC.CUST.PO#QI THEN CLI.UPD=1
      SLC.CUST.PO=QI
      RETURN

* 5 Estimated Savings Percent
5000: ***
      MASK=SLC.EST.SAVING.PCT:STR(MASK.CHAR,12-LEN(SLC.EST.SAVING.PCT))
      HELP='Enter the estimated savings percent [X]=Back [EX]=Exit'
      CALL GEN.IN(21,8,MASK,'',Q,0,12,'','',2,21,8,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=SLC.EST.SAVING.PCT
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            GOTO 4000
         CASE QI=' '
            QI=''
         CASE ALPHA(QI)
            GOTO 5000
      END CASE
      IF SLC.EST.SAVING.PCT#QI THEN CLI.UPD=1
      SLC.EST.SAVING.PCT=QI
      RETURN

* 6 Competitor Fee
6000: ***
      MASK=SLC.COMPETE.FEE:STR(MASK.CHAR,12-LEN(SLC.COMPETE.FEE))
      HELP="Enter the Competitor's Fee [X]=Back [EX]=Exit"
      CALL GEN.IN(21,9,MASK,'',Q,0,12,'','',2,21,9,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=SLC.COMPETE.FEE
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            GOTO 5000
         CASE QI=' '
            QI=''
         CASE ALPHA(QI)
            GOTO 6000
      END CASE
      IF SLC.COMPETE.FEE#QI THEN CLI.UPD=1
      SLC.COMPETE.FEE=QI
      RETURN

* 7 Logica Fee
7000: ***
      MASK=SLC.LOGICA.FEE:STR(MASK.CHAR,12-LEN(SLC.LOGICA.FEE))
      HELP="Enter Logica's fee [X]=Back [EX]=Exit"
      CALL GEN.IN(21,10,MASK,'',Q,0,12,'','',2,21,10,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=SLC.LOGICA.FEE
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            GOTO 6000
         CASE QI=' '
            QI=''
         CASE ALPHA(QI)
            GOTO 7000
      END CASE
      IF SLC.LOGICA.FEE#QI THEN CLI.UPD=1
      SLC.LOGICA.FEE=QI
      RETURN

* 8 Competitor Weekly Savings
8000: ***
      MASK=SLC.COMPETE.WKLY.SAVINGS:STR(MASK.CHAR,12-LEN(SLC.COMPETE.WKLY.SAVINGS))
      HELP="Enter the Competitor's Weekly Savings [X]=Back [EX]=Exit"
      CALL GEN.IN(21,11,MASK,'',Q,0,12,'','',2,21,11,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=SLC.COMPETE.WKLY.SAVINGS
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            GOTO 7000
         CASE QI=' '
            QI=''
         CASE ALPHA(QI)
            GOTO 8000
      END CASE
      IF SLC.COMPETE.WKLY.SAVINGS#QI THEN CLI.UPD=1
      SLC.COMPETE.WKLY.SAVINGS=QI
      RETURN

* 9 BIlling Frequency ID
9000: ***
      MASK=SLC.BILL.FREQ.ID:STR(MASK.CHAR,3-LEN(SLC.BILL.FREQ.ID))
      HELP="Enter the Billing Frenquency ID [X]=Back [EX]=Exit"
      CALL GEN.IN(21,12,MASK,'',Q,0,22,'','',2,21,12,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=SLC.BILL.FREQ.ID
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            GOTO 8000
         CASE QI=' '
            QI=''
         CASE ALPHA(QI)
            CALL ELINE('Invalid option')
            GOTO 9000
      END CASE
      LOCATE QI IN BILL.FREQ<1> SETTING BFPOS ELSE
         CALL ELINE('Invalid option')
         GO 9000
      END
      IF SLC.BILL.FREQ.ID#QI THEN CLI.UPD=1
      SLC.BILL.FREQ.ID=QI
      SLC.BILL.FREQ.DESC=''
      LOCATE SLC.BILL.FREQ.ID IN BILL.FREQ<1> SETTING BFPOS THEN
         SLC.BILL.FREQ.DESC=BILL.FREQ<2,BFPOS>
      END
      RETURN


* 10 Billing Terms ID
10000: ***
      MASK=SLC.BILL.TERMS.ID:STR(MASK.CHAR,3-LEN(SLC.BILL.TERMS.ID))
      HELP="Enter the Billing Terms ID [X]=Back [EX]=Exit"
      CALL GEN.IN(21,13,MASK,'',Q,0,22,'','',2,21,13,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=SLC.BILL.TERMS.ID
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            GOTO 9000
         CASE QI=' '
            QI=''
         CASE ALPHA(QI)
            CALL ELINE('Invalid option')
            GOTO 10000
      END CASE
      LOCATE QI IN BILL.TERM<1> SETTING BFPOS ELSE
         CALL ELINE('Invalid option')
         GO 10000
      END
      IF SLC.BILL.TERMS.ID#QI THEN CLI.UPD=1
      SLC.BILL.TERMS.ID=QI
      SLC.BILL.TERMS.DESC=''
      LOCATE SLC.BILL.TERMS.ID IN BILL.TERM<1> SETTING BTPOS THEN
         SLC.BILL.TERMS.DESC=BILL.TERM<2,BTPOS>
      END
      RETURN

* 11 SLC Accounts Rep ID
11000: ***
      MASK=SLC.ACCT.REP.ID:STR(MASK.CHAR,3-LEN(SLC.ACCT.REP.ID))
*     HELP="Enter the Account Rep ID 220-260 [X]=Back [EX]=Exit"       ; * JMK09
      HELP="Enter the Account Rep ID 220-280 [X]=Back [EX]=Exit"       ; * JMK09
      CALL GEN.IN(21,14,MASK,'',Q,0,3,'','',2,21,14,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=SLC.ACCT.REP.ID
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            GOTO 10000
         CASE QI=' '
            QI=''
*        CASE QI<220 OR QI>260           ; * JMK09
         CASE QI<220 OR QI>280           ; * JMK09
            CALL ELINE('Invalid choice')
            GOTO 11000
         CASE ALPHA(QI)
            GOTO 11000
      END CASE
      IF SLC.ACCT.REP.ID#QI THEN CLI.UPD=1
      SLC.ACCT.REP.ID=QI
      RETURN

* 12 Federal Express Billing Frenquency
12000: ***
      MASK=SLC.FEDX.BILL.FREQ:STR(MASK.CHAR,3-LEN(SLC.FEDX.BILL.FREQ))
      HELP="Enter the FedEx Billing Frenquency [X]=Back [EX]=Exit"
      CALL GEN.IN(21,15,MASK,'',Q,0,3,'','',2,21,15,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=SLC.FEDX.BILL.FREQ
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            GOTO 11000
         CASE QI=' '
            QI=''
         CASE ALPHA(QI)
            CALL ELINE('Invalid option')
            GOTO 12000
      END CASE
      IF QI#'' THEN
         LOCATE QI IN BILL.FREQ<1> SETTING BFPOS ELSE
            CALL ELINE('Invalid option')
            GO 12000
         END
      END
      IF SLC.FEDX.BILL.FREQ#QI THEN CLI.UPD=1
      SLC.FEDX.BILL.FREQ=QI
      SLC.FEDX.BILL.FREQ.DESC=''
      LOCATE SLC.FEDX.BILL.FREQ IN BILL.FREQ<1> SETTING FFPOS THEN
         SLC.FEDX.BILL.FREQ.DESC=BILL.FREQ<2,FFPOS>
      END
      RETURN

* 13 UPS Billing Frenquency
13000: ***
      MASK=SLC.UPS.BILL.FREQ:STR(MASK.CHAR,3-LEN(SLC.UPS.BILL.FREQ))
      HELP="Enter the UPS Billing Frenquency [X]=Back [EX]=Exit"
      CALL GEN.IN(21,16,MASK,'',Q,0,3,'','',2,21,16,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=SLC.UPS.BILL.FREQ
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            GOTO 12000
         CASE QI=' '
            QI=''
         CASE ALPHA(QI)
            CALL ELINE('Invalid option')
            GOTO 13000
      END CASE
      IF QI#'' THEN
         LOCATE QI IN BILL.FREQ<1> SETTING BFPOS ELSE
            CALL ELINE('Invalid option')
            GO 13000
         END
      END
      IF SLC.UPS.BILL.FREQ#QI THEN CLI.UPD=1
      SLC.UPS.BILL.FREQ=QI
      SLC.UPS.BILL.FREQ.DESC=''
      LOCATE SLC.UPS.BILL.FREQ IN BILL.FREQ<1> SETTING UFPOS THEN
         SLC.UPS.BILL.FREQ.DESC=BILL.FREQ<2,UFPOS>
      END
      RETURN

* 14 Competitor ID
14000: ***
      MASK=SLC.COMPETE.ID:STR(MASK.CHAR,3-LEN(SLC.COMPETE.ID))
      HELP="Enter the Competitor ID [X]=Back [EX]=Exit"
      CALL GEN.IN(21,17,MASK,'',Q,0,3,'','',2,21,17,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=SLC.COMPETE.ID
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            GOTO 13000
         CASE QI=' '
            QI=''
         CASE ALPHA(QI)
            GOTO 14000
      END CASE
      IF SLC.COMPETE.ID#QI THEN CLI.UPD=1
      SLC.COMPETE.ID=QI
      RETURN

* 15 FedEx Ground GSR (Y/N)
15000: ***
      MASK=SLC.FEDX.GRD.GSR
      HELP="Does Client have FedEx Ground GSR [Y]=Yes [N]=No [X]=Back [EX]=Exit"
      CALL GEN.IN(78,4,MASK,'',Q,0,2,'','',2,78,4,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=SLC.FEDX.GRD.GSR
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            GOTO 14000
         CASE QI=' '
            QI=''
         CASE QI='Y' OR QI='y' OR QI='1'
            QI='Y'
         CASE QI='N' OR QI='n' OR QI='0'
            QI='N'
         CASE 1
            GOTO 15000
      END CASE
      IF SLC.FEDX.GRD.GSR#QI THEN CLI.UPD=1
      SLC.FEDX.GRD.GSR=QI
      RETURN

* 16 FedEx Express GSR (Y/N)
16000: ***
      MASK=SLC.FEDX.EXP.GSR
      HELP="Does Client have FedEx Express GSR [Y]=Yes [N]=No [X]=Back [EX]=Exit"
      CALL GEN.IN(78,5,MASK,'',Q,0,2,'','',2,78,5,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=SLC.FEDX.EXP.GSR
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            GOTO 15000
         CASE QI=' '
            QI=''
         CASE QI='Y' OR QI='y' OR QI='1'
            QI='Y'
         CASE QI='N' OR QI='n' OR QI='0'
            QI='N'
         CASE 1
            GOTO 16000
      END CASE
      IF SLC.FEDX.EXP.GSR#QI THEN CLI.UPD=1
      SLC.FEDX.EXP.GSR=QI
      RETURN

* 17 Freight Client (Y/N)
17000: ***
      MASK=SLC.FRT.CLIENT
      HELP="Does Client have Freight Shipments [Y]=Yes [N]=No [X]=Back [EX]=Exit"
      CALL GEN.IN(78,6,MASK,'',Q,0,2,'','',2,78,6,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=SLC.FRT.CLIENT
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            GOTO 16000
         CASE QI=' '
            QI=''
         CASE QI='Y' OR QI='y' OR QI='1'
            QI='Y'
         CASE QI='N' OR QI='n' OR QI='0'
            QI='N'
         CASE 1
            GOTO 17000
      END CASE
      IF SLC.FRT.CLIENT#QI THEN CLI.UPD=1
      SLC.FRT.CLIENT=QI
      RETURN

* 18 Active Rate Negoiation Client (Y/N)
18000: ***
      MASK=SLC.ACTIVE.RN.CLIENT
      HELP="Is this a RN Client [Y]=Yes [N]=No [X]=Back [EX]=Exit"
      CALL GEN.IN(78,7,MASK,'',Q,0,2,'','',2,78,7,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=SLC.ACTIVE.RN.CLIENT
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            GOTO 17000
         CASE QI=' '
            QI=''
         CASE QI='Y' OR QI='y' OR QI='1'
            QI='Y'
         CASE QI='N' OR QI='n' OR QI='0'
            QI='N'
         CASE 1
            GOTO 18000
      END CASE
      IF SLC.ACTIVE.RN.CLIENT#QI THEN CLI.UPD=1
      SLC.ACTIVE.RN.CLIENT=QI
      RETURN

* 19 Is Client's Parent a Reseller (Y/N)
19000: ***
      MASK=SLC.PARENT.RESELLER
      HELP="Is Client's Parent a Reseller [Y]=Yes [N]=No [X]=Back [EX]=Exit"
      CALL GEN.IN(78,8,MASK,'',Q,0,2,'','',2,78,8,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=SLC.PARENT.RESELLER
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            GOTO 18000
         CASE QI=' '
            QI=''
         CASE QI='Y' OR QI='y' OR QI='1'
            QI='Y'
         CASE QI='N' OR QI='n' OR QI='0'
            QI='N'
         CASE 1
            GOTO 19000
      END CASE
      IF SLC.PARENT.RESELLER#QI THEN CLI.UPD=1
      SLC.PARENT.RESELLER=QI
      RETURN

* 20 Is Client an Active RN Client (Y/N)
20000: ***
      MASK=SLC.ACTIVE.LTLRN.CLIENT
      HELP="Is this an Active LTL RN Client [Y]=Yes [N]=No [X]=Back [EX]=Exit"
      CALL GEN.IN(78,9,MASK,'',Q,0,2,'','',2,78,9,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=SLC.ACTIVE.LTLRN.CLIENT
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            GOTO 19000
         CASE QI=' '
            QI=''
         CASE QI='Y' OR QI='y' OR QI='1'
            QI='Y'
         CASE QI='N' OR QI='n' OR QI='0'
            QI='N'
         CASE 1
            GOTO 20000
      END CASE
      IF SLC.ACTIVE.LTLRN.CLIENT#QI THEN CLI.UPD=1
      SLC.ACTIVE.LTLRN.CLIENT=QI
      RETURN

* 21 Is Client Actively using GL Coding (Y/N)
21000: ***
      MASK=SLC.ACTIVE.GL.CODING
      HELP="Does Client use GL Coding [Y]=Yes [N]=No [X]=Back [EX]=Exit"
      CALL GEN.IN(78,10,MASK,'',Q,0,2,'','',2,78,10,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=SLC.ACTIVE.GL.CODING
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            GOTO 20000
         CASE QI=' '
            QI=''
         CASE QI='Y' OR QI='y' OR QI='1'
            QI='Y'
         CASE QI='N' OR QI='n' OR QI='0'
            QI='N'
         CASE 1
            GOTO 21000
      END CASE
      IF SLC.ACTIVE.GL.CODING#QI THEN CLI.UPD=1
      SLC.ACTIVE.GL.CODING=QI
      RETURN

* 22 Is this a FBO Client (Y/N)
22000: ***
      MASK=SLC.FBO.CLIENT
      HELP="Is the a FBO Client [Y]=Yes [N]=No [X]=Back [EX]=Exit"
      CALL GEN.IN(78,11,MASK,'',Q,0,2,'','',2,78,11,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=SLC.FBO.CLIENT
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            GOTO 21000
         CASE QI=' '
            QI=''
         CASE QI='Y' OR QI='y' OR QI='1'
            QI='Y'
         CASE QI='N' OR QI='n' OR QI='0'
            QI='N'
         CASE 1
            GOTO 22000
      END CASE
      IF SLC.FBO.CLIENT#QI THEN CLI.UPD=1
      SLC.FBO.CLIENT=QI
      RETURN

* 23 Is this the Client's Key Account (Y/N)
23000: ***
      MASK=SLC.KEY.ACCT
      HELP="Is this the Client's Key Account [Y]=Yes [N]=No [X]=Back [EX]=Exit"
      CALL GEN.IN(78,12,MASK,'',Q,0,2,'','',2,78,12,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=SLC.KEY.ACCT
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            GOTO 22000
         CASE QI=' '
            QI=''
         CASE QI='Y' OR QI='y' OR QI='1'
            QI='Y'
         CASE QI='N' OR QI='n' OR QI='0'
            QI='N'
         CASE 1
            GOTO 23000
      END CASE
      IF SLC.KEY.ACCT#QI THEN CLI.UPD=1
      SLC.KEY.ACCT=QI
      RETURN

* 24 UPS Ground GSR (Y/N)
24000: ***
      MASK=SLC.UPS.GRD.GSR
      HELP="Does Client have UPS Ground GSR [Y]=Yes [N]=No [X]=Back [EX]=Exit"
      CALL GEN.IN(78,13,MASK,'',Q,0,2,'','',2,78,13,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=SLC.UPS.GRD.GSR
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            GOTO 23000
         CASE QI=' '
            QI=''
         CASE QI='Y' OR QI='y' OR QI='1'
            QI='Y'
         CASE QI='N' OR QI='n' OR QI='0'
            QI='N'
         CASE 1
            GOTO 24000
      END CASE
      IF SLC.UPS.GRD.GSR#QI THEN CLI.UPD=1
      SLC.UPS.GRD.GSR=QI
      RETURN

* 25 UPS Air GSR (Y/N)
25000: ***
      MASK=SLC.UPS.AIR.GSR
      HELP="Does Client have UPS Air GSR [Y]=Yes [N]=No [X]=Back [EX]=Exit"
      CALL GEN.IN(78,14,MASK,'',Q,0,2,'','',2,78,14,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=SLC.UPS.AIR.GSR
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            GOTO 24000
         CASE QI=' '
            QI=''
         CASE QI='Y' OR QI='y' OR QI='1'
            QI='Y'
         CASE QI='N' OR QI='n' OR QI='0'
            QI='N'
         CASE 1
            GOTO 25000
      END CASE
      IF SLC.UPS.AIR.GSR#QI THEN CLI.UPD=1
      SLC.UPS.AIR.GSR=QI
      RETURN

* 26 FedEx Rate Audit (Y/N)
26000: ***
      MASK=SLC.FEDX.RATE.AUDIT
      HELP="Is this a FedEx Rate Audit Client [Y]=Yes [N]=No [X]=Back [EX]=Exit"
      CALL GEN.IN(78,15,MASK,'',Q,0,2,'','',2,78,15,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=SLC.FEDX.RATE.AUDIT
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            GOTO 25000
         CASE QI=' '
            QI=''
         CASE QI='Y' OR QI='y' OR QI='1'
            QI='Y'
         CASE QI='N' OR QI='n' OR QI='0'
            QI='N'
         CASE 1
            GOTO 26000
      END CASE
      IF SLC.FEDX.RATE.AUDIT#QI THEN CLI.UPD=1
      SLC.FEDX.RATE.AUDIT=QI
      RETURN

* 27 UPS Rate Audit (Y/N)
27000: ***
      MASK=SLC.UPS.RATE.AUDIT
      HELP="Is this a UPS Rate Audit Client [Y]=Yes [N]=No [X]=Back [EX]=Exit"
      CALL GEN.IN(78,16,MASK,'',Q,0,1,'','',2,78,16,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI=SLC.UPS.RATE.AUDIT
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            GOTO 26000
         CASE QI=' '
            QI=''
         CASE QI='Y' OR QI='y' OR QI='1'
            QI='Y'
         CASE QI='N' OR QI='n' OR QI='0'
            QI='N'
         CASE 1
            GOTO 27000
      END CASE
      IF SLC.UPS.RATE.AUDIT#QI THEN CLI.UPD=1
      SLC.UPS.RATE.AUDIT=QI
      RETURN

* 28 Freight Data Flag (Y/N)
28000: ***
      MASK=SLC.FRTDATA                   ; * JMK04
*     HELP="Is this a Freight Data Client [Y]=Yes [N]=No [X]=Back [EX]=Exit"     ; * JMK04 ; * JMK06
      HELP="Is this a Freight Data Client [P]=Proc Day [Y]=Weekly [N]=No [X]=Back [EX]=Exit"         ; * JMK04 ; * JMK06
      CALL GEN.IN(78,17,MASK,'',Q,0,1,'','',2,78,17,0,QI,HELP,0,23)    ; * JMK04
      QI=OCONV(QI,'MCU')                 ; * JMK04
      IF QI='' THEN QI=SLC.FRTDATA       ; * JMK04
      BEGIN CASE                         ; * JMK04
         CASE QI='EX'                    ; * JMK04
            STOP                         ; * JMK04
         CASE QI='X'                     ; * JMK04
            GOTO 27000                   ; * JMK04
         CASE QI=' '                     ; * JMK04
            QI=''                        ; * JMK04
         CASE QI='P' OR QI='p'           ; * JMK06
            QI='P'                       ; * JMK06
         CASE QI='Y' OR QI='y' OR QI='1'           ; * JMK04
            QI='Y'                       ; * JMK04
         CASE QI='N' OR QI='n' OR QI='0'           ; * JMK04
            QI='N'                       ; * JMK04
         CASE 1                          ; * JMK04
            GOTO 28000                   ; * JMK04
      END CASE                           ; * JMK04
      IF SLC.FRTDATA#QI THEN CLI.UPD=1   ; * JMK04
      SLC.FRTDATA=QI                     ; * JMK04
      RETURN                             ; * JMK04

* 29 SLC Invoice Details Flag (Y/N)      ; * JMK07
29000: ***
      MASK=SLC.INV.DTLS                  ; * JMK07
      HELP="Show GVL Billing Details and Carrier Summary on Invoice [Y]=Yes [N]=No [X]=Back [EX]=Exit"         ; * JMK07
      CALL GEN.IN(78,17,MASK,'',Q,0,1,'','',2,78,17,0,QI,HELP,0,23)    ; * JMK07
      QI=OCONV(QI,'MCU')                 ; * JMK07
      IF QI='' THEN QI=SLC.FRTDATA       ; * JMK07
      BEGIN CASE                         ; * JMK07
         CASE QI='EX'                    ; * JMK07
            STOP                         ; * JMK07
         CASE QI='X'                     ; * JMK07
            GOTO 28000                   ; * JMK07
         CASE QI='Y' OR QI='1'           ; * JMK07
            QI='Y'                       ; * JMK07
         CASE QI='N' OR QI='0'           ; * JMK07
            QI='N'                       ; * JMK07
         CASE 1                          ; * JMK07
            GOTO 29000                   ; * JMK07
      END CASE                           ; * JMK07
      IF SLC.INV.DTLS#QI THEN CLI.UPD=1  ; * JMK07
      SLC.INV.DTLS=QI                    ; * JMK07
      RETURN                             ; * JMK07

*
EXIT.PROGRAM: *
*
      END
