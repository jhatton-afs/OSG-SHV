      SUBROUTINE SEND.IMG.UPD.REST(VIN,VOUT)
***********************************************************************
* Program name : SEND.IMG.UPD.REST
* Author       : Greg Bino
* Date written : 01-11-2019
* Library      : FBBP
* COPYRIGHT (C) 2019 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED.
*
* SEND IMAGE USED UPDATE TO OCR WEBSERVICE INTERFACE
*
* Last updated by afs (AFSLOGISTICS\nmeddaugh) at 09:42:03 on 02/24/2021.
*
* Start modification history
* Mod 00 01-10-19, grb, 21092.0000  New program
* 02/24/21 : NKH01 : ACCU-1133 Added server checking for dev
* End modification history
*
************************************************************************
*
* Initialize variables
*
$INCLUDE PROG.ADMIN INC_OPTIONS
$INCLUDE UNIVERSE.INCLUDE UDO.H

      STATUS = 0

      IMAGE.NO = VIN<1>
      KEYER = VIN<2>
      CLIENT.ID = VIN<3>
      ACTION = VIN<4>
      PRO = VIN<5>
      RESP.CNT=1
      RESP = ''
      VOUT=''
      TIME.LINE=''
      ST.TIME = TIME()
      TIME.LINE<1,1,1>=TIME()            ; * start time
      PROMPT ''
      TIMEOUT = 50000
      PROG.NAME='SEND.IMG.UPD.REST'
      CALL GET.SERVER.INFO(SVR.VIN,SVR.VOUT)       ; * NKH01
      SERVER.NAME=SVR.VOUT<1>                      ; * NKH01            

      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'SEND.IMG.UPD.REST' ; UPL.VOUT = ''
      ***    CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)
      OPEN 'CONTROL' TO FILE.CNTL ELSE
         CALL ELINE('UNABLE TO OPEN CONTROL FILE')
         RETURN
      END
      OPEN 'OCR.LOG' TO F.OCR ELSE
         CALL ELINE('UNABLE TO OPEN GRB FILE')
         RETURN
      END

      READ XMLPARAMS FROM FILE.CNTL,"CLIENT.OCR.IMG.UPDT" THEN
         URL = XMLPARAMS<1>
         SERVER = XMLPARAMS<2>

         LOGGING = XMLPARAMS<4>          ; * Y/N
         LOGFILE = XMLPARAMS<5>
         EMAIL.RECIP = XMLPARAMS<6>
         TEST.FLG = XMLPARAMS<7>
      END ELSE
****         URL = 'https://imagingws.qa.afs.net/images/update?imageKey=':IMAGE.NO:"&keyerName=":KEYER
         IF SERVER.NAME = 'AFS' THEN   ; * NKH01                     
            URL = 'http://imagingws.afs.net/images/update?imageKey=':IMAGE.NO:"&keyerName=":KEYER 
         END ELSE                      ; * NKH01
            URL = 'http://imagingws.qa.afs.net/images/update?imageKey=':IMAGE.NO:"&keyerName=":KEYER     ; * NKH01
         END                           ; * NKH01                           
         LOGFILE="IMG.UPD.LOG"
         LOGGING = "N"
*          EMAIL.RECIP = 'gbino@afs.net'
         TEST.FLG = @FALSE
      END
      IF ACTION = "U" THEN
         IF SERVER.NAME = 'AFS' THEN   ; * NKH01                     
            URL = 'http://imagingws.afs.net/images/update?imageKey=':IMAGE.NO:"&keyerName=":KEYER
         END ELSE                      ; * NKH01
            URL = 'http://imagingws.qa.afs.net/images/update?imageKey=':IMAGE.NO:"&keyerName=":KEYER     ; * NKH01
         END                           ; * NKH01                                 
      END
      IF ACTION = "D" THEN
         IF SERVER.NAME = 'AFS' THEN   ; * NKH01                     
            URL = 'http://imagingws.afs.net/images/imported-date/remove?imageKey=':IMAGE.NO
         END ELSE                      ; * NKH01
            URL = 'http://imagingws.qa.afs.net/images/imported-date/remove?imageKey=':IMAGE.NO     ; * NKH01
         END                           ; * NKH01                           
      END

      IF LOGGING = "Y" OR LOGGING = 1 THEN
         LOGGING = @TRUE
      END ELSE
         LOGGING = @FALSE
      END
      IF LOGGING THEN
         STAT = PROTOCOLLOGGING(LOGFILE, "ON", 10)
      END

      TESTING = 0
      EMAIL.OUT=''
      EMAIL.OUT<1,-1>='nmeddaugh@afs.net'
      EMAIL.OUT<2,-1>= EMAIL.RECIP
      EMAIL.OUT<4>='FBBP_SEND.IMG.UPD.REST@afs.net'
      EMAIL.OUT<5>='Error while trying to update SEND.IMG.UPD.REST Web-Service .'

      GOSUB SEND.REST.REQUEST
      GOSUB PARSE.RESULTS

      TIME.LINE<1,1,1>=TIME()            ; * finish time

9999: * THE END
      IF LOGGING THEN
         LOG.RET = PROTOCOLLOGGING(LOGFILE,"OFF",10)
      END
      **    WRITE RESP ON F.GRB,"OCR.IMG.UPDT.RESP*":DATE():"*":TIME()
      IF FAILED THEN
         WRITE RESP ON F.OCR,"IMG.UPDT*":DATE():"*":TIME()
      END
      RETURN
**********************************************************************
SEND.REST.REQUEST:
**********************************************************************
      METHOD="GET"
*
      STAT = SETHTTPDEFAULT("VERSION", "1.1")
 ***     STAT = CREATESECURITYCONTEXT(CTX, "TLSv1.2")
 ***     STAT = CREATESECUREREQUEST(URL, METHOD, RESTGET,CTX)
  STAT = CREATEREQUEST(URL, METHOD, RESTGET)
      STAT = SETREQUESTHEADER(RESTGET, "Content-Type", "application/json;charset=utf-8")
      STAT = SUBMITREQUEST(RESTGET, TIMEOUT, "", HEADER, RESTDATA, HTTPSTATUS)
      RESP = ""
      RESP<1> = CLIENT.ID
      RESP<2> = IMAGE.NO
      RESP<3> = RESTDATA

      RETURN

************************************************************************
PARSE.RESULTS:
************************************************************************
 RESP.SER = INDEX(RESTDATA, 'has already been imported',1)
      BEGIN CASE
         CASE TRIM(RESTDATA) = 'Failed to Update'
            FAILED = 1
         CASE TRIM(RESTDATA) = 'Updated Successfully'
            FAILED = 0
         CASE TRIM(RESTDATA) = "OK"
            FAILED = 0
         CASE RESP.SER GT 0
            FAILED = 0 
         CASE TRIM(RESTDATA)[34,25]= 'has already been imported'
            FAILED = 0
         CASE TRIM(RESTDATA)[1,24]= 'Error: This image (key #'
            FAILED = 1
         CASE TRIM(RESTDATA)[1,6] = "Error:"
            FAILED = 1
         CASE TRIM(RESTDATA) = ""
            FAILED=1
            RESTDATA = "NULL RESPONSE RETURNED ":HEADER:" ":HTTPSTATUS
         CASE 1
            FAILED=0
      END CASE

      IF FAILED THEN
         VOUT = 'FAILED ':TRIM(RESTDATA):"  ":VIN
         GOSUB REPORT.INTERNAL.ERROR
      END ELSE
         VOUT = 'SUCCESS'
      END
      RETURN

************************************************************************
REPORT.INTERNAL.ERROR:
************************************************************************
      EMAIL.START.TIME = TIME()

      EMAIL.OUT<6, -1> = 'URL = ':URL
      EMAIL.OUT<6, -1> = ' '
      EMAIL.OUT<6, -1> = 'IMAGE = ':IMAGE.NO
      IF TRIM(IMAGE.NO) = "" THEN
         EMAIL.OUT<6, -1> = 'NO IMAGE KEY PASSED '
      END
      EMAIL.OUT<6, -1> = ' '
      EMAIL.OUT<6, -1> = ' '
      EMAIL.OUT<6, -1> = 'ERROR = ':VOUT
      EMAIL.OUT<6, -1> = ' '
      EMAIL.OUT<6, -1> = 'CLIENT = ':CLIENT.ID
      EMAIL.OUT<6, -1> = ' '
      EMAIL.OUT<6, -1> = 'PRO = ':PRO
      EMAIL.OUT<6, -1> = ' '
      EVIN=EMAIL.OUT
      EVOUT=''
      CALL SENDMAIL(EVIN,EVOUT)

      RETURN
************************************************************************
REPORT.FATAL.ERROR:
************************************************************************
      EMAIL.START.TIME = TIME()
      EMAIL.OUT<1>=EMAIL.RECIP
*       EMAIL.OUT<1,-1> = 'gbino@afs.net'
      EMAIL.OUT<1,-1> = 'dfriend@afs.net'
      EMAIL.OUT<1,-1> = 'nmeddaugh@afs.net'
      FATAL.ERROR.SUBJ = 'REST IMAGE UPDATE ERROR'
      EMAIL.OUT<5>=FATAL.ERROR.SUBJ
      EMAIL.OUT<6,-1> = 'URL = ':URL
      EVIN=EMAIL.OUT
      EVOUT=''
      CALL SENDMAIL(EVIN,EVOUT)
      IDATE=DATE()
      ITIME=TIME()
      TIME.BLOCK=INT(ITIME/600)
      *  VOUT<1> = "ERROR"
      RETURN
   END
