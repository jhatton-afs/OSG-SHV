      SUBROUTINE EMAIL.DELAY.CALC(VIN,VOUT,ICONV.CHECK.DATE,F.TC.HOLIDAYS)
************************************************************************
* PROGRAM: EMAIL.DELAY.PARMS - Program to calculate the Date and Time
*                              to delay the sending of the email to
*                              based on the parameters passed in and
*                              the current date and time.
*
*
* PROGRAMMER: Steve Barbee
*
************************************************************************
*
* PARAMETERS - None
*
************************************************************************
*
* EDIT HISTORY:
*
*    NAME :   DATE:     : DESCRIPTION
*     SWB : 12/02/11    : Started new program
*
************************************************************************
*
* THIS PROGRAM IS A PROPRIETARY PRODUCT OF AUTOMATED FREIGHT SYSTEMS
* AND MAY NOT BE USED, COPIED OR MODIFIED WITHOUT THE EXPRESS
* WRITTEN CONSENT OF SAME.
*
********************************************************************
* Initialize variables
************************************************************************
      CALENDAR.MODE=VIN<1>
      DELAY.BASIS=VIN<2>
      DELAY.BASIS=TRIM(DELAY.BASIS,' ','A')
      DELAY.ADDTL.DAYS=VIN<3>
      DELAY.TO.TIME=VIN<4>
      ICONV.BASIS.DATE=VIN<5>
      EMAIL.DELAY.SUBSYSTEM=VIN<6>
      VOUT=''
      ERR.MSG=''
      DATE=DATE()
      TIME=TIME()
      CUR.DOW=''
      SPECIFIED.DOW=''
*Validate the incoming parameters. Don't assume anything.
      IF CALENDAR.MODE#'CALENDAR' AND CALENDAR.MODE#'BUSINESS' THEN
*This checks to make sure that we have defined whether to
*use a 7 day a week Callendar or the AFS Business callendar.
         ERR.MSG<1,1>='Calendar mode of "':CALENDAR.MODE:'" should be "CALENDAR" or "BUSINESS".'
      END
      BEGIN CASE
         CASE DELAY.BASIS='TODAY'
            NULL
         CASE DELAY.BASIS='C' OR DELAY.BASIS='CHECKDATE'
            NULL
         CASE DELAY.BASIS='TOMORROW'
*Since Basis of TOMORROW was chosen, DELAY.ADDTL.DAYS is irrelevant. Set
*it to zero (0).
            DELAY.ADDTL.DAYS=0
            ICONV.BASIS.DATE=DATE+1
         CASE DELAY.BASIS='MON' OR DELAY.BASIS='MONDAY'
            SPECIFIED.DOW=1
            GOSUB CALC.ICONV.BASIS.DATE
         CASE DELAY.BASIS='TUE' OR DELAY.BASIS='TUESDAY'
            SPECIFIED.DOW=2
            GOSUB CALC.ICONV.BASIS.DATE
         CASE DELAY.BASIS='WED' OR DELAY.BASIS='WEDNESDAY'
            SPECIFIED.DOW=3
            GOSUB CALC.ICONV.BASIS.DATE
         CASE DELAY.BASIS='THU' OR DELAY.BASIS='THURSDAY'
            SPECIFIED.DOW=4
            GOSUB CALC.ICONV.BASIS.DATE
         CASE DELAY.BASIS='FRI' OR DELAY.BASIS='FRIDAY'
            SPECIFIED.DOW=5
            GOSUB CALC.ICONV.BASIS.DATE
         CASE DELAY.BASIS='SAT' OR DELAY.BASIS='SATURDAY'
            SPECIFIED.DOW=6
            GOSUB CALC.ICONV.BASIS.DATE
         CASE DELAY.BASIS='SUN' OR DELAY.BASIS='SUNDAY'
            SPECIFIED.DOW=7
            GOSUB CALC.ICONV.BASIS.DATE
         CASE 1
            ERR.MSG<1,2>='Delay Basis of "':DELAY.BASIS:'" is invalid.'
      END CASE
*
      BEGIN CASE
         CASE NOT(NUM(ICONV.BASIS.DATE))
            ERR.MSG<1,3>='Basis Date of "':ICONV.BASIS.DATE:'" is not valid.'
         CASE ICONV.BASIS.DATE=''
            ERR.MSG<1,3>='The Basis Date passed in is null.'
         CASE ICONV.BASIS.DATE#INT(ICONV.BASIS.DATE)
            ERR.MSG<1,3>='Invalid Basis Date of "':ICONV.BASIS.DATE:'".'
*SWBSPEC         CASE ICONV.BASIS.DATE<DATE
*SWBSPEC            ERR.MSG<1,3>='Basis Date of "':OCONV(ICONV.BASIS.DATE,'D2/'):'" is before "today".'
         CASE ICONV.BASIS.DATE>DATE+7
            ERR.MSG<1,3>='Basis Date of "':OCONV(ICONV.BASIS.DATE,'D2/'):'" is more than 7 days in the future.'
      END CASE
*
      BEGIN CASE
         CASE NOT(NUM(DELAY.ADDTL.DAYS))
            ERR.MSG<1,4>='The number of Delay Days must be a number.'
         CASE DELAY.ADDTL.DAYS # INT(DELAY.ADDTL.DAYS)
            ERR.MSG<1,4>='The number of Delay Days must be a whole number.'
         CASE DELAY.ADDTL.DAYS=''
            ERR.MSG<1,4>='The number of Delay Days cannot be null.'
         CASE DELAY.ADDTL.DAYS<0
            ERR.MSG<1,4>='The number of Delay Days cannot be less than 0 (zero).'
         CASE DELAY.ADDTL.DAYS>7
            ERR.MSG<1,4>='The number of Delay Days cannot be more than 7.'
      END CASE
*
      BEGIN CASE
         CASE NOT(NUM(DELAY.TO.TIME))
            ERR.MSG<1,5>='The Email Delay to Time of "':OCONV(DELAY.TO.TIME,'MTH'):'" is not valid. '
         CASE DELAY.TO.TIME=''
            ERR.MSG<1,5>='The Email Delay to Time cannot be null.'
         CASE DELAY.TO.TIME<0
            ERR.MSG<1,5>='The Email Delay to Time of "':DELAY.TO.TIME:'" is invalid.'
         CASE DELAY.TO.TIME>86400
            ERR.MSG<1,5>='The Email Delay to Time of "':DELAY.TO.TIME:'" is not a valid time.'
         CASE 1
*This is good
      END CASE
*
*Now figure out when the Email should be Delayed To. It is not exactly
*correct to thinking of it as 'when the Email should be sent' because
*the emails will be sent by an automatic process that will run
*periodically. The email will be sent the first time the automatic
*process is run AFTER the Delay To Date and Time have passed.
*The automatic process is called EMAIL.DELAY.BATCH.
      IF DELAY.BASIS='C' OR DELAY.BASIS='CHECKDATE' THEN
*Validate the CHECK.DATE
         BEGIN CASE
            CASE NOT(NUM(ICONV.CHECK.DATE))
               ERR.MSG<1,6>='Check Date of "':ICONV.CHECK.DATE:'" should be in internal format.'
*SWBSPEC            CASE ICONV.CHECK.DATE<DATE
*SWBSPEC               ERR.MSG<1,6>='The Check Date passed in of "':OCONV(ICONV.CHECK.DATE,'D2/'):'" is not valid.'
            CASE ICONV.CHECK.DATE>DATE+30
               ERR.MSG<1,6>='The Check Date of "':OCONV(ICONV.CHECK.DATE,'D2/'):'" is more than 30 days in the future.'
            CASE 1
               ICONV.BASIS.DATE=ICONV.CHECK.DATE
         END CASE
      END
      IF ERR.MSG#'' THEN GOTO SKIP.PROCESSING
*
*Now do the processing, IF we haven't found errors.
      BEGIN CASE
         CASE CALENDAR.MODE='CALENDAR'
            DELAY.TO.DATE=ICONV.BASIS.DATE+DELAY.ADDTL.DAYS
            VOUT=DELAY.TO.DATE
         CASE 1
*This means we are calculating Business Days
            BIZ.DAYS.DELAYED=0
            ITERATIONS=0
            ICONV.DATE.TO.CHECK=ICONV.BASIS.DATE
            CD.VIN=ICONV.DATE.TO.CHECK
            CD.VIN<2>=DELAY.ADDTL.DAYS
            CALL CALC.DATE(CD.VIN,CD.VOUT,F.TC.HOLIDAYS)
            ICONV.DELAY.TO.DATE=CD.VOUT<1>
            VOUT=ICONV.DELAY.TO.DATE
      END CASE
*
SKIP.PROCESSING:
*
      IF ERR.MSG#'' THEN
         VOUT<2>=ERR.MSG
      END
*
      RETURN

CALC.ICONV.BASIS.DATE:
*Since a DOW Basis was chosen, DELAY.ADDTL.DAYS is irrelevant. Set
*it to zero (0).
      DELAY.ADDTL.DAYS=0
      CUR.DOW=OCONV(DATE,'DW')
      BEGIN CASE
*         CASE CUR.DOW=SPECIFIED.DOW AND TIME<(DELAY.TO.TIME-300)
         CASE CUR.DOW=SPECIFIED.DOW AND TIME<DELAY.TO.TIME
            ICONV.BASIS.DATE=DATE
         CASE CUR.DOW=SPECIFIED.DOW
            ICONV.BASIS.DATE=DATE+7
         CASE CUR.DOW>SPECIFIED.DOW
            ICONV.BASIS.DATE=DATE+7-(CUR.DOW-SPECIFIED.DOW)
         CASE 1
            ICONV.BASIS.DATE=DATE+(SPECIFIED.DOW-CUR.DOW)
      END CASE

      RETURN
   END
