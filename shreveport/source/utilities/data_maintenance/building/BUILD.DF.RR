      SUBROUTINE BUILD.DF.RR(F.CLIENTS,F.CARRIERS,F.TRANSPORT,F.TABLES,F.FILE,VIN,VOUT)
********************************************************************************
      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'BUILD.DF.RR' ; UPL.VOUT = ''    ; * NPR_UPL 04/22/2010
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)       ; * NPR_UPL 04/22/2010
* PROGRAM: BUILD.DF.RR
* SUBROUTINE TO BUILD A DELIMITED FILE
********************************************************************************
* THIS PROGRAM IS A PROPRIETARY PRODUCT OF AUTOMATED FREIGHT SYSTEMS.
*
* FREIGHT BILLING/EDI PACKAGE
*
* AUTHOR       : Mike Kerbow
* DATE CREATED : 04/27/06
* DESCRIPTION  : This program builds a flat file for all the bills
*                paid during the specified dates so data can be worked
*                with under excel.
********************************************************************************
* MODIFIED     : 05/09/06 : JCW01 : CHANGES TO @SELECTED, CLEARSELECT, AND STMT<X>
*              : 07/10/06 : JCW02 : USED EDI.BILLS.HIST,CLIENT.ID
* 072406 - JMK01 - CHANGE CALC FOR TOTAL DISTRIBUTION BASE
* 081806 - JMK02 - VERIFY DIST WEIGHTS FROM BOL FILE IF MISSING
* 111006 - JMK03 - T200611080010 / priority 2 /FW: Replacement of John Esposito with Nikki Fasone
* 052808 - JMK04 - C081415 - Make SOC.TXT and PO Distribution Report available via FTP for Robroy
* 102208 - JMK05 - C082367 - Change recipient for PO distribution of Freight Bills
* 050109 - JMK06 - T090590 - Client on troubleshoot and emails still went out to the client
* 062110 - JMK07 - Change Nikki Fasone to Wendy Pettigrew for email response
* 102010 - JMK08 - ADD OPTIONS FOR "ONCE" PROCESSING
* 010711 - JMK09 - C110014 - Weekly client emails ; all special reports should be in Public folders
* 032514 - JMK10 - SysAid#8312 - Charges being split on report for only carrier Allen Trucking
********************************************************************************
* VIN<1>=CLIENT               CLIENT NUMBER
*                             CAN BE CLIENT NUMBER OR 'ALL'
*
* VIN<2>=LOG.ONLY             CHOICE FOR LOGISTICS CLIENTS ONLY
*                             VALID SELECTIONS (Y/N)
*
* VIN<3>=CARRIER              CARRIER NUMBER
*                             CAN BE CARRIER NUMBER OR 'ALL'
*
* VIN<4>=MODE                 TRANSPORTATION MODE
*                             THIS IS ONLY ASKED FOR IF CARRIER IS EQUAL TO 'ALL'
*                             IF YOU SPECIFY CARRIER - LEAVE THIS NULL!!!
*
* VIN<5>=FILE.SEL             FILE SELECTION
*                             VALID SELECTIONS ARE 1 - TEMP
*                                                  2 - HISTORY
*                                                  3 - LAST PROCESSED
*                             THIS IS ONLY NEEDED IF CLIENT IS EQUAL TO 'ALL'
*
* VIN<6>=BEG.DATE             BEGINNING DATE - IF CLIENT IS SPECIFIED
*                             AND YOU HAVE SELECTED 3 FOR FILE.SEL (LAST PROCESSED)
*                             THEN BEG.DATE AND END.DATE=NULL
*
* VIN<7>=END.DATE             ENDING DATE - IF CLIENT IS SPECIFIED
*                             AND YOU HAVE SELECTED 3 FOR FILE.SEL (LAST PROCESSED)
*                             THEN BEG.DATE AND END.DATE NEED TO BE NULL
*
* VIN<8>=CUT.BACK.CODE        CUT BACK CODE - LEAVE NULL FOR ALL (NO PREFERENCE)
*
* VIN<9>=MISROUTE.INFO        MISROUTE INFO - VALID SELECTIONS ARE...
*                                 'I' - INCLUDE MISROUTE ONLY
*                                 'E' - EXCLUDE MISROUTE ONLY
*                                 'N' - NO PREFERENCE
*
* VIN<10>=OVERCHARGE.INFO     OVERCHARGE INFO - VALID SELECTIONS ARE...
*                                 'I' - INCLUDE OVERCHARGE ONLY
*                                 'E' - EXCLUDE OVERCHARGE ONLY
*                                 'N' - NO PREFERENCE
*
* VIN<11>=LOGISTICS.INFO      LOGISTICS INFO - VALID SELECTIONS ARE...
*                                 'I' - INCLUDE LOGISTICS ONLY
*                                 'E' - EXCLUDE LOGISTICS ONLY
*                                 'N' - NO PREFERENCE
*
* VIN<12>=DISCOUNT.INFO       DISCOUNT INFO - VALID SELECTIONS ARE...
*                                 'I' - INCLUDE DISCOUNTS ONLY
*                                 'E' - EXCLUDE DISCOUNTS ONLY
*                                 'N' - NO PREFERENCE
*
* VIN<13>=VERSION             VERSION NUMBER - IF CLIENT[1,2]='99'
*                             THEN VERSION NUMBER WILL BE SET TO 8
*
* VIN<14>=TYPE.OF.REPORT       VALID SELECTIONS ARE...
*                              STANDARD (STD) => AUTO.EMAIL = 0
*                              REGULAR EMAIL (EMAIL) => AUTO.EMAIL = 1
*                              DIVISIONAL EMAIL (EMAIL-DIV) => AUTO.EMAIL = 1
*
* VIN<15>=SEPARATE.DIVISIONS   SEPARATE REPORT FOR DIVISION
*
* VIN<16>=DIVISIONAL.ID        DIVISION ID TO USE
*
* VIN<17>=SORT                 SORT OPTION
*
* VIN<18>=MANUAL.EMAIL         MANUAL EMAIL
*
* VIN<19>=NEW.EMAIL.ADDR       ADDRESS TO BE EMAILED TO
*
* VIN<20>=DIV.EMAIL.ADDR       ADDRESS FOR DIVISION TO BE EMAILED TO
*
* VIN<21>=USER                 USER ID
*
* VIN<22>=CH.NUM               CHANNEL NUMBER
*
* VIN<23>=AUTO                 LAST PROCESSING DATES
*
* VIN<24>=CUT.DESC             CUT BACK DESCRIPTION
*
* VIN<25>=FROM.FB.3.1.NEW      THIS IS SET TO THE LITERAL 'FROM FB.3.1.NEW' IF
*                              THE CALLING PROGRAM IS FB.3.1.NEW OR 'FROM FB.2.3.NW'
*                              IF THE CALLING PROGRAM IS FB.2.3.NW.
* VIN<26>=USING.NEW.MACRO      SWITCH SET IN FB.3.1.NEW
*                              INSERTS A "?" BEFORE CERTAIN FIELDS FOR MACRO TO WORK
* VIN<27>=DUP.ONLY             SWITCH SET IN BUILD.DF.NW.
*                              1 MEANS USE ONLY DUPLICATES
*                              0 MEANS USE ONLY NON-DUPLICATES
* VIN<28>=INC.BD               SWITCH SET IN BUILD.DF.NW.
*                              1 MEANS INCLUDE BALANCE DUE AMOUNTS WITH OVERCHARGES
*                              0 MEANS DO NOT INCLUDE BALANCE DUE AMOUNTS WITH OVERCHARGES
* VIN<29>=LCC.INFO             LCC INFO - VALID SELECTIONS ARE...
*                                 'I' - INCLUDE LCC ONLY
*                                 'E' - EXCLUDE LCC ONLY
*                                 'N' - NO PREFERENCE
*
* VIN<30>=FBLIST              FREIGHT BILL LIST FROM MISROUTE EMAIL; * JMK02
*
* VIN<31>=CLIENT.ACCESS       SS CLIENT ACCESS FILTERS
*
* VIN<32>=CARRIER.ACCESS      SS CARRIER ACCESS FILTER
*
* VIN<33>=SALES.ACCESS        SS SALES ACCESS FILTER
*
* VIN<34>=COMM.ACCESS         SS COMMISSION ACCESS FILTER
*
* VIN<35>=TL.INFO             TL PARAMETERS FOR FB FILTER
*
* VIN<36>=EBILL.INFO          EBILL PARAMETERS FOR FB FILTER ; * JMK23
*
* VIN<45>=ONCE                TROUBLESHOOTING OVERRIDE ; * JMK08
********************************************************************************

      $INCLUDE PROG.ADMIN INC_OPTIONS

*
* Assign parameters
*
      PROG.NAME='BUILD.DF.RR'
      CLIENT=VIN<1>
      LOG.ONLY=VIN<2>
      CARRIER=VIN<3>
      MODE=VIN<4>
      FILE.SEL=VIN<5>
      BEG.DATE=VIN<6>
      END.DATE=VIN<7>
      CUT.BACK.CODE=VIN<8>
      MISROUTE.INFO=VIN<9>
      OVERCHARGE.INFO=VIN<10>
      LOGISTICS.INFO=VIN<11>
      DISCOUNT.INFO=VIN<12>
      VERSION=VIN<13>
      IF VERSION='' THEN VERSION=1
      TYPE.OF.REPORT=VIN<14>
      SEPARATE.DIVISIONS=VIN<15>
      DIVISIONAL.ID=VIN<16>
      SORT=VIN<17>
      IF SORT='' THEN SORT=1
      MANUAL.EMAIL=VIN<18>
      NEW.EMAIL.ADDR=VIN<19>
      DIV.EMAIL.ADDR=VIN<20>
      USER=VIN<21>
      CH.NUM=VIN<22>
      AUTO=VIN<23>
      CUT.DESC=VIN<24>
      WHERE.FROM=VIN<25>
      USING.NEW.MACRO=VIN<26>
      DUP.ONLY=VIN<27>
      INC.BD=VIN<28>
      LCC.INFO=VIN<29>
      FBLIST=VIN<30>
      CLIENT.ACCESS=VIN<31>
      IF CLIENT.ACCESS='' THEN CLIENT.ACCESS='ALL'
      CARRIER.ACCESS=VIN<32>
      IF CARRIER.ACCESS='' THEN CARRIER.ACCESS='ALL'
      SALES.ACCESS=VIN<33>
      IF SALES.ACCESS='' THEN SALES.ACCESS='ALL'
      COMM.ACCESS=VIN<34>
      IF COMM.ACCESS='' THEN COMM.ACCESS='Y'
      TL.INFO=VIN<35>
      EBILL.INFO=VIN<36>
      ONCE=VIN<45>+0                     ; * JMK08
      PRFX='FMT'
      CLIENT.REC=''
      EXCEL.ADJ=24837

      IF TYPE.OF.REPORT='EMAIL' OR TYPE.OF.REPORT='EMAIL-DIV' THEN
         AUTO.EMAIL=1
      END ELSE
         AUTO.EMAIL=0
      END

      IF FILE.SEL=1 OR FILE.SEL=4 THEN
         FILE='FB.BILLS,':CLIENT
      END ELSE
         FILE='FB.BILLS.HIST,':CLIENT
      END

*
* Initialize variables
*
      TAB=CHAR(9)
      DIVS=''
      VOUT=''
* KM 3/12/2004
      LINE.COUNT = 3
      NAME.EXT = ''
*
* Open general files
*
      OPEN '','FB.BUILD.SPEC' TO F.BUILD.SPEC ELSE
         CALL OPEN.ABORT("FB.BUILD.SPEC",PROG.NAME)
      END
*     OPEN '','EDI.BILLS.HIST' TO EDI.BILLS.HIST ELSE ; * JCW02
*        CALL OPEN.ABORT("EDI.BILLS.HIST",PROG.NAME)  ; * JCW02
*     END                                             ; * JCW02
      OPEN '','FB.CUT.BACKS' TO F.CUT.BACKS ELSE
         CALL OPEN.ABORT("FB.CUT.BACKS",PROG.NAME)
      END
      OPEN '','ZIPS.CODES' TO F.ZIPS ELSE
         CALL OPEN.ABORT("ZIPS",PROG.NAME)
      END
      OPEN '','CLIENT.SCAC' TO F.CSCAC ELSE
         CALL OPEN.ABORT("CLIENT.SCAC",PROG.NAME)
      END
      OPEN '','AR.SLSMAN.1000.1' TO F.SLSMAN ELSE
         CALL OPEN.ABORT("AR.SLSMAN.1000.1",PROG.NAME)
      END
      OPEN '','UPSDATA' TO F.UPSDATA ELSE
         CALL OPEN.ABORT('F.UPSDATA',PROG.NAME)
      END
      READ LI.CODES FROM F.TABLES,'LI.CODES' ELSE
         CALL ELINE('Cannot read LI.CODES from FB.TABLES')
         GOTO EXIT.PROGRAM
      END
      OPEN '','PRO.BOL.XREF' TO F.PBX ELSE
         CALL OPEN.ABORT('PRO.BOL.XREF',PROG.NAME)
      END
      OPEN '','FTP.01349.REPORTS' TO F.FTP ELSE    ; * JMK04
         CALL OPEN.ABORT('FTP.01349.REPORTS',PROG.NAME)      ; * JMK04
      END                                ; * JMK04

*
* Set the build version and pull the necessary information
*
      ID=PRFX:'*':CLIENT:'*':VERSION
      READ DSPECS FROM F.BUILD.SPEC,ID ELSE
         ID=PRFX:'**':VERSION
         READ DSPECS FROM F.BUILD.SPEC,ID ELSE
            CALL ELINE('An ERROR occurred in BUILD.DF.RR. Failed on DSPEC read. ID=':ID)
            GOTO EXIT.PROGRAM
         END
      END
      ID='DF.SORT*':SORT
      READ D.SORT FROM F.TABLES,ID ELSE
         CALL ELINE('Sort Version ':SORT:' has not been setup.')
         GOTO EXIT.PROGRAM
      END

      IF (CLIENT#'ALL' AND CLIENT#'AFS' AND CLIENT#'SCT') THEN
         CLIENT.ID=CLIENT
         READ CLIENT.REC FROM F.CLIENTS,CLIENT ELSE
            CALL ELINE('ERROR - BUILD.DF did not complete CLIENT.REC read.')
            GOTO EXIT.PROGRAM
         END
         CLIENT.NAME=CLIENT.REC<2>
         IF VERSION='111' THEN
            IF CLIENT.ID#CLIENT.REC<147> THEN
               PARENT.ID=CLIENT.REC<147>
               READV PARENT.NAME FROM F.CLIENTS,PARENT.ID,2 ELSE PARENT.NAME='Unknown Parent'
            END ELSE
               PARENT.ID=CLIENT.ID
               PARENT.NAME=CLIENT.NAME
            END
         END
         OPEN '',FILE TO FB.BILLS ELSE
            CALL OPEN.ABORT(FILE:CLIENT,PROG.NAME)
         END
         OPEN '','FB.BOL.CRX,':CLIENT TO F.BOL.CRX ELSE      ; * JMK02
            CALL OPEN.ABORT('FB.BOL.CRX,':CLIENT,PROG.NAME)  ; * JMK02
         END                             ; * JMK02
         VEND=CLIENT.REC<20>
         CUST=CLIENT.REC<21>

         IF VEND='Y' OR CUST='Y' THEN
            OPEN '','VEND.CUST,':CLIENT.ID TO F.VC ELSE
               F.VC=''
            END
         END ELSE
            F.VC = ''
         END
         DIVISION=CLIENT.REC<12>
         IF DIVISION='Y' THEN
            OPEN '','DIVISION.CODES,':CLIENT TO F.DIVISION ELSE
               CALL OPEN.ABORT("DIVISION.CODES,":CLIENT,PROG.NAME)
            END
            DIV.STMT='SSELECT DIVISION.CODES,':CLIENT
            IF AUTO.EMAIL THEN DIV.STMT=DIV.STMT:' WITH 9'
            EXECUTE DIV.STMT PASSLIST CAPTURING OUTPUT
            DIV.DONE=0
            DIV.CNTR=0
            LOOP
               READNEXT DIV.ID ELSE DIV.DONE=1
            UNTIL DIV.DONE DO
               READ DIV.REC FROM F.DIVISION,DIV.ID THEN
                  DIV.CNTR+=1
                  DIVS<1,DIV.CNTR>=DIV.ID'R%5'
                  DIVS<9,DIV.CNTR>=DIV.REC<9>
                  DIVS<11,DIV.CNTR>=DIV.REC<11>    ; * Division description
               END
            REPEAT
         END
         IF DIVISIONAL.ID#'ALL' AND DIVISION='Y' THEN
            READ DDIV FROM F.DIVISION,DIVISIONAL.ID THEN
               ZIP.VAR=DDIV<1>
               CALL FB.READ.ZIP(ZIP.VAR,CITY,STATE)
               CITY.STATE=CITY:', ':STATE
               DIV.DESC=DDIV<11>
            END
         END
      END


START.BUILD: ***

*
* Select data for current client
*
*************************************************************************
*
* SELECT CLIENT FILE
*

      IF AUTO.EMAIL THEN
         IF TYPE.OF.REPORT='EMAIL' THEN
            GOSUB DO.HEADINGS
            GOSUB SELECT.BILLS
            GOSUB CONTINUE.BUILD
         END ELSE
            IF TYPE.OF.REPORT='EMAIL-DIV' AND DIVISION THEN
               SEPARATE.DIVISIONS=1
               DIVISIONAL.ID='ALL'
               DIV.COUNT=0
               ZIP.VAR=''
               NUM.DIVS=DCOUNT(DIVS<1>,@VM)
               COUNTER.1=0
               CITY.STATE=''
               DIV.EMAIL.ADDR=''
               GOTO 800
            END
         END
         GOTO EXIT.PROGRAM
      END


      TEXT='Selecting Clients.'
      CALL CENTER(TEXT,80)
      CRT @(0,16):TEXT
*
      EXECUTE "SELECT VOC 'FB.BILLS.HIST' *A7" RTNLIST CLIENT.LIST CAPTURING OUTPUT
*
      ITEMS=@SELECTED
*     IF NOT ( @SELECTED ) THEN ; * JCW01
      IF @SELECTED < 1 THEN              ; * JCW01
         CALL ELINE('ERROR - No clients on file.')
         GOTO EXIT.PROGRAM
      END
      COUNTER.1=0
      PER.1=0

      IF CLIENT='ALL' OR CLIENT='AFS' OR CLIENT='SCT' THEN
         GOSUB DO.HEADINGS
         LOOP
            READNEXT CLIENT.ID FROM CLIENT.LIST ELSE CLIENT.ID='DONE'
            IF CLIENT.ID='DONE' ELSE
               READ CLIENT.REC FROM F.CLIENTS,CLIENT.ID ELSE CLIENT.REC=''
               BEGIN CASE
                  CASE CLIENT='AFS'
                     IF CLIENT.REC<92>='00002' THEN GO SKIP.CLIENT
                  CASE CLIENT='SCT'
                     IF CLIENT.REC<92>#'00002' THEN GO SKIP.CLIENT
                  CASE 1
               END CASE
               IF LOG.ONLY AND CLIENT.REC<93>#'Y' THEN
                  COUNTER.1=COUNTER.1+1
                  IF AUTO.EMAIL=0 THEN CALL PROG.BAR(20,COUNTER.1,ITEMS,PER.1)
                  GOTO SKIP.CLIENT
               END
               IF SALES.ACCESS#'ALL' THEN
                  SVC.SLS=CLIENT.REC<115>
                  LOCATE(SVC.SLS,CLIENT.ACCESS,1;SPOS) ELSE
                     GOTO SKIP.CLIENT
                  END
               END
            END
            IF CLIENT.ID[1,2]='99' THEN GO SKIP.CLIENT
            IF CLIENT.ID[1,2]='98' THEN GO SKIP.CLIENT
            IF CLIENT.ID='00000' AND (CLIENT='ALL' OR CLIENT='AFS' OR CLIENT='SCT') THEN GO SKIP.CLIENT
            CLIENT.LAST.PROCESSED=CLIENT.REC<82>
         UNTIL CLIENT.ID='DONE' DO
            COUNTER.1=COUNTER.1+1
            IF (CLIENT='ALL' OR CLIENT='AFS' OR CLIENT='SCT') AND FILE.SEL=2 THEN          ; * IF all Clients and From History file
               IF CLIENT.LAST.PROCESSED='' THEN GO SKIP.CLIENT         ; ** No need to look if no bills were processed
               IF BEG.DATE > CLIENT.LAST.PROCESSED THEN GO SKIP.CLIENT           ; ** No need to look for Bills if BEG.DATE is Later than last processed
            END
            IF CLIENT.ID='FB.BILLS.HIST' THEN GO SKIP.CLIENT
            IF USER='brian' OR USER='michelle' OR USER = 'mike' THEN
               IF (CLIENT='ALL' OR CLIENT='AFS' OR CLIENT='SCT') THEN
                  IF VERSION#'8' AND CLIENT.ID[1,2]='99' THEN GO SKIP.CLIENT
                  IF CLIENT.ID[1,2]='98' THEN GO SKIP.CLIENT
                  IF CLIENT.REC<30>#'A' THEN GO SKIP.CLIENT
               END
            END ELSE
               IF VERSION#'8' AND CLIENT.ID[1,2]='99' THEN GO SKIP.CLIENT
            END
            IF CLIENT.REC<2>='' THEN
               CLIENT.NAME='*** Not On File ***'
            END ELSE
               CLIENT.NAME=CLIENT.REC<2>
            END
            IF AUTO.EMAIL ELSE
               CRT @(0,17):CLIENT.ID:" ":CLIENT.NAME:" - Now selecting freight bills":@(-4):@(0,22):@(-3):
               CALL PROG.BAR(20,COUNTER.1,ITEMS,PER.1)
            END
            VEND=CLIENT.REC<20>
            CUST=CLIENT.REC<21>
            IF CLIENT.ID#CLIENT.REC<147> THEN
               PARENT.ID=CLIENT.REC<147>
               READV PARENT.NAME FROM F.CLIENTS,PARENT.ID,2 ELSE PARENT.NAME='Unknown Parent'
            END ELSE
               PARENT.ID=CLIENT.ID
               PARENT.NAME=CLIENT.NAME
            END
            ISLS=CLIENT.REC<114>
            READ ISLS.REC FROM F.SLSMAN,ISLS ELSE ISLS.REC=''
            ISLS.NAME=ISLS.REC<1>
            SSLS=CLIENT.REC<115>
            READ SSLS.REC FROM F.SLSMAN,SSLS ELSE SSLS.REC=''
            SSLS.NAME=SSLS.REC<1>

            IF VEND='Y' OR CUST='Y' THEN
               OPEN '','VEND.CUST,':CLIENT.ID TO F.VC ELSE
                  F.VC=''
               END
            END ELSE
               F.VC = ''
            END
            OPEN '','FB.BILLS.HIST,':CLIENT.ID TO FB.BILLS THEN
               FILE='FB.BILLS.HIST,':CLIENT.ID
               GOSUB SELECT.BILLS
            END
            OPEN '','FB.BOL.CRX,':CLIENT.ID TO F.BOL.CRX ELSE          ; * JMK02
               CALL OPEN.ABORT('FB.BOL.CRX,':CLIENT.ID,PROG.NAME)      ; * JMK02
            END                          ; * JMK02

SKIP.CLIENT: ***
         REPEAT
         GOSUB CONTINUE.BUILD
      END ELSE
800:     IF SEPARATE.DIVISIONS AND DIVISIONAL.ID='ALL' THEN
            DIV.COUNT=0
            ZIP.VAR=''
            NUM.DIVS=DCOUNT(DIVS<1>,@VM)
            ITEMS=NUM.DIVS
            LOOP
               DIV.COUNT +=1
               COUNTER.1 +=1
            UNTIL DIV.COUNT > NUM.DIVS
               DIV.ID = DIVS<1,DIV.COUNT>
               READ DDIV FROM F.DIVISION, DIV.ID THEN
                  ZIP.VAR = DDIV<1>
                  CALL FB.READ.ZIP(ZIP.VAR,CITY,STATE)
               END ELSE
                  CITY='' ; STATE=''
               END
               IF CITY='' OR STATE='' THEN
                  CITY.STATE=''
               END ELSE
                  CITY.STATE=CITY:', ': STATE
               END
               GOSUB DO.HEADINGS
               IF AUTO.EMAIL ELSE
                  CRT @(0,17):CLIENT.ID:" ":CLIENT.NAME:" ":"Division: ":DIV.ID:"- Now selecting freight bills":@(-4):
                  CALL PROG.BAR(20,COUNTER.1,ITEMS,PER.1)
               END
               IF DIV.EMAIL.ADDR = '' THEN NEW.EMAIL.ADDR = DDIV<9>
               GOSUB SELECT.BILLS
               GOSUB CONTINUE.BUILD
SKIP.DIVISION: ***
            REPEAT
         END ELSE
            GOSUB DO.HEADINGS
            GOSUB SELECT.BILLS
            GOSUB CONTINUE.BUILD
         END
      END

EXIT.PROGRAM: *** End
      RETURN


*
* Do headings
*
DO.HEADINGS: ***
      DARRAY=''
      RETURN

*
* Select bills for the clients
*
SELECT.BILLS: ***
      IF AUTO THEN
         EXECUTE 'SELECT FB.UNPROCESS,':CLIENT.ID:' WITH FILE.NAME = "FB.BILLS,':CLIENT:'" ITEM.NAME' PASSLIST CAPTURING OUTPUT
      END
      IF FILE = 'FB.BILLS,':CLIENT.ID THEN
         STMT='SSELECT ':FILE:' WITH 30 GE "':OCONV(BEG.DATE,'D2/')
         STMT=STMT:'" AND WITH 30 LE "':OCONV(END.DATE,'D2/'):'"'
         IF CLIENT.ID[1,2]#'99' THEN
            IF FILE.SEL=1 THEN
               STMT=STMT:' AND WITH 39 = "O"'
            END
            STMT=STMT:' AND WITH 39 # "R"'
         END ELSE
            STMT=STMT:' AND WITH 39 # "R"'
         END
      END ELSE
         STMT='SSELECT ':FILE:' WITH 37 GE "':OCONV(BEG.DATE,'D2/')
         STMT=STMT:'" AND WITH 37 LE "':OCONV(END.DATE,'D2/'):'"'
         STMT=STMT:' AND WITH 39 # "R"'
      END
      IF CARRIER#'ALL' THEN STMT=STMT:' AND WITH CARRIER# = "':CARRIER:'"'
      IF CLIENT[1,2]='99' THEN
         IF CARRIER='ALL' AND MODE#'ALL' THEN STMT=STMT:' AND WITH CARRIER.MODE = "':MODE:'"'
      END ELSE
         IF CARRIER='ALL' AND MODE#'ALL' THEN STMT=STMT:' AND WITH 21 = "':MODE:'"'
      END
      BEGIN CASE
         CASE MISROUTE.INFO = 'I'
            STMT=STMT:' AND WITH 63 # "0"'
            IF CLIENT.ID # '00891' THEN STMT:= ' AND MR.OVG.AMT GT "0"'
         CASE MISROUTE.INFO = 'E'
            STMT=STMT:' AND WITH 63 = "0"'
            IF CLIENT.ID # '00891' THEN STMT:= ' OR MR.OVG.AMT LT "0"'
         CASE MISROUTE.INFO = '-'
            STMT=STMT:' AND WITH 63 # "0"'
            STMT:= ' AND MR.OVG.AMT LT "0"'
         CASE MISROUTE.INFO = 'B'
            STMT=STMT:' AND WITH 63 # "0"'
      END CASE
      BEGIN CASE
         CASE LCC.INFO = 'I'
            STMT=STMT:' AND WITH 143 # ""'
         CASE LCC.INFO = 'E'
            STMT=STMT:' AND WITH 143 = ""'
      END CASE
      IF OVERCHARGE.INFO = 'I' THEN STMT=STMT:' AND WITH OVC.AND.OVC.COMM AND WITH OVC.AND.OVC.COMM # "0" '
      IF OVERCHARGE.INFO = 'E' THEN STMT=STMT:' AND WITH 11 AND WITH 11 GE "-0.01" '
      IF LOGISTICS.INFO = 'I' THEN STMT=STMT:' AND WITH 12 AND WITH 12 LT "-0.01" '
      IF LOGISTICS.INFO = 'E' THEN STMT=STMT:' AND WITH 12 AND WITH 12 GE "-0.01" '
      IF DISCOUNT.INFO = 'I' THEN STMT=STMT:' AND WITH 10 AND WITH 10 LT "-0.01" '
      IF DISCOUNT.INFO = 'E' THEN STMT=STMT:' AND WITH 10 AND WITH 10 GE "-0.01" '
      IF TL.INFO = 'I' THEN STMT=STMT:' AND WITH 8 GT "600.00" AND WITH CPM GE "1.25"'
      IF EBILL.INFO = 'I' THEN STMT:=' AND WITH EBILL = "1"'
      IF EBILL.INFO = 'E' THEN STMT:=' AND WITH EBILL = "0"'
      IF CUT.BACK.CODE # '' THEN
         IF CUT.DESC#'' THEN
            X=COUNT(CUT.DESC,'~')
            IF X GT 0 THEN
               FOR I=1 TO X
                  LN='[':FIELD(CUT.DESC,'~',I):']'
                  STMT = STMT:' AND WITH 41 = "':LN:'" '
               NEXT I
               IF FIELD(CUT.DESC,'~',X+1) NE '' THEN
                  LN='[':FIELD(CUT.DESC,'~',X+1):']'
                  STMT = STMT:' AND WITH 41 = "':LN:'" '
               END
            END ELSE
               LN='[':CUT.DESC:']'
               STMT = STMT:' AND WITH 41 = "' LN'" '
            END
         END
      END
      IF DUP.ONLY THEN
         STMT=STMT:' AND WITH VERSION GT "0" '
      END ELSE
         STMT=STMT:' AND WITH VERSION = "0" '
      END
      IF SEPARATE.DIVISIONS THEN
         IF DIVISIONAL.ID = 'ALL' THEN
            STMT := 'AND WITH DIV = "':DIVS<1,DIV.COUNT>:'" '
         END ELSE
            STMT := 'AND WITH DIV = "':DIVISIONAL.ID:'" '
         END
      END
      IF FILE.SEL='4' THEN
         STMT='SSELECT ':FILE:' WITH 39 = "O" AND WITH 14 = "" AND WITH VERSION = "0"'
      END
      IF D.SORT<1>#'' THEN
         LN = 'BY ':D.SORT<1>
         STMT=STMT:LN
      END
      STMT=STMT:' BY CARRIER BY CARRIER# BY 2 BY 1 BY PRO'
      EXECUTE STMT PASSLIST RTNLIST BILLS.LIST CAPTURING OUTPUT
      IF @SELECTED>0 ELSE
         IF (CLIENT#'ALL' AND CLIENT#'AFS' AND CLIENT#'SCT') THEN
            IF SEPARATE.DIVISIONS AND DIVISIONAL.ID = 'ALL' THEN GOTO SKIP.DIVISION
            GOTO EXIT.PROGRAM
         END
      END
      NUM.BILLS = @SELECTED

      SHOULD.SUBTOTAL = D.SORT<4>
      OLD.SUBDATA = 'FIRST-ONE'
      SUBTOTAL = ''
      TOTAL = ''
      SUB.ATTR = D.SORT<1>
      COUNTER.2=0
      PER.2 = 0
      PRO.DONE=0
      TEMP.ID=''
      TEMP.REC=''
      LINE.CNT=0

*
* Get next item to process
*

      LOOP
         READNEXT PRO.ID FROM BILLS.LIST ELSE PRO.DONE = 1
      UNTIL PRO.DONE DO
         COUNTER.2=COUNTER.2+1
         LINE=''
         NO.EDI=0
         READ PRO.REC FROM FB.BILLS,PRO.ID THEN
            PRO.ORG=PRO.REC
GET.BILL:
            COUNTER.2=COUNTER.2+1
            IF AUTO.EMAIL=0 THEN CALL PROG.BAR(22,COUNTER.2,NUM.BILLS,PER.2)
*
* DEFINE FIELDS OF INFORMATION
*
            EXP.CODE=PRO.REC<5>
            PROC.DT=PRO.REC<37>
            IF FILE.SEL=1 THEN PROC.DT=PRO.REC<30>
            CARRIER.ID=OCONV(PRO.ID,'G0*1')
            PRO.NUM=OCONV(PRO.ID,'G1*1')
            CARRIER.ID=OCONV(PRO.ID,'G0*1')
            READ CARRIER.REC FROM F.CARRIERS,CARRIER.ID THEN
               CARRIER.MODE=CARRIER.REC<44>
               IF PRO.REC<21>#'' THEN CARRIER.MODE=PRO.REC<21>
               READ TR.REC FROM F.TRANSPORT,CARRIER.MODE ELSE
                  TR.REC=''
               END
            END ELSE
               CARRIER.REC=''
               TR.REC=''
            END
            CARRIER.NAME=CARRIER.REC<1>
            CARRIER.CHG=PRO.REC<7>
            ACTUAL.CHG=PRO.REC<8>'MR2'
            DIV=OCONV(PRO.REC<9>,'MCA')
            UF1=PRO.REC<183,1>
            WT=PRO.REC<6>
            IOT=PRO.REC<2>
*
* CHECK FOR ROBROY SUPPLIED BOL INFO IF NOT ENTERED
*
*           TOT.BOL.DIST=SUM(PRO.REC<205>)+0 ; * JMK01
            TOT.BOL.DIST=0               ; * JMK01
            BOL.LIST=PRO.REC<16>         ; * JMK01
            NVAL=DCOUNT(BOL.LIST<1>,@VM)           ; * JMK01
            FOR VAL=1 TO NVAL            ; * JMK01
               IF BOL.LIST<1,VAL>#'' THEN          ; * JMK01
                  IF INDEX(BOL.LIST<1,VAL>,'-',1)=0 THEN     ; * JMK10
                     BOL.TEMP=BOL.LIST<1,VAL>      ; * JMK10
                     BOL.LIST<1,VAL>=BOL.TEMP[1,9]:'-':BOL.TEMP[10,2]  ; * JMK10
                     PRO.REC<16,VAL>=BOL.TEMP[1,9]:'-':BOL.TEMP[10,2]  ; * JMK10
                  END                    ; * JMK10
                  IF PRO.REC<205,VAL>='' THEN      ; * JMK02
                     READ BOL.REC FROM F.BOL.CRX,BOL.LIST<1,VAL> THEN  ; * JMK02
                        PRO.REC<205,VAL>=BOL.REC<20>         ; * JMK02
                     END                 ; * JMK02
                  END                    ; * JMK02
                  IF NUM(PRO.REC<205,VAL>) THEN    ; * JMK10
                     IF PRO.REC<205,VAL>+0#'0' THEN          ; * JMK10
                        TOT.BOL.DIST+=PRO.REC<205,VAL>       ; * JMK01
                     END                 ; * JMK10
                  END                    ; * JMK10
               END                       ; * JMK01
            NEXT VAL                     ; * JMK01
            IF PRO.REC # PRO.ORG THEN WRITE PRO.REC ON FB.BILLS,PRO.ID
            IF TOT.BOL.DIST=0 THEN
               RR.PRO=PRO.NUM
               RR.PRO.NO=CHANGE(RR.PRO,'-','')
               RR.PRO.NO=CHANGE(RR.PRO.NO,' ','')
               CHR.POS=0
               CHR.EXIT=0
               LOOP
                  CHR.POS+=1
                  CHR=RR.PRO.NO[CHR.POS,1]
                  IF CHR#'0' THEN CHR.EXIT=1
                  IF CHR.POS>LEN(RR.PRO.NO) THEN CHR.EXIT=1
               UNTIL CHR.EXIT DO
               REPEAT
               RR.PRO.NO=RR.PRO.NO[CHR.POS,9999]
               IF RR.PRO.NO#'' THEN
                  READ PBX.REC FROM F.PBX,RR.PRO.NO THEN
                     PRO.REC<16>=''      ; * JMK10
                     PRO.REC<205>=''     ; * JMK10
                     PRO.NVAL=DCOUNT(PBX.REC<1>,@VM)         ; * JMK10
                     FOR PRO.VAL=1 TO PRO.NVAL     ; * JMK10
                        IF PBX.REC<3,PRO.VAL>=CLIENT OR PBX.REC<3,PRO.VAL>='01349' THEN    ; * JMK10
*                          PRO.REC<16>=PBX.REC<1>  ; * JMK10
*                          PRO.REC<205>=PBX.REC<2> ; * JMK10
                           PRO.REC<16,-1>=PBX.REC<1,PRO.VAL> ; * JMK10
                           PRO.REC<205,-1>=PBX.REC<2,PRO.VAL>          ; * JMK10
                           TOT.BOL.DIST=SUM(PRO.REC<205>)+0  ; * JMK01
                        END              ; * JMK10
                     NEXT PRO.VAL        ; * JMK10
                  END
               END
            END
*           BOL.LIST=PRO.REC<16>         ; * JMK01
*           NVAL=DCOUNT(BOL.LIST<1>,@VM) ; * JMK01
            IF NVAL>1 THEN
*              TOT.BOL.RATE=SUM(PRO.REC<205>)      ; * JMK01
               TOT.BOL.RATE=TOT.BOL.DIST           ; * JMK01
               IF TOT.BOL.DIST=0 THEN TOT.BOL.RATE=NVAL      ; * JMK02
               ACC.CARRIER.CHG=0
               ACC.ACTUAL.CHG=0
               ACC.BOL.WT=0
               REM.CARRIER.CHG=CARRIER.CHG
               REM.ACTUAL.CHG=ACTUAL.CHG
               REM.WT=WT
               FOR VAL=1 TO NVAL
                  BOL=PRO.REC<16,VAL>
                  BOL.RATE=PRO.REC<205,VAL>
                  IF TOT.BOL.DIST=0 THEN BOL.RATE=1          ; * JMK02
                  BOL.CARRIER.CHG=ICONV(BOL.RATE/TOT.BOL.RATE*CARRIER.CHG,'MR0')
                  BOL.ACTUAL.CHG=ICONV(BOL.RATE/TOT.BOL.RATE*ACTUAL.CHG,'MR0')
                  BOL.CARRIER.CHG=ICONV(BOL.RATE/TOT.BOL.RATE*CARRIER.CHG,'MR0')
                  BOL.WT=ICONV(BOL.RATE/TOT.BOL.RATE*WT,'MR0')
                  ACC.CARRIER.CHG+=BOL.CARRIER.CHG
                  ACC.ACTUAL.CHG+=BOL.ACTUAL.CHG
                  ACC.BOL.WT+=BOL.WT
*                 IF REM.CARRIER.CHG<BOL.CARRIER.CHG THEN BOL.CARRIER.CHG=REM.CARRIER.CHG
*                 IF REM.ACTUAL.CHG<BOL.ACTUAL.CHG THEN BOL.ACTUAL.CHG=REM.ACTUAL.CHG
*                 IF REM.WT<BOL.WT THEN BOL.WT=REM.WT
                  IF VAL=NVAL THEN
                     BOL.CARRIER.CHG=REM.CARRIER.CHG
                     BOL.ACTUAL.CHG=REM.ACTUAL.CHG
                     BOL.WT=REM.WT
                  END
                  REM.CARRIER.CHG=CARRIER.CHG-ACC.CARRIER.CHG
                  REM.ACTUAL.CHG=ACTUAL.CHG-ACC.ACTUAL.CHG
                  REM.WT=WT-ACC.BOL.WT
                  LINE.CNT+=1
                  LINE=SPACE(229)
                  LINE[ 1, 6]=EXP.CODE'L#6'
                  LINE[ 8, 5]=PROC.DT+EXCEL.ADJ
                  LINE[ 13, 4]=LINE.CNT'R#4'
                  LINE[ 17, 5]=CARRIER.ID'R%5'
                  LINE[ 23,15]=PRO.NUM
                  LINE[ 38,15]=BOL
                  LINE[ 53,10]=CARRIER.NAME'L#10'
                  LINE[ 63,10]=BOL.CARRIER.CHG'R26#10'
                  LINE[ 73,10]=BOL.ACTUAL.CHG'R26#10'
                  LINE[136, 6]=DIV'L#6'
                  LINE[163, 6]=UF1'L#6'
                  LINE[190, 9]=BOL.WT'R#9'
                  LINE[229, 1]=IOT
                  DARRAY<-1>=LINE
                  LINE.COUNT = LINE.COUNT +1
               NEXT VAL
            END ELSE
               LINE.CNT+=1
               LINE=SPACE(229)
               LINE[ 1, 6]=EXP.CODE'L#6'
               LINE[ 8, 5]=PROC.DT+EXCEL.ADJ
               LINE[ 13, 4]=LINE.CNT'R#4'
               LINE[ 17, 5]=CARRIER.ID'R%5'
               LINE[ 23,15]=PRO.NUM
               LINE[ 38,15]=BOL.LIST
               LINE[ 53,10]=CARRIER.NAME'L#10'
               LINE[ 63,10]=CARRIER.CHG'R26#10'
               LINE[ 73,10]=ACTUAL.CHG'R26#10'
               LINE[136, 6]=DIV'L#6'
               LINE[163, 6]=UF1'L#6'
               LINE[190, 9]=WT'R#9'
               LINE[229, 1]=IOT
               DARRAY<-1>=LINE
               LINE.COUNT = LINE.COUNT +1
            END
*-------------------------------------------
* KM 3/12/2004 To handle files that get more lines
* than excel can handle by breaking the file into sections
*-------------------------------------------
            IF USER='KMESSENGER' THEN
               CRT@(0,10):'LINES SELECTED:':LINE.COUNT
               CRT@(0,11):'FILE VERSION:':NAME.EXT
            END
            IF LINE.COUNT >= 65000 THEN
               IF NAME.EXT = '' THEN
                  NAME.EXT = 0
               END
               IF USER='KMESSENGER' THEN
                  CALL ELINE('Kevin-About to write file version:':NAME.EXT)
                  CRT@(0,10):'LINES SELECTED:     '
                  CRT@(0,11):'FILE VERSION:     '
               END
               DARRAY.HOLD = DARRAY<1>
               DARRAY.HOLD<-1> = @VM
               DARRAY.HOLD<-1> = DARRAY<3>
               GOSUB CONTINUE.BUILD
               DARRAY = DARRAY.HOLD
               LINE.COUNT = 3
               NAME.EXT = NAME.EXT+1
            END
*-------------------------------------------
            IF INC.BD THEN
               PRO.ID=FIELD(PRO.ID,'*',1):'*':FIELD(PRO.ID,'*',2):'BD*':FIELD(PRO.ID,'*',3)
               READ PRO.REC FROM FB.BILLS,PRO.ID THEN GOTO GET.BILL
            END
            IF TEMP.ID[1,11] MATCHES "1N'-'3N'-'5N" ELSE
               PRO.ID=TEMP.ID
               TEMP.ID=''
               LINE=''
               READ PRO.REC FROM FB.BILLS,PRO.ID THEN GOTO GET.BILL
            END
         END
OWEN.REPEAT: ***
      REPEAT
      IF SHOULD.SUBTOTAL THEN
         DARRAY<-1> = SUBTOTAL<1>
         DARRAY<-1> = ''
      END
      IF SHOULD.SUBTOTAL THEN
         DARRAY<-1> = TOTAL
      END
      RETURN

*
* Continue to build and save file
*
CONTINUE.BUILD: ***
      RECORD.NAME=CLIENT.ID
      RECORD.NAME:='_'
      D=END.DATE'D2/'
      RECORD.NAME:=D[7,4]:D[1,2]:D[4,2]
      RECORD.NAME:='.TXT'

      WRITE DARRAY ON F.FILE,RECORD.NAME ELSE
         CALL ELINE('Unable to write. Close ':RECORD.NAME:'. Then press enter to write')
         WRITE DARRAY ON F.FILE,RECORD.NAME ELSE
            CALL ELINE('Unable to write. Aborting')
            STOP
         END
      END
      WRITE DARRAY ON F.FTP,RECORD.NAME  ; * JMK04
      VOUT<1>=RECORD.NAME
      IF AUTO.EMAIL OR MANUAL.EMAIL THEN
         EMAIL.OUT=''
         IF MANUAL.EMAIL OR (AUTO.EMAIL AND SEPARATE.DIVISIONS) THEN
            EMAIL.OUT<1>=NEW.EMAIL.ADDR
         END ELSE
            EMAIL.OUT<1>=TRIM(CLIENT.REC<125>)     ; * To Address
         END
         IF AUTO.EMAIL THEN
            EMAIL.OUT<2>=TRIM(CLIENT.REC<126>)
            EMAIL.OUT<3>=TRIM(CLIENT.REC<127>)
            EMAIL.OUT<3,-1>='WeeklyClientEmails@afs.net'     ; * JMK09
         END
         IF CLIENT.REC<179>#'' AND ONCE=0 THEN     ; * JMK06
            EMAIL.OUT<1>=TRIM(CLIENT.REC<179>)     ; * JMK06
            EMAIL.OUT<2>=''              ; * JMK06
            EMAIL.OUT<3>=''              ; * JMK06
         END                             ; * JMK06
         IF USER='MKERBOW' THEN
            EMAIL.OUT=''
            EMAIL.OUT<1>='MKerbow@afs.net'
         END ELSE
*           EMAIL.OUT<3,-1>='MKerbow@afs.net' ; * JMK09
         END
         EMAIL.OUT<4>='Reports@afs.net'
*        EMAIL.OUT<5,1>='PO Distribution of Freight Bills'   ; * JMK05
         EMAIL.OUT<5,1>=CLIENT.ID:'-':CLIENT.NAME:' PO Distribution of Freight Bills'      ; * JMK05
         EMAIL.OUT<6>='PO Distribution of Freight Bills'
         EMAIL.OUT<6,2>=' The attached file is a Detail Spreadsheet with'
         EMAIL.OUT<6,3>=' PO distributions. If you have any questions,'
*        EMAIL.OUT<6,4>=' please feel free to call John Esposito at 412-920-2350.'         ; * JMK03
*        EMAIL.OUT<6,4>=' please feel free to call Nikki Fasone at 412-920-2350.'          ; * JMK03 ; * JMK07
         EMAIL.OUT<6,4>=' please feel free to call Wendy Pettigrew at 412-920-2350.'       ; * JMK03 ; * JMK07
         EMAIL.OUT<6,6>=' Thank you for your business.'
         EMAIL.OUT<11> = 'E:\ARDENT\PUBLIC\EMAILDATA\'
         EMAIL.OUT<11>:=RECORD.NAME
         EVIN = EMAIL.OUT
         IF EMAIL.OUT<1>#'' THEN CALL SENDMAIL(EVIN,EVOUT)
      END
      RETURN
