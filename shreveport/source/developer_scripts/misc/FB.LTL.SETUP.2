****************************************************
* Program name : FB.LTL.SETUP.2
* Author       : JIM T ROW
* Date written : JAN 1996
* Library      : FBBP
* COPYRIGHT (c) : AFS, LLC 2016, All Rights Reserved.
* LTL Auto Audit Setup Program
*
* Last updated by afs (AFSLOGISTICS\nmeddaugh) at 09:46:11 on 11/19/2020.
*
* Start modification history
* 062104 - JMK01 - ADD ACCESS FOR MPACE
* 072304 - JMK02 - ADD CREATED BY AND LAST MODIFIED BY INFORMATION
* 061413 - JMK03 - SysAid#6240 - OLA Pricing Tables Access
* 120114 - DRF01 - SysAid 13903 - Charlotte needs acces to this program
* 053116 - GRB01 - SysAid 24916 add vanessa britton
* 061316 - GRB02 - SysAid 25018 Add jshivers
* 031119 - GRB03 - Set operator permission for view or update
* 040119 - NKH01 - ACCU-316 Modified CREATE-FILE file sizes
* 111920 - NKH02 - ACCU-1055 Added a third character to the value Table
* End modification history
*****************************************************

$INCLUDE PROG.ADMIN INC_OPTIONS
$INCLUDE FILE.DEFS INC_CLIENTS

      EQU TRUE TO 1
      EQU FALSE TO 0
      WRITE.DATA = @FALSE                ; * GRB03
      MAT CLIENT.REC = ''
      TABLE.NUM = ''
*
* Initialize app variables
*
      PROMPT''
      PROG.NAME='FB.LTL.SETUP.2'

      CALL GET.USER.NEW(USER.NAME,CH.NUM)
      OPEN '','OPERATOR' TO F.OP ELSE CALL OPEN.ABORT("OPERATOR",PROG.NAME)      ; * GRB01
      READV OP.FLG FROM F.OP,USER.NAME,32 ELSE
         OP.FLG<1,1> = "N"               ; * GRB03
      END
      IF OP.FLG<1,1> # "Y" THEN          ; * GRB03
****     BEGIN CASE
*
* Authorized users
*
         ****     CASE USER.NAME = 'BRIAN'        ; * JMK03
         ****     CASE USER.NAME = 'DAVID'
         ****     CASE USER.NAME = 'GBINO'
         ****     CASE USER.NAME = 'PBASS'        ; * PER EMAIL AND VERBAL Bill Franklin and Mike Kerbow
         ****     CASE USER.NAME ='JSHIVERS'    ; * GRB02   
         ****     CASE USER.NAME = 'AHICKS'       ; * TICKET 3092 - DRF 07/06/12
         ****     CASE USER.NAME = 'VBRITTON'     ; * GRB01
         ****     CASE USER.NAME = 'CCOX'         ; * DRF01
         ****     CASE USER.NAME = 'NKELLY'       ; * TICKET 5817 - DRF 04/30/13
         ****     CASE USER.NAME = 'SSHAFER'      ; * MATT 12/15/05
         ****     CASE USER.NAME = 'TBURNS'       ; * NPR 01/20/10 as per Owen.

*
* Restrict everyone else
*
         ****     CASE 1
         SUBJ="Unauthorized OLA Access Attempt by ":USER.NAME
         TEXT=''
         TEXT<1,-1>=USER.NAME:' ':DATE()'D2/':' ':OCONV(TIME(),'MTHS'):' ':PROG.NAME
         TEXT<1,-1>='User ':USER.NAME:' tried to access LTL Audit Table Editor'
         TEXT<1,-1>="(This user's name was not included in the program to allow access)"
         MVIN=''
         MVIN<1>='SWinstead@afs.net'
****            MVIN<2>='Rhollifield@afs.net'
         MVIN<4>='AFS'
         MVIN<5>=SUBJ
         MVIN<6>=TEXT
         CALL SENDMAIL(MVIN,MVOUT)

         CALL FB.PRINT.CENT(1,80,12,'Restricted Access Application')
         CALL FB.PRINT.CENT(1,80,14,'Access Denied! See the Logistics Manager for Access')
         CALL ELINE('')
         STOP
         ****  END CASE
      END
      * Begin GRB03
      IF OP.FLG<1,2> = "Y" THEN
         WRITE.DATA = @TRUE
      END
* End GRB03
      PROG.NAME='FB.LTL.SETUP.2'
      PROG.DESC='LTL Audit Table Entry'
      PACK.NAME='User :':USER.NAME
      CO.NAME='AFS Logistics, LLC'
      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'FB.LTL.SETUP.2' ; UPL.VOUT = ''           ; * NPR_UPL 04/23/2010
      UPL.VIN<3> =USER.NAME
      UPL.VIN<4> = CH.NUM
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)       ; * NPR_UPL 04/23/2010
      ERR.MSG = ''
      TABLE.DESC=''


      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         CALL OPEN.ABORT("CLIENTS",PROG.NAME)
      END
      OPEN '','CARRIERS' TO F.CARRIERS ELSE
         CALL OPEN.ABORT("CARRIERS",PROG.NAME)
      END
      OPEN '','FB.CAR.CTRL' TO F.CAR.CTRL ELSE
         CALL OPEN.ABORT("FB.CAR.CTRL",PROG.NAME)
      END

10:
*
* ENTER CLIENT NAME/NUMBER
*
      GOSUB INPUT.SCREEN
      CLIENT.ID = ''
      CARRIER.ID = ''

50:
      HELP = "Enter client name or number to setup. [EX] = Exit"
      MASK = '#####'
      CRT @(9, 3):@(-4)
      CRT @(9, 4):@(-4)
      CRT @(9, 5):@(-4)
***************************************************
100:
***************************************************
      CALL GEN.IN(9,3,MASK,'',Q,0,20,'','',2,-5,3,1,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI = '' OR QI='EX'
            STOP
         CASE NUM(QI) AND QI # ''
            CLIENT.ID = QI'R%5'
         CASE NOT(QI MATCHES "0N") AND QI # ''
            CALL SOUNDEX.DISPLAY(QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            GOSUB INPUT.SCREEN
            BEGIN CASE
               CASE ITEM.LIST = ''
                  GOTO 50                ; * START OVER
               CASE DCOUNT(ITEM.LIST,@AM) GT 1
                  GOTO 50                ; * START OVER
               CASE 1
                  DATA ITEM.LIST
                  GOTO 50                ; * START OVER
            END CASE
         CASE 1
            CALL ELINE('Invalid Client Name, Try Again.')
            GOTO 100
      END CASE

*
* Open Client Records
*
      MATREAD CLIENT.REC FROM F.CLIENTS,CLIENT.ID ELSE
         CALL ELINE("Client number ":CLIENT.ID:" is not a valid client #")
         GOTO 100
      END
***************************************************
125:* Get Client Name
***************************************************

      CLIENT.NAME = CL.NAME
      ZIP.LEN = CL.ZIP.FLAG
      CBVIN=''
      CBVIN<1>=CLIENT.ID
      CALL CLIENT.BLOCK(CBVIN,CBVOUT,F.CAR.CTRL)
      CRT @(9, 3):CBVOUT<1>:CLIENT.ID:', ':CL.NAME:@(-6):@(-4)
      CRT @(9, 4):CL.ADDR:@(-4)
      CRT @(9, 5):CL.CITY:', ':CL.ST:' ':CL.ZIP:@(-4)

*
* Open Client Audit File
*
      OPEN '','FB.AUDIT,':CLIENT.ID TO F.AUDIT THEN
         READ SUB.REC FROM F.AUDIT,'SUBSTITUTE' THEN
            CALL ELINE('This is a substitute to ':SUB.REC<1>:' Please use ':SUB.REC<1>:' to make changes.')
            GOTO 50
         END
      END

      OPEN '','FB.AUDIT.TABLES,':CLIENT.ID TO F.AUDIT.TABLES ELSE
         YN.MSG = '"':CLIENT.ID:'" is not setup! Do you want to add it? :'
         YN.MASK = 'N '
         GOSUB ASK.Y.OR.N
         IF YN.ANSWER = 'Y' THEN
            CRT @(1,22):'Setting up files for client - Please wait':@(-4)
            CRT @(1,23):@(-4):
            EXECUTE 'CREATE-FILE DATA FB.AUDIT.TABLES,':CLIENT.ID:' 503,1' PASSLIST CAPTURING OUTPUT  ; * NKH01
            OPEN '','FB.AUDIT.TABLES,':CLIENT.ID TO F.AUDIT.TABLES ELSE
               CALL OPEN.ABORT("FB.AUDIT.TABLES,":CLIENT.ID, PROG.NAME)
            END
            CLIENT.ENABLED = FALSE
         END ELSE
            GOTO 50
         END
      END

***************************************************
150:* ASK FOR CARRIER
***************************************************
      CARRIER.NAME = ''
      CARRIER.CITY = '' ; CARRIER.STATE = ''
      CHANGES.MADE = ''

      CRT @(9, 7):@(-4)
      CRT @(9, 8):@(-4)
      HELP="Enter carrier number, 'name' for search, [L]ist, [EX]it."
      IF CARRIER.ID THEN
         MASK = CARRIER.ID
      END ELSE
         MASK = '#####'
      END
***************************************************
200:
***************************************************
      CALL GEN.IN(9,7,MASK,'',Q,0,20,'','',2,9,7,0,QI,HELP,0,23)
      IF QI='' THEN QI=MASK
      QI=OCONV(QI,'MCU')

      BEGIN CASE
         CASE QI='X'
            GOTO 50
         CASE QI='EX'
            STOP
         CASE QI EQ 'L'
            EXECUTE 'SORT FB.AUDIT,':CLIENT.ID:' BY CARRIER# CARRIER.NAME CARRIER.CITY CARRIER.STATE'
            CALL ELINE('')
            GOSUB INPUT.SCREEN
            GOSUB DSP.SCREEN.DATA
            GOTO 200

         CASE NUM(QI)
            CARRIER.ID=QI'R%5'
            CRT @(9,7):CARRIER.ID

         CASE 1
            CALL SOUNDEX.DISPLAY(Q,'CARRIERS','SDX.CARRIER,NAME','1,3,4',QX)
            CT=DCOUNT(QX<1>,@VM)
            IF CT=1 THEN
               DATA QX<1,1>
            END
            GOSUB INPUT.SCREEN
            GOSUB DSP.SCREEN.DATA
            GOTO 200
         CASE 1
            CALL ELINE('Invalid Entry.')
      END CASE

*
* Open Carrier Records
*
      READ CARRIER.REC FROM F.CARRIERS,CARRIER.ID ELSE
         CALL ELINE('"':CARRIER.ID:'" is an invalid Carrier Number. Try Again.')
         GOTO 150
      END

      CARRIER.NAME = CARRIER.REC<1>
      CARRIER.CITY = CARRIER.REC<3>
      CARRIER.STATE = CARRIER.REC<4>
      GOSUB DSP.SCREEN.DATA

*
* TABLE NUMBER
*
300:
      HELP = "Enter TABLE NUMBER to setup. ''=Select [EX] = Exit"
      MASK = "###"   ; * NKH02

      CRT @(9, 11):@(-4)
***************************************************
310:
***************************************************
      CALL GEN.IN(9,11,MASK,'',Q,0,20,'','',2,9,11,1,QI,HELP,0,23)
      QI = TRIM(OCONV(QI,'MCU'))
      BEGIN CASE
         CASE QI = 'EX'
            STOP
         CASE QI='X'
            GOTO 150
         CASE QI=''
            VIN=CLIENT.ID
            VIN<2>=CARRIER.ID
            VOUT=''
            CALL AUDIT.TABLE.SELECT(VIN,VOUT)
            BEGIN CASE
               CASE VOUT<1> = 'EX'
                  STOP
               CASE VOUT<1> = 'X'
                  GOSUB INPUT.SCREEN
                  GOSUB DSP.SCREEN.DATA
                  GOTO 300
               CASE 1
                  TABLE.NUM = VOUT<1>
                  GOSUB INPUT.SCREEN
                  GOSUB DSP.SCREEN.DATA
                  GOTO LOAD.IT
            END CASE

         CASE (QI GE '0' AND QI LE '999') OR (QI GE 'A' AND QI LE 'Z')  ; * NKH02
            TABLE.NUM = QI
         CASE 1
            CALL ELINE('Invalid Table Number, Try Again.')
            GOTO 310
      END CASE
***************************************************
325:
***************************************************
      CRT @(9, 11):TABLE.NUM:@(-4)

      KEY = CARRIER.ID:'*':TABLE.NUM
      READ DUMMY FROM F.AUDIT.TABLES, KEY THEN
*
* Was able to load table...
*
* Ask if this is the table the user wants to load
*
         CRT @(9, 13):DUMMY<31>:@(-4)
         IF DUMMY<46>#'' THEN            ; * JMK02
            FOOTER1="Created by ":DUMMY<46,1>'MCT':" On ":DUMMY<47,1>'D2/':" At ":OCONV(DUMMY<48,1>,'MTHS')    ; * JMK02
            CRT @(0, 18):FOOTER1:@(-4)   ; * JMK02
         END                             ; * JMK02
         IF DUMMY<43>#'' THEN            ; * JMK02
            NUM.OF.ITEM=DCOUNT(DUMMY<43>,@VM)      ; * JMK02
            FOOTER2="Last Updated by ":DUMMY<43,NUM.OF.ITEM>'MCT':" On ":DUMMY<44,NUM.OF.ITEM>'D2/':" At ":OCONV(DUMMY<45,NUM.OF.ITEM>,'MTHS')         ; * JMK02
            CRT @(0, 20):FOOTER2:@(-4)   ; * JMK02
         END                             ; * JMK02
         YN.MSG = 'Load this table?'
         YN.MASK = 'Y'
         GOSUB ASK.Y.OR.N
         IF YN.ANSWER='D' THEN
            HELP='THIS TABLE MUST NOT BE IN USE ANYWHWERE! Enter Y to delete or N not to delete.'
            CALL GEN.IN(0,22,'Are you sure? N','',Q,0,1,'','',2,-1,22,1,QI,HELP,0,23)
            QI=OCONV(QI,'MCU')
            IF QI='Y' THEN
               DELETE F.AUDIT.TABLES, KEY
            END
            CRT @(9,13):@(-4):
            CRT @(0,18):@(-4):           ; * JMK02
            CRT @(0,20):@(-4):           ; * JMK02
            TABLE.NUM=''
            GOTO 300
         END
         IF YN.ANSWER # 'Y' THEN
            CRT @(9,13):@(-4):
            CRT @(0,18):@(-4):           ; * JMK02
            CRT @(0,20):@(-4):           ; * JMK02
            TABLE.NUM=''
            GOTO 300
         END
      END ELSE
*
* Table does not exists..
*
* Ask user if he wants to create this table number...
*
         YN.MSG = '"':TABLE.NUM:'" is not setup! Do you want to create it? :'
         YN.MASK = 'N '
         DUMMY=''
         GOSUB ASK.Y.OR.N
         IF YN.ANSWER # 'Y' THEN
            GOTO 300
         END

         TABLE.DESC=''
***************************************************
350:* Enter a Description for the new Table
***************************************************
         HELP = "Enter a Table Description for the new table. [X]=Back [EX]=Exit"
         CRT @(9, 13):@(-4)
         IF TABLE.DESC THEN
            MASK = TABLE.DESC
            REQ = 0
         END ELSE
            MASK=STR('#',65)
            REQ = 1
         END
         CALL GEN.IN(9,13,MASK,'',Q,REQ,65,'','',2,9,13,1,QI,HELP,0,23)
         QI = TRIM(OCONV(QI,'MCU'))
         BEGIN CASE
            CASE QI = 'EX'
               STOP
            CASE QI='X'
               GOTO 325
            CASE QI=''
            CASE 1
*
* Confirm the entry of the table
*
               T=TRIM(Q)
               CRT @(9, 13):T:@(-4)
               YN.MSG = 'Do accept the description?'
               YN.MASK = 'Y'
               GOSUB ASK.Y.OR.N
               IF YN.ANSWER # 'Y' THEN GOTO 350
               TABLE.DESC = T
         END CASE
      END

***************************************************
LOAD.IT:
***************************************************
*
* Do we want them to be able to check the Test Version
*

      IF 0 THEN
         YN.MSG = 'Use the Test Version? '
         YN.MASK = 'Y'
         GOSUB ASK.Y.OR.N
         IF YN.ANSWER = 'X' THEN GOTO 300
         USE.TEST = (YN.ANSWER = 'Y')
      END ELSE
         USE.TEST = FALSE
      END

*
* Should we use the test version or the Live version.
*
      VIN=TABLE.NUM
      VIN<2,1>=CLIENT.ID
      VIN<2,2>=CL.NAME
      VIN<3,1>=CARRIER.ID
      VIN<3,2>=CARRIER.REC<1>
      IF CLIENT.ID='00223' THEN CL.LOGISTICS='N'
      VIN<4>=CL.LOGISTICS
      VIN<5>=TABLE.DESC
      VIN<6>=CBVOUT<1>
      VIN<7> =USER.NAME
      VIN<8> = CH.NUM
      VIN<9> = WRITE.DATA                ; * GRB03
      NEW.TABLE=0                        ; * JMK09
      CALL FB.LTL.SETUP.TABLE(VIN,F.AUDIT.TABLES,VOUT)

      GOSUB INPUT.SCREEN
      GOSUB DSP.SCREEN.DATA
      IF VOUT<1> # 'EX' THEN GOTO 300

      STOP

***************************************************
INIT.SCREEN:***
***************************************************
      CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      CRT @(0,2):STR('-',79) ; 

      RETURN

***************************************************
INPUT.SCREEN:***
***************************************************

      GOSUB INIT.SCREEN
      CRT @(0, 3):'Client :':@(-4)
      CRT @(0, 7):'Carrier:':@(-4)
      CRT @(0,11):'Table  :':@(-4)
      CRT @(0,13):'Desc   :':@(-4)

      RETURN

***************************************************
DSP.SCREEN.DATA:***
***************************************************
*
* Display Client Information
*
      IF CLIENT.ID THEN
         CRT @(9, 3):CBVOUT<1>:CLIENT.ID:', ':CL.NAME:@(-6):@(-4)
         CRT @(9, 4):CL.ADDR:@(-4)
         CRT @(9, 5):CL.CITY:', ':CL.ST:' ':CL.ZIP:@(-4)
      END

*
* Display Carrier Information
*
      IF CARRIER.ID THEN
         CRT @(9, 7):CARRIER.ID:', ':CARRIER.NAME:@(-4)
         CRT @(9, 8):CARRIER.CITY:', ':CARRIER.STATE:@(-4)
      END ELSE
         CRT @(9, 7):@(-4)
         CRT @(9, 8):@(-4)
      END

*
* Table Number
*
      IF TABLE.NUM THEN
         CRT @(9, 11):TABLE.NUM:@(-4)
      END ELSE
         CRT @(9, 11):@(-4)
      END

      RETURN

***************************************************
ASK.Y.OR.N:***
***************************************************
      YN.ANSWER = ''
Y.OR.N:
      HELP = CHAR(7):"Entry Options: [Y]-Yes [N]-No [X]-Back"
      CRT @(0,22):YN.MSG:@(-4)
      MASK = YN.MASK'L#1'
      Q=''
      CALL GEN.IN(LEN(YN.MSG)+1,22,MASK,'',Q,0,1,'','',2,LEN(YN.MSG)+1,22,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')

      IF QI='' THEN QI=MASK
      BEGIN CASE
         CASE QI = '1'
            QI='Y'
         CASE QI = '0'
            QI='N'
         CASE QI = 'Y'
         CASE QI = 'N'
         CASE QI = 'X'

         CASE 1
            CALL ELINE('Invalid entry.')
            GOTO Y.OR.N
      END CASE

      CRT @(0,22):@(-4):
      CRT @(0,23):@(-4):
      YN.ANSWER = QI
      RETURN
