***********************************************************************
*
*
* PROGRAM TO PROCESS THE PRECENTAGES OF REVENUE EACH CARRIER REPRESENTS
*
*
* AUTHOR: Jim T. Row & Owen Holman
*
*                           EDIT HISTORY
*                           ------------
*    DATE  : NAME : DESCRIPTION
*  ---------------------------------------------------
* 05/11/95 : JIMR : Project started ...
* 05/12/95 : JimR : Working on formatted output
* 05/15/95 : JimR : Ironing out a few minor bugs.. Adj formatting..etc.
* 05/16/95 : JimR : Adding logistics column, expanding worksheet width
*                   and some more coool stuf.
* 05/16/95 : JimR : Finished up the program with major help from Owen.
*                   An cummulitive percentage was also added by Owen
*                   Still needs a final file name & description.
* 05/16/95 : JimR : Adjusting the total line...
* 02/07/97 :CodyH : Added ability to run for specific client and
*                   include or exclude last few columns...
* 050806 - JMK01 - SKIP 10356.OLD AS THIS IS NOT VALID CLIENT
* 050806 - JCW01 - CHANGES TO '@SELECTED', 'CLEARSELECT', AND 'STMT<X>'
* 031208 - JMK02 - T080799 - Remove duplicates in FB History Reporting
*
***********************************************************************
*
*
$INCLUDE PROG.ADMIN INC_OPTIONS
*
* Initialize variables
*
      COPIES=1
      CARRIERS=0
*
      PROMPT''
      CALL CHANNEL(CH.NUM)
      CALL GET.USER(USER.NAME)
      SMALL.USER=OCONV(USER.NAME,'MCL')
      STATUS=''
      MODE=''
      PROG.NAME='FB.6.5'
      PROG.DESC='Carrier Bills And Revenue Analysis'
      PACK.NAME='Freight Billing'
      NO.DIV.FLAG=0
       UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.6.5' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
       CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
      ERRMSG=''
      CALL FB.FORM(F.NUM)
      TEMP.NAME=''
      ORIG.CLIENT.ID=''
      BUILD.DF=1
      DARRAY = ''                        ; * Spreadsheet array
      DARRAY<1,1>="% of Revenue"
      DARRAY<1,2>="Carrier Number"
      DARRAY<1,3>="Carrier Name"
      DARRAY<1,4>="Mode"
      DARRAY<1,5>="Mode Desc"
      DARRAY<1,6>="# of Bills"
      DARRAY<1,7>="% of Bills"
      DARRAY<1,8>="Cumm % Bills"
      DARRAY<1,9>="Amount Paid"
      DARRAY<1,10>="Ovc Amount"
      DARRAY<1,11>="% OvrChg"
      DARRAY<1,12>="Log Amount"
      DARRAY<1,13>="% Logist"
      DARRAY<1,14>="BD Amount"
      DARRAY<1,15>="BD Bills"
      DARRAY<1,16>="AD Amount"
      DARRAY<1,17>="Ad Bills"
      DARRAY=CHANGE(DARRAY,@VM,CHAR(9))
*
* Open files
*
      OPEN '','FBWORK':CH.NUM TO F.WORK ELSE
         EXECUTE 'CREATE-FILE FBWORK':CH.NUM:' 1 1001' PASSLIST CAPTURING OUTPUT
         OPEN '','FBWORK':CH.NUM TO F.WORK ELSE
            CALL OPEN.ABORT('FBWORK':CH.NUM,PROG.NAME)
         END
      END
      OPEN '','FB.TRANSPORT' TO F.TRANSPORT ELSE
         CALL OPEN.ABORT("FB.TRANSPORT",PROG.NAME)
      END
      OPEN '','VOC' TO F.VOC ELSE
         CALL ELINE('UNABLE TO OPEN VOC FILE, Data File Not Possible')
         BUILD.DF=0
         STOP
      END
      READ BILLDATA.REC FROM F.VOC,"BILLDATA" ELSE
         CALL ELINE('UNABLE TO OPEN "VOC BILLDATA", Data File Not Possible')
         BUILD.DF=0
         STOP
      END
      BILLDATA.REC<2>:='\':SMALL.USER
      WRITE BILLDATA.REC ON F.VOC,"BILLDATA.":USER.NAME ELSE
         CALL ELINE("YOUR USER NAME '":USER.NAME:"' IS NOT IN THE BILLDATA FOLDER - PLEASE SEE OWEN/TAMI/DAVID")
         CALL ELINE("Data File Not Possible")
         BUILD.DF=0
      END
      OPEN '','BILLDATA.':USER.NAME TO BILLDATA ELSE
         CALL ELINE('UNABLE TO OPEN "BILLDATA."':USER.NAME:', Data File Not Possible')
         BUILD.DF=0
      END
      OPEN '','CLIENTS' TO F.CLIENTS ELSE CALL OPEN.ABORT("CLIENTS",PROG.NAME)
      OPEN '','TABLES' TO F.TABLES ELSE CALL OPEN.ABORT("TABLES",PROG.NAME)
      READ DPRINTERS FROM F.TABLES,'PRINTERS' ELSE DPRINTERS=''
      OPEN 'DICT','FBWORK':CH.NUM TO F.DICT.WORK ELSE
         CALL OPEN.ABORT('DICT FBWORK':CH.NUM,PROG.NAME)
      END
      OPEN 'FB.BILLS.CRX' TO F.CRX ELSE
         CALL OPEN.ABORT('FB.BILLS.CRX',PROG.NAME)
      END
      OPEN '','CARRIERS' TO F.CARRIERS ELSE
         CALL OPEN.ABORT('CARRIERS',PROG.NAME)
      END
*
* Create work file dictionary items
*
      TEMP=''
      TEMP<1>='S'
      TEMP<2>=3
      TEMP<3>='Carr $'
      TEMP<7>='MR2'
      TEMP<8>=''
      TEMP<9>='R'
      TEMP<10>=10
      WRITE TEMP ON F.DICT.WORK,'CAR.DOL'
      TEMP<3>=''
      TEMP<2>=1 ; WRITE TEMP ON F.DICT.WORK,1
      TEMP<2>=2 ; WRITE TEMP ON F.DICT.WORK,2
      TEMP<2>=5 ; WRITE TEMP ON F.DICT.WORK,5
      TEMP<2>=7 ; WRITE TEMP ON F.DICT.WORK,7
*
      TEMP<2>=4
      TEMP<3>='Bills'
      TEMP<7>=''
      TEMP<9>='R'
      TEMP<10>=6
      WRITE TEMP ON F.DICT.WORK,'BILLS'
*
*  WORK FILE CONSISTS OF ITEMS WITH THE FOLLOWING DETAIL
*  Variable Attribute Description.....................................
*               ID
*                1    Overcharge amount (Discount Var + Overchg Var)
*                2    Logistics Markup - Consulting Variance
*                3    Amout Paid    - Adjusted bill amout
*                4    Bill Count    - Number of bills for client
*                5    BalDueAmt     - Balance Due Amount (PAID)
*                6    BalDueCnt     - Number of Balance dues
*                7    AddDueAmt     - Additional Due Amount (PAID)
*                8    AddDueCnt     - Number of Additional dues
*                9    Most Recent Bill Date
*
*
* Display screen heading
*
30:   CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
*
* Get client number to process or all
*
50:   HELP='Enter the client number to report. [ENTER]=All Clients.'
      CALL GEN.IN(0,3,'Enter client number.  #####','',Q,0,8,'','',1,-5,3,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      ALL.ONE=''
      BEGIN CASE
         CASE Q='X'!Q='EX'
            GOTO EXIT.PROGRAM
         CASE Q=''
            ALL.ONE='ALL'
         CASE NOT(QI MATCHES "0N")
            CALL SOUNDEX.DISPLAY(QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            BEGIN CASE
               CASE ITEM.LIST = ''
                  GOTO 50                ; * START OVER
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                  GOTO 50                ; * START OVER
               CASE 1
                  IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
                  GOTO 50                ; * START OVER
            END CASE
         CASE NUM(QI)
         CASE 1
            CALL ELINE('Something is wrong.')
            GOTO 50
      END CASE
      QI=QI'R%5'
      IF ALL.ONE#'ALL' THEN
         READ CLIENT.REC FROM F.CLIENTS,QI ELSE
            CALL ELINE('Client ':QI:' is not on file.')
            GOTO 50
         END
         TEMP.NAME=CLIENT.REC<2>
      END ELSE
         QI='ALL'
         TEMP.NAME='All clients.'
      END
      CRT@(22,3):QI:' - ':TEMP.NAME
      IF QI='ALL' THEN
         DA.NAME='All Clients'
      END ELSE
         DA.NAME='Client ':QI:' - ':TEMP.NAME
      END
      IF QI#'ALL' THEN CLIENT.ID=QI ELSE CLIENT.ID=''
      ORIG.CLIENT.ID=QI'R%5'
*
* SELECT PRINTER
*
      MASK=''
      PRT.DESC=''
      LOCATE F.NUM IN DPRINTERS<2> SETTING POS THEN
         MASK=DPRINTERS<1,POS>
         PRT.DESC=DPRINTERS<4,POS>
      END
75:   HELP="Enter the printer number, [F]-Build Spreadsheet file, [X]-Back, [EX]it"
      CALL GEN.IN(0,5,'Enter printer number: ':MASK:' - ':PRT.DESC,'',Q,0,2,'','',2,22,5,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            IF MASK='' THEN
               CALL ELINE('You must select a printer.')
               GOTO 75
            END ELSE
               QI=MASK
            END
         CASE QI='X'
            GOTO 50
         CASE QI='EX'
            GOTO EXIT.PROGRAM
      END CASE
      IF QI='F' THEN
         IF BUILD.DF=0 THEN
            CALL ELINE('You are not set up in the Directory BILLDATA. Contact Programming!')
            GO 75
         END
         MASK=QI
         QUE='F'
         PRT.DESC="Spreadsheet File"
      END ELSE
         LOCATE QI IN DPRINTERS<1> SETTING POS ELSE
            CALL ELINE('Error. You must enter number a valid printer.')
            GOTO 75
         END
         IF DPRINTERS<5,POS>='N' THEN
            CALL ELINE('Error! The printer you selected cannot print this report. Choose Another!')
            GOTO 75
         END
         MASK=QI
         PRT.DESC=DPRINTERS<4,POS>
         QUE=DPRINTERS<2,POS>
      END
      CRT @(22,5):QI:' - ':PRT.DESC:@(-3):
*
* Get current period beginning and ending dates
*
100:  HELP='Enter the data processed beginning date.'
      CALL GEN.IN(0,7,'Data processed beginning date.  ':DATE()'D2/','DATE',BEG.DATE,0,8,'','',1,-8,7,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='X' THEN GOTO 75
      IF QI='EX' THEN GOTO EXIT.PROGRAM
      IF QI='' THEN BEG.DATE=DATE()
      CRT @(32,7):BEG.DATE'D2/'
*
* Get current period ending date
*
200:  HELP='Enter the data processed ending date.'
      CALL GEN.IN(0,9,'Data processed ending date.     ':DATE()'D2/','DATE',END.DATE,0,8,'','',1,-8,9,0,QI,HELP,0,23)
      IF QI='X' THEN GOTO 100
      IF QI='EX' THEN GOTO EXIT.PROGRAM
      IF QI='' THEN END.DATE=DATE()
      IF END.DATE LT BEG.DATE THEN
         CALL ELINE('Invalid ending date.')
         GOTO 200
      END
      CRT @(32,9):END.DATE'D2/'
*
300:  HELP='Show Overcharge & Logistics Revenue columns? [Y]es, [N]o, [X]-Back, [EX]it.'
      CALL GEN.IN(0,11,'Show last columns?  [Y]','',Q,0,2,'','',1,-2,11,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            GOTO 200
         CASE QI='EX'
            GOTO EXIT.PROGRAM
         CASE QI=''!QI='Y'!QI='YE'!QI='1'
            QI='YES'
         CASE QI='N'!QI='NO'!QI='0'!QI='-'
            QI='NO'
         CASE 1
            CALL ELINE('Invalid entry!')
            GOTO 300
      END CASE
      REV.COLS=QI='YES'
      CRT@(21,11):QI:']'
      IF ALL.ONE#'ALL' THEN
         LOG.ONLY=0
         GO 900
      END
*
400:  HELP='Only include bills from Logistics Clients? [Y]es, [N]o, [X]-Back, [EX]it.'
      CALL GEN.IN(0,13,'Logistics clients only?  [Y]','',Q,0,2,'','',1,-2,13,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            GOTO 300
         CASE QI='EX'
            GOTO EXIT.PROGRAM
         CASE QI=''!QI='Y'!QI='YE'!QI='1'
            QI='YES'
         CASE QI='N'!QI='NO'!QI='0'!QI='-'
            QI='NO'
         CASE 1
            CALL ELINE('Invalid entry!')
            GOTO 400
      END CASE
      LOG.ONLY=QI='YES'
      CRT@(26,13):QI:']'
*******************************************************************
ENTER.MODE:***
      HELP="Enter transportation mode. ENTER for all. L=List. X=Back. EX=Exit."
      IF MODE='' THEN
         MASK='###'
      END ELSE
         IF MODE='ALL' THEN
            MASK='ALL'
         END ELSE
            MASK=MODE'R#3'
         END
      END
      CALL GEN.IN(0,15,'Enter Transportation Mode: ':MASK,'',Q,0,3,'','',2,-3,15,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI=' ' THEN QI='' ; MODE=''
      IF QI='' THEN QI=MODE ; Q=MODE
      BEGIN CASE
         CASE QI='' OR QI='ALL'
            Q='ALL'
         CASE QI='X'
            CRT @(0,13):@(-3):
            GOTO 400
         CASE QI='EX'
            STOP
         CASE QI='L'
            EXECUTE 'SORT FB.TRANSPORT BY MODE MODE 1 (I'
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
*              IF CLIENT#'ALL' THEN
*                 CRT @(0,3):'Enter Client Number : ':CLIENT'R%5':
*                 CRT ' ':CLIENT.NAME:@(-4):
*              END ELSE
*                 CRT @(0,3):'Enter Client Number : ALL':@(-4):
*                 CRT @(0,13):'Logistics clients only    : '
*                 IF LOG.ONLY THEN
*                   CRT @(62,4):'YES':@(-4)
*                 END ELSE
*                   CRT @(62,4):'NO':@(-4)
*                 END
*              END
            CRT @(0,6):'Enter Carrier Number: ALL':@(-4):
            GOTO ENTER.MODE
      END CASE
*
      MODE=Q
      IF MODE#'ALL' THEN
         READ TRANS.REC FROM F.TRANSPORT,Q ELSE
            CALL ELINE('ERROR - Transportation Code ':MODE:' not on file.')
            GOTO ENTER.MODE
         END
         MODE.DESC = TRANS.REC<1>
         CRT @(27,15):MODE'R#3':' ':MODE.DESC'L#13'
      END ELSE
         CRT @(27,15):'ALL':@(-4):
      END
*
*  Verify date entry range
*
900:  HELP="X=Change. EX=Exit. RETURN=Continue."
      CALL GEN.IN(0,22,'Enter selection please. --','',Q,0,2,'','',0,-2,22,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            CRT @(0,22):@(-3):
            IF ALL.ONE#'ALL' THEN GO 300
            GO 400
         CASE QI='EX'
            GOTO EXIT.PROGRAM
         CASE QI=''
            NULL
         CASE 1
            CALL ELINE('Invalid entry. Must be X, EX, or RETURN.')
            GOTO 900
      END CASE
*
* Start processing
*
1000: TEXT="Processing Date Range - Please Wait ... May Take Several Hours."
      CALL CENTER(TEXT,80)
      CRT @(0,15):@(-3):TEXT
*
* Clear work file
*
*     GOTO OWEN

      CLEARFILE F.WORK
*
* Select data for current client
*

***************************************************************
*
* SELECT CLIENT FILE
*
      TEXT='Selecting Clients.'
      CALL CENTER(TEXT,80)
      CRT @(0,13):TEXT
*
      EXECUTE "SELECT VOC 'FB.BILLS.HIST' *A7" RTNLIST CLIENT.LIST CAPTURING OUTPUT
      ITEMS = @SELECTED
      IF @SELECTED < 1 THEN ; * JCW01
         CALL ELINE('ERROR - No clients on file.')
         GOTO EXIT.PROGRAM
      END
      COUNTER.1=0
      PER=0
      LOOP
         READNEXT CLIENT.ID FROM CLIENT.LIST ELSE CLIENT.ID='DONE'
         IF CLIENT.ID='DONE' ELSE
            IF ORIG.CLIENT.ID='00ALL' ELSE
               IF CLIENT.ID#ORIG.CLIENT.ID THEN GOTO SKIP.CLIENT
            END
         END
      UNTIL CLIENT.ID='DONE' DO
         COUNTER.1=COUNTER.1+1
         CALL PROG.BAR(20,COUNTER.1,ITEMS,PER.1)
         IF CLIENT.ID='FB.BILLS.HIST' OR CLIENT.ID[1,2]='99' THEN GO SKIP.CLIENT
         IF CLIENT.ID='10356.OLD' THEN GO SKIP.CLIENT        ; * JMK01
         READ CLIENT.REC FROM F.CLIENTS,CLIENT.ID ELSE
            CLIENT.REC=''
            CLIENT.REC<2>=CLIENT.ID:'-Not On File'
         END
         CLIENT.NAME=CLIENT.REC<2>
         IF LOG.ONLY AND CLIENT.REC<93> # "Y" THEN GO SKIP.CLIENT
         CRT @(0,17):CLIENT.ID:" ":CLIENT.NAME:" - Now selecting freight bills":@(-4):
         STMT='SELECT FB.PROC.DATE.XREF,':CLIENT.ID:' WITH DATE >= "':OCONV(BEG.DATE,'D2/'):'" AND <= "':OCONV(END.DATE,'D2/'):'"'           ; * JMK01
         EXECUTE STMT RTNLIST PRE.LIST CAPTURING RESULTS     ; * JMK01
         IF @SELECTED>0 THEN             ; * JMK01
            STMT='QSELECT FB.PROC.DATE.XREF,':CLIENT.ID      ; * JMK01
            EXECUTE STMT PASSLIST PRE.LIST RTNLIST PRE.LIST CAPTURING RESULTS    ; * JMK01
         END                             ; * JMK01
         OPEN '','FB.BILLS.HIST,':CLIENT.ID TO F.BILLS THEN
            STMT='SELECT FB.BILLS.HIST,':CLIENT.ID
            STMT:=' WITH VERSION = "0"'
            STMT:=' AND WITH 37 GE "':OCONV(BEG.DATE,'D2/'):'"'
            STMT:=' AND WITH 37 LE "':OCONV(END.DATE,'D2/'):'"'
            IF MODE #'' AND MODE #'ALL' THEN STMT:=' AND WITH CAR.MODE = "':MODE:'"'
            STMT:=' SAVIN GUNIQUE @ID'   ; * JMK02
*CRT @(0,23):STMT
*INPUT NUL
*         EXECUTE STMT RTNLIST BILLS.LIST CAPTURING OUTPUT ; * JMK01
            EXECUTE STMT PASSLIST PRE.LIST RTNLIST BILLS.LIST CAPTURING OUTPUT   ; * JMK01
            NUM.BILLS = @SELECTED
            CRT @(0,17):CLIENT.ID:" ":CLIENT.NAME:" - Now processing ":NUM.BILLS:" Freight Bills":@(-4):
            COUNTER.2=0
            LOOP
               DONE=0
               READNEXT PRO.ID FROM BILLS.LIST ELSE DONE=1
            UNTIL DONE=1 DO
               COUNTER.2=COUNTER.2+1
*           CRT @(0,17):CLIENT.ID:' ':PRO.ID:@(-4):
               IF NUM.BILLS>0 THEN CALL PROG.BAR(22,COUNTER.2,NUM.BILLS,PER.2)
               READ DBILL FROM F.BILLS,PRO.ID THEN
*
                  WORK.ID=FIELD(PRO.ID,'*',1)      ; * Carrier #
                  READ WORK.REC FROM F.WORK,WORK.ID ELSE WORK.REC=''
*
                  TOT.WORK.ID='TOTAL'
                  READ TOT.WORK.REC FROM F.WORK,TOT.WORK.ID ELSE
                     TOT.WORK.REC=''
                  END
*
* Update carrier total record in work file
*
                  PRO=FIELD(PRO.ID,'*',2)
                  START=LEN(PRO)-1
                  BEGIN CASE
                        *
                        * Balance Due
                        *
                     CASE PRO[START,2]='BD'
                        ATT=5 ; VALUE=DBILL<8> ; GOSUB 8000  ; * Amount pd/due
                        ATT=6 ; VALUE=1 ; GOSUB 8000         ; * Inc bill count
                        *
                        * Amount Due (paid)
                        *
                     CASE PRO[START,2]='AD'
                        ATT=7 ; VALUE=DBILL<8> ; GOSUB 8000  ; * Amount pd/due
                        ATT=8 ; VALUE=1 ; GOSUB 8000         ; * Inc bill count
                        *
                        * Amount Billed & Paid
                        *
                     CASE 1
                        ATT=1 ; VALUE=DBILL<10>+DBILL<11> ; GOSUB 8000           ; * Discount+Overcharge
                        ATT=2 ; VALUE=DBILL<12> ; GOSUB 8000           ; * Logistics
                        ATT=3 ; VALUE=DBILL<8> ; GOSUB 8000  ; * Amount paid
                        ATT=4 ; VALUE=1 ; GOSUB 8000         ; * Inc Bill Count
                  END CASE

*
* Update totals
*
                  IF DBILL<37>#'' THEN BILL.DATE=DBILL<37> ELSE BILL.DATE=DBILL<1>
                  IF WORK.REC<9> < BILL.DATE THEN WORK.REC<9>=BILL.DATE
                  WRITE WORK.REC ON F.WORK,WORK.ID
                  WRITE TOT.WORK.REC ON F.WORK,TOT.WORK.ID
               END
SKIP.BILL:***
            REPEAT
         END
SKIP.CLIENT:***
      REPEAT


OWEN:
      IF QUE='F' THEN GO BEGIN.BUILD

*
* Print report
*
* Set-up printer
*
      IF USER.NAME='OWEN' THEN CALL ELINE("NOW PRINTING REPORT")
      WIDTH=150
      CTR=INT(WIDTH/2)

      ESC=CHAR(27)
      LASER.STR=''
      LASER.STR:= ESC:'E'
      LASER.STR:= ESC:'&l0O'             ; * Portrait
      LASER.STR:= ESC:'&l8D'
      LASER.STR:= ESC:'&l88F'            ; ** 88 Lines on a Page
      LASER.STR:= ESC:'(8U'
      LASER.STR:= ESC:'(s0p'
      LASER.STR:= '19h'
      LASER.STR:= '0s'
      LASER.STR:= '0b'
      LASER.STR:= '4102T'

*     EXECUTE 'SP-ASSIGN ':QUE:',':COPIES
      EXECUTE 'SP-ASSIGN F':QUE
      EXECUTE "TERM ,,,,,,150,80"
      PRINTER ON
*OH       LASER = ''
*OH       LASER<1 >= 0                           ;* Portrait
*OH       LASER<2 >= 6                           ;* Lines per inch
*OH       LASER<3 >= 61                          ;* Page length
*OH       LASER<4 >= 16.7                        ;* Characters per inch
*OH       LASER<5 >= 0
*OH       LASER<6 >= 0
*OH       LASER<7 >= 1
*OH       LASER<8 >= 0
*OH       MARGIN = 0
*OH       PRINT ESC:"E"
*OH       PRINT ESC:"&l":LASER<1>:"O":           ;* Set portrait
*OH       PRINT ESC:"&l":LASER<2>:"D":           ;* Lines per inch
*OH       PRINT ESC:"&l":LASER<3>:"F":           ;* Page length
*OH       PRINT ESC:"(s":LASER<4>:"h":           ;* Set pitch
*OH       PRINT LASER<5>:"p":                    ;* Proportional printing
*OH       PRINT LASER<6>:"s":                    ;* Italics off
*OH       PRINT "0T":                            ;* Line Printer Font
*OH       PRINT ESC:"&l":LASER<7>:"H"            ;* Bin selection
*OH       PRINT ESC:"&a":MARGIN:"L"
*OH       PRINT ESC:'"g':LASER<8>:'F'                      ;* Paper output
      PRINT LASER.STR                    ; * Configure Laser Printer
*
** Get next division code
*
*
*
      L.TAB=CTR-(LEN(PROG.DESC)/2)
      L.TAB=L.TAB-LEN(PROG.NAME)
      TEMP=PROG.NAME:SPACE(L.TAB):PROG.DESC
      R.TAB=WIDTH-LEN(TEMP)
      R.TAB=R.TAB-LEN(TIMEDATE())
      HEAD1=PROG.NAME:SPACE(L.TAB):PROG.DESC:SPACE(R.TAB):TIMEDATE():"'L'"
*
      TITLE='Bills processed from ':BEG.DATE'D2/':' to ':END.DATE'D2/'
      L.TAB=CTR-(LEN(TITLE)/2)
      L.TAB=L.TAB-LEN(CO.NAME)
      TEMP=CO.NAME:SPACE(L.TAB):TITLE
*     R.TAB=(WIDTH-LEN(TEMP))-9
*     HEAD2=TEMP:SPACE(R.TAB):"PAGE 'PL'"
      R.TAB=(WIDTH-LEN(TEMP))-20
      HEAD2=TEMP:SPACE(R.TAB):USER.NAME'L(#10 )':"PAGE 'PL'"
*
      IF ALL.ONE#'ALL' THEN
         CLIENT.TEMP="For client ":ORIG.CLIENT.ID:"-":TEMP.NAME
         HOLD=LEN(CLIENT.TEMP)
         TAB.OVER=CTR-(HOLD/2)
         HEAD3=SPACE(TAB.OVER):CLIENT.TEMP:"'L'"
      END ELSE
         IF LOG.ONLY THEN
            CLIENT.TEMP="For All Logistics Clients"
         END ELSE
            CLIENT.TEMP="For All Clients"
         END
         IF MODE#'' AND MODE#'ALL' THEN
            CLIENT.TEMP:=" For ":MODE.DESC:" Carriers"
         END
         HOLD=LEN(CLIENT.TEMP)
         TAB.OVER=CTR-(HOLD/2)
         HEAD3=SPACE(TAB.OVER):CLIENT.TEMP:"'L'"
      END
*
      HEAD4=""
      HEAD5=STR('-',WIDTH):"'L'"
*
      HEAD6='Line''L#4'
      HEAD7=' ''L#4'
*
      HEAD6:=SPACE(1):'  % of''L#8'
      HEAD7:=SPACE(1):' Revenue''L#8'
*
      HEAD6:=SPACE(1):'Carrier Name''L#30'
      HEAD7:=SPACE(1):' ''L#30'
*
      HEAD6:=SPACE(1):'  Num ''L#9'
      HEAD7:=SPACE(1):' Bills ''L#9'
*
      HEAD6:=SPACE(1):' % Of''L#6'
      HEAD7:=SPACE(1):' Bills''L#6'
*
      HEAD6:=SPACE(1):'Cumml''L#6'
      HEAD7:=SPACE(1):'  %''L#6'
*
      HEAD6:=SPACE(2):'  Amount''R#10'
      HEAD7:=SPACE(2):'   Paid ''R#10'
*
      IF NOT(REV.COLS) THEN
         GOTO FINISH.HEADING
      END
      HEAD6:=SPACE(2):'  OvrChg''R#9'
      HEAD7:=SPACE(2):'  Amount''R#9'
*
      HEAD6:=SPACE(2):'  %''L#6'
      HEAD7:=SPACE(2):'OvrChg''L#6'
*
      HEAD6:=SPACE(2):'  Logist''R#9'
      HEAD7:=SPACE(2):'  Amount''R#9'
*
      HEAD6:=SPACE(2):'  %''L#6'
      HEAD7:=SPACE(2):'Logist''L#6'
*
      HEAD6:=SPACE(2):'  BD  ''R#7'
      HEAD7:=SPACE(2):'Amount''R#7'
*
      HEAD6:=SPACE(2):' BD''L#5'
      HEAD7:=SPACE(2):'Bills''L#5'
*
      HEAD6:=SPACE(2):'  AD  ''R#7'
      HEAD7:=SPACE(2):'Amount''R#7'
*
      HEAD6:=SPACE(2):' AD  ''L#5'
      HEAD7:=SPACE(2):'Bills''L#5'
*
FINISH.HEADING:*
*
      HEAD6:="'L'"
      HEAD7:="'L'"
*
      HEAD8=STR('-',WIDTH):"'L'"
*
      HED=HEAD1:HEAD2:HEAD3:HEAD4:HEAD5:HEAD6:HEAD7:HEAD8
      HEADING HED
*     PAGE 0
*
** Select data
*
BEGIN.BUILD:***
*CRT @(0,23):"OWEN PRESS BREAK": ; INPUT NUL
      IF MODE='' OR MODE='ALL' THEN PREFIX='All' ELSE PREFIX=MODE.DESC
      IF LOG.ONLY THEN
         DA.TITLE=PREFIX:' Logistics Freight Bills for '
      END ELSE
         DA.TITLE=PREFIX:' Freight Bills for '
      END
      DA.TITLE:=DA.NAME
      DA.TITLE:=' processed from ':BEG.DATE'D2/':' to ':END.DATE'D2/'
      DARRAY=DA.TITLE:@AM:@AM:DARRAY
      COUNTER=0
      SUB4=0
      PREC='SSELECT FBWORK':CH.NUM
      PREC:=' BY-DSND CAR.DOL'
      PREC:=' BY-DSND BILLS'
*     PREC:=' BY-DSND CAR.DOL'
      PREC:=' BY-DSND 1'
      PREC:=' BY-DSND 2'
      PREC:=' BY-DSND 5'
      PREC:=' BY-DSND 7'
      EXECUTE PREC PASSLIST CAPTURING OUTPUT
      READ TOTAL.REC FROM F.WORK,'TOTAL' ELSE
         TOTAL.REC=''
      END
*
      DONE = 0
      LOOP
         READNEXT ID ELSE DONE = 1
      UNTIL DONE = 1 DO
         CARRIER.ID=FIELD(ID,'*',1)
         IF CARRIER.ID='TOTAL' ELSE
            READ CARRIER.REC FROM F.CARRIERS, CARRIER.ID ELSE
               CARRIER.REC='** Not on file **'
            END
            CARRIER.NAME=CARRIER.REC<1>
            CARRIER.MODE=CARRIER.REC<44>
            READV MODE.DESC FROM F.TRANSPORT,CARRIER.MODE,1 ELSE
               MODE.DESC=CARRIER.MODE:' is not on file!'
            END
            READ REC FROM F.WORK,ID THEN
               COUNTER=COUNTER+1
* IF COUNTER > 143 THEN DONE=1 ; * JR - APROX 3 PAGES...
               GOSUB BUILD.DET.LINE
               IF QUE='F' ELSE PRINT LINE
            END
         END
      REPEAT
      IF QUE='F' THEN
         WRITE DARRAY ON BILLDATA,'FB-6-5.XLT' ELSE
            CALL ELINE('Close your FB-6-5.XLT Spreadsheet and press enter')
            WRITE DARRAY ON BILLDATA,'FB-6-5.XLT' ELSE
               CALL ELINE('Unable to Write Spreadsheet Data to file!')
            END
         END
         CRT @(0,13):@(-3):
         CRT @(0,17):@(-3):"The file \\Afs\billdata\":SMALL.USER:"\Fb-6-5.xlt was written."
         CRT @(0,18):'1) Double click the "My Computer" Icon on your desktop'
         CRT @(0,19):\2) Double Click the "Billdata on 'Afs' (U:)" Drive Icon\
         CRT @(0,20):\3) Double Click the \:USER.NAME:' Folder'
         CRT @(0,21):\4) Double Click the Fb-6-5.xlt Excel Sheet\
         CRT @(0,23):"Press [Enter] to continue ......":
         INPUT NUL
         GOTO EXIT.PROGRAM
      END
*
** Print total line
*
      IF SYSTEM(4) < 4 THEN PAGE
      PRINT STR('=',WIDTH)
      REC=TOTAL.REC
      CARRIER.NAME='TOTAL'
      COUNTER=''
      SUB4=0
      GOSUB BUILD.DET.LINE
      PRINT LINE

*
** END OF APPLICATION'
*
      EXECUTE "TERM ,,,,,,,60"
      GOTO EXIT.PROGRAM


8000:* Update Arrays
      WORK.REC<ATT> +=VALUE
      TOT.WORK.REC<ATT> +=VALUE
      RETURN

BUILD.DET.LINE:***
      LINE=''
      DA.LINE=''
      *
      * LINE COUNTER
      *
      LINE:=COUNTER'R#4':' '
      *
      * PRECENTAGE OF REVENUE
      *
      IF REC<3>+0=0 THEN VAR=0 ELSE
         VAR=(REC<3>*100/TOTAL.REC<3>)
      END
      LINE:=VAR'R44,#8':' '
      DA.LINE<1,1>=OCONV(VAR,'MR40')
      *
      * CARRIER NAME
      *
      DA.LINE<1,2>=CARRIER.ID
      LINE:=CARRIER.NAME'L#30':' '
      DA.LINE<1,3>=CARRIER.NAME
      DA.LINE<1,4>=CARRIER.MODE
      DA.LINE<1,5>=MODE.DESC
      *
      * BILL COUNT
      *
      LINE:=REC<4>'R04,#9':' '
      DA.LINE<1,6>=OCONV(REC<4>,'MR00,')
      *
      * PRECENTAGE OF GROSS BILLS
      *
      IF TOTAL.REC<4>+0=0 THEN VAR=0 ELSE
         VAR=(REC<4>*100/TOTAL.REC<4>)
      END
      LINE:=VAR'R24,#6':' '
      DA.LINE<1,7>=OCONV(VAR,'MR20')
      *
      * Accuml %
      *
      SUB4+=REC<4>
      IF TOTAL.REC<4>+0=0 THEN VAR=0 ELSE
         VAR=SUB4*100/TOTAL.REC<4>
      END
      LINE:=VAR'R24,#6':'  '
      DA.LINE<1,8>=OCONV(VAR,'MR20')
      *
      * AMOUNT PAID
      *
      LINE:=REC<3>'R06,#10':'  '
      DA.LINE<1,9>=OCONV(REC<3>,'MR2,')
      *
      IF NOT(REV.COLS) THEN
         DARRAY<-1>=CHANGE(DA.LINE,@VM,CHAR(9))
         RETURN
      END
      *
      *
      * AMOUNT OVER CHARGED
      *
      LINE:=-REC<1>'R06,#9':'  '
      DA.LINE<1,10>=OCONV(-REC<1>,'MR2,')
      *
      * PERCENTAGE OF OVERCHARGE
      *
      IF REC<3>+0=0 THEN VAR=0 ELSE
         VAR=(-REC<1>)*100/REC<3>
      END
      LINE:=VAR'R24,#6':'  '
      DA.LINE<1,11>=OCONV(VAR,'MR20')
      *
      * LOGISTICS AMOUNT
      *
      LINE:=-REC<2>'R06,#9':'  '
      DA.LINE<1,12>=OCONV(-REC<2>,'MR2,')
      *
      * PERCENTAGE OF LOGISTICS
      *
      IF REC<3>+0=0 THEN VAR=0 ELSE
         VAR=(-REC<2>)*100/REC<3>
      END
      LINE:=VAR'R24,#6':'  '
      DA.LINE<1,13>=OCONV(VAR,'MR20')
      *
      * BALANCE DUE AMOUNT
      *
      LINE:=REC<5>'R06,#7':'  '
      DA.LINE<1,14>=OCONV(REC<5>,'MR2,')
      *
      * BALANCE DUE COUNT
      *
      LINE:=REC<6>'R04,#5':'  '
      DA.LINE<1,15>=OCONV(REC<6>,'MR00,')
      *
      * ADDITIONAL DUE
      *
      LINE:=REC<7>'R06,#7':'  '
      DA.LINE<1,16>=OCONV(REC<7>,'MR2,')
      *
      * ADDITIONAL DUE COUNT
      *
      LINE:=REC<8>'R04,#5':'  '
      DA.LINE<1,17>=OCONV(REC<8>,'MR00,')
      DARRAY<-1>=CHANGE(DA.LINE,@VM,CHAR(9))
      RETURN
*
EXIT.PROGRAM:*
*
      STOP
