$OPTIONS HEADER.EJECT
$OPTIONS EXEC.EQ.PERF
$OPTIONS INFO.ABORT
ERRMSG=''
* Program to enter FSC codes and amounts by date for Carrier (Read FedEx) rater
*
* FB
*
* AUTHOR: David R. Friend   Copied from FB.FSC.3 and modified by N.C.G Pratt 08/27/2009.
* DATE: 10/02/00
*
* 012215 - DRF01 - SysAid 14856 Gave Ken access similar to Cynthia
* 022615 - DRF02 - SysAid 15591 - Gave Laura Metz access similar to Elisa
* 031615 - DRF03 - SysAid 15959 - Gave April the same access as Cynthia
* 120815 - DRF04 - SysAid 21483 - Gave Stephen access to this program
* Initialize variables.
*
20    PROG.NAME='FB.FSC.4'
      PROG.DESC='Carrier Fuel Surcharge Maint.'
      PACK.NAME='FREIGHT BILLING'
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
       UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.FSC.4' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
       CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
      PROMPT''
      PAGE.LEN=18
      MODE=''
      FIND.LOCKED.NAME=''
*
* Open files.
*
      OPEN '','FB.TABLES' TO F.FB.TABLES ELSE CALL OPEN.ABORT("FB.TABLES",PROG.NAME)

      OPEN '','CARRIERS' TO F.CARRIERS ELSE CALL OPEN.ABORT("CARRIERS",PROG.NAME)

      READ FSC.HEAD FROM F.FB.TABLES,'FSC*CARRIERS' ELSE FSC.HEAD=''

      N.CARRIERS = DCOUNT(FSC.HEAD<1>,@VM)

      CRT @(0 ,3) : "Carrier" "L#10"
      CRT @(10,3) : "Name " "L#35"
      CRT @(48,3) : "Effective"
      CRT @(59,3) : "Updated On"
      CRT @(70,3) : "By"

      FOR CR = 1 TO N.CARRIERS
         CARRIER.ID = FSC.HEAD<1,CR>
         READV CARRIER.NAME FROM F.CARRIERS, CARRIER.ID,1 ELSE CARRIER.NAME = "Not Found ??"
         LAST.EFF.DATE   = FSC.HEAD<2,CR>
         LAST.UPDATED.ON = FSC.HEAD<3,CR>
         LAST.UPDATED.BY = FSC.HEAD<4,CR>

         CRT @( 2,CR+3) : CARRIER.ID
         CRT @(10,CR+3) : CARRIER.NAME[1,35] "L#35"
         CRT @(48,CR+3) : OCONV(LAST.EFF.DATE,"D2/")
         CRT @(59,CR+3) : OCONV(LAST.UPDATED.ON,"D2/")
         CRT @(70,CR+3) : LAST.UPDATED.BY[1,9]
      NEXT CR

50    HELP = "Enter The Carrier To Update  'EX'=Exit."
      CALL GEN.IN(0,22,'Enter Carrier # -----','',Q,0,5,'','',0,-5,22,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF NUM(QI) THEN QI = QI "R%5"
      BEGIN CASE
        CASE QI='X' OR QI='EX' OR QI=''
          STOP
        CASE 1
          LOCATE QI IN FSC.HEAD<1> SETTING POS ELSE
            CALL ELINE('INVALID SELECTION')
            GOTO 50
          END
      END CASE
      CARRIER.NUM=QI
      PROG.DESC=PROG.DESC:' - ':CARRIER.NUM

      READV CARRIER.NAME FROM F.CARRIERS, CARRIER.NUM,1 ELSE CARRIER.NAME = "Not Found ??"

      PROG.DESC=PROG.DESC:' - ':CARRIER.NAME

      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)

*
* GET FSC RECORD
*
      READU FSC.REC FROM F.FB.TABLES,'FSC_CARRIER*':CARRIER.NUM LOCKED
        FIND.LOCKED.NAME = 'FB.TABLES,FSC_CARRIER*':CARRIER.NUM
        GOSUB FIND.LOCKED
        CALL ELINE(FL.USER:' has ':FIND.LOCKED.NAME:' locked. Press enter to exit program.')
        GOTO 9999
      END ELSE
        FSC.REC=''
      END
      OLD.FSC.REC=FSC.REC
*
* First page of codes.
*
      PAGE=1
      GOSUB 9000
*
* CHECK FOR PROPER USER
*
      OK=0
*      USER=OCONV(SYSTEM(19),'MCU')
      CALL GET.USER(USER)
      IF USER='DEBBIE' THEN OK=1
      IF USER='AMY' THEN OK=1
      IF USER='OWEN' THEN OK=1
      IF USER='DAVID' THEN OK=1
      IF USER='TAMI' THEN OK=1
      IF USER='WPARDUE' THEN OK=1
      IF USER='MYRA' THEN OK=1
      IF USER='NPRATT' THEN OK=1
      IF USER='LCORKERN' THEN OK=1
      IF USER='NRATH' THEN OK=1
      IF USER='AHERBEL' THEN OK=1
      IF USER='JMHILL'  THEN OK=1
      IF USER='CYNTHIA'  THEN OK=1 ; * Ticket 3448 - DRF 08/02/012
      IF USER='PBASS'  THEN OK=1
      IF USER='EMERTIN'  THEN OK=1 ; * Ticket 6354 DRF 06/26/13
      IF USER='KHOSKINS'  THEN OK=1 ; * DRF01
      IF USER='LMETZ'  THEN OK=1 ; * DRF02
      IF USER='ARSEXTONAUDIT'  THEN OK=1 ; * DRF03
      IF USER='SRICHARDSON'  THEN OK=1 ; * DRF04
*
      IF OK=1 ELSE
        CALL ELINE('Unauthorized user. ACCESS DENIED. Call IT for help.')
        GOTO 9999
      END
*
* Enter selection code.
*
100   HELP="Enter line number 'A'=Add 'B'=Back 'T'=Top ''=Next page 'E'=End 'EX'=Exit."
      CALL GEN.IN(0,22,"Enter line number please. ###",'',Q,0,3,'','',1,-3,22,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU') 
      BEGIN CASE
        CASE QI=''
          IF FSC.REC<1,PAGE*PAGE.LEN>='' THEN
            CALL ELINE('Error! You are on the last page!')
            GO 100
          END
          PAGE=PAGE+1
          GOSUB 9000
        CASE QI='A'
          MODE='ADD'
          ADDING=1
          OLD.PAGE=0
          LOOP
          WHILE ADDING
            NUM.ITEM=DCOUNT(FSC.REC<2>,@VM)
            SEL=NUM.ITEM+1
            IF MOD(SEL,PAGE.LEN) > 0 AND MOD(SEL,PAGE.LEN) < PAGE.LEN/2 THEN
              PAGE=OCONV(SEL/PAGE.LEN,'MR0')+1
            END ELSE
              PAGE=OCONV(SEL/PAGE.LEN,'MR0')
            END
            IF OLD.PAGE#PAGE THEN
              GOSUB 9000
              OLD.PAGE=PAGE
            END
            GOSUB 8000
          REPEAT
          MODE=''
        CASE QI='B'
          PAGE=PAGE-1
          IF PAGE=0 THEN PAGE=1
          GOSUB 9000
        CASE QI='T'
          PAGE=1
          GOSUB 9000
        CASE QI='EX'
          IF OLD.FSC.REC#FSC.REC THEN
            GOSUB ASK.FOR.CONFIRMATION
            IF NOT(CONFIRMATION) THEN GOTO 100
          END
          GOTO 9999
        CASE NUM(QI)
          SEL=QI
          IF SEL LT START ! SEL GT STOP THEN
            CALL ELINE('Invalid selection.')
            GOTO 100
          END
          IF SEL = 1 ELSE
            IF FSC.REC<1,SEL-1> = '' THEN
              CALL ELINE('Invalid entry. Use next available line.')
              GOTO 100
            END
          END
          GOSUB 8000
        CASE QI='E'

** DEBUG
          X=DCOUNT(FSC.REC<1>,CHAR(253))
          FOR I=X TO 1 STEP -1
            IF FSC.REC<1,I> = '' OR FSC.REC<3,I> = '' THEN
              FSC.REC=DELETE(FSC.REC,1,I)
              FSC.REC=DELETE(FSC.REC,2,I)
              FSC.REC=DELETE(FSC.REC,3,I)
            END
          NEXT I

*ZZZ          VIN=''
*ZZZ          VIN<1>=1
*ZZZ          VIN<2>='R'
*ZZZ          VIN<3>='D'
*ZZZ          AIN=FSC.REC
*ZZZ          CALL SORT.ARRAY(VIN,VOUT,AIN,AOUT)
*ZZZ          FSC.REC=AOUT


          IF OLD.FSC.REC#FSC.REC THEN
             WRITE FSC.REC ON F.FB.TABLES,'FSC_CARRIER*':CARRIER.NUM

             LOCATE CARRIER.NUM IN FSC.HEAD<1> SETTING POS THEN
                N.DTS = DCOUNT(FSC.REC<1>,CHAR(253))
                LAST.EFF.DATE   = FSC.REC<1,N.DTS>
                FSC.HEAD<2,POS> = LAST.EFF.DATE
                FSC.HEAD<3,POS> = DATE()
                FSC.HEAD<4,POS> = USER
                WRITE FSC.HEAD ON F.FB.TABLES, "FSC*CARRIERS"
             END
          END

          GOTO 20
      END CASE
      GOTO 100
*
*-----------------------------------------------------------------------
* INTERNAL SUBROUTINES
*-----------------------------------------------------------------------
*
* EDIT REC
*
8000  ROW=3+REM(SEL,PAGE.LEN)
      IF ROW=3 THEN ROW=21
      FSC.FROM.DATE=FSC.REC<1,SEL>
      FSC.TO.DATE=FSC.REC<2,SEL>
      FSC.PERCENT=FSC.REC<3,SEL>
*
8100    HELP="Enter the Monday Date. ''=Accept. 'D'=Delete. 'EX'=Exit."
        IF FSC.FROM.DATE='' THEN MASK='##/##/##' ELSE MASK=OCONV(FSC.FROM.DATE,'D2/')'L#8'
        CALL GEN.IN(5,ROW,MASK,'DATE',Q,0,8,'','',2,5,ROW,0,QI,HELP,0,23)
        IF QI='' THEN QI=FSC.FROM.DATE
        QI=OCONV(QI,'MCU')
        IF MODE='ADD' THEN
           IF QI='' AND SEL#1 THEN 
              ADDING=0 ; * Finished adding
              RETURN
           END
        END
        BEGIN CASE
           CASE QI='D'
              FSC.REC=DELETE(FSC.REC,1,SEL)
              FSC.REC=DELETE(FSC.REC,2,SEL)
              FSC.REC=DELETE(FSC.REC,3,SEL)
              GOSUB 9000
              GOTO 100
           CASE QI='EX'
              GOTO 9999
           CASE QI='' 
              IF SEL#1 THEN
                 CALL ELINE('Invalid entry. Data required in this field.')
                 GOTO 8100
              END
           CASE INDEX(QI,' ',1) 
              CALL ELINE('Invalid entry. No spaces allowed.')
              GOTO 8100
              RETURN
           CASE NOT(NUM(Q))
              CALL ELINE('Date must be numeric')
              GO 8100
        END CASE
        IF MOD(Q,7)#1 THEN
          BEGIN CASE
            CASE MOD(Q,7)=2
               CALL ELINE('Warning Date is not a Monday')
            CASE 1
              CALL ELINE('Date must be a Monday')
              GO 8100
          END CASE
        END
        LOCATE Q IN FSC.REC<1> SETTING TEST.POS THEN
          IF TEST.POS # SEL THEN
            CALL ELINE('Date ':OCONV(Q,'D2/'):' is already on file on line number ':TEST.POS)
            GO 8100
          END
        END
        FSC.FROM.DATE=Q
        CRT @(5,ROW):OCONV(FSC.FROM.DATE,'D2/')'L#8'

8200 
        HELP="Enter the To Date. ''=Accept. 'EX'=Exit."
        IF FSC.TO.DATE='' THEN MASK='##/##/##' ELSE MASK=OCONV(FSC.TO.DATE,'D2/')'L#8'
        CALL GEN.IN(15,ROW,MASK,'DATE',Q,0,8,'','',2,15,ROW,0,QI,HELP,0,23)
        IF QI='' THEN QI=FSC.TO.DATE
        QI=OCONV(QI,'MCU')

        BEGIN CASE
           CASE QI='EX'
              GOTO 9999
           CASE QI='X'
              CRT @(15,ROW):OCONV(FSC.TO.DATE,'D2/')'L#8'
              GOTO 8200
           CASE QI='' 
              NULL
           CASE INDEX(QI,' ',1) 
              CALL ELINE('Invalid entry. No spaces allowed.')
              GOTO 8200
              RETURN
           CASE NOT(NUM(Q))
              CALL ELINE('Date must be numeric')
              GO 8200
        END CASE

*        IF MOD(Q,7)#1 THEN
*          BEGIN CASE
*            CASE MOD(Q,7)=2
*               CALL ELINE('Warning Date is not a Monday')
*            CASE 1
*              CALL ELINE('Date must be a Monday')
*              GO 8100
*          END CASE
*        END

        LOCATE Q IN FSC.REC<2> SETTING TEST.POS THEN
          IF TEST.POS # SEL THEN
            CALL ELINE('Date ':OCONV(Q,'D2/'):' is already on file on line number ':TEST.POS)
            GO 8200
          END
        END
        
        IF NUM(Q) AND Q NE '' THEN
           IF Q LT FSC.FROM.DATE THEN
              CALL ELINE('To date may not be before From date')
              GO 8200              
           END
        END

        FSC.TO.DATE=Q

        CRT @(15,ROW):OCONV(FSC.TO.DATE,'D2/')'L#8'
*
*
8300    HELP="Enter the Fuel Index Percent. ''=Accept. [EX]-Exit."

        FSC.PERCENT=FSC.REC<3,SEL>

        IF FSC.PERCENT='' THEN MASK='###.##' ELSE MASK=FSC.PERCENT

        CALL GEN.IN(30,ROW,MASK 'R26#7','AMT2',Q,0,5,'','',2,30,ROW,0,QI,HELP,0,23)

        IF Q = '' AND FSC.PERCENT NE '' THEN
           QI = FSC.PERCENT
           Q  = FSC.PERCENT
        END

        QI = OCONV(QI,'MCU')

        BEGIN CASE
           CASE QI='X'
              CRT @(30,ROW) :FSC.PERCENT 'R26#7'
              GOTO 8200
           CASE QI='EX'
              GOTO 9999
           CASE NUM(QI) AND QI GT "0"
              FSC.PERCENT = Q 'R0'
           CASE QI='' 
              IF SEL#1 THEN
                 CALL ELINE('Invalid entry. Data required in this field.')
                 GOTO 8300
              END
           CASE INDEX(QI,' ',1) 
              CALL ELINE('Invalid entry. No spaces allowed.')
              GOTO 8300
           CASE NOT(NUM(Q))
              CALL ELINE('Percentage must be numeric')
              GO 8300
        END CASE

        CRT @(30,ROW) :FSC.PERCENT 'R26#7'

        FSC.REC<1,SEL>=FSC.FROM.DATE
        FSC.REC<2,SEL>=FSC.TO.DATE
        FSC.REC<3,SEL>=FSC.PERCENT

        RETURN
*
* DISPLAY EXPENSE ARRAY
*
9000  CRT @(00,3):@(-3):"Line":

      CRT @(05,3):" From Dt."
      CRT @(15,3):" To Dt."
      CRT @(30,3):"Percent"

      START=(PAGE*PAGE.LEN)-17
      STOP=START+17
      FOR I=START TO STOP STEP 1
        ROW=3+REM(I,PAGE.LEN)
        IF ROW=3 THEN ROW=21
        PRINT @(00,ROW):I"R#3":
        FSC.FROM.DATE=FSC.REC<1,I>
        FSC.TO.DATE=FSC.REC<2,I>
        FSC.PERCENT=FSC.REC<3,I>
        PRINT @(05,ROW):OCONV(FSC.FROM.DATE,'D2/')'L#8'
        PRINT @(15,ROW):OCONV(FSC.TO.DATE,'D2/')'L#8'
        IF FSC.PERCENT='' THEN
           PRINT @(30,ROW):SPACE(5)
        END ELSE
           PRINT @(30,ROW):OCONV(FSC.PERCENT,'MR2')'R#7'
        END

      NEXT I
      RETURN
*
* FIND LOCKED SUBROUTINE
*
FIND.LOCKED:

   STMT = 'LIST.READU EVERY'
   EXECUTE STMT CAPTURING OUTPUT
   FL.LEN = DCOUNT(OUTPUT,@AM)
   FL.USER = 'Someone'
   FOUND = 0

   FOR X = 1 TO FL.LEN UNTIL FOUND
      T.USER = OCONV(TRIM(OUTPUT<X>[44,9]),'MCU')
      T.FILE = TRIM(OUTPUT<X>[53,17])
      IF T.FILE = FIND.LOCKED.NAME THEN
         FL.USER = T.USER
         FOUND = 1
      END
   NEXT

RETURN
*
ASK.FOR.CONFIRMATION:***
      HELP='Enter <Y>es to exit without saving or <N>o to return to program'
      CALL GEN.IN(0,22,'Are You Sure You Want To Exit: N','',Q,0,1,'','',2,-1,22,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
        CASE QI='N' OR QI=''
          CONFIRMATION=0
        CASE QI='Y' 
          CONFIRMATION=1
        CASE 1
          CALL ELINE('Invalid Entry')
          GOTO ASK.FOR.CONFIRMATION
      END CASE
      CRT @(0,22):@(-3):
      RETURN
*
9999:* EXIT PROGRAM
      STOP
