****************************************************
* Program name : FB.1.18
* Author       : OWEN HOLMAN
* Date written : FEBRUARY 13, 1995
* Library      : FBBP
* COPYRIGHT (c) : AFS, LLC 2016, All Rights Reserved.
*
* TO MODIFY FREIGHT BILL LINE ITEM CODES
*
* Last updated by afs (AFSLOGISTICS\gbino) at 10:22:43 on 04/03/2018.
*
* Start modification history
* 12/31/08 JMK01 Add printing capability
* 10/13/09 NPR01 T091242 - Added check to prevent entry of duplicate codes as well as some additional tidying up.
* 07/23/10 JMK02 Extend paging beyond 7 pages
* 02/22/12 PKB01 Grant myself access per Owen's email 2/21/12 and set up new accessorials per sysaid #1876 and 1869
* 072312 - RLM01 - Sysaid #3073 - Replace former employees' email addresses with those of current employees
* 032713 - JMK03 - SHV/SLC INTEGRATION
* 100813 - JMK04 - SysAid#7324 - FBBP FB.1.18 has an error in line 240
* 040318 - GRB02 - Add Audit Log
* 040318 - GRB03 - Add record lock
* End modification history
*
*****************************************************

$OPTIONS HEADER.EJECT
$OPTIONS EXEC.EQ.PERF
$OPTIONS INFO.ABORT
      ERRMSG=''
      PROMPT''
      PROG.NAME='FB.1.18'
      PROG.DESC='LINE ITEM CODE MAINTENANCE'
      PACK.NAME='FREIGHT BILLING'
      CALL GET.USER.NEW(USER.NAME,CH.NUM)
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'FB.1.18' ; UPL.VOUT = ''        ; * NPR_UPL 04/23/2010
      UPL.VIN<3> = USER.NAME
      UPL.VIN<4> = CH.NUM
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)       ; * NPR_UPL 04/23/2010
      ESC=CHAR(27)                       ; * JMK01
      TB=CHAR(9)                         ; * JMK03
*
* Open files
*
      OPEN '','FB.TABLES' TO F.TABLES ELSE CALL OPEN.ABORT('FB.TABLES',PROG.NAME)
      OPEN '','BILLDATA.':USER.NAME TO F.BILLDATA ELSE CALL OPEN.ABORT('BILLDATA.':USER.NAME,PROG.NAME)
      OPEN '','OPERATOR' TO F.OP ELSE CALL OPEN.ABORT("OPERATOR",PROG.NAME)      ; * GRB01
      * Begin GRB01
      READV OP.FLG FROM F.OP,USER.NAME,58 ELSE
         OP.FLG = "N"
      END
      IF OP.FLG = "Y" THEN
         *   BEGIN CASE
*
* Authorized users
*
         *      CASE USER.NAME = 'DAVID'
         *      CASE USER.NAME = 'GBINO'
         *      CASE USER.NAME = 'PBASS'        ; * PKB01
         *      CASE USER.NAME = 'NMEDDAUGH'
         *      CASE USER.NAME = 'CCOX'
*
* Restrict everyone else
*
         *     CASE 1
      END ELSE
         SUBJ="Unauthorized Program Access by ":USER.NAME
         TEXT=''
         TEXT<1,-1>=USER.NAME:' ':DATE()'D2/':' ':OCONV(TIME(),'MTHS'):' ':PROG.NAME
         TEXT<1,-1>='User ':USER.NAME:' tried to access ':PROG.DESC
         TEXT<1,-1>="(This user's name was not included in the program to allow access)"
         MVIN=''
         MVIN<1>='nmeddaugh@afs.net'
         MVIN<1,-1> ='dfriend@afs.net'
         MVIN<2>=''
         MVIN<4>='AFS'
         MVIN<5>=SUBJ
         MVIN<6>=TEXT
         CALL SENDMAIL(MVIN,MVOUT)
         CALL FB.PRINT.CENT(1,80,12,'Restricted Access Application...')
         CALL FB.PRINT.CENT(1,80,14,'Access Denied! Contact the IS Help Desk for Access')
         CALL ELINE('')
         STOP
         *    END CASE
      END

      * Begin GRB03
      READU DISP.REC FROM F.TABLES,'LI.CODES' LOCKED
         IF RECORDLOCKED(F.TABLES,'LI.CODES') THEN
            LOCK.USER = STATUS()"R%5"
            VIN=''
            VIN<1> = LOCK.USER
            CALL LOCK.USER(VIN,VOUT)
            CALL ELINE("This record is currently locked by ":VOUT<1>)
            STOP
         END
      END ELSE
         DISP.REC = ''
      END
* End GRB03
      
      
      ORIG.DISP.REC = DISP.REC
*
* First page of codes
*
      PAGE=1
      GOSUB 9000

*****************************************************
100:* Enter selection code
****************************************************
      HELP="Enter line number. 'B'=Back. 'T'=Top, ''=Next page. 'E'=End-&-Save. 'EX'=Exit."
      CALL GEN.IN(0,22,"Enter line number please. ###",'',Q,0,3,'','',1,-3,22,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            PAGE=PAGE+1
            GOSUB 9000
         CASE QI='B'
            PAGE=PAGE-1
            IF PAGE=0 THEN PAGE=1
            GOSUB 9000
         CASE QI='T'
            PAGE=1
            GOSUB 9000
         CASE QI='P'                     ; * JMK01
            GOSUB 9500                   ; * JMK01
         CASE QI='D'                     ; * JMK01
            GOSUB 9600                   ; * JMK01
         CASE QI='EX'
            STOP
         CASE NUM(QI)
            SEL=QI
            IF SEL LT START ! SEL GT STOP THEN
               CALL ELINE('Invalid selection.')
               GOTO 100
            END
            GOSUB 8000
         CASE QI='E'
            X=DCOUNT(DISP.REC<1>,CHAR(253))
            FOR I=X TO 1 STEP -1
               IF DISP.REC<1,I>='' THEN
                  DISP.REC=DELETE(DISP.REC,1,I)
                  DISP.REC=DELETE(DISP.REC,2,I)
                  DISP.REC=DELETE(DISP.REC,3,I)
                  DISP.REC=DELETE(DISP.REC,4,I)    ; * JMK03
                  DISP.REC=DELETE(DISP.REC,5,I)    ; * JMK03
               END
            NEXT I
*
            WRITE DISP.REC ON F.TABLES,'LI.CODES'
            IF ORIG.DISP.REC # DISP.REC THEN       ; * GRB02
               GOSUB UPDATE.LOG          ; * GRB02
            END                          ; * GRB02
            STOP
      END CASE
      GOTO 100

******************************************************
8000:* Edit code
******************************************************
      ROW=3+REM(SEL,18)
      IF ROW=3 THEN ROW=21
      CODE=DISP.REC<1,SEL>
      DESC=DISP.REC<2,SEL>
      TYPE=DISP.REC<3,SEL>
      SLCD=DISP.REC<5,SEL>               ; * JMK03
      CODE.HOLD = CODE

8010: HELP="Enter new code. ''=Accept. 'D'=Delete. 'X'=Back. 'EX'=Exit"          ; * NPR01
      CALL GEN.IN(5,ROW,CODE'L#4','',Q,0,4,'','',2,-4,ROW,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='X' THEN
         CRT @(5,ROW):CODE'L#4'
         RETURN
      END
      IF QI='EX' THEN STOP               ; * NPR01
      IF QI='' THEN
         IF CODE.HOLD NE "" THEN         ; * NPR01
            Q=CODE
            QI=CODE
         END ELSE                        ; * NPR01
            CALL ELINE("Invalid response - Enter a code")    ; * NPR01
            GOTO 8010                    ; * NPR01
         END                             ; * NPR01
      END
      IF QI='D' THEN
         FOR X = 1 TO 5                  ; * JMK03
            DISP.REC=DELETE(DISP.REC,X,SEL)
         NEXT X
         GOSUB 9000
         RETURN
      END

      LOCATE QI IN DISP.REC<1> SETTING POS THEN
         IF POS NE SEL THEN
            CALL ELINE("Duplicate code ":QI:" See line ":POS)
            GOTO 8010
         END
      END

      CODE=QI
      CRT @(5,ROW):CODE'L#4'
      CODE.HOLD = CODE                   ; * NPR01
*
******************************************************
8020:* CODE DESC
******************************************************
      HELP="Enter code description. '<'=Back to code. 'X'=Back. 'EX'=Exit"       ; * NPR01
      CALL GEN.IN(11,ROW,DESC'L#30','',Q,0,30,'','',2,-30,ROW,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X' ! QI='<'
            CRT @(11,ROW):DESC'L#30'
            GOTO 8010
         CASE QI='EX'                    ; * NPR01
            STOP                         ; * NPR01
         CASE QI=''
            Q=DESC
      END CASE
      DESC=Q
      CRT @(11,ROW):DESC'L#30'
******************************************************
8030:*TYPE
******************************************************
      HELP="F-Freight, A-Absolute Minimum, M-Miscellaneous, N-Negotiable 'X'=Back 'EX'=Exit"         ; * NPR01"
      CALL GEN.IN(43,ROW,TYPE:' ' 'L#2','',Q,0,2,'','',2,-1,ROW,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X' ! QI='<'
            CRT @(43,ROW):TYPE:' ' 'L#2'
            GOTO 8020
         CASE QI='EX'                    ; * NPR01
            STOP                         ; * NPR01
         CASE QI='' AND (TYPE='F' OR TYPE='A' OR TYPE='M' OR TYPE='N')           ; * JMK04
            Q=TYPE
         CASE QI='F' OR QI='A' OR QI='M' OR QI='N'
            NULL
         CASE 1
            CALL ELINE("Must be F, A, M, or N")
            GO 8030
      END CASE
      IF CODE='SIT' AND Q#'A' THEN
         CALL ELINE("SIT Must be Type A (To Calculate Average SIT Cost)")
         GO 8030
      END
      TYPE=Q
      CRT @(43,ROW):TYPE:' ' 'L#2'
******************************************************
8040: *SLC
******************************************************

      HELP="SLC Translation Code 'X'=Back 'EX'=Exit"         ; * JMK03
      CALL GEN.IN(64,ROW,SLCD:' ' 'L#4','',Q,0,4,'','',4,64,ROW,0,QI,HELP,0,23)  ; * JMK03
      QI=OCONV(QI,'MCU')                 ; * JMK03
      BEGIN CASE                         ; * JMK03
         CASE QI='X' ! QI='<'            ; * JMK03
            CRT @(64,ROW):SLCD:' ' 'L#4'           ; * JMK03
            GOTO 8030                    ; * JMK03
         CASE QI='EX'                    ; * NPR01 ; * JMK03
            STOP                         ; * NPR01 ; * JMK03
         CASE QI=''                      ; * JMK03
            Q=SLCD                       ; * JMK03
      END CASE                           ; * JMK03
      IF Q='' THEN Q='OTH'               ; * JMK03
      SLCD=Q                             ; * JMK03
      CRT @(64,ROW):SLCD:' ' 'L#4'       ; * JMK03

      DISP.REC<1,SEL>=CODE
      DISP.REC<2,SEL>=DESC
      DISP.REC<3,SEL>=TYPE
      DISP.REC<5,SEL>=SLCD               ; * JMK03
      RETURN

******************************************************
9000:* Display array
******************************************************

      CRT @(0,3):@(-3):'Ln'"R#3":'  ':'Code'"L#4":'  ':'Description'"L#30":'  ':'Type'"L#4":SPACE(16):'SLCD' 'L#4'       ; * JMK03
      START=(PAGE*18)-17
      IF DISP.REC<1,START-1>='' THEN     ; * JMK02
         START=1
         PAGE=1
      END
      STOP=START+17
      FOR I=START TO STOP STEP 1
         ROW=3+REM(I,18)
         IF ROW=3 THEN ROW=21
         CODE=DISP.REC<1,I>
         DESC=DISP.REC<2,I>
         TYPE=DISP.REC<3,I>
         SLCD=DISP.REC<5,I>              ; * JMK03
         PRINT @(0,ROW):I"R#3":'  ':CODE"L#4":'  ':DESC"L#30":'  ':TYPE"L#4":SPACE(16):SLCD 'L#4'    ; * JMK03
      NEXT I
      RETURN

****************************************************
9500: * Print report
****************************************************
*
      EXECUTE 'TERM ,,,,,,218,75'        ; * JMK01
      PRINTER ON                         ; * JMK01
      LASER = ''                         ; * JMK01
      LASER<1>= 0                        ; * LANDSCAPE; * JMK01
      LASER<2>= 8                        ; * Lines per inch; * JMK01
      LASER<3>= 84                       ; * Page length; * JMK01
      LASER<4>= 16.7                     ; * Characters per inch; * JMK01
      LASER<5>= 0                        ; * JMK01
      LASER<6>= 0                        ; * JMK01
      LASER<7>= 1                        ; * JMK01
      LASER<8>= 0                        ; * JMK01
      MARGIN = 0                         ; * JMK01
      PRINT ESC:"E"                      ; * JMK01
      PRINT ESC:"&l":LASER<1>:"O":       ; * Set landscape; * JMK01
      PRINT ESC:"&l":LASER<2>:"D":       ; * Lines per inch; * JMK01
      PRINT ESC:"&l":LASER<3>:"F":       ; * Page length; * JMK01
      PRINT ESC:"(s":LASER<4>:"h":       ; * Set pitch; * JMK01
      PRINT LASER<5>:"p":                ; * Proportional printing; * JMK01
      PRINT LASER<6>:"s":                ; * Italics off; * JMK01
      PRINT "0T":                        ; * Line Printer Font; * JMK01
      PRINT ESC:"&l":LASER<7>:"H":       ; * Bin selection; * JMK01
      PRINT ESC:"&a":MARGIN:"L":         ; * JMK01
      PRINT ESC:'"g':LASER<8>:'F':       ; * Paper output; * JMK01

      HED=''
      CALL PAGE.HEAD(PROG.NAME,'AFS Logistics , LLC',PROG.DESC,'','',132,HED)    ; * JMK01
      HEADING HED
      PRINT '#'"R#3":'  ':'Code'"L#4":'  ':'Description'"L#30":'  ':'Type'"L#4"  ; * JMK01
      NVAL=DCOUNT(DISP.REC<1>,@VM)       ; * JMK01
      FOR VAL=1 TO NVAL                  ; * JMK01
         CODE=DISP.REC<1,VAL>            ; * JMK01
         DESC=DISP.REC<2,VAL>            ; * JMK01
         TYPE=DISP.REC<3,VAL>            ; * JMK01
         SLCD=DISP.REC<5,VAL>            ; * JMK03
         PRINT VAL"R#3":'  ':CODE"L#4":'  ':DESC"L#30":'  ':TYPE"L#1":SPACE(20):SLCD'L#4'  ; * JMK01 ; * JMK03
      NEXT VAL                           ; * JMK01
      PRINTER OFF                        ; * JMK01
      HUSH ON                            ; * JMK01
      PRINTER CLOSE                      ; * JMK01
      HUSH OFF                           ; * JMK01
      EXECUTE 'TERM ,,,,,,132,60'        ; * JMK01
      RETURN                             ; * JMK01

*****************************************************
9600: * Download report
*****************************************************
      EXP.REC=''
      CALL FILE.HEAD(PROG.NAME,'AFS, LLC',PROG.DESC,'','',132,EXP.REC)           ; * JMK01
      EXP.REC<-1>=' '
      EXP.LINE=''
      EXP.LINE<1,1>='#'
      EXP.LINE<1,2>='Code'
      EXP.LINE<1,3>='Description'
      EXP.LINE<1,4>='Type'
      EXP.LINE<1,5>='SLC Code'
      EXP.REC<-1>=EXP.LINE
      NVAL=DCOUNT(DISP.REC<1>,@VM)       ; * JMK01
      FOR VAL=1 TO NVAL                  ; * JMK01
         CODE=DISP.REC<1,VAL>            ; * JMK01
         DESC=DISP.REC<2,VAL>            ; * JMK01
         TYPE=DISP.REC<3,VAL>            ; * JMK01
         SLCD=DISP.REC<5,VAL>            ; * JMK03
         EXP.LINE=''
         EXP.LINE<1,1>=VAL
         EXP.LINE<1,2>=CODE
         EXP.LINE<1,3>=DESC
         EXP.LINE<1,4>=TYPE
         EXP.LINE<1,5>=SLCD
         EXP.REC<-1>=EXP.LINE
      NEXT VAL                           ; * JMK01
      EXP.REC=CHANGE(EXP.REC,@VM,TB)
      WRITE EXP.REC ON F.BILLDATA,'LICODES.XLS'
      RETURN                             ; * JMK01
      * Begin GRB02
***************************************************
UPDATE.LOG:
****************************************************
      IF ORIG.DISP.REC # DISP.REC THEN
         SYS.TME = TIME()
         PROC.DTE =DATE()
         VIN=""
         VOUT=""
         VIN<1> = PROC.DTE
         VIN<2> = SYS.TME
         VIN<6> = USER.NAME
****VIN<7> = CLIENT.ID:",":DIV.ID
         VIN<10> = CH.NUM
         VIN<8> = "FB.1.18"
         VIN<11> = "LICODE"
         ATT.CNT = DCOUNT(DISP.REC,@AM)
         FOR I = 1 TO ATT.CNT

            IF DISP.REC<I> # ORIG.DISP.REC<I> THEN
               VIN<3> = I
               IF DCOUNT(ORIG.DISP.REC<I>,@VM) GT 1 THEN
                  TMP = ORIG.DISP.REC<I>
                  CONVERT @VM TO @SVM IN TMP
                  VIN<4> = TMP
               END ELSE
                  VIN<4> = ORIG.DISP.REC<I>
               END
               IF DCOUNT(DISP.REC<I>,@VM) GT 1 THEN
                  TMP = DISP.REC<I>
                  CONVERT @VM TO @SVM IN TMP
                  VIN<5> = TMP
               END ELSE
                  VIN<5> = DISP.REC<I>
               END
               CALL UPD.AUD.LOG(VIN,VOUT)
            END
         NEXT I
      END
      * SOURCE.FILE = VIN<9>
      RETURN
* End GRB02
