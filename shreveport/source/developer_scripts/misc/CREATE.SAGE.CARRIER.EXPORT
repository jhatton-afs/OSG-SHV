*******************************************************************************
* PROGRAM NAME  : CREATE.SAGE.CARRIER.EXPORT
* PROGRAM DESC  : TO BUILD AN EXPORT FILE FOR ONE OR ALL CARRIERS TO IMPORT INTO
*               : SAGE AS A VENDOR OR ACH ACTION
* PROGRAM DATE  : 08-27-2014
* CREATED BY    : MIKE KERBOW
*******************************************************************************
* PROGRAM NOTES : ACH INFORMATION ADDED
*******************************************************************************
* COPYRIGHT (c) : AFS, LLC 2014, All Rights Reserved.  This program is sole
*               : property of AFS, LLC and may not be used, copied, or modified
*               : without the express written consent of AFS, LLC.
*******************************************************************************
* MAINTENANCE TIMELINE : DATE - PGMR INIT - PROGRAM REFERENCE
* MMDDYY - PGM### - {Ticket or Project number} - {Ticket or project Title/Desc}
*******************************************************************************
*
*
*******************************************************************************
      INPUT PROGRAM.MODE
      CALL GET.USER(USER)
      USER=OCONV(USER,'MCL')
*
      TODAY=DATE()
      TAB=CHAR(9)
      PIPE="|"
      PROMPT''
      ERRMSG=''
      PROG.NAME='Build Carrier Export'
      PROG.DESC="Build File of Carrier Information for PC Import"
      PACK.NAME="Freight Billing"
      CALL CHANNEL(CH.NUM)
      UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'CREATE.SAGE.CARRIER.EXPORT' ; UPL.VOUT = ''
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)

      YN.ANSWER = ''
      YN.MSG=''
      QUOTE.COMMAS = 1

      OPEN 'CARRIERS' TO F.CARRIERS ELSE ABORT

      BILLDATA.REC = ''
      OPEN '','VOC' TO F.VOC ELSE
         GOSUB CALL.NET.ADMIN
         CALL ELINE('UNABLE TO OPEN VOC FILE')
         STOP
      END

      READ BILLDATA.REC FROM F.VOC,"BILLDATA" ELSE
         GOSUB CALL.NET.ADMIN
         CALL ELINE('UNABLE TO OPEN "VOC BILLDATA"')
         STOP
      END

      BILLDATA.REC<2>:='\':USER
      WRITE BILLDATA.REC ON F.VOC,"BILLDATA.":USER ELSE
         GOSUB CALL.NET.ADMIN
         CALL ELINE("YOUR USER NAME '":USER:"' IS NOT IN THE BILLDATA FOLDER - PLEASE SEE JIM/OWEN")
         STOP
      END

      OPEN '','BILLDATA.':USER TO BILLDATA ELSE
         GOSUB CALL.NET.ADMIN
         CALL ELINE('UNABLE TO OPEN "BILLDATA.":USER')
         STOP
      END
      OPEN '','&SAVEDLISTS&' TO F.SL ELSE
         CALL OPEN.ABORT("&SAVEDLISTS&",PROG.NAME)
      END
      OPEN '','SAGE.EXPORT.CARRIER' TO F.EXPORT ELSE
         CALL OPEN.ABORT('SAGE.EXPORT.CARRIER',PROG.NAME)
      END
      RECORD.NAME=''

*---------------------------------------------
* Enter carrier number.
*---------------------------------------------
      CARRIER.ID='ALL'
      CARRIER.LIST=''
*---------------------------------------------
* Enter Default Extension
*---------------------------------------------
      EXTENSION='.TXT'
*---------------------------------------------
* Ask about a column header on the exported file....
*---------------------------------------------
      CUR.LINE=''
      CARRIER.REC=''
      CARRIER.SL=''
      DF.ARRAY=''
      REC.TYPE='H'
      GOSUB PROCESS.CUR.LINE
*---------------------------------------------
* Ask about Quoting Commas
*---------------------------------------------
      QUOTE.COMMAS = 0
      IF PROGRAM.MODE='AUTO' THEN
         READ CK.IDS FROM F.SL,'NEW.SAGE.CARRIER' ELSE CK.IDS=''
         IF CK.IDS='' THEN RETURN
         SEQ.CODE=1
TRY.NEXT.SEQ:***
         NEW.LIST.ID='CARRIER.':DATE()'D2-':'.':SEQ.CODE'R%3'
         READ DUMMY FROM F.SL,NEW.LIST.ID THEN
            SEQ.CODE=SEQ.CODE+1
            RELEASE F.SL,NEW.LIST.ID
            GOTO TRY.NEXT.SEQ
         END ELSE
            WRITE CK.IDS ON F.SL,NEW.LIST.ID
            WRITE '' ON F.SL,'NEW.SAGE.CARRIER'
             EXTENSION='-':DATE()'D2-':'-':SEQ.CODE'R%3':'.TXT'
             CARRIER.SL=NEW.LIST.ID
             GOTO EXPORT.FILE
         END
      END
*---------------------------------------------
* Ask IS THIS CORRECT
*---------------------------------------------
ASK.CORRECT:
      YN.MASK = 'Y '

ASK.CORRECT.1:
      YN.MSG = 'Continue? :'
      HELP = CHAR(7):"Entry Options: [Y]-Yes [N]-No [X]-Back"
      CRT @(0,10):YN.MSG:@(-4)
      MASK = YN.MASK
      Q=''
      CALL GEN.IN(LEN(YN.MSG)+1,10,MASK,'',Q,0,3,'','',2,LEN(YN.MSG)+1,10,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      IF QI='' THEN QI=TRIM(MASK)
      BEGIN CASE
         CASE QI = 'Y'
            CRT @(LEN(YN.MSG)+1,10):'Yes'
         CASE QI = 'X' OR QI='N'
            STOP
         CASE QI = 'EX'
            STOP
         CASE 1
            CALL ELINE('Invalid entry.')
            GOTO ASK.CORRECT.1
      END CASE

*---------------------------------------------
* Export File
*---------------------------------------------
EXPORT.FILE:***
      RECORD.NAME = 'SAGE-ALL-CARRIERS':EXTENSION
      GOSUB EXPORT.ALL.CARRIERS
      CRT @(0,16):"Carrier File Export completed.":@(-4):
      CRT @(0,17):@(-4):
      CRT @(0,18):"The Exported file name is '":RECORD.NAME:"'":@(-4):
      CRT @(0,19):@(-4):
      CRT @(0,20):@(-4):

      IF PROGRAM.MODE#'AUTO' THEN
         CALL ELINE('Done.')
      END

      STOP

*--------------------------------------------------------------
* EXPORT.ALL.CARRIERS - Export all Carriers
*--------------------------------------------------------------
EXPORT.ALL.CARRIERS:
      IF CARRIER.SL#'' THEN
         GL.STMT='GET-LIST ':CARRIER.SL
         EXECUTE GL.STMT RTNLIST CARRIER.LIST CAPTURING GL.OUTPUT
      END
      STMT="SSELECT CARRIERS "
      IF CARRIER.SL#'' THEN
         EXECUTE STMT PASSLIST CARRIER.LIST RTNLIST CARRIERS CAPTURING OUTPUT
      END ELSE
         EXECUTE STMT RTNLIST CARRIERS CAPTURING OUTPUT
      END
      CARRIER.ITEMS = @SELECTED
      IF @SELECTED < 1 THEN
         CALL ELINE('ERROR - No CARRIERS on file.')
         STOP
      END

      CARRIER.CNT=0
      LOOP
         READNEXT CARRIER.ID FROM CARRIERS ELSE CARRIER.ID='DONE'
      UNTIL CARRIER.ID='DONE' DO
         CARRIER.CNT+=1
         READ CARRIER.REC FROM F.CARRIERS,CARRIER.ID ELSE
            CARRIER.REC='*** Not On File ***'
         END

         CRT @(0,17):CARRIER.ID:" ":CARRIER.REC<1>:" - Now Exporting Information":@(-4):
         CALL PROG.BAR(20,CARRIER.CNT,CARRIER.ITEMS,PER.1)

         REC.TYPE='D'
         GOSUB PROCESS.CUR.LINE

      REPEAT

      GOSUB WRITE.FILE

      RETURN
*--------------------------------------------------------------
* PROCESS.CUR.LINE:
*
* hey! If you make a change in this arrangement, make
* sure you update the WRITE.HEADER routine also!
*
*--------------------------------------------------------------
PROCESS.CUR.LINE:

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='Carrier ID'
         CASE REC.TYPE='D'
            TEXT=CARRIER.ID
      END CASE
      CUR.LINE<1,1>=TEXT

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='Remit Name'
         CASE REC.TYPE='D'
            TEXT=CARRIER.REC<1>
      END CASE
      CUR.LINE<1,2>=TEXT

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='Remit Addr 1'
         CASE REC.TYPE='D'
            TEXT=CARRIER.REC<2,1>
      END CASE
      CUR.LINE<1,3>=TEXT

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='Remit Addr 2'
         CASE REC.TYPE='D'
            TEXT=CARRIER.REC<2,2>
      END CASE
      CUR.LINE<1,4>=TEXT

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='Remit City'
         CASE REC.TYPE='D'
            TEXT=CARRIER.REC<3>
      END CASE
      CUR.LINE<1,5>=TEXT

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='Remit State'
         CASE REC.TYPE='D'
            TEXT=CARRIER.REC<4>
      END CASE
      CUR.LINE<1,6>=TEXT

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='Remit Zip Code'
         CASE REC.TYPE='D'
            TEXT=CARRIER.REC<5>
      END CASE
      CUR.LINE<1,7>=TEXT

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='Remit Phone'
         CASE REC.TYPE='D'
            TEXT=CARRIER.REC<6>
      END CASE
      CUR.LINE<1,8>=TEXT

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='Remit Country'
         CASE REC.TYPE='D'
            TEXT=CARRIER.REC<7>
      END CASE
      CUR.LINE<1,9>=TEXT

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='Remit Fax'
         CASE REC.TYPE='D'
            TEXT=CARRIER.REC<8>
      END CASE
      CUR.LINE<1,10>=TEXT

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='Remit Contact'
         CASE REC.TYPE='D'
            TEXT=CARRIER.REC<9>
      END CASE
      CUR.LINE<1,11>=TEXT

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='Corres Name or Firm'
         CASE REC.TYPE='D'
            TEXT=CARRIER.REC<31>
      END CASE
      CUR.LINE<1,12>=TEXT

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='Corres Addr 1'
         CASE REC.TYPE='D'
            TEXT=CARRIER.REC<32,1>
      END CASE
      CUR.LINE<1,13>=TEXT

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='Corres Addr 2'
         CASE REC.TYPE='D'
            TEXT=CARRIER.REC<32,2>
      END CASE
      CUR.LINE<1,14>=TEXT

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='Corres City'
         CASE REC.TYPE='D'
            TEXT=CARRIER.REC<33>
      END CASE
      CUR.LINE<1,15>=TEXT

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='Corres State'
         CASE REC.TYPE='D'
            TEXT=CARRIER.REC<34>
      END CASE
      CUR.LINE<1,16>=TEXT

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='Corres Zip Code'
         CASE REC.TYPE='D'
            TEXT=CARRIER.REC<35>
      END CASE
      CUR.LINE<1,17>=TEXT

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='Corres Phone'
         CASE REC.TYPE='D'
            TEXT=CARRIER.REC<36>
      END CASE
      CUR.LINE<1,18>=TEXT

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='Corres Country 1'
         CASE REC.TYPE='D'
            TEXT=CARRIER.REC<37,1>
      END CASE
      CUR.LINE<1,19>=TEXT

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='Corres Country 2'
         CASE REC.TYPE='D'
            TEXT=CARRIER.REC<37,2>
      END CASE
      CUR.LINE<1,20>=TEXT

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='Corres Fax'
         CASE REC.TYPE='D'
            TEXT=CARRIER.REC<37,1>
      END CASE
      CUR.LINE<1,21>=TEXT

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='Dflt Mode'
         CASE REC.TYPE='D'
            TEXT=CARRIER.REC<44>
      END CASE
      CUR.LINE<1,22>=TEXT

      FOR VAL=1 TO 5
         BEGIN CASE
            CASE REC.TYPE='H'
               TEXT='CB TO Name ':VAL
            CASE REC.TYPE='D'
               TEXT=CARRIER.REC<80,VAL>
         END CASE
         CUR.LINE<1,22+VAL>=TEXT

         BEGIN CASE
            CASE REC.TYPE='H'
               TEXT='CB TO Email ':VAL
            CASE REC.TYPE='D'
               TEXT=CARRIER.REC<81,VAL>
         END CASE
         CUR.LINE<1,27+VAL>=TEXT

         BEGIN CASE
            CASE REC.TYPE='H'
               TEXT='CB CC Name ':VAL
            CASE REC.TYPE='D'
               TEXT=CARRIER.REC<82,VAL>
         END CASE
         CUR.LINE<1,32+VAL>=TEXT

         BEGIN CASE
            CASE REC.TYPE='H'
               TEXT='CB CC Email ':VAL
            CASE REC.TYPE='D'
               TEXT=CARRIER.REC<83,VAL>
         END CASE
         CUR.LINE<1,37+VAL>=TEXT

      NEXT VAL

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='Status'
         CASE REC.TYPE='D'
            TEXT=CARRIER.REC<89>
      END CASE
      CUR.LINE<1,43>=TEXT

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='ACH Status'
         CASE REC.TYPE='D'
            TEXT=CARRIER.REC<102>
      END CASE
      CUR.LINE<1,44>=TEXT

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='SCAC'
         CASE REC.TYPE='D'
            TEXT=CARRIER.REC<12>
      END CASE
      CUR.LINE<1,45>=TEXT

      NDVAL=DCOUNT(CARRIER.REC<106>,@VM)
      LOCATE TODAY IN CARRIER.REC<106> BY 'DR' SETTING DPOS THEN NULL ELSE NULL
      IF DPOS < 1 THEN DPOS=1
      IF DPOS > NDVAL THEN DPOS=NDVAL

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='ACH Routing #'
         CASE REC.TYPE='D'
            TEXT=CARRIER.REC<103,DPOS>
      END CASE
      CUR.LINE<1,46>=TEXT

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='ACH Account #'
         CASE REC.TYPE='D'
            TEXT=CARRIER.REC<104,DPOS>
      END CASE
      CUR.LINE<1,47>=TEXT

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='ACH Type'
         CASE REC.TYPE='D'
            TEXT=CARRIER.REC<105,DPOS>
      END CASE
      CUR.LINE<1,48>=TEXT

      BEGIN CASE
         CASE REC.TYPE='H'
            TEXT='ACH Name'
         CASE REC.TYPE='D'
            TEXT=CARRIER.REC<122>
      END CASE
      CUR.LINE<1,49>=TEXT

      FOR VAL=1 TO 6
         BEGIN CASE
            CASE REC.TYPE='H'
               TEXT='ACH Email ':VAL
            CASE REC.TYPE='D'
               TEXT=CARRIER.REC<121,VAL>
         END CASE
         CUR.LINE<1,49+VAL>=TEXT
      NEXT VAL

*      NSVAL=DCOUNT(CARRIER.REC<111,DPOS>,@SVM)
*      BEGIN CASE
*         CASE REC.TYPE='H'
*            TEXT='ACH Confirm Sent'
*         CASE REC.TYPE='D'
*            TEXT=CARRIER.REC<111,DPOS,NSVAL>'D2/'
*      END CASE
*      CUR.LINE<1,43>=TEXT
*
*      BEGIN CASE
*         CASE REC.TYPE='H'
*            TEXT='ACH Confirm Rcvd'
*         CASE REC.TYPE='D'
*            TEXT=CARRIER.REC<112,DPOS,NSVAL>'D2/'
*      END CASE
*      CUR.LINE<1,44>=TEXT
*
      CUR.LINE=CHANGE(CUR.LINE,@VM,PIPE)

      DF.ARRAY<-1>=CUR.LINE

      RETURN

*--------------------------------------------------------------
* WRITE.FILE
*--------------------------------------------------------------
WRITE.FILE:

      WRITE DF.ARRAY ON F.EXPORT,RECORD.NAME

      RETURN

*--------------------------------------------------------------
* CRITICAL ERROR HANDLER - GENERIC ROUTINE (TERMINATES PROGRAM)
*--------------------------------------------------------------
CALL.NET.ADMIN: ***
      CALL ELINE("CALL NETWORK ADMINISTRATOR!")
      CALL ELINE("CALL NETWORK ADMINISTRATOR!!!!!")

      RETURN

