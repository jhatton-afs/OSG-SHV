      SUBROUTINE FB.1.20.REG(CLIENT.ID,CLIENT.REC,DISPLAY.MODE)
* SUBROUTINE TO CREATE OR MODIFY CLIENT REGIONS
 UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.1.20.REG' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
 CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
*
* FREIGHT BILLING PACKAGE
*
* AUTHOR:      VALERIE DOTY
* DATE:        MAY 23,1994
* DESCRIPTION: THIS SUBROUTINE REPLACES THE OLD REGION CODE
*              MAINTENANCE.  IT IS BEING UPDATED NOT ONLY TO KEEP YTD
*              TOTALS, BUT ALSO REGION INFO.  THE OLD PROGRAM CLEARED
*              THE FILE EVERY TIME SOMETHING WAS FILED AND HAD BEEN
*              MODIFIED SEVERAL TIMES TO KEEP FROM LOSING THE YTD
*              TOTALS.  NOW, ONLY THOSE RECORDS BEING CHANGED WILL BE
*              UPDATED AND THE REST OF THE FILE WILL REMAIN UNTOUCHED.
*              THREE NEW FIELDS HAVE BEEN ADDED.  ONE FIELD IS THE
*              REGION THIS REGION BELONGS TO.  THE OTHER TWO FIELDS
*              ARE THE ZIP CODE RANGES THAT DEFINE THIS REGION.
*              FROM THAT INFO, BILL PROCESSING CAN DETERMINE IF A
*              SHIPMENT STAYED WITHIN A REGION OR NOT.
*
* FORMATTING MODS:
*********************************************************************
* 050515 - DRF02 - SysAid 10652 - Update client list of changes for SAGE export
*
      $INCLUDE PROG.ADMIN INC_OPTIONS
*
* INITIALIZE VARIABLES
*
      CALL GET.USER(USER)
      PROMPT''
      ADD.FLAG=0
      PROG.NAME='FB.1.20.REG'
      PROG.DESC='CLIENT REGION CODES'
      PACK.NAME='FREIGHT BILLING'
      IF DISPLAY.MODE THEN
         PROG.DESC=PROG.DESC:' - View'
      END ELSE
         PROG.DESC=PROG.DESC:' - Change'
      END
      ERRMSG=''
      REG.REC = ''
      OLD.REG.REC = ''
      NUM.ROWS = 10
      REG.DESC = ''
      ADDR1=''
      ADDR2=''
      REG.ZIP=''
      REG.STATE=''
      REG.CITY=''
      REG.PHONE=''
      REG.FAX=''
      CONTACT =''
      ACTIVE=''
      SUBST.REG=''
      GROUP.CODE=''
      CROSS.REF=''
      CODE=''
      EMAIL.TO=''
      EMAIL.CC=''
      EMAIL.BCC=''
      MODE = ''
      LN = 0
      FIRST.ROW = 11
      CLIENT.NAME = CLIENT.REC<2>
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,PERIOD,PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
*
* OPEN FILES
*
      OPEN '','REGION.CODES,':CLIENT.ID TO F.REG.CODES ELSE
         EXECUTE 'CREATE-FILE DATA REGION.CODES,':CLIENT.ID:' 7' PASSLIST CAPTURING OUTPUT
         OPEN '','REGION.CODES,':CLIENT.ID TO F.REG.CODES ELSE
            CALL OPEN.ABORT("REGION.CODES",PROG.NAME)
         END
      END
      OPEN '','ZIPS.CODES' TO F.ZIPS ELSE
         CALL OPEN.ABORT("ZIPS",PROG.NAME)
      END
*DF      OPEN '','CAN.ZIP.CODES' TO F.CAN.ZIPS ELSE
*DF         CALL OPEN.ABORT("CAN.ZIP.CODES",PROG.NAME)
*DF      END
*DF      OPEN '','MEX.ZIP.CODES' TO F.MEX.ZIPS ELSE
*DF         CALL OPEN.ABORT("MEX.ZIP.CODES",PROG.NAME)
*DF      END
      OPEN '','&SAVEDLISTS&' TO F.SL ELSE          ; * DRF02
         CALL OPEN.ABORT("&SAVEDLISTS&",PROG.NAME)
      END     ; * DRF02
      READ ZIP3.REC FROM F.ZIPS,'3.DIGIT' ELSE ZIP3.REC=''

*********************************************************************
GET.REG: * EDIT REGION CODE
*********************************************************************
      CRT @(0,3) : ' Client Number....': CLIENT.ID : ' ' : CLIENT.NAME :
      CRT @(0,4) : ' Region Number..' : @(-3) :
      HELP="Enter region code. ''=Exit. 'X'=Exit. 'L'=List all regs. 'P'=Print all regs"
      ZIP.CNT = 0
      ZIP.DESC = ''
      CALL GEN.IN(18,4,'','',Q,0,5,'','',2,18,4,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      Q=OCONV(Q,'MCU')
      BEGIN CASE
         CASE QI='X' OR QI = '' OR QI='EX'
            RELEASE F.REG.CODES
            STOP
            RETURN
         CASE QI='L'
            HELP="'I'=Inactive, 'B'=Both, <ENTER>=Active."
            CALL GEN.IN(0,22,'Enter Region Status ##','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
            BEGIN CASE
               CASE QI='I'
                  EXECUTE 'SORT REGION.CODES,':CLIENT.ID:' WITH 7 = "I" SCR.ID SCR.ZIP SCR.DESC SCR.ADDR SCR.CITY SCR.STATE HEADING "List of inactive region codes for ':CLIENT.ID:' - ':CLIENT.NAME:"'CL'":'" (I'
               CASE QI='B'
                  EXECUTE 'SORT REGION.CODES,':CLIENT.ID:' SCR.ID SCR.ZIP SCR.DESC SCR.ADDR SCR.CITY SCR.STATE HEADING "List of all region codes for ':CLIENT.ID:' - ':CLIENT.NAME:"'CL'":'" (I'
               CASE 1
                  EXECUTE 'SORT REGION.CODES,':CLIENT.ID:' WITH 7 # "I" SCR.ID SCR.ZIP SCR.DESC SCR.ADDR SCR.CITY SCR.STATE HEADING "List of active region codes for ':CLIENT.ID:' - ':CLIENT.NAME:"'CL'":'" (I'
            END CASE
            CALL ELINE('Press <ENTER> to continue.')
            CALL AFS.SCR.HEAD(CO.ID,FILE.ID,PERIOD,PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            GO GET.REG
         CASE QI='P'
            HELP="'I'=Inactive, 'B'=Both, <ENTER>=Active."
            CALL GEN.IN(0,22,'Enter Region Status ##','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
            BEGIN CASE
               CASE QI='I'
                  EXECUTE 'SORT REGION.CODES,':CLIENT.ID:' WITH 7 = "I" BY REG 14 16 17 1 LPTR HEADING "List of inactive region codes for ':CLIENT.ID:' - ':CLIENT.NAME:"'CL'":'"'
               CASE QI='B'
                  EXECUTE 'SORT REGION.CODES,':CLIENT.ID:' BY REG 14 16 17 1 LPTR HEADING "List of all region codes for ':CLIENT.ID:' - ':CLIENT.NAME:"'CL'":'"'
               CASE 1
                  EXECUTE 'SORT REGION.CODES,':CLIENT.ID:' WITH 7 = "A" BY REG 14 16 17 1 LPTR HEADING "List of active region codes for ':CLIENT.ID:' - ':CLIENT.NAME:"'CL'":'"'
            END CASE
            CALL ELINE('Press <ENTER> to continue.')
            CALL AFS.SCR.HEAD(CO.ID,FILE.ID,PERIOD,PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            GO GET.REG
         CASE LEN(QI) <= 5
            REG.ID = Q
            CRT @(18,4) : REG.ID : @(-4) :
            GOSUB DISPLAY.SCREEN
            READ REG.REC FROM F.REG.CODES, REG.ID THEN
               OLD.REG.REC = REG.REC
               GOSUB ASSIGN.DATA
               GOSUB DISPLAY.DATA
               MODE = 'EDIT'
               GOSUB START.SEL
            END ELSE
               IF DISPLAY.MODE THEN
                  CALL ELINE('Region not on file. Press <ENTER> to continue.')
                  GO GET.REG
               END
               REG.REC = ''
               GOSUB ASSIGN.DATA
               MODE = 'INPUT'
               GOSUB START.SEL
               IF QI = 'X' THEN
                  RELEASE F.REG.CODES
                  GO GET.REG
               END
            END
         CASE 1
            CALL ELINE('Invalid entry.')
      END CASE
      GO UPDATE.INFO

*********************************************************************
START.SEL: ***
*********************************************************************
      IF MODE = 'INPUT' THEN
         LN=LN+1
         QI=LN
         IF LN = 16 THEN
            MODE = 'EDIT'
            GO START.SEL
         END
      END ELSE
         IF DISPLAY.MODE THEN
            HELP='Press 14, 15 to view or <ENTER> to continue.'
         END ELSE
            HELP="Enter number of information to change. (1 to 15), [D]=Delete"
         END
         CALL GEN.IN(0,22,'Enter Selection Number ##','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
      END
      QI=OCONV(QI,'MCU')
      IF DISPLAY.MODE THEN
         VALID=0
         IF QI='' OR QI=14 OR QI=15 THEN VALID=1
         IF VALID=0 THEN
            CALL ELINE('Invalid entry.')
            GO START.SEL
         END
      END
      BEGIN CASE
         CASE QI=''
            IF DISPLAY.MODE THEN
               RETURN
            END
            GO UPDATE.INFO
         CASE QI='EX'
            STOP
         CASE QI='X'
            IF MODE = 'INPUT' THEN
               IF LN=1 THEN
                  RETURN
               END ELSE
                  LN = LN-1
                  GO START.SEL
               END
            END ELSE
               RETURN
            END
         CASE NUM(QI)
            IF QI GE 1 AND QI LE 15 THEN
               ON QI GOSUB GET.DESC,GET.ADDR1,GET.ADDR2, GET.ZIP,GET.STATE,GET.CITY,GET.REG.PHONE,GET.REG.FAX,GET.CONTACT.INFO,GET.STATUS,GET.SUBST,GET.GROUP.CODE,GET.CROSS.REF,GET.EMAIL,GET.COMMENTS
            END ELSE
               CALL ELINE('Invalid Entry, please try again')
            END
         CASE 1
      END CASE
      GO START.SEL

*********************************************************************
GET.DESC: *  GET THE A BRIEF DESCRIPTION OF THE REGION
*********************************************************************
      HELP="Enter a brief description of the region. ''=Accept. 'X'=Exit."
      CALL GEN.IN(17,6,REG.DESC,'',Q,0,20,'','',2,17,6,0,QI,HELP,0,23)
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            CRT @(17,6): REG.DESC
            RETURN
         CASE QI = ''
            NULL
         CASE QI = ' '
            REG.DESC = ''
         CASE 1
            REG.DESC = TRIM(QI)
      END CASE
      CRT @(17,6):REG.DESC
      REG.REC<11>=REG.DESC
      RETURN

************************************************************************
GET.ADDR1:
************************************************************************
      HELP="Enter addr 1. [space]=Clear."
      MASK=ADDR1:STR('-',25-LEN(ADDR1))
      CALL GEN.IN(17,7,MASK,'',Q,0,25,'','',2,-25,7,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            IF MODE = 'INPUT' THEN
               IF LN=1 THEN
                  GO GET.REG
               END ELSE
                  LN = LN-1
               END
            END
            GO START.SEL
         CASE QI = ' '
            ADDR1 =''
         CASE QI=''
            NULL
         CASE 1
            ADDR1 = TRIM(Q)
      END CASE
      CRT @(17,7):ADDR1'L#25'
      REG.REC<14>=ADDR1
      RETURN

************************************************************************
GET.ADDR2:
************************************************************************
      HELP="Enter addr 2. [space]=Clear."
      MASK=ADDR2:STR('-',25-LEN(ADDR2))
      CALL GEN.IN(17,8,MASK,'',Q,0,25,'','',2,-25,8,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            IF MODE = 'INPUT' THEN
               IF LN=1 THEN
                  GO GET.REG
               END ELSE
                  LN = LN-1
               END
            END
            GO START.SEL
         CASE QI=''
            NULL
         CASE QI = ' '
            ADDR2 =''
         CASE 1
            ADDR2 = TRIM(Q)
      END CASE
      CRT @(17,8):ADDR2'L#25'
      REG.REC<15>=ADDR2
      RETURN

*********************************************************************
GET.ZIP: *  GET THE ZIP CODE THAT NAMES THIS REGION
*********************************************************************
      HELP="Enter new destination/origin code. ''=Accept. 'X'=Exit."
      GOOD.ANS = 0
      LOOP UNTIL GOOD.ANS DO
         CRT @(17,9):REG.ZIP
         CALL GEN.IN(17,9,REG.ZIP,'',Q,0,6,'','',2,17,9,0,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI='X'
               CRT @(17,9):REG.ZIP
               GOOD.ANS = 1
            CASE QI='EX'
               STOP
            CASE QI='' AND REG.ZIP # ''
               GOOD.ANS = 1
            CASE QI # '' AND LEN(Q) <= 6
               IF Q[6,1]='-' THEN
                  Q=CHANGE(Q,'-','M')
               END
               ZIP.ID = Q
               GOSUB READ.ZIP
               IF ZIP.DESC # 'ERROR' THEN
                  GOOD.ANS = 1
                  REG.ZIP = Q
                  REG.CITY = ZIP.REC<1>
                  REG.STATE = ZIP.REC<2>
               END
            CASE 1
               CALL ELINE('Invalid entry.')
         END CASE
      REPEAT
      CRT @(17,9):REG.ZIP'L#6'
      CRT @(34,9):REG.STATE
      CRT @(17,10):REG.CITY'L#25'
      REG.REC<1> = REG.ZIP
      REG.REC<16> = REG.CITY
      REG.REC<17> = REG.STATE
      IF MODE = 'INPUT' THEN LN = LN + 2
      RETURN

*********************************************************************
READ.ZIP: * SUBROUTINE TO RETRIEVE CITY AND STATE
*********************************************************************
      BEGIN CASE
         CASE LEN(ZIP.ID)=5 OR LEN(ZIP.ID)=6
            READ ZIP.REC FROM F.ZIPS, ZIP.ID ELSE
               ZIP.REC = "~~~ Unknown ~~~"
            END
            ZIP.DESC = ZIP.REC<1> : ' ' : ZIP.REC<2>
*DF         CASE LEN(ZIP.ID)=6
*DF            IF ZIP.ID[6,1]='M' THEN
*DF               READ ZIP.REC FROM F.MEX.ZIPS, ZIP.ID ELSE
*DF                  ZIP.REC = '~~~ Unknown ~~~'
*DF               END
*DF               ZIP.DESC = ZIP.REC<1>:' ':ZIP.REC<2>
*DF            END ELSE
*DF               READ ZIP.REC FROM F.CAN.ZIPS, ZIP.ID ELSE
*DF                  ZIP.REC = '~~~ Unknown ~~~'
*DF               END
*DF               ZIP.DESC = ZIP.REC<1>:' ':ZIP.REC<2>
*DF            END
         CASE LEN(ZIP.ID)=3
            ZIP.DESC = '~~~ Unknown ~~~'
            X=DCOUNT(ZIP3.REC<1>,CHAR(253))
            FOR I=1 TO X
               IF ZIP.ID GE ZIP3.REC<2,I> & ZIP.ID LE ZIP3.REC<3,I> THEN
                  ZIP.DESC = ZIP3.REC<1,I>
                  EXIT
               END
            NEXT I
         CASE 1
            CALL ELINE('Invalid entry.')
            ZIP.DESC='ERROR'
      END CASE
      RETURN

************************************************************************
GET.STATE:
************************************************************************
      HELP="Enter state code. [space]=Clear."
      MASK=REG.REC<17>'L#2'
      CALL GEN.IN(34,9,MASK,'',Q,0,2,'','',2,-2,9,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            IF MODE = 'INPUT' THEN
               IF LN=1 THEN
                  GO GET.REG
               END ELSE
                  LN = LN-1
               END
            END
         CASE QI='EX'
            STOP
         CASE QI = ''
            REG.STATE =REG.REC<17>
         CASE QI = ' '
            REG.STATE =''
         CASE 1
            REG.STATE = TRIM(Q)
      END CASE
      CRT @(34,9):REG.STATE'L#2'
      REG.REC<17> = REG.STATE
      RETURN

************************************************************************
GET.CITY:
************************************************************************
      HELP="Enter city. [space]=Clear."
      MASK=REG.CITY
      CALL GEN.IN(17,10,MASK,'',Q,0,25,'','',2,17,10,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            IF MODE = 'INPUT' THEN
               IF LN=1 THEN
                  GO GET.REG
               END ELSE
                  LN = LN-1
               END
            END
         CASE QI='EX'
            STOP
         CASE QI=''
            NULL
         CASE QI = ' '
            REG.CITY=''
         CASE 1
            REG.CITY= TRIM(Q)
      END CASE
      CRT @(17,10):REG.CITY'L#25'
      REG.REC<16> = REG.CITY
      RETURN

************************************************************************
GET.REG.PHONE:
************************************************************************
      HELP="Enter region's phone number. [space]=Clear."
      CALL GEN.IN(17,11,REG.PHONE'L#13','PHONE',Q,0,13,'','',2,17,11,0,QI,HELP,0,23)
      BEGIN CASE
         CASE QI=' '
            REG.PHONE = ''
         CASE QI NE ''
            REG.PHONE =TRIM(Q)
         CASE QI=''
            NULL
         CASE 1
            GO GET.REG.PHONE
      END CASE
      CRT @(17,11):'(':REG.PHONE[1,3]:')':REG.PHONE[4,3]:'-': REG.PHONE[7,4]
      REG.REC<18>=REG.PHONE
      RETURN

************************************************************************
GET.REG.FAX:
************************************************************************
      HELP="Enter region's fax number. [space]=Clear."
      CALL GEN.IN(17,12,REG.FAX'L#13','PHONE',Q,0,13,'','',2,17,12,0,QI,HELP,0,23)
      BEGIN CASE
         CASE QI=' '
            REG.FAX = ''
         CASE QI NE ''
            REG.FAX =TRIM(Q)
         CASE QI=''
            NULL
         CASE 1
            GO GET.REG.FAX
      END CASE
      CRT @(17,12):'(':REG.FAX[1,3]:')':REG.FAX[4,3]:'-': REG.FAX[7,4]
      REG.REC<19>=REG.FAX
      RETURN
************************************************************************
GET.CONTACT.INFO:
************************************************************************
      HELP="Enter contact name. [space]=Clear."
      MASK=REG.REC<23>:STR('-',30-LEN(REG.REC<23>))
      CALL GEN.IN(17,13,MASK,'',Q,0,30,'','',2,-30,13,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=' '
            CONTACT=''
         CASE QI= ''
            CONTACT=REG.REC<23>
         CASE 1
            CONTACT=TRIM(Q)
      END CASE

      CRT @(17,13):CONTACT'L#30'
      REG.REC<23> = CONTACT

      RETURN

************************************************************************
GET.STATUS: ***
************************************************************************
      HELP="Enter status. [A]=Active, [I]=Inactive, [cr]=Accept."
      CALL GEN.IN(69,6,STATUS.FLG,'',Q,0,1,'','',1,69,6,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='' & STATUS.FLG NE ''
            QI=STATUS.FLG
         CASE QI='I'
            NULL
         CASE QI='A'
            NULL
      END CASE
      STATUS.FLG=QI
      STATUS='-Undefined'
      IF QI='I' THEN STATUS='-Inactive'
      IF QI='A' THEN STATUS='-Active'
      CRT @(69,6):STATUS.FLG:STATUS:@(-4):
      REG.REC<7>=STATUS.FLG
      RETURN

************************************************************************
GET.SUBST:
************************************************************************
      HELP="Enter a substitute region number. ''=Accept. 'X'=Exit."
      MASK = SUBST.REG
      CALL GEN.IN(69,7,MASK,'',Q,0,5,'','',2,69,7,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            CRT @(69,7): SUBST.REG
            RETURN
         CASE QI = ''
            CRT @(69,7): SUBST.REG
         CASE 1
            TEMP.SUBST.REG = QI
            READ TEMP FROM F.REG.CODES,TEMP.SUBST.REG THEN
               SUBST.REG = TEMP.SUBST.REG
            END ELSE
               CALL ELINE('NOT A VALID SUBSTITUTE REGIONS, PLEASE TRY AGAIN')
               GO GET.SUBST
            END
      END CASE
      CRT @(69,7): SUBST.REG
      REG.REC<20>= SUBST.REG
      RETURN

************************************************************************
GET.GROUP.CODE:
************************************************************************
      HELP="Enter a grouping code (example 1,2,3 or A,B,C). ''=Accept. 'X'=Exit."
      CALL GEN.IN(69,8,GROUP.CODE,'',Q,0,10,'','',2,69,8,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            CRT @(69,8): GROUP.CODE
            RETURN
         CASE QI = ''
            CRT @(69,8): GROUP.CODE
         CASE 1
            GROUP.CODE = TRIM(QI)
      END CASE
      CRT @(69,8): GROUP.CODE
      REG.REC<21>= GROUP.CODE
      RETURN

************************************************************************
GET.CROSS.REF: * GET THE CROSS REFERENCE CODE FOR THIS REGION
************************************************************************
      HELP="Enter new cross reference code for this location. ''=Accept. 'X'=Exit."
      MASK = CROSS.REF.CODE
      CALL GEN.IN(69,9,MASK,'',Q,0,10,'','',2,69,9,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            CRT @(69,9): CROSS.REF.CODE
            RETURN
         CASE QI = ''
            CRT @(69,9): CROSS.REF.CODE
         CASE 1
            CROSS.REF.CODE = TRIM(QI)
      END CASE
      CRT @(69,9): CROSS.REF.CODE
      REG.REC<8>=CROSS.REF.CODE
      RETURN

*********************************************************************
GET.EMAIL: *  GET THE EMAIL ADDRESS FOR THIS REGION
*********************************************************************
      HELP='Options:[R]eporting [M]isrouting [X]=Exit'       ; * JMK01; * JMK03
      PRMPT='Enter Reporting or Misrouting Emails? -'        ; * JMK01; * JMK03
      CALL GEN.IN(0,22,PRMPT,'',Q,1,1,'','',2,-1,22,1,QI,HELP,0,23)
      ETYPE=OCONV(QI,'MCU')
      VIN='' ; VOUT=''
      BEGIN CASE
         CASE ETYPE='X'
            RETURN
         CASE ETYPE=''
            RETURN
         CASE ETYPE='R'
            HDG.TXT='Reporting Notification'
            VOUT<1>=REG.REC<9>
            VOUT<2>=REG.REC<12>
            VOUT<3>=REG.REC<13>
         CASE ETYPE='M'                  ; * JMK01; * JMK03
            HDG.TXT='Misrouting Notification'      ; * JMK01; * JMK03
            FOR ATT=1 TO 18              ; * JMK03
               VOUT<ATT>=REG.REC<26+ATT>           ; * JMK03
            NEXT ATT                     ; *JMK03
         CASE 1
            GOTO GET.EMAIL
      END CASE
      VIN<1>=PROG.DESC
      VIN<2>=PACK.NAME
      VIN<3>=HDG.TXT
      VIN<4>=DISPLAY.MODE
      VIN<5>=1
      IF ETYPE='M' THEN                  ; * JMK03
         VIN<6>='Y'                      ; * JMK03
         VIN<7>='Y'                      ; * JMK03
         VIN<8>='Y'                      ; * JMK03
         VIN<9>='Y'                      ; * JMK03
      END                                ; * JMK03
      CALL FB.EMAIL(VIN,VOUT)
      IF VOUT='EXIT' THEN
         STOP
      END
      BEGIN CASE
         CASE ETYPE='R' AND VIN<4>=0
            REG.REC<9>=VOUT<1>
            REG.REC<12>=VOUT<2>
            REG.REC<13>=VOUT<3>
         CASE ETYPE='M' AND VIN<4>=0     ; * JMK01; * JMK03
            FOR ATT=1 TO 18              ; *JMK03
               REG.REC<26+ATT>=VOUT<ATT>           ; * JMK03
            NEXT ATT                     ; * JMK03
      END CASE
      EMAIL.TO = REG.REC<9>
      CALL SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      CRT @(0,3) : ' Client Number....': CLIENT.ID : ' ' : CLIENT.NAME :
      CRT @(0,4) : ' Region Number..' : @(-3) :
      CRT @(18,4) : REG.ID : @(-4) :
      GOSUB DISPLAY.SCREEN
      GOSUB DISPLAY.DATA

      RETURN

************************************************************************
GET.COMMENTS:
************************************************************************
      CALL FB.1.4.NOTES(COMMENTS,QI,DISPLAY.MODE)
      IF DISPLAY.MODE='0' THEN
         REG.REC<22> = COMMENTS
      END
      CALL SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      GOSUB DISPLAY.SCREEN
      GOSUB DISPLAY.DATA
      RETURN

************************************************************************
UPDATE.INFO: ***
************************************************************************
      IF OLD.REG.REC # REG.REC THEN
         IF DISPLAY.MODE='0' THEN
            HELP="Enter either Y or N."
            LNE='Regional information changed. Update? -'
            CALL GEN.IN(0,22,LNE,'',Q,1,1,'','',2,-1,22,1,QI,HELP,0,23)
            QI=OCONV(QI,'MCU')
            BEGIN CASE
               CASE QI='Y'
                  LN=0
                  WRITE REG.REC ON F.REG.CODES,REG.ID
                  IF CLIENT.ID[1,2]#'99' THEN     ; * DRF02
                     SAGE.VIN=''     ; * DRF02
                     SAGE.VIN<1>='NEW.SAGE.CLIENT'     ; * DRF02
                     SAGE.VIN<2>=CLIENT.ID     ; * DRF02
                     SAGE.VOUT=''     ; * DRF02
                     CALL UPD.SAGE.CHANGE.REC(SAGE.VIN,SAGE.VOUT,F.SL)     ; * DRF02
                  END     ; * DRF02
                  GO GET.REG
               CASE QI='N'
                  LN=0
                  GO GET.REG
               CASE 1
                  GO UPDATE.INFO
            END CASE
         END
      END
      CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      GO GET.REG
      RETURN

************************************************************************
DISPLAY.SCREEN: ***
************************************************************************
      CRT @(0,6) :' 1 Div Descr....'
      CRT @(0,7) :' 2 Address 1....'
      CRT @(0,8) :' 3 Address 2....'
      CRT @(0,9) :' 4 Zip..........          5 State'
      CRT @(0,10) :' 6 City.........'
      CRT @(0,11) :' 7 Div. Phone...'
      CRT @(0,12) :' 8 Div. Fax.....'
      CRT @(0,13) :' 9 Contact......'
      CRT @(42,6) :'10 Status.................'
      CRT @(42,7) :'11 Substitute Region....'
      CRT @(42,8) :'12 Group Code.............'
      CRT @(42,9) :'13 Cross Ref Code.........'
      CRT @(42,10):'14 Email addresses........'
      CRT @(42,11):'15 Comments'
      RETURN

************************************************************************
DISPLAY.DATA: ***
************************************************************************
      CRT @(17,6) :REG.DESC'L#25'
      CRT @(17,7) :ADDR1'L#25'
      CRT @(17,8) :ADDR2'L#25'
      CRT @(17,9) :REG.ZIP'L#5'
      CRT @(34,9) :REG.STATE'L#2'
      CRT @(17,10):REG.CITY'L#25'
      CRT @(17,11):'(':REG.PHONE[1,3]:')':REG.PHONE[4,3]:'-':REG.PHONE[7,4]
      CRT @(17,12):'(':REG.FAX[1,3]:')':REG.FAX[4,3]:'-':REG.FAX[7,4]
      CRT @(17,13):CONTACT'L#22'
      STATUS='-Undefined'
      IF STATUS.FLG='I' THEN STATUS='-Inactive'
      IF STATUS.FLG='A' THEN STATUS='-Active'
      CRT @(69,6):STATUS.FLG:STATUS:@(-4):
      CRT @(69,7) :SUBST.REG
      CRT @(69,8) :GROUP.CODE'L#10'
      CRT @(69,9) :CROSS.REF.CODE'L#10'
      EMAIL.TMP='No'
      IF REG.REC<9>#'' THEN EMAIL.TMP='Yes'
      IF REG.REC<12>#'' THEN EMAIL.TMP='Yes'
      IF REG.REC<13>#'' THEN EMAIL.TMP='Yes'
      IF REG.REC<27>#'' THEN EMAIL.TMP='Yes'
      IF REG.REC<28>#'' THEN EMAIL.TMP='Yes'
      IF REG.REC<29>#'' THEN EMAIL.TMP='Yes'
      CRT @(69,10):EMAIL.TMP'L#4'
      RETURN

************************************************************************
ASSIGN.DATA: ***
************************************************************************
      REG.DESC=REG.REC<11>
      ADDR1 = REG.REC<14>
      ADDR2 = REG.REC<15>
      REG.ZIP = REG.REC<1>
      REG.CITY = REG.REC<16>
      REG.STATE = REG.REC<17>
      REG.PHONE = REG.REC<18>
      REG.FAX = REG.REC<19>
      SUBST.REG = REG.REC<20>
      STATUS.FLG=REG.REC<7>
      GROUP.CODE = REG.REC<21>
      CROSS.REF.CODE = REG.REC<8>
      EMAIL.TO= REG.REC<9>
      COMMENTS = REG.REC<22>
      CONTACT= REG.REC<23>
      RETURN
      END
