      SUBROUTINE FORMAT.PROS(VIN,VOUT)

      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'FORMAT.PROS' ; UPL.VOUT = ''    ; * NPR_UPL 04/23/2010
*****      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)       ; * NPR_UPL 04/23/2010
*---- PROGRAM: MASK
* 031711 - JMK01 - T110217 - Batch FB Status

      VOUT=''
      MASK.TIMES=DCOUNT(VIN<1>,@VM)
      MASK.ACTIVE=VIN<2>                 ; * Multi Valued Y/N Active Flag
      PRO.DATA=VIN<3>
      FOR MASK.CNT = 1 TO MASK.TIMES
         IF MASK.ACTIVE#'' AND MASK.ACTIVE<1,MASK.CNT>='N' OR MASK.ACTIVE<1,MASK.CNT>='L' ELSE
            DATA=VIN<1,MASK.CNT>
            MASK=''
            CHECK.MASK=''
            PRO.MASK=''

            TIMES=LEN(DATA)
            CNTR=0
            PRO.CNTR = 0
            LOOP
            CNTR=CNTR+1 UNTIL CNTR > TIMES DO
               BITE=DATA[CNTR,1]
               BEGIN CASE
                  CASE BITE="'"
                     QUOTE=0
                     FOR X = CNTR+1 TO TIMES UNTIL QUOTE=1
                        SUB.BITE=DATA[X,1]
                        IF SUB.BITE="'" THEN QUOTE=1 ELSE
                           MASK:=SUB.BITE
                           CHECK.MASK:='F'
                           IF LEN(CHECK.MASK) < LEN(PRO.DATA) THEN     ; * JMK01
                              PRO.MASK:=SUB.BITE
                           END           ; * JMK01
                        END
                     NEXT X
                     CNTR=X-1
                  CASE NUM(BITE)
                     QTY=BITE
                     IF BITE=0 THEN BITE=17        ; * Make Provisions for 0n
                     NO.NUM=0
                     FOR X = CNTR+1 TO TIMES UNTIL NO.NUM=1
                        SUB.BITE=DATA[X,1]
                        IF NOT(NUM(SUB.BITE)) THEN
                           IF SUB.BITE='A' OR SUB.BITE='N' OR SUB.BITE='X' THEN
                              CHECK.MASK:=STR('C',QTY)
                              MASK:=STR(SUB.BITE,QTY)
                              START.POS = PRO.CNTR + 1
                              PRO.MASK := PRO.DATA[START.POS,QTY]
                              PRO.CNTR = PRO.CNTR + QTY
                           END ELSE
                              CALL ELINE('Error in Mask >':DATA:'< STOP and Call Programming!!!')
                           END
                           NO.NUM=1
                        END ELSE
                           QTY:=SUB.BITE
                        END
                        CNTR=X
                     NEXT X
                  CASE BITE='A'
                  CASE BITE='N'
               END CASE
            REPEAT
            IF LEN(MASK) GE LEN(PRO.DATA) THEN     ; * JMK01
               IF LEN(PRO.DATA) LT LEN(CHECK.MASK) AND LEN(PRO.MASK) LT LEN(CHECK.MASK) THEN
                  PAD.LEN = LEN(CHECK.MASK) - LEN(PRO.DATA)
                  LEAD.PRO.MASK = PRO.MASK
                  PAD.PRO.MASK = PRO.MASK
                  FOR X = 1 TO PAD.LEN
                     LEAD.PRO.MASK = '0':LEAD.PRO.MASK
                     PAD.PRO.MASK := '0'
                  NEXT X
                  IF LEAD.PRO.MASK MATCHES DATA THEN         ; * JMK01
                     VOUT<1,-1>=MASK
                     VOUT<2,-1>=CHECK.MASK
                     VOUT<3,-1>=LEAD.PRO.MASK
                  END                    ; * JMK01
                  IF PAD.PRO.MASK MATCHES DATA THEN          ; * JMK01
                     VOUT<1,-1>=MASK
                     VOUT<2,-1>=CHECK.MASK
                     VOUT<3,-1>=PAD.PRO.MASK
                  END                    ; * JMK01
               END ELSE
                  IF PRO.MASK MATCHES DATA THEN    ; * JMK01
                     VOUT<1,-1>=MASK
                     VOUT<2,-1>=CHECK.MASK
                     VOUT<3,-1>=PRO.MASK
                  END                    ; * JMK01
               END
            END                          ; * JMK01
         END
      NEXT MASK.CNT
      RETURN

      END
