*      SUBROUTINE TEMPO1(VIN,VOUT)
************************************************************************
* Program name : TEMPO1
* Author       : Greg Bino/Nicole Hennick
* Date written : 11/17/2020
* Library      : FBBP
$* COPYRIGHT (C) 2016 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED.
*
* Load Tempo Rating
*
* Last updated by afs (AFSLOGISTICS\nmeddaugh) at 13:59:00 on 02/08/2021.
*
* Start modification history
* 02/08/21 : NKH00 : ACCU-1037 New program-Truckload rating
* End modification history
*
********************************************************************
$INCLUDE PROG.ADMIN INC_OPTIONS
$INCLUDE UNIVERSE.INCLUDE XML.H
*$INCLUDE UNIVERSE.INCLUDE UDO.H
*$INCLUDE INCLUDE UDO.H

      * Logging
      logfile="restpost"
****      stat = protocolLogging(logfile, "ON", 10)

      * Initialize variables   
      RESP = ''

      * Open Files

      * Rest Request    
      VIN = ''  
      VIN<1> = '06885'
      VIN<2> = '11/05/2020'
      VIN<3> = '27530'
      VIN<4> = '02766'
      VIN<5> = '0'
      VIN<6> = 'O'
      VIN<7> = 1
      VIN<8> = '29008'
      VIN<9> = 'TL'

      VIN = ''  
      VIN<1> = '06916'
      VIN<2> = '02/03/2021'
      VIN<3> = '53115'
      VIN<4> = '47336'
      VIN<5> = '0'
      VIN<6> = 'O'
      VIN<7> = 1
      VIN<8> = '11000'
*VIN<8> = '0'
      VIN<9> = 'TL'
            

**      VIN<3> = '34243'
**      VIN<4> = '30349'

      
      CLIENT.ID = VIN<1>
      SHIP.DT = VIN<2>
      ORIG.ZIP = VIN<3>
      DEST.ZIP = VIN<4>
      CLASS = VIN<5>
      DIRECTION = VIN<6>
      PALLETS = VIN<7>
      WEIGHT = VIN<8>
      MODE = VIN<9>
*DEBUG      
*      CLIENT.ID = '06885'
*      SHIP.DT = '11/5/2020'
*      ORIG.ZIP = 27530
*      DEST.ZIP = '02766'
*      CLASS = 60
*      DIRECTION ='O'
*      PALLETS = 1
*      WEIGHT = 29008
*      MODE = 'TL'
      
      URL = 'https://tms.afs.net/api/Tempo.asmx/GetRates?clientId=':CLIENT.ID:'&shipmentDate=':SHIP.DT:'&origZip=':ORIG.ZIP:'&destZip=':DEST.ZIP:'&freightClass=':CLASS:'&direction=':DIRECTION:'&pallets=':PALLETS:'&WEIGHT=':WEIGHT:'&MODE=':MODE
      METHOD = "GET"
      hndRequest = ""
      STAT = SETHTTPDEFAULT("VERSION", "1.1")

      STAT = createSecurityContext(CTX, "TLSv1.2")
      STAT = createSecureRequest(URL, METHOD, hndRequest, CTX)
      STAT = SETREQUESTHEADER(hndRequest, "Content-Type", "charset=utf-8 ")

      HEADER = ""
      RESTDATA=""
      httpstatus = ""
      STAT = submitRequest(hndRequest, 300000, "", HEADER, RESTDATA, httpstatus)


      * Parse Response
      RESTDATA = CHANGE(RESTDATA, '<Type />','<Type> </Type>')
      RESTDATA = CHANGE(RESTDATA, '<Name />','<Name> </Name>')   
      
CRT 'RESTDATA: ':RESTDATA;INPUT CONT         

      RATE.DTL.CNT = (COUNT(RESTDATA,'<TempoRaterRate>')) 
      STAT.VAL = 'Tempo Rating Main Document'
      ST = XDOMOpen(RESTDATA, XML.FROM.STRING, MYDOM)  ; *GOSUB CHECK.XML.STATUS 

      ST = XDOMLocate(MYDOM,"/","",Main.Handle) ; *GOSUB CHECK.XML.STATUS
      
         ST = XDOMLocateNode(Main.Handle, XDOM.CHILD, XDOM.FIRST.CHILD, XDOM.ELEMENT.NODE, ArrayOfTempoRaterRate.Handle) ; *GOSUB CHECK.XML.STATUS      
         FOR RC = 1 TO RATE.DTL.CNT
            STAT.VALUE = 'TempoRaterRate'
            ST = XDOMLocateNode(ArrayOfTempoRaterRate.Handle, XDOM.CHILD, RC, XDOM.ELEMENT.NODE, TempoRaterRate.Handle) ; *GOSUB CHECK.XML.STATUS            
               
               STAT.VAL = 'Scac'
               ST = XDOMLocateNode(TempoRaterRate.Handle, XDOM.CHILD, 1, XDOM.ELEMENT.NODE, Scac.Handle) ; *GOSUB CHECK.XML.STATUS
               ST = XDOMGetNodeValue(Scac.Handle, NODE.VALUE)  ; *GOSUB CHECK.XML.STATUS  
*CRT NODE.VALUE               
               RESP<1,RC> = NODE.VALUE ; NODE.VALUE = ''              
               
               STAT.VAL = 'Mode'
               ST = XDOMLocateNode(TempoRaterRate.Handle, XDOM.CHILD, 2, XDOM.ELEMENT.NODE, Mode.Handle) ; *GOSUB CHECK.XML.STATUS
               ST = XDOMGetNodeValue(Mode.Handle, NODE.VALUE)  ; *GOSUB CHECK.XML.STATUS
*CRT NODE.VALUE                              
               RESP<2,RC> = NODE.VALUE ; NODE.VALUE = ''                          

               STAT.VAL = 'Service'
               ST = XDOMLocateNode(TempoRaterRate.Handle, XDOM.CHILD, 3, XDOM.ELEMENT.NODE, Service.Handle) ; *GOSUB CHECK.XML.STATUS
               ST = XDOMGetNodeValue(Service.Handle, NODE.VALUE)  ; *GOSUB CHECK.XML.STATUS
*CRT NODE.VALUE                              
               RESP<3,RC> = NODE.VALUE ; NODE.VALUE = ''                          

               STAT.VAL = 'GrossRate'
               ST = XDOMLocateNode(TempoRaterRate.Handle, XDOM.CHILD, 4, XDOM.ELEMENT.NODE, GrossRate.Handle) ; *GOSUB CHECK.XML.STATUS
               ST = XDOMGetNodeValue(GrossRate.Handle, NODE.VALUE)  ; *GOSUB CHECK.XML.STATUS
*CRT NODE.VALUE                              
               RESP<4,RC> = NODE.VALUE ; NODE.VALUE = ''                          

               STAT.VAL = 'DiscoutRate'
               ST = XDOMLocateNode(TempoRaterRate.Handle, XDOM.CHILD, 5, XDOM.ELEMENT.NODE, DiscountRate.Handle) ; *GOSUB CHECK.XML.STATUS
               ST = XDOMGetNodeValue(DiscountRate.Handle, NODE.VALUE)  ; *GOSUB CHECK.XML.STATUS
*CRT NODE.VALUE                              
               RESP<5,RC> = NODE.VALUE ; NODE.VALUE = ''                          

               STAT.VAL = 'TransitDays'
               ST = XDOMLocateNode(TempoRaterRate.Handle, XDOM.CHILD, 6, XDOM.ELEMENT.NODE, TransitDays.Handle) ; *GOSUB CHECK.XML.STATUS
               ST = XDOMGetNodeValue(TransitDays.Handle, NODE.VALUE)  ; *GOSUB CHECK.XML.STATUS
*CRT NODE.VALUE                              
               RESP<6,RC> = NODE.VALUE ; NODE.VALUE = ''    

               idx = 6
               LOOP
               idx += 1
                  ST = XDOMLocateNode(TempoRaterRate.Handle, XDOM.CHILD, idx, XDOM.ELEMENT.NODE, Surcharges.Handle) ;  *GOSUB CHECK.XML.STATUS
               WHILE ST = XML.SUCCESS
                  ST = XDOMGetNodeValue(Surcharges.Handle, NODE.VALUE)  ; *GOSUB CHECK.XML.STATUS
*ST = XDOMGetNodeName(Surcharges.Handle, NODE.NAME)  ; *GOSUB CHECK.XML.STATUS
*CRT NODE.NAME
*CRT NODE.VALUE
                  
                  IDX = 0
                  ARR.VAL=0
                  LOOP
                     IDX+=1
                     ARR.VAL+=1
                     ST = XDOMLocateNode(Surcharges.Handle, XDOM.CHILD, IDX, XDOM.ELEMENT.NODE, nodeHandle) ;  *GOSUB CHECK.XML.STATUS
                  WHILE ST = XML.SUCCESS
                     ST = XDOMLocateNode(nodeHandle, XDOM.CHILD, 1, XDOM.ELEMENT.NODE, Type.Handle) ; *GOSUB CHECK.XML.STATUS
                     ST = XDOMGetNodeName(Type.Handle, NODE.NAME)   ; *GOSUB CHECK.XML.STATUS                     
                     ST = XDOMGetNodeValue(Type.Handle, NODE.VALUE)  ; *GOSUB CHECK.XML.STATUS
                     RESP<7,RC,IDX> = NODE.VALUE ; NODE.VALUE = ''
*CRT NODE.NAME
*CRT NODE.VALUE
                     ST = XDOMLocateNode(nodeHandle, XDOM.CHILD, 2, XDOM.ELEMENT.NODE, Name.Handle) ; *GOSUB CHECK.XML.STATUS
                     ST = XDOMGetNodeName(Name.Handle, NODE.NAME)   ; *GOSUB CHECK.XML.STATUS                                          
                     ST = XDOMGetNodeValue(Name.Handle, NODE.VALUE)  ; *GOSUB CHECK.XML.STATUS
                     RESP<8,RC,IDX> = NODE.VALUE ; NODE.VALUE = ''
*CRT NODE.NAME
*CRT NODE.VALUE
                     ST = XDOMLocateNode(nodeHandle, XDOM.CHILD, 3, XDOM.ELEMENT.NODE, Rate.Handle) ; *GOSUB CHECK.XML.STATUS
                     ST = XDOMGetNodeName(Rate.Handle, NODE.NAME)   ; *GOSUB CHECK.XML.STATUS                                          
                     ST = XDOMGetNodeValue(Rate.Handle, NODE.VALUE)  ; *GOSUB CHECK.XML.STATUS
                     RESP<9,RC,IDX> = NODE.VALUE ; NODE.VALUE = ''
*CRT NODE.NAME
*CRT NODE.VALUE

                  REPEAT                  
               REPEAT
         NEXT RC
      
CRT 'RESP: ':RESP  
         VOUT = RESP   
         GOTO PROGRAM.END 
*Pull out the XML values and store them in an array and/or temp file.

************************************************************************      
CHECK.XML.STATUS: * For testing 
************************************************************************      
      IF ST = XML.SUCCESS THEN
         CRT 'Success'
      END ELSE
         EC = XMLGetError(errorCode, errorMessage)
         CRT STAT.VAL
         CRT "ERROR CODE   :":errorCode
         CRT "ERROR MESSAGE:":errorMessage
      END

      RETURN  


*************************************************************************
PROGRAM.END:
*************************************************************************                    
      PRINT "*** End of program ***"
*      STOP
      RETURN

END

