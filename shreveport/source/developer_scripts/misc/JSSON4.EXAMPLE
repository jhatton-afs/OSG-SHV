*******************************************************************************
*       Program UDO.GEOTOADDR
*       Copyright (C) 2017
*******************************************************************************
*  Author: Pchang
*  Created on:  01/24/2017
*  Description: It will use Google Map API and U2 Dynamic Object
*               to return the address based on the latitude and longitude.
*
*****************************************************************************
$INCLUDE UNIVERSE.INCLUDE UDO.H
**$INCLUDE INCLUDE UDO.H
*
* Create the URL for Google Ge Code API
* Sample latitude and longitude information
*
lat = "39.631840"
lng = "-104.895948"
lat = "39.046241"
lng = "-94.257829"

*
url = "https://maps.googleapis.com/maps/api/geocode/json?latlng=":lat:",":lng
method = "GET"
hndRequest = ""
 
st = createSecurityContext(ctx, "TLSv1.2")
st = createSecureRequest(url, method, hndRequest, ctx)
st = submitRequest(hndRequest, 3600, "", headers, data, httpstatus)
 
* data: JSON formatted data
 
IF UDORead(data, UDOFORMAT_JSON, RESTMSG) NE UDO_SUCCESS THEN GOSUB ERR.HANDLER
 
address = ""
IF UDOGetProperty(RESTMSG, "results", results, UDOTYPE) NE UDO_SUCCESS THEN GOSUB ERR.HANDLER
 
* Get a list: multiple "address_components" => get a list => street_number, route, ...
* https://developers.google.com/maps/documentation/geocoding/start
* "formatted_address" : "77 Fourth Avenue, Waltham, MA 02451, USA"
 
* UDO data type 5: Array
* UDO data type 6: Object
 
IF UDOTYPE = 5 THEN
    IF UDOArrayGetSize(results, ITEM_SIZE) NE UDO_SUCCESS THEN GOSUB ERR.HANDLER
    FOR I = 1 TO ITEM_SIZE
        IF UDOArrayGetItem(results, I, result_udo, UDOTYPE) NE UDO_SUCCESS THEN GOSUB ERR.HANDLER
*
        IF UDOTYPE = 6 THEN
            IF UDOGetProperty(result_udo, "formatted_address", address, UDOTYPE) NE UDO_SUCCESS THEN GOSUB ERR.HANDLER
            CRT "Address":I:": ":address
        END
    NEXT I
END
 
IF UDOFree(RESTMSG) NE UDO_SUCCESS THEN GOSUB ERR.HANDLER
PRINT "*** End of program ***"
STOP
 
ERR.HANDLER:
  ERRCODE = ""; ERRMSG = ""
  S = UDOGetLastError(ERRCODE, ERRMSG)
  CRT "UDO ERROR: (":ERRCODE:") ":ERRMSG
  STOP
RETURN
