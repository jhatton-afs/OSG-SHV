********************************************************************************
*  Program : FEDEX.BENCHMARK.SETUP
*  Author  : David R Friend
*  Date    : February 26 2007
********************************************************************************
*
*      COPYRIGHT (C) 2002 by AFS LOGISTICS, LLC. - ALL RIGHTS RESERVED
*
*  This program is the sole property of AFS Logistics, LLC (AUTOMATED FREIGHT
*  SYSTEMS) and may not be used, copied, or modified without the express
*  written consent of Brian Barker of AFS Logistics, LLC.
********************************************************************************
* Includes
$INCLUDE FILE.DEFS INC_ADDS60.CODES; * These require specific PROCOMM settings

* Equates
    EQU TRUE             TO 1
    EQU FALSE            TO 0

* Initialize general program variables
    PROMPT''
    PORT.NUM=SYSTEM(19)
    CALL GET.USER(USER.NAME)
    PROG.NAME='FEDEX.BM.SETUP'
    PROG.DESC='Old FedEx Logistics Benchmarks'
    PACK.NAME='USER : ':USER.NAME
    CO.NAME='AFS Logistics, LLC'
     UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FEDEX.BM.SETUP' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
     CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
    EDIT.MASK.CHAR='-'
    PLACE.HOLDER='~~ PLACE*HOLDER ~~'

* Initialize operating variables
    PAGE.SIZE=13;       * Number of lines per page
    START.Y=7;          * Starting y-position on the screen minus one

    BENCHMARK.REC=''
    OLD.BENCHMARK.REC=''
    SERVICE.DESCRIPTION.REC=''

    CLIENT.ID=''
    DIVISION.CODE=''
    TRANS.TYPE=''
    DOM.INT=''
    MODE=''
    CLIENT.NAME=''
    CLIENT.CITY=''
    CLIENT.STATE=''

* Set access privileges
* 3 Levels of access:
*    0 - Access Denied
*    1 - View Access only
*    2 - Full View/Edit Access

    BEGIN CASE
       CASE USER.NAME='OWEN'
          USER.ACCESS=2
       CASE USER.NAME='CHRIS'
          USER.ACCESS=2
       CASE USER.NAME='JDARWIN'
          USER.ACCESS=2
       CASE USER.NAME='NRATH'
          USER.ACCESS=2
       CASE USER.NAME='RRANEY'
          USER.ACCESS=2
       CASE USER.NAME='DAVID'
          USER.ACCESS=2
       CASE USER.NAME='MKERBOW'
          USER.ACCESS=2
       CASE USER.NAME='BRIANP'
          USER.ACCESS=2
       CASE USER.NAME='NPRATT'
          USER.ACCESS=2
       CASE USER.NAME='PBASS'
          USER.ACCESS=2
       CASE 1
          USER.ACCESS=1
    END CASE

    IF USER.ACCESS=0 THEN PROG.DESC:=' - Access Denied'
    IF USER.ACCESS=1 THEN PROG.DESC:=' - View Access'
    IF USER.ACCESS=2 THEN PROG.DESC:=' - Full Access'
    GOSUB DISPLAY.SCREEN

    IF USER.ACCESS=0 THEN
       CALL FB.PRINT.CENT(1,80,12,'Restricted Access Application - Access Denied')
       CALL FB.PRINT.CENT(1,80,14,'Request access through Chris Mendenhall')
       CALL ELINE('')
       GOTO THE.END
    END

* Open files
    OPEN '','CLIENTS' TO F.CLIENTS ELSE
       CALL OPEN.ABORT('CLIENTS',PROG.NAME)
    END
    OPEN '','FB.TABLES' TO F.TABLES ELSE
       CALL OPEN.ABORT('FB.TABLES',PROG.NAME)
    END
    OPEN '','FEDEX.BM' TO F.FEDEX.BM ELSE
       CALL OPEN.ABORT('FEDEX.LOGISTICS.BM',PROG.NAME)
    END

GET.CLIENT:***
    IF CLIENT.ID#'' AND CLIENT.ID#'TEMPLATE' THEN
       EDIT.MASK=CLIENT.ID'R%5'
    END ELSE
      IF CLIENT.ID#'TEMPLATE' THEN
         EDIT.MASK=STR(EDIT.MASK.CHAR,5)
      END
    END
    HELP='Enter client ID or [TEMPLATE]. [L]ist existing benchmark setups [EX]it'
    CALL GEN.IN(9,3,EDIT.MASK,'',Q,0,20,'','',2,9,3,0,QI,HELP,0,23)
    QI=OCONV(QI,'MCU')
    IF QI='' AND CLIENT.ID THEN QI=CLIENT.ID
    BEGIN CASE
       CASE QI='EX'
          GOTO THE.END
       CASE QI='L'
          GOSUB DISPLAY.BENCHMARKS
          GOSUB DISPLAY.SCREEN
          GOTO GET.CLIENT
       CASE QI='TEMPLATE'
          CLIENT.ID=QI
       CASE NOT(QI MATCHES "0N")
          CALL SOUNDEX.DISPLAY(QI,'CLIENTS','SDX.CLIENTS,NAME','2,3,4',ITEM.LIST)
          BEGIN CASE
             CASE ITEM.LIST=''
             CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
             CASE ITEM.LIST#''
                IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
          END CASE
          GOSUB DISPLAY.SCREEN
          GOTO GET.CLIENT
       CASE NUM(QI) AND QI#''
          QI=QI'R%5'
          READ CLIENT.REC FROM F.CLIENTS,QI THEN
             CLIENT.ID=QI
             CLIENT.NAME=CLIENT.REC<2>
             CLIENT.CITY=CLIENT.REC<4>
             CLIENT.STATE=CLIENT.REC<5>
             IF CLIENT.REC<12>='Y' THEN
               OPEN '','DIVISION.CODES,':CLIENT.ID TO F.DIVISION.CODES ELSE
                 CALL OPEN.ABORT("DIVISION.CODES,":CLIENT.ID,PROG.NAME)
               END
             END ELSE
               DIVISION.CODE='ALL'
               IF CLIENT.ID='TEMPLATE' THEN
                  CLIENT.TXT=CLIENT.ID:' - Template'
               END ELSE
                 CLIENT.TXT=CLIENT.ID'R%5':' ':CLIENT.NAME:' (':CLIENT.CITY:', ':CLIENT.STATE:')'
               END
               CRT @(9,3):CLIENT.TXT'L#50'
               CRT @(72,3):DIVISION.CODE'L#5'
               GOTO GET.TRANS.TYPE
             END
          END ELSE
             CALL ELINE('ERROR - Client ':QI:' is not a valid client.')
             GOTO GET.CLIENT
          END
       CASE 1
          GOTO GET.CLIENT
    END CASE
    IF CLIENT.ID='TEMPLATE' THEN
       CLIENT.TXT=CLIENT.ID:' - Template'
    END ELSE
      CLIENT.TXT=CLIENT.ID'R%5':' ':CLIENT.NAME:' (':CLIENT.CITY:', ':CLIENT.STATE:')'
    END
    CRT @(9,3):CLIENT.TXT'L#50'
    IF CLIENT.ID='TEMPLATE' THEN 
      DIVISION.CODE='ALL'
      CRT @(72,3):DIVISION.CODE'L#5'
      TRANS.TYPE=1
      CRT @(12,4):TRANS.TYPE'L#2'
      CRT @(15,4):'Normal'
      DOM.INT='D'
      CRT @(50,4):DOM.INT'L#2'
      MODE='A'
      GO TEMPLATE.SKIP
    END

    IF CLIENT.REC<12>='Y' THEN
GET.DIVISION:***
       HELP = "Enter Division Code for Client ID # '":CLIENT.ID:"' [X]=Back [EX]=Exit"
       IF DIVISION.CODE = '' THEN
           DIVISION.CODE = 'ALL'
       END
       MASK = DIVISION.CODE
       CALL GEN.IN(72,3,MASK,'',Q,0,5,'','',2,72,3,1,QI,HELP,0,23)
       QI = TRIM(OCONV(QI,'MCU'))
       IF QI='' THEN QI=DIVISION.CODE

       BEGIN CASE
           CASE QI = 'EX'
              GOTO THE.END
           CASE QI = 'X'
              CRT @(72,3):'     '
              GOTO GET.CLIENT
           CASE QI = ' ' OR QI='ALL'
              QI='ALL'
           CASE QI # ''
               QI=QI'R%5'
               READ DDIVISION.CODE FROM F.DIVISION.CODES,QI ELSE
                 CALL ELINE(QI:' Is not on file. Please Try again')
                 GOTO GET.DIVISION
               END
               IF DDIVISION.CODE<7>='I' THEN
                 CALL ELINE(QI:' Is not an active division. Please Try Again')
                 GOTO GET.DIVISION
               END
               DIVISION.CODE = QI
           CASE 1
               CALL ELINE('Invalid option, Try Again.')
               GOTO GET.DIVISION
       END CASE
       CRT @(72,3):DIVISION.CODE'L#5'
    END

GET.TRANS.TYPE:***
    IF TRANS.TYPE='' THEN
       TRANS.TYPE=1
    END
    EDIT.MASK=TRANS.TYPE
    HELP='Enter Transacation Type [1] Normal [2] Multiweight or  [EX]it'
    CALL GEN.IN(12,4,EDIT.MASK'L#2','',Q,0,2,'','',2,12,4,0,QI,HELP,0,23)
    QI=OCONV(QI,'MCU')
    IF QI='' AND TRANS.TYPE#'' THEN QI=TRANS.TYPE
    BEGIN CASE
       CASE QI='EX'
          GOTO THE.END
       CASE QI='X'
          CRT @(12,4):'              '
          IF CLIENT.REC<12>='Y' THEN
            GOTO GET.DIVISION
          END ELSE
            GOTO GET.CLIENT
          END
       CASE QI='1'
          TRANS.TYPE=1
          CRT @(15,4):'Normal         '
       CASE QI='2'
          TRANS.TYPE=2
          CRT @(15,4):'Multiweight    '
       CASE 1
          CALL ELINE('Invalid Entry')
          GOTO GET.TRANS.TYPE
    END CASE
    CRT @(12,4):TRANS.TYPE'L#2'

GET.DOM.INT:***
    IF DOM.INT='' THEN
       DOM.INT='D'
    END
    EDIT.MASK=DOM.INT
    HELP='Enter [D]omestic or [I]nternational or  [EX]it'
    CALL GEN.IN(50,4,EDIT.MASK'L#2','',Q,0,2,'','',2,50,4,0,QI,HELP,0,23)
    QI=OCONV(QI,'MCU')
    IF QI='' AND DOM.INT#'' THEN QI=DOM.INT
    BEGIN CASE
       CASE QI='EX'
          GOTO THE.END
       CASE QI='X'
          CRT @(50,4):'  '
          GOTO GET.TRANS.TYPE
       CASE QI='D'
       CASE QI='I'
       CASE 1
          CALL ELINE('Invalid Entry')
          GOTO GET.DOM.INT
    END CASE
    DOM.INT=QI
    CRT @(50,4):DOM.INT'L#2'

GET.MODE:***
    IF MODE#'' THEN
       EDIT.MASK=MODE'L#2'
    END ELSE
       EDIT.MASK=STR(EDIT.MASK.CHAR,2)
    END
    HELP='Enter Mode. [I]nbound, [O]utbound, [T]hird Party or [A]ll  [EX]it'
    CALL GEN.IN(72,4,EDIT.MASK,'',Q,0,2,'','',2,72,4,1,QI,HELP,0,23)
    QI=OCONV(QI,'MCU')
    IF QI='' AND MODE#'' THEN QI=MODE
    BEGIN CASE
       CASE QI='EX'
          GOTO THE.END
       CASE QI='X'
          CRT @(72,4):'  '
          GOTO GET.DOM.INT
       CASE QI='I'
          MODE='I'
       CASE QI='O'
          MODE='O'
       CASE QI='T'
          MODE='T'
       CASE QI='A'
          MODE='A'
       CASE 1
          CALL ELINE('Invalid Entry')
          GOTO GET.MODE
    END CASE
TEMPLATE.SKIP:***
    CRT @(72,4):MODE'L#2'

* Load list of service descriptions from FB.TABLES
* This is the master list built by EBILL.IMPORT as the e-Bill files are read
    READ TEMP.SERVICE.DESCRIPTION.REC FROM F.TABLES,'SHP*EDI' ELSE
       CALL ELINE('Could not load FedEx Service Descriptions - Aborting.')
       GOTO THE.END
    END
    FOR X = 1 TO 3
      SERVICE.DESCRIPTION.REC<X>=TEMP.SERVICE.DESCRIPTION.REC<X>
    NEXT X
    NUM.SD=DCOUNT(SERVICE.DESCRIPTION.REC<1>,@VM)

* Load BENCHMARK record
* Add any new service descriptions that have been inserted into FB.TABLES
    FEDEX.BM.ID=CLIENT.ID:'*':DIVISION.CODE:'*':TRANS.TYPE:'*':DOM.INT:'*':MODE
    READ BENCHMARK.REC FROM F.FEDEX.BM,FEDEX.BM.ID THEN
       FOR X=1 TO NUM.SD
          SERVICE.DESCRIPTION=SERVICE.DESCRIPTION.REC<1,X>
          LOCATE SERVICE.DESCRIPTION IN BENCHMARK.REC<1> BY 'AL' SETTING POS ELSE
             INS SERVICE.DESCRIPTION BEFORE BENCHMARK.REC<1,POS>
             INS '' BEFORE BENCHMARK.REC<2,POS>
             INS '' BEFORE BENCHMARK.REC<3,POS>
          END
       NEXT X
    END ELSE
       YN.MSG='Item is not on file. Do you wish to create it from the template?'
       YN.MASK=''
       GOSUB ASK.Y.OR.N
       IF YN.ANSWER='N' THEN
         GOTO GET.CLIENT
       END
       READ BENCHMARK.REC FROM F.FEDEX.BM,'TEMPLATE*ALL*1*D*A' ELSE
         BENCHMARK.REC=SERVICE.DESCRIPTION.REC
         FOR X=1 TO NUM.SD
            BENCHMARK.REC<2,X>=''
            BENCHMARK.REC<3,X>=''
         NEXT X
      END
    END
    WRITE BENCHMARK.REC ON F.FEDEX.BM,FEDEX.BM.ID; * Write the new record with added service descriptions
    OLD.BENCHMARK.REC=BENCHMARK.REC

* Calculate number of items and number of pages and set page number
    NUM.SD=DCOUNT(BENCHMARK.REC<1>,@VM)
    NUM.PAGES=INT(NUM.SD/PAGE.SIZE)
    IF REM(NUM.SD,PAGE.SIZE) THEN NUM.PAGES+=1
    PAGE.NUMBER=1
    GOSUB DISPLAY.PAGE

MAIN.START:***
    CRT @(0,22):'Enter number of service description to edit: --':@(-4)
    EDIT.MASK=STR(EDIT.MASK.CHAR,2)
    HELP='[B]ack Page [F]orward Page [T]op Page [L]ast Page [U]pdate [D]elete'
    CALL GEN.IN(45,22,EDIT.MASK,'',Q,0,2,'','',2,45,22,0,QI,HELP,0,23)
    QI=OCONV(QI,'MCU')
    BEGIN CASE
       CASE QI='EX'; * Exit
          IF USER.ACCESS=1 THEN GOTO THE.END
          GOTO LAST.CHANCE.TO.SAVE
       CASE QI='X'; * Back to client
          IF USER.ACCESS=1 THEN
             GOSUB DISPLAY.SCREEN
             GOTO GET.CLIENT
          END
          IF BENCHMARK.REC#OLD.BENCHMARK.REC THEN
             YN.MSG='You have unsaved changes. Save before entering new client?'
             YN.MASK=''
             GOSUB ASK.Y.OR.N
             IF YN.ANSWER='Y' THEN
                CRT @(0,22):'Saving...':@(-3)
                SLEEP 1
                GOSUB SAVE.BENCHMARK.REC
                GOSUB DISPLAY.PAGE
             END
          END
          GOSUB DISPLAY.SCREEN
          GOTO GET.CLIENT
       CASE QI='U'; * Update (and exit)
          IF USER.ACCESS=1 THEN GOTO THE.END
          IF BENCHMARK.REC#OLD.BENCHMARK.REC THEN
             CRT @(0,22):'Saving...':@(-3)
             SLEEP 1
             GOSUB SAVE.BENCHMARK.REC
             GOSUB DISPLAY.PAGE
          END ELSE
             CRT @(0,22):'No changes to save.':@(-3)
             SLEEP 1
          END
          GOTO THE.END
       CASE QI='D'; * Delete 
          IF USER.ACCESS=1 THEN GOTO THE.END
          YN.MSG='Are you sure you want to delete this benchmark?'
          YN.MASK=''
          GOSUB ASK.Y.OR.N
          IF YN.ANSWER='Y' THEN
                CRT @(0,22):'Deleting...':@(-3)
                SLEEP 1
                DELETE F.FEDEX.BM,FEDEX.BM.ID
                GOSUB DISPLAY.PAGE
          END
          GOSUB DISPLAY.SCREEN
          GOTO GET.CLIENT
       CASE QI='L' OR QI='LP'; * Last Page
          IF NUM.PAGES#0 AND PAGE.NUMBER#NUM.PAGES THEN
             PAGE.NUMBER=NUM.PAGES
             GOSUB DISPLAY.PAGE
          END ELSE
             CALL ELINE('** LAST PAGE **')
          END
          GOTO MAIN.START
       CASE QI='T' OR QI='TP'; * Top Page
          IF NUM.PAGES#0 AND PAGE.NUMBER#1 THEN
             PAGE.NUMBER=1
             GOSUB DISPLAY.PAGE
          END ELSE
             CALL ELINE('** FIRST PAGE **')
          END
          GOTO MAIN.START
       CASE QI='F' OR QI='FP'; * Forward a page
          IF NUM.PAGES#0 AND PAGE.NUMBER<NUM.PAGES THEN
             PAGE.NUMBER+=1
             GOSUB DISPLAY.PAGE
          END ELSE
             CALL ELINE('** LAST PAGE **')
          END
          GOTO MAIN.START
       CASE QI='B' OR QI='BP'; * Backward a page
          IF NUM.PAGES#0 AND PAGE.NUMBER>1 THEN
             PAGE.NUMBER-=1
             GOSUB DISPLAY.PAGE
          END ELSE
             CALL ELINE('** FIRST PAGE **')
          END
          GOTO MAIN.START
       CASE QI=''; * Enter data starting from the top and continuing to the bottom
          IF USER.ACCESS=1 THEN GOTO MAIN.START
          BACK.FLAG=FALSE
          GOSUB ENTER.DATA
          GOTO MAIN.START
       CASE NUM(QI) AND QI#''; * Edit service description number
          IF USER.ACCESS=1 THEN GOTO MAIN.START
          IF QI>=1 AND QI<=NUM.SD THEN
             EDIT.NUMBER=QI
             BACK.FLAG=FALSE
             GOSUB EDIT.BENCHMARK
          END ELSE
             CALL ELINE('No service description to EDIT.')
          END
          GOTO MAIN.START
       CASE QI='*' AND USER.NAME='JAMES'; * Show contents of BENCHMARK.REC
          CRT @(-1)
          CRT @(0,0):BENCHMARK.REC
          CALL ELINE('Viewing DEBUG Screen.')
          GOSUB DISPLAY.SCREEN
          GOSUB DISPLAY.PAGE
          GOTO MAIN.START
       CASE 1
          GOTO MAIN.START
    END CASE

********************************************************************************
* Start of internal subroutines
********************************************************************************

DISPLAY.SCREEN:***
* Display the basic screen setup

    CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
    CRT @(0,2):STR('=',79):
    CRT @(0,3):'CLIENT :'
    CRT @(62,3):'DIVISION :'
    CRT @(0,4):'TRANS TYPE :'
    CRT @(40,4):'DOM/INTL :'
    CRT @(66,4):'MODE :'
    CRT @(0,5):STR('=',79):
    CRT @(0,21):STR('=',79):
    IF CLIENT.ID AND CLIENT.ID#'TEMPLATE' THEN
       CLIENT.TXT=CLIENT.ID'R%5':' ':CLIENT.NAME:' (':CLIENT.CITY:', ':CLIENT.STATE:')'
       CRT @(9,3):CLIENT.TXT'L#50'
       IF CLIENT.REC<12>='Y' THEN
         IF DIVISION.CODE THEN
           IF DIVISION.CODE='ALL' THEN
             CRT @(72,3):'ALL  '
           END ELSE
             CRT @(72,3)DIVISION.CODE'R%5'
           END
         END
       END
    END
    IF MODE#'' THEN
      CRT @(72,4):MODE'L#2'
    END

    CRT @(0,6):'##  Service Description               Old Pck Benchmark %  Old Ltr Benchmark %'
    CRT @(0,7):'--  --------------------------------  -------------------  -------------------'

    RETURN

********************************************************************************

DISPLAY.PAGE:***
* This routine displays a given page
* Input:  PAGE.NUMBER

    STR.OUT='[Page ':PAGE.NUMBER:' of ':NUM.PAGES:']'
    CRT @(78-LEN(STR.OUT),5):STR.OUT
    Y=1; * Screen position
    IF PAGE.NUMBER=0 THEN
       LINE.NUM=1
    END ELSE
       LINE.NUM=(PAGE.NUMBER-1)*PAGE.SIZE+1
    END
    LOOP WHILE Y<=PAGE.SIZE
       BEGIN CASE
          CASE LINE.NUM>NUM.SD
             * Print nothing - actually clears line
             SCREEN.LINE=LINE.NUM'R%2'
          CASE BENCHMARK.REC<1,LINE.NUM>=''
             SCREEN.LINE=LINE.NUM'R%2'
          CASE 1
             GOSUB FORMAT.LINE
             SCREEN.LINE=FORMATTED.LINE
       END CASE
       CRT @(0,START.Y+Y):SCREEN.LINE:@(-4); * Draw screen line
       Y+=1; * Inc screen position
       LINE.NUM+=1
    REPEAT
    RETURN

********************************************************************************

FORMAT.LINE:***
* Format a single line for screen or printer display

    FORMATTED.LINE=LINE.NUM'R%2':SPACE(2)
    FORMATTED.LINE:=BENCHMARK.REC<1,LINE.NUM>'L#3':SPACE(1)
    LOCATE BENCHMARK.REC<1,LINE.NUM> IN SERVICE.DESCRIPTION.REC<1> SETTING POS THEN
       FORMATTED.LINE:=SERVICE.DESCRIPTION.REC<2,POS>'L#28':SPACE(8)
    END ELSE
       FORMATTED.LINE:='Unknown Service''L#28':SPACE(8)
    END
    IF BENCHMARK.REC<2,LINE.NUM>#'' THEN
       FORMATTED.LINE:=BENCHMARK.REC<2,LINE.NUM>'R26#6'
    END ELSE
       FORMATTED.LINE:=SPACE(6)
    END
    IF BENCHMARK.REC<3,LINE.NUM>#'' THEN
      FORMATTED.LINE:=SPACE(15):BENCHMARK.REC<3,LINE.NUM>'R26#6'
    END
    RETURN

********************************************************************************

ENTER.DATA:***
* Allow the entry and editing of the data from the top of the list to the bottom

    EDIT.NUMBER=1
    LOOP WHILE EDIT.NUMBER>=1 AND EDIT.NUMBER<=NUM.SD
       GOSUB EDIT.BENCHMARK
       IF BACK.FLAG THEN
          EDIT.NUMBER-=1
       END ELSE
          EDIT.NUMBER+=1
       END
    REPEAT
    RETURN

********************************************************************************

EDIT.BENCHMARK:***
* Edit an existing service description's benchmark
* Input: EDIT.NUMBER set to the number to edit

    PAGE.NUMBER=INT(EDIT.NUMBER/PAGE.SIZE)
    IF PAGE.NUMBER*PAGE.SIZE<EDIT.NUMBER THEN PAGE.NUMBER+=1
    GOSUB DISPLAY.PAGE

    EDIT.Y=EDIT.NUMBER-(PAGE.NUMBER*PAGE.SIZE)+PAGE.SIZE
    Y.POS=START.Y+EDIT.Y

*DF    GOSUB ASSIGN.FIELDS.OUT
    GOSUB PROCESS.DATA
*DF    IF NOT(BACK.FLAG) THEN
*DF       GOSUB ASSIGN.FIELDS.IN
*DF    END
    GOSUB DISPLAY.PAGE
    RETURN

********************************************************************************

ASSIGN.FIELDS.OUT:***
* Grab data from the array for editing

    BENCHMARK=BENCHMARK.REC<2,EDIT.NUMBER>
    RETURN

********************************************************************************

ASSIGN.FIELDS.IN:***
* Assign data back into the array

    BENCHMARK.REC<2,EDIT.NUMBER>=BENCHMARK
    RETURN

********************************************************************************

PROCESS.DATA:***
* Go through all fields for editing of one rule (line on the screen)

    DONE=FALSE
    FIELD.POS=1
    LOOP WHILE NOT(DONE)
       BEGIN CASE
          CASE FIELD.POS=0
             DONE=TRUE
          CASE FIELD.POS=1
             GOSUB GET.BENCHMARK
          CASE FIELD.POS=2
             DONE=TRUE
       END CASE
       IF BACK.FLAG THEN
          FIELD.POS-=1
       END ELSE
          FIELD.POS+=1
       END
    REPEAT
    RETURN

********************************************************************************

GET.BENCHMARK:***
    IF BACK.FLAG THEN GOTO GG2
    BACK.FLAG=FALSE
*DF    EDIT.MASK=BENCHMARK:STR(EDIT.MASK.CHAR,5-LEN(BENCHMARK))
    HELP='[X]=Back'
GG1:CRT @(0,22):'Enter old package benchmark % for this service description.':@(-4)
    X.POS=44
    IF BENCHMARK.REC<2,EDIT.NUMBER>='' THEN
      MASK='------'
    END ELSE
      MASK=BENCHMARK.REC<2,EDIT.NUMBER>'R26#6'
    END
    CALL GEN.IN(X.POS,Y.POS,MASK,'AMT2',Q,0,6,'','',2,X.POS,Y.POS,0,QI,HELP,0,23)
    QI=OCONV(QI,'MCU')
    IF BENCHMARK.REC<2,EDIT.NUMBER>#'' THEN
       IF QI='' THEN Q=BENCHMARK.REC<2,EDIT.NUMBER>
    END
    BEGIN CASE
       CASE QI='X'
          BACK.FLAG=TRUE
          RETURN
       CASE NUM(Q)
          IF Q#'' THEN
            BENCHMARK.REC<2,EDIT.NUMBER>=Q
            CRT @(X.POS,Y.POS):BENCHMARK.REC<2,EDIT.NUMBER>'R26#6'
          END
*DF          RETURN
       CASE 1
          CALL ELINE('Invalid entry.')
          GOTO GG1
    END CASE
    HELP='[X]=Back'
GG2:CRT @(0,22):'Enter old letter benchmark % for this service description.':@(-4)
    X.POS=65
    IF BENCHMARK.REC<3,EDIT.NUMBER>='' THEN
      MASK='------'
    END ELSE
      MASK=BENCHMARK.REC<3,EDIT.NUMBER>'R26#6'
    END
    CALL GEN.IN(X.POS,Y.POS,MASK,'AMT2',Q,0,6,'','',2,X.POS,Y.POS,0,QI,HELP,0,23)
    QI=OCONV(QI,'MCU')
    IF BENCHMARK.REC<3,EDIT.NUMBER>#'' THEN
       IF QI='' THEN Q=BENCHMARK.REC<3,EDIT.NUMBER>
    END
    BEGIN CASE
       CASE QI='X'
         IF BENCHMARK.REC<3,EDIT.NUMBER>='' THEN
           CRT @(X.POS,Y.POS):SPACE(6)
         END ELSE
           CRT @(X.POS,Y.POS):BENCHMARK.REC<3,EDIT.NUMBER>'R26#6'
         END
*DF          BACK.FLAG=TRUE
*DF          RETURN
          GO GG1
       CASE NUM(Q)
          IF Q#'' THEN
            BENCHMARK.REC<3,EDIT.NUMBER>=Q
            CRT @(X.POS,Y.POS):BENCHMARK.REC<3,EDIT.NUMBER>'R26#6'
          END
          BACK.FLAG=FALSE
          RETURN
       CASE 1
          CALL ELINE('Invalid entry.')
          GOTO GG2
    END CASE

********************************************************************************

SAVE.BENCHMARK.REC:***
* Save BENCHMARK record

    WRITE BENCHMARK.REC ON F.FEDEX.BM,FEDEX.BM.ID
    OLD.BENCHMARK.REC=BENCHMARK.REC
    RETURN

********************************************************************************

DISPLAY.BENCHMARKS:***

    CRT @(0,0):@(-1)
    STMT='SORT FEDEX.BM 1 2'
    EXECUTE STMT
    CALL ELINE('')
    RETURN

********************************************************************************

ASK.Y.OR.N:***
* This is a general Yes/No prompt routine
* Inputs:  YN.MSG, YN.MASK
* Outputs: YN.ANSWER

    YN.ANSWER=''

Y.OR.N:
    CRT @(0,22):YN.MSG:@(-4)
    HELP='Entry Options: [Y]es [N]o'
    EDIT.MASK=YN.MASK'L#1'
    CALL GEN.IN(LEN(YN.MSG)+1,22,EDIT.MASK,'',Q,0,1,'','',2,LEN(YN.MSG)+1,22,0,QI,HELP,0,23)
    QI=TRIM(OCONV(QI,'MCU'))
    IF QI='' THEN QI=TRIM(EDIT.MASK)
    BEGIN CASE
       CASE QI='Y'
       CASE QI='N'
       CASE 1
          CALL ELINE('Invalid entry.')
          GOTO Y.OR.N
    END CASE
    CRT @(0,22):@(-4):
    CRT @(0,23):@(-4):
    YN.ANSWER=QI
    RETURN

********************************************************************************

LAST.CHANCE.TO.SAVE:***
* If you tried to EX out and there are unsaved changes - falls thru to THE.END

    IF BENCHMARK.REC#OLD.BENCHMARK.REC THEN
       YN.MSG='You have unsaved changes. Save before exiting?'
       YN.MASK=''
       GOSUB ASK.Y.OR.N
       IF YN.ANSWER='Y' THEN
          CRT @(0,22):'Saving...':@(-3)
          SLEEP 1
          GOSUB SAVE.BENCHMARK.REC
          GOSUB DISPLAY.PAGE
       END
    END

********************************************************************************

THE.END:***
    CRT @(0,22):@(-3):
    END; * End program
