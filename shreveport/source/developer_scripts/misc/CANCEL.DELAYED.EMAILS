      SUBROUTINE CANCEL.DELAYED.EMAILS(EMAIL.DELAY.ID, USER, F.EMAIL.DELAY, F.EMAIL.DELAY.HIST, F.EMAILDATA.DELAY, F.EREMIT, EMAIL.DELAY.CTRL.REC, RESULT)
*_______________________________________________________________________________________________
* PROGRAM: CANCEL.DELAYED.EMAILS - Subroutine to clean up Delayed Emails for checks that have
*          been cancelled or voided. User will be notified in the event that the email has been
*          sent before the Check was cancelled/voided so the user can determine what needs to
*          be done.
*
*          The record being voided should be in the EMAIL.DELAY file with the attachment being
*          in EMAILDATA.DELAY unless the email has already been sent, in which case the record
*          will be in EMAIL.DELAY,HIST and with the attachment already deleted.
*
* PROGRAMMER: Steve Barbee
*
* PARAMETERS:
*
*    Passed In:
*
*    EMAIL.DELAY.ID      - The record id to be moved from the EMAIL.DELAY file to the
*                             EMAIL.DELAY,HIST file.
*                          NOTE: This program expects the EMAIL.DELAY.ID to be passed in
*                                WITHOUT the | and counter at the end of the id.
*    USER                - The user cancelling/voiding the checks so the information
*                             can be noted on the cancelled emails.
*    F.EMAIL.DELAY       - File variable for the EMAIL.DELAY file.
*    F.EMAIL.DELAY.HIST  - File variable for the EMAIL.DELAY.HIST file.
*    F.EMAILDATA.DELAY   - file variable for the EMAILDATA.DELAY file.
*
*    Passed Back:
*
*    Result - CAN  - Email Cancelled. This is the 'normal' and desired result.
*             SENT - The Delayed Email has already been sent. This is not really an error, it

*                       just means the check was voided/cancelled after the email was sent.
*                       Inform the user so they can take action if they think necessary.
*             NOF  - Delayed Email NOT FOUND. This means that an email that was supposedly
*                       delayed does not exist in the EMAIL.DELAY or EMAIL.DELAY,HIST file.
*                       This error is most likely caused by a record being deleted from
*                       EMAIL.DELAY or EMAIL.DELAY,HIST when it shouldn't have been OR in a
*                       situation such as a program that delays some emails and sends some NOW,
*                       not using the DELAY option on the emails that are sent NOW...WHICH results
*                       in the email being sent immediately, without having ever been written to
*                       EMAIL.DELAY.
*
* Edit History:
*
*  DATE    NAME    DESCRIPTION
*------------------------------------------------------------------------------------------------
* 120211 - SWB01 - New Subroutine
*
*------------------------------------------------------------------------------------------------
*
      PROG.NAME='CANCEL.DELAYED.EMAILS'
*
* Do the necessary Initialization
      RESULT=''
*Main Process
*
      ID.CTR=0
      LOOP
         ID.CTR+=1
         DELAY.REC.FOUND=0
         EMAIL.DELAY.ID.CTR=EMAIL.DELAY.ID:'|':ID.CTR
         READ EMAIL.DELAY.ITEM FROM F.EMAIL.DELAY,EMAIL.DELAY.ID.CTR THEN
            DELAY.REC.FOUND=1
            ATTACHMENT.IDS=EMAIL.DELAY.ITEM<11>
            NUM.ATTACH=DCOUNT(ATTACHMENT.IDS,@VM)
            FOR X=1 TO NUM.ATTACH
               GOSUB DETERMINE.ATTACH.ID
               READ ATTACH.REC FROM F.EMAILDATA.DELAY, ATTACH.ID THEN
*If we can't find the attachment, we don't care because we were going to delete it.
                  DELETE F.EMAILDATA.DELAY,ATTACH.ID
               END
            NEXT X
*
            RESULT='CAN'
            EMAIL.DELAY.ITEM<16>=DATE()
            EMAIL.DELAY.ITEM<17>=TIME()
            EMAIL.DELAY.ITEM<18>=USER
            EMAIL.DELAY.ITEM<19>=RESULT
            WRITE EMAIL.DELAY.ITEM ON F.EMAIL.DELAY.HIST,EMAIL.DELAY.ID.CTR
            DELETE F.EMAIL.DELAY,EMAIL.DELAY.ID.CTR
         END ELSE
            READ EMAIL.DELAY.ITEM FROM F.EMAIL.DELAY.HIST,EMAIL.DELAY.ID.CTR THEN
               DELAY.REC.FOUND=1
*This email has been sent and can't be cancelled.
               RESULT='SENT'
               EMAIL.DELAY.ITEM<16>=DATE()
               EMAIL.DELAY.ITEM<17>=TIME()
               EMAIL.DELAY.ITEM<18>=USER
               EMAIL.DELAY.ITEM<19>=RESULT
               WRITE EMAIL.DELAY.ITEM ON F.EMAIL.DELAY.HIST,EMAIL.DELAY.ID.CTR
               DELETE F.EMAIL.DELAY,EMAIL.DELAY.ID.CTR
            END ELSE
*The alledgedly delayed email doesn't seem to have existed for this check.
               RESULT='NOF'
            END
         END
      UNTIL RESULT='NOF' DO REPEAT
*
      IF NOT(DELAY.REC.FOUND) THEN
*Since we have a counter on the ids and we are looping thru them until
*we find the first one that doesn't exist, this message would be
*generated for every Check that is cancelled. So, only give the
*message if the if the record with a counter of 1 can't be read.
         IF RESULT='NOF' THEN
            RESULT='CAN'
         END
      END
*
      RETURN
*
********************
DETERMINE.ATTACH.ID:
********************
*Attachments can be in EREMIT (most common) or EMAILDATA. However, for the purposes of cancelling
*Delayed Emails, the attachment can (should) only be in EMAILDATA.DELAY.

      ATTACH.FULL.PATH=ATTACHMENT.IDS<1,X>
      ID.POS=DCOUNT(ATTACH.FULL.PATH,'\')
      ATTACH.ID=FIELD(ATTACH.FULL.PATH,'\',ID.POS)
      RETURN
*
   END
