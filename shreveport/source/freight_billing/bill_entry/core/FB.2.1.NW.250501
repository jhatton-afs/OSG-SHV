********************************************************************
* Program name :  FB.2.1.NW
* Author       :  BRIAN M. QUEEN
* Date written :  DECEMBER 5, 1990
* Library      :  FBBP
$* COPYRIGHT (C) 2016 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED.
*
* FREIGHT BILL ENTRY SCREEN.

* Last updated by afs (AFSLOGISTICS\bino) at 09:02:29 on 08/29/2024.
*
* Start modification history*
* 102902 - JMK01 - ADD RECORD TO FB.ONSCREEN FOR PRO LOOKUP
* 111102 - JMK02 - CHECK CARRIER STATUS FLAG FOR LOOKUP
* 122002 - JMK03 - MOVE UPDATED RECORDS TO COGNOS.UPDATE FILE
* 012103 - JMK04 - RESET LOOKUP ONLY OF PRO FORMAT IS RE-ENTERED
* 012103 - JMK05 - #361 BLOCK MANUAL MISROUTES FOR WAIVED
* 012103 - JMK06 - DISABLE COGNOS.UPDATE PROCESS
* 012103 - JMK07 - PASS MAX.LTL TO OLA
* 050603 - JMK08 - ADD CALCULATION DETAIL TO RECORD
* 060303 - JMK09 - DISABLE JMK08 CALCULATION DETAIL
* 081803 - JMK10 - LOOKUP ONLY FOR EXCLUDED CARRIERS
* 082003 - JMK11 - ADD LATE FEES FOR UPS
* 092903 - JMK12 - ADD TRUCKLOAD SURVEY SCREEN
* 112003 - JMK13 - ADD AUTO CALC PROCESS
* 120903 - JMK14 - STORE CALCULATION DETAILS FOR FUTURE RETRIEVAL
* 012004 - JMK15 - STORE THE TL DETAILS FOR SS REPORTING
* 012304 - JMK16 - BLOCK DOSKOCIL IF DETAIL PROBLEMS
* 012604 - JMK17 - WORK ON DETAILS FOR SS REPORTING
* 021004 - JMK18 - GET FREIGHT BILL DETAILS WHEN CHANGED BY AUDITOR
* 022404 - JMK19 - ADD TAG BLOCKING FOR QUICKPAY TL BILLS
* 030904 - JMK20 - CORRECT RESET OF DETAIL CHARGES
* 031204 - DRF01 - ALLOW WEIGHT TO BE ENTER WITH A - AT THE END TO CONVERT
*                  KILO TO POUNDS
* 031404 - JMK21 - CHANGE FORMAT OF TL BLOCKING
* 032204 - JMK22 - CHANGE FSC INPUTS
* 032304 - JMK23 - REMOVE BLOCKING LOCK FOR TL TRAFFIC LANE
* 032204 - JMK24 - ADD QUICK VERIFY TO PROCESS
* 032504 - JMK25 - REMOVE TRUCKLOAD FROM DOSKOCIL WRAPUP TEST
* 033104 - JMK26 - ADJUSTMENTS TO QUICK VERIFY
* 040804 - JMK27 - ADD TIME DURATION TO EMP PERF FILE
* 042304 - JMK28 - ADD VEND/CUST REJECT OPTION
* 042904 - JMK29 - REMOVE AUTOCAL FOR 01211
* 051404 - JMK30 - REMOVE OWEN AND MYSELF FROM EMAIL NOTIFICATIONS
* 052604 - JMK31 - MOVE TAG BLOCK TO SUBROUTINE AND CHECK FROM OLA
* 060204 - JMK32 - ALLOW SROSALIES ACCESS TO HELENA SHIPMENTS 6/2/04
* 060304 - JMK33 - CHANGE WAYNEP TO ACCESS JMK32 SHIPMENT
* 060804 - JMK34 - CAPTURE DISCOUNT REASON AND SEND DISCOUNT EMAIL ALERT
* 060904 - JMK35 - BYPASS INVOICE NUMBER FOR MULTIPLE PROS
* 071304 - JMK36 - CHANGE DOSKOCIL TEST FOR AMOUNTS
* 072104 - JMK37 - ADD FSC CALCULATIONS FOR CLIENT 00143
* 081104 - JMK38 - LIMIT DISCOUNT EMAIL TO VERSION 0 BILLS
* 101504 - JMK39 - TEST FOR ONSCREEN VARIABLE WRITE
* 110904 - JMK40 - ADD OVERRIDE FOR 00949 TL DIRECT DISPATCH
* 111004 - JMK41 - ADD DUE DATE PROCESSING CALCULATION
* 111104 - JMK42 - ADD FEDEX GROUND OVERCHARGE TO COMMISSION
* 111504 - JMK43 - ADD ELECTROLUX (01312) TO FSC DETAIL CAPTURE
* 111504 - JMK44 - ADD FORCED BENCHMARK MINIMUM TO OLA
* 111504 - JMK45 - ADD CARRIER ONLY FSC FIELD
* 111804 - JMK46 - ADD REJECT CONTROL OPTIONS
* 113004 - JMK47 - ADD 01334 FOR FREIGHT BILL DETAILS
* 113004 - JMK48 - ADD JOHN ESPOSITO TO 10K LIMIT FOR SCOTT
* 120704 - JMK49 - ADD USER FIELDS TO FB INPUT
* 120904 - JMK50 - ADD 01312 TO CAPTURE DETAIL LIST
* 121404 - JMK51 - EXPAND DUE DAY PROCESSING TO INCLUDE OVERRIDE
* 121404 - JMK52 - USE FB CAPTURE SWITCH
* 121404 - JMK53 - CLEAR OUT BAD FB DETAILS IF CAPTURE SWITCH IF OFF
* 121504 - JMK54 - VALIDATE EXISTING SCAC CODE OR CUSTOM FILE
* 122804 - JMK55 - CAPTURE MISROUTE INFORMATION WHEN VC OVERRIDE IS ON
* 123004 - JMK56 - RE-ACTIVATE MISROUTE INFORMATION FOR VC OVERRIDE
* 011205 - JMK57 - ADD CORE CARRIER FLAG TO RECORD
* 011205 - JMK58 - USE SAME DISC DESC INSTEAD OF SETTING TO NULL
* 011405 - JMK59 - USER CARRIER TERMS OVERRIDE FOR DUE DATE
* 011905 - BOH01 - ADDED OCONV 'MCU' TO EXPENSE CODE ENTRY
* 020905 - BOH02 - No Quick Verify for Scott "Sourced" Clients<92>='00002'
* 021505 - JMK60 - SETUP CARRIER MODE VALIDATION FOR CCC
* 022805 - JMK61 - CAPTURE THREE SETS OF FSC INFORMATION FOR REVIEW
* 030305 - JMK62 - CAPTURE MISROUTE LOGISTICS AMOUNTS FOR REVIEW
* 031805 - JMK63 - CLEAR NEW FIELDS FOR NEW NEXT PRO
* 032205 - JMK64 - ENHANCE DUE DATE PROCESSING
* 033105 - JMK65 - ADD CLIENT AND CARRIER FOR ARTCO BELL AND CRETE
* 040805 - JMK66 - ADD POTENTIAL FSC LOGISTICS BETWEEN CARRIER AND AFS
* 042205 - JMK67 - RETURN TL MILEAGE FOR STC CLIENTS
* 051205 - JMK68 - CARRY FORWARD USER FIELDS FOR AD AND BD BILLS
* 051205 - JMK69 - ADJUST FB DETAIL TEST FOR AMOUNT.MATCH
* 051905 - JMK70 - INITIALIZE AUTO.CAL VARIABLE
* 052305 - JMK71 - REMOVE ALCON/APL WEST FROM TL BLOCKING (10356/01078)
* 060905 - JMK72 - ADD TL BLOCKING REVIEW SCREEN FOR FP VERIFICATION
* 061305 - JMK73 - CHANGE TL BLOCKING EMAILS TO A GROUP ADDRESS
* 062105 - JMK74 - CHANGE WORDING OF BLOCKING REVIEW SCREEN
* 070105 - JMK75 - ALLOW DELETION OF REJECTED BILLS FOR CLIENT 98888
* 071205 - JMK76 - MAKE FB DETAILS EXEMPT FOR CARRIER 00041 AND 01312
* 072505 - JMK77 - MAKE SURE USER FIELDS ARE AVAILABLE AFTER OLA
* 080105 - JMK78 - DISABLE USER FIELDS FOR AUDITORS
* 080305 - JMK79 - ADD BILL DATE FOR 01311 BOL PROCESSING START
* 080805 - JMK80 - DISTRIBUTE EXPENSE FOR 01271 BY HAZ, FSC
* 081005 - JMK81 - CAPTURE DETAILS FOR AIR FREIGHT BILLS
* 081205 - JMK82 - SEND NOTICE TO COGNOS WHEN PROCESSED BILLS ARE UPDATED
* 082605 - JMK83 - TURN DETAIL CAPTURE ON IF ANY DETAILS ARE RETURNED FROM OLA
* 082405 - JMK84 - ADD PO/BOL DISTRIBUTION FOR STC CLIENTS
* 083105 - JMK85 - ADD UPS RELATED BILLS FOR -I,-O,-T BILLS
* 090705 - JMK86 - CHANGE -0 TO -O FOR UPS BILLS
* 091305 - JMK87 - ADD SILK ROAD TRANSPORT (15994) TO PFAUDLER .8 DISCOUNT
* 091305 - JMK88 - REMOVE MYRA AND ADD BRIAN JEPPSON TO AD EMAILS
* 100605 - JMK89 - ONLY SET MISROUTE INFORMATION IF MISROUTE AMOUNT IS GT $20.00
* 100705 - JMK90 - ALLOW DISCOUNTS FOR ATK 01365 TO DISABLE DISC EMAIL ALERT
* 101205 - JMK91 - MAKE FB DETAILS WORK FOR AF AS WELL AS LTL SHIPMENTS
* 102005 - JMK92 - ADD RATER CALL AND SUPPLY PRIMARY FIELDS
* 110805 - JMK93 - ADD SPECIAL LOGISTICS COMMISSION RATE BY TRANSPORT MODE
* 120705 - JMK94 - ADD MONROE CONTRACTORS (16058) TO PFAUDLER .8 DISCOUNT
* 120705 - JMK95 - DISALLOW REJECT FOR CLIENT 01292 WITHOUT DIVISION CODE
* 121605 - JMK96 - DISTRIBUTE EXPENSE FOR 01418 BY HAZ, FSC
* 010506 - JMK97 - ADD 01428 SUB TECHNOLOGIES FOR GST AND DUTY PROCESSING
* 012506 - JMK98 - ADD ENTRY CEILING FOR UPS LATE FEE ENTRY
* 030206 - DRF02 - Do not allow users to the misroute amount or carrier. this will probably be disable shortly after it is compiled.
* 032306 - JMK99 - PERFORM AUTO ASSIGN OF DIVISION TO INBOUND FOR LEISURE ARTS 00761
* 032406 - JMK100 - ADD CARRIER COMMISSION PERCENTAGE TO CALCULATION
* 032406 - JMK101 - CLIENT CARRIER DUE DAYS ENHANCEMENTS
* 042506 - JMK102 - PRELOAD BOL FOR ROBROY FROM FB.BOL.CRX
* 050106 - JMK103 - UPCHARGE HILO-JBHUNT 2% CONS COMMISION
* 051006 - JMK104 - CHANGE RICK KEYES TO GINA ALLISON ON TL BLOCK SYSTEM
* 051106 - JMK105 - UPDATE EXPENSE.MATRIX FILE FOR LIBERTO (00664)
* 060206 - JMK106 - USE TABLE TO INDICATE CAPTURE OF INVOICE NUMBER
* 061406 - JMK107 - ADD CARR.FSC FLAG TO SCREEN DISPLAY
* 062006 - JMK108 - ADD OPTION FOR CARRIER ALTERNATIVE TRANSPORT MODES
* 080306 - JMK109 - ADD CARRIER CONTROL NOTES TO SCREEN FOR REVIEW
* 081006 - JMK110 - REMOVE INQUIRE OPTION FROM BOL ENTRY
* 082206 - JMK111 - ADD NOTE FIELD FOR FB ENTRY
* 082506 - JMK112 - ADD 01460 DIETRICH CANADA FOR GST AND DUTY PROCESSING
* 082506 - JMK113 - EXPENSE DIV ZIP DISPLAY FOR CANADA
* 082906 - JMK114 - REMOVE NOTE REQUIREMENT FOR CARRIER 00015
* 083106 - JMK115 - ADD JOINT/DIRECT SVC FROM RATEWARE SERVER
* 083106 - JMK116 - UPDATE INVOICE NUMBER FROM PRO NUMBER FOR CARRIER 01075
* 090106 - JMK117 - FORCE ADJUSTMENT OF EXPENSE DISTRIBUTION IF AMOUNT IS CHANGED
* 092606 - JMK118 - FORCE REJECT REASON FOR 'N' OR 'E' REJECT TYPE
* 092906 - JMK119 - EXPAND FB NOTE TO ALLOW FOR MULTIPLE LINES AND INQUIRE
* 092906 - JCW01  - USE NEW FB.CHECKS FILES
* 100306 - JMK120 - REMOVE NOTE REQUIREMENT FOR REJECT BILLS
* 100406 - JMK121 - ADD RESTRICTION FOR THE APPROVE OPTION FOR AUDITOR
* 100705 - JMK122 - ALLOW DISCOUNTS FOR ATK 01530 TO DISABLE DISC EMAIL ALERT
* 101206 - JMK123 - UPDATE FB.BILLS.SUMMARY FILE IF EXISTS
* 102406 - JMK124 - T200610240003 IGNORE DUPLICATE BILL WARNING IF MORE THAN 3 YEARS OLD
* 102606 - JMK125 - T200610260010 UPDATE REJECT REASON IN JMK118 TO ONLY BE FOR UNPROCESSED BILLS
* 102606 - JMK126 - ADD MISROUTE CAPTURE INFORMATION (ATTS 63,39) IN VCOVERRIDE FIELD REGARDLESS (ATTS 189,190)
* 102706 - JMK127 - T200610260005 MORE CORRECTLY IDENTIFY FB BEFORE THEY ARE DELETED.
* 110806 - JMK128 - T200611080010 / priority 2 /FW: Replacement of John Esposito with Adam Smith on reports
* 111706 - JMK129 - T200611170002 / Determine cause & solution for OFB - RESET SU.FLAG WHEN BACKING OUT
* 112906 - JMK130 - T200611290003 /  priority 2 /  AD override
* 120506 - JMK131 - T200612050008 /  priority 2 /  Over ride on Fedex carrier (15) bills
* 120806 - JMK132 - ADJUSTEMENTS TO THE LEISURE ARTS (00761) DIVISION CODING
* 122006 - JMK133 - C200610190010 / Rector Seal VALIDATE EXPENSE CODE AND WEIGHT IN F.CRX.BOL FILE FOR REJECT
* 010807 - JMK134 - C200610190010 / Rector Seal VALIDATE EXPENSE CODE AND WEIGHT IN F.CRX.BOL FILE FOR REJECT
* 011707 - JMK135 - C200701150006 /   /  Dietrich USA & Canada (1311 & 1460) request BOL & DR cross reference to prevent duplicates
* 011807 - JMK136 - C200611130002 / Due 1/15/07   / Marlite - FSC Commission??
* 012407 - JCW02  - USE VEND.CUST.NAMES FILE
* 020507 - JMK137 - C200610190010 / Rector Seal REMOVE VALIDATION TEST FOR PARCAL CARRIERS
* 020507 - JCW03  - C200702010003 - Misroute Exceptions Anchor Paint, Airgas-Intermountain
* 020707 - JMK138 - C200702070002 /  /  Leisure Arts BOL Import File Changes
* 022207 - BOH01  - Hard Code Division numbers for Airgas-Safety 01457
* 032907 - JCW04  - UPDATE VEND.CUST.XREF AND VEND.CUST.ZIPS FILES
* 040507 - JCW05  - C200702220004 - ADD NOTES WHEN ACCOUNTING FORCES A 1-CENT VARIANCE
* 041707 - JMK139 - T200704130005  Fax from unknown sender.
* 042307 - JCW06  - C200704230003 - Change FSC expense code for 01418 - Airgas-Great Lakes
* 052107 - JCW07  - C200704230004 - Add paging to related notes display
* 070307 - JMK140 - C200704240003 /  ASAP  /   FW: New Request - FB Inquiry Alert / Audit Date Storage
* 080107 - JMK141 - C200707090003 / 7/31/07 /  Audit Flag
* 080507 - JMK142 - C70037 - add a 5 pound variance on weight check for Rectorseal
* 082107 - JMK143 - T070168 - Leisure Arts OB Shipments not matched to channel
* 091207 - JMK144 - C070443 - Create process to update SQL data tables from Universe
* 100807 - DRF03 - Modified JMK141 to only occur for logistics clients CLIENT.REC(93)='Y'
* 111207 - NPR01 - ADDED CODE FOR updating new FB.PRE.OPEN.BILLS file
* 121207 - JMK145 - C070443 - Create process to update SQL data tables from Universe
* 011408 - NPR02  - CLIENT 01485, CARRIER 17216 - FORCE MODE TO 11, FOR CARRIER 15703 - FORCE MODE TO 6.
* 012108 - JMK146 - T080174 - AD more than limit ; Password not working
* 012508 - NPR03  - Added logic to check and block the user from entering a PO/BOL # starting with AFS - Email sent also
* 020108 - JMK147 - C080232 - Adding Joint Line Pricing to OLA
* 031208 - JMK148 - T070361 - Bad FSC (and other) Data on TL Bills
* 032708 - JMK149 - T080908 - FSC is not correct in column GL
* 040308 - JMK150 - T080932 - Marlite FSC is set wrong - correct ASAP
* 041008 - JMK151 - T080908 - FSC is not correct in column GL
* 042108 - JMK152 - C080902 - Electronic BOL file FOR Dover Chemical 01636
* 051908 - NPR04  - C081352 - carrier 12440 for Rectorseal 01529 to be turned off for the bol and wt verification
* 052708 - JMK153 - REVERSE FUNCTIONALITY OF JMK56 TO REMOVE MISROUTE WHEN VC OVERRIDE IS ON
* 061308 - NPR05  - T081341 - Added ability to put a cutoff date to disallow keying
* 070708 - NPR06  - T081166 - Added Inquiry screen for Before and after picture of adjustments made
* 070708 - NPR07  - T081680 - Update PRO record with Inv #(PRO Number) for carrier 1075 - FED.INV.XREF also updated
* 081508 - JMK154 - C081314 - Overcharge classification
* 090808 - JMK155 - C082110 - Add 20% increase adjustment for First Source to benchmark and quotes
* 091008 - JMK156 - C082121 - Restrict entry of bills for Carrier #20475 to ONLY Mary / Myra
* 090908 - NPR08  - T081966 - Added new info to header screen and re-arranged print positions etc.
* 100308 - JMK157 - C082257 - Add description to the FB Details for the MISC code
* 100608 - JMK158 - FORCE AUDITORS TO ADJUST DETAIL SCREEN
* 100708 - JMK159 - C082280 - Least Cost Carriers Real Time ; Add ability to determine the least cost carrier at FB Entry
* 100808 - JMK160 - C082289 - Additional information on Freight Payment FB Entry
* 100908 - JMK161 - T082261 - FB Entry screen showing stack numbers twice
* 102208 - JMK162 - C082320 - Miles for LTL AD/BD should be captured and recorded from the original invoice and should not be recaptured and reported on either the AD/BD records.
* 102708 - JMK163 - C082406 - Add a "misroute exclusion" for Standard Forwarding and Bell Sports
* 103008 - NPR09  - T082432 - Added email notification if Bill is zeroed
* 110508 - JMK164 - T082387 - FP keys all of the accessorial charges below and they need to ?X? back, this ?screen? looses all of their changes.
* 110608 - JMK165 - Adjust Pro Format Validation for multiple pro formats
* 111808 - NPR10  - T082535 - Add transportation accrual cost from BOL file to Ideal Chemical(01053) Bills
* 112108 - NPR11  - T082554 - Customer Service Notes ability
* 120508 - NPR12  - T082554 - Customer Service Notes ability - Additional tweaking as per Amy
* 010709 - JMK166 - T090031 - Dover Checm / Reese Trucking ; Two bills with 1972 as year, processed for $0.00
* 020109 - JMK167 - LLC and Misroute changes  per meeting in Owen's office
* 021009 - JMK168 - Add Logistics Switch for Logistics Start Up Date
* 021109 - JMK169 - Turn off FB Capture for International Shipments.
* 021709 - JMK170 - ADD BACK THE LOGISITICS FLAG FOR MISROUTE CALCULATIONS
* 022709 - JMK171 - Restore the multiple shipment check for TL blocks
* 022709 - DRF04 - Added MRA.VIN<52> to bill date to calculate FSC.
* 030209 - JMK172 - T09031  - Brokerage system ; can not key the bills
* 030309 - NPR13  - T090253 - Highlight Client name based on ranking
* 030909 - JMK173 - T090329 - Lokey Metals #1402 no LCC generated
* 031009 - JMK174 - RE-ENABLE FB CAPTURE FOR INTL SHIPMENTS PER SCOTT M
* 031009 - JMK175 - Add Time In Transit Days for EDI Actual, Carrier Est and Carrier Array
* 031209 - NPR14  - Add the ability to change the status of a "N"ever Pay to "E"ventual pay in this program
* 032609 - JMK176 - T090423 - LCC issues client #1188 Actic & #1194 Hatfield
* 032709 - JMK177 - T090431 - Dover Chemical
* 041409 - JMK178 - C090484 - Robroy processes today ; need to  BOL or PO  matching
* 042309 - JMK179 - C090546 - Grant ability to enter invoices that do not match BOL file
* 042309 - JMK180 - T090550 - overcharge is being taken on a new client 01731
* 042409 - JMK181 - T090540 - Can't add AD to a freight bill
* 052109 - NPR15  - T090677 - Indicate Carrier Pay Method
* 052109 - NPR16  - T090548 - Audit threshold amounts by mode - Force bill to Auditors if amount equal to  (or above) threshold
* 052809 - JMK182 - C090692 - Need to not take commissions on Fuel
* 060409 - NPR017 - T090733 - Hussey ... Client #1334 Determine division based on Orig & Dest zips 15003 and Shipper Info/ VENDCUST #
* 070109 - JMK183 - T090835 - LCC issue for United Souther Waste
* 070709 - NPR018 - T090876 - Default User fields to original bill data when entering /n bills for Calgon Carbon
* 071409 - NPR019 - T090848 - Client 01763 - PO # on IB that begin with H - Default division to 1 . Default to 2 for PO # starting with a T or L
* 072109 - NPR020 - T090936 - Country Code prompting added
* 072309 - NPR021 - T090733 - Hussey ... Client #1334 Determine division based on Orig & Dest zips 15003 and Shipper Info/ VENDCUST # - Additional rules
* 073009 - NPR022 - T090877 - Hussey ... Client #1334 Check to make sure SIT codes entered if Stops added and visa versa
* 080509 - NPR023 - T090733 - Hussey ... Client #1334 Don't do Division and Exp code checks etc for Fedex and UPS related shipments as per Scott Matthews
* 081409 - NPR024 - T091038 - Keyer / verifier information should be displayed to auditors before a bill is updated
* 082009 - JMK184 - EXPAND INVOICE NUMBER FROM 11 TO 20
* 082609 - NPR025 - T090733 - Hussey ... Client #1334 set Orig zip to 60633 for Carrier 14657 (CMI)
* 082709 - NPR026 - T091091 - Added option to overide Pro Format based on Client/Carrier combination if it exists
* 102209 - NPR027 - T091294 - Country Codes being overwritten when audited.
* 110609 - JMK185 - C091350 - Reid Supply -- UPS Freight --- Fuel Commission
* 121809 - JMK186 - ADD ORB LIST UPDATE TO SPEED UP THE ORB REPORTING PROCESS
* 012010 - JMK187 - T100052 - Amounts on SS report for H&K do not match
* 013010 - NPR028 - T091391 - Pull in available data from BOL file if setup to do so on Client file.
* 022610 - NPR029 - T100166 - Auto Populate Div, Exp Code and do BOL # validation for client 01614
* 032310 - NPR030 - T100266 - Audit approval ; no password should be needed for declining as a never pay
* 032310 - JMK188 - Add MSR override options to LCC for Airgas Safety and Rectorseal
* 032310 - NPR031 - T100247 - Added International Accessorial Code Selection ability
* 040810 - NPR032 - T99999  - Add routine to update Program Log file.
* 042210 - JMK189 - T100354 - Louisiana Fish Fry not receiving LCC reports
* 042610 - JMK190 - Limit OverCharge Commission adjustments to total amount originally taken.
* 052610 - NPR033 - T100372  - Prompt for Invoice Due date for UPS bills and update new UPS.SCHED and UPS.SCHED.HIST files.
* 052610 - NPR034 - T999999  - Tidy up display of Invoice Number and UPS Address correction and Fees charges
* 062510 - NPR035 - T999999  - Add prompt for Handling Units
* 062810 - NPR036 - T100399 - Added option to display who touched a freight bill
* 070910 - NPR037 - T100659 - Rittal Client #1310 default HU# in User Defined field
* 071210 - NPR038 - T999999 - H&K Clients #1832 & 1870  default Source from BOL ref#2 in User Defined field 1 - Default Exp code from table incl cl for GST
* 071610 - JMK191 - ADD GST FROM MISC CHG TO EXPENSE CODES
* 071910 - NPR039 - T100685 - Modified to allow access to FB detail page in change mode
* 071210 - NPR040 - T100617 - Go to reject if client 01441 American fan has Outbound BOL marked collect
* 072710 - NPR041 - T999999 - Update PRO ID field on FB.BOL.CRX file if data Auto Populated from the Web.
* 072310 - JMK192 - T100652 - Missing / bad info in Excessive Freight Report
* 080610 - NPR042 - T100399 - Additional updating for tracking what changes where made to a bill.
* 082510 - NPR043 - T100778 - Auto populate Vendor Desc from FB.BOL.CRX file.
* 082610 - NPR044 - T091391 - Pull in available Exp Code data from BOL file if setup to do so on Client file. Was not being supplied from SQL/WEB until recently
* 082710 - NPR045 - T100851 - Prevent Duplication of BOL #'s coming in from AFS BOL interface ref1,2 and 3 fields
* 083110 - JMK193 - ADD COST CENTER AND PROJECT NUMBERS TO EXPENSE DISTRIBUTION ENTRY SCREEN
* 090110 - NPR046 - T100870 - #1794 All States Ag Parts ; Auto population  of Division and Expense code from AFS BOL data supplied by client
* 090910 - NPR047 - T999999 - Removed Default calculation of Due Date for UPS bills where Due Date = Bill Date + 11
* 091510 - NPR048 - Moved updating of Carrier/Payment due date from fld 38 to 238 in FB.BILLS and FB.BILLS.HIST file Mainly for Carrier 00041
* 091510 - NPR049 - Added check to Ensure that PRO numbers are entered against the correct client for those clients using the AFS BOL Interface
* 092310 - JMK194 - ADJUST CALCULATION METHOD OF DUE DATE REALTED TO CLIENT AND CARRIER OVERRIDE
* 092710 - JMK195 - ADD 108% CALCULATION OF ACTUAL CHARGE FOR LOGISTICS FOR 30012 SCHAFER GEAR WORKS
* 100510 - JMK196 - ADD GST, HST AND QST TO EXPENSE CODES FOR ENPRO/GARLOCK SHERBROOK (CAN) 01898
* 102710 - NPR050 - T101045 - Added BOL # Validation for client 01329 Latrobe Steel.
* 110210 - NPR051 - T100992 - 'L' same Pro as previous was allowing bills for Lookup only/restricted carriers to be keyed
* 111510 - NPR052 - T101102 - Added ability to add up weights in weight field. Input 100+200+300+400 etc.
* 111510 - JMK197 - PREVENT ENTRY FOR CLIENTS 30004 AM GENERAL AND 30032 PATRICK IND IF MISSING CARRIER PAYEE NUMBERS
* 111510 - NPR053 - T101076 - Fixed Transit time/Service days calculations - This issue was a problem with Misroutes in particular.
* 123010 - NPR054 - T101208 - Allow option to display Accesorial details.
* 010311 - JMK198 - CONFIRM ORIGIN AND DESTINATION ZIPS WHEN THE SAME
* 010511 - JMK199 - ADD DUE DAYS OPTION "P" FOR SPECIAL CLIENT & CARRIER OVERRIDE ONLY
* 010511 - NPR055 - Add option for Auditors to make changes on Detail page (Accessorials).
* 011411 - NPR056 - Moved option for Auditors to make changes on Detail page (Accessorials).
* 020711 - JMK200 - REMOVE FEDEX ECONOMY (00171) WHEN FEDEX PRIORITY PRESENT (00212)
* 020811 - JMK201 - C110092 - Estimated processing date for Accrual accounts
* 020911 - NPR057 - T100749 - Added new field to Bill for Logistics Commission % used for LCC calcs.
* 021111 - DRF05  - Add manditory line item based on zip codes. Can be used for any code but mostly for HIGH High cost delivery area.
* 021711 - NPR057 - Added BOL number(ID to the FB.BOL.CRX,cc) to FB file if keyer uses data supplied via the AFS BOL web interface
* 022211 - JMK202 - ADD AFS BOL POPUP WINDOW WHEN ENTERED
* 022311 - JMK203 - C110138 - OC Distribution notification add/remove users
* 022411 - NPR058 - Added new BOL number used field (240) to FB.BILLS and FB.BILLS.HIST files
* 022511 - NPR059 - Made change to allow acces to the Detail screen if flag - AUDIT # 'Y' . Request by Shannon approved by Owen
* 031011 - JMK204 - C110201 - Subject Line Change
* 031811 - NPR060 - AER Sales detail division auto pop from BOL.
* 032211 - DRF006 - 110146 Include - Exclude list auto reject
* 032911 - NPR061 - T110159 - When rejected AD and BD Bills show them as rejected.
* 033111 - NPR062 - T110279 - All of for entry of new 6 digit division codes for 01267 Airgas South
* 040511 - JMK205 - ADD PENDING OPTION FOR WABTEC FOR LOADING TO THE WEB
* 041111 - NPR063 - Fixed issue where screen was not being redrawn after returning frpm FB.2.1.AUDIT.OWEN
* 041211 - NPR064 - Added ability for multiple Airgas clients to allow Expense codes to be created.
* 042011 - NPR065 - Removed division determination for client 01567 Bett Springs as per Mary.
* 042111 - JMK206 - Add 15% increase adjustment for 01992 to benchmark and quotes
* 050211 - NPR066 - Added special coding for determination of Exp. Codes for Airgas NCN (01101) for some vendors/customers
* 050411 - JMK207 - wABTEC (01977 01979) ADD OPTION TO SEND TO WEB FOR ANY CHANGES
* 050211 - NPR067 - T110448 GL coding for clients 1282, 1360, 1866 if 62920-105 force divsion to 00001
* 051911 - JMK208 - c110518 - Need AFS BOL indicator in freight payment screen when there is an AFS BOL present.
* 060611 - JMK209 - C110628 - AFS charges breakdown ; GST QST Admin fees ;
* 061311 - JMK210 - T110669 - Wrong Pro# format, Can zero bill
* 062111 - JMK211 - C110703 - AER Sales Bill of Lading Help
* 062711 - JMK212 - T110738 - Div x-reference for client 00731 and 00924
* 062811 - JMK213 - T110595 - (HOT) Error in Processing Client #1863 AER Sales
* 071111 - JMK214 - BYPASS MISROUTE CARRIER SEARCH WHEN BILL DATE IS PRIOR TO LOGISTICS START DATE
* 071811 - JMK215 - T110836 - Wabtec bills approved but not processed (DUE TO MISROUTE PRIOR TO LOG START DATE)
* 081611 - JMK216 - C111015 - Remove keyer block on carrier 18324 for Bomag 1535
* 083111 - DFP01 - ADD MESSAGES TO RELATED BILLS SCREEN INDICATING THAT THE BILL HAS BEEN SELECTED/SCHEDILED FOR PAYMENT & NO UPDATES ALLOWED.
* 090911 - JMK217 - T111140 - Wabtec rejected a bill; keyed under another division, bill still not on web for new division
* 092011 - JMK218 - ADJUST WABTEC PUSH TO WEB REVIEW FOR MORE THAN JUST PREVIOUSLY PUSHED ITEMSc
* 092611 - JMK219 - C111243 - AER Sales 01863 Excessive Freight Expense
* 092611 - JMK220 - C111266 - AER Sales FB updates with bad division and expense codes
* 100411 - JMK221 - T111311 - BOL Storage Issue
* 102411 - JMK222 - SysAid#105 - Carrier Restriction
* 101211 - RLM001 - PROJECT 80 - Retrieve Account Manager id from CLIENTS file instead of salesman file
* 111711 - JMK223 - SysAid#349 - Consulting Commision cap
* 111811 - JMK224 - SysAid#608 - Paper United Parcel bills
* 120811 - JMK225 - SysAid#861 - Variance incorrect for auto.calculated actual charge
* 121211 - SWB01 - Project 157 - Establish 10% AFS Cost Management markup fee for Client
* 122811 - SWB02 - Project 93  - Establish source of BOL
* 121411 - JMK226 - SysAid#95 - Womack Machine #1511 EFE report with no calculated transit time
* 011712 - SWB03 - Ticket 1438 - Only prompt for BOL Source if Version = 0 and if an LTL Carrier
* 011812 - JMK227 - SysAid#95 - Womack Machine #1511 EFE report with no calculated transit time
* 012012 - SWB04 - SysAid#1506 - Dont prompt for BOL Source if a Reject and prompt for BOL Source before Stack
* 013012 - SWB05 - Project 116 - Add option to display Override Details
* 012612 - #96 - JAD001 - Add Include/Exclude/Delete by TransMode.
* 020912 - Sysaid#164 PKB01 - Add and remove users from email notification explaining discount change
* 022712 - SWB06 - Bug fixes for Rejection related problems found during Project 97.
* 022812 - JMK228 - SysAid#1955 - Report running 1.8.3 will not run complete
* 022812 - JMK229 - ADD NEW EXPENSE CODE PROCESS TO TRANSLATE EXPENSE ENTRIES
* 022812:- SWB07 - SysAid 1908 - Modify to give privileges to users with BCTRL<12>=1
* 030212 - JMK230 - ADJUST NEW EXPENSE CODE TO ONLY TRANSLATE IF TRUE EXPENSE CODE NOT ENTERED
* 032112 - SWB08  - PROJ 182 - Track Bills from Mail Room to Processing and SysAid 2447 - Fix problem when Never Pay changed to Eventually Pay
* 041212 - JMK231 - SysAid#2206 - Setup Match Pay file for new client
* 041812 - JMK232 - SysAid#2433 - ISC Auto EDI & Expense Codes
* 042312 - JMK233 - SysAid#2487 - H&K Canada - GST not reporting correctly
* 042712 - RLM002 - Project 141 - Add AR Representative to FB Entry Screen
* 051712 - JMK234 - Adjust JMK231 to happen only until processing has occurred
* 050812 - RLM003 - Project 180 - AER Sales 1863 Division Number Assignment on BOL
* 052112 - JMK235 - SysAid#2695 - CPI Canada
* 052512 - RLM005 - SysAid#2790 - Change Division if AER Sales (01863) BOL is changed
* 060512 - JMK236 - SysAid#2838 - Airgas NCN conversion to SAP
* 062212 - JMK237 - SysAid#3000 - Emails for ADs go to Brian Jeppson
* 062512 - JMK238 - Emails for Audit to go to Myra and Wayne Pardue
* 062612 - JMK239 - Remove ORB. and ARVW. list generation - no longer needed.
* 072412 - JMK240 - SysAid#3317 - USI 25117 - Transit Times
* 081312 - JMK241 - SysAid#3482 - Balance Due and Additional Due entries
* 082112 - JMK242 - SysAid#3667 - Design Materials GL code
* 082212 - JMK243 - SysAid#3679 - Overchare email
* 082212 - JMK244 - SysAid#3686 - Add Pete Zanmiller to overcharge distribution list
* 082712 - JMK245 - SysAid#3710 - Little Tykes Data Entry Flow
* 082712 - JMK246 - SysAid#3674 - Amerimax Transfer codes
* 083012 - JMK247 - SysAid#3674 - Amerimax Transfer codes - reverse out changes from JMK246
* 083112 - RLM006 - SysAid#3073 - Replace former employees' email addresses with current employees' email addresses
* 092412 - JMK248 - Project#205 - QlikView FBStatus update file
* 100412 - JMK249 - SysAid#4111 - mileage rates
* 101912 - JMK250 - SysAid#4339 - Midwest Towers expense codes
* 102212 - JMK251 - SysAid#3486 - AFS BOL
* 102312 - JAD02 - Check and note when Terms don't match, and reject
* 102312 - JMK252 - SysAid#4375 - need account pointed to Mileage rates
* 111212 - JMK253 - SysAid#4536 - Valmatic Keying order
* 032513 - SWB09  - SysAid#5528 - Duplication of FSC and cutback issues while auditing
* 070813 - JMK254 - SysAid#6346 - Remove 10K limit on freight charges - this handled via audit override
* 073113 - DRF008 - Ticket 6625 - Added Delivery Number to user field 3 for the Airgas clients
* 081513 - JMK255 - SysAid#6770 - Ability to catch log start date
* 082113 - JMK256 - SysAid#6826 - SS Reports - carrier type 11
* 090913 - JMK257 - SysAid#6959 - I need some fields in client maint defaulted
* 100813 - JMK258 - SysAid#7326 - FBBP FB.2.1.NW has an error in line 13585
* 100913 - JMK259 - SysAid#6666 - EDI bill will not update
* 122013 - JMK260 - Look for an AD bill for UPS
* 011314 - DRF009 - Added client 02374 to look up BOL first. Tck 8215
* 013014 - DRF010 - SysAid 8349 - Added client 02451 to be like 02174
* 022714 - JMK261 - SysAid#8711 - Omega Enviromental
* 031714 - JMK262 - SysAid#7326 - FBBP FB.2.1.NW has an error in line 13585
* 040114 - JMK263 - SysAid#9223 - Enpro Stemco Longview
* 040314 - DRF011 - SysAid 9020 - Bag Corp BOL# will be placed in the first line of the BOL
* 040814 - DRF012 - SysAid 9109 - No mileage rates for Canada for Old Dominion
* 040814 - DRF013 - SysAid 9117 - No mileage rate for R & L
* 050214 - DRF014 - SysAid 9473 - Changed from 4000.00 to 6000.00 for client 01324 carrier 05041 to allow bills to go to stack 1
* 051314 - JMK264 - SysAid#9743 - Aalchem EFE
* 051414 - JMK265 - SysAid#9754 - Houston Casing 10% markup above cost
* 052814 - DRF015 - SysAid 9857 - Change the carrier 14585 override
* 062014 - DRF016 - SysAid 10293 - 20% markup
*                   from 4000.00 to 6000.00 - Ok per Myra
* 062314 - JMK266 - SysAid#10108 - Endress & Houser
* 062314 - DRF017 - SysAid 10242 - Setup 05060 to user mileage rates
* 062614 - JMK267 - SysAid#10389 - TICKET 10277 NOT COMPLETE
* 070114 - JMK268 - SysAid#9922 - Hollaender Match Pay
* 080714 - JMK269 - SysAid#11283 - G & T 10% Markup
* 081214 - JMK270 - SWF Match Pay
* 081414 - DRF018 - SysAid 7905 - Changed the override to $6,000.00
*                   for client 01361 for carrier 12535
* 090214 - DRF019 - SysAid 11845 Allow bill 087-1351935 to have a variance
*          over 9,999.99 per Wayne Pardue.
* 091614 - DRF020 - SysAid 11684 - Need AD bumped up to 999.99
* 081414 - DRF021 - SysAid 11901 - Changed the override to $4,000.00
*                   for client 10087 for carrier 00677
* 100614 - JMK271 - SysAid#12425 - Forum Energy Production
* 100714 - DRF022 - SysAid 12670 - Add Cynthia to the Non Core Carrier and
*                  AD emails
* 100914 - DRF023 - SysAid 12724 - Remove Myra from the Non Core Carrier
*                   and AD emails
* 101314 - DRF024 - SysAid 12726 - Up the limit from 6000 to 10000 for
*                   overrides for non-LTL carriers.
* 101414 - JMK272 - SysAid#10016 - AER Returns
* 101514 - DRF025 - SysAid 12721 Do not send email for AD and BD notes
* 102714 - DRF026 - SysAid 12726 - Removed hard coding for client carriers
*                   that were not LTL as the cap has been increased to
*                   10,000.00 dollars.
* 111114 - DRF027 - SysAid 13504 - Allow the user to override the
*                    1862/1863 BOL requirement by typing I-UNDERSTAND
* 111314 - DRF028 - SysAid 13191 - Added an additional character to the
*                   pro number as a carrier has a 21 digit pro number
* 112014 - JMK273 - SysAid#13591 - Can you tell me if this report is something that IT has set up to send
* 112514 - DRF029 - SysAid 13878 - Allow /1 to be entered before the pro
*                   is verified
* 121514 - DRF030 - SysAid 10049 - Setup 02715 Dayton Frieght for the
*                   Enpro accounts.
* 121514 - DRF031 - SysAid 14172 - Do not calculate rates for TN
* 010515 - DRF032 - SysAid 14246 - 3% markup above frt cost for client
*                   05294 - Atlas Bolt & Screw
* 011415 - JMK274 - SysAid#14662 - FFR-DSI carrier discrepancy on AFS invoice 04771-150103-150109
* 012215 - JMK275 - SysAid#14808 - Karl Klement Ford 5% markup
* 020215 - JMK276 - SysAid#14923 - Airgas Safety coding change
* 020315 - DRF033 - SysAid 14954 - Copy pricing from 00986 to 05308
* 022515 - JMK277 - SysAid#15482 - NON- SMC Carrier Service 1,1,11,17
* 022515 - DRF034 - SysAid 15457 - Change general override for LTL from
*                   1000.00 to 1500.00
* 030415 - DRF035 - SysAid 15722 - Calculate the mark 3% for LTL only for
*                   05294 Altas Bolt & Screw
* 030915 - SWB10  - SysAid#13523 - Modifications for Wabtec Master Billing Report
* 031615 - DRF036 - SysAid 15959 - Sent the email to April that Cynthia
* 031715 - JMK278 - SysAid#16032 - Webrater issues withe SEFL
* 031915 - JMK279 - SysAid#15586 - Prevent DIVISION 2 Non-Parcel entry
* 032315 - DRF037 - SysAid 12915 - Get division and expense code from
*                   BOL file
* 032615 - DRF038 - SysAid 16293 - Setup the Airgas to go to BOL first
* 040115 - DRF039 - SysAid 16403 - Setup the override for 10,000.00 to go
*                   to stack 1 for client 05085 Garlock Mexico
* 042215 - DRF040 - SysAid 14151 - Pull in BOL information even it BOL is
*                   not null
* 042815 - DRF041 - SysAid 16963 - Calculate the mark 12% for LTL only for
*                   02374 QFC
* 060315 - DRF042 - SysAid 17798 - Remove mileage rates for client 05308
*                   for carrier 00212 and 00171
* 061515 - DRF043 - SysAid 17841 - Added expense code from BOL from the
*                   Web for user ANWDLASHIP to use expense code 360219
* 062315 - DRF044 - SysAid 18262 - No mileage rates for client 05308
* 070615 - DRF045 - SysAid 17452 - Put the code information for AD/BD
*                   from attribute 151 to 70 and 152 to 77 and 79 so
*                   EDI information that we generate will have the
*                   information that SWF is looking for
* 070715 - DRF045 - SysAid 18467 - Added Sales Order Number for client
*                   05113 Nichiha
* 071015 - DRF046 - SysAid 18610 - Turn the 8 precent mark up off for
*                   30012 Shaffer Gear
* 080415 - DRF047 - SysAid 19157 - Remove Cynthia from receiving email alerts
* 080515 - DRF048 - SysAid 19112 - Add SPC code for client 05417 Pangborn
* 100115 - DRF049 - SysAid 20113 - Get INCO out of the Airgas PO file
* 101415 - DRF050 - SysAid 20573 - Allow Mary and Mrya to go to the route
*                   information page (FB.2.1.TL.ROUTE) even if they are SU
* 102015 - DRF051 - SysAid 20113 check for PO and get the division. If PO
*                   is not on file auto reject
* 110515 - DRF052 - SysAid 20635 - Make invoice number manditory for 00365
*                   DHL
* 110115 - DRF053 - SysAid 21044 - Calculate the mark 10% for LTL only for
*                   02481 Unit Automotive
* 111715 - DRF054 - SysAid 19180 pull branch from the BOL file for 01282
* 121515 - DRF055 - SysAid 21060 have client 05457 Stemoc Airsprings
*                   use  00857 pricing
* 122215 - DRF056 - SysAid 21690 - Added Sales Order Number for client
*                   04979 Omega Environmental
* 042616 - DRF057 - SysAid 24169 Add Katherine Winstead to received email alerts
* 051116 - DRF058 - SysAid 24277 Have third party use the inbound instead of the outbound
* 072016 - GRB001 - SysAid 25914 - skip detail info in email for rejects
* 062916 - DRF059 - SysAid 24364 - use the BOL to determine the division
* 072016 - GRB002 - SysAid 25914 - skip detail info on emails for rejects
* 072616 - GRB003 - SysAid 26036 - remove april sexton from emails
* 080316 - DRF060 - SysAid 22062 - expense code for Virginia Linen 014919
* 081516 - DRF061 - SysAid 26203 - 5.5% markup above frt cost for client
*                   01933 - Handy Wacks
* 090816 - GRB004 - SysAid 26890 - increase limit on variance to 99999.99
* 092016 - DRF062 - SysAid 27073 - 5% markup above frt cost for client
*                   01801 - Natural Foods
* 110116 - GRB005 - SysAid 27964 Allow audit to see notes
* 111416 - DRF063 - SysAid 28578 Add 05548 to the Airgas PO division check
* 021717 - TAG01  -  SysAid 27865 Added NMFC Expense Code For A&A Midwest
* 022817 - TAG02  - SysAid 27953 Deleted Bills
* 031017 - GRB006 - SysAid 30535 Up the limit from 10000 to 15000 for
*                   overrides for non-LTL carriers.
* 031417 - TAG03 - SysAid 31133 Add person deleting to subject line.
* 040717 - DRF064 - SysAid 28103 Added the Reason for not picking LCC to go into user defined field 4 for 01457
* 041217 - DRF065 - SysAid 31778 - Expense code 810 goes to division 00081
* 052417 - TAG04 - SysAid 32785 - Change salesperson ID Displayed
* 060917 - GRB007 - SysAid 31734 email on airgas invoices of $1000 or more
* 071117 - DRF066 - SysAid 33189 added user id from BOL to user define
*                   field 4
* 082817 - DRF067 - Ticket 5985 added Mary to the AD limit emails
* 082817 - DRF068 - Ticket 5970 added Mary to the Non-Core or Misroute Limit exceeded
* 092017 - DRF069 - Ticket 5077 allow expense code to be added for client
*                   01308 Malco
* 101017 - GRB08 - ME 7344 - Added reason for return for UDF4 for 1863
* 101017 - GRB09 - ME 7440 - increase additional due amount limit from 1000 to 1750
* 102317 - DRF070 - Ticket 7724 - Added 3rd party to pay 80% for carrier 08354 for client 01380
* 122417 - GRB10  - Modify vend.cust id for SPRING WINDOWS
* 122917 - DRF071 - Ticket 9402 change the mark up from 5.5 to 4.95 for
*                   01933 Handy Wacks
* 010418 - NKH01 - Modified to call Carrier Connect XL
* 022118 - DRF072 - Ticket 10228 - 15.0% markup above frt cost for client
*                   05765 - Titan Environmental
* 030818 - GRB11 - ME 10704 - increase additional due amount limit from 1750 to 2000
* 031418 = GRB12 Fix for deleted bills search
* 040918 - DRF073 - Added division contact to user defined field for client 05706
* 053118 - DRF074 - Ticket 12792 - Expense distrubtion error if the origin
*                   is Canadina but the destination is not. Send DIDUTY
*                   instead of DODUTY
* 062218 - DRF075 - Ticket 10643 - Added logic to pick up the WBS Element
*                   and Unloading Point from the AIRGAS.PO file
* 062818 - DRF076 - Ticket 13037 Added supplier number to user defined field 1
* 062918 - DRF077 - Ticket 13523 - 5% markup above frt cost for client
* 081418 - DRF078 - Ticket ACCU-7 - Pull in special field for SO Number, Part and CACHE for client 05806
* 091218 - DRF079 - Ticket ACCU-112 - Remove the 5% markup for 05806 Marco
* 091818 - NKH02 - ACCU-44 Use the substitute client for FB.AUDIT.ACC file
* 100518 - NKH03 - Corrected issue with misroute carrier
* 102418 - DRF080 - ACCU-13 Match pay for Malco
* 181204 - NKH04 - ACCU-214 Added OCR logic
* 012419 - DRF081 - ACCU-221 Added the logic to calculate division from the delivery number
* 012819 - DRF082 - ACCU-272 Added logice to reject bills with a customer/vendor of Paccar for client 01567 Betts Springs
* 020919 - GRB13 - ACCU-281 18% MARKUP FOR BIG GAME FOOTBALL
* 022719 - DRF083 - ACCU 290 Pull the division and expense code calculation
*                   from the BOL if it is provided
* 032619 - NKH05 - ACCU-316 Modified CREATE-FILE file sizes
* 032719 - NKH06 - Modified to accept received date
* 040219 - GRB14 - ACCU-343 4% MARKUP for Bennington Marine
* 040219 - GRB15 - ACCU-343 15% MARKUP for Energy Valves
* 061419 - NKH07 - ACCU-415 Corrected invoice number for FedEx Ground (1075)
* 062119 - NKH08 - ACCU-410 Added batch number
* 062619 - NKH09 - ACCU-410 Added port number
* 070219 - NKH10 - ACCU-430 Adding user locking for OCR clients
* 070819 - NKH11 - ACCU-430 Added pro compare
* 071119 - NKH12 - ACCU-430 Modified pro compare
* 072519 - NKH13 - ACCU-452 Removed received date
* 080119 - DRF084 - ACCU-367 4% markup for 06021 Highwater Marine
* 080219 - NKH14 - ACCU-472 Added image update logging
* 080219 - GRB16 - ACCU-465 Increase limit on auto email sent to 3000.00
* 082219 - GRB17 - ACCU-507 Remove 20,000 limit for data entry
* 090419 - DRF085 - ACCU-425 Added the reference numbers from the BOL into
*                   user defined fields 1
* 090519 - NKH15 - ACCU-529 Allow keying of pro 303882579810 without an error
* 091319 - NKH16 - ACCU-544 Move to the next image when AU is entered
* 091319 - NKH17 - ACCU-543 Move to next image when bill is rejected
* 091719 - NKH18 - ACCU-561 Corrected issue with Return not displaying bill
* 091819 - NKH19 - ACCU-562 Added carrier override for pro validation
* 091919 - NKH20 - ACCU-566 Removed pro check on pro's entered with leading zeros
* 092419 - NKH21 - ACCU-536 Added logging of where we are in the array when the bill is written
* 092419 - NKH22 - ACCU-555 Correct issue with [J]ump to same client
* 091619 - NKH23 - ACCU-545 Correct issue with Jump function for audit
* 092519 - NKH24 - ACCU-536 Added logging of OCR.ITEM increments
* 092619 - NKH25 - ACCU-574 Corrected issue with AR
* 092619 - NKH26 - ACCU-574 Modified to not update image if image is null.
* 100319 - NKH27 - ACCU-583 Allowed "N" for audit on rejected bills
* 100419 - NKH28 - ACCU-536 Removed "L"ast pro logic if in OCR
* 101519 - NKH29 - ACCU-617 Added queue retrieval of a batch
* 101619 - NKH30 - ACCU-541 Added auto verification for all clients
* 102119 - NKH31 - ACCU-629 Fixed locking by batch
* 110119 - NKH32 - ACCU-629 Revised locking
* 111419 - NKH33 - ACCU-668 Add locking flag to send to the image database
* 112019 - NKH34 - ACCU-614 Show rejects for audit when there is a new image
* 121619 - DRF086 - ACCU-711 Allow rejected EDI bills in freight payment to be moved back to EDI and removed from freight payment
* 010620 - NKH35 - ACCU-719 Send image delete when bill is moved back to EDI
* 010320 - NKH36 - ACCU-733 Updated FB.BILLS.ACCESS
* 011320 - NKH37 - ACCU-740 Updated image on AD/BD bill when bill is AU'd
* 012320 - NKH38 - ACCU-726 Initialed variable causing issues with audit seeing the correct prompts
* 020320 - GRB18 - ACCU-510 Build list of edi rejections for carrier email
* 020420 - DRF087 - ACCU-787 Put the PO number in the BOL if there is one in the BOL file.
* 020420 - DRF088 - ACCU-763 Remove misroutes for carrier N&M Transfer (02199) and Panama Transfer (01268) for Hillyard
* 022820 - NKH39 - ACCU-811 Checked for image before calling duplicate routine
* 030320 - NKH40 - ACCU-812 Corrected issue with GST percentage
* 031220 - DRF089 - ACCU-825 - 5% mark-up for 05675 Rackmount Solutions
* 032020 - DRF090 - ACCU-830 Remove misroutes for carrier TCBX (05166) for Hillyard
* 033020 - DRF091 - ACCU-839 3.5% Markup for 06795 Weiler
* 042820 - NKH41 - ACCU-857 Added warning for Airgas PO  with a code of FPV or FPC
* 051220 - NKH42 - ACCU-866 Added CR option to move a corrected bill to audit
* 072220 - NKH43 - ACCU-938 Added account number for FedEx
* 080620 - NKH44 - ACCU-949 Added account number for all carriers
* 080720 - NKH45 - ACCU-954 Allow /1 /2 etc for client 6885
* 022515 - DRF092 - ACCU-992 - Change general override for LTL from
*                   1500.00 to 3000.00
* 090820 - NKH46 - ACCU-951 Modify INCO terms for Airgas
* 091820 - NKH47 - ACCU-975 Modify to allow change from never pay to eventual pay
* 092920 - NKH48 - ACCU-1010 Add items from TMS BOL for client 6885
* 110620 - NKH50 - ACCU-1041 Moved Sales order to user difined field 4
* 121320 - DRF093 - ACCU-1062 15% Markup for 05610 Above View
* 020321 - NKH51 - ACCU-1110 Add items from TMS BOL for client 6077
* 020421 - NKH52 - ACCU-1118 Added crivers to distribution email
* 020421 - NKH53 - ACCU-1119 Added crivers to distribution email
* 020921 - NKH54 - ACCU-1021 Added Strategic Materials Truckload rating from Tempo - Removed 04/30/21
* 022221 - DRF094 - ACCU-1126 Auto add expense code
* 030221 - NKH55 - ACCU-1141 Removed client 1127 from Airgas PO division check
* 032321 - NKH56 - ACCU-1164 Lock bill modifications
* 050621 - DRF095 - ACCU-1203 - 15.0% markup above frt cost for client
*                   06972 - Titan Enviro Containment
* 081121 - NKH57 - ACCU-1315 Allow upper and lower case for locked bill update
* 081321 - NKH58 - ACCU-1316 Allow lock override for user defined fields
* 083121 - NKH59 - ACCU-1342 AFSmartPay Locking mods
* 090921 - NKH60 - ACCU-1342 AFSmartPay Locking mods
* 100421 - NKH61 - ACCU-1408 Updated touch tracking
* 105021 - NKH62 - ACCU-1410 Display image from pro rec when new rec is read
* 101921 - NKH63 - ACCU-1436 Removed acct number for all carriers except 15,1075,41,1312,365
* 111521 - NKH64 - ACCU-1485 Changed verification on deleted bills to "Y"
* 120221 - NKH65 - ACCU-1447 Added BOL number from TMS BOL for client 5806
* 120721 - NKH66 - ACCU-1446 Changed AD limit from 2000 to 3000
* 021822 - NKH67 - ACCU-1569 Added serial number and part number for client 1862
* 040222 - DRF096 - ACCU-1577 Add cons code (customer/vendor<2> to
*                   user defined field <183>
* 040722 - NKH68 - ACCU-1626 Allow dup of bills with inactive division
* 070422 - DRF097 - ACCU-1732 Modified the division to be 6 digit for 01389
* 072822 - DRF098 - ACCU-1826  10% mark up for 07060 for LTL carriers
*                  02653, 00014, and 00013
* 082622 - DRF099 - ACCU-1826 Add carriers 00212 and 00171
* 111722 - NKH69 - ACCU-1841 Modified account number
* 111722 - NKH70 - ACCU-1892 Modified invoice number
* 121522 - NKH71 - ACCU-1990 Added audit password for invoices over $3000
* 013023 - NKH72 - ACCU-2054 Addes BPTS batchs
* 042523 - NKH73 - ACCU-2088 Added BOL for client 6869
* 071123 - NKH74 - ACCU-2288 Added Smarty logic
* 071923 - NKH75 - ACCU-2338 Removed Mary and Charlene, Added Dustin to an email
* 080923 - DRF100- ACCU-2105 pulls the AFS BOL forward for AD/BD
* 080823 - NKH76 - ACCU-2360 Modified transit days logic
* 081423 - NKH77 - ACCU-2378 Modified email recipiants
* 091123 - NKH78 - ACCU-2399 Update Cust Vend Address if it does not exist for smarty
* 091823 - NKH79 - ACCU-2407 Modified for Spring Windoes to use TL codes vs INTL codes
* 020924 - NKH80 - ACCU-2502 Added auto reject for client 7293
* 021924 - GRB19 - ACCU-2576 Modify to call TEMPO for hundred weight CWT rating
* 050124 - NKH81 - ACCU-2576 Modified TL weight to default to class 50 and the total weight
* 050624 - GRB20 - ACCU-2655 Modified division to be 6 digits for 1644
* 072924 - DRF101 - ACCU-2716 - Have 01499 going to BOL first
* 081624 - NKH82 - INT-437 BPTS rejected bills
* 082924 - GRB21 - ACCU-2734 Added third party only to TEMPO CALL
* 091124 - NKH83 - INT-437 Added display of doc handle
*
* 112224 - DRF102 - ITSM-161459 Setup 06700 Rock West to have cargo coverage
* 121724 - DRF103 - ITSM-166779 Added clients 07491, 05662 and 07476
* 011325 - DRF104 - ITSM-167950 Open the cargo coverage for all clients
* 021825 - DRF105 - ACCU-2843 BD password if the amount is over 999.99
* 040825 - DRF106 - ITSM-170071 Mark up of 24% for client 00373 for carrier 00601
* 043025 - NKH84  - ACCU-2135 Revised program to handle all R&L invoices

* End modification history
**********************************************************************
*Notes:
*
*Be aware that REVIEW.STATUS.CODE 970 is also used in LOAD.FB.REVIEW as an indicator
*that the bill is being pushed to the web.

*If you change or add any REVIEW.STATUS.CODEs, be aware that it might affect UPD.FB.REVIEW, LOAD.FB.REVIEW
*and BUILD.DF.REVIEW.SUB, all of which have logic based on codes 970 - 975.
*
**********************************************************************
$INCLUDE PROG.ADMIN INC_OPTIONS
$INCLUDE FILE.DEFS INC_DIVISION.CODES
$INCLUDE FILE.DEFS INC_FB.CHECKS
$INCLUDE FILE.DEFS INC_CLIENTS
$INCLUDE FILE.DEFS INC_ADDS60.CODES
      COMMON PROGPARAMS(24)
      EQU PROGFROM TO PROGPARAMS(1)
      EQU USER TO PROGPARAMS(2)
      EQU PROCDATE TO PROGPARAMS(3)

*---- Initialize variables
      GOSUB INITIALIZE.GENERAL.VARIABLES
      GOSUB INITIALIZE.BILL.VARIABLES
      GOSUB OPEN.GENERAL.FILES
      READV BILL.LOCK.OVERRIDE FROM F.OPERATOR,USER,79 ELSE BILL.LOCK.OVERRIDE = 0         ; * NKH60
      IF BILL.LOCK.OVERRIDE = 'Y' THEN BILL.LOCK.OVERRIDE = 1          ; * NKH60
      READV OCR.ARR.FLAG FROM CONTROL.FILE, 'FB.2.1.NW', 3 ELSE OCR.ARR.FLAG = 'N'
      IF DBCTRL<14>='A' THEN
         USER.TYPE='A'
      END ELSE
         USER.TYPE=''
      END
      CC.VOUT = ''                       ; * NKH01
      GOSUB OCR.INIT                     ; * NKH04
      BATCH.NO = ''                      ; * NKH08
      AU.OPTION = 0                      ; * NKH16
      REJ.BILL = 0                       ; * NKH17
*      RVCD.DATE = ''                     ; * NKH06   * NKH13
      IMG.UPD = ''                       ; * NKH14
      OCR.ARR.LOG.REC = ''               ; * NKH21
      SAVE.VER.PRO = ''                  ; * NKH30
      OCR.LOCK.KEY = ''                  ; * NKH30
      CURRENT.LOCK = ''                  ; * NKH32
      REJECTS.DISPLAYED = 0              ; * NKH38
      JUMPING = 0                        ; * NKH23
      ACCT.NUM=''                        ; * NKH43
      *      LCC.AMOUNT=''                      ; * NKH54
      *      LCC.CARRIER=''                     ; * NKH54
      *      LCC.NAME=''                        ; * NKH54
      *      LCC.SCAC=''                        ; * NKH54
      *      LCC.ARRAY=''                       ; * NKH54
      EQU S5 TO '     '                  ; * JAD02
      TERMS.ERR = 'N'                    ; * JAD02
      T.SH.NAME =''                      ; * JAD02
      T.SH.ADDR =''                      ; * JAD02
      T.SH.CITY =''                      ; * JAD02
      T.SH.ST = ''                       ; * JAD02
      T.SH.ZP = ''                       ; * JAD02
      T.BOL.PRO.NO = ''                  ; * JAD02
      T.AFS.BOL.DESC = ''                ; * JAD02
      T.TERMS = ''                       ; * JAD02
      T.CN.NAME =''                      ; * JAD02
      T.CN.ADDR =''                      ; * JAD02
      T.CN.CITY =''                      ; * JAD02
      T.CN.ST = ''                       ; * JAD02
      T.CN.ZP = ''                       ; * JAD02
      T.BT.NAME =''                      ; * JAD02
      T.BT.ADDR =''                      ; * JAD02
      T.BT.CITY =''                      ; * JAD02
      T.BT.ST = ''                       ; * JAD02
      T.BT.ZP = ''                       ; * JAD02
      AFS.BOL=0                          ; * JAD02
      MATCH.BOL=0                        ; * DRF080
      RES.FLAG = ''                      ; * NKH74
      * Begin TAG02
      CHK.DEL.BILL=0
      * End TAG02
      BEGIN CASE                         ; * JMK156
         CASE DBCTRL<12>=1               ; * SWB07
            DHL.20475=1                  ; * SWB07
         CASE USER.TYPE='A'              ; * JMK156
            DHL.20475=1                  ; * JMK156
         CASE USER='MARY'                ; * JMK156
            DHL.20475=1                  ; * JMK156
         CASE 1                          ; * JMK156
            DHL.20475=0                  ; * JMK156
      END CASE                           ; * JMK156
      USER.EMAIL=DBCTRL<20>              ; * JMK34
      DISC.DESC=''                       ; * JMK34
      AVOUT=''
      FRT.ARRAY=''                       ; * JMK17
      MIS.ARRAY=''                       ; * JMK17
      TAG.CHG.PCT=.10                    ; * JMK19
      TAG.LIFESPAN=365                   ; * JMK19
      FIRST.TIME.TRY=0
      LAST.CLIENT.KEYED=''
      JUMP.TO.CLIENT=0
      CAPTURE.INVOICE=0                  ; * JMK106
      TODAY=DATE()                       ; * JMK124
      OTODAY=OCONV(TODAY,'D4/')          ; * JMK124
      XREF.CHECK.DATE=ICONV(OTODAY[1,6]:OTODAY[7,4]-3,'D')   ; *JMK124
      TERM.TYPE=SYSTEM(7)
      BEGIN CASE
         CASE TERM.TYPE='REGENT60'
            REV.ON = TERM.ESC.SEQ:CHAR(TERM.REV)   ; * JCW07
            REV.OFF = TERM.ESC.SEQ:CHAR(TERM.NORMAL)         ; * JCW07
         CASE 1
            REV.ON=@(-13)
            REV.OFF=@(-14)
      END CASE

      IF USER = "KHENDRICKSON" THEN
         REV.ON = "" ; REV.OFF = ""      ; * NPR062210 Dedugging issue
      END                                ; * NPR062210 Dedugging issue

      BOL.FIRST=''
      SLSMAN.STR = ""                    ; * NPR08
      SECOND.SALESMAN.NUMBER.NAME = ""   ; * NPR08
      DO.BOL.POP = 1                     ; *ZZZ Set flag for BOL Population and verification

      READ ENPRO.INDUSTRIES FROM F.CLIENTS,87777 THEN        ; * SWB09
         ENPRO.CLIENT.NBRS = ENPRO.INDUSTRIES<175>           ; * SWB09
         *The following Client list is intended to be a mv string      ; * SWB09
         *with the associated carriers being sub-values of the         ; * SWB09
         *value position                                               ; * SWB09
         ENPRO.CLIENTS.USING.OLA='02174'           ; * SWB09
         ENPRO.CARRIERS.USING.OLA='00748'          ; * SWB09
      END ELSE                           ; * SWB09
         ENPRO.INDUSTRIES=''             ; * SWB09
         ENPRO.CLIENT.NBRS=''            ; * SWB09
      END                                ; * SWB09

      * READ TABLES THAT MAY BE NEEDED
      READ DTARIFF.DATE.XREF FROM F.TABLES,'TARIFF.DATE.XREF' ELSE DTARIFF.DATE.XREF=''
      READ DTARIFFS FROM F.TABLES,'TARIFFS' ELSE DTARIFFS=''
      READ LI.CODES FROM F.TABLES,'LI.CODES' ELSE LI.CODES=''
      READ REJECT.CODES FROM F.TABLES,'REJECT.CODES' ELSE REJECT.CODES=''
      READ AIR.CODES FROM F.TABLES,'AIR.CODES' ELSE AIR.CODES=''
      READ INTL.CODES FROM F.TABLES,'INTL.CODES' ELSE INTL.CODES=''    ; * NPR031

      READ CONVERSION.RATE FROM F.TABLES,'CAN.TO.US.DOLLARS' ELSE
         CALL ELINE('Canada to US Dollar Rate not setup')
         GOTO PROGRAM.EXIT               ; * NKH10
      END
      READ INVOICE.CARRIERS FROM F.TABLES,'INVOICE.CARRIERS' ELSE INVOICE.CARRIERS=''      ; * JMK106

*****************************************************************
* MAIN PROCESSING
*****************************************************************
      GOSUB GET.SCREEN.DSP

      * Begin NKH06
      *      TEMP.DATA.STACK = @DATA.PENDING    ; * SWB08
      *      IF TEMP.DATA.STACK = '' THEN       ; * SWB08
      *TEMP.DATA.STACK will be null unless this program is EXECUTEd from LTL.
      *         DBCTRL.14 = DBCTRL<14>          ; * SWB08
      *         IF DOW.USERS # '' THEN          ; * SWB08
      *            LOCATE USER IN DOW.USERS<1> SETTING DOW.USER.POS THEN      ; * SWB08
      *Since the Control Record exists, only Track the Mail Room Received Date
      * IF the user is Freight Payment or a Freight Payment Manager.
      *               IF DBCTRL.14 = 'F' THEN   ; * SWB08
      *                  SESSION.UPDATE.FB.TIMELINE = TRUE          ; * SWB08
      *               END                       ; * SWB08
      *            END                          ; * SWB08
      *         END ELSE                        ; * SWB08
      *Since the control record doesn't exist, prompt for the Mail Room
      *Received Date IF the user is Freight Payment, or a Freight Payment
      *Manager.
      *            IF DBCTRL.14 = 'F' THEN      ; * SWB08
      *               SESSION.UPDATE.FB.TIMELINE = TRUE   ; * SWB08
      *            END                          ; * SWB08
      *         END                             ; * SWB08

      *         UPDATE.FB.TIMELINE = SESSION.UPDATE.FB.TIMELINE     ; * SWB08
      *         IF SESSION.UPDATE.FB.TIMELINE THEN        ; * SWB08
      *            GOSUB GET.MAIL.ROOM.DATE     ; * SWB08
      *            GOSUB 8100                   ; * Display screen   ; * SWB08
      *         END                             ; * SWB08
      *      END                                ; * SWB08
      * End NKH06

*****************************************************************
100:  * Enter client number
*****************************************************************
      GOSUB 8100                         ; * Display screen
      * Begin NKH10
      IF OCR.ENTRY THEN
         READ OCR.REC FROM OCR.LOCK, OCR.LOCK.KEY THEN       ; * NKH31
            IF OCR.REC<1> = USER AND OCR.REC<2> = CH.NUM THEN
               DELETE OCR.LOCK,OCR.LOCK.KEY        ; * NKH31
            END
         END
      END
      * End NKH10

      GOSUB OCR.INIT                     ; * NKH04

      ONSCREEN.ID=USER:'.TXT'
      DELETE F.ONSCREEN,ONSCREEN.ID      ; * JMK01
      SEQ.FLAG = 0

      *      IF SESSION.UPDATE.FB.TIMELINE THEN           ; * SWB08  NKH06
      *         HELP = "Enter the client number. [MR]=Mail Room Date [X]=Exit [EX]=Exit"          ; * SWB08 NKH06
      *      END ELSE                           ; * SWB08   NKH06
      HELP = "Enter the client number. [X]=Exit [EX]=Exit"
      *      END                                ; * SWB08   NKH06
      IF CLIENT.ID = '' THEN MASK = '#####' ELSE MASK = CLIENT.ID

      CALL GEN.IN(9,1,MASK,'',Q,0,20,'','',2,-5,1,0,QI,HELP,0,23)      ; *NPR08
      CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      QI = OCONV(QI,'MCU')
                                         ; *  END.FLAG is a flag set when    ; * JAD02
                                         ; *  this program is EXECUTED from the LTL(EDI) program.    ; * JAD02
      IF QI MATCHES "5N'E'" THEN
         QI=QI[1,5]
         END.FLAG='Y'
      END ELSE
         END.FLAG='N'
      END
      BEGIN CASE
         CASE QI = 'EX' ! QI = 'X'
            GOTO PROGRAM.EXIT            ; * NKH10
         CASE QI = '' & CLIENT.ID = ''
            GOTO PROGRAM.EXIT            ; * NKH10
         CASE QI = ''
            Q = CLIENT.ID
            *         CASE QI = 'MR' AND SESSION.UPDATE.FB.TIMELINE       ; * SWB08 NKH06
            *            GOSUB GET.MAIL.ROOM.DATE     ; * SWB08                     NKH06
            *            GOTO 100                     ; * SWB08                     NKH06
         CASE NOT(QI MATCHES "0N")
            VIN=0                        ; * Starting Chars In
            VOUT=''
            CALL SOUNDEX.DISPLAY.NEW(VIN,VOUT,QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            CC+=VOUT<1> ; GOSUB PRINT.CC

            CLR.SCR = 1 ; GOSUB DISP.SCREEN.HEADING          ; *NPR08
            BEGIN CASE
               CASE ITEM.LIST = ''
                  GOTO 100               ; * START OVER
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                  GOTO 100               ; * START OVER
               CASE 1
                  IF NUM(ITEM.LIST<1,1>) THEN SND.DATA=ITEM.LIST<1,1> ; GOSUB SEND.DATA
                  GOTO 100               ; * START OVER
            END CASE
         CASE NUM(QI)
            Q = QI'R%5'
         CASE 1
            GOTO 100                     ; * START OVER
      END CASE

*****************************************************************
* Read client name
*****************************************************************
      BDA.FLAG = 0
      IF CLIENT.ID # Q THEN CLIENT.ID = Q'R%5'
      MATREAD CLIENT.REC FROM F.CLIENTS,CLIENT.ID ELSE
         CALL ELINE("ERROR - Client ":CLIENT.ID:" not on file.")
         CC+=1 ; GOSUB PRINT.CC
         GOTO 100                        ; * START OVER
      END
      * Begin NKH04
      *      IF CLIENT.REC(70)<1,16> = 'Y' THEN
      *         OCR.CLIENT = 1
      *      END ELSE
      *         OCR.CLIENT = 0
      *      END
      * End NKH04
      IF CLIENT.ID='02427' THEN SO.NUM=''          ; * JMK270
      READ CLIENT.ITM FROM F.CLIENTS,CLIENT.ID ELSE CLIENT.ITM=''      ; * JMK34
      CLIENT.DAYS=CLIENT.REC(186)        ; * JMK51
      FP.CO=CLIENT.REC(92)               ; * JMK48
      *      GOSUB GET.QV.OPTS                  ; * JMK24      ; * NKH30
      CL.TL.FLAG=CLIENT.REC(70)<1,3>     ; * JMK12
      FB.DTL.CAPTURE=CLIENT.REC(70)<1,10>          ; * JMK52
      LCC.MIN.AMT=CLIENT.REC(148)        ; * JMK159
      MAX.LTL=15000                      ; * JMK07
      IF CLIENT.REC(150)#"" THEN MAX.LTL=CLIENT.REC(150)     ; * JMK07
      CARR.FSC=CLIENT.REC(189)           ; * JMK45
      ORIG.CL.BOL.FLAG=CL.BOL.FLAG
      CLIENT.NAME = CL.NAME
      CLIENT.CITY = CL.CITY
      CLIENT.STATE = CL.ST
      ZIP.LEN = CL.ZIP.FLAG
      IF ZIP.LEN = 'C' THEN ZIP.DIGITS=6 ELSE ZIP.DIGITS=5
      ZIP.MASK='L#':ZIP.DIGITS
      CL.AUDITOR = CLIENT.REC(71)        ; * NPR08
      CL.STATUS = CLIENT.REC(30)         ; * NPR08
      IF CL.STATUS = "A" THEN CL.STATUS = "Active"           ; * NPR08
      IF CL.STATUS = "I" THEN CL.STATUS = "InActive"         ; * NPR08
      PRE.AUD.FROM.DT = CLIENT.REC(27)   ; * NPR08
      PRE.AUD.TO.DT = CLIENT.REC(232)    ; * NPR08
      CLIENT.DOW=CLIENT.ITM<151>         ; * JMK167
      HIN = CLIENT.ITM<240> ; HOUT = ""  ; * NPR13  Highlight based on ranking
      CALL CLIENT.HL(HIN,HOUT) ; HLB = HOUT<1,1> ; HLA = HOUT<1,2>     ; * NPR13
      IF CLIENT.ITM<254> NE "" THEN
         BDA.FLAG = 1
         CRT @(69,0): "---" : REV.ON : "BDA" : REV.OFF : "-----"       ; * SWB02
      END ELSE
         BDA.FLAG = 0                    ; * NPR111910
         CRT @(69,0): STR('-',11)        ; * SWB02
      END
      CBVIN=''
      CBVIN<1>=CLIENT.ID
      CALL CLIENT.BLOCK(CBVIN,CBVOUT,F.CONTROL)
      IF CARR.FSC='Y' THEN               ; * JMK107
         CRT @(9,1) : CBVOUT<1>:CLIENT.ID:'*':HLB : CLIENT.NAME[1,30] : HLA:@(-6)          ; * JMK107 * NPR08
      END ELSE                           ; * JMK107
         CRT @(9,1):CBVOUT<1>:CLIENT.ID:' ':HLB:CLIENT.NAME[1,30] : HLA:@(-6)    ; * JMK107 * NPR08
      END
      IF CL.AUDITOR='' THEN
         AUDITOR.TEXT=''
         CALL ELINE("Client: ":CLIENT.ID:" ":CLIENT.NAME:" does not have an auditor.")
         GOTO 100
      END ELSE
         AUDITOR.TEXT=''
      END
      CRT @(59,3):AUDITOR.TEXT'L#20':    ; * NPR08 ; * JMK161
      ACCT.MGR = ''                      ; * NPR08
      ACCT.MGR.NAME = ''                 ; * NPR08
      ACCT.MGR.EMAIL = ''                ; * NPR16
      LEAD.SALESMAN.ID=CLIENT.REC(114)
      IF LEAD.SALESMAN.ID='' THEN
         LEAD.SALESMAN.NUMBER.NAME='Not on file'
      END ELSE
         READ SALESMAN.REC FROM F.SLSMAN,LEAD.SALESMAN.ID THEN
            LEAD.SALESMAN.NUMBER.NAME=LEAD.SALESMAN.ID:' ':SALESMAN.REC<1>'L#25'
         END ELSE
            LEAD.SALESMAN.NUMBER.NAME=LEAD.SALESMAN.ID:' Name Not Found'
         END
      END
      * Begin TAG04 No Need For This Code - Not Used in Program
      *      SECOND.SALESMAN.ID=CLIENT.REC(115)
      *      SLSMAN.NAME=''                     ; * JMK34
      *      IF SECOND.SALESMAN.ID='' THEN
      *         SECOND.SALESMAN.NUMBER.NAME='Not on file'
      *      END ELSE
      *         READ SALESMAN.REC FROM F.SLSMAN,SECOND.SALESMAN.ID THEN
      *            SECOND.SALESMAN.NUMBER.NAME=SECOND.SALESMAN.ID:' ':SALESMAN.REC<1>'L#25'
      **           ACCT.MGR = SALESMAN.REC<11>  ; * NPR08  ; * RLM001
      *         END ELSE
      *            SECOND.SALESMAN.NUMBER.NAME=SECOND.SALESMAN.ID:' Name Not Found'
      *         END
      *      END
      * End TAG04
      ACCT.MGR = CLIENT.REC(264)         ; * RLM001
      IF ACCT.MGR # '' THEN
         READ ACCT.MGR.REC FROM F.SLSMAN,ACCT.MGR THEN
            ACCT.MGR.NAME = ACCT.MGR.REC<1>'L#25'
            ACCT.MGR.EMAIL = ACCT.MGR.REC<8>       ; * NPR16
         END
      END ELSE
         ACCT.MGR.NAME = ""
      END
      * Begin TAG04
      *      SLSMAN.STR='Initiating Rep:':TRIM(LEAD.SALESMAN.NUMBER.NAME):'~':'Svc Salesman:':TRIM(SECOND.SALESMAN.NUMBER.NAME)           ; *NPR08
      *      SLSMAN.STR=CHANGE(SLSMAN.STR,'~',SPACE(80-LEN(SLSMAN.STR)))      ; *NPR08
      CRT @(59,1):TRIM(LEAD.SALESMAN.NUMBER.NAME)[1,21]
      * End TAG04
      ACCT.MGR.DSP=TRIM(ACCT.MGR: " " :ACCT.MGR.NAME)        ; * SWB01
      CRT @(59,2):ACCT.MGR.DSP[1,21]     ; *SWB01
      CRT @(59,3):CL.AUDITOR[1,21]       ; *SWB01
      CRT @(9,4):OCONV(PRE.AUD.FROM.DT,"D2/")      ; *NPR08
      CRT @(22,4):OCONV(PRE.AUD.TO.DT,"D2/")       ; *NPR08
      CRT @(41,4):CL.STATUS              ; *NPR08
      AR.REP = CLIENT.REC(269)           ; * RLM002
      AR.REP.NAME=''                     ; * RLM002
      IF AR.REP # '' THEN                ; * RLM002
         READ AR.REP.REC FROM F.BCTRL,AR.REP THEN  ; * RLM002
            AR.REP.NAME = TRIM(AR.REP.REC<13>)'L#20'
         END
      END
      CRT @(59,5):AR.REP.NAME            ; * RLM002

      GOSUB OPEN.CLIENT.FILES
      IF START.OVER THEN
         GOTO 100
      END
      CLIENT.START.TIME=TIME()
      READ CONTROL.REC FROM F.CONTROL,CLIENT.ID ELSE CONTROL.REC=''
      READ MODE.CONTROL.REC FROM F.MODE.CONTROL,CLIENT.ID ELSE MODE.CONTROL.REC=''         ; * JAD001
      READ REJ.CTRL.REC FROM F.REJ.CTRL,CLIENT.ID ELSE REJ.CTRL.REC=''           ; * JMK46

      HK.EXPENSE.CODES = ''              ; *  NPR038
      IF CLIENT.ID='01832' OR CLIENT.ID='01870' THEN         ; *  NPR038
         READ HK.EXPENSE.CODES FROM F.TABLES, "HK*EXPENSE_CODES" ELSE HK.EXPENSE.CODES = ''          ; *  NPR038
      END                                ; *  NPR038

      * Begin NKH04
*****************************************************************
150:  * Get OCR Stack if Audit
*****************************************************************
      IF DBCTRL<14>='A' THEN
         IF OCR.STACK # '' THEN MASK = OCR.STACK'R%1' ELSE MASK = '#'
         HELP = "Enter the stack number. [X]=Back [EX]=Exit"
         CALL GEN.IN(51,1,MASK,'',Q,0,1,'','',2,-5,1,0,QI,HELP,0,23)
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC
         QI = OCONV(QI,'MCU')
         OCR.STACK = QI
         IF (OCR.STACK > 0 AND OCR.STACK < 5) OR OCR.STACK = 'A' THEN
            IF OCR.STACK # 'A' THEN
               HUSH ON
               CMD = 'SELECT FB.BILLS,':CLIENT.ID:' WITH 280 # "" AND WITH 39 = "':OCR.STACK:'" BY CARRIER# BY 280'
               EXECUTE CMD
               HUSH OFF
            END ELSE
               HUSH ON
               *               CMD = 'SELECT FB.BILLS,':CLIENT.ID:' WITH 280 # "" AND  WITH (39 = "2" "3" "4") BY 39 BY 280'
               CMD = 'SELECT FB.BILLS,':CLIENT.ID:' WITH 280 AND WITH (39 = "2" "3" "4") OR WITH 280 AND WITH (39 # "O") AND WITH (AD # "0" OR BD # "0") BY CARRIER# BY 39 BY 280'
               EXECUTE CMD
               HUSH OFF
            END
            EOF = 0
            IF @SELECTED < 1 THEN
               CALL ELINE('There is no OCR to import at this time')
               ARRAY.COUNT = 0
               GOTO 200
            END
            OCR.ENTRY = 1
            EOF = 0
            LOOP
               READNEXT OCR.ID ELSE EOF = 1
            UNTIL EOF
               READV IMAGE FROM F.BILLS, OCR.ID, 280 ELSE IMAGE = ''
               T.ARRAY<3,-1> = IMAGE
               T.ARRAY<4,-1> = FIELD(OCR.ID,'*',2,1)
            REPEAT
            ARRAY.COUNT = DCOUNT(T.ARRAY<3>,@VM)
            OCR.ITEM = 1
            *CRT 'SHOW IMAGE 4';INPUT CONT
            IF DBCTRL<14> = 'F' OR (DBCTRL<14> = 'A' AND NOT(JUMPING)) THEN      ; * NKH23
               CALL FB.SHOW.INV.IMAGE(T.ARRAY<3,OCR.ITEM>)
               IMAGE = T.ARRAY<3,OCR.ITEM>
            END                          ; * NKH23
         END
      END
      * End NKH04

*****************************************************************
200:  * Enter carrier
*****************************************************************
      M.BOL.REC = ''                     ; *NPR777
      AFS.BOL=0                          ; * JAD02
      ID.BOL.CRX = ''                    ; *NPR777
      ID.BOL.CRX2 = ''                   ; *NPR777
      * Begin NKH04
      IF OCR.CLIENT AND DBCTRL<15> = 'FP' AND DBCTRL<14> = 'F' THEN
         OCR.CLIENT = 0
         QI = 'OCR'
      END ELSE
         * End NKH04
         IF OCR.ENTRY AND DBCTRL<14> = 'A' AND JUMPING AND CARRIER.ID # '' THEN  ; * NKH23
            QI = CARRIER.ID              ; * NKH23
            JUMPING = 0                  ; * NKH23
         END ELSE                        ; * NKH23
            CRT @(14,2):"           "    ; * NKH29
            IF CARRIER.ID # '' THEN MASK = CARRIER.ID'R%5' ELSE MASK = '#####'
            *            IF SESSION.UPDATE.FB.TIMELINE THEN           ; * SWB08     NKH06
            *               HELP = "Enter the carrier number. [MR]=Mail Room Date [X]=Back [EX]=Exit"         ; * SWB08 NKH06
            *            END ELSE                           ; * SWB08   NKH06
            HELP = "Enter the carrier number. [X]=Back [EX]=Exit"
            *            END                                ; * SWB08   NKH06
            CALL GEN.IN(9,2,MASK,'',Q,0,30,'','',2,-5,2,0,QI,HELP,0,23)          ; *NPR08    NKH72
            CC+=LEN(QI)+1 ; GOSUB PRINT.CC
            QI = OCONV(QI,'MCU')
         END                             ; * NKH23
      END                                ; * NKH04
      COMING.FROM.CARRIER = 1            ; * NKH04
      * Begin NKH31
      IF OCR.ENTRY AND DBCTRL<14>='F' THEN
         IF QI[1,4] = "ASHV" OR QI[1,8] = "SHV_BPTS" THEN    ; * NKH72
            READ OCR.REC FROM OCR.LOCK, OCR.LOCK.KEY THEN
               IF OCR.REC<1> = USER AND OCR.REC<2> = CH.NUM THEN
                  DELETE OCR.LOCK,OCR.LOCK.KEY
               END
            END
         END
      END
      * End NKH31
      BEGIN CASE
         CASE QI = 'X'
            IF CHANGE.FLAG THEN GOTO 200 ELSE GOTO 100
         CASE QI = 'EX'
            GOTO PROGRAM.EXIT            ; * NKH10
            * Begin NKH04
         CASE QI='OCR' OR QI[1,4] = "ASHV" OR QI[1,8] = "SHV_BPTS"     ; * NKH29    NKH72
            IF CLIENT.REC(70)<1,16>#'Y' THEN
               CALL ELINE('Client not setup as an OCR client')
               GOTO 100
            END
            IF DBCTRL<14>='F' THEN
               * Begin NKH08
               SEND.EMAIL = 0
               EMAIL.OUT=''
               *               EMAIL.OUT<1>='nmeddaugh@afs.net':@VM:'gbino@afs.net':@VM:'dfriend@afs.net'
               EMAIL.OUT<1>='nmeddaugh@afs.net':@VM:'dfriend@afs.net'
               EMAIL.OUT<4>='FBBP_FB.2.1.NW@afs.net'
               EMAIL.OUT<6,-1>='User:':USER:' Date:':OCONV(DATE(),'D2/'):' Time:':OCONV(TIME(),'MTHS')
               EMAIL.OUT<6,-1>=' ':@VM
               * End NKH08
               VIN = '' ; VOUT = ''
               * Begin NKH29
               IF QI[1,4] = "ASHV" OR QI[1,8] = "SHV_BPTS" THEN        ; * NKH72
                  VIN = QI
               END ELSE
                  VIN = CLIENT.ID
               END
               CALL SEND.CLIENT.REST(VIN,VOUT)
               * End NKH29
               T.ARRAY = VOUT
               ARRAY.COUNT = DCOUNT(T.ARRAY<3>,@VM)
               OCR.ENTRY = 1
               IF ARRAY.COUNT <= 0 THEN
                  CALL ELINE('There is no OCR to import at this time')
                  GOTO 100
               END
               GOSUB OCR.LOCK            ; * NKH10
               IF OCR.LOCKED THEN GOTO 200         ; * NKH10
               OCR.ITEM=1
               VERIFY.FLAG = T.ARRAY<1,OCR.ITEM>
               IMAGE = T.ARRAY<3,OCR.ITEM>
               IMAGE.PRO = T.ARRAY<4,OCR.ITEM>     ; * NKH11
               * Begin NKH08
               BATCH.NO = T.ARRAY<5,OCR.ITEM>
               IF BATCH.NO = "NV" THEN
                  EMAIL.OUT<5>='Null Batch received on OCR'
                  EMAIL.OUT<6,-1>='IMAGE: ':T.ARRAY<3,OCR.ITEM>
                  EMAIL.OUT<6,-1>='PRO:   ':T.ARRAY<4,OCR.ITEM>
                  SEND.EMAIL=1
               END
               VER.COUNT = DCOUNT(T.ARRAY<1>,@VM)
               PRO.COUNT = DCOUNT(T.ARRAY<4>,@VM)
               BATCH.COUNT = DCOUNT(T.ARRAY<5>,@VM)
               BEGIN CASE
                  CASE VER.COUNT # ARRAY.COUNT
                     EMAIL.OUT<5>='OCR Array Counts do not match'
                     EMAIL.OUT<6,-1> = "Verify count not equal image count"
                     EMAIL.OUT<6,-1> = ' ':@VM
                     EMAIL.OUT<6,-1> = 'Image Count: ':ARRAY.COUNT
                     EMAIL.OUT<6,-1> = 'Verify Count: ':VER.COUNT
                     SEND.EMAIL=1
                  CASE PRO.COUNT # ARRAY.COUNT
                     EMAIL.OUT<5>='OCR Array Counts do not match'
                     EMAIL.OUT<6,-1> = "Pro count not equal image count"
                     EMAIL.OUT<6,-1> = ' ':@VM
                     EMAIL.OUT<6,-1> = 'Image Count: ':ARRAY.COUNT
                     EMAIL.OUT<6,-1> = 'Pro Count: ':PRO.COUNT
                     SEND.EMAIL=1
                  CASE BATCH.COUNT # ARRAY.COUNT
                     EMAIL.OUT<5>='OCR Array Counts do not match'
                     EMAIL.OUT<6,-1> = "Batch count not equal image count"
                     EMAIL.OUT<6,-1> = ' ':@VM
                     EMAIL.OUT<6,-1> = 'Image Count:  ':ARRAY.COUNT
                     EMAIL.OUT<6,-1> = 'Batch Count:  ':BATCH.COUNT
                     EMAIL.OUT<6,-1> = 'Batch Number: ':BATCH.NO
                     EMAIL.OUT<6,-1> = 'Client:       ':CLIENT.ID
                     SEND.EMAIL=1
               END CASE
               IF SEND.EMAIL THEN
                  EVIN=EMAIL.OUT
                  EVOUT=''
                  CALL SENDMAIL(EVIN,EVOUT)
               END
               * End NKH08
               N.IMAGE = IMAGE
               *CRT 'SHOW IMAGE 5';INPUT CONT
               CALL FB.SHOW.INV.IMAGE(T.ARRAY<3,OCR.ITEM>)
               GOTO 200
            END
            * End NKH04
         CASE QI='LS' ! QI='LP'
            IF QI='LS' THEN OPT='' ELSE OPT='P'
            PREC='SELECT FB.BILLS,':CLIENT.ID:' WITH STATUS # "O" AND WITH STATUS # "R" '
            PREC:=" BY STATUS BY CARRIER BY PRO"
            PREC:=' AND WITH VERSION = "0"'
            EXECUTE PREC PASSLIST CAPTURING OUTPUT
            IF @SELECTED THEN
               EXECUTE 'LIST FB.BILLS,':CLIENT.ID:' PRO CARRIER.SHORT.NAME TOTAL 7 TOTAL 8 STATUS 68 30 (I':OPT
               CALL ELINE('')
               CC+=1 ; GOSUB PRINT.CC
            END ELSE
               CALL ELINE("All pro's have been verified and audited.")
               CC+=1 ; GOSUB PRINT.CC
            END
            GOSUB 8100                   ; * Display screen
            GOSUB 8200
            GOTO 200
         CASE QI='AS' ! QI='AP'
            IF QI='AS' THEN OPT='' ELSE OPT='P'
            PREC='SELECT FB.BILLS,':CLIENT.ID:' WITH STATUS = "R" AND WITH 66 = "A" '
            PREC:=" BY STATUS BY CARRIER BY PRO"
            PREC:=' AND WITH VERSION = "0"'
            EXECUTE PREC PASSLIST CAPTURING OUTPUT
            IF @SELECTED THEN
               EXECUTE 'LIST FB.BILLS,':CLIENT.ID:' PRO CARRIER.SHORT.NAME TOTAL 7 TOTAL 8 STATUS 66.SHORT 30 (I':OPT
               CALL ELINE('')
               CC+=1 ; GOSUB PRINT.CC
            END ELSE
               CALL ELINE("There are no pro's for audit review")
               CC+=1 ; GOSUB PRINT.CC
            END
            GOSUB 8100                   ; * Display screen
            GOSUB 8200
            GOTO 200
            *         CASE QI = 'MR' AND SESSION.UPDATE.FB.TIMELINE       ; * SWB08 NKH06
            *            GOSUB GET.MAIL.ROOM.DATE     ; * SWB08                     NKH06
            *            GOTO 200                     ; * SWB08                     NKH06
         CASE NOT(QI MATCHES "0N")
            VIN=0                        ; * Starting Chars In
            VOUT=''
            CALL SOUNDEX.DISPLAY.NEW(VIN,VOUT,QI,'CARRIERS','SDX.CARRIER,NAME','1,2,3,4',ITEM.LIST)
            CC+=VOUT<1> ; GOSUB PRINT.CC
            GOSUB 8100                   ; * Display screen
            GOSUB 8200
            BEGIN CASE
               CASE ITEM.LIST = ''
                  GOTO 200               ; * ENTER CARRIER
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                  GOTO 200               ; * ENTER CARRIER
               CASE ITEM.LIST # ''
                  IF NUM(ITEM.LIST<1,1>) THEN SND.DATA=ITEM.LIST<1,1> ; GOSUB SEND.DATA
                  GOTO 200               ; * ENTER CARRIER
            END CASE

         CASE QI = ''
            Q = CARRIER.ID
         CASE NUM(QI)
            Q = QI'R%5'
         CASE 1
            GOTO 200                     ; * ENTER CARRIER
      END CASE
      IF CLIENT.ID='00877' THEN
         IF Q = '00015' OR Q = '00143' THEN
            CALL ELINE('Cannot enter FedEx or Airborne bills for Autocraft.')
            IF USER#'DEBBIE' THEN GOTO 200
         END
      END
      CARRIER.ID = Q
      CALL CLR.CONTROL(CARRIER.ID)

*****************************************************************
* Get carrier data
*****************************************************************
      READ CARRIER.REC FROM F.CARRIERS,CARRIER.ID ELSE
         CALL ELINE("ERROR - Carrier ":CARRIER.ID:" not on file.")
         CC+=1 ; GOSUB PRINT.CC
         GOTO 200                        ; * ENTER CARRIER
      END
      *Begin Mod GRB19
      TEMPO.CLIENT.FLG = @FALSE
      READ TEMPO.CLIENT FROM F.TEMPOC,CLIENT.ID THEN
         IF TEMPO.CLIENT<1> = "" THEN
            TEMPO.CLIENT.FLG = @TRUE
            BILL.STATUS = 3
            OLA.CARRIER.ID = CARRIER.ID
         END ELSE
            LOCATE(CARRIER.ID,TEMPO.CLIENT<1>,1;TPOS) THEN
               IF TEMPO.CLIENT<2,TPOS> = "T" THEN  ; * GRB20
                  IF IN.OUT = "T" THEN   ; * GRB20
                     TEMPO.CLIENT.FLG = @TRUE      ; * GRB20
                     BILL.STATUS = 3     ; * GRB20
                     OLA.CARRIER.ID = CARRIER.ID
                  END ELSE
                     TEMPO.CLIENT.FLG = @FALSE
                  END
               END ELSE
                  TEMPO.CLIENT.FLG = @TRUE
                  BILL.STATUS = 3
                  OLA.CARRIER.ID = CARRIER.ID
               END
            END ELSE
               TEMPO.CLIENT.FLG = @FALSE
            END
         END
      END ELSE
         TEMPO.CLIENT.FLG = @FALSE
      END
      READ TEMPO.CLIENTS.ACC.CDS FROM F.TEMPOCACC,CLIENT.ID ELSE TEMPO.CLIENTS.ACC.CDS =''
      * End Mod GRB19

      ID.PRO.FORMAT = CLIENT.ID:"*":CARRIER.ID ; PRO.FORMAT.REC = ''
      READ PRO.FORMAT.REC FROM F.PRO.FORMAT, ID.PRO.FORMAT THEN
         CARRIER.REC<47> = PRO.FORMAT.REC<1>       ; * PRO.FORMAT
         CARRIER.REC<51> = PRO.FORMAT.REC<2>       ; * MASK.ACTIVE
         CARRIER.REC<52> = PRO.FORMAT.REC<3>       ; * CHECK.DIG.ACTIVE
         CARRIER.REC<53> = PRO.FORMAT.REC<4>       ; * CHECK.DIG.POS
         CARRIER.REC<54> = PRO.FORMAT.REC<5>       ; * SEED.BEG.POS
         CARRIER.REC<55> = PRO.FORMAT.REC<6>       ; * SEED.END.POS
         CARRIER.REC<56> = PRO.FORMAT.REC<7>       ; * METHOD.STR
         CARRIER.REC<57> = PRO.FORMAT.REC<8>       ; * OLD.BEG.POS
         CARRIER.REC<58> = PRO.FORMAT.REC<9>       ; * OLD.END.POS
      END
      IF CLIENT.ID='01347' OR CLIENT.ID='01312' THEN
         CSCAC.ID=CLIENT.ID:'*':CARRIER.ID
         READ CSCAC.REC FROM F.CSCAC,CSCAC.ID ELSE
            CALL ELINE('Carrier does not have a SCAC cross reference code. Please provide this to Adam or Nikki')        ; * JMK128
            MVIN=''
            SUBJ='Carrier SCAC cross reference code not on file for ':CLIENT.NAME
            TEXT=USER:' attempted to enter a bill for a carrier '
            TEXT<1,-1>='that does not have a SCAC cross reference code'
            TEXT<1,-1>='on ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
            TEXT<1,-1>='Client ':CLIENT.ID:' ':CLIENT.NAME:' Carrier ':CARRIER.ID:' ':CARRIER.REC<1>
            MVIN=''
            MVIN<1>='David@afs.net'
            MVIN<4>='AFS'
            MVIN<5>=SUBJ
            MVIN<6>=TEXT
            CALL SENDMAIL(MVIN,MVOUT)
            GOTO 200
         END
      END
      IF CLIENT.ID='01323' OR CLIENT.ID='01324' OR CLIENT.ID='01325' OR CLIENT.ID='01326' THEN       ; * JMK60
         OPEN '','CCC.MODE,':CARRIER.ID TO F.CCCMODE ELSE    ; * JMK60

            CALL ELINE('Carrier does not have a carrier mode file set up. ')     ; * JMK60 ; * JMK128
            MVIN=''                      ; * JMK60
            SUBJ='Carrier mode validation file is not setup for ':CARRIER.ID:' ':CARRIER.REC<1>      ; * JMK60
            TEXT=USER:' attempted to enter a bill for a carrier '      ; * JMK60
            TEXT<1,-1>='that does not have a carrier mode validation file'       ; * JMK60
            TEXT<1,-1>='on ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')      ; * JMK60
            TEXT<1,-1>='Client ':CLIENT.ID:' ':CLIENT.NAME:' Carrier ':CARRIER.ID:' ':CARRIER.REC<1>           ; * JMK60
            MVIN=''                      ; * JMK60

            MVIN<1>='david@afs.net'      ; * JMK60 ; * JMK128

            MVIN<4>='AFS'                ; * JMK60
            MVIN<5>=SUBJ                 ; * JMK60
            MVIN<6>=TEXT                 ; * JMK60
            CALL SENDMAIL(MVIN,MVOUT)    ; * JMK60
            GOTO 200                     ; * JMK60
         END                             ; * JMK60
      END                                ; * JMK60
      IF CLIENT.ID='01505' AND (CARR.FSC='Y' OR CARR.FSC='C') THEN     ; * JMK136 ; * JMK150
         IF CARRIER.ID='00124' THEN CARR.FSC='N'   ; * JMK136
         IF CARRIER.ID='01786' THEN CARR.FSC='N'   ; * JMK136
         IF CARRIER.ID='05156' THEN CARR.FSC='N'   ; * JMK136
         IF CARRIER.ID='08924' THEN CARR.FSC='N'   ; * JMK136
         IF CARR.FSC='N' THEN            ; * JMK136
            CRT @(9,1):CBVOUT<1>:CLIENT.ID:' ':HLB:CLIENT.NAME:HLA:@(-6)         ; * NPR08  ;* NPR13
         END                             ; * JMK136
      END                                ; * JMK136
      IF CLIENT.ID='01758' AND CARRIER.ID='00748' THEN       ; * JMK182
         CARR.FSC='N'                    ; * JMK182
         CRT @(9,1):CBVOUT<1>:CLIENT.ID:' ':HLB:CLIENT.NAME:HLA:@(-6)  ; * JMK182
      END                                ; * JMK182
      IF CLIENT.ID='01784' AND CARRIER.ID='00014' THEN       ; * JMK185
         CARR.FSC='N'                    ; * JMK185
         CRT @(9,1):CBVOUT<1>:CLIENT.ID:' ':HLB:CLIENT.NAME:HLA:@(-6)  ; * JMK185
      END                                ; * JMK185
      IF CLIENT.ID='01810' AND CARRIER.ID='00014' THEN       ; * JMK185
         CARR.FSC='N'                    ; * JMK185
         CRT @(9,1):CBVOUT<1>:CLIENT.ID:' ':HLB:CLIENT.NAME:HLA:@(-6)  ; * JMK185
      END                                ; * JMK185
      IF CLIENT.ID='30004' OR CLIENT.ID='30020' THEN         ; * JMK197
         CARRIER.PAYEE.ID='30004*':CARRIER.ID:'*'  ; * JMK197
         READ PAYEE.TEST FROM F.CARRIER.PAYEE,CARRIER.PAYEE.ID ELSE    ; * JMK197
            CALL ELINE("ERROR - Carrier ":CARRIER.ID:" does not have a payee code on file.")         ; * JMK197
            CC+=1 ; GOSUB PRINT.CC       ; * JMK197
            GOTO 200                     ; * JMK197
         END                             ; * JMK197
      END                                ; * JMK197
      ALT.CARRIER.MODE=''                ; * JMK108
      OPEN '','CARRIER.ALT.MODE,':CARRIER.ID TO F.CARR.ALT.MODE THEN   ; * JMK108
      END                                ; * JMK108
      CARRIER.DAYS=CARRIER.REC<23>       ; * JMK41
      CARRIER.DAYS.OVERRIDE=CARRIER.REC<94>        ; * JMK59
      CARRIER.MODE=CARRIER.REC<44>
      CARRIER.MODE.WGT=CARRIER.REC<70>
      CARRIER.MODE.BY.WGT=CARRIER.REC<71>
      CARRIER.SCAC=CARRIER.REC<12>       ; * JMK147
      CARRIER.TYPE='A'                   ; * JMK147
      IF CARRIER.MODE='6' THEN           ; * JMK147
         CARRIER.TYPE='B'                ; * JMK147
      END                                ; * JMK147
      IF CLIENT.ID='01485' THEN
         N.MODES = DCOUNT(CARRIER.REC<71>,@VM)
         FOR I.MODE = 1 TO N.MODES
            IF CARRIER.ID='17216' THEN
               CARRIER.REC<71,I.MODE> = '11'
               CARRIER.REC<44> = '11'
            END
            IF CARRIER.ID='15703' THEN
               CARRIER.REC<71,I.MODE> = '6'
               CARRIER.REC<44> = '6'
            END
         NEXT I.MODE
         CARRIER.MODE=CARRIER.REC<44>
         CARRIER.MODE.BY.WGT=CARRIER.REC<71>
      END
      READV T.MODE FROM F.TRANSPORT,CARRIER.MODE,1 ELSE T.MODE = ''
      MODE.ID=CARRIER.MODE               ; * JAD001
      T.MODE = OCONV(T.MODE,'MCU')
      LTL.CAR=CARRIER.MODE=1
      TL.CAR=CARRIER.MODE=6
      INTL.CAR=CARRIER.MODE=8            ; * NPR031
      AIR.CAR=CARRIER.MODE=12            ; * JMK91
      STARTUP.ID = CLIENT.ID'R%5':'*':CARRIER.ID
      READV START.DATE FROM F.SU.DATE,STARTUP.ID,1 ELSE START.DATE = ''
      CARRIER.NAME = CARRIER.REC<1>
      CARRIER.STREET = TRIM(CHANGE(CARRIER.REC<2>,@VM,' '))
      CARRIER.CITY = CARRIER.REC<3>
      CARRIER.STATE = CARRIER.REC<4>
      XREF.CARRIERS = CARRIER.REC<28>
      TEXT=TRIM(CARRIER.ID:' ':CARRIER.NAME:' ':CARRIER.STREET:' ':CARRIER.CITY)
      CARRIER.TEXT = TRIM(CARRIER.ID:' ':CARRIER.NAME)       ; * NPR08
      CRT @(9,2):CARRIER.TEXT[1,38]
      LOOKUP.ONLY=0
      PREV.PRO.LOOKUP.ONLY=0             ; * JMK04
      CAPTURE.INVOICE=0                  ; * JMK106
      ADD.AD.OR.BD=0
      LOCATE CARRIER.ID IN INVOICE.CARRIERS<1> SETTING CPOS THEN       ; * JMK106
         IF INVOICE.CARRIERS<2,CPOS>='Y' THEN CAPTURE.INVOICE=1        ; * JMK106
      END ELSE                           ; * JMK106
         INV.NUM=''
         NUM.OF.PRO=''
         TOT.NUM.OF.PRO=''
      END
      IF CARRIER.REC<89>='I' THEN        ; * JMK02
         LOOKUP.ONLY=1                   ; * JMK02
         LOOKUP.ONLY.REASON='This carrier is not Active.  Lookup Only.'          ; * JMK02
         PREV.PRO.LOOKUP.ONLY=1          ; * JMK04
         CALL ELINE(LOOKUP.ONLY.REASON)  ; * JMK02
      END                                ; * JMK02
      IF CLIENT.ID='00965' AND CARRIER.ID='00041' THEN
         IF USER#'MARY' AND USER.TYPE#'A' THEN
            LOOKUP.ONLY=1
            LOOKUP.ONLY.REASON='Bills must be entered by  Mary. Lookup Only'
            PREV.PRO.LOOKUP.ONLY=1
            CALL ELINE(LOOKUP.ONLY.REASON)
         END
      END

      IF CLIENT.REC(70)<1,11>='Y' THEN   ; * JMK54
         SCAC.TEST=CARRIER.REC<12>       ; * JMK54
         IF SCAC.TEST='' THEN            ; * JMK54
            CSCAC.ID=CLIENT.ID:'*':CARRIER.ID      ; * JMK54
            READ CSCAC.REC FROM F.CSCAC,CSCAC.ID ELSE CSCAC.REC=''     ; * JMK54
            SCAC.TEST=CSCAC.REC<1>       ; * JMK54
         END                             ; * JMK54
         IF SCAC.TEST='' THEN            ; * JMK54
            LOOKUP.ONLY.REASON="Invalid SCAC for client ":CLIENT.ID    ; * JMK54
            CALL ELINE(LOOKUP.ONLY.REASON)         ; * JMK54
            CC+=1 ; GOSUB PRINT.CC       ; * JMK54
            LOOKUP.ONLY=1                ; * JMK54
            PREV.PRO.LOOKUP.ONLY=1       ; * JMK54
         END                             ; * JMK54
      END                                ; * JMK54
      IF NOT(DBCTRL<9>) THEN
         HELP='Enter the Remittance Zip Code from the Freight Bill'
         IF USER='DAVID' THEN HELP:=' (':CARRIER.REC<5>[1,5]:')'
         CALL GEN.IN(0,22,'Remittance Zip:  ','',Q,0,5,'','',2,-1,22,1,QI,HELP,0,23)
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC
         QI = OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI = 'EX'
               GOTO PROGRAM.EXIT         ; * NKH10
            CASE QI = 'X'
               GOTO 200
         END CASE
         IF CARRIER.REC<48>#'N' THEN

            * Remove the Correspondence address zip verification Per Brian 06-20-01
            IF QI#CARRIER.REC<5>[1,5] OR QI='' THEN
               CALL ELINE("Error! The Zip you entered is incorrect! Lookup Only! Entry Not Allowed!")
               LOOKUP.ONLY.REASON="Incorrect Remit Zip"
               CALL ELINE(LOOKUP.ONLY.REASON)
               CC+=1 ; GOSUB PRINT.CC
               LOOKUP.ONLY=1
               PREV.PRO.LOOKUP.ONLY=1    ; * JMK04
            END
         END
      END
      IF CARRIER.ID='20475' AND DHL.20475=0 THEN   ; * JMK222
         LOOKUP.ONLY=1                   ; * JMK222
         LOOKUP.ONLY.REASON='You do not have permission to enter DHL bills'      ; * JMK222
         PREV.PRO.LOOKUP.ONLY=1          ; * JMK222
      END                                ; * JMK222
      IF USER='BHELPENSTELL' THEN
         LOOKUP.ONLY=1
         LOOKUP.ONLY.REASON='You do not have permission to enter bills'
         PREV.PRO.LOOKUP.ONLY=1          ; * JMK04
      END
      IF JUMP.TO.CLIENT THEN
         LOOKUP.ONLY=1
         LOOKUP.ONLY.REASON='You have Jump to a Client. Exit to the menu. To add information'
         PREV.PRO.LOOKUP.ONLY=1
      END
      IF CLIENT.REC(146)#'NW' THEN
         LOOKUP.ONLY=1
         LOOKUP.ONLY.REASON="This client ":CLIENT.ID:" Is not setup for the new way program"
         PREV.PRO.LOOKUP.ONLY=1          ; * JMK04
      END
      IF ( CLIENT.ID='00761' OR CLIENT.ID='00839' OR CLIENT.ID='00883' OR CLIENT.ID='00933' OR CLIENT.ID='00978' OR CLIENT.ID='01015' OR CLIENT.ID='01020' OR CLIENT.ID='01038' OR CLIENT.ID='01066' OR CLIENT.ID='01087' OR CLIENT.ID='01088' OR CLIENT.ID='01114' OR CLIENT.ID='01132' OR CLIENT.ID='01152' OR CLIENT.ID='01179' OR CLIENT.ID='01190' OR CLIENT.ID='001241' OR CLIENT.ID='01357' OR CLIENT.ID='01352' OR CLIENT.ID='01241' OR CLIENT.ID='01258' OR CLIENT.ID='01264' OR CLIENT.ID='01283' OR CLIENT.ID='01309' OR CLIENT.ID='01349' OR CLIENT.ID='01352' OR CLIENT.ID='01357' OR CLIENT.ID='01361' OR CLIENT.ID='01380' OR CLIENT.ID='01381' OR CLIENT.ID='01401' OR CLIENT.ID='01475' OR CLIENT.ID='01511' OR CLIENT.ID='01545' OR CLIENT.ID='01582' OR CLIENT.ID='01600' OR CLIENT.ID='01633' OR CLIENT.ID='01644' OR CLIENT.ID='01697' OR CLIENT.ID='01700' ) AND CARRIER.ID='01075' THEN
         CARRIER.REC<47>="11N":@VM:CARRIER.REC<47>
         CARRIER.REC<51>='Y':@VM:CARRIER.REC<51>
         CARRIER.REC<52>='N':@VM:CARRIER.REC<52>
         FOR J = 53 TO 58
            CARRIER.REC<J>=@VM:CARRIER.REC<J>
         NEXT J
         CARRIER.REC<47>="12N":@VM:CARRIER.REC<47>
         CARRIER.REC<51>='Y':@VM:CARRIER.REC<51>
         CARRIER.REC<52>='N':@VM:CARRIER.REC<52>
         FOR J = 53 TO 58
            CARRIER.REC<J>=@VM:CARRIER.REC<J>
         NEXT J
         IF CLIENT.ID='01371' AND CARRIER.ID='01075' THEN
            CARRIER.REC<47>="10N":@VM:CARRIER.REC<47>
            CARRIER.REC<51>='Y':@VM:CARRIER.REC<51>
            CARRIER.REC<52>='N':@VM:CARRIER.REC<52>
            FOR J = 53 TO 58
               CARRIER.REC<J>=@VM:CARRIER.REC<J>
            NEXT J
         END
      END
      IF CLIENT.ID='01148' AND CARRIER.ID='01312' THEN
         LOCATE "10N" IN CARRIER.REC<47> SETTING CAR.POS THEN
            DEL CARRIER.REC<47,CAR.POS>
            FOR J = 51 TO 58
               DEL CARRIER.REC<J,CAR.POS>
            NEXT J
         END
      END
      PRO.FORMAT=CARRIER.REC<47>
      LOCATE 'Y' IN CARRIER.REC<51> SETTING NUL ELSE
         LOCATE 'L' IN CARRIER.REC<51> SETTING NUL ELSE
            IF NOT(DBCTRL<10>) THEN
               CALL ELINE('No Active Pro Format on File!  Photocopy Bill and setup format!')
               CC+=1 ; GOSUB PRINT.CC
               GOTO 200
            END
         END
      END
      IF PRO.FORMAT<1,1>='' THEN PRO.MASKS='' ELSE
         VIN=PRO.FORMAT
         VIN<2>=CARRIER.REC<51>          ; ** Y/N Active or Inactive
         CALL MASK(VIN,VOUT)
         PRO.MASKS=VOUT<1>
      END

      * Check carrier against list in CONTROL.REC if there is one
      * Initialize audit variables
      IF USER# "" THEN
         IF CLIENT.AUDIT THEN
            EQUIP.TYPES = ''
            NUM.AVAL = DCOUNT(AVAL.EQUIP.TYPES<1>,@VM)
            FOR X = 1 TO NUM.AVAL
               T.AUDIT.ID = CARRIER.ID:'*':AVAL.EQUIP.TYPES<1,X>
               READV T.EQUIP.STATUS FROM F.AUDIT,T.AUDIT.ID,15 THEN
                  EQUIP.TYPES<1,-1> = AVAL.EQUIP.TYPES<1,X>
                  EQUIP.TYPES<2,-1> = AVAL.EQUIP.TYPES<2,X>
               END
            NEXT X
            NUM.EQUIP.TYPES = DCOUNT(EQUIP.TYPES<1>,@VM)
            OLA.CARRIER.ID=CARRIER.ID
            IF CARRIER.ID='13171' THEN OLA.CARRIER.ID='01625'
            IF CARRIER.ID='12244' THEN OLA.CARRIER.ID='12826'
            READ DAUDIT FROM F.AUDIT,OLA.CARRIER.ID THEN
               IF DAUDIT<11>#'DISABLE' THEN
                  AUDIT.TYPE=DAUDIT<1>
                  CARRIER.AUDIT=1
                  READV FSC.AUDIT.CLIENT.ID FROM F.NFSC.SUB,AUDIT.CLIENT.ID,1 ELSE FSC.AUDIT.CLIENT.ID=AUDIT.CLIENT.ID
                  READ BENCH.DFSC FROM F.NFSC,'B*':OLA.CARRIER.ID:'*':FSC.AUDIT.CLIENT.ID ELSE
                     READ BENCH.DFSC FROM F.NFSC,'B*':OLA.CARRIER.ID ELSE BENCH.DFSC=''
                  END
                  READ CONTR.DFSC FROM F.NFSC,"C*":OLA.CARRIER.ID:"*":FSC.AUDIT.CLIENT.ID ELSE CONTR.DFSC=BENCH.DFSC

                  IF BENCH.DFSC<30>='DISABLE' THEN
                     BENCH.DFSC=''       ; ** No Effect
                     CONTR.DFSC=''
                  END
               END ELSE
                  CARRIER.AUDIT=0
                  AUDIT='N'
                  AUDIT.TYPE=''
                  BENCH.DFSC=''
                  CONTR.DFSC=''
               END
            END ELSE
               IF NUM.EQUIP.TYPES GE 1 THEN
                  CARRIER.AUDIT=1
                  DAUDIT=''
                  AUDIT='Y'
                  AUDIT.TYPE='TLALL'
                  READ BENCH.DFSC FROM F.NFSC,'B*':OLA.CARRIER.ID:'*':AUDIT.CLIENT.ID ELSE
                     READ BENCH.DFSC FROM F.NFSC,'B*':OLA.CARRIER.ID ELSE BENCH.DFSC=''
                  END
                  READ CONTR.DFSC FROM F.NFSC,"C*":OLA.CARRIER.ID:"*":AUDIT.CLIENT.ID ELSE CONTR.DFSC=BENCH.DFSC
                  IF BENCH.DFSC<30>='DISABLE' THEN
                     BENCH.DFSC=''       ; ** No Effect
                     CONTR.DFSC=''
                  END
               END ELSE
                  CARRIER.AUDIT=0
                  DAUDIT=''
                  AUDIT='N'
                  AUDIT.TYPE=''
                  BENCH.DFSC=''
                  CONTR.DFSC=''
               END
            END
         END ELSE
            CARRIER.AUDIT=0
            DAUDIT=''
            AUDIT='N'
            AUDIT.TYPE=''
            BENCH.DFSC=''
            CONTR.DFSC=''
         END                             ; * IF CLIENT.AUDIT
      END ELSE
         IF CLIENT.AUDIT THEN
            OLA.CARRIER.ID=CARRIER.ID
            IF CARRIER.ID='13171' THEN OLA.CARRIER.ID='01625'
            READ DAUDIT FROM F.AUDIT,OLA.CARRIER.ID THEN
               IF DAUDIT<11>#'DISABLE' THEN
                  AUDIT.TYPE=DAUDIT<1>
                  CARRIER.AUDIT=1
                  READ BENCH.DFSC FROM F.NFSC,'B*':OLA.CARRIER.ID:'*':AUDIT.CLIENT.ID ELSE
                     READ BENCH.DFSC FROM F.NFSC,'B*':OLA.CARRIER.ID ELSE BENCH.DFSC=''
                  END
                  READ CONTR.DFSC FROM F.NFSC,"C*":OLA.CARRIER.ID:"*":AUDIT.CLIENT.ID ELSE CONTR.DFSC=BENCH.DFSC
                  IF BENCH.DFSC<30>='DISABLE' THEN
                     BENCH.DFSC=''       ; ** No Effect
                     CONTR.DFSC=''
                  END
               END ELSE
                  CARRIER.AUDIT=0
                  AUDIT='N'
                  AUDIT.TYPE=''
                  BENCH.DFSC=''
                  CONTR.DFSC=''
               END
            END ELSE
               CARRIER.AUDIT=0
               DAUDIT=''
               AUDIT='N'
               AUDIT.TYPE=''
               BENCH.DFSC=''
               CONTR.DFSC=''
            END
         END
      END                                ; * IF USER# "" THEN
      IF CLIENT.ID='01763' THEN
         IF CARRIER.ID='00017' OR CARRIER.ID='00030' OR CARRIER.ID='00050' OR CARRIER.ID='00601' OR CARRIER.ID='00787' THEN
            AUDIT.TYPE=''
            BENCH.DFSC=''
            CONTR.DFSC=''
         END
      END
      M.BOL.REC = ''                     ; *NPR028
      AFS.BOL=0                          ; * JAD02
      ID.BOL.CRX = ''                    ; *NPR028
      ID.BOL.CRX2 = ''                   ; *NPR028
      BOL.POP.VER.ARR = ''               ; *NPR777

*****************************************************************
300:  * Enter pro number
*****************************************************************
      IMAGE.NUMBER = ''                  ; * NKH LOGGING
      UPDATED.IMG = 0
      ACCT.NUM=''                        ; * NKH43
      DELETING = 0                       ; * NKH60
      LOCK.LOG.DONE = 0                  ; * NKH60

      * Beign NKH17
      IF REJ.BILL THEN
         IF OCR.ENTRY AND NOT(UPDATED.IMG) THEN
            IVIN=''
            IVIN<1> = N.IMAGE
            IVIN<2> = USER
            IVIN<3> = CLIENT.ID
            IVIN<4> = 'U'
            IVIN<5> = PRO.ID
            IVOUT = ''
            IF IVIN<1> > "" THEN         ; * NKH26
               CALL SEND.IMG.UPD.REST(IVIN,IVOUT)
               IMG.UPD := 'UPD 1'        ; * NKH14
               GOSUB UPDATE.IMAGE.LOG
            END                          ; * NKH26
            IMAGE.NUMBER := 'CALL IMAGE 9'         ; * NKH LOGGING
            PRO.REC<288> = 'NO WRITE'    ; * NKH LOGGING
            OCR.ITEM += 1
            OCR.INC = OCR.INC:' | OCR INC 1'       ; * NKH24
         END
      END
      * End NKH17

      POST.DUP = 0                       ; * NKH04
      IF DBCTRL<14>='A' AND OCR.ITEM > ARRAY.COUNT THEN      ; * NKH04
         OCR.ENTRY = 0                   ; * NKH04
      END                                ; * NKH04
      * Begin TAG02
      USE.DEL.BILL=0
      * End TAG02
      LOOKUP.ONLY=PREV.PRO.LOOKUP.ONLY   ; * JMK04
      IF CHANGE.FLAG = 0 THEN
         IF SAVE.VER.PRO = '' THEN       ; * NKH30
            GOSUB INITIALIZE.BILL.VARIABLES
         END                             ; * NKH30
         GOSUB 8100
         GOSUB 8200
         MISROUTE.FLG=0
      END
      IF SEQ.FLAG THEN
         IF BACK.FLAG THEN
            BACK.FLAG = 0
            SU.FLAG=0                    ; * JMK129
            CHANGE.FLAG=0                ; * JMK129
            PROG.NAME='FB.2.1.NW'        ; * JMK129
            IF SAVE.VER.PRO = '' THEN    ; * NKH30
               GOSUB INITIALIZE.BILL.VARIABLES     ; * JMK129
            END                          ; * NKH30
            GOSUB 8100                   ; * JMK129
            GOSUB 8200                   ; * JMK129
            MISROUTE.FLG=0               ; * JMK129
            GOTO 200                     ; * ENTER CARRIER
         END ELSE
            GOSUB 8400                   ; * Get next pro number
            BACK.FLAG = 0
            GOTO 305
         END
      END
      IF PRO='' AND PRO.MASKS<1,1>#'' THEN
         MASK=PRO.MASKS<1,1>
         IF PRO.MASKS<1,2>#'' THEN
            OTHER.MASKS=PRO.MASKS
            DEL OTHER.MASKS<1,1>         ; ** Remove the First one (already used)
            TEXT='Other Valid Masks: ':CHANGE(OTHER.MASKS<1>,@VM,' ')
            PRINT @(0,22):@(-4):TEXT[1,59]:
         END ELSE OTHER.MASKS=''
      END ELSE
         OTHER.MASKS=''
         *         MASK = PRO:STR('-',20-LEN(PRO)) ; * NKH04
         MASK = PRO:@(-4)                ; * NKH04
      END
      VER.CODE='P' ; VER.TYPE='R' ; GOSUB UPDATE.VERIFY
      IF CHANGE.FLAG AND USER.TYPE='A' THEN
         QI=PRO
         Q=PRO
         GOTO 303
      END
      * Begin NKH04

      IF OCR.ENTRY THEN
         IF OCR.ITEM > 1 AND OCR.ITEM <= ARRAY.COUNT THEN
            BEGIN CASE
               CASE LOCK.IMAGE
               CASE CHANGE.PRO
               CASE COMING.FROM.CARRIER
               CASE 1
                  *CRT 'SHOW IMAGE 1';INPUT CONT
                  IF DBCTRL<14>='A' THEN
                     IF T.ARRAY<3,OCR.ITEM-1> # T.ARRAY<3,OCR.ITEM> THEN
                        CALL FB.SHOW.INV.IMAGE(T.ARRAY<3,OCR.ITEM>)
                        VERIFY.FLAG = T.ARRAY<1,OCR.ITEM>
                        IMAGE = T.ARRAY<3,OCR.ITEM>
                     END
                  END ELSE
                     CALL FB.SHOW.INV.IMAGE(T.ARRAY<3,OCR.ITEM>)
                     VERIFY.FLAG = T.ARRAY<1,OCR.ITEM>
                     IMAGE = T.ARRAY<3,OCR.ITEM>
                     IMAGE.PRO = T.ARRAY<4,OCR.ITEM>         ; * NKH11
                  END
            END CASE
            * Begin NKH16
         END ELSE
            IF AU.OPTION THEN
               CALL FB.SHOW.INV.IMAGE(T.ARRAY<3,OCR.ITEM>)
               VERIFY.FLAG = T.ARRAY<1,OCR.ITEM>
               IMAGE = T.ARRAY<3,OCR.ITEM>
               IMAGE.PRO = T.ARRAY<4,OCR.ITEM>
            END
            * End NKH16
         END
         COMING.FROM.CARRIER = 0
         N.IMAGE = IMAGE
      END
      AU.OPTION = 0                      ; * NKH16
      REJ.BILL = 0                       ; * NKH17
      * End NKH04
      IF DO.BOL.POP THEN
         CRT @(5,8) : SPACE(30)
         IF CLIENT.REC(254) NE "" THEN
            CRT @(69,0): "---" : REV.ON : "BDA" : REV.OFF : "-----"    ; * SWB02
         END
      END

      * Clear Invoice number used in FedEx Ground
      IF CARRIER.ID = "01075" THEN       ; * NKH07
         CRT @(46,7):STR(' ',20)         ; * NKH07
         INV.NUM = ''                    ; * NKH07
      END                                ; * NKH07
      CRT @(13,6):SPACE(30)              ; * JMK11
      *      IF SESSION.UPDATE.FB.TIMELINE THEN           ; * SWB08  NKH06
      *         HELP = 'Enter the Pro Number. [MR]=Mail Room Date [S]=Scan Carrier [X]=Back [EX]=Exit'      ; * SWB08   NKH06
      *      END ELSE                           ; * SWB08   NKH06
      HELP = 'Enter the Pro Number. [S]=Scan Carrier [N]=Next Img [X]=Back [EX]=Exit'      ; * NKH04
      *      END                                ; * SWB08   NKH06
      CALL GEN.IN(5,6,MASK,'',Q,0,21,'','',2,5,6,0,QI,HELP,0,23)       ; * DRF028
      **************************************************************
      CHK.DEL.BILL=0                     ; * GRB11
      IF CHANGE.FLAG=0 THEN              ; * JMK164
         FRT.ARRAY=''                    ; * JMK17
         MIS.ARRAY=''                    ; * JMK17
         DTL.CHRG.CODES=''               ; * JMK19
         DTL.CHRG.AMTS=''                ; * JMK19
         MISC.REASON=''                  ; * JMK164
      END                                ; * JMK164
      IF QI[LEN(QI)-1,2]='BC' THEN
         VIN=''
         VIN<1>=QI
         VIN<2>=CARRIER.ID
         CALL BAR.CODE(VIN,VOUT)
         IF VOUT<1>#'' THEN
            QI=VOUT<1>
            Q =VOUT<1>
         END
      END
      **************************************************************
      CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      IF CARRIER.ID='03517' AND LEN(QI)=10 AND NUM(QI) THEN
         IF QI[9,1]#'/' THEN
            QI=QI[1,3]:QI[6,5]
            Q=QI
         END
      END
      IF OTHER.MASKS#'' THEN PRINT @(0,22):@(-4):

*****************************************************************
303:  * Entry Point When "L"ast Pro Shortcut is used
*****************************************************************
      QI = OCONV(QI,'MCU')
      QI = TRIM(QI)
      IF INDEX(QI,'*',1) THEN
         IF CLIENT.REC(254) NE "" AND QI[1,1] = "*" THEN
            IF DO.BOL.POP THEN
               ID.BOL.CRX = QI[2,999]
               IF ID.BOL.CRX NE "" THEN  ; * NPR028
                  OPEN '','FB.BOL.CRX,':CLIENT.ID TO F.BOL.CRX ELSE    ; * NPR028
                     CALL ELINE("Can't open FB.BOL.CRX file for client ":CLIENT.ID)        ; * NPR028
                  END                    ; * NPR028
               END                       ; * NPR028
               M.VIN = '' ; M.VOUT = '' ; M.BOL.REC = ''     ; *NPR99 04/23/10
               AFS.BOL=0                 ; * JAD02
               MATCH.BOL=0               ; * DRF080
               M.VIN<1> = CLIENT.ID      ; *NPR99 04/23/10
               M.VIN<2> = ID.BOL.CRX     ; *NPR99 04/23/10
               CALL FB.GET.BOL.DATA(M.VIN,M.VOUT,F.BOL.CRX,M.BOL.REC)  ; *NPR99 04/23/10
               ID.BOL.CRX = M.VOUT<1>    ; *NPR99 04/23/10
               CLIENT.ID2 = M.VOUT<2>    ; *NPR99 04/23/10
               IF M.BOL.REC NE "" THEN
                  IF NOT(CHANGE.FLAG) THEN
                     CRT @(10,10): REV.ON : ">>> Found BOL Data for " : ID.BOL.CRX : " <<<" : REV.OFF : @(-4)
                     M.PRO.NO = M.BOL.REC<26>
                     IF M.PRO.NO NE "" THEN
                        **                     CRT @(10,11): REV.ON : ">>> PRO # " : M.BOL.REC<26> : " <<<" : REV.OFF : @(-4)
                     END
                     CALL ELINE("")
                  END
                  BLIN = M.BOL.REC
                  CL.BOL.POP.VER = CLIENT.REC(254)
                  CL.BOL.POP.VER<2> = CLIENT.REC(255)
                  CL.BOL.POP.VER<3> = CLIENT.REC(256)
                  CALL FB.SETUP.BOL.POP.VER(M.BOL.REC,PRO.REC,BLOUT,CL.BOL.POP.VER,"P")    ; * Populate BOL data
                  BOL.POP.VER.ARR = BLOUT
                  BOL.PRO.NO = M.BOL.REC<26>
                  IF BOL.PRO.NO NE "" THEN
                     PRO.POP.FLAG = BOL.POP.VER.ARR<1,20>
                     IF PRO.POP.FLAG = 'Y' AND NOT(BACK.FLAG) THEN
                        DATA BOL.PRO.NO
                     END
                  END
                  IF CHANGE.FLAG=0 THEN  ; * JAD02
                     IF M.BOL.REC<52>[1,7]='AFS_BOL' THEN    ; * JAD02
                        AFS.BOL=1        ; * JAD02
                        T.BOL.NBR = M.BOL.REC<8>   ; * JAD02
                        * Get data from BOL.CRX record.
                        T.SH.NAME = M.BOL.REC<10>:STR('_',20)          ; * JAD02
                        T.SH.ADDR = M.BOL.REC<11,1>:STR('_',20)        ; * JAD02
                        T.SH.CITY = M.BOL.REC<12>:STR('_',20)          ; * JAD02
                        T.SH.ST = M.BOL.REC<13>:STR('_',20)  ; * JAD02
                        T.SH.ZP = M.BOL.REC<15>:STR('_',20)  ; * JAD02
                        T.CN.NAME = M.BOL.REC<16>:STR('_',20)          ; * JAD02
                        T.CN.ADDR = M.BOL.REC<17,1>:STR('_',20)        ; * JAD02
                        T.CN.CITY = M.BOL.REC<18>:STR('_',20)          ; * JAD02
                        T.CN.ST = M.BOL.REC<19>:STR('_',20)  ; * JAD02
                        T.CN.ZP = M.BOL.REC<21>:STR('_',20)  ; * JAD02
                        T.BT.NAME = M.BOL.REC<59>:STR('_',20)          ; * JAD02
                        T.BT.ADDR = M.BOL.REC<60,1>:STR('_',20)        ; * JAD02
                        T.BT.CITY = M.BOL.REC<61>:STR('_',20)          ; * JAD02
                        T.BT.ST = M.BOL.REC<62>:STR('_',20)  ; * JAD02
                        T.BT.ZP = M.BOL.REC<64>:STR('_',20)  ; * JAD02
                        *
                        T.BOL.PRO.NO = M.BOL.REC<26>         ; * JAD02
                        T.TERMS = M.BOL.REC<28>    ; * JAD02
                        T.AFS.BOL.DESC = M.BOL.REC<52>[1,3]  ; * JAD02
                        IF T.BOL.PRO.NO NE "" THEN           ; * JAD02
                           PRO.POP.FLAG = BOL.POP.VER.ARR<1,20>        ; * JAD02
                           IF PRO.POP.FLAG = 'Y' AND NOT(BACK.FLAG) THEN         ; * JAD02
                              DATA T.BOL.PRO.NO    ; * JAD02
                           END           ; * JAD02
                        END              ; * JAD02
                     END                 ; * JAD02
                     IF M.BOL.REC<52>[1,5]='00883' OR M.BOL.REC<52>[1,5]='05702' OR M.BOL.REC<52>[1,5]='01308' THEN      ; * DRF080
                        *DF                        AFS.BOL=1        ; * DRF080
                        MATCH.BOL=1      ; * DRF080
                        T.BOL.NBR = M.BOL.REC<8>   ; * DRF080
                        * Get data from BOL.CRX record.
                        T.SH.NAME = M.BOL.REC<10>:STR('_',20)          ; * DRF080
                        T.SH.ADDR = M.BOL.REC<11,1>:STR('_',20)        ; * DRF080
                        T.SH.CITY = M.BOL.REC<12>:STR('_',20)          ; * DRF080
                        T.SH.ST = M.BOL.REC<13>:STR('_',20)  ; * DRF080
                        T.SH.ZP = M.BOL.REC<15>:STR('_',20)  ; * DRF080
                        T.CN.NAME = M.BOL.REC<16>:STR('_',20)          ; * DRF080
                        T.CN.ADDR = M.BOL.REC<17,1>:STR('_',20)        ; * DRF080
                        T.CN.CITY = M.BOL.REC<18>:STR('_',20)          ; * DRF080
                        T.CN.ST = M.BOL.REC<19>:STR('_',20)  ; * DRF080
                        T.CN.ZP = M.BOL.REC<21>:STR('_',20)  ; * DRF080
                        T.BT.NAME = M.BOL.REC<59>:STR('_',20)          ; * DRF080
                        T.BT.ADDR = M.BOL.REC<60,1>:STR('_',20)        ; * DRF080
                        T.BT.CITY = M.BOL.REC<61>:STR('_',20)          ; * DRF080
                        T.BT.ST = M.BOL.REC<62>:STR('_',20)  ; * DRF080
                        T.BT.ZP = M.BOL.REC<64>:STR('_',20)  ; * DRF080
                        *
                        T.BOL.PRO.NO = M.BOL.REC<26>         ; * DRF080
                        T.TERMS = M.BOL.REC<28[1,1]          ; * DRF080
                        T.AFS.BOL.DESC = M.BOL.REC<52>[1,3]  ; * DRF080
                     END                 ; * DRF080
                  END                    ; * DRF080
                  GOTO 300
               END ELSE
                  CRT @(10,10): REV.ON : ">>> NO BOL Data found for " : ID.BOL.CRX : " <<<" : REV.OFF
                  CALL ELINE("")
               END
               GOTO 300
            END                          ; * IF DO.BOL.POP END
         END ELSE
            CALL ELINE('ERROR! Pro Number cannot contain a "*"')
            CC+=1 ; GOSUB PRINT.CC
            GOTO 300
         END
      END
      IF CARRIER.ID='00041' OR CARRIER.ID='12062' THEN       ; * JMK86
         TEMP.ID.END='Z':QI[LEN(QI)-1,2]

         IF TEMP.ID.END='Z-0' THEN       ; * JMK86
            QI=QI[1,LEN(QI)-2]:'-O'      ; * JMK86
            Q=QI                         ; * JMK86
            PRINT @(5,6):QI:             ; * JMK86
         END                             ; * JMK86
      END                                ; * JMK86

      * SWITCH + KEY TO X FOR QUICKER DATA ENTRY OF YELLOW FRT BILLS
      PLUS.POS=INDEX(QI,'+',1)
      IF USER='HRHODES' THEN PLUS.POS =0
      IF PLUS.POS THEN
         QI=CHANGE(QI,"+","-")
         Q=QI
         PRINT @(5,6):QI:
      END
      IF QI[LEN(QI),1]='-' AND (CARRIER.ID='00093' OR CARRIER.ID='00017') THEN
         * If the last char is a - after the +s were change to - then make an x
         QI=QI[1,LEN(QI)-1]:'X'
         Q=QI
         PRINT @(5,6):QI:
      END
      IF INDEX(QI,'+',1) AND USER#'HRHODES' THEN
         CALL ELINE('ERROR! Pro Number cannot contain a "+"')
         CC+=1 ; GOSUB PRINT.CC
         GOTO 300
      END
      BEGIN CASE
         CASE QI = 'X'
            CRT @(5,6):SPACE(21)         ; * DRF028
            SU.FLAG=0                    ; * JMK129
            CHANGE.FLAG=0                ; * JMK129
            PROG.NAME='FB.2.1.NW'        ; * JMK129
            GOSUB INITIALIZE.BILL.VARIABLES        ; * JMK129
            GOSUB 8100                   ; * JMK129
            GOSUB 8200                   ; * JMK129
            MISROUTE.FLG=0               ; * JMK129
            GOTO 200                     ; * ENTER CARRIER
         CASE QI = 'EX'
            GOTO PROGRAM.EXIT            ; * NKH10
            * Begin NKH04
         CASE QI = 'N'
            *            IF DBCTRL<14>='F' THEN                      ; * NKH27
            LOCK.IMAGE = 0
            CHANGE.PRO = 0
            OCR.ENTRY = 1
            OCR.ITEM += 1
            OCR.INC = OCR.INC:' | OCR INC 2'       ; * NKH24
            IF OCR.ITEM > ARRAY.COUNT AND DBCTRL<14> = 'A' THEN        ; * NKH27
               CALL ELINE('You have entered all of the OCR for this client')     ; * NKH27
            END                          ; * NKH27
            *            END                                                                 ; * NKH27
            GOTO 300
            * End NKH04
         CASE QI = 'L' AND LAST.PRO#'L'  ; *   #'L' to prevent loop
            IF NOT(OCR.ENTRY) THEN       ; * NKH28
               IF LAST.PRO='' THEN
                  CALL ELINE('There is no Last Pro to recall!')
               END
               QI=LAST.PRO
               Q=LAST.PRO
               CRT @(5,6):QI:SPACE(LEN(MASK)-LEN(QI)):
               GOTO 303                  ; * Go to Entry Point As If it was keyed
            END ELSE                     ; * NKH28
               CALL ELINE('Cannot recall Last Pro during OCR entry!')  ; * NKH28
               GOTO 300                  ; * NKH28
            END                          ; * NKH28
         CASE QI = 'SU'
            IF DBCTRL<11>=1 THEN         ; * JMK129
               HELP='Enter SU password'
               ECHO OFF
               CALL GEN.IN(0,22,'Password: ***********','',Q,0,11,'','',2,-11,22,0,QI,HELP,0,23)
               ECHO ON
               IF QI='ADJUST ONLY' OR QI='SUPW' THEN
                  HELP='Get David. Need Additional password to continue.'
                  ECHO OFF
                  CALL GEN.IN(0,22,'Additional Password: **************','',Q,0,14,'','',2,-14,22,0,QI,HELP,0,23)
                  ECHO ON
                  IF QI='OK' THEN
                     CALL ELINE('SU installed.')
                     SU.FLAG=1
                     PROG.NAME='***SU*** FB.2.1.NW'          ; * JMK129
                  END ELSE
                     CALL ELINE('Invalid Password SU not installed.')
                     SU.FLAG=0
                     CHANGE.FLAG=0       ; * JMK129
                     PROG.NAME='FB.2.1.NW'         ; * JMK129
                  END
               END ELSE
                  CALL ELINE('Invalid Password SU not installed.')
                  SU.FLAG=0
                  CHANGE.FLAG=0          ; * JMK129
                  PROG.NAME='FB.2.1.NW'  ; * JMK129
               END
               CLR.SCR = 1 ; GOSUB DISP.SCREEN.HEADING       ; *NPR08
            END
            GOTO 300
         CASE QI = 'FRT'
            IF DBCTRL<12>=1 THEN
               HELP='Enter Freight Payment Manager Password.'
               ECHO OFF
               CALL GEN.IN(0,22,'Password: ***********','',Q,0,11,'','',2,-11,22,0,QI,HELP,0,23)
               ECHO ON
               IF QI='MYRA ONLY' THEN
                  CALL ELINE('Freight Payment Manager Installed.')
                  FRT.FLAG=1
               END ELSE
                  CALL ELINE('Invalid Password. Freight Payment Manager not installed.')
                  FRT.FLAG=0
               END
            END
            GOTO 300
         CASE QI = 'S'
            CRT @(0,0):@(-3)
            CALL FB.DRAW.BOX(8,3,67,16,' ','')
            CALL FB.DRAW.BOX(9,4,65,12,' ','+=+|+=+|')
            CALL FB.DRAW.BOX(9,4,65,3,' ','+=+|+=+|')
            CALL FB.PRINT.CENT(9,74,8,"C A R R I E R   C O M M E N T S")
            FOR I=1 TO 8
               COMMENT=CARRIER.REC<45,I>'L#60'
               ROW=I+6
               CRT @(10,ROW):I'R#2':'|':COMMENT
            NEXT I
            CALL ELINE('')
            GOSUB 8100                   ; * Display screen
            GOTO 300                     ; * ENTER PRO
         CASE CHANGE.FLAG = 1 & QI = ''
            Q = PRO
            *         CASE QI = 'MR' AND SESSION.UPDATE.FB.TIMELINE       ; * SWB08 NKH06
            *            GOSUB GET.MAIL.ROOM.DATE     ; * SWB08                     NKH06
            *            GOTO 300                     ; * SWB08                     NKH06
         CASE QI = ''
            GOTO 300                     ; * ENTER PRO
      END CASE
      CALL CLR.CONTROL(Q)
      TST=OCONV(TRIM(Q),'MCU')
      VIN = TST
      VIN<2>=USER
      IF USER='-DAVID' THEN CALL ELINE('PRESS BREAK')
      CALL CHECK.PRO.NEW(VIN,CARRIER.REC,VOUT)     ; * JMK165
      CHK.MSG = TRIM(VOUT<1>)
      CHK.OLD.PRO = VOUT<3>              ; * Mv with Old Pro Number to check
      IF CHK.MSG # '' THEN
         TEST.BILL.ID=CARRIER.ID:'*':TST:'*0'      ; * JMK210
         READ TEST.PRO.REC FROM F.HIST,TEST.BILL.ID ELSE     ; * JMK210
            CALL ELINE('Error! ':CHK.MSG)
            LOCK.IMAGE = 1               ; * NKH04
            CC+=1 ; GOSUB PRINT.CC
            GOTO 300
         END                             ; * JMK210
      END
      IF TRIM(VOUT<2>)=1 THEN            ; * If A Check Digit Was Used!
         VER.CODE='P' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
      END
      IF VOUT<5>#'' THEN                 ; * A Check Digit Was provided by the program
         LOOKUP.ONLY=1
         LOOKUP.ONLY.REASON="No Check Digit Supplied"
         QI[LEN(QI),1]=VOUT<5>
         Q=QI
         PRINT @(5,6):QI:
      END
      IF VOUT<6>#'' THEN
         LOOKUP.ONLY=1
         LOOKUP.ONLY.REASON="Old Pro Format - Lookup Item only"
         IF CARRIER.ID#'00041' THEN
            Q=QI
         END
         PRINT @(5,6):QI:
      END
      IF CARRIER.ID='00093' AND QI[LEN(QI)-1,2]='BD' THEN
         LOOKUP.ONLY=0
         LOOKUP.REASON=''
      END
      IF CARRIER.ID='00093' AND QI[LEN(QI)-1,2]='AD' THEN    ; * JMK181
         LOOKUP.ONLY=0                   ; * JMK181
         LOOKUP.REASON=''                ; * JMK181
      END                                ; * JMK181
      IF CARRIER.ID='00451' AND QI[LEN(QI)-1,2]='BD' THEN
         LOOKUP.ONLY=0
         LOOKUP.REASON=''
      END
      IF CARRIER.ID='00041' THEN
         * Added the below test because 30028 Nibco is special we are not going to
         * key the same format as all of our others good luck in not paying dups.
         * DRF 09/01/10
         IF CLIENT.ID#'30028' THEN
            UPS.DATE=TRIM(Q)[8,6]
            UPS.DATE=UPS.DATE[1,2]:'-':UPS.DATE[3,2]:'-':UPS.DATE[5,2]
            UPS.DATE=ICONV(UPS.DATE,'D')
            IF MOD(UPS.DATE,7)#6 THEN
               CALL ELINE('UPS bills must end with a date that falls on Saturday')
               GOTO 300
            END
         END
         IF TRIM(OCONV(Q,'MCU'))[1,7]='70X-239' THEN
            CALL ELINE('This is AFS UPS account number. You cannot enter it')
            GOTO 300
         END
         IF TRIM(OCONV(Q,'MCU'))[1,7]='1W7-16V' THEN
            CALL ELINE('Please give this bill to Mary. Bill is not to be paid')
            GOTO 300
         END
         IF TRIM(OCONV(Q,'MCU'))[1,7]='2V0-7Y1' THEN
            CALL ELINE('This is special UPS account number. You cannot enter it')
            GOTO 300
         END
      END

*****************************************************************
305:
*****************************************************************
      PRO = OCONV(TRIM(Q),'MCU')
      LAST.PRO=PRO                       ; * Save Pro for the "L"ast Pro option
      VERSION = 0
      DISP = PRO:' Version ':VERSION
      *      GOSUB CHECK.FOR.SENT.BILL          ; * NKH60
      CRT @(5,6):DISP
      IF LOOKUP.ONLY=0 THEN              ; * JMK01
         SCAC=TRIM(CARRIER.REC<12>)      ; * JMK01
         ONSCREEN.ID=USER:'.TXT'
         IF SCAC='' THEN                 ; * JMK01
            DELETE F.ONSCREEN,ONSCREEN.ID
         END ELSE
            ONSCREEN.REC=''              ; * JMK01
            ONSCREEN.REC<1>=SCAC         ; * JMK01
            ONSCREEN.REC<2>=PRO          ; * JMK01
            WRITE ONSCREEN.REC ON F.ONSCREEN,ONSCREEN.ID ELSE          ; * JMK01; * JMK38
               SLEEP 1                   ; * JMK38
               WRITE ONSCREEN.REC ON F.ONSCREEN,ONSCREEN.ID ELSE NULL  ; * JMK38
            END                          ; * JMK38
         END                             ; * JMK01
      END                                ; * JMK01

*****************************************************************
310:
*****************************************************************
      IF CARRIER.ID='00093' AND PRO[LEN(PRO)-1,2]='BD' THEN
         LOOKUP.ONLY=0
         LOOKUP.REASON=''
      END
      IF CARRIER.ID='00093' AND PRO[LEN(PRO)-1,2]='AD' THEN  ; * JMK181
         LOOKUP.ONLY=0                   ; * JMK181
         LOOKUP.REASON=''                ; * JMK181
      END                                ; * JMK181
      IF CARRIER.ID='00451' AND PRO[LEN(PRO)-1,2]='BD' THEN
         LOOKUP.ONLY=0
         LOOKUP.REASON=''
      END
      PRO.ID = CARRIER.ID:'*':PRO:"*":VERSION
      IF CHANGE.FLAG THEN
         OLD.CLASS=OLD.PRO.REC<74>
         OLD.INV=OLD.PRO.REC<94>
         OLD.BOL=OLD.PRO.REC<16>
         OLD.BOL.DIST=OLD.PRO.REC<205>   ; * JMK84
      END ELSE
         OLD.PRO.ID=PRO.ID
      END
      OLD.PRO.REC = ''
      AUTO.CAL=0                         ; * JMK70
      CHANGE.EXP=0
      TEST=FIELD(PRO,'/',2)
      IF TEST#'' AND NUM(TEST) THEN
         ORIG.PRO=FIELD(PRO,'/',1)
         IF TEST=1 THEN
            ORIG.BILL.ID=CARRIER.ID:'*':ORIG.PRO:'*':VERSION
         END ELSE
            ORIG.BILL.ID=CARRIER.ID:'*':ORIG.PRO:"/":TEST-1:'*':VERSION
         END
         READ DLOOK FROM F.CRX,ORIG.BILL.ID ELSE
         END
      END
      IF CLIENT.ID = "01862" OR CLIENT.ID = "01863" THEN
         PBX.VIN=''
         PBX.VIN<1>=PRO
         PBX.VOUT=''
         CALL GET.ROOT.NUMBER(PBX.VIN,PBX.VOUT)
         ID.PBX=PBX.VOUT<1>

         READ PBX.REC FROM F.PBX, ID.PBX THEN
            IF PBX.REC<3> NE "" THEN
               LOCATE CLIENT.ID IN PBX.REC<3> SETTING PBX.POS ELSE

                  HELP='[I-UNDERSTAND] to override otherwise return to pro number'         ; * DRF027
                  CALL GEN.IN(0,22,'Bill is for client ':PBX.REC<3>:' .. BOL # ':PBX.REC<1>:'   ','',Q,0,12,'','',2,-1,22,1,QI,HELP,0,23)    ; * DRF027
                  CC+=LEN(QI)+1 ; GOSUB PRINT.CC   ; * DRF027
                  QI = OCONV(QI,'MCU')   ; * DRF027
                  BEGIN CASE             ; * DRF027
                     CASE QI = 'EX'      ; * DRF027
                        GOTO PROGRAM.EXIT          ; * NKH10             ; * DRF027
                     CASE QI = 'I-UNDERSTAND'      ; * DRF027
                        NULL             ; * DRF027
                     CASE 1              ; * DRF027
                        GO 300           ; * DRF027
                  END CASE               ; * DRF027

               END
            END
         END
      END
*******************************************************************************************************
      READ OLD.PRO.REC FROM F.HIST,PRO.ID ELSE
         IF ARCH.FILE = 1 THEN
            READ OLD.PRO.REC FROM F.ARCH,PRO.ID ELSE OLD.PRO.REC = ""
         END
      END

      IF OLD.PRO.REC<296> # "" THEN      ; * NKH83
         CRT @(2,0):OLD.PRO.REC<296>     ; * NKH83
      END                                ; * NKH83

      IF DBCTRL<14>='F' THEN             ; * NKH12
         GOSUB PRO.COMPARE               ; * NKH12
      END                                ; * NKH12
      IF OLD.PRO.REC # "" THEN
         ACCESS.REASON = "VIEW"          ; * NKH61
         GOSUB UPD.FB.BILLS.ACCESS       ; * NKH61
         IF END.FLAG='Y' AND AFS.BOL AND CHANGE.FLAG=0 THEN  ; * JAD02
            PRO.REC = OLD.PRO.REC        ; * JAD02
         END                             ; * JAD02
         * Begin NKH06
         *         UPDATE.FB.TIMELINE = FALSE      ; * SWB08
         *         PROCESSED.DATE.SAVE = OLD.PRO.REC<37>     ; * SWB08
         *         BILL.MR.DATE = OLD.PRO.REC<246>           ; * SWB08
         *         BILL.MR.DATE.SAVE = BILL.MR.DATE          ; * SWB08
         *         ORIG.ENTERED.DATE.SAVE = OLD.PRO.REC<247>           ; * SWB08
         *         MR.TO.ENT.DAYS.SAVE = OLD.PRO.REC<248>    ; * SWB08
         *         MR.TO.PROCESS.DAYS.SAVE = OLD.PRO.REC<249>          ; * SWB08
         *         IF BILL.MR.DATE # '' THEN       ; * SWB08
         *            OCONV.BILL.MR.DATE = OCONV(BILL.MR.DATE, 'D2/')  ; * SWB08
         *            BILL.MR.DISP.STR = 'Mail Room: ':OCONV.BILL.MR.DATE        ; * SWB08
         *            BILL.MR.DISP.LEN = LEN(BILL.MR.DISP.STR)         ; * SWB08
         *            BILL.MR.DISP.STR := STR("-", 23 - BILL.MR.DISP.LEN)
         *            CRT @(0, 0):BILL.MR.DISP.STR           ; * SWB08
         *         END ELSE                        ; * SWB08
         *            BILL.MR.DISP.STR = 'Mail Room: Unknown'
         *            BILL.MR.DISP.LEN = LEN(BILL.MR.DISP.STR)         ; * SWB08
         *            BILL.MR.DISP.STR := STR("-", 23 - BILL.MR.DISP.LEN)
         *            CRT @(0, 0):BILL.MR.DISP.STR           ; * SWB08
         *         END                             ; * SWB08
         * End NKH06
         READ DOPEN.REC FROM F.OPEN,CLIENT.ID:'*':PRO.ID THEN
            IF DOPEN.REC<133>#'' THEN PREV.SELECTED='Y'
         END ELSE
            DOPEN.REC=''
            PREV.SELECTED=''
         END
         AUDITOR.TEXT = ''               ; * JMK161
         NEW.AUDITOR.TEXT = ''           ; * JMK161

         IF OLD.PRO.REC<89> NE "" THEN   ; * JMK161
            FBAUDITOR = OLD.PRO.REC<89>  ; * JMK161
            READV AUDITOR.TEXT FROM F.BCTRL,FBAUDITOR,13 THEN          ; * JMK161
               AUDITOR.TEXT=OCONV(AUDITOR.TEXT,'MCU')        ; * JMK161
            END                          ; * JMK161
         END                             ; * JMK161
         IF OLD.PRO.REC<96>#'' AND OLD.PRO.REC<96>#OLD.PRO.REC<68> THEN
            NEW.AUDITOR.TEXT=NEW.AUDITOR.TEXT:OLD.PRO.REC<96>:'->':OLD.PRO.REC<68>         ; * NPR08
         END ELSE
            NEW.AUDITOR.TEXT = NEW.AUDITOR.TEXT:OLD.PRO.REC<68>
         END
         IF OLD.PRO.REC<68>='1' THEN     ; * JMK26
            IF OLD.PRO.REC<53>=OLD.PRO.REC<54> THEN          ; * JMK26
               NEW.AUDITOR.TEXT:='G'     ; * JMK26
            END ELSE                     ; * JMK26
               NEW.AUDITOR.TEXT:='V'     ; * JMK26
            END                          ; * JMK26
         END                             ; * JMK26
         IF OLD.PRO.REC<116> #'' THEN
            OVERRIDE.RULES.COUNT = DCOUNT(OLD.PRO.REC<116>,@VM)
            OVERRIDE.RULES.TEXT = '*'
            FOR KM = 1 TO OVERRIDE.RULES.COUNT
               RULES.TEXT = OLD.PRO.REC<116,KM>:'_':OLD.PRO.REC<117,KM>:'_':OLD.PRO.REC<118,KM>:'__'
               OVERRIDE.RULES.TEXT = OVERRIDE.RULES.TEXT:RULES.TEXT
            NEXT KM
            RULES.OUTPUT = 1
         END ELSE
            RULES.OUTPUT = 0
         END
         CRT @(59,3):AUDITOR.TEXT'L#20':           ; * NPR08 ; * JMK161
         CRT @(70,4):NEW.AUDITOR.TEXT    ; * NPR08
         IF OLD.PRO.REC<116> #'' THEN    ; * NPR08
            CRT @(59,4):'Y'              ; * NPR08
         END
         ENTERED.BY = OLD.PRO.REC<53>    ; * NPR024
         VER.BY = ''                     ; * NPR024
         COUNTRY.LIST<1> = OLD.PRO.REC<222>        ; * NPR027
         COUNTRY.LIST<2> = OLD.PRO.REC<223>        ; * NPR027
         IF NOT(OCR.ENTRY) THEN          ; * NKH62
            IF OLD.PRO.REC<280> > '' THEN          ; * NKH62
               DISPLAY @(9,5):OLD.PRO.REC<280>     ; * NKH62
            END                          ; * NKH62
         END                             ; * NKH62
         DISP = PRO:' Version ':VERSION
         IF OLD.PRO.REC<53>#'' THEN DISP:='   Entered by : ':OLD.PRO.REC<53>
         IF OLD.PRO.REC<39>='R' THEN
            DISP:=' (REJECTED)'
            REJECT.FLAG = OLD.PRO.REC<39>
         END
         IF OLD.PRO.REC<37> # '' THEN
            VER.BY=OLD.PRO.REC<54>
         END ELSE
            READV VER.BY FROM F.BILLS,PRO.ID,54 ELSE VER.BY=''
         END
         VERIFIED.BY = VER.BY            ; * NPR024
         IF VER.BY#'' THEN DISP:='   Verified by: ':VER.BY
         CRT @(5,6):DISP

         IF BDA.FLAG THEN
            CRT @(69,0): "---" : REV.ON : "BDA" : REV.OFF : "-----"    ; * SWB02
         END

         BOL.SRC=OLD.PRO.REC<244>        ; * SWB02
         BOL.SRC.DESC=''                 ; * SWB02
         IF BOL.SRC # '' THEN            ; * SWB02
            READ BOL.SRC.INFO FROM F.TABLES, 'BOL.SRC*':BOL.SRC ELSE BOL.SRC.INFO=''       ; * SWB02
            BOL.SRC.DESC=BOL.SRC.INFO<2>           ; * SWB02
         END ELSE IF OLD.PRO.REC<240> NE "" THEN   ; * SWB02
            BOL.SRC.DESC='AFS-BOL'       ; * SWB02
         END                             ; * SWB02
         IF BOL.SRC.DESC # '' THEN       ; * SWB02
            CRT @(69,0): STR('-',11)     ; * JMK208 ; * SWB02
            CRT @(69,0): REV.ON : BOL.SRC.DESC : REV.OFF     ; * SWB02
         END                             ; * NPR058

         IF OLD.PRO.REC<30>#'' THEN
            DTP = INDEX(DISP,'Enter',1)  ; * NPR034
            IF DTP = "0" THEN DTP = 30   ; * NPR034
            DTP += 4                     ; * NPR034
            CRT @(DTP,7): 'Entered on : ':OLD.PRO.REC<30>'D2/'         ; * NPR034
         END
         IF OLD.PRO.REC<37>#'' OR CARRIER.ID='00041' OR CARRIER.ID='12062' THEN  ; * JMK85
            GOSUB GET.RELATED.BILLS
            IF RELATED.BILLS THEN
               GOSUB DISPLAY.RELATED.BILLS
               IF Q = 'EX' THEN GOTO PROGRAM.EXIT  ; * NKH10
               IF Q = 'X' THEN GOTO 300
               IF Q = 'BR' THEN          ; * JMK92
                  DATA 'Rate'            ; * JMK92
                  DATA CLIENT.ID         ; * JMK92
                  DATA CARRIER.ID        ; * JMK92
                  DATA BILL.DATE'D2/'    ; * JMK92
                  DATA IN.OUT            ; * JMK92
                  DATA ORIG.ZIP          ; * JMK92
                  DATA DEST.ZIP          ; * JMK92
                  IF ORIG.ZIP=DEST.ZIP THEN        ; * JMK92
                     DATA ''             ; * JMK92
                  END                    ; * JMK92
                  NVAL=DCOUNT(CLASSES,@VM)         ; * JMK92
                  FOR VAL = 1 TO NVAL    ; * JMK92
                     IF CLASSES<1,VAL>='' OR WEIGHTS<1,VAL>='' ELSE    ; * JMK92
                        DATA CLASSES<1,VAL>        ; * JMK92
                        DATA WEIGHTS<1,VAL>        ; * JMK92
                     END                 ; * JMK92
                  NEXT VAL               ; * JMK92
                  DATA ''                ; * JMK92 - FINISH CLASSES AND GO TO MISC CODES
                  IF TEMPO.CLIENT.FLG THEN
                     EXECUTE 'RATER.V2.TEMPO'      ; * JMK92  * NKH01
                  END ELSE
                     EXECUTE 'RATER.V2'  ; * JMK92  * NKH01
                  END
               END                       ; * JMK92
               GOSUB 8100                ; * Display screen
               PRO.REC=OLD.PRO.REC
               GOSUB 8300
               GOSUB 8200
            END
         END

*****************************************************************
320:
*****************************************************************
         VERSION = FIELD(PRO.ID,'*',3)
         DISP = FIELD(PRO.ID,'*',2):' Version ':VERSION
         CRT @(5,6):DISP

         IF BDA.FLAG THEN
            CRT @(69,0): "---" : REV.ON : "BDA" : REV.OFF : "-----"    ; * SWB02
         END

         BOL.SRC.DESC=''                 ; * SWB02
         IF BOL.SRC # '' THEN            ; * SWB02
            READ BOL.SRC.INFO FROM F.TABLES, 'BOL.SRC*':BOL.SRC ELSE BOL.SRC.INFO=''       ; * SWB02
            BOL.SRC.DESC=BOL.SRC.INFO<2>           ; * SWB02
         END ELSE IF OLD.PRO.REC<240> NE "" THEN   ; * SWB02
            BOL.SRC.DESC='AFS-BOL'       ; * SWB02
         END                             ; * SWB02
         IF BOL.SRC.DESC # '' THEN       ; * SWB02
            CRT @(69,0): STR('-',11)     ; * JMK208 ; * SWB02
            CRT @(69,0): REV.ON : BOL.SRC.DESC : REV.OFF     ; * SWB02
         END                             ; * NPR058

         CUST.AMT = OLD.PRO.REC<13>
         CHECK.NUM = FIELD(OLD.PRO.REC<14>,'*',1)
         BANK.ID=FIELD(OLD.PRO.REC<14>,'*',2)
         CHECK.DATE = OLD.PRO.REC<15>
         PROC.DATE = OLD.PRO.REC<37>
         IF CHANGE.FLAG AND NOT.PROCESSED AND (PROC.DATE # '') THEN
            CALL ELINE('Attempt to duplicate bill disallowed')
            CC+=1 ; GOSUB PRINT.CC
            GOTO 200
         END
         IF CHANGE.FLAG AND NOT(SU.FLAG) AND PROC.DATE # '' THEN
            CHANGE.FLAG=0
         END
         BANK.ID = OLD.PRO.REC<40>
         FB.PAY.ID=CLIENT.ID:"*":PRO.ID
         READ DPAY FROM F.PAY,FB.PAY.ID THEN
            PAY.METHOD='Check'           ; * JMK160
            IF CARRIER.REC<102>='A' THEN           ; * JMK160
               PAY.METHOD='ACH'          ; * JMK160
            END                          ; * JMK160
            CALL ELINE("Bill Scheduled for Payment on ":DPAY<134>'D2/':" via ":PAY.METHOD:"! No Updates Allowed!")       ; * JMK160
            GOTO 300
         END ELSE DPAY=''
         OK.TO.EDIT=1
         IF USER='-DAVID' THEN CALL ELINE('OK TO EDIT')
         IF DPAY#'' THEN OK.TO.EDIT=0
         IF CHECK.NUM # '' THEN
            OK.TO.EDIT=0
         END
         LINE1=''
         LINE2=''
         IF NOT(OK.TO.EDIT) THEN
            *---- Select options for Pro already on file
            CHECK.ID = CHECK.NUM:'*':BANK.ID
            MATREAD CHECK.REC FROM F.CHECKS, CHECK.ID ELSE
               MAT CHECK.REC = ''
            END
            CHECK.AMT = FCK.AMT
            IF CLIENT.ID = '00000' THEN
               CHECK.AMT = CUST.AMT
               PROC.DATE = CHECK.DATE
            END
            PRO.REC = OLD.PRO.REC
            GOSUB 8100                   ; * Display screen
            GOSUB 8300                   ; * Assign data
            GOSUB 8200                   ; * Display data
            IF CL.BANK = 'V' OR CL.BANK='N' THEN
               LINE1 = BELL:'Vouch ':CHECK.DATE'D2/':' Vouch #':CHECK.NUM
               LINE2 = 'Client amt ':CUST.AMT'R26,':' Vouch amt '
               LINE2 := CHECK.AMT'R26,':' Processed ':PROC.DATE'D2/':' '
            END ELSE
               LINE1 = BELL:'Paid ':CHECK.DATE'D2/':' Check #':CHECK.NUM
               LINE2 = 'Client amt ':CUST.AMT'R26,':' Check amt '
               LINE2 := CHECK.AMT'R26,':' Processed ':PROC.DATE'D2/':' '
            END
            IF CLIENT.ID = '00000' THEN
               LINE1 := ' Load number ':OLD.PRO.REC<16>
            END
            IF CLIENT.ID = '00000' THEN
               PRO.REC = OLD.PRO.REC
               GOSUB 8300                ; * Assign data
               COL = LEN(LINE2)
               CRT @(COL,22):
               INPUT ACK,1
               CRT @(0,21):@(-3)
               QI = 'I'
               GOSUB 8200                ; * Display data
               GOSUB 8250
               CRT @(0,21):@(-3)
               GOSUB 8100                ; * Display screen
               GOTO 300                  ; * ENTER PRO
            END
         END ELSE
            * Processed but Not Paid
            **********************************************************************
            *  Display Payment History Here
            IF CL.LAST.CHECKS#'' AND OLD.PRO.REC<39>#'R' AND CL.BANK # 'V' AND CL.BANK # 'N' AND PROC.DATE # '' THEN
               CRT @(5,6):FIELD(PRO.ID,'*',2):' Version ':VERSION : @(-4)        ; * NPR034
               CRT @(37,6):"Date Last Check Issued          :"
               CRT @(71,6):CL.LAST.CHECKS<1,1>'D2/'
               CRT @(37,7):"Paying for Bills Processed      :"
               CRT @(71,7):CL.LAST.PROC.DATES<1,1>'D2/'
               NUM.OF.CHECK.DATES=DCOUNT(CL.LAST.CHECKS<1>,@VM)
               IF NUM.OF.CHECK.DATES > 8 THEN NUM.OF.CHECK.DATES = 8
               * Only get the latest 8 items
               SUM.OF.DATES=0
               FOR XX = 1 TO NUM.OF.CHECK.DATES
                  SUM.OF.DATES = SUM.OF.DATES + CL.LAST.CHECKS<1,XX> - CL.LAST.PROC.DATES<1,XX>
               NEXT XX
               AVG.DAYS = SUM.OF.DATES/NUM.OF.CHECK.DATES
               AVG.DAYS = AVG.DAYS + .99           ; * Round up
               AVG.DAYS = AVG.DAYS'R0'
               IF CLIENT.ID='00932' THEN AVG.DAYS=21
               EST.DATE.OF.CHECK=PROC.DATE+AVG.DAYS
               IF EST.DATE.OF.CHECK LE DATE()+7 THEN EST.DATE.OF.CHECK = DATE()+7
               CRT @(37,9):"Freight Bill Processed on       :"
               CRT @(71,9):PROC.DATE'D2/'
               CRT @(37,10):NUM.OF.CHECK.DATES:" CHECK Average Time to Receive"
               CRT @(69,10):": ":AVG.DAYS'R#3':" Days"
               CRT @(37,11):"Estimated Date of check         :"
               CRT @(71,11):EST.DATE.OF.CHECK'D2/'
            END
            IF CL.BANK = 'V' OR CL.BANK = 'N' THEN
               IF PROC.DATE='' THEN
                  LINE2 = 'Pro ':PRO.ID:' has not been processed'
               END ELSE
                  LINE2 = 'Voucher for Pro ':PRO.ID:' processed on ':PROC.DATE'D2/'
               END
            END ELSE
               IF PROC.DATE='' THEN
                  LINE2 = 'Pro ':PRO.ID:' has not been processed'
               END ELSE
                  LINE2 = 'Pro ':PRO.ID:' processed on ':PROC.DATE'D2/'
               END
            END
            LINE2 := '. Enter option please. '
         END
         IF USER.TYPE='A' THEN
            IF OLD.PRO.REC<39>='' OR OLD.PRO.REC<39>='A' THEN
               CALL ELINE('Pro ':PRO.ID:' has not been verified')
               GOTO 300
            END
         END
         IF CHANGE.FLAG THEN
            CRT @(5,6):DISP
            PRO.LEN = LEN(PRO)
            GOTO 390
         END
         CRT @(0,21):LINE1:
         CRT @(0,22):LINE2:
         * Begin NKH34
         NEW.IMAGE.AVAIL = 0
         IF INDEX(PRO.REC<61>,'Image',1) THEN
            NEW.IMAGE.AVAIL = 1
         END
         *         IF (OLD.PRO.REC<59> OR OLD.PRO.REC<61> > "") AND DBCTRL<14> = 'A' AND OLD.PRO.REC<39> = '4' THEN
         IF NEW.IMAGE.AVAIL AND DBCTRL<14> = 'A' AND OLD.PRO.REC<39> = '4' THEN
            REJECTS.DISPLAYED = 0
            GOSUB DISPLAY.REJECTS
         END ELSE
            * End NKH34
            IF REJECT.FLAG='R' THEN
               REJECTS.DISPLAYED = 0     ; * NKH34
               GOSUB DISPLAY.REJECTS
            END
         END                             ; * NKH34

         * 3[I]      Inquiry
         * 4[P]Dp    Post Dup
         * 5[L]t     Letter
         * 6=EDI     EDI
         * 7=Vw      View
         * [R]j      Reject
         * 8[A]pr    Approve
         * 9[D]el    Delete
         * 0[C]hg    Change
         * 10[ADJ]   Adjust
         * [N]t      Note
         * [S]k      Skip image - OCR
         * [RE]      Remove Duplicate - OCR
         * [EP]ay    Eventual Pay
         * [AU]Rv    Audit Review - Creates and AD/BD
         * [T]chs    Touches
         * [AR]      Audit Reject - OCR - Sends bill to audit queue and moves to next image
         * [CR]      Corrected Bill - Creates CR

         HELP=''
         IF PROC.DATE = '' THEN          ; * NKH56
            GOSUB BILL.UPDATE.LOCK       ; * NKH56
         END ELSE                        ; * NKH56
            IF CARRIER.REC<131,1> = 'Y' THEN       ; * NKH56
               BILL.IS.LOCKED = 1        ; * NKH56
               GOSUB CHECK.FOR.SENT.BILL           ; * NKH60
            END                          ; * NKH56
         END
         IF INDEX(PRO.ID,'CR',1) AND DBCTRL<14>='A' THEN     ; * NKH42
            IF NOT(BILL.IS.LOCKED) OR BILL.LOCK.OVERRIDE THEN          ; * NKH56 NKH60
               HELP = '[R]j '            ; * NKH42
               GOTO 323                  ; * NKH42
            END                          ; * NKH56
         END                             ; * NKH42
         IF PROC.DATE# '' AND NOT(REJECT.FLAG) THEN
            HELP = '1=BD 2=AD '
         END
         *         HELP=HELP:'3=[I]nq 4=[P]stDup 5=Cr [L]t ' ; * NKH04
         HELP=HELP:'3[I]nq 4[P]Dp 5[L]t '          ; * NKH04  ; * NKH42
         IF OLD.PRO.REC<88>#'' THEN
            HELP=HELP:'6=EDI '
         END
         ACCT.NUM = OLD.PRO.REC<291>     ; * NKH43    ; * Account Number
         IF IMAGE # "" THEN SAVE.IMAGE = IMAGE     ; * NKH04
         IMAGE = OLD.PRO.REC<280>        ; * NKH04
         IF NOT(BILL.IS.LOCKED) OR BILL.LOCK.OVERRIDE THEN   ; * NKH56   NKH60
            HELP=HELP:'7=Vw [R]j '       ; * NKH04
         END                             ; * NKH56
         IF (PROC.DATE = '' OR SU.FLAG) THEN
            IF NOT(BILL.IS.LOCKED) OR BILL.LOCK.OVERRIDE THEN          ; * NKH56   NKH60
               IF REJECT.FLAG='R' THEN
                  *                  HELP=HELP:'8=[A]pr ' ; * NKH04
                  HELP=HELP:'8[A]pr '    ; * NKH04
               END
            END                          ; * NKH56
            *            HELP=HELP:'9=[D]el 0=[C]hg'   ; * NKH04
            IF NOT(BILL.IS.LOCKED) OR BILL.LOCK.OVERRIDE THEN          ; * NKH56   NKH60
               HELP=HELP:'9[D]el 0[C]hg'           ; * NKH04
            END ELSE                     ; * NKH56
               HELP=HELP:'0[C]hg'        ; * NKH59
            END                          ; * NKH59
         END
         IF CLIENT.ID = '00000' THEN
            HELP='[X]=Back [EX]=Exit or 3=[I]nquire'
            IF NOT(BILL.IS.LOCKED) OR BILL.LOCK.OVERRIDE THEN          ; * NKH56   NKH60
               IF REJECT.FLAG='R' THEN
                  HELP=HELP:' 7=Vw [R]ej 9[D]el'   ; * NKH42
               END
            END                          ; * NKH56
         END
         GOSUB CHECK.FOR.ADJ             ; * NPR06
         IF ADJ.ID.ARRAY NE "" THEN      ; * NPR06
            HELP=HELP:' 10[ADJ]'         ; * NPR06 ; * NKH42
         END                             ; * NPR06
         GOSUB CHECK.FOR.ADD.NOTES       ; * NPR12
         HELP=HELP : ' [N]t'             ; * NPR99 ; * NKH04
         IF ADD.NOTE.REC NE "" THEN      ; * NPR99
            CRT @(60,21):REV.ON:'See Notes..':REV.OFF        ; * NPR99
         END
         * Begin NKH04
         IF DBCTRL<14>='F' THEN
            HELP=HELP : ' [S]k'
            IF OLD.PRO.REC<37>="" THEN
               HELP=HELP : ' [RE]'       ; * NKH42
            END
         END
         * End NKH04
         * Begin NKH42
         IF DBCTRL<14>='F' THEN
            HELP=HELP : ' [CR]'
         END
         * End NKH42
         IF PROC.DATE NE '' AND REJECT.FLAG='R' THEN         ; * NKH47
            *         IF PROC.DATE NE '' AND REJECT.FLAG='R' AND USER.TYPE='A' THEN           ; * NPR14  NKH47
            HELP=HELP:' [EP]ay '         ; * NPR14
         END                             ; * NPR14
         IF USER.TYPE#'A' AND OLD.PRO.REC<37>#'' AND REJECT.FLAG#'R' THEN
            IF LEN(HELP) LT 69 THEN HELP=HELP:' [AU]Rv'      ; * NKH42
            HELP=TRIM(HELP)
         END
         IF REJECT.FLAG = 'R' AND USER.TYPE # 'A' THEN HELP=HELP:' [AR]'         ; * NKH04  NKH34 NKH42
         IF LEN(HELP) LT 69 THEN HELP=HELP:' [T]chs '        ; * NPR14      ; * NKH42
         IF USER.TYPE = 'A' AND OLD.PRO.REC<39>='2' THEN
            IF REJECTS.DISPLAYED THEN    ; * NKH38
               GOTO 323                  ; * NKH38
            END                          ; * NKH38
            GOSUB 8100
            OLD.PRO.ID = PRO.ID
            PRO.REC = OLD.PRO.REC
            PRO.LEN = LEN(PRO)
            IF PRO[PRO.LEN-1,2] = 'BD' THEN
               BAL.DUE = 1
            END ELSE
               BAL.DUE = 0
            END
            CHANGE.FLAG = 1
            GOSUB 8300
            GOSUB 8200
            OLD.CLASS=OLD.PRO.REC<74>
            OLD.INV=OLD.PRO.REC<94>
            OLD.BOL=OLD.PRO.REC<16>
            OLD.BOL.DIST=OLD.PRO.REC<205>          ; * JMK84
            GOTO 4900
         END
         IF (USER.TYPE='A' AND OLD.PRO.REC<39>='3') OR (USER.TYPE='A' AND OLD.PRO.REC<39>='4') THEN
            IF REJECTS.DISPLAYED THEN    ; * NKH34
               GOTO 323                  ; * NKH34
            END                          ; * NKH34
            GOSUB 8100
            OLD.PRO.ID = PRO.ID
            PRO.REC = OLD.PRO.REC
            PRO.LEN = LEN(PRO)
            IF PRO[PRO.LEN-1,2] = 'BD' THEN
               BAL.DUE = 1
            END ELSE
               BAL.DUE = 0
            END
            CHANGE.FLAG = 1
            GOSUB 8300
            GOSUB 8200
            OLD.CLASS=OLD.PRO.REC<74>
            OLD.INV=OLD.PRO.REC<94>
            OLD.BOL=OLD.PRO.REC<16>
            OLD.BOL.DIST=OLD.PRO.REC<205>          ; * JMK84
            GOTO 300
         END
323:
         IF CLIENT.ID[1,2]#'99' THEN     ; * JMK140
            VIN=''                       ; * JMK140
            VOUT=''                      ; * JMK140
            VIN<1>=CLIENT.ID             ; * JMK140
            VIN<2>=PRO.ID                ; * JMK140
            VIN<3>=USER                  ; * JMK140
            VIN<4>=USER.DPT              ; * JMK140
            VIN<5>=DATE()                ; * JMK140
            VIN<6>=TIME()                ; * JMK140
            VIN<7>='1'                   ; * JMK140
            VIN<8>=PROG.NAME             ; * JMK140
            VIN<9>=PROG.DESC             ; * JMK140
            VIN<10>=PACK.NAME            ; * JMK140
            VIN<11>=CO.NAME              ; * JMK140
            *            ACCESS.REASON = "VIEW"       ; * Inquiry    ;* NPR042 ; * NKH36   NKH61
            *            GOSUB UPD.FB.BILLS.ACCESS    ; * NPR042   NKH61
         END                             ; * JMK140
         COL = LEN(LINE2)                ; * NPR99
         COL = 77                        ; * NPR99
         IF (USER.TYPE='A' AND OLD.PRO.REC<39>='R' AND OLD.PRO.REC<66>='A') THEN
            IF PRO[LEN(PRO)-1,2]='AD' THEN
               HELP='[13] Approve as AD, [15] Reject as a Never Pay'
            END ELSE
               HELP='[13] Approve as BD, [15] Reject as a Never Pay'
            END
         END
         IF LEN(HELP) GT 77 THEN HELP = HELP[1,77]           ; * NPR99
         CALL GEN.IN(COL,22,'--','',Q,0,2,'','',2,-2,22,0,QI,HELP,0,22)
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC
         CRT @(0,21):@(-3):
         QI = OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI = 'X' OR QI = ''
               IF QI = '' AND OLD.PRO.REC<39> = 'R' THEN     ; * NKH17
                  REJ.BILL = 1           ; * NKH17
               END                       ; * NKH17
               GOTO 300                  ; * ENTER PRO
            CASE QI = 'EX'
               GOTO PROGRAM.EXIT         ; * NKH10
               * Begin NKH04
            CASE QI = 'S'
               IF DBCTRL<14>='F' THEN
                  OCR.ENTRY = 1
                  OCR.ITEM += 1
                  OCR.INC = OCR.INC:' | OCR INC 3'           ; * NKH24
               END
               GOTO 300
               * End NKH04
               * Make sure the bill has been processed.
            CASE (QI='AD' OR QI='BD' OR QI='1' OR QI='2') AND PROC.DATE#'' AND NOT (REJECT.FLAG)     ; *1-Balance Due  2-Additional Due
               IF QI='AD' OR QI='2' THEN           ; * JMK210
                  IF PRO[LEN(PRO)-3,2]='BD' THEN   ; * JMK210
                     CALL ELINE('AD not valid for a previous BD bill. Attach to original bill.')     ; * JMK210
                     GOTO 300            ; * JMK210
                  END                    ; * JMK210
               END                       ; * JMK210
               CHK.OLD.PRO=''            ; *** Dont look for any more old styles
               VERSION = 0
               PRO.REC = OLD.PRO.REC
               PRO.REC<6>=''
               PRO.REC<7>=''
               PRO.REC<8>=''
               FOR X = 10 TO 15
                  PRO.REC<X>=''
               NEXT X
               CHECK.DATE=''
               FOR X = 34 TO 37
                  PRO.REC<X>=''
               NEXT X
               PRO.REC<45>=''
               FOR X = 51 TO 52
                  PRO.REC<X>=''
               NEXT X
               IF INDEX(PRO.REC<53>,'LOGICA',1) THEN         ; * JMK274
                  PRO.REC<53>=CHANGE(PRO.REC<53>,'LOGICA','')
               END                       ; * JMK274
               PRO.REC<63>=0             ; * Don't Bring Misroute Forward
               PRO.REC<68>='4'
               FOR X = 56 TO 66
                  PRO.REC<X>=''
               NEXT X
               * Don't put reject information forward
               FOR X = 69 TO 83
                  PRO.REC<X>=''
               NEXT X
               * Don't put class and weight information forward
               FOR X = 143 TO 147
                  PRO.REC<X>=''
               NEXT X
               * Don't put LCC information forward
               FOR X = 129 TO 132
                  PRO.REC<X>=''
               NEXT X
               * Don't put detail information forward ; * JMK18
               FOR X = 151 TO 164        ; * JMK18
                  PRO.REC<X>=''          ; * JMK18
               NEXT X                    ; * JMK18
               * Don't put new FB info forward ; * JMK63
               NATT=DCOUNT(PRO.REC,@AM)  ; * JMK63
               *              FOR X = 165 TO NATT       ; * JMK63 ; * JMK68
               FOR X = 165 TO 182        ; * JMK63 ; * JMK68
                  PRO.REC<X>=''          ; * JMK63
               NEXT X                    ; * JMK63
*DF               FOR X = 189 TO NATT       ; * JMK68
*DF                  PRO.REC<X>=''          ; * JMK68
*DF               NEXT X                    ; * JMK68
               FOR X = 189 TO 239        ; * DRF100
                  PRO.REC<X>=''          ; * DRF100
               NEXT X                    ; * DRF100
               FOR X = 241 TO NATT       ; * DRF100
                  PRO.REC<X>=''          ; * DRF100
               NEXT X                    ; * DRF100
               IF CLIENT.ID='00574' THEN
                  NUM.OF.ITEMS=DCOUNT(PRO.REC<140>,@VM)
                  FOR XX = 1 TO NUM.OF.ITEMS
                     PRO.REC<140,XX>=0
                  NEXT XX
               END
               IF QI='AD' OR QI='2' THEN
                  PRO.REC<94>=''
                  OLD.CLASS=''
               END
               VC.ID=PRO.REC<17>
               GOSUB 8100                ; * Display screen
               GOSUB 8300                ; * Assign data
               GOSUB 8200                ; * Display data
               IF (QI='1' OR QI='BD') & (CLIENT.ID='00000' OR CLIENT.ID='00642') THEN
                  CALL ELINE('No Way Jose!  No BD for AFS... Changed to AD')
                  CC+=1 ; GOSUB PRINT.CC
                  QI=2
               END
               IF (QI='1' OR QI='BD') & (CLIENT.ID='00000' OR CLIENT.ID='23288') THEN
                  CALL ELINE('No Way Jose!  No BD for AFS... Changed to AD')
                  CC+=1 ; GOSUB PRINT.CC
                  QI=2
               END
               IF QI='1' OR QI='BD' THEN
                  PRO = PRO:'BD'
                  ACCESS.REASON = "ADD.BD"         ; * Create BD   ;* NPR042  ; * NKH36
                  GOSUB UPD.FB.BILLS.ACCESS        ; * NPR042
               END ELSE
                  PRO = PRO:'AD'
                  ACCESS.REASON = "ADD.AD"         ; * Create AD   ;* NPR042  ; * NKH36
                  GOSUB UPD.FB.BILLS.ACCESS        ; * NPR042
               END
               CHECK.NUM = ''
               CHECK.AMT = ''

               CRT @(5,6):PRO'L#21'      ; * DRF028
               GOTO 310
            CASE QI = 'I' OR QI='3'
               GOSUB 8100                ; * JR
               PRO.REC = OLD.PRO.REC
               GOSUB 8300                ; * Assign data
               GOSUB 8200                ; * Display data
               GOSUB 8250
               GOSUB 8100                ; * Display screen
               ACCESS.REASON = "INQ"     ; * Inquiry    ;* NPR042
               GOSUB UPD.FB.BILLS.ACCESS           ; * NPR042
               GOTO 300                  ; * ENTER PRO
            CASE QI = '18'               ; * DRF086
               IF OLD.PRO.REC<39>#'R' THEN         ; * DRF086
                  CALL ELINE('Pro is not rejected. Cannot put EDI back')         ; * DRF086
                  GOTO 300               ; * DRF086
               END                       ; * DRF086
               IF OLD.PRO.REC<88>='' THEN          ; * DRF086
                  CALL ELINE('Pro is not EDI. Cannot put EDI back')    ; * DRF086
                  GOTO 300               ; * DRF086
               END                       ; * DRF086
               IF OLD.PRO.REC<37>#'' THEN          ; * DRF086
                  CALL ELINE('Pro has a process date. Cannot put EDI back')      ; * DRF086
                  GOTO 300               ; * DRF086
               END                       ; * DRF086
               OPEN '','EDI.BILLS.HIST,':CLIENT.ID TO F.EDI.HIST ELSE  ; * DRF086
                  CALL ELINE('Cannot open the EDI.BILLS.HIST file')    ; * DRF086
                  GOTO 300               ; * DRF086
               END                       ; * DRF086
               READ EDI.REC FROM F.EDI.HIST,PRO.ID ELSE      ; * DRF086
                  CALL ELINE('Cannot read the EDI.BILLS.HIST file')    ; * DRF086
                  GOTO 300               ; * DRF086
               END                       ; * DRF086
               EDI.REC<116>=''
               EDI.REC<117>=''
               EDI.ID=CLIENT.ID:'*':PRO.ID         ; * DRF086
               EDI.REC<162>=USER         ; * DRF086
               EDI.REC<163>=TODAY        ; * DRF086
               EDI.REC<164>=TIME()       ; * DRF086
               WRITE EDI.REC ON F.EDI.BILLS,EDI.ID           ; * DRF086
               WRITE EDI.REC ON F.EDI.HIST,PRO.ID  ; * DRF086
               DVIN = OLD.PRO.REC<280>   ; * NKH35
               DVOUT = ''                ; * NKH35
               IF OLD.PRO.REC<280> > "" THEN       ; * NKH35
                  CALL SEND.IMG.DELETE.REST(DVIN,DVOUT)      ; * NKH35
               END                       ; * NKH35
               DELETE F.BILLS,PRO.ID     ; * DRF086
               DELETE F.HIST,PRO.ID      ; * DRF086
               DELETE F.CRX,PRO.ID       ; * DRF086
               IF CLIENT.ID[1,2]#'99' THEN         ; * JMK140
                  VIN=''                 ; * JMK140
                  VOUT=''                ; * JMK140
                  VIN<1>=CLIENT.ID       ; * JMK140
                  VIN<2>=PRO.ID          ; * JMK140
                  VIN<3>=USER            ; * JMK140
                  VIN<4>=USER.DPT        ; * JMK140
                  VIN<5>=DATE()          ; * JMK140
                  VIN<6>=TIME()          ; * JMK140
                  VIN<7>='1'             ; * JMK140
                  VIN<8>=PROG.NAME       ; * JMK140
                  VIN<9>=PROG.DESC       ; * JMK140
                  VIN<10>=PACK.NAME      ; * JMK140
                  VIN<11>=CO.NAME        ; * JMK140
                  ACCESS.REASON = "TO EDI"         ; *     ;* NPR042 ; * NKH36
                  GOSUB UPD.FB.BILLS.ACCESS        ; * NPR042
               END                       ; * JMK140
               CALL ELINE('Bill has been moved back into EDI')         ; * DRF086
               GOTO 300                  ; * DRF086
            CASE QI = 'R' OR QI = '7'
               IF BILL.IS.LOCKED AND NOT(BILL.LOCK.OVERRIDE) THEN      ; * NKH56   NKH60
                  CC+=1 ; GOSUB PRINT.CC           ; * NKH56
                  GOTO 320               ; * NKH56
               END                       ; * NKH56
               * Check carrier against list in REJ.CTRL.REC if there is one ; * JMK46
               IF REJ.CTRL.REC#'' THEN   ; * JMK46
                  LOCATE CARRIER.ID IN REJ.CTRL.REC<2> BY 'AL' SETTING REJ.CTRL.POS THEN   ; * JMK46
                     IF REJ.CTRL.REC<4,REJ.CTRL.POS>='' THEN           ; * Open end date ; * JMK46
                        IF DATE() GE REJ.CTRL.REC<3,REJ.CTRL.POS> THEN           ; * JMK46
                           CALL ELINE('Excluded carrier ':CARRIER.ID:' cannot be rejected at this time.')      ; * JMK46
                           GOTO 320      ; * JMK46
                        END              ; * JMK46
                     END ELSE            ; * JMK46
                        IF (DATE() GE REJ.CTRL.REC<3,REJ.CTRL.POS>) AND (DATE() LE REJ.CTRL.REC<4,REJ.CTRL.POS>) THEN    ; * JMK46
                           CALL ELINE('Excluded carrier ':CARRIER.ID:' cannot be rejected at this time.')      ; * JMK46
                           GOTO 320      ; * JMK46
                        END              ; * JMK46
                     END                 ; * JMK46
                  END                    ; * JMK46
               END                       ; * JMK46
               IF OK.TO.EDIT THEN
                  IF USER.TYPE#'A' THEN
                     IF NOT(FRT.FLAG) THEN
                        IF OLD.PRO.REC<53>#'' AND OLD.PRO.REC<54>#'' THEN
                           NUM.OF.ITMS=DCOUNT(OLD.PRO.REC<84>,@VM)
                           READV FP.TYPE FROM F.BCTRL,OLD.PRO.REC<84,NUM.OF.ITMS>,14 ELSE FP.TYPE=''
                           IF FP.TYPE='A' THEN

                              OK.TO.EDIT=0
                           END
                        END ELSE
                           IF USER='SMICHALIK' AND FP.CO#'00002' THEN
                              OK.TO.EDIT=0
                           END
                        END
                     END
                  END
                  IF (PROC.DATE # '') AND OLD.PRO.REC<66>#'N' THEN
                     OK.TO.EDIT=0
                  END
                  IF OLD.PRO.REC<88>#'' AND OLD.PRO.REC<39>='V' THEN OLD.PRO.REC<39>=''
               END
               GOSUB INIT.REJECT.INFO
               PRO.REC = OLD.PRO.REC
               GOSUB 8300                ; * ASSIGN DATA
               RVIN='' ; RVOUT=''
               IF END.FLAG='Y' AND AFS.BOL AND CHANGE.FLAG=0 THEN      ; * JAD02 This will be a Reject condition From LTL.
                  REJECT.ERR.MSG = PRO.REC<59>     ; * JAD02
                  REJECT.FLAG=PRO.REC<39>          ; * JAD02
                  PRO.REC<66>='N'        ; * JAD02
                  REJ.TYPE=PRO.REC<66>:'-NEW'      ; * JAD02
               END                       ; * JAD02
               IF INDEX(PRO.ID,'CR',1) THEN OK.TO.EDIT=1     ; * NKH42
               IF NOT(OK.TO.EDIT) THEN
                  RVIN<1>='V'
               END ELSE
                  RVIN<1> = ''
               END
               RVIN<2> = CARRIER.ID
               RVIN<3> = CLIENT.ID
               RVIN<4> = FIELD(PRO.ID,'*',2)
               RVIN<5> = REJECT.FLAG
               RVIN<6> = BILL.DATE
               RVIN<7> = ACTUAL.CHG      ; * ACTUAL.CHG
               RVIN<8> = REJ.TYPE
               T.REJECT.FLAG = REJECT.FLAG         ; * STORE TO CHECK FOR CHANGES...
               CALL FB.2.1.REJECT.KED(RVIN, RVOUT, REJECT.REASONS, MAILING.ADDR)
               MULTI.PRO.ID = RVOUT<4>
               NUM.MULTI.PROS = DCOUNT(MULTI.PRO.ID<1>,@VM)
               MULTI.PRO.DATE = RVOUT<6>
               MULTI.PRO.CHG = RVOUT<7>
               MULTI.PRO.REJ = RVOUT<8>
               IF OK.TO.EDIT THEN
                  REJECT.FLAG = RVOUT<2>
                  BILL.DATE = MULTI.PRO.DATE<1,1>
                  IF CARRIER.CHG+0 = 0 THEN CARRIER.CHG=MULTI.PRO.CHG<1,1>
                  ACTUAL.CHG = MULTI.PRO.CHG<1,1>
                  REJ.TYPE = MULTI.PRO.REJ<1,1>
               END
               GOSUB 8100                ; * Display screen
               GOSUB 8200                ; * Display data
               IF NOT(OK.TO.EDIT) THEN
                  GOTO 320
               END ELSE
                  BEGIN CASE
                     CASE RVOUT<1>='EX'
                        GOTO PROGRAM.EXIT          ; * NKH10
                     CASE RVOUT<1>='X'
                        GOTO 320
                  END CASE
                  REJECTION.ALTERED = RVOUT<3>
                  IF REJECT.FLAG='' AND T.REJECT.FLAG#'' THEN
                     IF DATE() LE CLIENT.REC(82) THEN
                        BILL.DATE=CLIENT.REC(82)+1
                     END ELSE
                        BILL.DATE=DATE()
                     END
                     MULTI.PRO.DATE<1,1>=BILL.DATE
                     GOTO 390
                  END
                  ACCESS.REASON = "REJ.":REJ.TYPE  ; * Rejection    ;* NPR042
                  GOSUB UPD.FB.BILLS.ACCESS        ; * NKH56
                  IF REJECTION.ALTERED THEN        ; * SWB06
                     *The variable REJECTABLE was not being set if the USER.TYPE was 'F' in
                     *the 4900 routine and therefore a variable not assigned was generated if
                     *the user entered 'R' to go to the Reject screen so assign it here.
                     REJECTABLE = NOT(REJECT.FLAG = 'R' AND CHANGE.FLAG AND OLD.PRO.REC<1>='')       ; * SWB06
                     IF BILL.IS.LOCKED AND NOT(BILL.LOCK.OVERRIDE) THEN REJECTABLE = 0     ; * NKH59   NKH60
                     GOTO 4900           ; * SWB06
                  END                    ; * SWB06
                  GOTO 310
               END
            CASE (QI = 'D' OR QI = '9') AND (PROC.DATE = '' OR SU.FLAG)
               * Begin TAG02
               IF BILL.IS.LOCKED AND NOT(BILL.LOCK.OVERRIDE) THEN      ; * NKH56   NKH60
                  CC+=1 ; GOSUB PRINT.CC           ; * NKH56
                  GOTO 320               ; * NKH56
               END                       ; * NKH56
               READV ALLOW.DEL FROM F.OPERATOR,USER,41 ELSE ALLOW.DEL ='N'
               IF ALLOW.DEL # 'Y' THEN   ; * NKH64
                  CALL ELINE('You Are Not Authorized to Delete Pros')
                  GOTO 320
               END
               * End TAG02
               IF CLIENT.ID = '00574' AND OLD.PRO.REC<39>='O' THEN
                  CALL ELINE('Error Bill has a status of O. See  David to delete this bill')
                  CC+=1 ; GOSUB PRINT.CC
                  IF USER#'DAVID' THEN
                     GOTO 320
                  END
               END
               IF CLIENT.ID = '01977' AND OLD.PRO.REC<39>='P' THEN
                  CALL ELINE('Error Bill has a status of P[ending]. See Mike or David to delete this bill')
                  CC+=1 ; GOSUB PRINT.CC
                  IF USER#'DAVID' THEN
                     GOTO 320
                  END
               END
               IF OLD.PRO.REC<66>='A' AND USER#'DAVID' AND NOT(FRT.FLAG) THEN    ; * SWB07
                  CALL ELINE('Error, only Freight Mgnrs can delete an Audit Review Bill')  ; * SWB07
                  CC+=1 ; GOSUB PRINT.CC
                  GOTO 320
               END
               IF USER.TYPE#'A' THEN
                  IF NOT(FRT.FLAG) THEN
                     IF OLD.PRO.REC<53>#'' AND OLD.PRO.REC<54>#'' THEN
                        NUM.OF.ITMS=DCOUNT(OLD.PRO.REC<84>,@VM)
                        READV FP.TYPE FROM F.BCTRL,OLD.PRO.REC<84,NUM.OF.ITMS>,14 ELSE FP.TYPE=''
                        IF FP.TYPE='A' THEN
                           CALL ELINE('Error Bill has been update by audit. See Freight Mngr to delete this bill')
                           CC+=1 ; GOSUB PRINT.CC
                           GOTO 320
                        END
                     END
                  END ELSE
                     IF USER='SMICHALIK' AND FP.CO#'00002' THEN
                        CALL ELINE('Error Bill has been update by audit. See  Mary to delete this bill')
                        CC+=1 ; GOSUB PRINT.CC
                        GOTO 320
                     END
                  END
               END
               TEST.NAME=OLD.PRO.REC<53>
               IF OLD.PRO.REC<53>[1,4]='EDI:' AND CARRIER.ID='00041' THEN
                  CALL ELINE('Error EDI bills cannot be deleted')
                  CC+=1 ; GOSUB PRINT.CC
                  GOTO 320
               END
               IF OLD.PRO.REC<53>[1,4]='EDI:' AND OLD.PRO.REC<88>#'' THEN
                  CALL ELINE('Error EDI bills cannot be deleted')
                  CC+=1 ; GOSUB PRINT.CC
                  GOTO 320
               END
               IF NOT(SU.FLAG OR FRT.FLAG) AND USER # TEST.NAME THEN
                  IF CLIENT.ID#'98888' THEN        ; * JMK75
                     CALL ELINE('Error! Only ':TEST.NAME:' can Delete this bill!')
                     CC+=1 ; GOSUB PRINT.CC
                     GOTO 320
                  END                    ; * JMK75
               END ELSE
                  IF FRT.FLAG AND CLIENT.ID#'99998' THEN
                     IF USER='SMICHALIK' AND FP.CO#'00002' THEN
                        CALL ELINE('Error! Only ':TEST.NAME:' can Delete this bill!')
                        CC+=1 ; GOSUB PRINT.CC
                        GOTO 320
                     END
                  END
               END
               IF OLD.PRO.REC<39>='R' THEN
                  CALL ELINE('You can move a rejected bill from one client to another. 1-2-18')
               END
               HELP='[DELETE] to complete the deletion  [EX]it [N]o'
               LN = 'Type the word "DELETE" to delete this Pro! ------'
               CALL GEN.IN(0,22,LN,'',Q,0,6,'','',6,-6,22,1,QI,HELP,0,23)
               CC+=LEN(QI)+1 ; GOSUB PRINT.CC
               QI = OCONV(QI,'MCU')
               BEGIN CASE
                  CASE QI = '' OR QI = 'N'
                     GOTO 300
                  CASE QI = 'EX'
                     GOTO PROGRAM.EXIT   ; * NKH10
                  CASE QI = 'DELETE' OR (USER = 'MYRA' AND QI = 'D')

                     IF OLD.PRO.REC<37>#'' THEN    ; * JMK127
                        CALL ELINE('Error! Bill has already been processed you cannot delete.')
                        CC+=1 ; GOSUB PRINT.CC
                        LINE.OUT=''
                        LINE.OUT<1,10>=123
                        MVIN=''
                        SUBJ='Bill attempted to be deleted with a process date'
                        TEXT=USER:' attempted to delete a bill with a process date '

                        TEXT<1,-1>='of ':OCONV(OLD.PRO.REC<37>,'D2/')  ; * JMK127
                        TEXT<1,-1>='on ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
                        TEXT<1,-1>='Client ':CLIENT.ID:' ':CLIENT.NAME:' Carrier ':CARRIER.ID:' ':CARRIER.NAME:' Pro ':PRO.ID
                        MVIN=''

                        MVIN<1>='brose@afs.net'    ; * RLM01
                        MVIN<2>='David@afs.net'
                        MVIN<4>='AFS'
                        MVIN<5>=SUBJ
                        MVIN<6>=TEXT
                        CALL SENDMAIL(MVIN,MVOUT)
                        GOSUB 8100
                        GOTO 300
                     END
                     * Begin TAG02
                     HELP = "Enter Reason For Deletion: "
                     CALL GEN.IN(0,23,'','',Q,1,40,'','',6,28,23,1,QI,HELP,0,23)
                     *                     WRITE PRO.ID:@FM:USER:@FM:OLD.PRO.REC<37>:@FM:OLD.PRO.REC<8> ON F.DEL.BILLS, DATE():'*':TIME()      ; * JMK127
                     DEL.REC=''
                     DEL.REC<1>=PRO.ID
                     DEL.REC<2>=USER
                     DEL.REC<3>=OLD.PRO.REC<37>
                     DEL.REC<4>=OLD.PRO.REC<8>
                     DEL.REC<5>=QI
                     DEL.REC<6>=CLIENT.ID
                     IF NOT(BILL.IS.LOCKED) OR BILL.LOCK.OVERRIDE THEN           ; * NKH60
                        WRITE DEL.REC ON F.DEL.BILLS, DATE():'*':TIME()
                     END                 ; * NKH60
                     PRO.NUM = FIELD(PRO.ID,'*',2)
                     CARRIER.NUM = FIELD(PRO.ID,'*',1)
                     MVIN=""
                     MVIN<1>='DeletedBills@afs.net'
                     MVIN<4>='AFS'
                     * Begin TAG03
                     SUBJECT='PRO# : ':PRO.NUM:' For Client ':CLIENT.ID:' Was Deleted By ':DEL.REC<2>
                     * End TAG03
                     MVIN<5>=SUBJECT
                     TEXT = 'Client ID: ':DEL.REC<6>
                     TEXT<1,-1>='PRO#: ':PRO.NUM
                     TEXT<1,-1>='Carrier ID: ':CARRIER.NUM
                     TEXT<1,-1>='PRO Date: ':OCONV(DEL.REC<3>,'D2/')
                     TEXT<1,-1>='Actual Charge: ':OCONV(DEL.REC<4>,'MR2')
                     TEXT<1,-1>='Deleted By: ':DEL.REC<2>
                     TEXT<1,-1>='Comments: ':DEL.REC<5>
                     MVIN<6>=TEXT
                     CALL SENDMAIL(MVIN,MVOUT)
                     * End TAG02
                     CALL UPD.FB.STATUS.UPDATE(CLIENT.ID,PRO.ID,F.STATUS.UPDATE)           ; * JMK248
                     * Begin NKH04
                     IF OCR.ENTRY THEN
                        USER.PREFIX = ''
                        *                        IF POST.DUP THEN USER.PREFIX = 'DUP-'
                        USER.PREFIX = 'DEL-'       ; * NKH34
                        IF NOT(UPDATED.IMG) THEN
                           IVIN=''
                           IVIN<1> = IMAGE
                           IVIN<2> = USER.PREFIX:USER
                           IVIN<3> = CLIENT.ID
                           IVIN<4> = 'U'
                           IVIN<5> = PRO.ID
                           IVOUT = ''    ; * NKH14
                           IF IVIN<1> > "" THEN    ; * NKH26
                              CALL SEND.IMG.UPD.REST(IVIN,IVOUT)
                              IMG.UPD := 'UPD 2'   ; * NKH14
                              GOSUB UPDATE.IMAGE.LOG         ; * NKH14
                           END           ; * NKH26
                           IMAGE.NUMBER := 'CALL IMAGE 6'    ; * NKH LOGGING
                        END
                     END
                     * End NKH04

                     DELETING = 1        ; * NKH60
                     GOSUB LOCK.RECORD.UPDATE      ; * NKH60
                     DELETE F.BILLS,PRO.ID
                     DELETE F.HIST,PRO.ID
                     DELETE F.CRX,PRO.ID
                     DELETE F.OPEN,CLIENT.ID:'*':PRO.ID
                     DELETE F.PRE.OPEN,CLIENT.ID:'*':PRO.ID  ; *NPR01
                     IF OLD.PRO.REC<94>#'' THEN
                        READ DINV.XREF FROM F.INV.XREF,OLD.PRO.REC<94> THEN
                           LOCATE OLD.PRO.ID IN DINV.XREF BY 'AR' SETTING INV.POS THEN
                              DEL DINV.XREF<INV.POS>
                              IF DINV.XREF='' THEN
                                 DELETE F.INV.XREF,OLD.PRO.REC<94>
                              END ELSE
                                 WRITE DINV.XREF ON F.INV.XREF,OLD.PRO.REC<94>
                              END
                           END
                        END
                     END
                     IF CLIENT.ID='00949' THEN
                        IF TL.CAR THEN
                           CL.BOL.CRX.FLAG = 'Y'
                        END ELSE
                           CL.BOL.CRX.FLAG = 'N'
                        END
                     END
                     IF CL.BOL.CRX.FLAG = 'Y' THEN
                        DELETE.FLAG=1
                        GOSUB SET.BOL.CRX
                        DELETE.FLAG=0
                     END
                     PRO = FIELD(PRO.ID,'*',2)
                     START = LEN(PRO)-1
                     TEMP = LEN(PRO)-2
                     IF PRO[START,2] = 'CM' THEN
                        OLD.PRO.ID = FIELD(PRO.ID,'*',1):'*':PRO[1,TEMP]
                        OLD.PRO.ID := '*':FIELD(PRO.ID,'*',3)
                     END
                     GOSUB 8100          ; * JR
                     ACCESS.REASON = "DEL"         ; * Deleted   ;* NPR042
                     GOSUB UPD.FB.BILLS.ACCESS     ; * NPR042
                     *                     Begin NKH06
                     *                     IF OLD.PRO.REC<246> # '' THEN           ; * SWB08
                     *                        *Only update the Summary file IF the Mail Room Date is stored in the record.
                     *                        TIMELINE.TRANS.TYPE = 'DEL'          ; * SWB08
                     *                        GOSUB UPDATE.TIMELINE.SUMMARY        ; * SWB08
                     *                     END                 ; * SWB08
                     *                     End NKH06
                     * Begin TAG02
                     CHK.DEL.BILL=0
                     * End TAG02
                     LOCK.IMAGE = 0      ; * NKH34
                     CHANGE.PRO = 0      ; * NKH34
                     OCR.ITEM += 1       ; * NKH34
                     GOTO 300            ; * ENTER PRO
               END CASE
            CASE CLIENT.ID = '00000'
               CALL ELINE('Invalid entry.')
               CC+=1 ; GOSUB PRINT.CC
               GOTO 320
               * Begin NKH04
            CASE QI = 'AR'               ; * AUDIT REJECT
               ACCESS.REASON = "AR"      ; * NKH36
               GOSUB UPD.FB.BILLS.ACCESS           ; * NKH36
               IF OCR.ENTRY AND OLD.PRO.REC<39> = 'R' THEN
                  NEW.MESSAGE = 'New Image Available ':OCONV(DATE(),'D2/')
                  IF OLD.PRO.REC<61> = "" THEN
                     MESSAGE = NEW.MESSAGE
                     NEW.DATE = USER:@SVM:DATE()
                  END ELSE
                     MESSAGE = OLD.PRO.REC<61>:@VM:NEW.MESSAGE
                     NEW.DATE = OLD.PRO.REC<62>:@VM:USER:@SVM:DATE()
                  END
                  * Begin NKH25
                  OLD.PRO.REC<37> = ''   ; * NKH34
                  PRO.REC = OLD.PRO.REC
                  PRO.REC<61> = MESSAGE
                  PRO.REC<62> = NEW.DATE
                  PRO.REC<39> = "4"
                  PRO.REC<280> = N.IMAGE
                  PRO.REC<288> = "WRITE 1"
                  PRO.REC<289> := "CALL IMAGE 1"
                  PRO.REC<294> = RES.FLAG          ; * NKH74
                  GOSUB LOCK.RECORD.UPDATE         ; * NKH60
                  WRITE PRO.REC ON F.HIST,PRO.ID   ; * DRF add to update HIST like the BILLS file.
                  WRITE PRO.REC ON F.BILLS,PRO.ID
                  * End NKH25
                  IF NOT(UPDATED.IMG) THEN
                     IVIN=''
                     IVIN<1> = N.IMAGE
                     IVIN<2> = USER
                     IVIN<3> = CLIENT.ID
                     IVIN<4> = 'U'
                     IVIN<5> = PRO.ID
                     IVOUT = ''          ; * NKH14
                     IF IVIN<1> > "" THEN          ; * NKH26
                        CALL SEND.IMG.UPD.REST(IVIN,IVOUT)
                        IMG.UPD := 'UPD 3'         ; * NKH14
                        GOSUB UPDATE.IMAGE.LOG     ; * NKH14
                     END                 ; * NKH26
                  END
                  *                  WRITEV 'CALL IMAGE 1' ON F.BILLS,PRO.ID,289 ; * WRITEV 'CALL IMAGE 1' ON F.HIST,PRO.ID,289  ; * NKH LOGGING    NKH25
                  LOCK.IMAGE = 0
                  CHANGE.PRO = 0
                  OCR.ENTRY = 1
                  OCR.ITEM += 1
                  OCR.INC = OCR.INC:' | OCR INC 4'           ; * NKH24
                  IF OCR.ITEM > ARRAY.COUNT THEN
                     CALL ELINE('You have entered all of the OCR for this client')
                  END
                  IMAGE = N.IMAGE
               END
            CASE QI = 'RE'               ; * REMOVE DUPLICATE
               IF OCR.ENTRY AND DBCTRL<14> = 'F' THEN
                  IF PRO.REC<37>#'' THEN
                     CALL ELINE('Pro ':PRO:' cannot be removed after the bill has processed')
                     GOTO 300
                  END
                  IF NOT(UPDATED.IMG) THEN
                     IVIN=''
                     *DF                  IVIN<1> = IMAGE
                     IVIN<1> = SAVE.IMAGE
                     IVIN<2> = 'REM-':USER
                     IVIN<3> = CLIENT.ID
                     IVIN<4> = 'U'
                     IVIN<5> = PRO.ID
                     IVOUT = ''          ; * NKH14
                     IF IVIN<1> > "" THEN          ; * NKH26
                        CALL SEND.IMG.UPD.REST(IVIN,IVOUT)
                        IMG.UPD := 'UPD 4'         ; * NKH14
                        GOSUB UPDATE.IMAGE.LOG     ; * NKH14
                     END                 ; * NKH26
                  END
                  IMAGE.NUMBER := 'CALL IMAGE 2'   ; * NKH LOGGING
                  LOCK.IMAGE = 0
                  CHANGE.PRO = 0
                  OCR.ENTRY = 1
                  OCR.ITEM += 1
                  OCR.INC = OCR.INC:' | OCR INC 5'           ; * NKH24
                  IF OCR.ITEM > ARRAY.COUNT THEN
                     CALL ELINE('You have entered all of the OCR for this client')
                  END
               END
               GOTO 300
               * End NKH04
            CASE QI = 'P' OR QI = '4'    ; * POST DUPLICATE
               IF PRO.REC<37>='' THEN
                  CALL ELINE('Pro ':PRO:' must be processed before you can post a duplicate')
                  GOTO 300
               END
               IF PRO.REC<9>#'' THEN
                  READ TEMP.DIV.REC FROM F.DIV,PRO.REC<9> THEN
                     IF TEMP.DIV.REC<7>='I' THEN
                        CALL ELINE('Pro ':PRO:' is being duplicated with an inactive division')      ; * NKH68
                        *                        GOTO 300   ; * NKH68
                     END
                  END ELSE
                     CALL ELINE('Pro ':PRO:' has an invalid division you cannot post a duplicate')
                     GOTO 300
                  END
               END
               * Begin NKH04
               IF OCR.ENTRY THEN
                  POST.DUP = 1
                  GOSUB UPDATE.IMAGE
               END
               * End NKH04
               PRO.REC = OLD.PRO.REC

*****************************************************************
325:
*****************************************************************
* Possibly add logging here for posting a duplicate - this is where the version is incremented
               VERSION = VERSION+1
               PRO.ID = CARRIER.ID:'*':PRO:'*':VERSION
               READ DUMMY FROM F.HIST,PRO.ID THEN GOTO 325
               GOSUB 8300                ; * Assign data
               GOSUB 8200                ; * Display data
               ACCESS.REASON = "POSTDUP"           ; * Post Duplicate   ;* NPR042
               GOSUB UPD.FB.BILLS.ACCESS           ; * NPR042
               GOTO 4900                 ; * UPDATE ACTION
            CASE QI = 'L' OR QI = '5'
               GOSUB PROCESS.INQUIRE
               GOTO 300                  ; * ENTER PRO
            CASE QI = 6 AND OLD.PRO.REC<88>#''
               EDI.VIN=''
               EDI.VIN<1>=CLIENT.ID
               EDI.VIN<2>=CARRIER.ID
               EDI.VIN<3>=PRO
               EDI.VOUT=''
               CALL FB.2.1.EDI(EDI.VIN,EDI.VOUT,OLD.PRO.REC)
               GOSUB 8100                ; * Display screen
               GOSUB 8200                ; * Display data
               GOTO 320
            CASE (QI='A' or QI='8' OR (QI='13' AND USER.TYPE='A' AND OLD.PRO.REC<66>='A')) AND (PROC.DATE = '' OR SU.FLAG) AND REJECT.FLAG='R'         ; * JMK121
               APPROVE.BILL=1            ; * NKH80
               * Make sure the bill has not been processed.
               IF (PROC.DATE # '') THEN
                  CALL ELINE('WARNING! This bill has been processed!')
                  CC+=1 ; GOSUB PRINT.CC
               END
               IF (REJ.TYPE = 'N') THEN
                  CALL ELINE("WARNING! This bill WAS marked NEVER PAY. NOW it's marked PAY EVENTUALLY!")
                  CC+=1 ; GOSUB PRINT.CC
               END
               IF OCR.ENTRY THEN         ; * NKH04
                  GOSUB UPDATE.IMAGE     ; * NKH04
               END                       ; * NKH04
               IF USER.TYPE='A' AND PRO[LEN(PRO)-1,2]#'BD' AND PRO[LEN(PRO)-1,2]#'AD' THEN
                  READV FP.TYPE FROM F.BCTRL,OLD.PRO.REC<53>,14 ELSE FP.TYPE=''
                  IF FP.TYPE='A' THEN
                     CALL ELINE('Error Bill must go through freight payment')
                     CC+=1 ; GOSUB PRINT.CC
                     GOTO 320
                  END
                  IF FP.TYPE='F' AND OLD.PRO.REC<54>='' THEN
                     CALL ELINE('Error Bill must be approved by freight payment so that it can be verified.')
                     CC+=1 ; GOSUB PRINT.CC
                     GOTO 320
                  END
               END
               IF USER.TYPE#'A' THEN
                  IF OLD.PRO.REC<53>#'' AND OLD.PRO.REC<54>#'' THEN
                     NUM.OF.ITMS=DCOUNT(OLD.PRO.REC<84>,@VM)
                     READV FP.TYPE FROM F.BCTRL,OLD.PRO.REC<84,NUM.OF.ITMS>,14 ELSE FP.TYPE=''
                     IF FP.TYPE='A' THEN
                        IF NOT(FRT.FLAG) THEN
                           CALL ELINE('Error Bill must be approved by audit.')
                           CC+=1 ; GOSUB PRINT.CC
                           GOTO 320
                        END ELSE
                           IF USER='SMICHALIK' AND FP.CO#'00002' THEN
                              CALL ELINE('Error Bill must be approved by audit.')
                              CC+=1 ; GOSUB PRINT.CC
                              GOTO 320
                           END
                        END
                     END
                  END
               END
               PRO.REC = OLD.PRO.REC
               GOSUB 8300
               IF BILL.STATUS='' THEN BILL.STATUS=4
               IF TEMPO.CLIENT.FLG THEN  ; * GRB19
                  BILL.STATUS = 3        ; * GRB19
                  OLA.CARRIER.ID = CARRIER.ID      ; * GRB19
               END                       ; * GRB19
               IF USER.TYPE='A' THEN
                  PRO.REC<39>=BILL.STATUS
                  OLD.PRO.REC<39>=BILL.STATUS
               END
               REJECT.FLAG=''
               REJ.TYPE='E'
               REJ.PAYIT=1               ; * JMK231
               REJECTION.ALTERED=1
               GOSUB 8100                ; * Redraw Screen Fields
               GOSUB 8200                ; * Redraw Screen Data
               PRO.LEN = LEN(PRO)
               IF PRO[PRO.LEN-1,2] = 'BD' THEN
                  BAL.DUE = 1
               END ELSE
                  BAL.DUE = 0
               END
               ACCESS.REASON = "APPROVE.": REJ.TYPE          ; * Rejection Altered - Bill Approved  ;* NPR042
               GOSUB UPD.FB.BILLS.ACCESS           ; * NKH56
               GOTO 365
            CASE (QI = 'CD' OR QI = '0D') AND (PROC.DATE = '' OR SU.FLAG)        ; * NPRX999
            CASE (QI = 'C' OR QI = '0' OR QI = "0D") AND (PROC.DATE = '' OR SU.FLAG)
               IMAGE.CHANGED = 0         ; * NKH04
               IF CLIENT.ID = '00574' AND OLD.PRO.REC<39>='O' THEN
                  CALL ELINE('Error Bill has a status of O. See  David to change this bill')
                  CC+=1 ; GOSUB PRINT.CC
                  IF USER#'DAVID' THEN
                     GOTO 320
                  END
               END
               IF OLD.PRO.REC<66>='A' AND NOT(FRT.FLAG) THEN           ; * SWB07
                  CALL ELINE('Error, only Freight Mgnrs can change an Audit Review Bill')  ; * SWB07
                  CC+=1 ; GOSUB PRINT.CC
                  GOTO 320
               END
               IF SU.FLAG THEN
                  IF NOT(OK.TO.EDIT) THEN
                     CALL ELINE('Warning bill has been paid you cannot change the amount on the bill')
                  END
               END ELSE
                  IF USER.TYPE#'A' THEN
                     IF NOT(FRT.FLAG) THEN
                        IF OLD.PRO.REC<89>#'' AND OLD.PRO.REC<89>#USER THEN
                           CALL ELINE('Error! Only ':OLD.PRO.REC<89>:' can Change this bill!')
                           CC+=1 ; GOSUB PRINT.CC
                           GOTO 320
                        END
                        TEST.NAME=OLD.PRO.REC<53>
                        IF OLD.PRO.REC<53>[1,4]='EDI:' THEN TEST.NAME=OLD.PRO.REC<53>[5,99]
                        IF TEST.NAME#USER THEN
                           CALL ELINE('Error! Only ':TEST.NAME:' can Change this bill!')
                           CC+=1 ; GOSUB PRINT.CC
                           GOTO 320
                        END
                     END ELSE
                        IF USER='SMICHALIK' AND FP.CO#'00002' THEN
                           IF OLD.PRO.REC<89>#'' AND OLD.PRO.REC<89>#USER THEN
                              CALL ELINE('Error! Only ':OLD.PRO.REC<89>:' can Change this bill!')
                              CC+=1 ; GOSUB PRINT.CC
                              GOTO 320
                           END
                           TEST.NAME=OLD.PRO.REC<53>
                           IF OLD.PRO.REC<53>[1,4]='EDI:' THEN TEST.NAME=OLD.PRO.REC<53>[5,99]
                           IF TEST.NAME#USER THEN
                              CALL ELINE('Error! Only ':TEST.NAME:' can Change this bill!')
                              CC+=1 ; GOSUB PRINT.CC
                              GOTO 320
                           END
                        END
                     END
                  END
                  IF USER.TYPE='A' THEN
                     IF OLD.PRO.REC<39>#'R' AND OLD.PRO.REC<68>='1' AND OLD.PRO.REC<53>[1,11]#'EDI:AUTO - ' THEN
                        IF OLD.PRO.REC<39>#'4' THEN          ; * NKH34
                           CALL ELINE('Error! Only ':OLD.PRO.REC<53>:' can Change this bill!')
                           CC+=1 ; GOSUB PRINT.CC
                           GOTO 320
                        END              ; * NKH34
                     END
                  END
               END
               NOT.PROCESSED = (PROC.DATE = '')
               OLD.PRO.ID = PRO.ID
               PRO.REC = OLD.PRO.REC
               PRO.LEN = LEN(PRO)
               IF PRO[PRO.LEN-1,2] = 'BD' THEN
                  BAL.DUE = 1
               END ELSE
                  BAL.DUE = 0
               END
               CHANGE.FLAG = 1
               GOSUB 8100                ; * JR
               GOSUB 8300                ; * Assign data
               GOSUB 8200                ; * Display data
               IF CHANGE.FLAG THEN       ; * JMK84
                  OLD.INV=OLD.PRO.REC<94>          ; * JMK84
                  OLD.BOL=OLD.PRO.REC<16>          ; * JMK84
                  OLD.BOL.DIST=OLD.PRO.REC<205>    ; * JMK84
                  OLD.CLASS=OLD.PRO.REC<74>        ; * JMK84
                  Q=PRO                  ; * JMK84
                  QI=PRO                 ; * JMK84
               END                       ; * JMK84
               IF PROC.DATE='' THEN
                  GOTO 300               ; *** Enter Pro (Can X-Back to Carrier)
               END
            CASE QI='BR'                 ; * JMK92
               PRO.REC = OLD.PRO.REC
               GOSUB 8300
               DATA 'Rate'               ; * JMK92
               DATA CLIENT.ID            ; * JMK92
               DATA CARRIER.ID           ; * JMK92
               DATA BILL.DATE'D2/'       ; * JMK92
               DATA IN.OUT               ; * JMK92
               DATA ORIG.ZIP             ; * JMK92
               DATA DEST.ZIP             ; * JMK92
               IF ORIG.ZIP=DEST.ZIP THEN           ; * JMK92
                  DATA ''                ; * JMK92
               END                       ; * JMK92
               NVAL=DCOUNT(CLASSES,@VM)  ; * JMK92
               FOR VAL = 1 TO NVAL       ; * JMK92
                  IF CLASSES<1,VAL>='' OR WEIGHTS<1,VAL>='' ELSE       ; * JMK92
                     DATA CLASSES<1,VAL>           ; * JMK92
                     DATA WEIGHTS<1,VAL>           ; * JMK92
                  END                    ; * JMK92
               NEXT VAL                  ; * JMK92
               DATA ''                   ; * JMK92 - FINISH CLASSES AND GO TO MISC CODES
               IF TEMPO.CLIENT.FLG THEN
                  EXECUTE 'RATER.V2.TEMPO'         ; * JMK92   * NKH01
               END ELSE
                  EXECUTE 'RATER.V2'     ; * JMK92   * NKH01
               END
               GOSUB 8100                ; * JR
               GOSUB 8300                ; * Assign data
               GOSUB 8200                ; * Display data
            CASE QI = 'ADJ' OR QI='10'   ; * NPR06
               N.ADJ = DCOUNT(ADJ.ID.ARRAY,@AM)    ; * NPR06
               FOR I.ADJ = 1 TO N.ADJ    ; * NPR06
                  ID.ADJ = ADJ.ID.ARRAY<I.ADJ>     ; * NPR06
                  IF N.ADJ GT 1 THEN     ; * NPR06
                     READ W.ADJ.REC FROM F.ADJUST.HIST, ID.ADJ ELSE W.ADJ.REC = ""         ; * NPR06
                  END                    ; * NPR06
                  GOSUB DISPLAY.ADJ.DATA           ; * Display data           ; * NPR06
               NEXT I.ADJ                ; * NPR06
               GOSUB 8100                ; * Display screen    ; * NPR06
               IF N.ADJ GT 0 THEN
                  ACCESS.REASON = "ADJ"  ; * Adjust?            ; * NPR042
                  GOSUB UPD.FB.BILLS.ACCESS        ; * NKH56
               END
               GOTO 300                  ; * ENTER PRO         ; * NPR06
            CASE QI = 'N' OR QI = "11"   ; * NPR12
               ID.NOTES = CLIENT.ID:"*":PRO.ID     ; * NPR12
               NVIN = ID.NOTES ; IN.NOTE = ""      ; * NPR12
               NVOUT = ''
               CALL FB.CC.NOTES(IN.NOTE,NVIN,NVOUT)          ; * NPR12
               GOSUB 8100                ; * NPR12
               GOSUB 8300                ; * NPR12 ; * NPR99
               GOSUB 8200                ; * NPR12
               IF NVOUT<1> = 1 THEN ACCESS.REASON = "NOTE.ADD" ELSE ACCESS.REASON = "NOTE.INQ"       ; * Added/Inquire on Note ;* NPR042
               GOSUB UPD.FB.BILLS.ACCESS           ; * NPR042
               GOTO 320                  ; * NPR99
            CASE QI = 'T' OR QI = "12"   ; * NPR036
               IF CLIENT.ID[1,2] NE "99" THEN
                  TVIN=''                ; * NPR036
                  TVOUT=''               ; * NPR036
                  TVIN<1>=CLIENT.ID      ; * NPR036
                  TVIN<2>=PRO.ID         ; * NPR036
                  TVIN<3>=USER           ; * NPR036
                  TVIN<4>=USER.DPT       ; * NPR036
                  TVIN<5>=DATE()         ; * NPR036
                  TVIN<6>=TIME()         ; * NPR036
                  TVIN<7>='1'            ; * NPR036
                  TVIN<8>=PROG.NAME      ; * NPR036
                  TVIN<9>=PROG.DESC      ; * NPR036
                  TVIN<10>=PACK.NAME     ; * NPR036
                  TVIN<11>=CO.NAME       ; * NPR036
                  TVIN<12>="1"           ; * NPR036   Touches only
                  CALL FB.BILLS.ACCESSED(TVIN,TVOUT,CLIENT.ITM,CARRIER.REC,PRO.REC,F.ACCESS,F.TABLES)
                  GOSUB 8100             ; * Display screen   ; * NPR036
                  GOSUB 8300             ; * Assign data      ; * NPR036
                  GOSUB 8200             ; * Display data     ; * NPR036
               END ELSE                  ; * NPR036
                  CALL ELINE("Data not available for client nos. starting with 99")        ; * NPR036
               END                       ; * NPR036
               GOTO 320                  ; * NPR036
            CASE QI = "EP" AND REJECT.FLAG='R'     ; * NKH47
               *            CASE QI = "EP" AND REJECT.FLAG='R' AND USER.TYPE='A'       ; * NPR14   NKH47
               CHANGED.TO.EVENTUAL.PAY = 1
               PRO.REC<66> = "E"         ; * NPR14
               OLD.PRO.REC<66> = "E"     ; * NPR14
               PRO.REC<37> = ""          ; * NPR14
               OLD.PRO.REC<37> = ""      ; * NPR14
               *               MR.TO.PROCESS.DAYS = ''   ; * SWB08   NKH06
               REJ.TYPE='E'
               GOSUB 8100                ; * Display screen   ; * NPR14
               GOSUB 8300                ; * Assign data      ; * NPR14
               GOSUB 8200                ; * Display data     ; * NPR14
               ACCESS.REASON = "PAY.EV"  ; * Eventual Pay      ; * NPR042
               GOSUB UPD.FB.BILLS.ACCESS           ; * NKH56
               GOTO 320                  ; * NPR14
               * Begin NKH42
            CASE (QI = "CR")
               ACCESS.REASON = "CORCTD.BILL"
               GOSUB UPD.FB.BILLS.ACCESS
               IF OCR.ENTRY THEN
                  NEW.MESSAGE = 'Corrected Bill ':OCONV(DATE(),'D2/')
                  IF OLD.PRO.REC<61> = "" THEN
                     MESSAGE = NEW.MESSAGE
                     NEW.DATE = USER:@SVM:DATE()
                  END ELSE
                     MESSAGE = OLD.PRO.REC<61>:@VM:NEW.MESSAGE
                     NEW.DATE = OLD.PRO.REC<62>:@VM:USER:@SVM:DATE()
                  END
                  OLD.PRO.REC<37> = ''
                  PRO.REC = OLD.PRO.REC
                  PRO.REC<61> = MESSAGE
                  PRO.REC<62> = NEW.DATE
                  PRO.REC<39> = "4"
                  PRO.REC<280> = N.IMAGE
                  PRO.REC<288> = "WRITE 1"
                  PRO.REC<289> := "CALL IMAGE 1"
                  PRO.REC<294> = RES.FLAG          ; * NKH74
                  CR.CARRIER = FIELD(PRO.ID,'*',1,1)
                  CR.PRO = FIELD(PRO.ID,'*',2,1):'CR'
                  CR.VERSION = FIELD(PRO.ID,'*',3,1)
                  CR.PRO.ID = CR.CARRIER:'*':CR.PRO:'*':CR.VERSION
                  GOSUB LOCK.RECORD.UPDATE         ; * NKH60
                  WRITE PRO.REC ON F.HIST,CR.PRO.ID
                  WRITE PRO.REC ON F.BILLS,CR.PRO.ID
                  IF NOT(UPDATED.IMG) THEN
                     IVIN=''
                     IVIN<1> = N.IMAGE
                     IVIN<2> = USER
                     IVIN<3> = CLIENT.ID
                     IVIN<4> = 'U'
                     IVIN<5> = PRO.ID
                     IVOUT = ''
                     IF IVIN<1> > "" THEN
                        CALL SEND.IMG.UPD.REST(IVIN,IVOUT)
                        IMG.UPD := 'UPD 13'
                        GOSUB UPDATE.IMAGE.LOG
                     END
                  END
                  LOCK.IMAGE = 0
                  CHANGE.PRO = 0
                  OCR.ENTRY = 1
                  OCR.ITEM += 1
                  OCR.INC = OCR.INC:' | OCR INC 7'
                  IF OCR.ITEM > ARRAY.COUNT THEN
                     CALL ELINE('You have entered all of the OCR for this client')
                  END
                  IMAGE = N.IMAGE
               END
               * End NKH42
            CASE (QI = "AU" OR QI = 99) AND USER.TYPE #'A'   ; * GRB
               ACCESS.REASON = "AU"      ; * NKH36
               GOSUB UPD.FB.BILLS.ACCESS           ; * NKH36
               IF OLD.PRO.REC<39>='R' THEN
               END
               CHK.OLD.PRO=''            ; *** Dont look for any more old styles
               VERSION = 0
               PRO.REC = OLD.PRO.REC
               PRO.REC<6>=''
               PRO.REC<7>=''
               PRO.REC<8>=''
               FOR X = 10 TO 15
                  PRO.REC<X>=''
               NEXT X
               CHECK.DATE=''
               CHECK.NUM=''
               FOR X = 34 TO 37
                  PRO.REC<X>=''
               NEXT X
               PRO.REC<45>=''
               FOR X = 51 TO 52
                  PRO.REC<X>=''
               NEXT X
               PRO.REC<63>=0             ; * Don't Bring Misroute Forward
               PRO.REC<68>='4'
               FOR X = 56 TO 58
                  PRO.REC<X>=''
               NEXT X
               FOR X = 63 TO 65
                  PRO.REC<X>=''
               NEXT X
               * Don't put reject information forward
               FOR X = 69 TO 83
                  PRO.REC<X>=''
               NEXT X
               PRO.REC<88>=''
               * Don't put class and weight information forward
               FOR X = 143 TO 147
                  PRO.REC<X>=''
               NEXT X
               * Don't put LCC information forward
               FOR X = 129 TO 132
                  PRO.REC<X>=''
               NEXT X
               * Don't put detail information forward ; * JMK18
               FOR X = 151 TO 164        ; * JMK18
                  PRO.REC<X>=''          ; * JMK18
               NEXT X                    ; * JMK18
               * Don't put new FB info forward ; * JMK63
               NATT=DCOUNT(PRO.REC,@AM)  ; * JMK63
               *              FOR X = 165 TO NATT       ; * JMK63 ; * JMK68
               FOR X = 165 TO 182        ; * JMK63 ; * JMK68
                  PRO.REC<X>=''          ; * JMK63
               NEXT X                    ; * JMK63
               FOR X = 189 TO 239        ; * JMK68
                  PRO.REC<X>=''          ; * JMK68
               NEXT X                    ; * JMK68
               FOR X = 241 TO NATT       ; * JMK68
                  PRO.REC<X>=''          ; * JMK68
               NEXT X                    ; * JMK68
               IF CLIENT.ID='00574' THEN
                  NUM.OF.ITEMS=DCOUNT(PRO.REC<140>,@VM)
                  FOR XX = 1 TO NUM.OF.ITEMS
                     PRO.REC<140,XX>=0
                  NEXT XX
               END
               VC.ID=PRO.REC<17>
               IF (CLIENT.ID='00000' OR CLIENT.ID='00642') THEN
                  CALL ELINE('No Way Jose!  No BD for AFS... Changed to AD')
                  CC+=1 ; GOSUB PRINT.CC
                  QI='AU'
               END
               IF (CLIENT.ID='00000' OR CLIENT.ID='23288') THEN
                  CALL ELINE('No Way Jose!  No BD for AFS... Changed to AD')
                  CC+=1 ; GOSUB PRINT.CC
                  QI='AU'
               END
               IF USER.TYPE#'A' THEN
                  IF OLD.PRO.REC<11>+0#0 THEN
                     PRO=PRO:'BD'
                  END ELSE
                     PRO=PRO:'AD'
                  END
               END ELSE
                  PRO = PRO:'BD'
               END
               REJECT.FLAG='R'
               LOOK.ID=CARRIER.ID:'*':PRO:'*0'
               READ DUMMY FROM F.HIST,LOOK.ID THEN
                  IF DUMMY<39>='R' THEN
                     NUM.OF.ITEM=DCOUNT(DUMMY<86>,@VM)

                     IF DUMMY<86,NUM.OF.ITEM> <= DATE()-0 THEN

                        PRO.REC=DUMMY
                        PRO.REC<66>='A'
                        PRO.REC<61,-1>='REM for Audit Review'
                        PRO.REC<62,-1>=USER:@SVM:DATE()
                        PRO.REC<66>='A'
                        PRO.REC<37>=''
                        GOSUB 8100       ; * Display screen
                        GOSUB 8300       ; * Assign data
                        GOSUB 8200       ; * Display data

*****************************************************************
AUDIT.REVIEW.UPDATE.1:
*****************************************************************
                        HELP='[Y]es or [.] to update audit review'
                        CALL GEN.IN(0,22,'Update for Audit Review? - ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
                        BEGIN CASE
                           CASE OCONV(QI,'MCU')='Y' OR QI='.'
                              * Begin NKH16
                              IF OCR.ENTRY AND NOT(UPDATED.IMG) THEN
                                 AU.OPTION = 1
                                 IVIN=''
                                 IVIN<1> = N.IMAGE
                                 IVIN<2> = USER
                                 IVIN<3> = CLIENT.ID
                                 IVIN<4> = 'U'
                                 IVIN<5> = PRO.ID
                                 IVOUT = ''
                                 IF IVIN<1> > "" THEN        ; * NKH26
                                    CALL SEND.IMG.UPD.REST(IVIN,IVOUT)
                                    IMG.UPD := 'UPD 5'       ; * NKH14
                                    GOSUB UPDATE.IMAGE.LOG
                                 END     ; * NKH26
                                 IMAGE.NUMBER := 'CALL IMAGE 8'        ; * NKH LOGGING
                                 PRO.REC<288> = 'WRITE 8'    ; * NKH LOGGING
                              END
                              * End NKH16
                           CASE OCONV(QI,'MCU')='EX'
                              GOTO PROGRAM.EXIT    ; * NKH10
                           CASE OCONV(QI,'MCU')='X'
                              GOTO 300
                           CASE 1
                              CALL ELINE('Invalid entry. Please try again')
                              GO AUDIT.REVIEW.UPDATE.1
                        END CASE
                        CHANGED.TO.AUDIT.REVIEW=1
                        PRO.ID=LOOK.ID
                        OLD.PRO.ID=PRO.ID
                        OLD.PRO.REC=PRO.REC
                        AD.BD.FLAG = 1   ; * NKH37
                        GOSUB WRITE.PRO.INFO
                        AD.BD.FLAG = 0   ; * NKH37
                     END ELSE

                        CALL ELINE('Audit review has already been enter must wait 30 day to enter another AU')
                        GOTO 310
                     END
                  END ELSE
                     CALL ELINE('BD is already on file and is not rejected')
                     GOTO 310
                  END
               END ELSE
                  PRO.REC<39>='R'
                  PRO.REC<66>='A'
                  PRO.REC<61>='REM for Audit Review'
                  PRO.REC<62>=USER:@SVM:DATE()
                  GOSUB 8100             ; * Display screen
                  GOSUB 8300             ; * Assign data
                  GOSUB 8200             ; * Display data

*****************************************************************
AUDIT.REVIEW.UPDATE.2:
*****************************************************************
                  HELP='[Y]es or [.] to update audit review'
                  CALL GEN.IN(0,22,'Update for Audit Review? - ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
                  BEGIN CASE
                     CASE OCONV(QI,'MCU')='Y' OR QI='.'
                        * Begin NKH16
                        *                        NULL
                        IF OCR.ENTRY AND NOT(UPDATED.IMG) THEN
                           AU.OPTION = 1
                           IVIN=''
                           IVIN<1> = N.IMAGE
                           IVIN<2> = USER
                           IVIN<3> = CLIENT.ID
                           IVIN<4> = 'U'
                           IVIN<5> = PRO.ID
                           IVOUT = ''
                           IF IVIN<1> > "" THEN    ; * NKH26
                              CALL SEND.IMG.UPD.REST(IVIN,IVOUT)
                              IMG.UPD := 'UPD 6'   ; * NKH14
                              GOSUB UPDATE.IMAGE.LOG
                           END           ; * NKH26
                           IMAGE.NUMBER := 'CALL IMAGE 8'    ; * NKH LOGGING
                           PRO.REC<288> = 'WRITE 8'          ; * NKH LOGGING
                        END
                        * End NKH16
                     CASE OCONV(QI,'MCU')='EX'
                        GOTO PROGRAM.EXIT          ; * NKH10
                     CASE OCONV(QI,'MCU')='X'
                        GOTO 300
                     CASE 1
                        CALL ELINE('Invalid entry. Please try again')
                        GO AUDIT.REVIEW.UPDATE.2
                  END CASE
                  PRO.ID=LOOK.ID
                  OLD.PRO.ID=PRO.ID
                  OLD.PRO.REC=PRO.REC
                  AD.BD.FLAG = 1         ; * NKH37
                  GOSUB WRITE.PRO.INFO
                  AD.BD.FLAG = 0         ; * NKH37
               END
               ACCESS.REASON = "ADD.BD"  ; * Create BD   ;* NPR042   ; * NKH36
               GOSUB UPD.FB.BILLS.ACCESS           ; * NPR042
               CHECK.NUM = ''
               CHECK.AMT = ''
               CHANGE.FLAG=0
               GOTO 300
            CASE QI = '15' AND OLD.PRO.REC<39>='R' AND OLD.PRO.REC<66>='A' AND USER.TYPE='A'
               * Check carrier against list in REJ.CTRL.REC if there is one ; * JMK46
               IF REJ.CTRL.REC#'' THEN   ; * JMK46
                  LOCATE CARRIER.ID IN REJ.CTRL.REC<2> BY 'AL' SETTING REJ.CTRL.POS THEN   ; * JMK46
                     IF REJ.CTRL.REC<4,REJ.CTRL.POS>='' THEN           ; * Open end date ; * JMK46
                        IF DATE() GE REJ.CTRL.REC<3,REJ.CTRL.POS> THEN           ; * JMK46
                           CALL ELINE('Carrier ':CARRIER.ID:' cannot be rejected at this time.  ':TRIM(REJ.CTRL.REC<11,REJ.CTRL.POS>))       ; * JMK46
                           GOTO 430      ; * JMK46
                        END              ; * JMK46
                     END ELSE            ; * JMK46
                        IF (DATE() GE REJ.CTRL.REC<3,REJ.CTRL.POS>) AND (DATE() LE REJ.CTRL.REC<4,REJ.CTRL.POS>) THEN    ; * JMK46
                           CALL ELINE('Carrier ':CARRIER.ID:' cannot be rejected at this time.  ':TRIM(REJ.CTRL.REC<11,REJ.CTRL.POS>))       ; * JMK46
                           GOTO 430      ; * JMK46
                        END              ; * JMK46
                     END                 ; * JMK46
                  END                    ; * JMK46
               END                       ; * JMK46
               IF NOT(REJECTION.ALTERED) THEN GOSUB INIT.REJECT.INFO
               RVIN='' ; RVOUT=''
               RVIN<1> = 'N'
               RVIN<2> = CARRIER.ID
               RVIN<3> = CLIENT.ID
               RVIN<4> = FIELD(PRO.ID,'*',2)
               RVIN<5> = 'R'
               RVIN<6> = BILL.DATE
               RVIN<7> = ACTUAL.CHG      ; * CARRIER.CHG
               RVIN<8> = REJ.TYPE
               CALL FB.2.1.REJECT.KED(RVIN, RVOUT, REJECT.REASONS, MAILING.ADDR)
               REJECT.FLAG = RVOUT<2>
               MULTI.PRO.ID = RVOUT<4>
               NUM.MULTI.PROS = DCOUNT(MULTI.PRO.ID<1>,@VM)
               MULTI.PRO.DATE = RVOUT<6>
               MULTI.PRO.CHG = RVOUT<7>
               MULTI.PRO.REJ = RVOUT<8>
               IF RVOUT<9>='Y' THEN
                  PROC.DATE=''
               END

               BILL.DATE = MULTI.PRO.DATE<1,1>
               ACTUAL.CHG = MULTI.PRO.CHG<1,1>

               IF CARRIER.CHG+0 = 0 THEN CARRIER.CHG=MULTI.PRO.CHG<1,1>
               REJ.TYPE = MULTI.PRO.REJ<1,1>
               GOSUB 8100                ; * Redraw Screen Fields
               GOSUB 8200                ; * Redraw Screen Data
               BEGIN CASE
                  CASE RVOUT<1>='EX'
                     GOTO PROGRAM.EXIT   ; * NKH10
                  CASE RVOUT<1>='X' OR REJECT.FLAG = ''
                     GOTO 400
               END CASE
               REJECTION.ALTERED = RVOUT<3>
               GOTO 4900
            CASE 1
               CALL ELINE('Invalid entry.')
               CC+=1 ; GOSUB PRINT.CC
               GOTO 320
         END CASE
      END ELSE
         IF CLIENT.ID[1,2]#'99' THEN     ; * JMK140
            VIN=''                       ; * JMK140
            VOUT=''                      ; * JMK140
            VIN<1>=CLIENT.ID             ; * JMK140
            VIN<2>=PRO.ID                ; * JMK140
            VIN<3>=USER                  ; * JMK140
            VIN<4>=USER.DPT              ; * JMK140
            VIN<5>=DATE()                ; * JMK140
            VIN<6>=TIME()                ; * JMK140
            VIN<7>='1'                   ; * JMK140
            VIN<8>=PROG.NAME             ; * JMK140
            VIN<9>=PROG.DESC             ; * JMK140
            VIN<10>=PACK.NAME            ; * JMK140
            VIN<11>=CO.NAME              ; * JMK140
         END                             ; * JMK140
         PRO.LEN = LEN(PRO)
         IF PRO[PRO.LEN-1,2] = 'BD' THEN
            BAL.DUE = 1
         END ELSE
            BAL.DUE = 0
         END
         IF CARRIER.ID='00041' OR CARRIER.ID='12062' THEN    ; * JMK85
            DASH.O=0
            NO.DASH.O=0
            GOSUB GET.RELATED.BILLS      ; * JMK85
            IF RELATED.BILLS THEN        ; * JMK85
               GOSUB DISPLAY.RELATED.BILLS         ; * JMK85
                                         ; * JCW07
               IF Q = 'EX' THEN GOTO PROGRAM.EXIT  ; * NKH10     ; * JMK85
               IF DASH.O=0 AND NO.DASH.O#0 THEN
                  LOOKUP.ONLY=1
                  LOOKUP.ONLY.REASON='There is version of this bill already on file.  Lookup Only'
                  PREV.PRO.LOOKUP.ONLY=1
               END
               GOSUB 8100                ; * Display screen ; * JMK85
               GOSUB 8200                ; * JMK85
               *              GOTO 300                  ; * JMK85
            END
         END                             ; * JMK85
      END

      *---- Check for duplicate pro posted to another client, display,
      * and clear for another entry
      IF CLIENT.ID[1,2]='99' ELSE
         IF CARRIER.ID='00017' AND LEN(PRO)=12 THEN
            LOOK.ID='00093*':PRO[1,10]:PRO[12,1]:'*':0
            READ DLOOK FROM F.CRX,LOOK.ID THEN
               CALL ELINE('PRO ':PRO:' is already on file under 00093 see your supervisor')

               GOTO 300
            END
         END
         IF CARRIER.ID='01253' AND PRO[1,3]='555' THEN
            CALL ELINE('Cannot update call FP Supervisor - Pro cannot start with 555')
            IF USER#'MYRA' THEN
               GOTO 300
            END
         END
         READ DUMMY FROM F.CRX,PRO.ID THEN
            IF DUMMY<2> <= XREF.CHECK.DATE THEN
               HELP='Are you trying to enter a new pro [N]o or [Y]es'
               CALL GEN.IN(0,22,'New Pro? N ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
               QI=OCONV(QI,'MCU')
               BEGIN CASE
                  CASE QI='EX'
                     GOTO PROGRAM.EXIT   ; * NKH10
                  CASE QI='N' OR QI='' OR QI='X'
                     NULL
                  CASE QI='Y'
                     GOTO 315
               END CASE
            END
            PRO.REC = DUMMY
            PRO.REC<1>=DUMMY<2>          ; * Correct the Position of the Date
            PRO.REC<2>=''                ; * Correct the I/O Flag (Not on CRX File)
            DUM.CL=DUMMY<1>

            * Assign the Data to PRO.REC then try to read the REAL File
            ******** GRB
            ARCH.FILE = 0
            OPEN 'FB.BILLS.HIST,':DUM.CL TO F.DUMMY THEN
               READ PRO.REC FROM F.DUMMY,PRO.ID ELSE
                  OPEN 'FB.BILLS.ARCH,':DUM.CL TO F.DUMMY THEN
                     READ PRO.REC FROM F.DUMMY,PRO.ID THEN
                        ARCH.FILE = 1
                     END ELSE
                        PRO.REC = ''
                     END
                  END
               END
               CLOSE F.DUMMY
            END
            ******* GRB
            GOSUB 8100                   ; * Display screen
            GOSUB 8300                   ; * Assign data
            GOSUB 8200                   ; * Display data
            WAIT = ''
            IF SU.FLAG AND CHANGE.FLAG ELSE
               IF DBCTRL<14>#'F' AND DBCTRL<14>#'A' THEN
                  WAIT='J'
               END ELSE
                  IF CARRIER.ID='02653' AND DUMMY<2> < DATE()-1095 AND DBCTRL<14>='F' THEN
                     CRT @(0,23):BELL:"[ENTER] to Con, [J]ump to client ":DUMMY<1>:", or [A]dd and remove old xref.:":
                     INPUT WAIT,1:       ; * NKH22
                  END ELSE
                     IF CLIENT.ID # DUMMY<1> THEN  ; * NKH22
                        CRT @(0,23):BELL:"Press [ENTER] to Continue or [J]ump to client ":DUMMY<1>:".: ":
                        INPUT WAIT,1:    ; * NKH22
                     END                 ; * NKH22
                  END
                  *                  INPUT WAIT,1:                      ; * NKH22
               END
               CC+=1 ; GOSUB PRINT.CC
               JUMPING = 0               ; * NKH23
               IF OCONV(WAIT,'MCU')='J' THEN
                  * Removed the JUMP.TO.CLIENT flag. Now the user can jump to a client
                  * and enter a bill under the new client - DRF 5/28/04
                  SND.DATA=DUMMY<1>
                  IF DBCTRL<14> = 'A' THEN         ; * NKH23
                     SND.DATA:=",":OCR.STACK       ; * NKH23
                     JUMPING = 1         ; * NKH23
                  END                    ; * NKH23
                  SND.DATA:=",":CARRIER.ID
                  IF NOT(DBCTRL<9>) THEN
                     SND.DATA:=",":CARRIER.REC<5>[1,5]
                  END
                  SND.DATA:=",":PRO
                  SND.DATA=CHANGE(SND.DATA,",",@AM)
                  GOSUB SEND.DATA
                  GOTO 100
               END
               IF CARRIER.ID ='02653' AND DUMMY<2> < DATE()-1095 AND OCONV(WAIT,'MCU')='A' AND DBCTRL<14>='F' THEN
                  DELETE F.CRX,PRO.ID
                  SND.DATA=CLIENT.ID
                  SND.DATA:=",":CARRIER.ID
                  IF NOT(DBCTRL<9>) THEN
                     SND.DATA:=",":CARRIER.REC<5>[1,5]
                  END
                  SND.DATA:=",":PRO
                  SND.DATA=CHANGE(SND.DATA,",",@AM)
                  GOSUB SEND.DATA
                  GOTO 100
               END
               CRT @(0,22):@(-3):
               CRT @(0,21):@(-3):
               PRO.REC = ''
               GOTO 300                  ; * ENTER PRO
            END
         END
      END

*****************************************************************
315:
*****************************************************************
      READ DUMMY FROM F.HIST,PRO.ID ELSE
         IF XREF.CARRIERS#'' THEN
            CHK.PRO=PRO
            GOSUB CHECK.XREF.CARRIERS
         END
         * Check old pro format that was passed by CHECK.PRO
         IF CHK.OLD.PRO # '' THEN
            CHK.TIMES=DCOUNT(CHK.OLD.PRO<1>,@VM)
            FOR CHK.CNT=1 TO CHK.TIMES
               * CHK.OLD.PRO - Computed old pro format from CALL CHECK.PRO
               CHK.PRO=CHK.OLD.PRO<1,CHK.CNT>
               CHK.ID = CARRIER.ID:'*':CHK.PRO:'*0'
               READ DUMMY FROM F.CRX,CHK.ID THEN
                  Q=CHK.PRO
                  GOTO 305               ; * Skip "Pro Format" Routine
               END
               IF XREF.CARRIERS#'' THEN
                  * CHK.PRO - Check XREF carriers for the computed OLD format
                  CHK.PRO = CHK.PRO
                  GOSUB CHECK.XREF.CARRIERS
               END
            NEXT CHK.CNT
         END

         *** Look for "Old" Style Pro Numbers
         IF CARRIER.ID='09922' AND PRO='0257-577' ELSE
            IF INDEX(PRO,'-',1) OR PRO[1,1]='0' OR INDEX(PRO,'.',1) THEN
               CHK.PRO=PRO
               CHK.PRO=CHANGE(CHK.PRO,'-','')
               CHK.PRO=CHANGE(CHK.PRO,'.','')
               CHK.ID = CARRIER.ID:'*':CHK.PRO:'*0'
               IF CHK.PRO#PRO THEN
                  READ DUMMY FROM F.CRX,CHK.ID THEN
                     Q=CHK.PRO           ; * Look like you entered the "Old" number
                     GOTO 305            ; * Skip "Pro Format" Routine
                  END
               END
               POS.CNTR=0
            LOOP POS.CNTR+=1 ; UNTIL CHK.PRO[1,1]#'0' DO
                  CHK.PRO=CHK.PRO[2,999]
               REPEAT
               CHK.ID = CARRIER.ID:'*':CHK.PRO:'*0'
               READ DUMMY FROM F.CRX,CHK.ID THEN
                  Q=CHK.PRO              ; * Look like you entered the "Old" number
                  GOTO 305               ; * Skip "Pro Format" Routine
               END
               IF XREF.CARRIERS#'' THEN
                  CHK.PRO=CHK.PRO
                  GOSUB CHECK.XREF.CARRIERS
               END
            END
         END
      END
************************************************************************
      EDI.ID=CLIENT.ID:'*':PRO.ID
      READ DUMMY FROM F.EDI.BILLS,EDI.ID THEN
         CALL ELINE('Bill is pending in EDI. Give bill to Auditor')
         CC+=1 ; GOSUB PRINT.CC
         GOTO 300
      END
************************************************************************
      IF CARRIER.ID='00015' OR CARRIER.ID='01075' OR CARRIER.ID='20114' OR CARRIER.ID= '06189' THEN
         READ DUMMY FROM F.INV.XREF,PRO THEN
            CALL ELINE('Bill has a cross reference check inquire FedEx - 1-2-7 Give to Nick Rath')
            CC+=1 ; GOSUB PRINT.CC
            GOTO 300
         END
      END
      * This is the last point before entry of bill
      IF CARRIER.ID='00453' AND PRO[1,3]='006' THEN
         CALL ELINE("You cannot enter a bill with a pro that starts with 006 - See Programming")
         CC+=1 ; GOSUB PRINT.CC
         GOTO 300
      END

*****************************************************************
365:
*****************************************************************
      IF PRO[LEN(PRO)-1,2]='AD' OR PRO[LEN(PRO)-1,2]='BD' OR INDEX(PRO,'/',1) THEN
         LAST.TWO=PRO[LEN(PRO)-1,2]
         IF LAST.TWO = 'AD' OR LAST.TWO = 'BD' THEN
            ORIG.ON.PRO=PRO[1,LEN(PRO)-2]
         END ELSE
            PRO.EXTENSTION=FIELD(PRO,'/',2)
            PRO.EXTENSTION.LEN=LEN(PRO.EXTENSTION)
            PRO.EXTENSTION = PRO.EXTENSTION -1
            IF PRO.EXTENSTION LE 0 THEN
               ORIG.ON.PRO=PRO[1,LEN(PRO)-2]
            END ELSE
               ORIG.ON.PRO=PRO[1,LEN(PRO)-PRO.EXTENSTION.LEN]:PRO.EXTENSTION
            END
         END
         FOUND.ORIG=0
         MOD.XREF.CARRIERS=''
         TIMES=DCOUNT(MOD.XREF.CARRIERS<1>,@VM)
         FOR XCHK = 1 TO TIMES + 1
            IF XCHK = TIMES + 1 THEN
               ORIG.ON.ID=CARRIER.ID:'*':ORIG.ON.PRO:'*0'
            END ELSE
               ORIG.ON.ID=MOD.XREF.CARRIERS<1,XCHK>:'*':ORIG.ON.PRO:'*0'
            END
            READ ORIG.ON.FILE FROM F.HIST,ORIG.ON.ID THEN
               IF ORIG.ON.FILE<39>='O' OR (CLIENT.ID = "06885" OR CLIENT.ID='01308' OR CLIENT.ID='01311' OR CLIENT.ID='01305' OR CLIENT.ID='01349' OR CLIENT.ID='01350' OR CLIENT.ID='01320' OR CLIENT.ID='01344' OR CLIENT.ID='00392' OR CLIENT.ID='01083' OR CLIENT.ID='01312' OR CLIENT.ID='01331' OR CLIENT.ID='01113' OR CLIENT.ID='01505' OR CLIENT.ID='01474' OR CLIENT.ID='01105' OR CLIENT.ID='01898' OR CLIENT.ID='30042' OR CLIENT.ID='30015' OR CLIENT.ID='30023' OR CLIENT.ID='30026' OR CLIENT.ID='30041' OR (CLIENT.ID='01686' AND CARRIER.ID='21086') OR (CLIENT.ID='01686' AND CARRIER.ID='21944') OR (CLIENT.ID='00761' AND CARRIER.ID='12062') OR (CLIENT.ID='00761' AND CARRIER.ID='01312') OR (CLIENT.ID='01686' AND CARRIER.ID='24118') OR (CLIENT.ID='02118' AND CARRIER.ID='12062') OR (CLIENT.ID='01686' AND CARRIER.ID='24260') OR (CLIENT.ID='01686' AND CARRIER.ID='25814') OR (CLIENT.ID='01686' AND CARRIER.ID='24575') OR (CLIENT.ID='00919' AND CARRIER.ID='05792') OR CLIENT.ID='05237') OR (CLIENT.ID='01863' AND CARRIER.ID='08070') OR (CLIENT.ID='06901' AND CARRIER.ID='37864') THEN         ; * JMK209 ; * DRF029  ; * NKH45
                  FOUND.ORIG=1
               END
            END ELSE
               READ ORIG.ON.FILE FROM F.CRX,ORIG.ON.ID THEN
                  IF ORIG.ON.FILE<39>='O' THEN
                     FOUND.ORIG=1
                  END
               END
            END
         NEXT XCHK
         IF LAST.TWO='AD' AND CARRIER.ID='00015' THEN GOTO 400
         IF LAST.TWO='AD' AND CARRIER.ID='00365' THEN GOTO 400
         IF NOT(FOUND.ORIG) THEN
            CALL ELINE(ORIG.ON.PRO:' must be on file & not rejected before ':PRO:' can be entered')
            CC+=1 ; GOSUB PRINT.CC
            GOTO 300
         END
      END
      IF SU.FLAG THEN                    ; * JMK129
         CALL ELINE("Error!  Cannot enter new bills as Super User!")   ; * JMK129
         CC+=1 ; GOSUB PRINT.CC          ; * JMK129
         GOTO 300                        ; * JMK129
      END                                ; * JMK129
      IF LOOKUP.ONLY AND SU.FLAG AND CHANGE.FLAG THEN
         IF LOOKUP.ONLY.REASON='Incorrect Remit Zip' THEN
            LOOKUP.ONLY=0
            PREV.PRO.LOOKUP.ONLY=0       ; * JMK04
         END
      END
      IF LOOKUP.ONLY THEN
         *df         IF LOOKUP.ONLY.REASON='This carrier is not Active.  Lookup Only.' OR LOOKUP.ONLY.REASON='Old Pro Format - Lookup Item only' THEN
         * Begin NKH04
         * If the pro in the array is bad it comes thru here
         IF OCR.ENTRY THEN
            CC+=1 ; GOSUB PRINT.CC
            GOTO 300
         END
         * End NKH04
         IF CARRIER.REC<89>='I' THEN
            IF PRO[PRO.LEN-1,2]='AD' OR PRO[PRO.LEN-1,2]='BD' ELSE
               CALL ELINE("Bill Not On File... You cannot add it because: ":LOOKUP.ONLY.REASON)
               CC+=1 ; GOSUB PRINT.CC
               GOTO 300
            END
         END ELSE
            CALL ELINE("Bill Not On File... You cannot add it because: ":LOOKUP.ONLY.REASON)
            CC+=1 ; GOSUB PRINT.CC
            GOTO 300
         END
      END
      IF TRIM(OCONV(CARRIER.REC<7>,'MCU'))='DO NOT ENTER BILLS' THEN
         CALL ELINE("Error!  Cannot use this carrier to enter new bills!")
         CC+=1 ; GOSUB PRINT.CC
         GOTO 300
      END
      IF CL.STAT#'A' THEN
         CALL ELINE("No Entry Is allowed on Clients That Are Not Set to Active!")
         OCR.ENTRY = 0                   ; * NKH04
         CC+=1 ; GOSUB PRINT.CC
         GOTO 300
      END
      IF (CONTROL.REC='') OR (CONTROL.REC<1>='D') THEN       ; * JAD001
         *  there is no Carrier IED to deal with, so we start checking Mode IED.             ; * JAD001
         IF (MODE.CONTROL.REC = '') OR (MODE.CONTROL.REC<1> = 'D') ELSE          ; * JAD001
            M.INCLUDE.EXCLUDE=''         ; * JAD001
            BEGIN CASE                   ; * JAD001
               CASE MODE.CONTROL.REC<1>='I'        ; * JAD001
                  LOCATE MODE.ID IN MODE.CONTROL.REC<2> BY 'AR' SETTING MODE.POS THEN      ; * JAD001
                     IF DATE() LT MODE.CONTROL.REC<3,MODE.POS> THEN    ; * JAD001
                        CRT@(6,6):STR('*',72)      ; * JAD001
                        FOR N.NDX=1 TO 8           ; * JAD001
                           CRT @(6,7+N.NDX):'*':MODE.CONTROL.REC<11,MODE.POS>'L#70*':      ; * JAD001
                        NEXT             ; * JAD001
                        CRT@(6,16):STR('*',72)     ; * JAD001
                        CALL ELINE('Included carrier W/Mode ':T.MODE:' has been flagged not to pay. Reject Bill.')       ; * JAD001
                        M.INCLUDE.EXCLUDE='I'      ; * JAD001
                        FOR M.NDX=1 TO 10          ; * JAD001
                           CRT@(6,6+M.NDX):STR(' ',72)       ; * JAD001
                        NEXT             ; * JAD001
                     END                 ; * JAD001
                     IF MODE.CONTROL.REC<4,MODE.POS>#'' THEN           ; * Not open end date ; * JAD001
                        IF DATE() GT MODE.CONTROL.REC<4,MODE.POS> THEN           ; * JAD001
                           CRT@(6,7):STR('*',72)   ; * JAD001
                           FOR M.NDX=1 TO 8        ; * JAD001
                              CRT @(6,7+M.NDX):'*':MODE.CONTROL.REC<11,MODE.POS,CNOTES>'L#70*':      ; * JAD001
                           NEXT          ; * JAD001
                           CRT@(6,16):STR('*',72)  ; * JAD001
                           CALL ELINE('Included carrier W/Mode ':T.MODE:' has been flagged not to pay. Reject Bill.')    ; * JAD001
                           M.INCLUDE.EXCLUDE='I'   ; * JAD001
                           FOR M.NDX=1 TO 10       ; * JAD001
                              CRT@(6,6+M.NDX):STR(' ',72)    ; * JAD001
                           NEXT          ; * JAD001
                        END              ; * JAD001
                     END                 ; * JAD001
                  END ELSE               ; * JAD001
                     CRT@(6,7):STR('*',72)         ; * JAD001
                     FOR M.NDX=1 TO 8    ; * JAD001
                        CRT @(6,7+M.NDX):'*':STR(' ',70):'*':          ; * JAD001
                     NEXT                ; * JAD001
                     CRT@(6,16):STR('*',72)        ; * JAD001
                     CALL ELINE('Not-included Mode ':T.MODE:' has been flagged not to pay. Reject Bill.')      ; * JAD001
                     M.INCLUDE.EXCLUDE='NI'        ; * JAD001
                     FOR M.NDX=1 TO 10   ; * JMK109 ; * JAD001
                        CRT@(6,6+M.NDX):STR(' ',72)          ; * JMK109 ; * JAD001
                     NEXT                ; * JMK109 ; * JAD001
                  END                    ; * JAD001
               CASE MODE.CONTROL.REC<1>='E'        ; *MODE.CONTROL.REC is a list of carriers to exclude ; * JAD001
                  LOCATE MODE.ID IN MODE.CONTROL.REC<2> BY 'AR' SETTING MODE.POS THEN      ; * JAD001
                     IF MODE.CONTROL.REC<4,MODE.POS>='' THEN           ; * Open end date
                        IF DATE() GE MODE.CONTROL.REC<3,MODE.POS> THEN           ; * JAD001
                           CRT@(6,7):STR('*',72)   ; * JMK109 ; * JAD001
                           FOR M.NDX=1 TO 8        ; * JMK109 ; * JAD001
                              CRT @(6,7+M.NDX):'*':MODE.CONTROL.REC<11,MODE.POS,M.NDX>'L#70*':
                           NEXT          ; * JAD001
                           CRT@(6,16):STR('*',72)  ; * JAD001
                           CALL ELINE('Excluded Mode ':T.MODE:' has been flagged not to pay. Reject Bill.')    ; * JAD001
                           M.INCLUDE.EXCLUDE='E'   ; * JAD001
                           FOR M.NDX=1 TO 10       ; * JAD001
                              CRT@(6,6+M.NDX):STR(' ',72)    ; * JAD001
                           NEXT          ; * JAD001
                        END              ; * JAD001
                     END ELSE            ; * JAD001
                        IF (DATE() GE MODE.CONTROL.REC<3,MODE.POS>) AND (DATE() LE MODE.CONTROL.REC<4,MODE.POS>) THEN    ; * JAD001
                           CRT@(6,7):STR('*',72)   ; * JAD001
                           FOR M.NDX=1 TO 8        ; * JAD001
                              CRT @(6,7+M.NDX):'*':MODE.CONTROL.REC<11,MODE.POS,M.NDX>'L#70*':       ; * JAD001
                           NEXT          ; * JAD001
                           CRT@(6,16):STR('*',72)  ; * JAD001
                           CALL ELINE('Excluded carrier W/MODE ':MODE.ID:' has been flagged not to pay. Reject Bill.')   ; * JAD001
                           M.INCLUDE.EXCLUDE='E'   ; * JAD001
                           FOR M.NDX=1 TO 10       ; * JAD001
                              CRT@(6,6+M.NDX):STR(' ',72)    ; * JAD001
                           NEXT          ; * JAD001
                        END              ; * JAD001
                     END                 ; * JAD001
                  END                    ; * JAD001
            END CASE                     ; * JAD001
            IF M.INCLUDE.EXCLUDE#'' THEN           ; * JAD001
               PRO.REC=OLD.PRO.REC       ; * JAD001
               PRO.REC<39>='R'           ; * JAD001
               REJECT.FLAG=PRO.REC<39>   ; * JAD001
               PRO.REC<66>='N'           ; * JAD001
               REJ.TYPE=PRO.REC<66>:'-NEW'         ; * JAD001
               IF M.INCLUDE.EXCLUDE='I' OR M.INCLUDE.EXCLUDE='NI' THEN           ; * JAD001
                  PRO.REC<61>='We have been instructed by ':CLIENT.NAME:' to only pay bills for certain carriers. You are not on the list of approved carriers. Please submit your bill directly to ':CLIENT.NAME:'.'
               END ELSE                  ; * JAD001
                  PRO.REC<61>='We have been instructed by ':CLIENT.NAME:' not accept bills from ':CARRIER.NAME:'. Please submit your bill directly to ':CLIENT.NAME:'.'
               END                       ; * JAD001
               PRO.REC<62>=USER:@SVM:DATE()        ; * JAD001
               IF M.INCLUDE.EXCLUDE#'NI' THEN      ; * JAD001
                  NUM.OF.ITEMS=DCOUNT(MODE.CONTROL.REC<11,MODE.POS>,@SVM)        ; * JAD001
                  FOR XX = 1 TO NUM.OF.ITEMS       ; * JAD001
                     IF TRIM(MODE.CONTROL.REC<11,MODE.POS,XX>)#'' THEN           ; * JAD001
                        PRO.REC<61,-1>=TRIM(MODE.CONTROL.REC<11,MODE.POS,XX>)    ; * JAD001
                        PRO.REC<62,-1>=USER:@SVM:DATE()      ; * JAD001
                     END                 ; * JAD001
                  NEXT XX                ; * JAD001
               END                       ; * JAD001
               OLD.PRO.REC=PRO.REC       ; * JAD001
               DATA 'R'                  ; * JAD001
            END                          ; * JAD001
         END                             ; * JAD001
      END ELSE                           ; * END OF MODE CHECKING ; * JAD001
         * NOW WORK ON CARRIER  IED
         INCLUDE.EXCLUDE=''
         BEGIN CASE
            CASE CONTROL.REC<1>='I'      ; * CONTROL.REC is a list of carriers to include
               LOCATE CARRIER.ID IN CONTROL.REC<2> BY 'AL' SETTING CARRIER.POS THEN
                  IF DATE() LT CONTROL.REC<3,CARRIER.POS> THEN
                     CRT@(6,6):STR('*',72)         ; * JMK109
                     FOR CNOTES=1 TO 8   ; * JMK109

                        CRT @(6,7+CNOTES):'*':CONTROL.REC<11,CARRIER.POS,CNOTES>'L#70*':   ; * JMK109
                     NEXT                ; * JMK109
                     CRT@(6,16):STR('*',72)        ; * JMK109
                     CALL ELINE('Included carrier ':CARRIER.ID:' has been flagged not to pay. Reject Bill.')
                     INCLUDE.EXCLUDE='I'
                     FOR CNOTES=1 TO 10  ; * JMK109
                        CRT@(6,6+CNOTES):STR(' ',72)         ; * JMK109
                     NEXT                ; * JMK109
                  END
                  IF CONTROL.REC<4,CARRIER.POS>#'' THEN      ; * Not open end date
                     IF DATE() GT CONTROL.REC<4,CARRIER.POS> THEN
                        CRT@(6,7):STR('*',72)      ; * JMK109
                        FOR CNOTES=1 TO 8          ; * JMK109

                           CRT @(6,7+CNOTES):'*':CONTROL.REC<11,CARRIER.POS,CNOTES>'L#70*':          ; * JMK109
                        NEXT             ; * JMK109
                        CRT@(6,16):STR('*',72)     ; * JMK109
                        CALL ELINE('Included carrier ':CARRIER.ID:' has been flagged not to pay. Reject Bill.')
                        INCLUDE.EXCLUDE='I'
                        FOR CNOTES=1 TO 10         ; * JMK109
                           CRT@(6,6+CNOTES):STR(' ',72)      ; * JMK109
                        NEXT             ; * JMK109
                     END
                  END
               END ELSE
                  CRT@(6,7):STR('*',72)  ; * JMK109
                  FOR CNOTES=1 TO 8      ; * JMK109

                     CRT @(6,7+CNOTES):'*':STR(' ',70):'*':  ; * JMK109
                  NEXT                   ; * JMK109
                  CRT@(6,16):STR('*',72)           ; * JMK109
                  CALL ELINE('Not-included carrier ':CARRIER.ID:' has been flagged not to pay. Reject Bill.')
                  INCLUDE.EXCLUDE='NI'
                  FOR CNOTES=1 TO 10     ; * JMK109
                     CRT@(6,6+CNOTES):STR(' ',72)  ; * JMK109
                  NEXT                   ; * JMK109
               END
            CASE CONTROL.REC<1>='E'      ; * CONTROL.REC is a list of carriers to exclude
               LOCATE CARRIER.ID IN CONTROL.REC<2> BY 'AL' SETTING CARRIER.POS THEN
                  IF CONTROL.REC<4,CARRIER.POS>='' THEN      ; * Open end date
                     IF DATE() GE CONTROL.REC<3,CARRIER.POS> THEN
                        CRT@(6,7):STR('*',72)      ; * JMK109
                        FOR CNOTES=1 TO 8          ; * JMK109

                           CRT @(6,7+CNOTES):'*':CONTROL.REC<11,CARRIER.POS,CNOTES>'L#70*':          ; * JMK109
                        NEXT             ; * JMK109
                        CRT@(6,16):STR('*',72)     ; * JMK109
                        CALL ELINE('Excluded carrier ':CARRIER.ID:' has been flagged not to pay. Reject Bill.')
                        INCLUDE.EXCLUDE='E'
                        FOR CNOTES=1 TO 10         ; * JMK109
                           CRT@(6,6+CNOTES):STR(' ',72)      ; * JMK109
                        NEXT             ; * JMK109
                     END
                  END ELSE
                     IF (DATE() GE CONTROL.REC<3,CARRIER.POS>) AND (DATE() LE CONTROL.REC<4,CARRIER.POS>) THEN
                        CRT@(6,7):STR('*',72)      ; * JMK109
                        FOR CNOTES=1 TO 8          ; * JMK109

                           CRT @(6,7+CNOTES):'*':CONTROL.REC<11,CARRIER.POS,CNOTES>'L#70*':          ; * JMK109
                        NEXT             ; * JMK109
                        CRT@(6,16):STR('*',72)     ; * JMK109
                        CALL ELINE('Excluded carrier ':CARRIER.ID:' has been flagged not to pay. Reject Bill.')
                        INCLUDE.EXCLUDE='E'
                        FOR CNOTES=1 TO 10         ; * JMK109
                           CRT@(6,6+CNOTES):STR(' ',72)      ; * JMK109
                        NEXT             ; * JMK109
                     END
                  END
               END
         END CASE
         IF INCLUDE.EXCLUDE#'' THEN
            PRO.REC=OLD.PRO.REC
            PRO.REC<39>='R'
            REJECT.FLAG=PRO.REC<39>
            PRO.REC<66>='N'
            REJ.TYPE=PRO.REC<66>:'-NEW'
            IF INCLUDE.EXCLUDE='I' OR INCLUDE.EXCLUDE='NI' THEN
               PRO.REC<61>='We have been instructed by ':CLIENT.NAME:' to only pay bills for certain carriers. You are not on the list of approved carriers. Please submit your bill directly to ':CLIENT.NAME:'.'
            END ELSE
               PRO.REC<61>='We have been instructed by ':CLIENT.NAME:' not accept bills from ':CARRIER.NAME:'. Please submit your bill directly to ':CLIENT.NAME:'.'
            END
            PRO.REC<62>=USER:@SVM:DATE()
            IF INCLUDE.EXCLUDE#'NI' THEN
               NUM.OF.ITEMS=DCOUNT(CONTROL.REC<11,CARRIER.POS>,@SVM)
               FOR XX = 1 TO NUM.OF.ITEMS
                  IF TRIM(CONTROL.REC<11,CARRIER.POS,XX>)#'' THEN
                     PRO.REC<61,-1>=TRIM(CONTROL.REC<11,CARRIER.POS,XX>)
                     PRO.REC<62,-1>=USER:@SVM:DATE()
                  END
               NEXT XX
            END
            OLD.PRO.REC=PRO.REC
            DATA 'R'
         END
      END                                ; * JAD001
      * Begin TAG02
      IF OLD.PRO.REC="" AND NOT(CHK.DEL.BILL) THEN
         DEL.PRO.NBR=PRO
         DEL.CARRIER.NBR=CARRIER.ID
         DEL.CLIENT.ID=CLIENT.ID
         GOSUB CHECK.DEL.BILLS
         IF NOT(USE.DEL.BILL) AND DEL.BILLS # "" THEN GO 300
         PRO = DEL.PRO.NBR
         Q = DEL.PRO.NBR
         GOSUB 8100
         GOSUB 8200
         GO 305
      END
      * End TAG02
      *  End of changes for Mode mods.

*****************************************************************
370:
*****************************************************************
      IF USER.TYPE='A' THEN
         LAST.TWO=PRO[LEN(PRO)-1,2]
         IF OLD.PRO.REC='' AND LAST.TWO # 'AD' AND LAST.TWO # 'BD' THEN
            HELP='Pro does not exist. Do you wish to reject the pro'
            CALL GEN.IN(0,22,'Reject Pro? N ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
            QI=OCONV(QI,'MCU')
            BEGIN CASE
               CASE QI='EX'
                  GOTO PROGRAM.EXIT      ; * NKH10
               CASE QI='N' OR QI='' OR QI='X'
                  GOTO 300
               CASE QI='Y'
                  RVIN='' ; RVOUT=''
                  RVIN<1> = 'E'
                  RVIN<2> = CARRIER.ID
                  RVIN<3> = CLIENT.ID
                  RVIN<4> = FIELD(PRO.ID,'*',2)
                  RVIN<5> = REJECT.FLAG
                  RVIN<6> = BILL.DATE
                  RVIN<7> = ACTUAL.CHG   ; * CARRIER.CHG
                  RVIN<8> = 'N'
                  CALL FB.2.1.REJECT.KED(RVIN, RVOUT, REJECT.REASONS, MAILING.ADDR)
                  REJECT.FLAG = RVOUT<2>
                  MULTI.PRO.ID = RVOUT<4>
                  NUM.MULTI.PROS = DCOUNT(MULTI.PRO.ID<1>,@VM)
                  MULTI.PRO.DATE = RVOUT<6>
                  MULTI.PRO.CHG = RVOUT<7>
                  MULTI.PRO.REJ = RVOUT<8>
                  IF RVOUT<9>='Y' THEN
                     PROC.DATE=''
                  END
                  BILL.DATE = MULTI.PRO.DATE<1,1>
                  ACTUAL.CHG = MULTI.PRO.CHG<1,1>
                  IF CARRIER.CHG+0 = 0 THEN CARRIER.CHG=MULTI.PRO.CHG<1,1>
                  REJ.TYPE = MULTI.PRO.REJ<1,1>
                  GOSUB 8100             ; * Redraw Screen Fields
                  GOSUB 8200             ; * Redraw Screen Data
                  BEGIN CASE
                     CASE RVOUT<1>='EX'
                        GOTO PROGRAM.EXIT          ; * NKH10
                     CASE RVOUT<1>='X' OR REJECT.FLAG = ''
                        GOTO 300
                  END CASE
                  REJECTION.ALTERED = RVOUT<3>
                  GOTO 4900
               CASE 1
                  CALL ELINE('Invalid Entry')
                  GOTO 370
            END CASE

         END
      END

      * Begin NKH43
*****************************************************************
380:  * Capture Account Number
*****************************************************************
      ACCT.NUM=''
      HELP = "Enter Account Number. "
      BEGIN CASE                         ; * NKH44
         CASE CARRIER.ID = "00015" OR CARRIER.ID = "01075"   ; * NKH44
         CASE 1                          ; * NKH44
            *            IF CARRIER.ID = "00212" OR CARRIER.ID = "00171"  THEN                        ; * NKH63
            *            MASK = "#########"                                                           ; * NKH63
            *            CALL GEN.IN(10,8,'Acct Num: ':MASK,'',Q,1,9,'','',2,20,8,0,QI,HELP,0,23)          ; * NKH44  NKH63
            *            CC+=LEN(QI)+1 ; GOSUB PRINT.CC                                               ; * NKH63
            *            QI = OCONV(QI,'MCU')                                                         ; * NKH63
            *            Q=QI                                                                         ; * NKH63
            *         END ELSE                                ; * NKH44                               ; * NKH63
            IF CARRIER.ID = '00041' OR CARRIER.ID = '01312' OR CARRIER.ID = '00365' THEN   ; * NKH63
               MASK = "#############"    ; * NKH44
               CALL GEN.IN(10,8,'Acct Num: ':MASK,'',Q,0,20,'','',2,20,8,0,QI,HELP,0,23)   ; * NKH44
               CC+=LEN(QI)+1 ; GOSUB PRINT.CC      ; * NKH44
               QI = OCONV(QI,'MCU')      ; * NKH44
               Q=QI                      ; * NKH44
            END                          ; * NKH63
            *         END                                                                             ; * NKH63
            BEGIN CASE
               CASE ACCT.NUM#'' & QI = ''
                  Q = ACCT.NUM
               CASE QI = 'X'
                  IF CHANGE.FLAG=1 THEN
                     CHANGE.MODE=0
                     IF SU.FLAG THEN
                        CALL ELINE('You cannot X-back here')
                        GOTO PROGRAM.EXIT
                     END
                     GOSUB 8100
                     IF SU.FLAG THEN GOSUB 8200
                     GOTO 300
                  END
                  BACK.FLAG = 1
                  GOTO 300               ; * ENTER PRO
               CASE QI = 'EX'
                  GOTO PROGRAM.EXIT
                  * Begin NKH63
                  *            CASE CARRIER.ID = "00212" OR CARRIER.ID = "00171"  ; * NKH44
                  *               IF Q MATCH "9N" OR Q MATCH "8N" THEN            ; * NKH44
                  *               END ELSE                          ; * NKH44
                  *                  CALL ELINE('Account Number must be 8 or 9 numeric digits.')  ; * NKH44
                  *                  GOTO 380                       ; * NKH44
                  *               END                               ; * NKH44
                  * End NKH63
               CASE QI=''
                  NULL
            END CASE
      END CASE                           ; * NKH44

      ACCT.NUM = Q

      * End NKH43
*****************************************************************
390:  * If Auditable - Send to Audit Routine
*****************************************************************
      WT.REJECT=0                        ; * JMK133
      GOIN=0
      FRT.ARRAY=''                       ; * JMK17
      MIS.ARRAY=''                       ; * JMK17
      IF CLIENT.REC(147)='89997' THEN    ; * DRF07
         IF USER='DAVID' THEN CALL ELINE('PRESS BREAK - USER DEFINE FIELDS')
         IF UFLDS<2>='' THEN             ; * DRF07
            IF TRIM(OLD.PRO.REC<184>)#'' THEN      ; * DRF07
               UFLDS<2>=TRIM(OLD.PRO.REC<184>)     ; * DRF07
            END                          ; * DRF07
         END                             ; * DRF07
         IF UFLDS<2>='' THEN             ; * DRF07
            IF TRIM(M.BOL.REC<66>)#'' THEN         ; * DRF07
               UFLDS<2>=TRIM(M.BOL.REC<66>)        ; * DRF07
            END                          ; * DRF07
         END                             ; * DRF07
         IF UFLDS<3>='' THEN             ; * DRF08
            IF TRIM(OLD.PRO.REC<185>)#'' THEN      ; * DRF08
               UFLDS<3>=TRIM(OLD.PRO.REC<185>)     ; * DRF08
            END                          ; * DRF07
         END                             ; * DRF07
         IF UFLDS<3>='' THEN             ; * DRF07
            IF TRIM(M.BOL.REC<67>)#'' THEN         ; * DRF08
               UFLDS<3>=TRIM(M.BOL.REC<67>)        ; * DRF08
            END                          ; * DRF08
         END                             ; * DRF08
         IF UFLDS<4>='' THEN             ; * DRF064
            IF TRIM(OLD.PRO.REC<186>)#'' THEN      ; * DRF064
               UFLDS<4>=TRIM(OLD.PRO.REC<186>)     ; * DRF064
            END                          ; * DRF064
         END                             ; * DRF064
         IF UFLDS<4>='' THEN             ; * DRF064
            IF TRIM(M.BOL.REC<69>)#'' THEN         ; * DRF064
               UFLDS<4>=TRIM(M.BOL.REC<69>)        ; * DRF064
            END                          ; * DRF064
         END                             ; * DRF064
      END                                ; * DRF07

      IF CARRIER.AUDIT THEN GOIN=1
      IF TEMPO.CLIENT.FLG THEN GOIN=1    ; * GRB19
      IF LTL.CAR & CLIENT.AUDIT & CL.LOGISTICS='Y' & CL.AUTO.MISROUTE='Y' THEN GOIN=1      ; * JMK168
      LPRO=LEN(PRO)
      IF PRO[LPRO-1,2]='AD' OR PRO[LPRO-1,2]='BD' THEN GOIN=0
      IF SU.FLAG AND CHANGE.FLAG THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00981' AND CARRIER.ID='00093' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00981' AND CARRIER.ID='00601' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00857' AND CARRIER.ID='00030' THEN GOIN=0
      IF CLIENT.ID='00857' AND CARRIER.ID='00124' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00857' AND CARRIER.ID='00018' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00857' AND CARRIER.ID='00563' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00857' AND CARRIER.ID='00787' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00857' AND CARRIER.ID='00093' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00857' AND CARRIER.ID='00017' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00857' AND CARRIER.ID='00014' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00857' AND CARRIER.ID='00601' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00857' AND CARRIER.ID='00212' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00857' AND CARRIER.ID='00050' THEN GOIN=0
      IF USER.TYPE='A' AND CLIENT.ID='00857' AND CARRIER.ID='00453' THEN GOIN=0  ; * DRF013
      IF USER.TYPE='A' AND CLIENT.ID='00978' AND CARRIER.ID='00453' THEN GOIN=0  ; * DRF013
      IF USER.TYPE='A' AND CLIENT.ID='01105' AND CARRIER.ID='00453' THEN GOIN=0  ; * DRF013
      IF USER.TYPE='A' AND CLIENT.ID='01777' AND CARRIER.ID='00453' THEN GOIN=0  ; * DRF013
      IF USER.TYPE='A' AND CLIENT.ID='01982' AND CARRIER.ID='00453' THEN GOIN=0  ; * DRF013
      IF USER.TYPE='A' AND CLIENT.ID='00986' AND CARRIER.ID='00050' THEN GOIN=0

      IF CLIENT.ID='01763' AND CARRIER.ID='00017' THEN GOIN=0
      IF CLIENT.ID='01763' AND CARRIER.ID='00030' THEN GOIN=0
      IF CLIENT.ID='01763' AND CARRIER.ID='00050' THEN GOIN=0
      IF CLIENT.ID='01763' AND CARRIER.ID='00601' THEN GOIN=0
      IF CLIENT.ID='01763' AND CARRIER.ID='00787' THEN GOIN=0

      IF GOIN THEN
         * Always Get Class & Weight for LTL Carriers (For Misroutes)
         AVIN='' ; AVOUT=''
         IF BACK.FLAG THEN AVIN<1>='X'
         BACK.FLAG=0
         AVIN<3>=BILL.DATE
         AVIN<4>=TRANS.MODE
         AVIN<5>=AIR.PIECES
         AVIN<6>=WEIGHT
         AVIN<7>=MISC.CHARGE
         AVIN<8>=ACTUAL.CHG              ; * (Carrier Amount on Bill)
         AVIN<9>=CARRIER.CHG             ; * (Logistics Amount)
         AVIN<10>=OLA.CARRIER.ID
         AVIN<11>=CLIENT.ID
         AVIN<12>=IN.OUT
         AVIN<13,1>=ORIG.ZIP
         AVIN<13,2>=ORIG.CITY
         AVIN<13,3>=ORIG.STATE
         AVIN<14,1>=DEST.ZIP
         AVIN<14,2>=DEST.CITY
         AVIN<14,3>=DEST.STATE
         AVIN<15>=CL.ZIP.DEF<1,1>
         AVIN<16>=USER
         NUM.OF.CLASS=DCOUNT(CLASSES,@VM)
         FOR XX = 1 TO NUM.OF.CLASS
            IF CLASSES<1,XX>='' OR WEIGHTS<1,XX>='' ELSE
               AVIN<18,-1>=CLASSES<1,XX>
               AVIN<19,-1>=WEIGHTS<1,XX>
            END
         NEXT XX
         AVIN<21>=MISC.CHG.CODES
         AVIN<22>=CONTR.MISC.CHG.AMTS
         AVIN<23>=BENCH.MISC.CHG.AMTS
         PREV.MISC.CHG = AVIN<21>:@FM:AVIN<22>:@FM:AVIN<23>  ; * SWB09

         IF USER='-DAVID' THEN CALL ELINE('PRESS BREAK')
         AVIN<24>=(CL.LOGISTICS='Y') & (BILL.DATE >= CLIENT.REC(149))  ; * JMK168
         AVIN<25>=0                      ; * Starting OLA Character Count
         AVIN<26>=ZIP.LEN
         GOSUB 8200
         AVIN<27>=PROG.NAME
         AVIN<28>=PROG.DESC
         AVIN<29>=PACK.NAME
         AVIN<30>=CO.NAME
         GOSUB GET.SCREEN.DSP
         AVIN<31>=SCREEN.DSP
         AVIN<32>=DATA.DSP
         IF NOT(CARRIER.AUDIT) THEN
            AVIN<33>=1                   ; * Get Class/Weight for Misroutes
         END
         AVIN<34>=CL.AUTO.MISROUTE='Y'
         AVIN<35>=CL.LOG.FSC='N'         ; * Flag to NOT Calculate Log FSC
         *KD 1/11/98 - ADDED CHECKING AGAINST PRE-AUDIT DATES
         AVIN<36>=CLIENT.REC(27)
         AVIN<37> = PRO.ID
         AVIN<38> = ZIP.ARR
         AVIN<39> = CH.NUM
         AVIN<40> = MILEAGE
         AVIN<41> = 'NW'                 ; * New way don't verify class
         AVIN<42> = OLD.PRO.REC<39>
         AVIN<43> = USER.TYPE
         AVIN<44> = OLD.PRO.REC<98>
         AVIN<45>=FLAT.RATE
         AVIN<46>=MAX.LTL                ; * JMK07
         AVIN<47>=CARRIER.ID
         AVIN<48>=CLIENT.REC(188)        ; * JMK44
         AVIN<49>=CARR.FSC               ; * JMK61
         AVIN<50>=CARRIER.SCAC           ; * JMK147
         AVIN<51>=CARRIER.TYPE           ; * JMK147

         CUTOFF.DATE = CLIENT.REC(232)   ; * NPR05
         AVIN<52>=CUTOFF.DATE            ; * NPR05
         AVIN<53>=CL.LOGISTICS='Y'
         AVIN<54>=CLIENT.REC(149)
         AVIN<55>=CHECK.FOR.CAPACITY

         AVIN<56>=OLD.PRO.REC<53>        ; * Entered  By  * NPR024
         AVIN<57>=OLD.PRO.REC<54>        ; * Verified By  * NPR024

         AVIN<58>=BOL.POP.VER.ARR<1>     ; * NPR028 *** CLIENTS<254> - MV 'Population' Flags   - Populate Bill data from BOL data ,if flag for data field is set to 'Y'
         AVIN<59>=BOL.POP.VER.ARR<2>     ; * NPR028 *** CLIENTS<255> - MV 'Verification' Flags - Verify Bill record against data from BOL data ,if flag for data field is set to 'Y'
         AVIN<60>=BOL.POP.VER.ARR<3>     ; * NPR028 *** CLIENTS<256> - MV 'Variance'           - Allow a certain variance on weights and Amount fields when verifying against BOL data.
         AVIN<61>=BOL.POP.VER.ARR<4>     ; * NPR028 *** Data from FB.BOL.CRX record related to bill
         AVIN<62>=OLD.PRO.REC<96>        ; * Original Stack  ; * SWB05
         AVIN<63>=OLD.PRO.REC<68>        ; * New Stack  ; * SWB05
         AVIN<64>=OLD.PRO.REC<116>       ; * Override Field  ; * SWB05
         AVIN<65>=OLD.PRO.REC<117>       ; * Override Operator  ; * SWB05
         AVIN<66>=OLD.PRO.REC<118>       ; * Override Information  ; * SWB05
         AVIN<67>=FRT.FLAG               ; * Pass Security info   ; * SWB07
         IF (AFS.BOL AND CHANGE.FLAG=0) OR (MATCH.BOL AND CHANGE.FLAG=0) THEN    ; * JAD02 ; * DRF080
            AVIN<68,1>= T.SH.NAME        ; * JAD02
            AVIN<68,2>= T.SH.ADDR        ; * JAD02
            AVIN<69,1>= T.CN.NAME        ; * JAD02
            AVIN<69,2>= T.CN.ADDR        ; * JAD02
            AVIN<70,1>= T.BT.NAME        ; * JAD02
            AVIN<70,2>= T.BT.ADDR        ; * JAD02
            AVIN<70,3>= T.BT.CITY        ; * JAD02
            AVIN<70,4>= T.BT.ST          ; * JAD02
            AVIN<70,5>= T.BT.ZP          ; * JAD02
            AVIN<71> = T.TERMS           ; * JAD02
            AVIN<72> = T.AFS.BOL.DESC    ; * JAD02
            AVIN<73,1>=T.SH.ZP           ; * JAD02
            AVIN<73,2>=T.SH.CITY         ; * JAD02
            AVIN<73,3>=T.SH.ST           ; * JAD02
            AVIN<74,1>=T.CN.ZP           ; * JAD02
            AVIN<74,2>=T.CN.CITY         ; * JAD02
            AVIN<74,3>=T.CN.ST           ; * JAD02
         END                             ; * JAD02
         AVIN<75>=CHANGE.FLAG            ; * JAD02
         AVIN<76>=AFS.BOL                ; * JAD02
         AVIN<77> = FB.NOTE              ; * GRB005
         AVIN<78> = MATCH.BOL            ; * DRF080
         AVIN<79> = AUDIT.CLIENT.ID      ; * NKH02
         AVIN<80> = OLD.PRO.REC<17>      ; * NKH74
         AVIN<81> =CARRIER.REC<1>        ; * GRB19
         AVIN<82> =CLIENT.NAME<2>        ; * GRB19
         AVIN<83> = HANDLING.UNITS       ; * GRB19
         AVOUT=''
         BEGIN CASE
            CASE AUDIT.TYPE = 'AIRBRN' ; NULL
            CASE AUDIT.TYPE = 'LTLALL' ; NULL
            CASE AUDIT.TYPE = 'TLALL' AND USER # '' ; NULL
            CASE 1 ; AUDIT.TYPE='LTLALL'           ; * Force LTL
         END CASE
         MISROUTE.FLG=0

         AO.TRANSIT.TIME = ''            ; * NKH76
         * NKM - It will never execute the code where the [R] is
         BEGIN CASE
            CASE AUDIT.TYPE='LTLALL'
               CHANGE.PRO = 0            ; * NKH04
               IF TEMPO.CLIENT.FLG THEN
                  CALL FB.2.1.AUDIT.OWEN.V2.TEMPO(AVIN,AVOUT,DAUDIT,CONTR.DFSC,BENCH.DFSC,DTARIFFS,DTARIFF.DATE.XREF,LI.CODES,F.AUDIT.TABLES,F.AUDIT.ZIPS,F.PCIN,F.PCOUT,F.TABLES)   ; * NKH01
               END ELSE
                  CALL FB.2.1.AUDIT.OWEN.V2(AVIN,AVOUT,DAUDIT,CONTR.DFSC,BENCH.DFSC,DTARIFFS,DTARIFF.DATE.XREF,LI.CODES,F.AUDIT.TABLES,F.AUDIT.ZIPS,F.PCIN,F.PCOUT,F.TABLES)         ; * NKH01
               END
               IF AVOUT<1> = 'X' THEN CHANGE.PRO = 1         ; * NKH04
               HANDLING.UNITS = AVOUT<54>
            CASE AUDIT.TYPE='LTLALL' AND NUM.EQUIP.TYPES GT 0 AND USER # ''
*****************************************************************
395:
*****************************************************************
               HELP="Is this a [L]TL or a [T]ruckload? [R]eject Bill"
               MASK='LTL OR TRUCKLOAD: L '
               CALL GEN.IN(50,6,MASK,'',Q,0,2,'L','',2,-2,6,0,QI,HELP,0,23)
               CC+=LEN(QI)+1
               QI = ICONV(QI,'MCU')
               IF QI='3' THEN QI='T'
               IF QI='-' THEN QI='R'
               IF QI='' THEN QI = 'L'
               BEGIN CASE
                  CASE QI='X'
                     X.EX.FLAG='X'
                  CASE QI='EX'
                     X.EX.FLAG='EX'
                  CASE QI = 'T'
                     CALL FB.2.1.AUDIT.TL(AVIN,AVOUT,CONTR.DFSC,BENCH.DFSC,AVAL.ACC.CODES,F.AUDIT.ZIPS,F.PCIN,F.PCOUT,F.AUDIT,F.AUDIT.PP,EQUIP.TYPES,F.MILEAGE,F.TABLES)
                  CASE QI = 'L'
                     IF TEMPO.CLIENT.FLG THEN
                        CALL FB.2.1.AUDIT.OWEN.V2.TEMPO(AVIN,AVOUT,DAUDIT,CONTR.DFSC,BENCH.DFSC,DTARIFFS,DTARIFF.DATE.XREF,LI.CODES,F.AUDIT.TABLES,F.AUDIT.ZIPS,F.PCIN,F.PCOUT,F.TABLES)       ; * NKH01
                     END ELSE
                        CALL FB.2.1.AUDIT.OWEN.V2(AVIN,AVOUT,DAUDIT,CONTR.DFSC,BENCH.DFSC,DTARIFFS,DTARIFF.DATE.XREF,LI.CODES,F.AUDIT.TABLES,F.AUDIT.ZIPS,F.PCIN,F.PCOUT,F.TABLES)   ; * NKH01

                     END

                  CASE 1
                     CALL ELINE('Invalid Entry, Please try again!!')
                     GOTO 395
               END CASE
            CASE AUDIT.TYPE='AIRBRN'
               CALL FB.2.1.AUDIT.AIRBRN(AVIN,AVOUT,DAUDIT,DFSC,F.RATE.TABLES,F.PCIN,F.PCOUT)
            CASE AUDIT.TYPE='TLALL' AND USER # ''
               CALL FB.2.1.AUDIT.TL(AVIN,AVOUT,CONTR.DFSC,BENCH.DFSC,AVAL.ACC.CODES ,F.AUDIT.ZIPS,F.PCIN,F.PCOUT,F.AUDIT,F.AUDIT.PP,EQUIP.TYPES,F.MILEAGE,F.TABLES)
            CASE 1
               CALL ELINE('Error - Incorrect Audit Type of "':AUDIT.TYPE:' Call Programmer!')
               CC+=1 ; GOSUB PRINT.CC
         END CASE
         RES.FLAG = AVOUT<53>            ; * NKH74
         * Begin NKH59
         IF OLD.PRO.REC<8> > "" AND OLD.PRO.REC<8> # AVOUT<8> THEN
            GOSUB BILL.UPDATE.LOCK
            IF BILL.IS.LOCKED AND NOT(BILL.LOCK.OVERRIDE) THEN         ; * NKH60
               CALL ELINE('Bill is locked for editing. Amount cannot be changed.')
               GOSUB PRINT.CC
               GOTO 300
            END
         END
         * End NKH59
         SAVE.AVOUT=AVOUT
         CC+=AVOUT<25> ; GOSUB PRINT.CC
         AUDIT=AVOUT<2>
         REDRAW.SCR=AVOUT<20>
         IF OLD.PRO.REC # '' OR PREV.MISC.CHG # '' THEN      ; * SWB09
            *We only want to do this if the user has already entered the Miscellaneous charges at least once
            *First check what Miscellaneous charges were on the order before going into FB.2.1.AUDIT.OWEN
            MISC.CHG = AVOUT<21>:@FM:AVOUT<22>:@FM:AVOUT<23>           ; * SWB09
            PMC.CNT = DCOUNT(PREV.MISC.CHG<1>, @VM)          ; * SWB09
            MC.CNT = DCOUNT(MISC.CHG<1>, @VM)      ; * SWB09
            *If a code was there and still is, instead of checking to see if the $ Amount changed, just update the
            *detail screen info with the $ Amount from the front screen
            FOR PMC = 1 TO PMC.CNT       ; * SWB09
               PMC.CODE = PREV.MISC.CHG<1, PMC>    ; * SWB09
               LOCATE PMC.CODE IN MISC.CHG<1> SETTING MC.POS THEN      ; * SWB09
                  LOCATE PMC.CODE IN DTL.CHRG.CODES<1> SETTING DTL.POS THEN      ; * SWB09
                     *The user just added a code on the front screen that is already on the detail screen. Override what is on the detail screen.
                     *                    DTL.CHRG.AMTS<1,MCI>=CONTR.MISC.CHG.AMTS<1, MC.POS>      ; * SWB09
                     IF PREV.MISC.CHG<2, PMC> # MISC.CHG<2, MC.POS> THEN         ; * SWB09
                        DTL.CHRG.AMTS<1,DTL.POS>=MISC.CHG<2, MC.POS>   ; * SWB09
                     END                 ; * SWB09
                  END ELSE               ; * SWB09
                     *The code was and is on the front screen and isn't on the back screen. The user
                     *must have deleted it previously. Nothing to do here.
                  END                    ; * SWB09
               END ELSE                  ; * SWB09
                  *The code was removed from the Miscellaneous charges. Now remove them from the detail screen.
                  LOCATE PMC.CODE IN DTL.CHRG.CODES<1> SETTING DTL.POS THEN      ; * SWB09
                     DTL.CHRG.CODES = DELETE(DTL.CHRG.CODES, 1, DTL.POS, 0)      ; * SWB09
                     DTL.CHRG.AMTS = DELETE(DTL.CHRG.AMTS, 1, DTL.POS, 0)        ; * SWB09
                  END                    ; * SWB09
               END                       ; * SWB09
            NEXT PMC                     ; * SWB09
            *Now, check the Miscellaneous charges that are on the order after leaving FB.2.1.AUDIT.OWEN
            FOR MC = 1 TO MC.CNT         ; * SWB09
               MC.CODE = MISC.CHG<1, MC>           ; * SWB09
               LOCATE MC.CODE IN PREV.MISC.CHG<1> SETTING PMC.POS THEN           ; * SWB09
                  *The code was already on the front screen. Check to see if it IS on the detail screen.
                  LOCATE MC.CODE IN DTL.CHRG.CODES<1> SETTING DTL.POS THEN       ; * SWB09
                     *The code was and is on both screens.
                     IF MISC.CHG<2, MC> # PREV.MISC.CHG<2, PMC.POS> THEN         ; * SWB09
                        *The user changed the Contract Misc Charge Code Amount so update the detail screen with the info
                        DTL.CHRG.AMTS<1,DTL.POS>=MISC.CHG<2, MC>       ; * SWB09
                     END                 ; * SWB09
                  END ELSE               ; * SWB09
                     *The code was and is on the front screen and isn't on the back screen.
                     IF MISC.CHG<2, MC> # PREV.MISC.CHG<2, PMC.POS> THEN         ; * SWB09
                        *Add the code and amounts to the Detail screen
                        DTL.CHRG.CODES<1,-1>=MC.CODE         ; * SWB09
                        DTL.CHRG.AMTS<1,-1>=MISC.CHG<2, MC>  ; * SWB09
                     END                 ; * SWB09
                  END                    ; * SWB09
               END ELSE                  ; * SWB09
                  *A code was added on the front screen. Check to see if it is in the details.
                  LOCATE MC.CODE IN DTL.CHRG.CODES<1> SETTING DTL.POS THEN       ; * SWB09
                     DTL.CHRG.AMTS<1,DTL.POS>=MISC.CHG<2, MC>          ; * SWB09
                  END ELSE               ; * SWB09
                     IF DTL.CHRG.CODES='' THEN     ; * SWB09
                        *Create a place for FRT before adding the additional codes
                        DTL.CHRG.CODES='FRT'       ; * SWB09
                        DTL.CHRG.AMTS = 0          ; * SWB09
                     END                 ; * SWB09
                     DTL.CHRG.CODES<1,-1>=MC.CODE  ; * SWB09
                     DTL.CHRG.AMTS<1,-1>=MISC.CHG<2, MC>     ; * SWB09
                  END                    ; * SWB09
               END                       ; * SWB09
            NEXT MC                      ; * SWB09
         END                             ; * SWB09
         FLAT.RATE=AVOUT<35>
         CONTR.ABS.MIN=AVOUT<37>
         CONTR.FSC.PERC=AVOUT<38>
         CONTR.FSC.PARMS=AVOUT<46>       ; * JMK61
         BENCH.FSC.PARMS=AVOUT<47>       ; * JMK61
         AFS.FSC.PARMS=AVOUT<48>         ; * JMK61
         TRANSIT.TIME=AVOUT<50>          ; * JMK175
         AO.TRANSIT.TIME = AVOUT<50>     ; * NKH76
         CAPACITY.LOAD=AVOUT<51>

         IF REDRAW.SCR='REDRAW' OR AUDIT='U' OR AUDIT='S' OR AUDIT = 'Y' THEN    ; * NPR063
            GOSUB 8100                   ; * Redraw Entry Fields
            GOSUB 8200                   ; * Redisplay Data
         END
         X.EX.FLAG=AVOUT<1>
         IF X.EX.FLAG='X' THEN
            IF SU.FLAG THEN
               CALL ELINE('You cannot X back from here')
               GOTO PROGRAM.EXIT         ; * NKH10
            END
            GOTO 300
         END
         IF X.EX.FLAG='EX' THEN GOTO PROGRAM.EXIT  ; * NKH10

         IF AUDIT='R' AND AFS.BOL AND CHANGE.FLAG=0 THEN     ; * JAD02 - Reject Bill
                                         ; * JAD02 - Coming from AUDIT.OWEN
            PRO.REC=OLD.PRO.REC          ; * JAD02
            PRO.REC<39>=AVOUT<2>         ; * JAD02
            REJECT.FLAG=PRO.REC<39>      ; * JAD02
            PRO.REC<66>='N'              ; * JAD02
            REJ.TYPE=PRO.REC<66>:'-NEW'  ; * JAD02
            IF REJECT.ERR.MSG = '' THEN REJECT.ERR.MSG = AVOUT<52>     ; * JAD02
            PRO.REC<59>=REJECT.ERR.MSG   ; * JAD02
            PRO.REC<62>=USER:@SVM:DATE()           ; * JAD02
            GOSUB INIT.REJECT.INFO       ; * JAD02
            RVIN='' ; RVOUT=''           ; * JAD02
            RVIN<1> = 'E'                ; * JAD02
            RVIN<2> = CARRIER.ID         ; * JAD02
            RVIN<3> = CLIENT.ID          ; * JAD02
            RVIN<4> = FIELD(PRO.ID,'*',2)          ; * JAD02
            RVIN<5> = 'R'                ; * JAD02
            RVIN<6> = BILL.DATE          ; * JAD02
            RVIN<7> = ACTUAL.CHG         ; * CARRIER.CHG  ; * JAD02
            RVIN<8> = REJ.TYPE           ; * JAD02
            REJECT.REASONS = REJECT.ERR.MSG        ; * JAD02
            CALL FB.2.1.REJECT.KED(RVIN, RVOUT, REJECT.REASONS, MAILING.ADDR)    ; * JAD02
            REJECT.FLAG = RVOUT<2>       ; * JAD02
            MULTI.PRO.ID = RVOUT<4>      ; * JAD02
            NUM.MULTI.PROS = DCOUNT(MULTI.PRO.ID<1>,@VM)     ; * JAD02
            MULTI.PRO.DATE = RVOUT<6>    ; * JAD02
            MULTI.PRO.CHG = RVOUT<7>     ; * JAD02
            MULTI.PRO.REJ = RVOUT<8>     ; * JAD02
            IF RVOUT<9>='Y' THEN         ; * JAD02
               PROC.DATE=''              ; * JAD02
               IF DATE() LE CLIENT.REC(82) THEN    ; * JAD02
                  BILL.DATE=CLIENT.REC(82)+1       ; * JAD02
               END ELSE                  ; * JAD02
                  BILL.DATE=DATE()       ; * JAD02
               END                       ; * JAD02
            END                          ; * JAD02
            BILL.DATE = MULTI.PRO.DATE<1,1>        ; * JAD02
            ACTUAL.CHG = MULTI.PRO.CHG<1,1>        ; * JAD02

            IF CARRIER.CHG+0 = 0 THEN CARRIER.CHG=MULTI.PRO.CHG<1,1>   ; * JAD02
            REJ.TYPE = MULTI.PRO.REJ<1,1>          ; * JAD02
            GOSUB 8100                   ; * Redraw Screen Fields  ; * JAD02
            GOSUB 8200                   ; * Redraw Screen Data  ; * JAD02
            BEGIN CASE                   ; * JAD02
               CASE RVOUT<1>='EX'        ; * JAD02
                  GOTO PROGRAM.EXIT      ; * NKH10                   ; * JAD02
               CASE RVOUT<1>='X' OR REJECT.FLAG = ''         ; * JAD02
                  GOTO 400               ; * JAD02
            END CASE                     ; * JAD02
            REJECTION.ALTERED = RVOUT<3>           ; * JAD02
            GOSUB UPD.FB.BILLS.ACCESS    ; * NKH56
            ACCESS.REASON = "REJ"        ; * NPR042 Bill rejected  ; * JAD02
            GOSUB UPD.FB.BILLS.ACCESS    ; * NKH56
            GOTO 4900                    ; * JAD02
         END                             ; * JAD02
         IF AUDIT='R' THEN               ; * Reject Bill
            AUDIT='N'                    ; * Set to No Audit
            SND.DATA='R' ; GOSUB SEND.DATA
         END
         IF AUDIT = "CD" THEN
            CVIN=''
            CVIN<3> = DTL.CHRG.CODES
            CVIN<4> = DTL.CHRG.AMTS
            CVIN<6> = WEIGHT
            CVIN<7> = CARRIER.ID
            CVIN<8> = CARRIER.NAME
            ORIG = ORIG.ZIP:' ':ORIG.CITY:', ': ORIG.STATE
            CVIN<9> = ORIG
            DEST = DEST.ZIP:' ':DEST.CITY:', ': DEST.STATE
            CVIN<10> = DEST
            CVIN<11> = ACTUAL.CHG
            CVIN<12> = CC
            CVIN<13>='E'
            CVIN<14> = USER
            CVIN<15> = MISC.REASON       ; * JMK157
            CVOUT=''
            IF USER = 'GBINO' THEN DEBUG
            CALL FB.2.1.TL.FREIGHT(CVIN,CVOUT,LI.CODES,QI)
            CC+=VOUT<1> ; GOSUB PRINT.CC
            IF CVOUT # '' THEN
               DTL.CHRG.CODES = CVOUT<3>
               DTL.CHRG.AMTS = CVOUT<4>
               MISC.REASON = CVOUT<6>    ; * JMK157
            END
            GOSUB RECALC.FB.DETAILS
            GOSUB 8100                   ; * NPR024
            GOSUB 8200                   ; * NPR024
            AUDIT='Y'
         END
         IF AUDIT='Y' OR AUDIT='U' OR AUDIT='S' THEN
            BILL.DATE=AVOUT<3>
            CRT @(5,7):BILL.DATE'D2/':
            TRANS.MODE=AVOUT<4>
            AIR.PIECES=AVOUT<5>
            CRT @(0,21):AIR.PIECES'R#7':
            WEIGHT=AVOUT<6>
            IF (CLIENT.ID='01323' OR CLIENT.ID='01324' OR CLIENT.ID='01325' OR CLIENT.ID='01326' OR CLIENT.ID='01311') AND (FRT.FLAG OR USER='FDDAVID' OR SPECIAL.NIKKI.VACATION) THEN         ; * SWB07
               CRT @(0,20):WEIGHT'R#7':'  Dim':
            END ELSE
               CRT @(0,19):WEIGHT'R#6':
            END
            MISC.CHARGE=AVOUT<7>
            IF AVOUT<8>+0=0 THEN
               ACTUAL.CHG=OLD.PRO.REC<8>
            END ELSE
               ACTUAL.CHG=AVOUT<8>
            END
            OLA.AMT=AVOUT<34>
            IF OLD.PRO.REC<8>#'' THEN
               IF OLD.PRO.REC<8>#ACTUAL.CHG THEN CHANGE.EXP=1
            END
            CRT @(15,19):ACTUAL.CHG'R26#9':
            IF AVOUT<9>+0=0 THEN
               CARRIER.CHG=OLD.PRO.REC<7>
            END ELSE
               CARRIER.CHG=AVOUT<9>
            END
            CRT @(6,19):CARRIER.CHG'R26#9':
            IF FLAT.RATE THEN
               CRT @(24,19):'F'
            END ELSE
               CRT @(24,19):' '
            END
            VARIANCE=CARRIER.CHG-ACTUAL.CHG
            CRT @(25,19):VARIANCE'R26#7':
            IN.OUT=AVOUT<12>
            CRT @(5,8):IN.OUT:
            ORIG.ZIP=AVOUT<13,1>
            ORIG.CITY=AVOUT<13,2>
            ORIG.STATE=AVOUT<13,3>
            CRT @(5,10):ORIG.ZIP:' ':ORIG.CITY:', ':ORIG.STATE:
            DEST.ZIP=AVOUT<14,1>
            DEST.CITY=AVOUT<14,2>
            DEST.STATE=AVOUT<14,3>
            CRT @(5,11):DEST.ZIP:' ':DEST.CITY:', ':DEST.STATE:
            GOSUB 9500                   ; * JMK31
            * IF BLOCKIT=1 THEN GO 300     ; * JMK31 ; * JMK172
            IF BLOCKIT.YES=1 THEN GO 300           ; * JMK31 ; * JMK172
            MISROUTE.FLG=AVOUT<17>
            IF MISROUTE.FLG=1 THEN       ; * JMK215
               IF CLIENT.REC(149)#'' THEN          ; * JMK215
                  IF BILL.DATE<CLIENT.REC(149) THEN          ; * JMK215
                     MISROUTE.FLG=0      ; * JMK215
                  END                    ; * JMK215
               END                       ; * JMK215
            END                          ; * JMK215

            LOCATE WEIGHT IN CARRIER.MODE.WGT<1> BY "AR" SETTING POS ELSE NULL
            T.MODE.BY.WGT = OCONV(CARRIER.MODE.BY.WGT<1,POS>,'MCU')
            LTL.CAR=T.MODE.BY.WGT=1      ; * JMK187
            TL.CAR=T.MODE.BY.WGT=6       ; * JMK187
            AIR.CAR=T.MODE.BY.WGT=12     ; * JMK187
            CLASSES=AVOUT<18>            ; * Mv Line Item Classes
            WEIGHTS=AVOUT<19>            ; * Mv Line Item Weights
            MISC.CHG.CODES=AVOUT<21>
            CONTR.MISC.CHG.AMTS=AVOUT<22>
            BENCH.MISC.CHG.AMTS=AVOUT<23>
            LOGISTIC.AMT=AVOUT<26>
            OVERCHARGE.AMT=AVOUT<27>
            CUT.DESC=AVOUT<28>
            AUDITOR.VIEWED = AVOUT<30>
            IF AUDIT.TYPE='TLALL' AND USER # '' THEN
               IF USER.TYPE='A' AND CLIENT.ID='00574' ELSE
                  ZIP.ARR = AVOUT<31>
               END
               MILEAGE = AVOUT<32>
               CRT @(5,15):MILEAGE'L1,#10'
            END
            IF AUDIT.TYPE = 'LTLALL' THEN
               IF AUDIT = 'Y' THEN
                  HIGH.CLASS = AVOUT<31>
                  LOWEST.TABLE.CLASS = AVOUT<32>
                  DIFFERENCE = AVOUT<36>
               END
               AMOUNT.MATCH = AVOUT<33>
            END

            CUT.CLASS=AVOUT<49>          ; * JMKXXX

            IF AMOUNT.MATCH=0 AND AUDIT # 'Y' AND (USER='DAVID' OR USER='SBARBEE') THEN    ; * SWB09
               CALL ELINE('PRESS BREAK')
               LOCATE 'FRT' IN DTL.CHRG.CODES<1> SETTING CHRG.POS THEN
                  FSC.PERC.CALC=(1+CONTR.FSC.PERC/100000)
                  TEMP.ACTUAL.CHG=ACTUAL.CHG
                  NUM.OF.LINE=DCOUNT(DTL.CHRG.CODES<1>,@VM)
                  FOR XX = 1 TO NUM.OF.LINE

                     IF DTL.CHRG.CODES<1,XX>#'FRT' THEN      ; * SWB09
                        *Someone entered FSC or something on the front screen or in the detail screen so
                        *subtract the amount from FRT preserving what the user entered.
                        TEMP.ACTUAL.CHG= TEMP.ACTUAL.CHG-DTL.CHRG.AMTS<1,XX>
                     END
                  NEXT XX
                  FRT.CHRG=TEMP.ACTUAL.CHG/FSC.PERC.CALC
                  FRT.CHRG=FRT.CHRG'R0'
                  DTL.CHRG.AMTS<1,CHRG.POS>=FRT.CHRG
               END

               GOSUB RECALC.FB.DETAILS
            END
            VAR.ARR=''
            VAR.REC=''

            IF OVERCHARGE.AMT+0 > 0 THEN
               OVERCHARGE.DATE=CLIENT.REC(149)+45
               IF START.DATE # '' THEN
                  IF START.DATE GE OVERCHARGE.DATE THEN
                     OVERCHARGE.DATE=START.DATE
                  END
               END
               IF BILL.DATE < OVERCHARGE.DATE AND DAUDIT<13>='Y' AND CL.LOGISTICS='Y' THEN           ; * JMK168 ; * JMK180
                  VAR.ARR<1>=OVERCHARGE.AMT
                  VAR.ARR<7>=CUT.DESC
                  VAR.ARR<10>=CUT.CLASS  ; * JMK154
               END ELSE
                  *             PUT MONEY IN OVERCHARGE FIELD
                  VAR.ARR<2>=OVERCHARGE.AMT
                  VAR.ARR<8>=CUT.DESC
                  VAR.ARR<11>=CUT.CLASS  ; * JMK154
               END
               VER.CODE='A' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
            END
            IF LOGISTIC.AMT+0 > 0 THEN
               VAR.ARR<3>=LOGISTIC.AMT
            END
         END
      END ELSE
         IF USER.TYPE = 'A' AND BILL.STATUS = '3' AND LTL.CAR THEN
            FIRST.TIME.TRY=0
            FIRST.TIME.THRU=1
            GOTO 1850
         END
      END
      IF USER.TYPE='A' THEN
         IF PRO.REC<2> # IN.OUT THEN
            VC.ID=''
            RTN.FROM.VC=1
            GOTO 1400

*****************************************************************
RTN.TO.GOT.VC:
*****************************************************************
            RTN.FROM.VC=0
         END
      END
      IF USER.TYPE='A' AND BILL.STATUS='4' AND AUDIT='Y' THEN
         FIRST.TIME.TRY=0
         FIRST.TIME.THRU=1
         GOTO 1850
      END
      IF USER.TYPE = 'A' AND BILL.STATUS = '4' THEN
         LAST.TWO=PRO[LEN(PRO)-1,2]
         IF (LAST.TWO = 'AD' OR LAST.TWO = 'BD') THEN
            GOTO 1600
         END ELSE
            AUTO.CAL=1
            GOTO 1950
         END
      END
      IF USER.TYPE # 'A' THEN
         LAST.TWO=PRO[LEN(PRO)-1,2]
         IF (LAST.TWO = 'BD') THEN
            GOTO 1600
         END
      END

*****************************************************************
400:
*****************************************************************
      *---- Invoice Number - only for carrier 00015
      * Begin NKH70
      *      IF CARRIER.ID='01075' AND INV.NUM='' THEN INV.NUM=PRO  ; * JMK116
      IF CARRIER.ID = '01075' THEN
         IF OLD.PRO.REC = '' THEN
            IF PRO MATCH "1N'-'3N'-'5N" THEN
               IF INV.NUM='' THEN INV.NUM=PRO
            END ELSE
               IF PRO MATCH "1N'-'3N'-'5N'/'1N" THEN
                  IF INV.NUM='' THEN INV.NUM=PRO[1,LEN(PRO)-2]
               END ELSE
                  CALL ELINE('Inv Number should be keyed as #-###-#### for pro on FedEx Ground (1075)')
                  GOTO 300
               END
            END
         END
      END
      * End NKH70

      IF CAPTURE.INVOICE THEN            ; * JMK106
         NUM.OF.PRO=NUM.OF.PRO+1
         IF NUM.OF.PRO>TOT.NUM.OF.PRO AND NOT(CHANGE.FLAG) THEN
            INV.NUM=''
            TOT.NUM.OF.PRO=''
            NUM.OF.PRO=1
         END
         IF INV.NUM # '' THEN
            GO 410                       ; * JMK35

            MASK = INV.NUM'L#20'         ; * JMK184
         END ELSE
            IF CARRIER.ID='00015' THEN

               MASK = '#-###-#####         '       ; * JMK184
            END ELSE

               MASK = STR('#',20)        ; * JMK184
            END
         END
         HELP = "Enter Invoice Number. "

         CALL GEN.IN(36,7,'Inv Num: ':MASK,'',Q,0,20,'','',2,-20,7,0,QI,HELP,0,23)         ; * JMK184   ; * NPR034
         IF INDEX(QI,"+",1) THEN
            QI=CHANGE(QI,"+","-")
            Q=QI

            CRT @(45,7):QI:              ; * NPR034
         END
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC
         QI = OCONV(QI,'MCU')
         IF CARRIER.ID='00041' THEN      ; * JMK224
            Q = OCONV(Q,'MCU')           ; * JMK224
         END                             ; * JMK224
         BEGIN CASE
            CASE INV.NUM#'' & QI = ''
               Q = INV.NUM
            CASE QI = 'X'
               IF INV.NUM#'' THEN
                  NUM.OF.PRO=NUM.OF.PRO-1
               END
               IF CHANGE.FLAG=1 THEN
                  CHANGE.MODE=0
                  IF SU.FLAG THEN
                     CALL ELINE('You cannot X-back here')
                     GOTO PROGRAM.EXIT   ; * NKH10
                  END
                  GOSUB 8100
                  IF SU.FLAG THEN GOSUB 8200
                  GOTO 300
               END
               BACK.FLAG = 1
               GOTO 300                  ; * ENTER PRO
            CASE QI = 'EX'
               GOTO PROGRAM.EXIT         ; * NKH10
            CASE Q MATCH "1N'-'3N'-'5N" AND CARRIER.ID='00015'
               NULL
            CASE Q MATCH "9N" AND CARRIER.ID='00015'
               TEMP=Q[1,1]:'-':Q[2,3]:'-':Q[5,5]
               Q=TEMP
            CASE QI=''
               NULL
            CASE 1
               IF CARRIER.ID='00015' OR TRIM(Q)='' THEN
                  CALL ELINE('ERROR - Invalid Invoice Number.')
                  CC+=1 ; GOSUB PRINT.CC
                  NUM.OF.PRO=NUM.OF.PRO-1
                  GOTO 400
               END
         END CASE

         INV.NUM = Q

*****************************************************************
410:     * MULTIPLE INVOICE BYPASS
*****************************************************************
         IF INV.NUM='' THEN
            IF CLIENT.ID='10356' OR CLIENT.ID='00125' THEN
               CALL ELINE('Error invoice number is missing')
               GOTO 400
            END ELSE
               IF CARRIER.ID='00041' OR CARRIER.ID='00365' THEN        ; * DRF070
                  CALL ELINE('Error invoice number is missing')
                  GOTO 400
               END ELSE
                  CALL ELINE('Warning invoice number is missing')
               END
            END
         END
         TEMP.INV.ID=CHANGE(INV.NUM,'-','')
         IF TEMP.INV.ID=PRO AND CLIENT.ID#'10356' THEN
            IF CARRIER.ID#'06189' THEN
               CALL ELINE('Error invoice number cannot be the same as pro number. Enter pro with dashes')
               GOTO 400
            END
         END
         IF CLIENT.ID='00125' THEN
            INV.ID=CARRIER.ID:'*':INV.NUM:'*0'

            READ INV.REC FROM F.HIST,INV.ID THEN
               CALL ELINE(INV.NUM:' Is Already on file')
               GOTO 300
            END
         END

         CRT @(45,7) : INV.NUM'L#20'     ; * NPR034

*****************************************************************
420:
*****************************************************************
         IF NOT(CHANGE.FLAG) AND INV.NUM#'' THEN
            IF TOT.NUM.OF.PRO # '' THEN
               MASK = TOT.NUM.OF.PRO'R#4'
               CRT @(74,7):TOT.NUM.OF.PRO'R#4'     ; * NPR034
               GOTO 422
            END ELSE
               MASK = '####'
            END
            HELP = "Enter total number of airbills for this invoice. "
            IF CHANGE.FLAG ! TOT.NUM.OF.PRO # '' THEN REQ = 0 ELSE REQ = 1

            CALL GEN.IN(66,7,NUM.OF.PRO'R#4':' of ':MASK,'',Q,REQ,4,'','',2,-4,7,0,QI,HELP,0,23)     ; * NPR034
            CC+=LEN(QI)+1 ; GOSUB PRINT.CC
            QI = OCONV(QI,'MCU')
            BEGIN CASE
               CASE TOT.NUM.OF.PRO#'' & QI = ''
                  Q = TOT.NUM.OF.PRO
               CASE QI = 'X'
                  CRT @(74,7):TOT.NUM.OF.PRO'R#4'  ; * NPR034
                  NUM.OF.PRO=NUM.OF.PRO-1
                  GOTO 400
               CASE QI = 'EX'
                  GOTO PROGRAM.EXIT      ; * NKH10
               CASE NUM(Q)
                  NULL
               CASE 1
                  CALL ELINE('ERROR - Invalid Total Number of Airbills.')
                  CC+=1 ; GOSUB PRINT.CC
                  GOTO 420
            END CASE
            TOT.NUM.OF.PRO = Q
            CRT @(74,7):TOT.NUM.OF.PRO'R#4'        ; * NPR034
         END
      END

*****************************************************************
421:
*****************************************************************
      * Begin NKH43
      ACCT.NUM=''
      HELP = "Enter Account Number. "
      IF CARRIER.ID = "00015" OR CARRIER.ID = "01075" THEN
         MASK = "#########"
         CALL GEN.IN(36,8,'Acct Num: ':MASK,'',Q,1,9,'','',2,46,8,0,QI,HELP,0,23)
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC
         QI = OCONV(QI,'MCU')
         Q=QI
         T.INV.NUM = INV.NUM             ; * NKH69
         CONVERT '-' TO '' IN T.INV.NUM  ; * NKH69
         T.PRO = PRO                     ; * NKH69
         CONVERT '-' TO '' IN T.PRO      ; * NKH69

         BEGIN CASE
            CASE ACCT.NUM#'' & QI = ''
               Q = ACCT.NUM
            CASE QI = 'X'
               IF CHANGE.FLAG=1 THEN
                  CHANGE.MODE=0
                  IF SU.FLAG THEN
                     CALL ELINE('You cannot X-back here')
                     GOTO PROGRAM.EXIT
                  END
                  GOSUB 8100
                  IF SU.FLAG THEN GOSUB 8200
                  GOTO 300
               END
               BACK.FLAG = 1
               GOTO 300                  ; * ENTER PRO
            CASE QI = 'EX'
               GOTO PROGRAM.EXIT
            CASE Q = T.PRO               ; * NKH69
               CALL ELINE('Account Number cannot be same as pro.')     ; * NKH69
               GOTO 421                  ; * NKH69
            CASE Q = T.INV.NUM           ; * NKH69
               CALL ELINE('Account Number cannot be same as invoice number.')    ; * NKH69
               GOTO 421                  ; * NKH69
            CASE Q MATCH "9N"
            CASE Q MATCH '8N'
            CASE QI=''
               NULL
            CASE 1
               CALL ELINE('Account Number must be 9 numeric digits.')
               GOTO 421
         END CASE
      END

      ACCT.NUM = Q
      * End NKH43

*****************************************************************
422:  * NUM OF PRO BYPASS
*****************************************************************

*****************************************************************
425:
*****************************************************************
      *---- Address Correction Charge - only for carrier 00041
      IF CARRIER.ID='00041' THEN
         IF ADDRESS.CORRECTION.CHARGE#'' THEN
            MASK=ADDRESS.CORRECTION.CHARGE'R26,'
         END ELSE
            MASK='########'
         END
         HELP = 'Enter UPS Address Correction Charge. [X]=Back [EX]=Exit'
         CALL GEN.IN(46,8,'UPS Addr Correc Chrg: ':MASK,'AMT2',Q,0,8,'','',2,68,8,0,QI,HELP,0,23)
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC
         QI=OCONV(QI,'MCU')
         BEGIN CASE
            CASE ADDRESS.CORRECTION.CHARGE#'' & QI=''
               Q=ADDRESS.CORRECTION.CHARGE
            CASE QI='X'
               IF CHANGE.FLAG=1 THEN
                  CHANGE.MODE=0
                  IF SU.FLAG THEN GOSUB INITIALIZE.BILL.VARIABLES
                  GOSUB 8100
                  IF SU.FLAG THEN GOSUB 8200
                  GOTO 300
               END
               BACK.FLAG=1
               GOTO 300                  ; * ENTER PRO
            CASE QI='EX'
               GOTO PROGRAM.EXIT         ; * NKH10
            CASE QI=''
               NULL
         END CASE
         IF Q>30000 THEN                 ; * JMK98
            HELP='Are you sure [Y]es'    ; * JMK98
            CALL GEN.IN(0,22,'Are you sure - ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)      ; * JMK98
            CC+=LEN(QI)+1 ; GOSUB PRINT.CC         ; * JMK98
            QI = OCONV(QI,'MCU')         ; * JMK98
            IF QI#'Y' THEN GO 425        ; * JMK98
         END                             ; * JMK98
         ADDRESS.CORRECTION.CHARGE = Q

         CRT @(68,8):ADDRESS.CORRECTION.CHARGE'R26,':@(-4)
      END                                ; * IF CARRIER.ID='00041'

*****************************************************************
427:  * UPS Fee Charge - only for carrier 00041; * JMK11
*****************************************************************
      IF CARRIER.ID='00041' THEN         ; * JMK11
         IF UPS.FEE.CHARGE#'' THEN       ; * JMK11
            MASK=UPS.FEE.CHARGE'R26,'    ; * JMK11
         END ELSE                        ; * JMK11
            MASK='########'              ; * JMK11
         END                             ; * JMK11
         HELP = 'Enter UPS Fees Charge. [X]=Back [EX]=Exit'  ; * JMK11
         CALL GEN.IN(46,9,'UPS Fees Charge     : ':MASK,'AMT2',Q,0,9,'','',2,68,9,0,QI,HELP,0,23)    ; * JMK11
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC  ; * JMK11
         QI=OCONV(QI,'MCU')              ; * JMK11
         BEGIN CASE                      ; * JMK11
            CASE UPS.FEE.CHARGE#'' & QI=''         ; * JMK11
               Q=UPS.FEE.CHARGE          ; * JMK11
            CASE QI='X'                  ; * JMK11
               IF CHANGE.FLAG=1 THEN     ; * JMK11
                  CHANGE.MODE=0          ; * JMK11
                  IF SU.FLAG THEN
                     CALL ELINE('You cannot X back here')
                     GOTO PROGRAM.EXIT   ; * NKH10
                  END
                  GOSUB 8100             ; * JMK11
                  IF SU.FLAG THEN GOSUB 8200       ; * JMK11
                  GOTO 425               ; * JMK11
               END                       ; * JMK11
               BACK.FLAG=1               ; * JMK11
               GOTO 425                  ; * ENTER ADDR CORR; * JMK11
            CASE QI='EX'                 ; * JMK11
               GOTO PROGRAM.EXIT         ; * NKH10                      ; * JMK11
            CASE QI=''                   ; * JMK11
               NULL                      ; * JMK11
         END CASE                        ; * JMK11
         IF Q>30000 THEN                 ; * JMK98
            HELP='Are you sure [Y]es'    ; * JMK98
            CALL GEN.IN(0,22,'Are you sure - ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)      ; * JMK98
            CC+=LEN(QI)+1 ; GOSUB PRINT.CC         ; * JMK98
            QI = OCONV(QI,'MCU')         ; * JMK98
            IF QI#'Y' THEN GO 427        ; * JMK98
         END                             ; * JMK98
         UPS.FEE.CHARGE = Q              ; * JMK11
         CRT @(68,9):UPS.FEE.CHARGE'R26,':@(-4)    ; * JMK11   * NPR034
      END                                ; * IF CARRIER.ID='00041'; * JMK11

*****************************************************************
430:  * Enter pro date
*****************************************************************
      REJECTABLE = NOT(REJECT.FLAG = 'R' AND CHANGE.FLAG AND OLD.PRO.REC<1>='')
      IF BILL.IS.LOCKED AND NOT(BILL.LOCK.OVERRIDE) THEN REJECTABLE = 0          ; * NKH59   NKH60
      IF (AUDIT='Y' OR AUDIT='U' OR AUDIT='S') AND (AUDIT.TYPE[1,3]='LTL' OR AUDIT.TYPE='AIRBRN' OR (AUDIT.TYPE[1,2]='TL' AND USER # '')) THEN
         IF BACK.FLAG THEN
            IF CHANGE.FLAG THEN
               BACK.FLAG=0
               CHANGE.MODE=0
               IF CAPTURE.INVOICE THEN   ; * JMK106
                  GOTO 400
               END ELSE
                  IF CARRIER.ID='00041' THEN
                     GOTO 427            ; * JMK11
                  END ELSE
                     CHANGE.MODE=0
                     IF SU.FLAG THEN
                        CALL ELINE('You cannot X back here')
                        GOTO PROGRAM.EXIT          ; * NKH10
                     END
                     GOSUB 8100
                     IF SU.FLAG THEN GOSUB 8200
                     GOTO 300
                  END
               END
            END ELSE
               IF CAPTURE.INVOICE THEN   ; * JMK106
                  IF INV.NUM='' THEN GOTO 400
                  GOTO 420
               END ELSE
                  IF CARRIER.ID='00041' THEN GOTO 427        ; * JMK11
                  GOTO 390
               END
            END
         END
         GOTO 450
      END
      BACK.FLAG = 0

      IF DO.BOL.POP THEN
         DATE.POP.FLAG = BOL.POP.VER.ARR<1,15>
         IF DATE.POP.FLAG = 'Y' AND NOT(BACK.FLAG) THEN
            BILL.DATE = BOL.POP.VER.ARR<4,15>
         END
      END

      IF BILL.DATE # '' THEN
         MASK = BILL.DATE'D2.'
      END ELSE
         MASK = 'MM/DD/YY'
      END
      HELP = "Enter Pro Date. [T]oday "

      IF REJECTABLE THEN HELP:="[R]ejct Pay "
      HELP:="[P]rnt Addr Ltr [X]=Bck [EX]it [L]=Car Ltr"
      IF CHANGE.FLAG ! BILL.DATE # '' THEN REQ = 0 ELSE REQ = 1
      CALL GEN.IN(5,7,MASK,'DATE',Q,REQ,8,'','',2,-8,7,0,QI,HELP,0,23)
      CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI = 'P'
            IF TRIM(PRO.ID) = "" THEN
               CALL ELINE("CALL TAMI - PRO ID IS NULL - CARRIER ADDRESS LETTER")
               CALL ELINE("CALL TAMI - PRO ID IS NULL - CARRIER ADDRESS LETTER")
               CALL ELINE("CALL TAMI - PRO ID IS NULL - CARRIER ADDRESS LETTER")
            END
            GOSUB PRINT.CARRIER.ADDRESS.LETTER
            GOTO 400
         CASE QI = 'L'
            GOSUB PROCESS.INQUIRE
            GOTO 300                     ; * ENTER PRO
         CASE QI = 'R' AND REJECTABLE
            * Check carrier against list in REJ.CTRL.REC if there is one ; * JMK46
            IF REJ.CTRL.REC#'' THEN      ; * JMK46
               LOCATE CARRIER.ID IN REJ.CTRL.REC<2> BY 'AL' SETTING REJ.CTRL.POS THEN      ; * JMK46
                  IF REJ.CTRL.REC<4,REJ.CTRL.POS>='' THEN    ; * Open end date ; * JMK46
                     IF DATE() GE REJ.CTRL.REC<3,REJ.CTRL.POS> THEN    ; * JMK46
                        CALL ELINE('Carrier ':CARRIER.ID:' cannot be rejected at this time.  ':TRIM(REJ.CTRL.REC<11,REJ.CTRL.POS>))          ; * JMK46
                        GOTO 430         ; * JMK46
                     END                 ; * JMK46
                  END ELSE               ; * JMK46
                     IF (DATE() GE REJ.CTRL.REC<3,REJ.CTRL.POS>) AND (DATE() LE REJ.CTRL.REC<4,REJ.CTRL.POS>) THEN       ; * JMK46
                        CALL ELINE('Carrier ':CARRIER.ID:' cannot be rejected at this time.  ':TRIM(REJ.CTRL.REC<11,REJ.CTRL.POS>))          ; * JMK46
                        GOTO 430         ; * JMK46
                     END                 ; * JMK46
                  END                    ; * JMK46
               END                       ; * JMK46
            END                          ; * JMK46
            IF NOT(REJECTION.ALTERED) THEN GOSUB INIT.REJECT.INFO
            RVIN='' ; RVOUT=''
            RVIN<1> = 'E'
            RVIN<2> = CARRIER.ID
            RVIN<3> = CLIENT.ID
            RVIN<4> = FIELD(PRO.ID,'*',2)
            RVIN<5> = 'R'
            RVIN<6> = BILL.DATE
            RVIN<7> = ACTUAL.CHG         ; * CARRIER.CHG
            RVIN<8> = REJ.TYPE

            CALL FB.2.1.REJECT.KED(RVIN, RVOUT, REJECT.REASONS, MAILING.ADDR)
            IF REJ.TYPE='N-NEW' THEN REJ.TYPE='N'  ; *DRF006
            REJECT.FLAG = RVOUT<2>
            MULTI.PRO.ID = RVOUT<4>
            NUM.MULTI.PROS = DCOUNT(MULTI.PRO.ID<1>,@VM)
            MULTI.PRO.DATE = RVOUT<6>
            MULTI.PRO.CHG = RVOUT<7>
            MULTI.PRO.REJ = RVOUT<8>
            IF RVOUT<9>='Y' THEN
               PROC.DATE=''
            END
            BILL.DATE = MULTI.PRO.DATE<1,1>
            ACTUAL.CHG = MULTI.PRO.CHG<1,1>
            IF CARRIER.CHG+0 = 0 THEN CARRIER.CHG=MULTI.PRO.CHG<1,1>
            REJ.TYPE = MULTI.PRO.REJ<1,1>
            IF REJ.TYPE='N-NEW' THEN REJ.TYPE='N'  ; *DRF006
            GOSUB 8100                   ; * Redraw Screen Fields
            GOSUB 8200                   ; * Redraw Screen Data
            BEGIN CASE
               CASE RVOUT<1>='EX'
                  GOTO PROGRAM.EXIT      ; * NKH10
               CASE RVOUT<1>='X' OR REJECT.FLAG = ''
                  GOTO 400
            END CASE
            REJECTION.ALTERED = RVOUT<3>
            GOTO 4900
         CASE CHANGE.FLAG & QI = ''
            Q = BILL.DATE
         CASE QI = 'T'
            Q = DATE()
         CASE QI = 'X'
            CRT @(5,7):SPACE(8):
            IF CHANGE.FLAG=1 THEN
               CHANGE.MODE=0
               IF CAPTURE.INVOICE THEN GOTO 400    ; * JMK106
               IF CARRIER.ID='00041' THEN GOTO 427           ; * JMK11
               IF SU.FLAG THEN
                  CALL ELINE('You cannot X-back here')
                  GOTO PROGRAM.EXIT      ; * NKH10
               END
               GOSUB 8100
               IF SU.FLAG THEN GOSUB 8200
               GOTO 300
            END
            BACK.FLAG = 1
            IF CAPTURE.INVOICE THEN      ; * JMK106
               IF INV.NUM='' THEN GOTO 400
               GOTO 420
            END ELSE
               IF CARRIER.ID='00041' THEN GOTO 427           ; * JMK11
            END
            GOTO 300                     ; * ENTER PRO
         CASE QI = 'EX'
            GOTO PROGRAM.EXIT            ; * NKH10
         CASE NOT(NUM(Q)) OR Q GT DATE() ! Q = ''
            CALL ELINE('ERROR - Invalid Date.')
            CC+=1 ; GOSUB PRINT.CC
            GOTO 400
      END CASE
      IF Q < DATE()-730 THEN
         CALL ELINE("Warning! Bill was shipped more than 2 years ago!")
         CC+=1
      END
      IF Q > DATE() THEN
         CALL ELINE("Error Bill date can't be in the future!")
         CC+=1
         GOTO 400
      END
      BILL.DATE = Q
      IF CLIENT.REC(27)#'' AND BILL.DATE < CLIENT.REC(27) THEN

*****************************************************************
VERIFY.SELECTION:
*****************************************************************
         CRT @(0,21):"[YES] I understand that this bill is Earlier than Client Pre-Audit Start Date!"
         HELP="X=Change. EX=Exit. [YES]=Continue."
         CALL GEN.IN(0,22,'Enter selection please. ---','',Q,0,3,'','',0,-3,22,1,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI='X'
               CRT @(0,21):@(-3):
               GOTO 430
            CASE QI='EX'
               GOTO PROGRAM.EXIT         ; * NKH10
            CASE QI='YES'
               NULL
            CASE 1
               CALL ELINE('Invalid entry. Must be [X], [EX], or [YES].')
               GOTO VERIFY.SELECTION
         END CASE
         CRT @(0,21):@(-3):
      END
      IF CLIENT.REC(149)#'' AND BILL.DATE < CLIENT.REC(149) THEN       ; * JMK255

*****************************************************************
VERIFY.CM.SELECTION:
*****************************************************************
         CRT @(0,21):"[YES] I understand that this bill is Earlier than Client Cost Mgmt Start Date!"          ; * JMK255
         HELP="X=Change. EX=Exit. [YES]=Continue."           ; * JMK255
         CALL GEN.IN(0,22,'Enter selection please. ---','',Q,0,3,'','',0,-3,22,1,QI,HELP,0,23)       ; * JMK255
         QI=OCONV(QI,'MCU')              ; * JMK255
         BEGIN CASE                      ; * JMK255
            CASE QI='X'                  ; * JMK255
               CRT @(0,21):@(-3):        ; * JMK255
               GOTO 430                  ; * JMK255
            CASE QI='EX'                 ; * JMK255
               GOTO PROGRAM.EXIT         ; * NKH10                      ; * JMK255
            CASE QI='YES'                ; * JMK255
               NULL                      ; * JMK255
            CASE 1                       ; * JMK255
               CALL ELINE('Invalid entry. Must be [X], [EX], or [YES].')         ; * JMK255
               GOTO VERIFY.CM.SELECTION  ; * JMK255
         END CASE                        ; * JMK255
         CRT @(0,21):@(-3):              ; * JMK255
      END
      IF CLIENT.ID='00716' & BILL.DATE GE ICONV('12/01/94','D') THEN
         CALL ELINE('NO Dal-Tile After 12/01/94')
         CC+=1 ; GOSUB PRINT.CC
         GOTO 400
      END

      CUTOFF.DATE = CLIENT.REC(232)
      IF CUTOFF.DATE NE "" THEN
         IF BILL.DATE GE CUTOFF.DATE THEN
            CALL ELINE('No bills may be entered for this client starting ': OCONV(CUTOFF.DATE,"D2/"))
            CC+=1 ; GOSUB PRINT.CC
            GOTO 400
         END
      END

      CRT @(5,7):BILL.DATE'D2/'
      IF USER.TYPE = 'A' THEN GOTO 500

*****************************************************************
450:  * Enter due date or Payment due date for UPS 00041
*****************************************************************
      DUE.DATE=BILL.DATE+CARRIER.DAYS    ; * JMK41
      IF CARRIER.DAYS.OVERRIDE#'Y' THEN  ; * JMK194
         IF CLIENT.DAYS#'' AND NUM(CLIENT.DAYS) THEN         ; * JMK194
            DUE.DATE=BILL.DATE+CLIENT.DAYS         ; * JMK51
         END                             ; * JMK194
         IF CLIENT.DAYS='C' OR CLIENT.DAYS='P' THEN          ; * JMK194 ; * JMK199
            IF CLIENT.DAYS='P' THEN      ; * JMK199
               DUE.DATE=BILL.DATE        ; * JMK199
            END                          ; * JMK199
            CCDAYS.ID=CLIENT.ID'R%5':'*':CARRIER.ID'R%5'     ; * JMK101
            READ CCDAYS.REC FROM F.CCDAYS,CCDAYS.ID THEN     ; * JMK101
               CCDAYS=CCDAYS.REC<1>      ; * JMK101
               DUE.DATE=BILL.DATE+CCDAYS           ; * JMK101
            END                          ; * JMK101
         END                             ; * JMK194
      END                                ; * JMK51

      IF CL.DUE.FLAG # 'Y' THEN
         IF BACK.FLAG THEN
            GOTO 430
         END ELSE
            IF CARRIER.ID # "00041" THEN           ; * NPR048
               GOTO 500                  ; * NPR033
            END ELSE
               BACK.FLAG = 0
               IF CHANGE.FLAG ! PMT.DUE.DATE # '' THEN
                  MASK = PMT.DUE.DATE 'D2.'
                  MASK = DATE()'D2.'
                  IF CARRIER.ID = "00041" THEN MASK = "MM/DD/YY"       ; * NPR033
               END
               CRT @(14,7):'Pay '
               HELP = "Enter the Carrier Payment Due Date. [T]=Today [X]=Back to Pro Date [EX]=Exit"
               IF CHANGE.FLAG ! PMT.DUE.DATE # '' THEN REQ = 0 ELSE REQ = 1
               CALL GEN.IN(18,7,MASK,'DATE',Q,REQ,8,'','',2,-8,7,0,QI,HELP,0,23)
               CC+=LEN(QI)+1 ; GOSUB PRINT.CC
               QI = OCONV(QI,'MCU')
               BEGIN CASE
                  CASE CHANGE.FLAG & QI = ''
                     Q = PMT.DUE.DATE
                  CASE QI = 'T'
                     Q = DATE()
                  CASE QI = 'X'
                     CRT @(18,7):@(-4):
                     BACK.FLAG=1
                     GOTO 400
                  CASE QI = 'EX'
                     GOTO PROGRAM.EXIT   ; * NKH10
                  CASE NOT( NUM(Q) )
                     GOTO 450
               END CASE
               PMT.DUE.DATE = Q
               CRT @(18,7):PMT.DUE.DATE'D2/'
               GOTO 500
            END
         END
      END

      BACK.FLAG = 0
      IF CHANGE.FLAG ! DUE.DATE # '' THEN
         MASK = DUE.DATE'D2.'
      END ELSE
         MASK = DATE()'D2.'
         IF CARRIER.ID = "00041" THEN MASK = "MM/DD/YY"      ; * NPR033
      END
      CRT @(14,7):'Due'
      HELP = "Enter the Due Date. [T]=Today [X]=Back to Pro Date [EX]=Exit"
      IF CHANGE.FLAG ! DUE.DATE # '' THEN REQ = 0 ELSE REQ = 1
      CALL GEN.IN(18,7,MASK,'DATE',Q,REQ,8,'','',2,-8,7,0,QI,HELP,0,23)
      CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE CHANGE.FLAG & QI = ''
            Q = DUE.DATE
         CASE QI = 'T'
            Q = DATE()
         CASE QI = 'X'
            CRT @(18,7):@(-4):
            BACK.FLAG=1
            GOTO 400
         CASE QI = 'EX'
            GOTO PROGRAM.EXIT            ; * NKH10
         CASE NOT( NUM(Q) )
            GOTO 450
      END CASE
      DUE.DATE = Q
      CRT @(18,7):DUE.DATE'D2/'

*****************************************************************
500:  * Enter inbound or outbound
*****************************************************************
      IF (AUDIT='Y' OR AUDIT='U' OR AUDIT='S') AND (AUDIT.TYPE[1,3]='LTL' OR (AUDIT.TYPE[1,2]='TL' and USER # '')) THEN
         IF BACK.FLAG THEN GOTO 450      ; * Back into Audit Routine
         *         IF CLIENT.ID='01127' OR CLIENT.ID='00761' OR CLIENT.ID='01596' OR CLIENT.ID='01763' OR CLIENT.ID='01019' OR CLIENT.ID='01419' OR CLIENT.ID='01344' OR ((CLIENT.ID='01083' OR CLIENT.ID='01101' OR CLIENT.ID='00879' OR CLIENT.ID='01112' OR CLIENT.ID='01079' OR CLIENT.ID='01271' OR CLIENT.ID='01418' OR CLIENT.ID='01432' OR CLIENT.ID='01389' OR CLIENT.ID='01675' OR CLIENT.ID='05350' OR CLIENT.ID='05351' OR CLIENT.ID='05349' OR CLIENT.ID='01457' OR CLIENT.ID='01267' OR CLIENT.ID='01113' OR CLIENT.ID='05548')) THEN GOTO 1475          ; * NPR019 ; * DRF051 ; * DRF063  ; * NKH55
         IF CLIENT.ID='00761' OR CLIENT.ID='01596' OR CLIENT.ID='01763' OR CLIENT.ID='01019' OR CLIENT.ID='01419' OR CLIENT.ID='01344' OR ((CLIENT.ID='01083' OR CLIENT.ID='01101' OR CLIENT.ID='00879' OR CLIENT.ID='01112' OR CLIENT.ID='01079' OR CLIENT.ID='01271' OR CLIENT.ID='01418' OR CLIENT.ID='01432' OR CLIENT.ID='01389' OR CLIENT.ID='01675' OR CLIENT.ID='05350' OR CLIENT.ID='05351' OR CLIENT.ID='05349' OR CLIENT.ID='01457' OR CLIENT.ID='01267' OR CLIENT.ID='01113' OR CLIENT.ID='05548')) THEN GOTO 1475           ; * NPR019 ; * DRF051 ; * DRF063  ; * NKH55
         GOTO 580                        ; * JMK77
      END
      BEGIN CASE
         CASE CL.IO.FLAG = 'I'
            IF BACK.FLAG THEN GOTO 450
            IN.OUT = 'I'
         CASE CL.IO.FLAG = 'O'
            IF BACK.FLAG THEN GOTO 450
            IN.OUT = 'O'
         CASE CL.IO.FLAG = 'T'
            IF BACK.FLAG THEN GOTO 450
            IN.OUT = 'T'
         CASE 1
            BACK.FLAG = 0
            IF DO.BOL.POP THEN
               INOUT.POP.FLAG = BOL.POP.VER.ARR<1,17>
               IF INOUT.POP.FLAG = 'Y' AND NOT(BACK.FLAG) THEN
                  IN.OUT = "O"
               END
            END
            MASK = IN.OUT'L#2'
            HELP = 'Enter [I]Inbound [O]Outbound [T]Third Party [X]=Back to Date Entry [EX]=Exit'
            CALL GEN.IN(5,8,MASK,'',Q,0,2,'','',2,-2,8,0,QI,HELP,0,23)
            CC+=LEN(QI)+1 ; GOSUB PRINT.CC
            QI = OCONV(QI,'MCU')
            BEGIN CASE
               CASE CHANGE.FLAG & QI = ''
                  Q = IN.OUT
               CASE QI = 'X'
                  CRT @(5,8):' ':
                  BACK.FLAG = 1
                  GOTO 450
               CASE QI = 'EX'
                  GOTO PROGRAM.EXIT      ; * NKH10
               CASE QI = 1 ! QI = 'I'
                  Q = 'I'
               CASE QI = 0 ! QI = 'O'
                  Q = 'O'
               CASE QI = 3 ! QI = 'T'
                  Q = 'T'
               CASE QI = ''
                  IF IN.OUT # '' THEN Q = IN.OUT ELSE
                     CRT BELL:BELL
                     GOTO 500
                  END
               CASE 1
                  CRT BELL:BELL
                  GOTO 500
            END CASE
            IN.OUT = Q
            * Not for Auditors.
            * If we have a Bill and it's Terms are NOT the same as the BOL... ask to go on.
            IF (AFS.BOL AND CHANGE.FLAG=0) OR (MATCH.BOL AND CHANGE.FLAG=0) THEN           ; * JAD02 ; * DRF080
               BEGIN CASE                ; * JAD02
                  CASE IN.OUT = 'I' & T.TERMS = 'C'          ; * JAD02
                  CASE IN.OUT = 'O' & T.TERMS = 'P'          ; * JAD02
                  CASE 1                 ; * JAD02
                     TERMS.ERR = 'Y'     ; * JAD02
                     ERRMSG = '* * Invalid Entry * *'        ; * JAD02
                     ERRMSG<-1> ='Entry does not match BOL Terms'      ; * JAD02
                     ERRMSG<-1>= ' '     ; * JAD02
                     ERRMSG<-1>= 'Shipper:''L#20':SPACE(20):'Billto:'  ; * JAD02
                     ERRMSG<-1> = T.SH.NAME'L#20':S5:T.BT.NAME'L#20'   ; * JAD02
                     ERRMSG<-1> = T.SH.ADDR'L#20':S5:T.BT.ADDR 'L#20'  ; * JAD02
                     ERRMSG<-1> = T.SH.CITY'L#20':S5:T.BT.CITY 'L#20'  ; * JAD02
                     ERRMSG<-1> = T.SH.ST'L#25':S5:T.BT.ST 'L#20'      ; * JAD02
                     ERRMSG<-1> = T.SH.ZP'L#25':S5:T.BT.ZP'L#20'       ; * JAD02
                     ERRMSG<-1> = ' '    ; * JAD02
                     ERRMSG<-1> = 'Consignee:'     ; * JAD02
                     ERRMSG<-1> = T.CN.NAME 'L#20'           ; * JAD02
                     ERRMSG<-1> = T.CN.ADDR 'L#20'           ; * JAD02
                     ERRMSG<-1> = T.CN.CITY 'L#20'           ; * JAD02
                     ERRMSG<-1> = T.CN.ST 'L#20'   ; * JAD02
                     ERRMSG<-1> = T.CN.ZP 'L#20'   ; * JAD02
                     ERRMSG<-1> = ' '    ; * JAD02
                     ERRMSG<-1> = 'Bol Terms : ':T.TERMS     ; * JAD02
                     ERRMSG<-1> = ' '    ; * JAD02
                     ERRMSG<-1>= 'Do you accept? Y)es, N)o or Cancel'
                     TITLE = 'Freight Bill Entry - BOL Terms Error!'   ; * JAD02
                     ANS='' ;            ; * JAD02
                     OPTS = "579"        ; * JAD02
                     CALL ATMSGBOX(TITLE,ERRMSG,OPTS,ANS)    ; * JAD02
                     BEGIN CASE          ; * JAD02
                        CASE ANS = 6     ; *  Yes Accept the Mis-match Terms
                        CASE ANS = 2     ; * Cancel       ; * JAD02
                           GO 500        ; * GO REPROMPT - default condition       ; * JAD02
                        CASE ANS = 7     ; * NO       ; * JAD02
                           IF TERMS.ERR='Y' THEN   ; * JAD02
                              HELP='Do you want to Reject this Bill? [Y]es or Enter for No'          ; * JAD02
                              CALL GEN.IN(0,22,'Reject? ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)     ; * JAD02
                              QI=OCONV(QI,'MCU')   ; * JAD01
                              BEGIN CASE           ; *     ;* JAD02
                                 CASE QI='EX'      ; * JAD02
                                    GOTO PROGRAM.EXIT        ; * NKH10           ; * JAD02
                                 CASE QI='X'       ; * JAD02
                                    GO 300         ; * JAD02
                                 CASE QI='N' OR QI=''        ; * JAD02
                                    GO 600         ; * JAD02
                                 CASE QI='Y'       ; * JAD02
                                    IF T.TERMS = 'C' THEN    ; * JAD02    ;* JAD02
                                       REJECT.ERR.MSG = 15   ; * This is Collect. ; * JAD02
                                    END  ; * JAD02
                                    IF T.TERMS = 'P' THEN    ; * JAD02
                                       REJECT.ERR.MSG = 14   ; * This is prepaid ; * JAD02
                                    END  ; * JAD02
                                    *              This will be a Reject condition. Non OLA       ; * JAD02
                                    PRO.REC=OLD.PRO.REC      ; * JAD02
                                    PRO.REC<39>=AVOUT<2>     ; * JAD02
                                    REJECT.FLAG=PRO.REC<39>  ; * JAD02
                                    PRO.REC<66>='N'          ; * JAD02
                                    REJ.TYPE=PRO.REC<66>:'-NEW'        ; * JAD02
                                    IF REJECT.ERR.MSG = '' THEN        ; * JAD02
                                       REJECT.ERR.MSG = AVOUT<24>      ; * JAD02
                                    END  ; * JAD02
                                    PRO.REC<59>= REJECT.ERR.MSG        ; * JAD02
                                    PRO.REC<62>=USER:@SVM:DATE()       ; * JAD02
                                    GOSUB INIT.REJECT.INFO   ; * JAD02
                                    RVIN='' ; RVOUT=''       ; * JAD02
                                    RVIN<1> = 'E'  ; * JAD02
                                    RVIN<2> = CARRIER.ID     ; * JAD02
                                    RVIN<3> = CLIENT.ID      ; * JAD02
                                    RVIN<4> = FIELD(PRO.ID,'*',2)      ; * JAD02
                                    RVIN<5> = 'R'  ; * JAD02
                                    RVIN<6> = BILL.DATE      ; * JAD02
                                    RVIN<7> = ACTUAL.CHG     ; * CARRIER.CHG ; * JAD02
                                    RVIN<8> = REJ.TYPE       ; * JAD02
                                    REJECT.REASONS = REJECT.ERR.MSG    ; * JAD02
                                    CALL FB.2.1.REJECT.KED(RVIN, RVOUT, REJECT.REASONS, MAILING.ADDR)          ; * JAD02
                                    REJECT.FLAG = RVOUT<2>   ; * JAD02
                                    MULTI.PRO.ID = RVOUT<4>  ; * JAD02
                                    NUM.MULTI.PROS = DCOUNT(MULTI.PRO.ID<1>,@VM)           ; * JAD02
                                    MULTI.PRO.DATE = RVOUT<6>          ; * JAD02
                                    MULTI.PRO.CHG = RVOUT<7>           ; * JAD02
                                    MULTI.PRO.REJ = RVOUT<8>           ; * JAD02
                                    IF RVOUT<9>='Y' THEN     ; * JAD02
                                       PROC.DATE=''          ; * JAD02
                                       IF DATE() LE CLIENT.REC(82) THEN          ; * JAD02
                                          BILL.DATE=CLIENT.REC(82)+1   ; * JAD02
                                       END ELSE    ; * JAD02
                                          BILL.DATE=DATE()   ; * JAD02
                                       END         ; * JAD02
                                    END  ; * JAD02
                                    BILL.DATE = MULTI.PRO.DATE<1,1>    ; * JAD02
                                    ACTUAL.CHG = MULTI.PRO.CHG<1,1>    ; * JAD02

                                    IF CARRIER.CHG+0 = 0 THEN CARRIER.CHG=MULTI.PRO.CHG<1,1>         ; * JAD02
                                    REJ.TYPE = MULTI.PRO.REJ<1,1>      ; * JAD02
                                    GOSUB 8100     ; * Redraw Screen Fields ; * JAD02
                                    GOSUB 8200     ; * Redraw Screen Data ; * JAD02
                                    BEGIN CASE     ; * JAD02
                                       CASE RVOUT<1>='EX'    ; * JAD02
                                          GOTO PROGRAM.EXIT  ; * NKH10     ; * JAD02
                                       CASE RVOUT<1>='X' OR REJECT.FLAG = ''     ; * JAD02
                                          GOTO 400           ; * JAD02
                                    END CASE       ; * JAD02
                                    REJECTION.ALTERED = RVOUT<3>       ; * JAD02
                                    ACCESS.REASON = "REJ"    ; * JAD02
                                    GOSUB UPD.FB.BILLS.ACCESS          ; * NKH56
                                    GOTO 4900      ; * JAD02
                              END CASE   ; * JAD02
                           END           ; * JAD02
                     END CASE            ; * JAD02
               END CASE                  ; * JAD02
            END                          ; * JAD02
      END CASE

      CRT @(5,8):IN.OUT

      *      IF CLIENT.ID='01127' OR CLIENT.ID='00761' OR CLIENT.ID='01596' OR CLIENT.ID='01721' OR CLIENT.ID='01763' OR CLIENT.ID='01019' OR CLIENT.ID='01712' OR CLIENT.ID='01419' OR CLIENT.ID='01344' OR ((CLIENT.ID='01083' OR CLIENT.ID='01101' OR CLIENT.ID='00879' OR CLIENT.ID='01112' OR CLIENT.ID='01079' OR CLIENT.ID='01271' OR CLIENT.ID='01418' OR CLIENT.ID='01432' OR CLIENT.ID='01389' OR CLIENT.ID='01675' OR CLIENT.ID='05350' OR CLIENT.ID='05351' OR CLIENT.ID='05349' OR CLIENT.ID='01457' OR CLIENT.ID='01267' OR CLIENT.ID='01113' OR CLIENT.ID='05548')) THEN           ; * NPR019 ; * DRF051 ; * DRF063  ; * NKH55
      IF CLIENT.ID='00761' OR CLIENT.ID='01596' OR CLIENT.ID='01721' OR CLIENT.ID='01763' OR CLIENT.ID='01019' OR CLIENT.ID='01712' OR CLIENT.ID='01419' OR CLIENT.ID='01344' OR ((CLIENT.ID='01083' OR CLIENT.ID='01101' OR CLIENT.ID='00879' OR CLIENT.ID='01112' OR CLIENT.ID='01079' OR CLIENT.ID='01271' OR CLIENT.ID='01418' OR CLIENT.ID='01432' OR CLIENT.ID='01389' OR CLIENT.ID='01675' OR CLIENT.ID='05350' OR CLIENT.ID='05351' OR CLIENT.ID='05349' OR CLIENT.ID='01457' OR CLIENT.ID='01267' OR CLIENT.ID='01113' OR CLIENT.ID='05548')) THEN  ; * NPR019 ; * DRF051 ; * DRF063  ; * NKH55
         GOTO 1475
      END
      IF CLIENT.ID='01292' THEN
         GOTO 700
      END
      IF CLIENT.ID='01614' AND IN.OUT = "O" THEN
         GOTO 700
      END

*****************************************************************
580:  * Enter User Fields
*****************************************************************
      IF CLIENT.ID='01567' THEN
         GOTO 700
      END
      IF CLIENT.REC(191)#'' AND USER.TYPE # 'A' THEN         ; * JMK49 ; * JMK78
         UVIN=''                         ; * JMK49
         UVIN<1>=CLIENT.ID               ; * JMK49
         UVIN<2>=IN.OUT                  ; * JMK49
         UVIN<3>=CARRIER.ID              ; * JMK60
         IF CLIENT.ID='01832' OR CLIENT.ID='01870' THEN      ; *  NPR038
            W.SOURCE = ''                ; * Source                          ;*  NPR038
            IF DO.BOL.POP THEN           ; *  NPR038
               SOURCE.POP.FLAG = BOL.POP.VER.ARR<1,31>       ; *  NPR038
               IF SOURCE.POP.FLAG = 'Y' AND NOT(BACK.FLAG) THEN        ; *  NPR038
                  W.SOURCE = OCONV(BOL.POP.VER.ARR<4,31>,"MCU")        ; *  NPR038
               END                       ; *  NPR038
            END                          ; *  NPR038
            IF W.SOURCE = '' THEN W.SOURCE = OLD.PRO.REC<183>          ; *  NPR038
            UFLDS<1> = W.SOURCE          ; * Source                          ;*  NPR038
         END
         IF CLIENT.ID = "01310" THEN     ; * NPR037
            UFLDS<4> = OLD.PRO.REC<235>  ; * NPR037
         END                             ; * NPR037
         IF CLIENT.ID = "01718" THEN     ; *  NPR037
            W.HANDLING.UNITS = OLD.PRO.REC<235>    ; * Pieces            ;*  NPR038
            HU.POP.FLAG = BOL.POP.VER.ARR<1,30>
            IF HU.POP.FLAG = 'Y' AND NOT(BACK.FLAG) THEN
               W.HANDLING.UNITS = BOL.POP.VER.ARR<4,30>
            END
            UFLDS<1> = HANDLING.UNITS    ; * Pieces                          ;*  NPR038
         END                             ; * NPR037
         IF CLIENT.ID = '01324' THEN
            UFLDS = ''
            CALG.PRO.NO=FIELD(PRO.ID,'*',2)
            IF FIELD(CALG.PRO.NO,"/",2) NE "" THEN
               CALG.ORIG.PRO.ID = FIELD(PRO.ID,"*",1):"*":FIELD(CALG.PRO.NO,"/",1):"*":FIELD(PRO.ID,"*",3)
               READ CALG.ORIG.REC FROM F.HIST,CALG.ORIG.PRO.ID THEN
                  UFLDS<1> = CALG.ORIG.REC<183>    ; * Product ID
                  UFLDS<2> = CALG.ORIG.REC<184>    ; * Freight Terms
                  UFLDS<3> = CALG.ORIG.REC<185>    ; * Contract/Order #
                  *                  UFLDS<4> = CALG.ORIG.REC<186>        ;* Item #
                  UFLDS<5> = ORIG.ON.FILE<187>     ; * Mode
                  *                  UFLDS<6> = CALG.ORIG.REC<188>   ; * Mileage
               END
            END
         END
         *DF         IF CLIENT.ID='01863' OR CLIENT.ID='01924' OR CLIENT.ID='02149' THEN     ; * JMK211
         IF CLIENT.ID='01863' OR CLIENT.ID='01924' OR CLIENT.ID='02149' OR CLIENT.ID='05543' OR CLIENT.ID='05983' THEN   ; * JMK211
            IF UFLDS<1>='' THEN          ; * JMK211
               IF TRIM(OLD.PRO.REC<183>)#'' THEN   ; * JMK211
                  UFLDS<1>=TRIM(OLD.PRO.REC<183>)  ; * JMK211
               END                       ; * JMK211
            END                          ; * JMK211
            IF UFLDS<1>='' THEN          ; * JMK211
               IF TRIM(M.BOL.REC<25>)#'' THEN      ; * JMK211
                  UFLDS<1>=TRIM(M.BOL.REC<25>)     ; * JMK211
               END                       ; * JMK211
            END                          ; * JMK211
            IF UFLDS<2>='' THEN          ; * JMK211
               IF TRIM(OLD.PRO.REC<184>)#'' THEN   ; * JMK211
                  UFLDS<2>=TRIM(OLD.PRO.REC<184>)  ; * JMK211
               END                       ; * JMK211
            END                          ; * JMK211
            IF UFLDS<2>='' THEN          ; * JMK211
               IF TRIM(M.BOL.REC<42>)#'' THEN      ; * JMK211
                  UFLDS<2>=TRIM(M.BOL.REC<42>)     ; * JMK211
               END                       ; * JMK211
            END                          ; * JMK211
            IF UFLDS<3>='' THEN          ; * JMK211
               IF TRIM(OLD.PRO.REC<185>)#'' THEN   ; * JMK211
                  UFLDS<3>=TRIM(OLD.PRO.REC<185>)  ; * JMK211
               END                       ; * JMK211
            END                          ; * JMK211
            IF UFLDS<3>='' THEN          ; * JMK211
               IF TRIM(M.BOL.REC<43>)#'' THEN      ; * JMK211
                  UFLDS<3>=TRIM(M.BOL.REC<43>)     ; * JMK211
               END                       ; * JMK211
            END                          ; * JMK211
            IF CLIENT.ID='01924' THEN    ; * DRF066
               IF UFLDS<4>='' THEN       ; * DRF066
                  IF TRIM(OLD.PRO.REC<186>)#'' THEN          ; * DRF066
                     UFLDS<4>=TRIM(OLD.PRO.REC<186>)         ; * DRF066
                  END                    ; * DRF066
               END                       ; * DRF066
               IF UFLDS<4>='' THEN       ; * DRF066
                  IF TRIM(M.BOL.REC<71>)#'' THEN   ; * DRF066
                     UFLDS<4>=TRIM(M.BOL.REC<71>)  ; * DRF066
                  END                    ; * DRF066
               END                       ; * DRF066
            END                          ; * DRF066
            * Begin Mod GRB08
            IF CLIENT.ID='01863' THEN
               IF UFLDS<4>='' THEN
                  IF TRIM(OLD.PRO.REC<186>)#'' THEN
                     UFLDS<4>=TRIM(OLD.PRO.REC<186>)
                  END
               END
               IF UFLDS<4>='' THEN
                  IF TRIM(M.BOL.REC<70>)#'' THEN
                     UFLDS<4>=TRIM(M.BOL.REC<70>)
                  END
               END
            END
            * End Mod GRB08
         END                             ; * JMK211
         IF CLIENT.ID='00872' THEN       ; * DRF085
            IF UFLDS<1>='' THEN          ; * DRF085
               IF TRIM(OLD.PRO.REC<183>)#'' THEN   ; * DRF085
                  UFLDS<1>=TRIM(OLD.PRO.REC<183>)  ; * DRF085
               END                       ; * DRF085
            END                          ; * DRF085
            IF UFLDS<1>='' THEN          ; * DRF085
               IF TRIM(M.BOL.REC<25>)#'' THEN      ; * DRF085
                  UFLDS<1>=TRIM(M.BOL.REC<25>):' '           ; * DRF085
               END                       ; * DRF085
               IF TRIM(M.BOL.REC<42>)#'' THEN      ; * DRF085
                  UFLDS<1>=TRIM(M.BOL.REC<42>):' '           ; * DRF085
               END                       ; * DRF085
               IF TRIM(M.BOL.REC<43>)#'' THEN      ; * DRF085
                  UFLDS<1>=TRIM(M.BOL.REC<43>)     ; * DRF085
               END                       ; * DRF085
               UFLDS<1>=TRIM(UFLDS<1>)   ; * DRF085
            END                          ; * DRF085
         END                             ; * DRF085
         IF CLIENT.ID='04979' THEN       ; * DRF056
            IF UFLDS<1>='' THEN          ; * DRF056
               IF TRIM(OLD.PRO.REC<183>)#'' THEN   ; * DRF056
                  UFLDS<1>=TRIM(OLD.PRO.REC<183>)  ; * DRF056
               END                       ; * DRF056
            END                          ; * DRF056
            IF UFLDS<1>='' THEN          ; * DRF056
               IF TRIM(M.BOL.REC<43>)#'' THEN      ; * DRF056
                  UFLDS<1>=TRIM(M.BOL.REC<43>)     ; * DRF056
               END                       ; * DRF056
            END                          ; * DRF056
         END                             ; * DRF056
         IF CLIENT.ID='05113' THEN       ; * DRF045
            IF UFLDS<1>='' THEN          ; * DRF045
               IF TRIM(OLD.PRO.REC<183>)#'' THEN   ; * DRF045
                  UFLDS<1>=TRIM(OLD.PRO.REC<183>)  ; * DRF045
               END                       ; * DRF045
            END                          ; * DRF045
            IF UFLDS<1>='' THEN          ; * DRF045
               IF TRIM(M.BOL.REC<43>)#'' THEN      ; * DRF045
                  UFLDS<1>=TRIM(M.BOL.REC<43>)     ; * DRF045
               END                       ; * DRF045
            END                          ; * DRF045
         END                             ; * DRF045
         IF CLIENT.ID='05417' THEN       ; * DRF048
            IF UFLDS<1>='' THEN          ; * DRF048
               IF TRIM(OLD.PRO.REC<183>)#'' THEN   ; * DRF048
                  UFLDS<1>=TRIM(OLD.PRO.REC<183>)  ; * DRF048
               END                       ; * DRF048
            END                          ; * DRF048
            IF UFLDS<1>='' THEN          ; * DRF048
               IF TRIM(M.BOL.REC<43>)#'' THEN      ; * DRF048
                  UFLDS<1>=TRIM(M.BOL.REC<43>)     ; * DRF048
               END                       ; * DRF048
            END                          ; * DRF048
         END                             ; * DRF048
         IF CLIENT.ID='05639' THEN
            IF UFLDS<1>='' THEN
               IF TRIM(OLD.PRO.REC<183>)#'' THEN
                  UFLDS<1>=TRIM(OLD.PRO.REC<183>)
               END
            END
            IF UFLDS<1>='' THEN
               IF TRIM(M.BOL.REC<25>)#'' THEN
                  UFLDS<1>=TRIM(M.BOL.REC<25>)
               END
            END
         END
         IF CLIENT.ID='06902' THEN
            IF UFLDS<1>='' THEN
               IF IN.OUT='I' THEN
                  UFLDS<1>='A5401015'
               END
            END
         END
         IF CLIENT.ID='06904' THEN
            IF UFLDS<1>='' THEN
               IF IN.OUT='O' THEN
                  UFLDS<1>='AN401025'
               END
               IF IN.OUT='I' THEN
                  UFLDS<1>='AN401015'
               END
            END
         END
         IF CLIENT.REC(147)='89997' THEN           ; * DRF07
            IF UFLDS<2>='' THEN          ; * DRF07
               IF TRIM(OLD.PRO.REC<184>)#'' THEN   ; * DRF07
                  UFLDS<2>=TRIM(OLD.PRO.REC<184>)  ; * DRF07
               END                       ; * DRF07
            END                          ; * DRF07
            IF UFLDS<2>='' THEN          ; * DRF07
               IF TRIM(M.BOL.REC<66>)#'' THEN      ; * DRF07
                  UFLDS<2>=TRIM(M.BOL.REC<66>)     ; * DRF07
               END                       ; * DRF07
            END                          ; * DRF07
            IF UFLDS<3>='' THEN          ; * DRF08
               IF TRIM(OLD.PRO.REC<185>)#'' THEN   ; * DRF08
                  UFLDS<3>=TRIM(OLD.PRO.REC<185>)  ; * DRF08
               END                       ; * DRF07
            END                          ; * DRF07
            IF UFLDS<3>='' THEN          ; * DRF07
               IF TRIM(M.BOL.REC<67>)#'' THEN      ; * DRF08
                  UFLDS<3>=TRIM(M.BOL.REC<67>)     ; * DRF08
               END                       ; * DRF08
            END                          ; * DRF08
            IF UFLDS<4>='' THEN          ; * DRF064
               IF TRIM(OLD.PRO.REC<186>)#'' THEN   ; * DRF064
                  UFLDS<3>=TRIM(OLD.PRO.REC<186>)  ; * DRF064
               END                       ; * DRF064
            END                          ; * DRF064
            IF UFLDS<4>='' THEN          ; * DRF064
               IF TRIM(M.BOL.REC<69>)#'' THEN      ; * DRF064
                  UFLDS<4>=TRIM(M.BOL.REC<69>)     ; * DRF064
               END                       ; * DRF064
            END                          ; * DRF064
         END                             ; * DRF07
         IF CLIENT.ID = '01697' THEN
            IF UFLDS<1>='' THEN          ; * DRF07
               IF TRIM(OLD.PRO.REC<183>)#'' THEN   ; * DRF07
                  UFLDS<1>=TRIM(OLD.PRO.REC<183>)  ; * DRF07
               END                       ; * DRF07
            END                          ; * DRF07
            IF UFLDS<1>='' THEN          ; * DRF07
               IF TRIM(M.BOL.REC<65>)#'' THEN      ; * DRF07
                  UFLDS<1>=TRIM(M.BOL.REC<65>)     ; * DRF07
               END                       ; * DRF07
            END                          ; * DRF07
         END                             ; * DRF07
         * Begin NKH48
         IF CLIENT.ID='06885' THEN
            IF UFLDS<1>='' THEN
               IF TRIM(M.BOL.REC<42>)#'' THEN      ; * Customer Ship ID
                  UFLDS<1>=TRIM(M.BOL.REC<42>)
               END
            END
            IF UFLDS<2>='' THEN
               IF TRIM(M.BOL.REC<65>)#'' THEN      ; * Load Number
                  UFLDS<2>=TRIM(M.BOL.REC<65>)
               END
            END
            IF UFLDS<3>='' THEN
               IF TRIM(M.BOL.REC<43>)#'' THEN      ; * PO Number
                  UFLDS<3>=TRIM(M.BOL.REC<43>)
               END
            END
            IF UFLDS<4>='' THEN          ; * NKH50
               IF TRIM(M.BOL.REC<25>)#'' THEN      ; * SO Number
                  UFLDS<4>=TRIM(M.BOL.REC<25>)     ; * NKH50
               END
            END
         END
         * End NKH48
         * Begin NKH51
         IF CLIENT.ID='06077' THEN
            IF UFLDS<1>='' THEN
               IF TRIM(M.BOL.REC<42>)#'' THEN      ; * Shipment Number
                  UFLDS<1>=TRIM(M.BOL.REC<42>)
               END
            END
            IF UFLDS<2>='' THEN
               IF TRIM(M.BOL.REC<25>)#'' THEN      ; * Order Number
                  UFLDS<2>=TRIM(M.BOL.REC<25>)
               END
            END
            IF UFLDS<3>='' THEN
               IF TRIM(M.BOL.REC<43>)#'' THEN      ; * PO Number
                  UFLDS<3>=TRIM(M.BOL.REC<43>)
               END
            END
         END
         * End NKH51
         * Being NKH65
         IF CLIENT.ID='05806' THEN
            IF UFLDS<4>='' THEN
               IF TRIM(M.BOL.REC<8>)#'' THEN       ; * BOL Number
                  UFLDS<4>=TRIM(M.BOL.REC<8>)
               END
            END
         END
         * End NKH65
         * Begin NKH67
         IF CLIENT.ID='01862' THEN
            IF UFLDS<1>='' THEN
               IF TRIM(M.BOL.REC<42>)#'' THEN      ; * Serial Number
                  UFLDS<1>=TRIM(M.BOL.REC<42>)
               END
            END
            IF UFLDS<2>='' THEN
               IF TRIM(M.BOL.REC<43>)#'' THEN      ; * Part number
                  UFLDS<2>=TRIM(M.BOL.REC<43>)
               END
            END
         END
         * End NKH67

         IF CLIENT.ID='02427' THEN       ; * JMK270
            IF UFLDS<1>='' THEN          ; * JMK270
               IF TRIM(OLD.PRO.REC<183>)#'' THEN   ; * JMK270
                  SO.NUM=TRIM(OLD.PRO.REC<183>)    ; * JMK270
                  UFLDS<1>=SO.NUM        ; * JMK270
               END                       ; * JMK270
            END                          ; * JMK270
            IF UFLDS<1>='' THEN          ; * JMK270
               IF SO.NUM#'' THEN         ; * JMK270
                  UFLDS<1>=SO.NUM        ; * JMK270
               END ELSE                  ; * JMK270
                  PBX.VIN=''             ; * JMK270
                  PRO.NO.ROOT = FIELD(PRO.ID,"*",2)          ; * JMK270
                  PBX.VIN<1>=PRO.NO.ROOT           ; * JMK270
                  PBX.VOUT=''            ; * JMK270
                  CALL GET.ROOT.NUMBER(PBX.VIN,PBX.VOUT)     ; * JMK270
                  ID.PBX=PBX.VOUT<1>     ; * JMK270
                  READ PBX.REC FROM F.PBX,ID.PBX THEN        ; * JMK270
                     LOCATE CLIENT.ID IN PBX.REC<3> SETTING PBX.POS THEN         ; * JMK270
                        BOL=PBX.REC<1,PBX.POS>     ; * JMK270
                        BOL.DIST=PBX.REC<2,PBX.POS>          ; * JMK270
                        PREV.BOL=BOL     ; * JMK270
                        PREV.BOL.DIST=BOL.DIST     ; * JMK270
                        VIN<13>=BOL.DIST           ; * JMK270
                        READ M.BOL.REC FROM F.BOL.CRX,BOL THEN         ; * JMK270
                           SO.NUM=M.BOL.REC<25>    ; * JMK270
                           UFLDS<1>=SO.NUM         ; * JMK270
                        END              ; * JMK270
                     END                 ; * JMK270
                  END                    ; * JMK270
               END                       ; * JMK270
            END                          ; * JMK270
            VIN<14>=SO.NUM               ; * JMK270
         END                             ; * JMK270
         IF CLIENT.ID#'05171' THEN
            IF SU.FLAG=1 AND DBCTRL<15>='AC' ELSE
               CALL FB.2.1.USER.FIELDS(UVIN,MAT CLIENT.REC,UFLDS)      ; * JMK49
            END
         END
         IF CLIENT.ID='02427' THEN       ; * JMK270
            SO.NUM=UFLDS<1>              ; * JMK270
         END                             ; * JMK270
         IF CLIENT.ID='04866' THEN       ; * DRF081
            IF CARRIER.ID='00014' OR CARRIER.ID='00171' OR CARRIER.ID='00212' THEN         ; * DRF081
               IF (UFLDS<1> >= 5410770000 AND UFLDS<1> <= 5413769999) THEN DIVISION='H4123'          ; * DRF081
               IF (UFLDS<1> >= 5407770000 AND UFLDS<1> <= 5410769999) THEN DIVISION='H2330'          ; * DRF081
               IF (UFLDS<1> >= 5402770000 AND UFLDS<1> <= 5407769999) THEN DIVISION='H2340'          ; * DRF081
               IF (UFLDS<1> >= 5400020000 AND UFLDS<1> <= 5401769999) THEN DIVISION='H2375'          ; * DRF081
               IF (UFLDS<1> >= 5002000000 AND UFLDS<1> <= 5002999999) THEN DIVISION='02355'          ; * DRF081
            END                          ; * DRF081
         END                             ; * DRF081
         GOSUB 8100                      ; * JMK49
         GOSUB 8200                      ; * JMK49
      END                                ; * JMK49

*****************************************************************
600:  * Enter division
*****************************************************************
      IF CLIENT.ID = "01794" AND DIVISION='' THEN
         T.EXP.CODE = M.BOL.REC<29>
         T.DIV = FIELD(T.EXP.CODE,"-",2)
         IF T.DIV NE "" THEN DIVISION = T.DIV "R%5"
      END
      IF CLIENT.ID = "01282" AND DIVISION='' THEN  ; * DRF054
         T.DIV = M.BOL.REC<29>           ; * DRF054
         IF T.DIV NE "" THEN DIVISION = T.DIV "R%5"          ; * DRF054
      END                                ; * DRF054
      IF CLIENT.ID='01419' AND IN.OUT='I' AND DIVISION='' THEN
         BEGIN CASE
            CASE OCONV(BOL[1,9],'MCU') MATCHES "'PL-'4X'LN'"           ; * DRF060
               DIVISION='00091'          ; * DRF060
            CASE OCONV(BOL[1,9],'MCU') MATCHES "'PL-'4X'BD'"           ; * DRF060
               DIVISION='00063'          ; * DRF060
            CASE OCONV(BOL[1,9],'MCU') MATCHES "'PL-'4X'HL'"           ; * DRF060
               DIVISION='00005'          ; * DRF060
            CASE OCONV(BOL[1,9],'MCU') MATCHES "'PL-'4X'PT'"           ; * DRF060
               DIVISION='00011'          ; * DRF060
            CASE OCONV(BOL[1,9],'MCU') MATCHES "'PL-'4X'CH'"           ; * DRF060
               DIVISION='00061'          ; * DRF060
            CASE DEST.ZIP='20743'
               IF OCONV(BOL[1,1],'MCU')='L' THEN
                  DIVISION='00092'
               END ELSE
                  DIVISION='00091'
               END
            CASE DEST.ZIP='43058'
               IF OCONV(BOL[1,1],'MCU')='L' THEN
                  DIVISION='00042'
               END ELSE
                  DIVISION='00041'
               END
            CASE DEST.ZIP='26003'
               IF OCONV(BOL[1,1],'MCU')='L' THEN
                  DIVISION='00052'
               END ELSE
                  DIVISION='00051'
               END
            CASE DEST.ZIP='23804'
               IF OCONV(BOL[1,1],'MCU')='L' THEN
                  DIVISION='00012'
               END ELSE
                  DIVISION='00011'
               END
            CASE 1
               DIVISION=''
         END CASE
      END

      IF DIVISION#'' AND USER.TYPE = 'A' THEN
         IF BACK.FLAG THEN
            GOTO 500
         END
         GOTO 700
      END
      UNITY.TEST=0
      AIRGAS.TEST=0
      IF CLIENT.ID='01037' AND IN.OUT#'I' THEN UNITY.TEST=1
      IF CLIENT.ID='01457' AND IN.OUT#'T' THEN AIRGAS.TEST=1
      IF CL.DIV.FLAG = 'Y' AND CLIENT.ID # 'NO-00872' AND CLIENT.ID # '00883' AND CLIENT.ID # '00664' AND NOT(AIRGAS.TEST) AND NOT(UNITY.TEST) THEN    ; * BOH01 ; * NPR029
         BACK.FLAG = 0

         * Checks the zips for a cross reference
         IF CLIENT.ID = '01675' AND M.BOL.REC<2> NE "" THEN  ; * DRF043
            W.DIV.EXP = M.BOL.REC<29>    ; * DRF043
            IF W.DIV.EXP # "" THEN       ; * DRF043
               W.DIV = M.BOL.REC<29>[8,4]          ; * DRF043
               DIVISION = W.DIV "R%5"    ; *  Client indicated BOL div overides Vend Cust ; * DRF043
            END                          ; * DRF043
         END                             ; * DRF043
         *DF         IF CLIENT.ID='10171' THEN       ; * DRF037    ; * DRF083
         *DF            DIVISION=''                  ; * DRF037    ; * DRF083
         *DF         END                             ; * DRF037    ; * DRF083
         IF CLIENT.ID = '10171' AND M.BOL.REC<2> NE "" AND DIVISION='' THEN      ; * NPR060 ; * DRF037    ; * DRF083
            *DF            W.DIV.EXP = M.BOL.REC<29>    ; * NPR060 ; * DRF037    ; * DRF083
            W.DIV = FIELD(M.BOL.REC<42>,'(',1,1)   ; * DRF083
            *DF            IF W.DIV.EXP = "" THEN       ; * NPR060 ; * DRF037    ; * DRF083
            IF W.DIV = "" THEN           ; * NPR060 ; * DRF037    ; * DRF083
               CALL ELINE("Division not found on BOL.")      ; * NPR060 ; * DRF037    ; * DRF083
            END ELSE                     ; * NPR060 ; * DRF037    ; * DRF083
               *DF               W.DIV = M.BOL.REC<29>[6,3]          ; * RLM003 ; * DRF037    ; * DRF083
               DIVISION = W.DIV "R%5"    ; * NPR060   Client indicated BOL div overides Vend Cust ; * DRF037    ; * DRF083
            END                          ; * NPR060 ; * DRF037    ; * DRF083
         END                             ; * NPR060 ; * DRF037    ; * DRF083
         IF ZIP.DIV.XREF AND DIVISION = '' THEN
            CHECK.ZIP=''                 ; * SWB08
            IF IN.OUT = 'O' THEN CHECK.ZIP = ORIG.ZIP
            IF IN.OUT = 'I' THEN CHECK.ZIP = DEST.ZIP
            IF IN.OUT = 'T' THEN CHECK.ZIP = ORIG.ZIP
            IF IN.OUT='I' AND CLIENT.ID='01481' THEN CHECK.ZIP=''
            IF CHECK.ZIP#'' THEN
               READV DIVISION FROM F.ZIP.DIV.XREF,CHECK.ZIP,1 ELSE DIVISION=''
               DIV.COUNT = DCOUNT(DIVISION<1>,@VM)
               IF DIV.COUNT GT 1 THEN
                  CALL FB.2.1.GET.DIV(CHECK.ZIP,CLIENT.ID,DIVISION,"E",QI)
                  QI = OCONV(QI,'MCU')
                  GOSUB 8100
                  GOSUB 8200
                  IF QI = 'X' THEN
                     BACK.FLAG = 1
                     GOTO 500
                  END
                  GOTO CHECK.THIS.DIV
               END
            END
         END
         IF CLIENT.ID='00396' AND DIVISION='' THEN
            SND.DATA='00010' ; GOSUB SEND.DATA
         END

         IF CLIENT.ID='01076' AND CARRIER.ID='00041' THEN
            BEGIN CASE
               CASE PRO[1,7]='758-270'
                  SND.DATA='00001'
                  GOSUB SEND.DATA
               CASE PRO[1,7]='756-898'
                  SND.DATA='00002'
                  GOSUB SEND.DATA
               CASE PRO[1,7]='921-430'
                  SND.DATA='00003'
                  GOSUB SEND.DATA
               CASE PRO[1,7]='337-778'
                  SND.DATA='00004'
                  GOSUB SEND.DATA
               CASE PRO[1,7]='711-326'
                  SND.DATA='00005'
                  GOSUB SEND.DATA
               CASE PRO[1,7]='728-832'
                  SND.DATA='00006'
                  GOSUB SEND.DATA
               CASE PRO[1,7]='3X7-580'
                  SND.DATA='00007'
                  GOSUB SEND.DATA
               CASE PRO[1,7]='386-186'
                  SND.DATA='00008'
                  GOSUB SEND.DATA
               CASE PRO[1,7]='V6V-336'
                  SND.DATA='00009'
                  GOSUB SEND.DATA
               CASE PRO[1,7]='788-W13'
                  SND.DATA='00010'
                  GOSUB SEND.DATA
               CASE PRO[1,7]='2RV-278'
                  SND.DATA='00012'
                  GOSUB SEND.DATA
            END CASE
         END
         IF CLIENT.ID='01023' AND CARRIER.ID='00041' THEN
            BEGIN CASE
               CASE PRO[1,7]='0EY-543'
                  SND.DATA='00015'
                  GOSUB SEND.DATA
            END CASE
         END
         IF CLIENT.ID='01221' AND CARRIER.ID='07580 ' AND DIVISION='' THEN
            SND.DATA='00455' ; GOSUB SEND.DATA
         END
         IF CLIENT.ID='01221' AND CARRIER.ID='15942 ' AND DIVISION='' THEN
            SND.DATA='00455' ; GOSUB SEND.DATA
         END
         IF CLIENT.ID='01481' AND IN.OUT='I' THEN
            SND.DATA='00004' ; GOSUB SEND.DATA
         END
         *DF         IF CLIENT.ID='30041' THEN
         *DF            SND.DATA='00001' ; GOSUB SEND.DATA
         *DF         END

*****************************************************************
610:
*****************************************************************
         IF CLIENT.ID='01127' THEN
            DIVISION=BOL[LEN(BOL)-1,2]
            IF NUM(DIVISION) THEN DIVISION='CO'
         END
         IF CLIENT.ID='01019' THEN
            IF IN.OUT='O' THEN
               TEMP.DIVISION=FIELD(BOL,'-',2)
               IF TEMP.DIVISION#'' THEN
                  DIVISION=TEMP.DIVISION'R%5'
               END
            END
         END
         IF CLIENT.ID='01633' THEN
            IF IN.OUT='I' THEN
               DIVISION='00001'
            END ELSE
               DIVISION='00000'
            END
         END
         IF CLIENT.ID='01596' THEN
            BEGIN CASE
               CASE BOL=''
                  DIVISION=''
               CASE OCONV(BOL,'MCU')[1,3]='JDD'
                  DIVISION='00001'
               CASE NUM(BOL[1,1])
                  DIVISION='00002'
               CASE 1
                  DIVISION=''
            END CASE
         END

         IF CLIENT.ID = '01863' AND M.BOL.REC<2> NE "" THEN  ; * NPR060
            W.DIV.EXP = M.BOL.REC<29>    ; * NPR060
            IF W.DIV.EXP = "" AND M.BOL.REC<1> NE "" THEN    ; * NPR060
               CALL ELINE("Division not found on BOL, using cust/vend division")           ; * NPR060
            END ELSE                     ; * NPR060

               W.DIV = ID.BOL.CRX[6,3]   ; * RLM003
               DIVISION = W.DIV "R%5"    ; * NPR060   Client indicated BOL div overides Vend Cust
            END                          ; * NPR060
         END                             ; * NPR060
         IF CLIENT.ID='01721' AND IN.OUT='I' THEN
            BEGIN CASE
               CASE BOL[1,3]='613'
                  DIVISION='KC613'
               CASE BOL[1,3]='615'
                  DIVISION='CH615'
               CASE BOL[1,3]='616'
                  DIVISION='DA616'
               CASE BOL[1,3]='617'
                  DIVISION='HO617'
               CASE BOL[1,3]='618'
                  DIVISION='AL618'
               CASE BOL[1,3]='619'
                  DIVISION='DE619'
               CASE 1
                  DIVISION=''
            END CASE
         END
         IF CLIENT.ID='01567' AND IN.OUT='I' AND DIVISION='' THEN
            BEGIN CASE
               CASE BOL[1,2]='40'
                  DIVISION='00040'
               CASE BOL[1,2]='08'
                  DIVISION='00008'
               CASE BOL[1,2]='04'
                  DIVISION='00004'
               CASE BOL[1,2]='05'
                  DIVISION='00005'
               CASE BOL[1,2]='06'
                  DIVISION='00006'
               CASE BOL[1,2]='07'
                  DIVISION='00007'
               CASE BOL[1,2]='09'
                  DIVISION='00009'
               CASE BOL[1,2]='10'
                  DIVISION='00010'
               CASE BOL[1,2]='11'
                  DIVISION='00011'
               CASE BOL[1,2]='12'
                  DIVISION='00012'
               CASE 1
                  DIVISION=''
            END CASE
         END

         IF CLIENT.ID='00761' THEN       ; * JMK99 ; * JMK132
            IF DIVISION='' OR DIVISION='99999' THEN          ; * JMK143
               TRACK.NO=' '              ; * JMK143
               REF=' '                   ; * JMK143
               IF CARRIER.ID='00015' OR CARRIER.ID='01075' THEN        ; * JMK143
                  READ EDI.HIST.REC FROM F.EDI.BILLS.HIST,PRO.ID THEN  ; * JMK143
                     REF=EDI.HIST.REC<9>           ; * JMK143
                     TRACK.NO=EDI.HIST.REC<135>    ; * JMK143
                  END                    ; * JMK143
               END                       ; * JMK143
               VIN=''                    ; * JMK143
               VIN<1>=DIVISION           ; * JMK143
               VIN<2>=PRO                ; * JMK143
               VIN<3>=TRACK.NO           ; * JMK143
               IF REF#' ' THEN           ; * JMK143
                  VIN<-1>=TRIM(REF)      ; * JMK143
               END                       ; * JMK143
               VIN<-1>=BOL               ; * JMK143
               IF NUM(BOL) AND LEN(BOL) < 9 AND IN.OUT='O' THEN        ; * JMK143
                  BOL=BOL'R%9'           ; * JMK143
                  VIN<-1>=BOL            ; * JMK143
               END                       ; * JMK143
               IF INDEX(BOL,'/',1) THEN  ; * JMK143
                  NPART=DCOUNT(BOL,'/')  ; * JMK143
                  FOR PART=1 TO NPART    ; * JMK143
                     BOL.PART=FIELD(BOL,'/',PART)  ; * JMK143
                     VIN<-1>=BOL.PART    ; * JMK143
                  NEXT PART              ; * JMK143
               END                       ; * JMK143
               IF INDEX(BOL,' ',1) THEN  ; * JMK143
                  NPART=DCOUNT(BOL,' ')  ; * JMK143
                  FOR PART=1 TO NPART    ; * JMK143
                     BOL.PART=FIELD(BOL,' ',PART)  ; * JMK143
                     VIN<-1>=BOL.PART    ; * JMK143
                  NEXT PART              ; * JMK143
               END                       ; * JMK143
               VOUT=''                   ; * JMK143
               CALL GET.00761.DIV(VIN,VOUT,F.BOL.CRX)        ; * JMK143
               SND.DATA=VOUT<1>          ; * JMK143
               GOSUB SEND.DATA           ; * JMK143
            END                          ; * JMK99
         END                             ; * JMK99
         IF CLIENT.ID='01712' THEN
            IF IN.OUT='I' OR IN.OUT='T' THEN
               N.BOLS = DCOUNT(BOL<1>,@VM)
               FOR I.BOL = 1 TO N.BOLS
                  READ DBOL.REC FROM F.BOL.CRX,BOL<1,I.BOL> ELSE DBOL.REC=''
                  IF DBOL.REC<4>#'' THEN
                     DIVISION=DBOL.REC<4>'R%5'
                  END
               NEXT I.BOL
            END
         END
         IF CLIENT.ID='02957' THEN       ; * JMK279
            IF DIVISION='00002' THEN     ; * JMK279
               BEGIN CASE                ; * JMK279
                  CASE CARRIER.MODE=2    ; * JMK279
                  CASE CARRIER.MODE=15   ; * JMK279
                  CASE 1                 ; * JMK279
                     CALL ELINE('Invalid division for Parcel.')        ; * JMK279
                     DIVISION=''         ; * JMK279
                     GO 600              ; * JMK279
               END CASE                  ; * JMK279
            END                          ; * JMK279
         END                             ; * JMK279
         IF CL.DIV.FLAG ='Y' THEN
            NOT.ASK = 0
            IF USER.MODIFY = 0 AND BACK.FLAG THEN GOTO 1400
            VIN = CLIENT.ID
            IF CL.EXP.FLAG = 'Y' AND EXP.CODE #'' THEN
               VIN<2> = EXP.CODE
            END
            VIN<4> = CARRIER.ID
            VIN<5> = CARRIER.NAME
            VIN<6> = CARRIER.MODE        ; * Transportation Mode
            VIN<7> = IN.OUT
            VIN<8> = VC.CODE
            VIN<9> = VC.DESC
            VIN<10> = ORIG.ZIP
            VIN<11> = ORIG.STATE
            VIN<12> = DEST.ZIP
            VIN<13> = DEST.STATE
            VIN<14> = 'DEFAULT'
            VIN<15> = DIVISION
            VIN<16> = BACK.FLAG
            VIN<17> = ''                 ; * USED FOR EDI
            VIN<18> = BOL                ; * Only user for Daws (01084) right now Alcon division 5 and (10225) R & M and (01163) MD Building and (01196) JM CLipper for division 1 and (01202) Lowen and (01225) May & Company and (01240) Isco Inc and (01000) Qualico and (00984) Orschelin and (01361) Fairbanks Morse and (01320) Precision Kidd and (01305) Future Metals (01285) Solideal Tire (01472) Rexel-Rocky Mountain Division (01491) Form + Surface (01488) Green Light or (01525) REMCO (01554) Power and Pumps
            VIN<19> = BILL.DATE
            IF CAPTURE.INVOICE THEN      ; * JMK106
               VIN<20>=INV.NUM
            END
            VIN<22>=VC.ID
            VIN<23>=PRO
            FOR UATT=1 TO 6              ; * JMK49
               VIN<23+UATT>=UFLDS<UATT>  ; * JMK49
            NEXT UATT                    ; * JMK49
            VIN<30>=VC.TYPE
            BACK.FLAG = 0
            NOT.ASK = 0
            CALL GET.DIVISION(VIN,VOUT)
            DIVISION = VOUT<1>
            IF DIVISION = 'EX' OR DIVISION = 'ex' THEN GOTO PROGRAM.EXIT         ; * NKH10
            USER.MODIFY = VOUT<2>
            IF USER.MODIFY = 0 THEN
               VER.CODE='E' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
            END
            NOT.ASK = VOUT<3>
            ERROR.MESSAGE = VOUT<5>
            IF ERROR.MESSAGE #'' THEN
               CALL ELINE(ERROR.MESSAGE)
            END
            MASK = VOUT<6>
            CRT @(5,9):DIVISION
         END
         IF CLIENT.ID='01338' THEN       ; * JMK49
            IF UFLDS<1>#'' THEN          ; * JMK49
               DIV.PFX=OCONV(UFLDS<1>[1,1],'MCU')  ; * JMK49
               BEGIN CASE                ; * JMK49
                  CASE DIV.PFX='P'       ; * JMK49
                     DIVISION=1'R%5'     ; * JMK49
                  CASE DIV.PFX='W'       ; * JMK49
                     DIVISION=2'R%5'     ; * JMK49
                  CASE DIV.PFX='R'       ; * JMK49
                     DIVISION=3'R%5'     ; * JMK49
                  CASE DIV.PFX='N'       ; * JMK49
                     DIVISION=4'R%5'     ; * JMK49
                  CASE DIV.PFX='C' OR DIV.PFX='D' OR DIV.PFX='T'       ; * JMK49
                     DIVISION=7'R%5'     ; * JMK49
                  CASE DIV.PFX='J'       ; * JMK49
                     DIVISION=11'R%5'    ; * JMK49
                  CASE DIV.PFX='E'       ; * JMK49
                     DIVISION=12'R%5'    ; * JMK49
                  CASE DIV.PFX='I'       ; * JMK49
                     DIVISION=14'R%5'    ; * JMK49
                  CASE DIV.PFX='B'       ; * JMK49
                     DIVISION=15'R%5'    ; * JMK49
                  CASE DIV.PFX='F'       ; * JMK49
                     DIVISION=16'R%5'    ; * JMK49
                  CASE DIV.PFX='V'       ; * JMK49
                     DIVISION=18'R%5'    ; * JMK49
                  CASE DIV.PFX='L'       ; * JMK49
                     DIVISION=20'R%5'    ; * JMK49
                  CASE DIV.PFX='A'       ; * JMK49
                     DIVISION=23'R%5'    ; * JMK49
                  CASE DIV.PFX='M'       ; * JMK49
                     DIVISION='26M''R%5'           ; * JMK49
                  CASE DIV.PFX='K'       ; * JMK49
                     DIVISION=28'R%5'    ; * JMK49
                  CASE DIV.PFX='G'       ; * JMK49
                     DIVISION=30'R%5'    ; * JMK49
                  CASE DIV.PFX='H'       ; * JMK49
                     DIVISION=31'R%5'    ; * JMK49
                  CASE DIV.PFX='Z'       ; * JMK49
                     DIVISION=32'R%5'    ; * JMK49
                  CASE DIV.PFX='Y'       ; * JMK49
                     DIVISION=33'R%5'    ; * JMK49
                  CASE DIV.PFX='Q'       ; * JMK49
                     DIVISION=34'R%5'    ; * JMK49
                  CASE DIV.PFX='O'       ; * JMK49
                     DIVISION=35'R%5'    ; * JMK49
                  CASE DIV.PFX='U'       ; * JMK49
                     DIVISION=37'R%5'    ; * JMK49
                  CASE DIV.PFX='X'       ; * JMK49
                     DIVISION=38'R%5'    ; * JMK49
               END CASE                  ; * JMK49
            END                          ; * JMK49
         END                             ; * JMK49
         IF CLIENT.ID = '01863' AND M.BOL.REC<2> NE "" THEN  ; * NPR060
            W.DIV.EXP = M.BOL.REC<29>    ; * NPR060
            IF W.DIV.EXP = "" AND M.BOL.REC<1> NE "" THEN    ; * NPR060
               CALL ELINE("Division not found on BOL, using cust/vend division")           ; * NPR060
            END ELSE                     ; * NPR060
               W.DIV = FIELD(W.DIV.EXP,"*",2)      ; * NPR060  ; * RLM003 DRF059

               DIVISION = W.DIV "R%5"    ; * NPR060   Client indicated BOL div overides Vend Cust
            END                          ; * NPR060
         END                             ; * NPR060

         IF CLIENT.ID = '10171' AND M.BOL.REC<2> NE "" AND DIVISION='' THEN      ; * NPR060 ; * DRF037
            *DF            W.DIV.EXP = M.BOL.REC<29>    ; * NPR060 ; * DRF037    ; * DRF083
            W.DIV = FIELD(M.BOL.REC<42>,'(',1,1)   ; * DRF083
            *DF            IF W.DIV.EXP = "" THEN       ; * NPR060 ; * DRF037    ; * DRF083
            IF W.DIV = "" THEN           ; * NPR060 ; * DRF037    ; * DRF083
               CALL ELINE("Division not found on BOL.")      ; * NPR060 ; * DRF037    ; * DRF083
            END ELSE                     ; * NPR060 ; * DRF037    ; * DRF083
               *DF               W.DIV = FIELD(W.DIV.EXP,"*",2)      ; * NPR060  ; * RLM003 : * DRF059    ; * DRF083
               *DF    ; * DRF083
               DIVISION = W.DIV "R%5"    ; * NPR060   Client indicated BOL div overides Vend Cust ; * DRF037    ; * DRF083
            END                          ; * NPR060 ; * DRF037    ; * DRF083
         END                             ; * NPR060 ; * DRF037    ; * DRF083
         IF CLIENT.ID = '01675' AND M.BOL.REC<2> NE "" THEN  ; * DRF043
            W.DIV.EXP = M.BOL.REC<29>    ; * DRF043
            IF W.DIV.EXP # "" THEN       ; * DRF043
               W.DIV = M.BOL.REC<29>[8,4]          ; * DRF043
               DIVISION = W.DIV "R%5"    ; *  Client indicated BOL div overides Vend Cust ; * DRF043
            END                          ; * DRF043
         END                             ; * DRF043
         IF CLIENT.ID='01597' THEN
            IF UFLDS<1>#'' THEN
               DIVISION=UFLDS<1>[3,4]'R%5'
            END
         END
         IF CLIENT.ID='05639' THEN
            *DFIF USER='DAVID' THEN CALL ELINE('DIVISION FOR 05639')
            *DF            IF DIVISION='' THEN
            IF M.BOL.REC<42>#'' THEN
               DIVISION=M.BOL.REC<42>'R%5'
            END
            *DF            END
         END
         MASK = DIVISION:STR('#',5-LEN(DIVISION))
         HELP = 'Enter Division. '
         IF REJECTABLE THEN HELP:="[R]ejct Pay "
         HELP := ' [X]=Back [EX]=Exit'
         IF CLIENT.ID='00866' THEN PREV.DIVISION=DIVISION
         IF CLIENT.ID='01638' OR CLIENT.ID = "01267" OR CLIENT.ID= '01675' OR CLIENT.ID = '05638' OR CLIENT.ID='01749' OR CLIENT.ID='05500' OR CLIENT.ID='05026' OR CLIENT.ID='01457' OR CLIENT.ID='05049' OR CLIENT.ID = '05548' OR CLIENT.ID='01389' OR CLIENT.ID='01644' THEN         ; * *NPR062;GRB11 ;* DRF097 GRB18
            CALL GEN.IN(5,9,MASK,'',Q,0,6,'','',2,-6,9,0,QI,HELP,0,23)
         END ELSE
            CALL GEN.IN(5,9,MASK,'',Q,0,5,'','',2,-5,9,0,QI,HELP,0,23)
         END
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC
         QI = OCONV(QI,'MCU')
         Q = OCONV(Q,'MCU')
         BEGIN CASE
            CASE QI = 'X'
               CRT @(5,9):'                    '
               BACK.FLAG = 1
               GOTO 500
            CASE QI = 'EX'
               GOTO PROGRAM.EXIT         ; * NKH10
            CASE QI = 'R' AND REJECTABLE
               IF NOT(REJECTION.ALTERED) THEN GOSUB INIT.REJECT.INFO
               RVIN='' ; RVOUT=''
               RVIN<1> = 'E'
               RVIN<2> = CARRIER.ID
               RVIN<3> = CLIENT.ID
               RVIN<4> = FIELD(PRO.ID,'*',2)
               RVIN<5> = 'R'
               RVIN<6> = BILL.DATE
               RVIN<7> = ACTUAL.CHG      ; * CARRIER.CHG
               RVIN<8> = REJ.TYPE
               CALL FB.2.1.REJECT.KED(RVIN, RVOUT, REJECT.REASONS, MAILING.ADDR)
               REJECT.FLAG = RVOUT<2>
               MULTI.PRO.ID = RVOUT<4>
               NUM.MULTI.PROS = DCOUNT(MULTI.PRO.ID<1>,@VM)
               MULTI.PRO.DATE = RVOUT<6>
               MULTI.PRO.CHG = RVOUT<7>
               MULTI.PRO.REJ = RVOUT<8>
               IF RVOUT<9>='Y' THEN
                  PROC.DATE=''
               END
               BILL.DATE = MULTI.PRO.DATE<1,1>
               ACTUAL.CHG = MULTI.PRO.CHG<1,1>
               IF CARRIER.CHG+0 = 0 THEN CARRIER.CHG=MULTI.PRO.CHG<1,1>
               REJ.TYPE = MULTI.PRO.REJ<1,1>
               GOSUB 8100                ; * Redraw Screen Fields
               GOSUB 8200                ; * Redraw Screen Data
               BEGIN CASE
                  CASE RVOUT<1>='EX'
                     GOTO PROGRAM.EXIT   ; * NKH10
                  CASE RVOUT<1>='X' OR REJECT.FLAG = ''
                     GOTO 400
               END CASE
               REJECTION.ALTERED = RVOUT<3>
               GOTO 4900

            CASE QI = ''
               Q = DIVISION
         END CASE
         IF DIVISION='-' AND Q#DIVISION THEN
            LOCATE 'DIV' IN MISSING.DATA<1> SETTING MISSING.POS THEN
               DEL MISSING.DATA<1,MISSING.POS>
            END
         END
         IF Q='-' THEN
            DIVISION=Q
         END ELSE
            IF CLIENT.ID='01014' THEN
               BEGIN CASE
                  CASE Q='1'
                     Q='TU'
                  CASE Q='2'
                     Q='DE'
                  CASE Q='3'
                     Q='DA'
                  CASE Q='4'
                     Q='LR'
                  CASE Q='5'
                     Q='OC'
               END CASE
            END
            IF CLIENT.ID='01261' THEN
               BEGIN CASE
                  CASE Q='1'
                     Q='D'
                  CASE Q='2'
                     Q='F'
                  CASE Q='3'
                     Q='S'
               END CASE
            END
            IF CLIENT.ID='01508' THEN
               BEGIN CASE
                  CASE Q='1'
                     Q='KCS'
                  CASE Q='2'
                     Q='OKO'
                  CASE Q='3'
                     Q='OKT'
                  CASE Q='4'
                     Q='SPM'
                  CASE Q='5'
                     Q='STI'
                  CASE Q='6'
                     Q='WIC'
               END CASE
            END
            IF CLIENT.ID='01084' THEN
               IF Q#'' THEN
                  DIVISION = Q'R%5'
               END ELSE
                  DIVISION =''
               END
            END ELSE
               IF CLIENT.ID='01638' OR CLIENT.ID = "01267" OR CLIENT.ID= '01675' OR CLIENT.ID = '05638' OR CLIENT.ID='01749' OR CLIENT.ID='05500' OR CLIENT.ID='05026' OR CLIENT.ID='01457' OR CLIENT.ID='05049' OR CLIENT.ID = '05548' OR CLIENT.ID='01389' OR CLIENT.ID='01644' THEN   ; *NPR062;GRB11 ;* DRF097 GRB18
                  TCK.ZIP = Q
                  READV TTDIV FROM F.ZIP.DIV.XREF,TCK.ZIP,1 THEN
                     DIVISION = Q'R%5'
                  END ELSE
                     DIVISION = Q'R%6'   ; *NPR062
                  END                    ; *NPR062
               END ELSE
                  DIVISION = Q'R%5'
               END
            END
            IF CLIENT.ID = '01209' THEN
            END
         END

*****************************************************************
CHECK.THIS.DIV:
*****************************************************************
         IF CLIENT.ID='00908' THEN
            MATREAD DIV.REC FROM F.DIV,DIVISION THEN
               IF DIV.REC(8)#'' THEN
                  DIVISION=DIV.REC(8)'R%5'
                  GOTO CHECK.THIS.DIV
               END
            END
         END
         IF CLIENT.ID='00866' THEN
            IF DIVISION # PREV.DIVISION THEN
               EXP.CODE=''               ; * Reset Expense Code on Division Change
            END
         END
         IF CLIENT.ID='01567' THEN
            IF DIVISION='00097' AND IN.OUT#'I' THEN
               CALL ELINE('Cannot have division of 00097 for mode of ':IN.OUT)
               GOTO 600
            END
         END
         IF CLIENT.ID='02957' THEN       ; * JMK279
            IF DIVISION='00002' THEN     ; * JMK279
               BEGIN CASE                ; * JMK279
                  CASE CARRIER.MODE=2    ; * JMK279
                  CASE CARRIER.MODE=15   ; * JMK279
                  CASE 1                 ; * JMK279
                     CALL ELINE('Invalid division for Parcel.')        ; * JMK279
                     DIVISION=''         ; * JMK279
                     GO 600              ; * JMK279
               END CASE                  ; * JMK279
            END                          ; * JMK279
         END                             ; * JMK279
         CRT @(5,9):DIVISION:'               '
         IF DIVISION='-' THEN
            LOCATE 'DIV' IN MISSING.DATA<1> SETTING MISSING.POS ELSE
               MISSING.DATA<1,-1>='DIV'
            END
            GOTO 700
         END
         **************************************************************
         MATREAD DIV.REC FROM F.DIV, DIVISION ELSE
            IF ZIP.DIV.XREF THEN
               CHECK.ZIP = DIVISION
               READV DIVISION FROM F.ZIP.DIV.XREF,DIVISION,1 THEN
                  DIV.COUNT = DCOUNT(DIVISION<1>,@VM)
                  IF DIV.COUNT GT 1 THEN
                     CALL FB.2.1.GET.DIV(CHECK.ZIP,CLIENT.ID,DIVISION,"E",QI)
                     GOSUB 8100
                     GOSUB 8200
                     IF QI = 'X' THEN
                        BACK.FLAG = 1
                        GOTO 500
                     END
                     GOTO CHECK.THIS.DIV
                  END ELSE
                     GOTO CHECK.THIS.DIV
                  END
               END
            END
            CALL ELINE("ERROR - Division ":DIVISION:" not on file.")
            CC+=1 ; GOSUB PRINT.CC
            GOTO 610
         END
         IF DIV.REC(7)='I' THEN
            IF (USER='NTAYLOR' OR USER='MROSE' OR USER='DAVID') AND CLIENT.ID='01977' AND DIVISION='80100' ELSE
               CALL ELINE("ERROR - Division ":DIVISION:" is Inactive - Cannot use.")
               CC+=1 ; GOSUB PRINT.CC
               GOTO 610
            END
         END
         IF CLIENT.ID='01282' THEN       ; * DRF054
            IF M.BOL.REC<29>#'' THEN     ; * DRF054
               IF M.BOL.REC<29>'R%5' # DIVISION'R%5' THEN    ; * DRF054
                  MATREAD DIV.REC FROM F.DIV, M.BOL.REC<29>'R%5' THEN  ; * DRF054
                     IF DIV.REC(7)='I' ELSE        ; * DRF054
                        CALL ELINE('BOL indicates a branch of : ':M.BOL.REC<29>'R%5':' Please use that branch')          ; * DRF054
                        DIVISION=M.BOL.REC<29>'R%5'          ; * DRF054
                        CC+=1 ; GOSUB PRINT.CC     ; * DRF054
                        GOTO 610         ; * DRF054
                     END                 ; * DRF054
                  END                    ; * DRF054
               END                       ; * DRF054
            END                          ; * DRF054
         END                             ; * DRF054
         IF CLIENT.ID='01292' THEN GOTO 1297
         IF CLIENT.ID='01567' THEN GOTO 1297
         IF CLIENT.ID='01338' THEN DIV.ZIP=''
         IF CLIENT.ID='30041' THEN DIV.ZIP=''
         IF (AUDIT='Y' OR AUDIT='U' OR AUDIT='S') AND (AUDIT.TYPE[1,3]='LTL' OR (AUDIT.TYPE[1,2]='TL' AND USER #'')) ELSE
            ZIP.VAR = DIV.ZIP
            CALL FB.READ.ZIP(ZIP.VAR,CITY,STATE)
            IF CL.DIV.ZIP.OVER # 'Y' AND IN.OUT#"T" THEN
               IF CITY = '' ! STATE = '' THEN
                  CALL ELINE('Zip ':DIV.ZIP:' is bad in Division Code ':DIVISION:'.')
                  CC+=1 ; GOSUB PRINT.CC
                  GOTO 600
               END
               IF IN.OUT = 'O' THEN CITY.LINE=10 ELSE CITY.LINE=11
               IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN      ; * UPS
                  CRT @(5,CITY.LINE):'99999 UPS, ZZ':@(-4):
               END ELSE
                  IF CARRIER.ID='01075' THEN
                     CRT @(5,CITY.LINE):'99999 FedEx Ground, ZZ':@(-4):
                  END ELSE
                     IF LEN(DIV.ZIP)=6 THEN        ; * JMK113
                        CRT @(5,CITY.LINE):DIV.ZIP'L#6':' ':CITY:', ':STATE:@(-4):         ; * JMK113
                     END ELSE            ; * JMK113
                        CRT @(5,CITY.LINE):DIV.ZIP'R%5':' ':CITY:', ':STATE:@(-4):
                     END                 ; * JMK113
                  END
               END
            END
            BEGIN CASE
               CASE IN.OUT='O'
                  ORIG.ZIP = DIV.ZIP
                  ORIG.CITY = CITY
                  ORIG.STATE = STATE
                  IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN   ; * Default for UPS
                     ORIG.ZIP='99999'
                     ORIG.CITY='UPS'
                     ORIG.STATE='ZZ'
                  END
                  IF CARRIER.ID='01075' THEN       ; * Default for FedEx Ground
                     ORIG.ZIP='99999'
                     ORIG.CITY='FedEx Ground'
                     ORIG.STATE='ZZ'
                  END
                  IF CLIENT.ID = '01334' AND CARRIER.ID = '14657' THEN
                     ORIG.ZIP = '60633'
                     ORIG.CITY='Chicago'
                     ORIG.STATE='IL'
                     IF ORIG.CITY # '' THEN
                        DESC = ORIG.CITY:', ':ORIG.STATE
                     END ELSE
                        DESC = ORIG.STATE
                     END
                     CRT @(5,10):ORIG.ZIP ZIP.MASK:' ':DESC:@(-4)
                  END
                  IF CL.DIV.ZIP.OVER # "Y" THEN GOTO 800     ; * Skip to Dest
               CASE IN.OUT='I'
                  DEST.ZIP = DIV.ZIP
                  DEST.CITY = CITY
                  DEST.STATE = STATE
                  IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN   ; * Default for UPS
                     DEST.ZIP='99999'
                     DEST.CITY='UPS'
                     DEST.STATE='ZZ'
                  END
                  IF CARRIER.ID='01075' THEN       ; * Default for FedEx Ground
                     DEST.ZIP='99999'
                     DEST.CITY='FedEx Ground'
                     DEST.STATE='ZZ'
                  END
               CASE IN.OUT='T'
                  NULL
            END CASE
         END
      END ELSE
         IF BACK.FLAG THEN GOTO 500
      END
      IF CLIENT.ID = '01042' AND CARRIER.ID = '12181' AND ORIG.ZIP='' THEN
         ORIG.ZIP = '07305'
         ORIG.CITY = 'Jersey City'
         ORIG.STATE = 'NJ'
         DEST.ZIP = '07305'
         DEST.CITY = 'Jersey City'
         DEST.STATE = 'NJ'
      END
      IF CLIENT.ID = '01042' AND CARRIER.ID = '12147' AND ORIG.ZIP='' THEN
         ORIG.ZIP = '90280'
         ORIG.CITY='South Gate'
         ORIG.STATE='CA'
         DEST.ZIP = '90280'
         DEST.CITY='South Gate'
         DEST.STATE='CA'
      END
      IF CLIENT.ID='01567' THEN GOTO 1297

*****************************************************************
700:  * Enter origin zip
*****************************************************************
      IF CLIENT.ID#'00574' THEN
         IF (AUDIT='Y' OR AUDIT='U' OR AUDIT='S') AND (AUDIT.TYPE[1,3]='LTL' OR (AUDIT.TYPE[1,2]='TL' AND USER # '')) THEN
            IF BACK.FLAG THEN GOTO 600
            GOTO 800
         END
      END ELSE
         IF USER.TYPE='A' THEN
            IF BACK.FLAG THEN GOTO 600
            GOTO 800
         END
      END
      IF DO.BOL.POP THEN
         ORIG.ZIP.POP.FLAG = BOL.POP.VER.ARR<1,7>
         IF ORIG.ZIP.POP.FLAG = 'Y' AND NOT(BACK.FLAG) THEN

            ORIG.ZIP = FIELD(BOL.POP.VER.ARR<4,7>,"-",1)
            IF NUM(ORIG.ZIP) AND LEN(ORIG.ZIP) LT 5 THEN ORIG.ZIP = ORIG.ZIP "R%5"
            DATA ORIG.ZIP
         END
      END
      BEGIN CASE
         CASE CL.ZIP.RTE = 'Y'
            IF ZIP.ARR = '' THEN
               IF ORIG.ZIP # '' THEN
                  ZIP.ARR<1,1> = ORIG.ZIP
                  ZIP.ARR<2,1> = ORIG.CITY
                  ZIP.ARR<3,1> = ORIG.STATE
               END
               IF DEST.ZIP # '' AND CLIENT.ID#'00574' THEN
                  ZIP.ARR<1,50> = DEST.ZIP
                  ZIP.ARR<2,50> = DEST.CITY
                  ZIP.ARR<3,50> = DEST.STATE
               END
            END
            IF CLIENT.ID = "00574" AND IN.OUT='O' THEN
               CALL FB.2.1.ZIP.00574(ZIP.ARR,F.CLIENTS.CUST,F.EXP,QI)
               NUM.OF.ITEM=DCOUNT(ZIP.ARR<6>,@VM)
               EXP.CODE=ZIP.ARR<6,NUM.OF.ITEM>
            END ELSE
               ZIP.ARR<4>=''
               ZIP.ARR<5>=''
               ZIP.ARR<6>=''
               CALL FB.2.1.ZIP( ZIP.ARR,QI)
            END
            ORIG.ZIP = ZIP.ARR<1,1>
            ORIG.CITY = ZIP.ARR<2,1>
            ORIG.STATE = ZIP.ARR<3,1>
            NUM.ZIPS = DCOUNT( ZIP.ARR<1>, @VM )
            DEST.ZIP = ZIP.ARR<1,NUM.ZIPS>
            DEST.CITY = ZIP.ARR<2,NUM.ZIPS>
            DEST.STATE = ZIP.ARR<3,NUM.ZIPS>
            IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN         ; * Default for UPS
               ORIG.ZIP='99999'
               ORIG.CITY='UPS'
               ORIG.STATE='ZZ'
               DEST.ZIP='99999'
               DEST.CITY='UPS'
               DEST.STATE='ZZ'
            END
            IF CARRIER.ID='01075' THEN   ; * Default for FedEx Ground
               ORIG.ZIP='99999'
               ORIG.CITY='FedEx Ground'
               ORIG.STATE='ZZ'
               DEST.ZIP='99999'
               DEST.CITY='FedEx Ground'
               DEST.STATE='ZZ'
            END
            IF QI = 'X' THEN
               BACK.FLAG = 1
               GOTO 600
            END
            GOTO 900
         CASE CL.ORIG.FLAG = 'Y'
            IF CL.ZIP.DEF<1,1> # '' THEN
               IF IN.OUT = 'O' & NOT(BACK.FLAG) THEN SND.DATA=CL.ZIP.DEF<1,1> ; GOSUB SEND.DATA
            END
            HELP = "Enter the Origination Zip Code. [S]=Search [X]=Back [EX]=Exit"
            VIN=0                        ; * Starting Zip Character Count
            VIN<3>=LAST.ORIG.ZIP
            VIN<4>=LAST.ORIG.CITY
            VIN<5>=LAST.ORIG.STATE
            VOUT=''
            IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN         ; * Default for UPS
               ORIG.ZIP='99999'
               ORIG.CITY='UPS'
               ORIG.STATE='ZZ'
            END
            IF CARRIER.ID='01075' AND (ORIG.ZIP='99999' OR ORIG.ZIP='') THEN     ; * Default for FedEx Ground
               ORIG.ZIP='99999'
               ORIG.CITY='FedEx Ground'
               ORIG.STATE='ZZ'
            END
            VIN<7> = COUNTRY.LIST<1>     ; * Origination Country code
            VIN<8> = CLIENT.ID
            VIN<9> = CARRIER.ID
            CALL FB.2.1.CSZ.NEW(VIN,VOUT,10,ORIG.ZIP,HELP,ZIP.LEN,BACK.FLAG,ORIG.CITY,ORIG.STATE)    ; * ZZ USE .NEW VERSION
            COUNTRY.LIST<1> = VOUT<2>
            IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN         ; * Force for UPS
               ORIG.ZIP='99999'
               ORIG.CITY='UPS'
               ORIG.STATE='ZZ'
            END
            IF CARRIER.ID='01075' AND (ORIG.ZIP='' OR ORIG.ZIP='99999') THEN     ; * Force for FedEx Ground
               ORIG.ZIP='99999'
               ORIG.CITY='FedEx Ground'
               ORIG.STATE='ZZ'
            END
            IF CLIENT.ID='00841' AND CARRIER.ID='00030' AND IN.OUT='O' AND ORIG.ZIP='67101' THEN
               ORIG.ZIP='67107'
               ORIG.CITY='Moundridge'
               ORIG.STATE='KS'
            END
            CC+=VOUT<1> ; GOSUB PRINT.CC
            IF HELP = 'S' ! HELP = '' THEN
               GOSUB 8100                ; * Display screen
               GOSUB 8200                ; * Display data
            END
            IF BACK.FLAG THEN GOTO 600
            IF ORIG.CITY # '' THEN
               DESC = ORIG.CITY:', ':ORIG.STATE
            END ELSE
               DESC = ORIG.STATE
            END
            LAST.ORIG.ZIP=ORIG.ZIP
            LAST.ORIG.CITY=ORIG.CITY
            LAST.ORIG.STATE=ORIG.STATE
            CRT @(5,10):ORIG.ZIP ZIP.MASK:' ':DESC:@(-4)
            IF COUNTRY.LIST<1,1> EQ "" THEN
               CRT @(5,10):ORIG.ZIP ZIP.MASK:' ':DESC:@(-4)
            END ELSE
               ORIG.COUNTRY.CD = COUNTRY.LIST<1,1>
               ORIG.COUNTRY.NAME = OCONV(COUNTRY.LIST<1,2>,"MCT")
               *               CRT @(5,10):ORIG.ZIP ZIP.MASK:" ":ORIG.COUNTRY.NAME:@(-4)
               CRT @(5,10):ORIG.ZIP ZIP.MASK:' ':OCONV(DESC,"MCT"):" (":ORIG.COUNTRY.CD:")":@(-4)
            END
            IF CLIENT.ID = '01209' THEN GOTO 800   ; * CHECK FOR FACTORY BUILDERS KM 2/25/04
            IF CLIENT.ID = '01283' THEN GOTO 800   ; * CHECK FOR SRI
            IF CLIENT.ID = '01567' THEN GOTO 800
            IF CL.DIV.FLAG = 'Y' & NOT(BACK.FLAG) THEN
            END
         CASE BACK.FLAG
            GOTO 600
         CASE 1
            NULL
      END CASE

*****************************************************************
800:  * Enter destination zip
*****************************************************************
      IF CLIENT.ID#'00574' THEN
         IF (AUDIT='Y' OR AUDIT='U' OR AUDIT='S') AND (AUDIT.TYPE[1,3]='LTL' OR (AUDIT.TYPE[1,2]='TL' AND USER # '')) THEN
            IF BACK.FLAG THEN GOTO 700
            GOTO 900
         END
      END ELSE
         IF USER.TYPE='A' THEN
            IF BACK.FLAG THEN GOTO 700
            GOTO 900
         END
      END
      IF DO.BOL.POP THEN
         DEST.ZIP.POP.FLAG = BOL.POP.VER.ARR<1,14>
         IF DEST.ZIP.POP.FLAG = 'Y' AND NOT(BACK.FLAG) THEN

            DEST.ZIP = FIELD(BOL.POP.VER.ARR<4,14>,"-",1)
            IF NUM(DEST.ZIP) AND LEN(DEST.ZIP) LT 5 THEN DEST.ZIP = DEST.ZIP "R%5"
            DATA DEST.ZIP
         END
      END
      BEGIN CASE
         CASE CL.ZIP.RTE = 'Y'
            IF ZIP.ARR = '' THEN
               IF ORIG.ZIP # '' THEN
                  ZIP.ARR<1,1> = ORIG.ZIP
                  ZIP.ARR<2,1> = ORIG.CITY
                  ZIP.ARR<3,1> = ORIG.STATE
               END
               IF DEST.ZIP # '' AND CLIENT.ID#'00574' THEN
                  ZIP.ARR<1,50> = DEST.ZIP
                  ZIP.ARR<2,50> = DEST.CITY
                  ZIP.ARR<3,50> = DEST.STATE
               END
            END
            IF CLIENT.ID = "00574" AND IN.OUT='O' THEN
               CALL FB.2.1.ZIP.00574(ZIP.ARR,F.CLIENTS.CUST,F.EXP,QI)
               NUM.OF.ITEM=DCOUNT(ZIP.ARR<6>,@VM)
               EXP.CODE=ZIP.ARR<6,NUM.OF.ITEM>
            END ELSE
               CALL FB.2.1.ZIP( ZIP.ARR,QI)
            END
            ORIG.ZIP = ZIP.ARR<1,1>
            ORIG.CITY = ZIP.ARR<2,1>
            ORIG.STATE = ZIP.ARR<3,1>
            NUM.ZIPS = DCOUNT( ZIP.ARR<1>, @VM )
            DEST.ZIP = ZIP.ARR<1,NUM.ZIPS>
            DEST.CITY = ZIP.ARR<2,NUM.ZIPS>
            DEST.STATE = ZIP.ARR<3,NUM.ZIPS>
            IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN         ; * Default for UPS
               ORIG.ZIP='99999'
               ORIG.CITY='UPS'
               ORIG.STATE='ZZ'
               DEST.ZIP='99999'
               DEST.CITY='UPS'
               DEST.STATE='ZZ'
            END
            IF CARRIER.ID='01075' OR (DEST.ZIP='' OR DEST.ZIP='99999') THEN      ; * Default for FedEx Ground
               DEST.ZIP='99999'
               DEST.CITY='FedEx Ground'
               DEST.STATE='ZZ'
            END
            IF QI = 'X' THEN
               BACK.FLAG = 1
               GOTO 600
            END
         CASE CL.DEST.FLAG = 'Y'
            IF CL.ZIP.DEF<1,1> # '' THEN
               IF IN.OUT = 'I' & NOT(BACK.FLAG) THEN SND.DATA=CL.ZIP.DEF<1,1> ; GOSUB SEND.DATA
            END
            HELP = "Enter the Destination Zip Code. [S]=Search [X]=Back [EX]=Exit"
            VIN=0                        ; * Starting Zip Character Count
            VIN<3>=LAST.DEST.ZIP
            VIN<4>=LAST.DEST.CITY
            VIN<5>=LAST.DEST.STATE
            VOUT=''
            IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN         ; * Default for UPS
               DEST.ZIP='99999'
               DEST.CITY='UPS'
               DEST.STATE='ZZ'
            END
            IF CARRIER.ID='01075' AND (DEST.ZIP='' OR DEST.ZIP='99999') THEN     ; * Default for FedEx Ground
               DEST.ZIP='99999'
               DEST.CITY='FedEx Ground'
               DEST.STATE='ZZ'
            END
            VIN<7> = COUNTRY.LIST<2>     ; * Destination Country code
            VIN<8> = CLIENT.ID
            VIN<9> = CARRIER.ID
            CALL FB.2.1.CSZ.NEW(VIN,VOUT,11,DEST.ZIP,HELP,ZIP.LEN,BACK.FLAG,DEST.CITY,DEST.STATE)    ; * ZZ To be removed l8tr ;*ZZ USE .NEW VERSION
            COUNTRY.LIST<2> = VOUT<2>
            IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN         ; * Force for UPS
               DEST.ZIP='99999'
               DEST.CITY='UPS'
               DEST.STATE='ZZ'
            END
            IF CARRIER.ID='01075' AND (DEST.ZIP='' OR DEST.ZIP='99999') THEN     ; * Force for FedEx Ground
               DEST.ZIP='99999'
               DEST.CITY='FedEx Ground'
               DEST.STATE='ZZ'
            END
            IF CLIENT.ID='00841' AND CARRIER.ID='00030' AND IN.OUT='I' AND DEST.ZIP='67101' THEN
               DEST.ZIP='67107'
               DEST.CITY='Moundridge'
               DEST.STATE='KS'
            END
            CC+=VOUT<1> ; GOSUB PRINT.CC
            IF HELP = 'S' ! HELP = '' THEN
               GOSUB 8100                ; * Display screen
               GOSUB 8200                ; * Display data
            END
            IF BACK.FLAG THEN GOTO 700
            IF DEST.CITY # '' THEN
               DESC = DEST.CITY:', ':DEST.STATE
            END ELSE
               DESC = DEST.STATE
            END
            LAST.DEST.ZIP=DEST.ZIP
            LAST.DEST.CITY=DEST.CITY
            LAST.DEST.STATE=DEST.STATE
            CRT @(5,11):DEST.ZIP ZIP.MASK:' ':DESC:@(-4)
            IF COUNTRY.LIST<2,1> NE "" THEN
               DEST.COUNTRY.CD = COUNTRY.LIST<2,1>
               DEST.COUNTRY.NAME = OCONV(COUNTRY.LIST<2,2>,"MCT")
               CRT @(5,11):DEST.ZIP ZIP.MASK:' ':OCONV(DESC,"MCT"):" (":DEST.COUNTRY.CD:")":@(-4)
            END

            BACK.FLAG = 0
            IF DEST.ZIP = ORIG.ZIP AND CLIENT.ID#'01324' THEN          ; * JMK@@
               IF DEST.ZIP#'99999' THEN  ; * JMK198

*****************************************************************
VERIFY.ZIP:       *         ; * JMK198
*****************************************************************
                  CRT @(0,21):@(-3):"[YES] I verify that the Origin and Destination zip are the same."         ; * JMK198
                  HELP="X=Change. EX=Exit. [YES]=Continue."  ; * JMK198
                  CALL GEN.IN(0,22,'Enter selection please. ---','',Q,0,3,'','',0,-3,22,1,QI,HELP,0,23)        ; * JMK198
                  QI=OCONV(QI,'MCU')     ; * JMK198
                  BEGIN CASE             ; * JMK198
                     CASE QI='X'         ; * JMK198
                        CRT @(0,21):@(-3):         ; * JMK198
                        GOTO 800         ; * JMK198
                     CASE QI='EX'        ; * JMK198
                        GOTO PROGRAM.EXIT          ; * NKH10             ; * JMK198
                     CASE QI='YES'       ; * JMK198
                        NULL             ; * JMK198
                     CASE QI='1'         ; * JMK198
                        NULL             ; * JMK198
                     CASE 1              ; * JMK198
                        CALL ELINE('Invalid entry. Must be [X], [EX], or [YES].')          ; * JMK198
                        GOTO VERIFY.ZIP  ; * JMK198
                        CC+=1 ; GOSUB PRINT.CC
                  END CASE               ; * JMK198
                  CRT @(0,21):@(-3):     ; * JMK198
                  CC+=LEN(QI)            ; * JMK198
               END                       ; * JMK198
            END
         CASE BACK.FLAG
            GOTO 700
         CASE 1
            NULL
      END CASE

*****************************************************************
900:  * Feed origin and destination zips to mileage calc program
*****************************************************************
      IF CL.ORIG.FLAG='Y' AND CL.DEST.FLAG='Y' THEN CL.MILE.FLAG='Y'
      IF LEN(ORIG.ZIP) < 5 OR LEN(DEST.ZIP) < 5 THEN CL.MILE.FLAG='N'
      IF CL.MILE.FLAG = 'Y' & ORIG.ZIP#99999 & DEST.ZIP#99999 THEN
         BEGIN CASE
            CASE (AUDIT='Y' OR AUDIT='U' OR AUDIT='S') AND (AUDIT.TYPE[1,2]='TL' AND USER # '')
               MILE.REC = ZIP.ARR<1>
            CASE CL.ZIP.RTE = 'Y'
               MILE.REC = ZIP.ARR<1>
            CASE ORIG.ZIP LE DEST.ZIP
               MILE.REC = ORIG.ZIP:@VM:DEST.ZIP
            CASE 1
               MILE.REC = ORIG.ZIP:@VM:DEST.ZIP
         END CASE

         VIN='BOTH'                      ; * NPR999
         VIN<2>=CH.NUM
         VIN<3>=MILE.REC
         VIN<4>=0                        ; * 1 to Skip File Lookup and go to PC
         VIN<5>=PROG.NAME
         VIN<6>=CLIENT.ID:' - ':CLIENT.NAME
         VIN<8>=CLIENT.ID                ; * JMK65
         VIN<9>=CARRIER.ID               ; * JMK65
         SENT.TO.PCMILER=1
         CALL PCMILER(VIN,VOUT,F.PCIN,F.PCOUT,F.MILEAGE)
         IF VOUT<2>='FOUNDINFILE' OR VOUT<2>[1,5]='ERROR' THEN
            MILEAGE=OCONV(VOUT<1>,'MR0')
            CRT @(5,15):MILEAGE'L1,#10'
            SENT.TO.PCMILER=0
         END ELSE                        ; * NPR999 03/10/10 NPR
            MILEAGE=OCONV(VOUT<1>,'MR0')           ; * NPR999 03/10/10 NPR
            CRT @(5,15):MILEAGE'L1,#10'  ; * NPR999 03/10/10 NPR
            SENT.TO.PCMILER=0            ; * NPR999 03/10/10 NPR
         END                             ; * NPR999 03/10/10 NPR
      END
      IF ORIG.ZIP # '' THEN
         CRT @(5,10):ORIG.ZIP ZIP.MASK:' ':ORIG.CITY:', ':ORIG.STATE:@(-4)
      END
      IF DEST.ZIP # '' THEN
         CRT @(5,11):DEST.ZIP ZIP.MASK:' ':DEST.CITY:', ':DEST.STATE:@(-4):
      END
      IF ORIG.ZIP # '' THEN
         CRT @(5,10):ORIG.ZIP ZIP.MASK:' ':ORIG.CITY:', ':ORIG.STATE:@(-4)
         IF COUNTRY.LIST<1,1> EQ "" THEN
            CRT @(5,10):ORIG.ZIP ZIP.MASK:' ':ORIG.CITY:', ':ORIG.STATE:@(-4)
         END ELSE
            ORIG.COUNTRY.CD = COUNTRY.LIST<1,1>
            ORIG.COUNTRY.NAME = OCONV(COUNTRY.LIST<1,2>,"MCT")
            CRT @(5,10):ORIG.ZIP ZIP.MASK:' ':OCONV(ORIG.CITY,"MCT"):', ':OCONV(ORIG.STATE,"MCT"):" (":ORIG.COUNTRY.CD:")":@(-4)
         END
      END
      IF DEST.ZIP # '' THEN
         CRT @(5,11):DEST.ZIP ZIP.MASK:' ':DEST.CITY:', ':DEST.STATE:@(-4):
         IF COUNTRY.LIST<1,1> EQ "" THEN
            CRT @(5,11):DEST.ZIP ZIP.MASK:' ':DEST.CITY:', ':DEST.STATE:@(-4):
         END ELSE
            DEST.COUNTRY.CD = COUNTRY.LIST<2,1>
            DEST.COUNTRY.NAME = OCONV(COUNTRY.LIST<2,2>,"MCT")
            CRT @(5,11):DEST.ZIP ZIP.MASK:' ':OCONV(DEST.CITY,"MCT"):', ':OCONV(DEST.STATE,"MCT"):" (":DEST.COUNTRY.CD:")":@(-4)
         END
      END
      IF USER.TYPE = 'A' THEN
         IF OLD.PRO.REC<2> # IN.OUT THEN
            VC.ID=''
         END ELSE
            GOTO 1475
         END
      END

*****************************************************************
1400: * Enter vendor/customer number
*****************************************************************
      BEGIN CASE
         CASE IN.OUT = 'O'
            IF CL.CUST.FLAG # 'Y' THEN
               IF BACK.FLAG THEN GOTO 800
               GOTO 1295
            END ELSE
               DESC = 'Cust.'
            END
         CASE IN.OUT = 'I'
            IF CL.VEND.FLAG # 'Y' THEN
               IF BACK.FLAG THEN GOTO 800
               GOTO 1295                 ; * Skip To Expense Code Entry
            END ELSE
               DESC = 'Vend.'
            END
         CASE 1
            IF CL.CUST.FLAG#'Y' AND CL.VEND.FLAG#'Y' THEN
               IF BACK.FLAG THEN GOTO 800
               GOTO 1295                 ; * Skip To Expense Code Entry
            END ELSE
               DESC = 'Shpr.'
            END
      END CASE
      BACK.FLAG = 0
      CRT @(0,13):DESC'L#18':

*****************************************************************
1450:
*****************************************************************
      BACK.FLAG = 0
      VC.VIN=VC.CODE
      VC.VIN<2>=0                        ; * Starting Character Count
      VC.VIN<3>=USER
      VC.VOUT=''
      IF CL.ORIG.FLAG='Y' AND CL.DEST.FLAG='Y' THEN
         IF IN.OUT = 'O' THEN
            VC.ZIP=DEST.ZIP
            VC.CITY=DEST.CITY
            VC.ST=DEST.STATE
         END ELSE
            VC.ZIP=ORIG.ZIP
            VC.CITY=ORIG.CITY
            VC.ST=ORIG.STATE

            IF CLIENT.ID='01292' AND IN.OUT='T' THEN
               VC.ZIP=DEST.ZIP
               VC.CITY=DEST.CITY
               VC.ST=DEST.STATE
            END
         END
         IF DO.BOL.POP THEN
            VC.POP.FLAG = BOL.POP.VER.ARR<1,8>
            IF VC.POP.FLAG = 'Y' AND NOT(BACK.FLAG) THEN
               IF IN.OUT = "I" THEN
                  VC.VIN<5> = OCONV(BOL.POP.VER.ARR<4,1>,"MCT")        ; *NPR043 Origination name
               END ELSE
                  VC.VIN<5> = OCONV(BOL.POP.VER.ARR<4,8>,"MCT")        ; *NPR043 Destination name
               END
            END
         END
         ****         IF SU.FLAG=1 AND DBCTRL<15>='AC' ELSE
         CALL FB.2.1.VEND.CUST(IN.OUT,VC.DESC,F.VEND.CUST,F.VC.XREF,F.VC.ZIPS,F.TABLES,CLIENT.ID,QI,VC.ZIP,VC.CITY,VC.ST,VC.VIN,VC.VOUT,'E')
         ****         END
      END ELSE
         IF SU.FLAG=1 AND DBCTRL<15>='AC' ELSE
            CALL FB.2.1.CONSIGN.NEW(IN.OUT,VC.DESC,F.VEND.CUST,F.VC.XREF,F.VC.ZIPS,CLIENT.ID,QI,VC.VIN,VC.VOUT)
         END
      END
      IF VC.VOUT<4>#'X' THEN
         CC+=VC.VOUT<1> ; GOSUB PRINT.CC
         VC.ID=VC.VOUT<2>
         VC.CODE=VC.VOUT<3>
         VC.OVERRIDE=VC.VOUT<5>
         VC.TYPE=VC.VOUT<6>              ; * JMK28
         IF VC.TYPE='R' THEN             ; * JMK28
            VC.REJECT=1                  ; * JMK28
         END ELSE                        ; * JMK28
            VC.REJECT=0                  ; * JMK28
         END                             ; * JMK28
         VC.ADDR=VC.VOUT<7>
      END
      IF CLIENT.ID = '00883' THEN
         UP.VC.DESC=OCONV(VC.DESC,'MCU')
         IF VC.ID='14809' OR INDEX(UP.VC.DESC,'BOMBAY',1) THEN
            CALL ELINE('Verify With Auditor that this is not an Outbound COLLECT shipment!')
         END
      END
      IF CLIENT.ID = '01567' THEN        ; * DRF082
         UP.VC.DESC=OCONV(VC.DESC,'MCU')           ; * DRF082
         IF UP.VC.DESC[1,6]='PACCAR' THEN          ; * DRF082
            CALL ELINE('Shipment for customer/vendor Paccar must be rejected')   ; * DRF082
            VC.REJECT=1                  ; * DRF082
         END                             ; * DRF082
      END                                ; * DRF082
      IF CLIENT.ID = '30004' THEN
         UP.VC.DESC=OCONV(VC.DESC,'MCU')
         IF UP.VC.DESC[1,16]='SHERWIN WILLIAMS' AND IN.OUT='I' THEN
            CALL ELINE('Inbound shipment from Sherwin Williams must be rejected')
            VC.REJECT=1
         END
      END
      IF CLIENT.ID = '00924' OR CLIENT.ID='01228' THEN
         UP.VC.DESC=OCONV(VC.DESC,'MCU')
         IF UP.VC.DESC[1,4]='FTPC' OR UP.VC.DESC[1,9]='FLEETRITE' OR UP.VC.DESC[1,7]='F T P C' THEN
            CALL ELINE('Cannot update a bill with a customer/vendor of Fleetrite or FTPC')
            GOSUB 8100
            GOTO 300
         END
      END
      REVERSE.DIVISION = 0               ; * JMK232
      IF CLIENT.ID='01209' THEN REVERSE.DIVISION=1           ; * JMK232
      IF CLIENT.ID='01221' AND CARRIER.ID#'14365' THEN REVERSE.DIVISION=1        ; * JMK232
      IF CLIENT.ID='01280' THEN REVERSE.DIVISION=1           ; * JMK232
      IF CLIENT.ID='01283' THEN REVERSE.DIVISION=1           ; * JMK232
      IF CLIENT.ID='01609' THEN REVERSE.DIVISION=1           ; * JMK232
      IF CLIENT.ID='01617' THEN REVERSE.DIVISION=1           ; * JMK232
      IF CLIENT.ID='01622' THEN REVERSE.DIVISION=1           ; * JMK232
      IF CLIENT.ID='01630' THEN REVERSE.DIVISION=1           ; * JMK232
      IF REVERSE.DIVISION THEN           ; * JMK232
         *        IF VC.CODE='I' THEN             ; * JMK232
         IF VC.CODE='I' AND VC.VOUT<4>#'X' THEN    ; * JMK232
            IF DEST.ZIP#'' AND DEST.ZIP#'99999' THEN
               READV DIVISION FROM F.ZIP.DIV.XREF,DEST.ZIP,1 ELSE
                  CALL ELINE('Cannot locate intercompany division')
                  GOTO 1400
               END
               DIV.COUNT = DCOUNT(DIVISION<1>,@VM)
               IF DIV.COUNT GT 1 THEN
                  CALL FB.2.1.GET.DIV(CHECK.ZIP,CLIENT.ID,DIVISION,"E",QI)
                  QI = OCONV(QI,'MCU')
                  GOSUB 8100
                  GOSUB 8200
                  IF QI = 'X' THEN
                     BACK.FLAG = 1
                     GOTO 1400
                  END
                  MATREAD DIV.REC FROM F.DIV, DIVISION ELSE
                     CALL ELINE("ERROR - Division ":DIVISION:" not on file.")
                     CC+=1 ; GOSUB PRINT.CC
                     GOTO 1400
                  END
                  IF DIV.REC(7)='I' THEN
                     CALL ELINE("ERROR - Division ":DIVISION:" is Inactive - Cannot use.")
                     CC+=1 ; GOSUB PRINT.CC
                     GOTO 1400
                  END
               END
            END
         END
      END
      IF CLIENT.ID='01863' AND IN.OUT#'T' THEN
         IF VC.CODE#'' THEN
            DIVISION=FIELD(VC.CODE,"*",2)
            DIVISION=DIVISION'R%5'
            MATREAD DIV.REC FROM F.DIV, DIVISION ELSE
               CALL ELINE("ERROR - Division ":DIVISION:" not on file.")
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1400
            END
            IF DIV.REC(7)='I' THEN
               CALL ELINE("ERROR - Division ":DIVISION:" is Inactive - Cannot use.")
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1400
            END
         END
         IF FIELD(M.BOL.REC<29>,"*",2)#"" THEN     ; *JMK211
            BOL.DIV = ID.BOL.CRX[6,3]    ; * RLM003
            T.BOL.DIV = BOL.DIV "R%5"    ; *NPR060
            IF BOL.DIV NE DIVISION THEN  ; *NPR060
               CALL ELINE("Division on BOL is  ":T.BOL.DIV:" - Overrides Cust/Vend " : DIVISION)     ; *NPR060
               DIVISION = T.BOL.DIV      ; *NPR060
               MATREAD DIV.REC FROM F.DIV, DIVISION ELSE
                  CALL ELINE("ERROR - Division ":DIVISION:" not on file.")
                  CC+=1 ; GOSUB PRINT.CC
                  GOTO 1400
               END
               IF DIV.REC(7)='I' THEN
                  CALL ELINE("ERROR - Division ":DIVISION:" is Inactive - Cannot use.")
                  CC+=1 ; GOSUB PRINT.CC
                  GOTO 1400
               END
            END                          ; *NPR060
            CRT @(0,22):"2 T.BOL.DIV " : T.BOL.DIV : ; INPUT ZZ
         END                             ; * JMK211
      END
      IF CLIENT.ID = '01614' AND DIVISION = '' THEN
         IF ORIG.ZIP#'' AND ORIG.ZIP#'99999' THEN
            READV DIVISION FROM F.ZIP.DIV.XREF,ORIG.ZIP,1 ELSE
               CALL ELINE('Cannot locate intercompany division')
               GOTO 1400
            END
            DIV.COUNT = DCOUNT(DIVISION<1>,@VM)
            IF DIV.COUNT GT 1 THEN
               CALL FB.2.1.GET.DIV(ORIG.ZIP,CLIENT.ID,DIVISION,"E",QI)
               QI = OCONV(QI,'MCU')
               GOSUB 8100
               GOSUB 8200
               IF QI = 'X' THEN
                  BACK.FLAG = 1
                  GOTO 1400
               END
               MATREAD DIV.REC FROM F.DIV, DIVISION ELSE
                  CALL ELINE("ERROR - Division ":DIVISION:" not on file.")
                  CC+=1 ; GOSUB PRINT.CC
                  GOTO 1400
               END
               IF DIV.REC(7)='I' THEN
                  CALL ELINE("ERROR - Division ":DIVISION:" is Inactive - Cannot use.")
                  CC+=1 ; GOSUB PRINT.CC
                  GOTO 1400
               END
            END
         END
      END
      BEGIN CASE
         CASE QI = 'NULL'
            GOSUB 8100                   ; * Display screen
            GOSUB 8200                   ; * Display data
            GOTO 1450
         CASE QI = 'X'
            BACK.FLAG = 1
            GOTO 800
         CASE QI = 'EX'
            GOTO PROGRAM.EXIT            ; * NKH10
         CASE VC.DESC = '' & QI = ''
            GOSUB 8100                   ; * Display screen
            GOSUB 8200                   ; * Display data
            CALL ELINE("Entry required!")
            CC+=1 ; GOSUB PRINT.CC
            GOTO 1450
      END CASE
      GOSUB 8100                         ; * Display screen
      GOSUB 8200                         ; * Display data
      IF USER.TYPE='A' THEN
         IF RTN.FROM.VC THEN
            GOTO RTN.TO.GOT.VC
         END
      END

*****************************************************************
1295:
*****************************************************************
      BEGIN CASE                         ; * JMK133
         CASE CLIENT.ID='00919' ; BOL.FIRST=1
         CASE CLIENT.ID='00947' ; BOL.FIRST=1
         CASE CLIENT.ID='00984' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01000' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01064' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01084' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01163' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01196' AND DIVISION='00001' ; BOL.FIRST=1     ; * JMK133
         CASE CLIENT.ID='01202' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01225' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01240' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01282' ; BOL.FIRST=1
         CASE CLIENT.ID='01285' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01288' ; BOL.FIRST=1
         CASE CLIENT.ID='01305' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01320' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01361' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01455' ; BOL.FIRST=1
         CASE CLIENT.ID='01472' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01488' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01491' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01499' ; BOL.FIRST=1      ; * DRF101
         CASE CLIENT.ID='01525' ; BOL.FIRST=1
         CASE CLIENT.ID='01529' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='01539' ; BOL.FIRST=1
         CASE CLIENT.ID='01554' ; BOL.FIRST=1
         CASE CLIENT.ID='01567' ; BOL.FIRST=1      ; * JCW, 05/10/07
         CASE CLIENT.ID='01599' ; BOL.FIRST=1      ; * DRF
         CASE CLIENT.ID='01613' ; BOL.FIRST=1      ; * JCW, 05/10/07
         CASE CLIENT.ID='01636' ; BOL.FIRST=1      ; * JMK152
         CASE CLIENT.ID='01777' ; BOL.FIRST=1
         CASE CLIENT.ID='01818' ; BOL.FIRST=1
         CASE CLIENT.ID='01836' ; BOL.FIRST=1      ; * JMK245
         CASE CLIENT.ID='02099' ; BOL.FIRST=1      ; * JMK253
         CASE CLIENT.ID='02165' ; BOL.FIRST=1      ; * JMK250
         CASE CLIENT.ID='02190' ; BOL.FIRST=1
         CASE CLIENT.ID='02262' ; BOL.FIRST=1
         CASE CLIENT.ID='02362' ; BOL.FIRST=1
         CASE CLIENT.ID='02374' ; BOL.FIRST=1      ; * DRF009
         CASE CLIENT.ID='04866' ; BOL.FIRST=1      ; * JMK266
         CASE CLIENT.ID='05652' ; BOL.FIRST=1

         CASE CLIENT.ID='07437' ; BOL.FIRST=1
         CASE CLIENT.ID='07461' ; BOL.FIRST=1
         CASE CLIENT.ID='10225' ; BOL.FIRST=1      ; * JMK133
         CASE CLIENT.ID='40003' ; BOL.FIRST=1      ; * JMK232
         CASE 1 ; BOL.FIRST=0            ; * JMK133
      END CASE                           ; * JMK133

      IF BOL.FIRST THEN                  ; * JMK133
         IF BACK.FLAG THEN GOTO 1400
         GOTO 1475
      END
      IF CLIENT.ID='01292' THEN GOTO 600

      IF ACCT.NUM > "" THEN              ; * NKH43
         IF CARRIER.ID = "00015" OR CARRIER.ID = "01075" THEN          ; * NKH43
            CRT@(36,8):'Acct Num: ':ACCT.NUM       ; * NKH43
         END ELSE                        ; * NKH43  ; NKH44
            *         IF CARRIER.ID = "00212" OR CARRIER.ID = "00171" THEN           ; * NKH43  ; NKH44
            IF CARRIER.ID = '00041' OR CARRIER.ID = '01312' OR CARRIER.ID = '00365' THEN   ; * NKH63
               CRT@(10,8):' Acct Num: ':ACCT.NUM   ; * NKH43  ; NKH44
            END                          ; * NKH63
         END                             ; * NKH43
      END                                ; * NKH43

*****************************************************************
1297: * Expense code
*****************************************************************
      IF CL.EXP.FLAG ='Y' AND CLIENT.ID#'01053' THEN
         NOT.ASK = 0
         IF USER.MODIFY = 0 AND BACK.FLAG THEN GOTO 1400
         IF USER='DAVID' THEN CALL ELINE('EXPENSE PRESS BREAK')
         TEMP.REC = ''
         TEMP.REC<1> = BILL.DATE
         TEMP.REC<2> = IN.OUT
         TEMP.REC<3> = ORIG.ZIP
         TEMP.REC<4> = DEST.ZIP
         TEMP.REC<5> = EXP.CODE
         IF CLIENT.ID='30028' THEN       ; * JMK193
            IF TEMP.REC<236>='' THEN     ; * JMK193
               TEMP.REC<236>=EXP.CCTR    ; * JMK193
            END                          ; * JMK193
            IF TEMP.REC<237>='' THEN     ; * JMK193
               TEMP.REC<237>=EXP.PROJ    ; * JMK193
            END                          ; * JMK193
         END                             ; * JMK193
         TEMP.REC<6> = WEIGHT+0
         TEMP.REC<7> = CARRIER.CHG+0
         TEMP.REC<8> = ACTUAL.CHG+0
         TEMP.REC<9> = DIVISION
         TEMP.REC<10> = VAR.ARR<1>+0
         TEMP.REC<11> = VAR.ARR<2>+0
         TEMP.REC<12> = VAR.ARR<3>+0
         TEMP.REC<16> = BOL
         TEMP.REC<205> = BOL.DIST        ; * JMK84
         TEMP.REC<17> = VC.ID
         TEMP.REC<19> = MILEAGE+0
         CARRIER.MODE.WGT = CARRIER.REC<70>
         CARRIER.MODE.BY.WGT = CARRIER.REC<71>
         LOCATE WEIGHT IN CARRIER.MODE.WGT<1> BY "AR" SETTING POS ELSE NULL
         T.MODE.BY.WGT = OCONV(CARRIER.MODE.BY.WGT<1,POS>,'MCU')
         LTL.CAR=T.MODE.BY.WGT=1         ; * JMK187
         TL.CAR=T.MODE.BY.WGT=6          ; * JMK187
         AIR.CAR=T.MODE.BY.WGT=12        ; * JMK187
         TEMP.REC<21> = T.MODE.BY.WGT
         TEMP.REC<25> = ORIG.STATE
         TEMP.REC<26> = DEST.STATE
         TEMP.REC<27> = ORIG.CITY
         TEMP.REC<28> = DEST.CITY
         TEMP.REC<68> = BILL.STATUS
         MISC.CHG.POS=DCOUNT(CLASSES<1>,@VM)       ; * Find out how many
         FOR MISC.CHG.CNT=1 TO MISC.CHG.POS
            TEMP.REC<70,MISC.CHG.CNT>='FRT'
         NEXT MISC.CHG.CNT
         IF MISC.CHG.CODES#'' THEN
            TEMP.REC<70,MISC.CHG.POS+1>=MISC.CHG.CODES
         END
         TEMP.REC<74> = CLASSES
         TEMP.REC<119> = FLAT.RATE
         FOR UATT=1 TO 6
            TEMP.REC<182+UATT>=UFLDS<UATT>
         NEXT UATT

         IF ORIG.ZIP = "99999" THEN      ; * JMK261
            ORIG.COUNTRY.CD = ""         ; * JMK261
         END ELSE                        ; * JMK261
            ORIG.COUNTRY.CD = "US"       ; * JMK261
         END                             ; * JMK261
         IF LEN(ORIG.ZIP) = "6" AND ORIG.ZIP MATCH ('1A1N1A1N1A1N') THEN ORIG.COUNTRY.CD = "CA"      ; * JMK261
         IF LEN(ORIG.ZIP) = "6" AND ORIG.ZIP MATCH ('5N"M"') THEN ORIG.COUNTRY.CD = "MX"   ; * JMK261
         TEMP.REC<222>=ORIG.COUNTRY.CD   ; * JMK261

         IF DEST.ZIP = "99999" THEN      ; * JMK261
            DEST.COUNTRY.CD = COUNTRY.LIST<2,1>    ; * JMK261
         END ELSE                        ; * JMK261
            DEST.COUNTRY.CD = "US"       ; * JMK261
         END                             ; * JMK261
         IF LEN(DEST.ZIP) = "6" AND DEST.ZIP MATCH ('1A1N1A1N1A1N') THEN DEST.COUNTRY.CD = "CA"      ; * JMK261
         IF LEN(DEST.ZIP) = "6" AND DEST.ZIP MATCH ('5N"M"') THEN DEST.COUNTRY.CD = "MX"   ; * JMK261
         TEMP.REC<223>=DEST.COUNTRY.CD   ; * JMK261
         EXPENSE.VIN=''
         EXPENSE.VIN<1>=VC.DESC
         EXPENSE.VIN<2>=ACTUAL.CHG+0
         EXPENSE.VIN<3>=OLA.AMT+0
         EXPENSE.VIN<5>=PRO
         IF CLIENT.ID='01457' THEN       ; * JMK276
            READ VCUST.REC FROM F.VEND.CUST,VC.ID ELSE VCUST.REC=''
            BEGIN CASE                   ; * JMK276
               CASE IN.OUT='I'           ; * JMK276
                  OADDR=VCUST.REC<3,1>   ; * JMK276
                  DADDR=DIV.REC(14,1)    ; * JMK276
               CASE IN.OUT='O'           ; * JMK276
                  OADDR=DIV.REC(14,1)    ; * JMK276
                  DADDR=VCUST.REC<3,1>   ; * JMK276
               CASE IN.OUT='T'           ; * JMK276
                  OADDR=VCUST.REC<3,1>   ; * JMK276
                  DADDR=DIV.REC(14,1)    ; * JMK276
            END CASE                     ; * JMK276
            EXPENSE.VIN<15>=OCONV(DADDR,'MCU')     ; * JMK276
            EXPENSE.VIN<16>=OCONV(OADDR,'MCU')     ; * JMK276
         END                             ; * JMK276
         CALL NEW.GET.EXPENSE(EXPENSE.VIN,CLIENT.ID,CARRIER.ID,TEMP.REC,F.EXP,EXPENSE.VOUT)

         IF EXPENSE.VOUT<1>#'' THEN
            IF USER='DAVID' THEN
               NUM.OF.EXPENSE.RULE=DCOUNT(EXPENSE.VOUT<2>,@VM)
               FOR XX = 1 TO NUM.OF.EXPENSE.RULE
                  CRT @(40,7+XX):EXPENSE.VOUT<2,XX>'L#10':" ":EXPENSE.VOUT<3,XX>'L#3':" ":EXPENSE.VOUT<4,XX>'L#23'
               NEXT XX
               CALL ELINE('Check expense codes')
            END
            EXP.CODE=EXPENSE.VOUT<1>
         END

         IF CLIENT.ID='01706' THEN
            EXP.VIN=CLIENT.ID
            EXP.VIN<14>='TRANSLATE'
            EXP.VIN<15>=EXP.CODE
            CALL GET.EXPENSE(EXP.VIN,EXP.VOUT)
            EXP.CODE=EXP.VOUT<1>
         END
         IF CLIENT.ID='00866' AND EXP.CODE='777777-77-777' THEN EXP.CODE=''
         IF CLIENT.ID='00866' AND EXP.CODE='888888-88-888' THEN EXP.CODE=''
         IF CLIENT.ID='00866' AND EXP.CODE='999999-99-999' THEN EXP.CODE=''
         IF EXPENSE.VOUT<1>='' THEN
            VIN = CLIENT.ID
            IF CL.DIV.FLAG = 'Y' AND DIVISION #'' THEN
               VIN<2> = DIVISION
               VIN<3> = DIV.REC(8)
               VIN<31> = DIV.REC(45)
            END
            VIN<4> = CARRIER.ID
            VIN<5> = CARRIER.NAME
            VIN<6> = CARRIER.MODE        ; * Transportation Mode
            VIN<7> = IN.OUT
            VIN<8> = VC.CODE
            VIN<9> = VC.DESC
            VIN<10> = ORIG.ZIP
            VIN<11> = ORIG.STATE
            VIN<12> = DEST.ZIP
            VIN<13> = DEST.STATE
            VIN<14> = 'DEFAULT'
            IF CLIENT.ID='01457' THEN
               EXP.CODE=BOL<1,2>
            END
            VIN<15> = EXP.CODE
            VIN<16> = BACK.FLAG
            VIN<17> = ''                 ; * USED FOR EDI
            VIN<19> = BILL.DATE
            IF CAPTURE.INVOICE THEN      ; * JMK106
               VIN<20>=INV.NUM
            END
            VIN<21>=DIV.REC(11)
            VIN<22>=VC.ID
            VIN<23>=PRO
            VIN<18>=BOL                  ; * Only user for Daws (01084) right now Alcon division 5 and (10225) R & M and (01163) MD Building and (01196) JM CLipper for division 1 and (01202) Lowen and (01225) May & Company and (01240) Isco Inc and (01000) Qualico and (00984) Orschelin and (01361) Fairbanks Morse and (01320) Precision Kidd and (01305) Future Metals (01285) Solideal Tire (01472) Rexel-Rocky Mountain Division (01491) Form + Surface (01488) Green Light or (01525) REMCO (01554) Power and Pumps (01567) Betts Springs
            FOR UATT=1 TO 6              ; * JMK49
               VIN<23+UATT>=UFLDS<UATT>  ; * JMK49
            NEXT UATT                    ; * JMK49
            VIN<30>=VC.TYPE
            VIN<32>=DEST.CITY
            VIN<33>=ORIG.CITY
            * Begin TAG01
            VIN<35>=M.BOL.REC<33>
            VIN<36>=M.BOL.REC<68>
            * End TAG01
            BACK.FLAG = 0
            NOT.ASK = 0
            W.BOL = BOL                  ; * NPR909  as per Myra  03/25/10
            CALL GET.EXPENSE(VIN,VOUT)
            IF CLIENT.ID='01288' AND EXP.CODE='' AND IN.OUT='O' THEN
               BOL=BOL[3,999]
            END
            IF CLIENT.ID='01282' AND EXP.CODE='' THEN
               IF BOL<1,1>='001' THEN
                  BOL = DELETE(BOL,1,1)
               END
            END
            EXP.CODE = VOUT<1>
            IF EXP.CODE = 'EX' OR EXP.CODE = 'ex' THEN GOTO PROGRAM.EXIT         ; * NKH10
            USER.MODIFY = VOUT<2>
            IF USER.MODIFY = 0 THEN
               VER.CODE='E' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
            END
            IF CLIENT.ID='01288' AND EXP.CODE='' THEN
               BOL=BOL[3,999]
            END
            IF CLIENT.ID='01282' AND EXP.CODE='' THEN
               IF BOL<1,1>='001' THEN
                  BOL = DELETE(BOL,1,1)
               END
            END
            NOT.ASK = VOUT<3>
            ADD.EXPENSE = VOUT<4>
            IF CLIENT.ID='01977' THEN ADD.EXPENSE=1
            ERROR.MESSAGE = VOUT<5>
            IF ERROR.MESSAGE #'' THEN
               CALL ELINE(ERROR.MESSAGE)
            END
            MASK = VOUT<6>
            MULTI.CODE = VOUT<8>
            MULTI.PERCENT = VOUT<9>
            CRT @(5,12):EXP.CODE
            IF CLIENT.ID='01288' THEN BOL = W.BOL  ; * NPR909 as per Myra  03/25/10
         END

         IF CLIENT.ID='01832' OR CLIENT.ID='01870' THEN      ; *  NPR038
            W.SOURCE = UFLDS<1>          ; *  NPR038
            LOCATE W.SOURCE IN HK.EXPENSE.CODES<1> SETTING POS THEN    ; *  NPR038
               EXP.CODE = HK.EXPENSE.CODES<2,POS>  ; *  NPR038
            END                          ; *  NPR038
         END                             ; *  NPR038

         IF NOT.ASK THEN
            NOT.ASK = 0
            QI = EXP.CODE
            Q = QI
         END ELSE
            P.EXP.CODE.HOLD = EXP.CODE   ; * NPR060
            IF DO.BOL.POP THEN
               EXP.CD.POP.FLAG = BOL.POP.VER.ARR<1,23>
               IF EXP.CD.POP.FLAG = 'Y' AND NOT(BACK.FLAG) THEN
                  EXP.CODE = BOL.POP.VER.ARR<4,23>

                  IF CLIENT.ID = '01863' AND M.BOL.REC<2> NE "" THEN   ; * NPR060
                     W.EXP.CODE = FIELD(EXP.CODE,"*",1)      ; * NPR060
                     IF W.EXP.CODE = "" OR EXP.CODE = '' THEN          ; * NPR060
                        EXP.CODE = P.EXP.CODE.HOLD           ; * NPR060
                        CALL ELINE("Expense code not on BOL, using cust/vend exp. code")   ; * NPR060
                     END ELSE            ; * NPR060
                        EXP.CODE = W.EXP.CODE      ; * NPR060
                     END                 ; * NPR060
                  END                    ; * NPR060
               END
            END
            IF CLIENT.ID = '10171' AND M.BOL.REC<2> NE "" THEN         ; * NPR060 ; * DRF037    ; * DRF083
               *DF               W.EXP.CODE = M.BOL.REC<29>[1,5]:M.BOL.REC<29>[7,2]      ; * NPR060 ; * DRF037    ; * DRF083
               *DF               IF W.EXP.CODE = "" THEN   ; * NPR060 ; * DRF037    ; * DRF083
               *DF                  CALL ELINE("Expense code not on BOL.")     ; * NPR060 ; * DRF037    ; * DRF083
               *DF               END ELSE                  ; * NPR060 ; * DRF037    ; * DRF083
               *DF                  EXP.CODE = W.EXP.CODE  ; * NPR060 ; * DRF037    ; * DRF083
               *DF               END                       ; * NPR060 ; * DRF037    ; * DRF083
               *DF            END                          ; * NPR060 ; * DRF037    ; * DRF083
               BEGIN CASE                ; * DRF083
                  CASE CARRIER.ID='00015'          ; * DRF083
                     EXP.CODE='7767-':DIVISION[4,2]          ; * DRF083
                  CASE M.BOL.REC<10>[1,5]='ROMCO' AND M.BOL.REC<16>[1,5]='ROMCO'           ; * DRF083
                     EXP.CODE='7535-':DIVISION[4,2]          ; * DRF083
                  CASE IN.OUT='I'        ; * DRF083
                     EXP.CODE='7434-':DIVISION[4,2]          ; * DRF083
                  CASE 1                 ; * DRF083
                     EXP.CODE='7536-':DIVISION[4,2]          ; * DRF083
               END CASE                  ; * DRF083
               IF OCONV(M.BOL.REC<43>,'MCU')[1,1]='S' THEN   ; * DRF083
                  EXP.CODE=EXP.CODE:'-10'          ; * DRF083
               END                       ; * DRF083
               IF OCONV(M.BOL.REC<43>,'MCU')[1,1]='P' THEN   ; * DRF083
                  EXP.CODE=EXP.CODE:'-30'          ; * DRF083
               END                       ; * DRF083
            END                          ; * DRF083

            IF CLIENT.ID = '01675' AND M.BOL.REC<2> NE "" THEN         ; * DRF043
               W.EXP.CODE = M.BOL.REC<29>          ; * DRF043
               IF W.EXP.CODE#'' THEN     ; * DRF043
                  EXP.CODE = W.EXP.CODE  ; * DRF043
               END                       ; * DRF043
            END                          ; * DRF043
*DFCALL ELINE('PRESS BREAK - EXP CODE')
            IF CLIENT.REC(147)='89997' THEN
               IF CLIENT.ID#'01282' AND CLIENT.ID#'01866' AND CLIENT.ID#'01360' AND CLIENT.ID#'06025' AND CLIENT.ID#'05679' AND CLIENT.ID#'05687' AND CLIENT.ID#'05706' AND CLIENT.ID#'05812' THEN
                  IF IN.OUT='I' OR IN.OUT='T' THEN
                     READ AIRGAS.PO.REC FROM F.AIRGAS.PO,BOL<1,1> ELSE AIRGAS.PO.REC=''    ; * DRF049
                     NUM.OF.ITEM=DCOUNT(AIRGAS.PO.REC<8>,@VM)

                     IF (AIRGAS.PO.REC<8,NUM.OF.ITEM>[1,4]='6133' AND TRIM(AIRGAS.PO.REC<6,NUM.OF.ITEM>)#'') OR (BOL<1,1>[1,4]='3000' AND AIRGAS.PO.REC<8,NUM.OF.ITEM>#'') THEN
                        EXP.CODE=AIRGAS.PO.REC<8,NUM.OF.ITEM>
                     END ELSE
                        IF AIRGAS.PO.REC<9,NUM.OF.ITEM>='AGBC' OR AIRGAS.PO.REC<9,NUM.OF.ITEM>='AHBC' THEN
                           IF AIRGAS.PO.REC<9,NUM.OF.ITEM>='AGBC' THEN EXP.CODE='350119'
                           IF AIRGAS.PO.REC<9,NUM.OF.ITEM>='AHBC' THEN EXP.CODE='360119'
                           IF AIRGAS.PO.REC<9,NUM.OF.ITEM>='AGBC' AND AIRGAS.PO.REC<10,NUM.OF.ITEM>[1,2]='PL' THEN EXP.CODE='350219'
                           IF AIRGAS.PO.REC<9,NUM.OF.ITEM>='AHBC' AND AIRGAS.PO.REC<10,NUM.OF.ITEM>[1,2]='PL' THEN EXP.CODE='360219'
                           IF CLIENT.ID='01749' OR CLIENT.ID='05026' OR CLIENT.ID='05500' THEN EXP.CODE='605999'
                        END ELSE
                           EXP.CODE='605993'
                           IF CLIENT.ID='01749' OR CLIENT.ID='05026' OR CLIENT.ID='05500' THEN EXP.CODE='605999'
                        END
                     END
                  END
               END
            END
            * Begin NKH73
            IF CLIENT.ID='06869' THEN
               ADD.EXPENSE = 1
               IF M.BOL.REC<29> # '' THEN
                  EXP.CODE = FIELD(M.BOL.REC<29>,',',1,1)
               END
            END
            * End NKH73

            HELP = "Enter the Expense Code. [X]=Back [EX]=Exit"
            IF EXP.CODE#'' THEN MASK = EXP.CODE'L#45'
            IF CLIENT.ID='30028' THEN    ; * JMK193
               IF EXP.CODE#'' AND INDEX(EXP.CODE,'.',1)=0 THEN MASK = EXP.CODE:'.':EXP.CCTR:'.':EXP.PROJ       ; * JMK193
            END                          ; * JMK193
            MASK=MASK'L#45'
            CALL GEN.IN(5,12,MASK,'',Q,0,45,'','',2,-45,12,0,QI,HELP,0,23)
         END
         QI=OCONV(QI,'MCU')              ; *BOH01
         Q =OCONV(Q,'MCU')               ; *BOH01
         BACK.FLAG = 0
         BEGIN CASE
            CASE QI = 'X'
               BACK.FLAG = 1
               CRT @(5,12):@(-4)
               GOTO 1400
            CASE QI = 'EX'
               GOTO PROGRAM.EXIT         ; * NKH10
            CASE CHANGE.FLAG & QI = ''
               QI = EXP.CODE
               IF CLIENT.ID='30028' THEN           ; * JMK193
                  QI = EXP.CODE:'.':EXP.CCTR:'.':EXP.PROJ    ; * JMK193
               END                       ; * JMK193
               IF CLIENT.ID='01706' THEN
                  EXP.VIN=CLIENT.ID
                  EXP.VIN<14>='TRANSLATE'
                  EXP.VIN<15>=QI
                  CALL GET.EXPENSE(EXP.VIN,EXP.VOUT)
                  QI=EXP.VOUT<1>
               END
            CASE EXP.CODE#'' AND QI=''
               QI = EXP.CODE
               IF CLIENT.ID='30028' THEN           ; * JMK193
                  QI = EXP.CODE:'.':EXP.CCTR:'.':EXP.PROJ    ; * JMK193
               END                       ; * JMK193
            CASE QI # ''
               IF CLIENT.ID='01706' THEN
                  EXP.VIN=CLIENT.ID
                  EXP.VIN<14>='TRANSLATE'
                  EXP.VIN<15>=QI
                  CALL GET.EXPENSE(EXP.VIN,EXP.VOUT)
                  QI=EXP.VOUT<1>
               END
               READ TEST FROM F.EXP,QI ELSE        ; * JMK230
                  TEMP.REC<5>=QI         ; * JMK229
                  EXPENSE.VIN=''         ; * JMK229
                  EXPENSE.VIN<1>=VC.DESC           ; * JMK229
                  EXPENSE.VIN<2>=ACTUAL.CHG+0      ; * JMK229
                  EXPENSE.VIN<3>=OLA.AMT+0         ; * JMK229
                  EXPENSE.VIN<5>=PRO     ; * JMK229
                  CALL NEW.GET.EXPENSE(EXPENSE.VIN,CLIENT.ID,CARRIER.ID,TEMP.REC,F.EXP,EXPENSE.VOUT)           ; * JMK229
                  IF EXPENSE.VOUT<1>#'' THEN       ; * JMK229
                     QI=EXPENSE.VOUT<1>  ; * JMK229
                  END ELSE               ; * JMK229
                     VIN = CLIENT.ID
                     IF CL.DIV.FLAG = 'Y' AND DIVISION #'' THEN
                        VIN<2> = DIVISION
                        VIN<3> = DIV.REC(8)
                        VIN<31> = DIV.REC(45)
                     END
                     VIN<4> = CARRIER.ID
                     VIN<5> = CARRIER.NAME
                     VIN<6> = CARRIER.MODE         ; * Transportation Mode
                     VIN<7> = IN.OUT
                     VIN<8> = VC.CODE
                     VIN<9> = VC.DESC
                     VIN<10> = ORIG.ZIP
                     VIN<11> = ORIG.STATE
                     VIN<12> = DEST.ZIP
                     VIN<13> = DEST.STATE
                     VIN<14> = 'TRANSLATE'
                     VIN<15> = QI
                     VIN<17> = ''        ; * USED FOR EDI
                     VIN<19> = BILL.DATE
                     CALL GET.EXPENSE(VIN,VOUT)
                     QI = VOUT<1>        ; * Translated Expense Code
                     ADD.EXPENSE = VOUT<4>
                  END                    ; * JMK229
               END                       ; * JMK230
               IF QI = 'EX' OR QI = 'ex' THEN GOTO PROGRAM.EXIT        ; * NKH10
               ERROR.MESSAGE = VOUT<5>
               IF ERROR.MESSAGE #'' THEN
                  CALL ELINE(ERROR.MESSAGE)
                  GOTO 1297
               END
               MULTI.CODE = VOUT<8>
               MULTI.PERCENT = VOUT<9>
            CASE 1
               CALL ELINE('Invalid Expense Code.')
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1297
         END CASE
         IF QI='-' THEN
            LOCATE 'EXP' IN MISSING.DATA<1> SETTING MISSING.POS ELSE
               MISSING.DATA<1,-1>='EXP'
            END
            GOTO 1475
         END
         IF QI#'-' THEN
            LOCATE 'EXP' IN MISSING.DATA<1> SETTING MISSING.POS THEN
               DEL MISSING.DATA<1,MISSING.POS>
            END
         END
         EXP.CODE = QI
         VIN<14> = 'FORMAT'
         VIN<15> = EXP.CODE
         VIN<17> = ''                    ; * USED FOR EDI
         CALL GET.EXPENSE(VIN,VOUT)
         IF VIN<1> = 'EX' OR VIN<1> = 'ex' THEN GOTO PROGRAM.EXIT      ; * NKH10
         ERROR.MESSAGE = VOUT<5>
         IF ERROR.MESSAGE#'' THEN
            CALL ELINE(ERROR.MESSAGE)
            GOTO 1297
         END
         EXP.CODE = VOUT<1>
         ORIG.EXP.CODE=VOUT<7>

         IF CLIENT.ID = "01360" OR CLIENT.ID = "01866" THEN  ; * NPR067
            TS.EXP.CODE = FIELD(EXP.CODE,"-",2,99)           ; * NPR067
            IF TS.EXP.CODE = "62920-105" THEN      ; * NPR067
               DIVISION = "00001"        ; * NPR067
               EXP.CODE='01-62920-105'   ; * NPR067
               CRT @(5,12):EXP.CODE      ; * NPR067
               CRT @(5,9):DIVISION       ; * NPR067
            END                          ; * NPR067
         END                             ; * NPR067
         IF CLIENT.ID = "01794" THEN
            T.DIV = FIELD(EXP.CODE,"-",2) "R%5"
            IF T.DIV NE DIVISION THEN
               CALL ELINE("BOL Indicates that this bill is for Division ":T.DIV:" Check with your supervisor")
               GOTO 1297
            END
         END
         *---- Verify expense code in expense code file
         IF OCONV(USER,'MCU')='TEASTRIDGE' AND CLIENT.ID='01148' AND (CARRIER.ID='00015' OR CARRIER.ID='01075') THEN
            ADD.EXPENSE=1
         END
         IF CLIENT.ID='01148' AND EXP.CODE#'' THEN
            ADD.EXPENSE=1
         END
         IF CLIENT.ID='01308' AND EXP.CODE#'' THEN           ; * DRF069
            ADD.EXPENSE=1                ; * DRF069
         END                             ; * DRF069
         IF CLIENT.ID='01312' AND EXP.CODE#'' THEN
            ADD.EXPENSE=1
         END
         IF CLIENT.REC(147)='89997' AND EXP.CODE#'' THEN
            ADD.EXPENSE=1
         END
         *DF         IF CLIENT.ID='00392' AND EXP.CODE#'' THEN
         *DF            IF DIVISION[3,3]:'-' # EXP.CODE[1,4] THEN
         *DF               EXP.CODE=DIVISION[3,3]:'-':EXP.CODE
         *DF               CRT @(5,12):EXP.CODE
         *DF            END
         *DF            ADD.EXPENSE=1
         *DF         END
         IF CLIENT.ID='05237' AND EXP.CODE#'' THEN           ; * DRF029
            ADD.EXPENSE=1                ; * DRF029
         END                             ; * DRF029

         IF CLIENT.ID='00934' AND EXP.CODE#'' THEN
            ADD.EXPENSE=1
         END
         IF CLIENT.ID='01408' AND EXP.CODE#'' THEN
            ADD.EXPENSE=1
         END
         IF CLIENT.ID='06947' AND EXP.CODE#'' THEN           ; * DRF094
            ADD.EXPENSE=1                ; * DRF094
         END                             ; * DRF094
         IF CLIENT.ID='00879' OR CLIENT.ID='01079' OR CLIENT.ID='01083' OR CLIENT.ID='01101' OR CLIENT.ID='01112' OR CLIENT.ID='01113' CLIENT.ID='01271' OR CLIENT.ID='01389' OR CLIENT.ID='01418' OR CLIENT.ID = "01432" THEN         ; * NPR064
            ADD.EXPENSE=1                ; * NPR064
         END                             ; * NPR064
         IF CLIENT.ID='30028' AND EXP.CODE#'' THEN           ; * JMK193
            IF INDEX(EXP.CODE,'.',1) THEN
               EXP.CODE.HOLD=EXP.CODE    ; * JMK193
               EXP.CODE.TEST=FIELD(EXP.CODE.HOLD,'.',1)      ; * JMK193
               EXP.CCTR.TEST=FIELD(EXP.CODE.HOLD,'.',2)      ; * JMK193
               IF EXP.CCTR.TEST#'' THEN  ; * JMK193
                  IF EXP.CCTR.TEST MATCHES '6N' ELSE         ; * JMK193
                     CALL ELINE(EXP.CCTR.TEST:' must be 6 digits!')    ; * JMK193
                     CC+=1 ; GOSUB PRINT.CC        ; * JMK193
                     EXP.CODE=''         ; * JMK193
                     EXP.CCTR=''         ; * JMK193
                     EXP.PROJ=''         ; * JMK193
                     GOTO 1297           ; * JMK193
                  END                    ; * JMK193
               END                       ; * UJMK193
               EXP.PROJ.TEST=FIELD(EXP.CODE.HOLD,'.',3)      ; * JMK193
               IF EXP.PROJ.TEST#'' THEN  ; * JMK193
                  IF EXP.PROJ.TEST MATCHES '6N' ELSE         ; * JMK193
                     CALL ELINE(EXP.PROJ.TEST:' must be 6 digits!')    ; * JMK193
                     CC+=1 ; GOSUB PRINT.CC        ; * JMK193
                     EXP.CODE=''         ; * JMK193
                     EXP.CCTR=''         ; * JMK193
                     EXP.PROJ=''         ; * JMK193
                     GOTO 1297           ; * JMK193
                  END                    ; * JMK193
               END                       ; * JMK193
               EXP.CODE=EXP.CODE.TEST    ; * JMK193
               EXP.CCTR=EXP.CCTR.TEST    ; * JMK193
               EXP.PROJ=EXP.PROJ.TEST    ; * JMK193
               EXP.CODE.HOLD=''          ; * JMK193
            END                          ; * JMK193
         END                             ; * JMK193
         READ DEXP FROM F.EXP,EXP.CODE THEN
            ACTIVE = DEXP<5>             ; * Was Att <4> until 5/15/99
            EXP.CODE.DESC = DEXP<1>
            IF ACTIVE='I' THEN
               CALL ELINE('Error! Expense Code ':EXP.CODE:' is no longer a valid expense code.')
               CC+=1 ; GOSUB PRINT.CC
               EXP.CODE=''
               GOTO 1297
            END
         END ELSE
            IF ADD.EXPENSE = 0 THEN
               CALL ELINE('Error! ':EXP.CODE:' Is not on file.')
               EXP.CODE=''
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1297
            END
            CRT @(0,22):BELL:BELL:
            HELP = "Enter either Y or N."

*****************************************************************
1320:
*****************************************************************
            LINE = 'Expense code ':EXP.CODE
            LINE := ' not on file. Do you want to add? N'
            CALL GEN.IN(0,22,LINE,'',Q,0,1,'','',1,-1,22,1,QI,HELP,0,23)
            CC+=LEN(QI) ; GOSUB PRINT.CC
            QI = OCONV(QI,'MCU')
            IF QI = '' THEN QI = 'N'
            IF QI = 'Y' ! QI = 'N' ! QI='0' ! QI='1' ELSE GOTO 1320
            IF QI = 'N' OR QI='0' THEN GOTO 1295

*****************************************************************
1330:       * Enter new expense code description and update expense code file
*****************************************************************
            HELP = "Enter the expense code description."
            MASK=EXP.CODE:STR("_",45-LEN(EXP.CODE))
            CALL GEN.IN(0,22,'Enter description ':MASK,'',Q,0,45,'','',2,-45,22,0,QI,HELP,0,23)
            CC+=LEN(QI)+1 ; GOSUB PRINT.CC
            IF Q='' THEN Q=EXP.CODE
*****************************************************************
1335:
*****************************************************************
            HELP = "Enter either Y or N."
            LINE = 'The description is ':Q:'. Is this correct? Y'
            CALL GEN.IN(0,22,LINE,'',ACK,0,1,'','',1,-1,22,1,QI,HELP,0,23)
            CC+=LEN(QI) ; GOSUB PRINT.CC
            QI = OCONV(QI,'MCU')
            IF QI = '' THEN QI = 'Y'
            IF QI = 'Y' ! QI = 'N' ELSE GOTO 1335
            IF QI = 'N' THEN GOTO 1330
            EXP.CODE.DESC = Q
            WRITEV EXP.CODE.DESC ON F.EXP,EXP.CODE,1
         END
         CRT @(5,12):EXP.CODE:' ':EXP.CODE.DESC:@(-4):
         IF CLIENT.ID='01371' AND CARRIER.ID # "20693" THEN
            TEST.DIV=FIELD(EXP.CODE,'-',2)
            IF TEST.DIV'R%5'#DIVISION'R%5' THEN
               CALL ELINE('Division and expense code do not match, Please try again')

               IF NOT(FRT.FLAG) AND USER # 'DAVID' THEN      ; * SWB07
                  GOTO 600
               END
            END
         END
         IF CLIENT.ID='01443' THEN
            TEST.DIV=FIELD(EXP.CODE,'-',2)
            TEST.DIV=TEST.DIV[1,3]
            IF TEST.DIV'R%5'#DIVISION'R%5' THEN
               CALL ELINE('Division and expense code do not match, Please try again')
               GOTO 600
            END
         END
         *DF         IF CLIENT.ID='00872' AND CL.DIV.FLAG = 'Y' THEN
         *DF            DIVISION=EXP.CODE[1,1]
         *DF            IF EXP.CODE='420000' OR EXP.CODE='430000' THEN
         *DF               DIVISION='00010'
         *DF            END
         *DF            IF EXP.CODE='800' THEN
         *DF               DIVISION='00080'
         *DF            END
         *DF            IF EXP.CODE='810' THEN   ; * DRF065
         *DF               DIVISION='00081'   ; * DRF065
         *DF            END   ; * DRF065
         *DF            IF EXP.CODE='820' THEN
         *DF               DIVISION='00082'
         *DF            END
         *DF            DIVISION=DIVISION'R%5'
         *DF            MATREAD DIV.REC FROM F.DIV, DIVISION ELSE
         *DF               CALL ELINE("ERROR - Division ":DIVISION:" not on file.")
         *DF               CC+=1 ; GOSUB PRINT.CC
         *DF               GOTO 1297
         *DF            END
         *DF            IF DIV.REC(7)='I' THEN
         *DF               CALL ELINE("ERROR - Division ":DIVISION:" is Inactive - Cannot Use")
         *DF               CC+=1 ; GOSUB PRINT.CC
         *DF               GOTO 1297
         *DF            END
         *DF            VER.CODE='DC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
         *DF            CRT @(5,9):DIVISION
         *DF         END
         IF CLIENT.ID='01401' AND CL.DIV.FLAG = 'Y' THEN
            IF EXP.CODE='5313-20-4' THEN
               DIVISION='00020'
            END
            IF EXP.CODE='5313-21-4' THEN
               DIVISION='00021'
            END
            DIVISION=DIVISION'R%5'
            MATREAD DIV.REC FROM F.DIV, DIVISION ELSE
               CALL ELINE("ERROR - Division ":DIVISION:" not on file.")
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1297
            END
            IF DIV.REC(7)='I' THEN
               CALL ELINE("ERROR - Division ":DIVISION:" is Inactive - Cannot Use")
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1297
            END
            VER.CODE='DC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
            CRT @(5,9):DIVISION
         END
         IF CLIENT.ID='00664' AND CL.DIV.FLAG = 'Y' THEN
            DIVISION=EXP.CODE[1,2]
            DIVISION=DIVISION'R%5'
            MATREAD DIV.REC FROM F.DIV, DIVISION ELSE
               CALL ELINE("ERROR - Division ":DIVISION:" not on file.")
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1297
            END
            IF DIV.REC(7)='I' THEN
               CALL ELINE("ERROR - Division ":DIVISION:" is Inactive - Cannot Use")
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1297
            END
            VER.CODE='DC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
            CRT @(5,9):DIVISION
         END
         IF CLIENT.ID='00883' AND CL.DIV.FLAG = 'Y' THEN
            DIVISION=EXP.CODE[1,2]
            DIVISION=DIVISION'R%5'
            MATREAD DIV.REC FROM F.DIV, DIVISION ELSE
               CALL ELINE("ERROR - Division ":DIVISION:" not on file.")
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1297
            END
            IF DIV.REC(7)='I' THEN
               CALL ELINE("ERROR - Division ":DIVISION:" is Inactive - Cannot Use")
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1297
            END
            CRT @(5,9):DIVISION
         END
         IF CLIENT.ID='01457' AND CL.DIV.FLAG = 'Y' AND IN.OUT#'T' THEN          ; * BOH01 This entire block of code Removed third party as changes were made for Airgas - DRF
            BEGIN CASE
               CASE IN.OUT='O' ; DC.ZIP=ORIG.ZIP
               CASE IN.OUT='I' ; DC.ZIP=DEST.ZIP
               CASE 1 ; DC.ZIP=ORIG.ZIP  ; * Use the Origin for Third Party to Solve the Fife WA Problem
            END CASE
            DUMMY.DIVISION=''
            IF DIVISION#'' THEN DUMMY.DIVISION=DIVISION
            BEGIN CASE
               CASE DC.ZIP = '19007' ; DIVISION='00DC01'     ; * Bristol PA
               CASE DC.ZIP = '19057' ; DIVISION='00DC01'     ; * Levittown PA
               CASE DC.ZIP = '23321' ; DIVISION='00DC01'     ; * Shipments from Chesapeak VA are for Bristol PA
               CASE DC.ZIP = '30096' ; DIVISION='00DC02'     ; * Duluth GA
               CASE DC.ZIP = '45011' ; DIVISION='00DC03'     ; * Hamilton OH
               CASE DC.ZIP = '90601' ; DIVISION='00DC05'     ; * Whittier CA
               CASE DC.ZIP = '90607' ; DIVISION='00DC05'     ; * Whittier CA
               CASE DC.ZIP = '90610' ; DIVISION='00DC05'     ; * Whittier CA
               CASE DC.ZIP = '98424' ; DIVISION='00DC05'     ; * Shipments from Fife WA are for Whittier CA
               CASE DC.ZIP = '53022' ; DIVISION='00DC08'     ; * Germantown WI
               CASE DC.ZIP = '53002' ; DIVISION='00DC08'     ; * Shipments from Allentown WI are for Germantown WI
               CASE DC.ZIP = '75019' ; DIVISION='00DC14'     ; * Coppell TX
               CASE DC.ZIP = '77503' ; DIVISION='00DC09'     ; * Coppell TX
               CASE DC.ZIP = '89044' ; DIVISION='00DC15'     ; * Henderson NV
               CASE DC.ZIP = '98188' OR DC.ZIP='98108' ; DIVISION='00SF15'       ; * Seattle WA
               CASE DC.ZIP = '29715' ; DIVISION='00SF22'     ; * Fort Mill, SC
            END CASE
            IF DUMMY.DIVISION#'' THEN DIVISION=DUMMY.DIVISION
            MATREAD DIV.REC FROM F.DIV, DIVISION ELSE
               IF DIVISION NE '' THEN
                  CALL ELINE("ERROR - Division ":DIVISION:" not on file.")
               END ELSE
                  CALL ELINE("ERROR - Unable to determine Division for zip " : DC.ZIP)
               END
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1297
            END
            IF DIV.REC(7)='I' THEN
               CALL ELINE("ERROR - Division ":DIVISION:" is Inactive - Cannot Use")
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1297
            END
            CRT @(5,9):DIVISION
         END
         *********************************************************************
         IF CLIENT.ID='01037' AND CL.DIV.FLAG = 'Y' AND IN.OUT#'I' THEN
            DIVISION=EXP.CODE[6,2]
            DIVISION=DIVISION'R%5'
            MATREAD DIV.REC FROM F.DIV, DIVISION ELSE
               CALL ELINE("ERROR - Division ":DIVISION:" not on file.")
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1297
            END
            IF DIV.REC(7)='I' THEN
               CALL ELINE("ERROR - Division ":DIVISION:" is Inactive - Cannot Use")
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1297
            END
            CRT @(5,9):DIVISION
         END
         *********************************************************************
         IF MULTI.CODE#'' THEN
            DTAB<1>=MULTI.CODE
            CODE.COUNTER=DCOUNT(DTAB<1>,@VM)
            CODE.ACC = 0
            FOR XX = 1 TO CODE.COUNTER-1
               DTAB<3,XX> = OCONV(ACTUAL.CHG*MULTI.PERCENT<1,XX>/10000,'MR0')
               CODE.ACC = CODE.ACC + DTAB<3,XX>
            NEXT XX
            DTAB<3,CODE.COUNTER>=ACTUAL.CHG-CODE.ACC
            CHANGE.EXP=0
         END ELSE
            BEGIN CASE                   ; * JMK193
               CASE CLIENT.ID='30028'    ; * JMK193
                  EXP.CHANGE=0           ; * JMK193
                  IF OLD.PRO.REC<5> # EXP.CODE THEN EXP.CHANGE=1       ; * JMK193
                  IF OLD.PRO.REC<236> # EXP.CCTR THEN EXP.CHANGE=1     ; * JMK193
                  IF OLD.PRO.REC<237> # EXP.PROJ THEN EXP.CHANGE=1     ; * JMK193
                  IF EXP.CHANGE THEN CHANGE.EXP=1  ; * JMK193
                  DTAB=''                ; * JMK193
                  DTAB<1>=EXP.CODE:'.':EXP.CCTR:'.':EXP.PROJ           ; * JMK193
                  DTAB<4>=EXP.CCTR       ; * JMK193
                  DTAB<5>=EXP.PROJ       ; * JMK193
               CASE 1                    ; * JMK193
                  IF OLD.PRO.REC<5> # EXP.CODE THEN          ; * It Changed
                     * Reset Expense Code distribution & Force Update
                     IF OLD.PRO.REC<5>#'' THEN CHANGE.EXP=1
                     DTAB = ''
                     DTAB<1> = EXP.CODE
                  END ELSE CHANGE.EXP=0
            END CASE                     ; * JMK193
         END
      END ELSE
         IF BACK.FLAG THEN GOTO 1400
      END

      * Begin NKH13
      * Begin NKH06
*****************************************************************
*1465: * Enter Received Date
*****************************************************************
      *      IF DBCTRL<14> = 'A' THEN
      *         RVCD.DATE = OLD.PRO.REC<246>
      *      END ELSE
      *         IF CLIENT.REC(70)<1,15> = 'Y' THEN
      *            IF OLD.PRO.REC<246> = "" THEN
      *               MASK='MM/DD/YY'
      *               HELP="Enter the Received Date "
      *               CALL GEN.IN(5,14,MASK,'DATE',Q,0,8,'L','',2,5,14,0,QI,HELP,0,23)
      *               RVCD.DATE = Q
      *               IF QI='X' THEN GO 1297
      *               IF QI='EX' THEN
      *                  GOTO PROGRAM.EXIT      ; * NKH10
      *               END
      *            END ELSE
      *               RVCD.DATE = OLD.PRO.REC<246>
      *            END
      *         END
      *      END
      *      PRINT @(5,14):(RVCD.DATE'D2/')'L#8':
      *
      * End NKH06
      * End NKH13

      IF BOL.FIRST THEN                  ; * JMK133
         IF BACK.FLAG THEN
            GOTO 1295
         END ELSE
            GOTO 1550
         END
      END
      *      IF CLIENT.ID='01127' OR CLIENT.ID='00761' OR CLIENT.ID='01596' OR CLIENT.ID='01721' OR CLIENT.ID='01763' OR CLIENT.ID='01019' OR CLIENT.ID='01712' OR CLIENT.ID='01419' OR CLIENT.ID='01344' OR ((CLIENT.ID='01083' OR CLIENT.ID='01101' OR CLIENT.ID='00879' OR CLIENT.ID='01112' OR CLIENT.ID='01079' OR CLIENT.ID='01271' OR CLIENT.ID='01418' OR CLIENT.ID='01432' OR CLIENT.ID='01389' OR CLIENT.ID='01675' OR CLIENT.ID='05350' OR CLIENT.ID='05351' OR CLIENT.ID='05349' OR CLIENT.ID='01457' OR CLIENT.ID='01267' OR CLIENT.ID='01113' OR CLIENT.ID='05548')) THEN GOTO 1550           ; * NPR019 ; * DRF051 ; * DRF063  ; * NKH55
      IF CLIENT.ID='00761' OR CLIENT.ID='01596' OR CLIENT.ID='01721' OR CLIENT.ID='01763' OR CLIENT.ID='01019' OR CLIENT.ID='01712' OR CLIENT.ID='01419' OR CLIENT.ID='01344' OR ((CLIENT.ID='01083' OR CLIENT.ID='01101' OR CLIENT.ID='00879' OR CLIENT.ID='01112' OR CLIENT.ID='01079' OR CLIENT.ID='01271' OR CLIENT.ID='01418' OR CLIENT.ID='01432' OR CLIENT.ID='01389' OR CLIENT.ID='01675' OR CLIENT.ID='05350' OR CLIENT.ID='05351' OR CLIENT.ID='05349' OR CLIENT.ID='01457' OR CLIENT.ID='01267' OR CLIENT.ID='01113' OR CLIENT.ID='05548')) THEN GOTO 1550  ; * NPR019 ; * DRF051 ; * DRF063  ; * NKH55

*****************************************************************
1475: * Enter class
*****************************************************************
      IF CL.CLS.FLAG = 'Y' THEN
         BACK.FLAG = 0
         CALL FB.2.1.CLASS(CLASS,QI,'E')
         QI = OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI = 'X'
               BACK.FLAG = 1
               CALL FB.CLEAR.WINDOW
               GOTO 1295
            CASE QI = 'EX'
               GOTO PROGRAM.EXIT         ; * NKH10
         END CASE
         WEIGHT = 0
         X = DCOUNT(CLASS<2>,CHAR(253))
         FOR I = 1 TO X
            WEIGHT = WEIGHT+CLASS<2,I>
         NEXT I
      END ELSE
         IF BACK.FLAG THEN GOTO 1295
      END
      IF USER.TYPE = 'A' THEN GOTO 1600
      IF PRO.ID='00041*752-316043005*0' THEN GOTO 1600

*****************************************************************
1500: * Enter bill of lading code
*****************************************************************
      EXP.LIST=''                        ; * JMK177
      IF CL.BOL.FLAG = 'Y' THEN
         BACK.FLAG = 0
         VIN=0
         VIN<2>=USER
         VIN<4>=IN.OUT                   ; * Send In / Out Flag Every Time
         VIN<5>=CARRIER.ID
         IF CLIENT.ID='00908' AND IN.OUT='O' THEN
            VIN<3>=DIVISION[4,2]:'-'
         END
         PREV.BOL=BOL
         PREV.BOL.DIST=BOL.DIST          ; * JMK84
         VIN<6>=EXP.CODE
         IF CLIENT.ID='00924' OR CLIENT.ID='01228' THEN
            VIN<7>=DIVISION
         END
         VIN<8>=CARRIER.MODE
         VIN<9>=CARRIER.NAME
         VIN<10>=PRO
         VIN<11>=BILL.DATE               ; * JMK79
         VIN<12>=ACTUAL.CHG              ; * JMK84
         VIN<13>=BOL.DIST                ; * JMK84

         IF CLIENT.ID='01349' OR CLIENT.ID='01350' OR CLIENT.ID='01645' THEN     ; * JMK102 ; * JMK178
            IF BOL='' THEN               ; * JMK102
               RR.PRO=PRO                ; * JMK102
               RR.PRO.NO=CHANGE(RR.PRO,'-','')     ; * JMK102
               RR.PRO.NO=CHANGE(RR.PRO.NO,' ','')  ; * JMK102
               CHR.POS=0                 ; * JMK102
               CHR.EXIT=0                ; * JMK102
               LOOP                      ; * JMK102
                  CHR.POS+=1             ; * JMK102
                  CHR=RR.PRO.NO[CHR.POS,1]         ; * JMK102
                  IF CHR#'0' THEN CHR.EXIT=1       ; * JMK102
                  IF CHR.POS>LEN(RR.PRO.NO) THEN CHR.EXIT=1  ; * JMK102
               UNTIL CHR.EXIT DO         ; * JMK102
               REPEAT                    ; * JMK102
               RR.PRO.NO=RR.PRO.NO[CHR.POS,9999]   ; * JMK102
               IF RR.PRO.NO#'' THEN      ; * JMK102
                  READ PBX.REC FROM F.PBX,RR.PRO.NO THEN     ; * JMK102
                     BOL=PBX.REC<1>      ; * JMK102 ; * JMK273
                     BOL.DIST=PBX.REC<2>           ; * JMK102 ; * JMK273
                     BOL=''              ; * JMK273
                     BOL.DIST=''         ; * JMK273
                     NPBVAL=DCOUNT(PBX.REC<1>,@VM)           ; * jMK273
                     FOR PBVAL=1 TO NPBVAL         ; * JMK273
                        IF PBX.REC<3,PBVAL>=CLIENT.ID THEN   ; * JMK273
                           BOL<1,-1>=PBX.REC<1,PBVAL>        ; * JMK273
                           BOL.DIST<1,-1>=PBX.REC<2,PBVAL>   ; * JMK273
                        END              ; * JMK273
                     NEXT PBVAL          ; * JMK273
                     PREV.BOL=BOL        ; * JMK102
                     PREV.BOL.DIST=BOL.DIST        ; * JMK102
                     VIN<13>=BOL.DIST    ; * JMK102
                  END                    ; * JMK102
               END                       ; * JMK102
            END                          ; * JMK102
         END                             ; * JMK102
         IF CLIENT.ID = "02427" THEN     ; * JMK270
            IF BOL#'' THEN               ; * JMK270
               READ M.BOL.REC FROM F.BOL.CRX,BOL THEN        ; * JMK270
                  SO.NUM=M.BOL.REC<25>   ; * JMK270
               END                       ; * JMK270
            END                          ; * JMK270
            IF SO.NUM='' THEN            ; * JMK270
               PBX.VIN=''                ; * JMK270
               PRO.NO.ROOT = FIELD(EDI.ID,"*",3)   ; * JMK270
               PBX.VIN<1>=PRO.NO.ROOT    ; * JMK270
               PBX.VOUT=''               ; * JMK270
               CALL GET.ROOT.NUMBER(PBX.VIN,PBX.VOUT)        ; * JMK270
               ID.PBX=PBX.VOUT<1>        ; * JMK270
               READ PBX.REC FROM F.PBX,ID.PBX THEN           ; * JMK270
                  LOCATE CLIENT.ID IN PBX.REC<3> SETTING PBX.POS THEN  ; * JMK270
                     BOL=PBX.REC<1,PBX.POS>        ; * JMK270
                     BOL.DIST=PBX.REC<2,PBX.POS>   ; * JMK270
                     PREV.BOL=BOL        ; * JMK270
                     PREV.BOL.DIST=BOL.DIST        ; * JMK270
                     VIN<13>=BOL.DIST    ; * JMK270
                     READ M.BOL.REC FROM F.BOL.CRX,BOL THEN  ; * JMK270
                        SO.NUM=M.BOL.REC<25>       ; * JMK270
                     END                 ; * JMK270
                  END                    ; * JMK270
               END                       ; * JMK270
            END                          ; * JMK270
            VIN<14>=SO.NUM               ; * JMK270
         END                             ; * JMK270
         IF CLIENT.ID = "40005" THEN     ; * JMK268
            IF BOL='' THEN               ; * JMK268
               PBX.VIN=''                ; * JMK268
               PBX.VIN<1>=PRO            ; * JMK268
               PBX.VOUT=''               ; * JMK268
               CALL GET.ROOT.NUMBER(PBX.VIN,PBX.VOUT)        ; * JMK268
               ID.PBX=PBX.VOUT<1>        ; * JMK268
               READ PBX.REC FROM F.PBX,RR.PRO.NO THEN        ; * JMK268
                  LOCATE CLIENT.ID IN PBX.REC<3> SETTING PBX.POS THEN  ; * JMK268
                     BOL=PBX.REC<1,PBX.POS>        ; * JMK268
                     BOL.DIST=PBX.REC<2,PBX.POS>   ; * JMK268
                     PREV.BOL=BOL        ; * JMK268
                     PREV.BOL.DIST=BOL.DIST        ; * JMK268
                     VIN<13>=BOL.DIST    ; * JMK268
                  END                    ; * JMK268
               END                       ; * JMK268
            END                          ; * JMK268
         END                             ; * JMK268
         VOUT=''

         IF DO.BOL.POP THEN              ; * NPR045 ; * DRF040
            IF M.BOL.REC NE '' THEN
               BOL=''                    ; * DRF040
               IF CLIENT.ID = "01517" THEN         ; * NPR045
                  TST.BOL = ID.BOL.CRX   ; * NPR045
                  LOCATE TST.BOL IN BOL<1> SETTING BL.POS ELSE         ; * NPR045
                     BOL=INSERT(BOL,1,BL.POS,0,TST.BOL)      ; * NPR045
                  END                    ; * NPR045
               END                       ; * NPR045

               *DF               IF CLIENT.ID = "01863" OR CLIENT.ID='02149' OR CLIENT.ID='02084' THEN       ; * JMK211 ; * DRF011
               IF CLIENT.ID = "01863" OR CLIENT.ID='02149' OR CLIENT.ID='02084' OR CLIENT.ID='05543' THEN      ; * JMK211 ; * DRF011
                  TST.BOL = TRIM(ID.BOL.CRX)       ; * JMK211
                  LOCATE TST.BOL IN BOL<1> SETTING BL.POS ELSE         ; * JMK211
                     BOL=INSERT(BOL,1,BL.POS,0,TST.BOL)      ; * JMK211
                  END                    ; * JMK211
               END                       ; * JMK211

               FLAG.REF.NO1 = CLIENT.REC(254)<1,19>
               FLAG.REF.NO2 = CLIENT.REC(254)<1,31>
               FLAG.REF.NO3 = CLIENT.REC(254)<1,32>
               IF FLAG.REF.NO1 = "Y" AND M.BOL.REC<25> NE '' THEN
                  TST.BOL = M.BOL.REC<25>          ; * NPR045
                  LOCATE TST.BOL IN BOL<1> SETTING BL.POS ELSE         ; * NPR045
                     BOL=INSERT(BOL,1,BL.POS,0,TST.BOL)      ; * NPR045
                  END                    ; * NPR045
               END
               IF FLAG.REF.NO2 = "Y" AND M.BOL.REC<42> NE '' THEN
                  IF CLIENT.ID = "01832" OR CLIENT.ID = "01870" THEN
                     NULL
                  END ELSE
                     TST.BOL = M.BOL.REC<42>       ; * NPR045
                     LOCATE TST.BOL IN BOL<1> SETTING BL.POS ELSE      ; * NPR045
                        BOL=INSERT(BOL,1,BL.POS,0,TST.BOL)   ; * NPR045
                     END                 ; * NPR045
                  END
               END
               IF FLAG.REF.NO3 = "Y" AND M.BOL.REC<43> NE '' THEN
                  TST.BOL = M.BOL.REC<43>          ; * NPR045
                  LOCATE TST.BOL IN BOL<1> SETTING BL.POS ELSE         ; * NPR045
                     BOL=INSERT(BOL,1,BL.POS,0,TST.BOL)      ; * NPR045
                  END                    ; * NPR045
               END
               IF CLIENT.ID='06023' THEN           ; * DRF087
                  IF M.BOL.REC<71>#'' THEN BOL=M.BOL.REC<71>           ; * DRF087
               END                       ; * DRF087
               IF CLIENT.ID='01499' THEN           ; * DRF087
                  IF M.BOL.REC<71>#'' THEN BOL<1,-1>=M.BOL.REC<71>     ; * DRF087
               END                       ; * DRF087
               IF CLIENT.ID='00872' THEN           ; * DRF085
                  IF ID.BOL.CRX#'' THEN  ; * DRF085
                     BOL=ID.BOL.CRX      ; * DRF085
                  END                    ; * DRF085
               END                       ; * DRF085
*DF               IF CLIENT.ID='06700' OR CLIENT.ID='07491' OR CLIENT.ID='05662' OR CLIENT.ID='07476' THEN    ; *DRF102 ; *DRF103 ; * DRF104
*DF                  CALL ELINE("COVERAGE")    ; * DRF102
               IF COVERAGE.CERT.NUM='' THEN        ; * DRF102
                  IF TRIM(M.BOL.REC<73>)#'' THEN   ; * DRF102
                     COVERAGE.CERT.NUM=TRIM(M.BOL.REC<73>)   ; * DRF102
                  END                    ; * DRF102
               END                       ; * DRF102
               IF COVERAGE.AMOUNT='' THEN          ; * DRF102
                  IF TRIM(M.BOL.REC<74>)#'' THEN   ; * DRF102
                     COVERAGE.AMOUNT=TRIM(M.BOL.REC<74>)     ; * DRF102
                  END                    ; * DRF102
               END                       ; * DRF102
*DF               END     ; * DRF102 ; * DRF104
            END
         END

         IF CLIENT.ID='05543' AND AFS.BOL THEN
            BOL=''
         END
         CALL FB.2.1.BOL.NEW(VIN,VOUT,CLIENT.ID,MAT CLIENT.REC,BOL,QI,'E')
         BOL.DIST=VOUT<3>                ; * JMK84
         N.BOLS = DCOUNT(BOL<1>,@VM)
         FOR I.BOL = 1 TO N.BOLS
            IF NOT(FRT.FLAG) THEN        ; * SWB07
               W.BOL = BOL<1,I.BOL>
               IF W.BOL[1,3] = "AFS" THEN
                  CALL ELINE("PO/BOL Numbers starting with AFS might be Truckload bills - Speak to FAP Manager")
                  GOSUB TL.BLOCK.EMAIL
                  GOTO 600
               END
               *               IF CLIENT.REC(254) NE "" AND M.BOL.REC='' THEN          ; * JMK211
               IF CLIENT.ID='01863' AND CLIENT.REC(254) NE "" AND (M.BOL.REC='' OR (W.BOL NE ID.BOL.CRX)) THEN           ; * RLM005
                  W.DIV.EXP=''           ; * RLM005
                  M.VIN = ''             ; * JMK211  ; * RLM005
                  M.VOUT = ''            ; * JMK211  ; * RLM005
                  M.BOL.REC = ''         ; * JMK211  ; * RLM005
                  M.VIN<1> = CLIENT.ID   ; * JMK211  ; * RLM005
                  M.VIN<2> = W.BOL       ; * JMK211  ; * RLM005
                  OPEN '','FB.BOL.CRX,':CLIENT.ID TO F.BOL.CRX ELSE    ; * RLM005
                     CALL ELINE("Can't open FB.BOL.CRX file for client ":CLIENT.ID)        ; * RLM005
                  END                    ; * RLM005
                  CALL FB.GET.BOL.DATA(M.VIN,M.VOUT,F.BOL.CRX,M.BOL.REC)         ; * JMK211  ; * RLM005
                  ID.BOL.CRX = M.VOUT<1>           ; * JMK211  ; * RLM005
                  CLIENT.ID2 = M.VOUT<2>           ; * JMK211  ; * RLM005
                  IF BOL.ID.USED='' THEN           ; * JMK211  ; * RLM005
                     BOL.ID.USED = ID.BOL.CRX      ; * JMK211  ; * RLM005
                  END                    ; * JMK211  ; * RLM005
               END                       ; * JMK211  ; * RLM005
            END
         NEXT I.BOL

         IF CLIENT.ID = 00981 THEN EXP.CODE = VOUT<2>
         IF CLIENT.ID = 00981 THEN
            IF DIVISION = 00003 THEN
               IF IN.OUT = 'I' THEN
                  EXP.CODE='11026000'
               END ELSE
                  EXP.CODE='50306000'
               END
            END
         END

         * Begin NKH41
         BOL.COUNT = DCOUNT(BOL,@VM)
         FOR X = 1 TO BOL.COUNT
            READ AIRGAS.PO.TEMP FROM F.AIRGAS.PO, BOL<1,X> THEN
               * Begin NKH46
               IF AIRGAS.PO.TEMP<5> = "FPV" OR "FPA" OR "FPC" THEN
                  ACC = INDEX(AIRGAS.PO.TEMP<1>,'AIRGAS',1)
                  IF ACC GT 0 THEN
                     IF IN.OUT = "I" THEN
                        HELP = 'Warning: INCO for BOL ':BOL<1,X>:' is ':AIRGAS.PO.TEMP<5>:' - Changing to Outboud. [O]verride'
                        MASK = "#"
                        CALL GEN.IN(74,23,MASK,'',Q,0,1,'','',2,74,23,0,QI,HELP,0,23)
                        CC+=LEN(QI)+1 ; GOSUB PRINT.CC
                        QI = OCONV(QI,'MCU')
                        IF QI # "O" THEN           ; * Override
                           IN.OUT = "O"
                        END
                        CRT @(5,8):IN.OUT
                     END
                  END
               END
               * End NKH46
            END
         NEXT X
         * End NKH41

         AIRGAS.PO.TEST=1                ; * DRF051
         IF CLIENT.ID='01113' AND CARRIER.ID='25492' THEN AIRGAS.PO.TEST=0       ; * DRF051
         IF CLIENT.ID='01113' AND CARRIER.ID='03624' THEN AIRGAS.PO.TEST=0       ; * DRF051
         IF CLIENT.ID='01113' AND CARRIER.ID='03079' THEN AIRGAS.PO.TEST=0       ; * DRF051
         IF CARRIER.ID='01248' THEN AIRGAS.PO.TEST=0         ; * DRF051
         IF (CLIENT.ID='01083' OR CLIENT.ID='01101' OR CLIENT.ID='00879' OR CLIENT.ID='01112' OR CLIENT.ID='01079' OR CLIENT.ID='01271' OR CLIENT.ID='01418' OR CLIENT.ID='01432' OR CLIENT.ID='01389' OR CLIENT.ID='01675' OR CLIENT.ID='05350' OR CLIENT.ID='05351' OR CLIENT.ID='05349' OR CLIENT.ID='01457' OR CLIENT.ID='01267' OR CLIENT.ID='01113' OR CLIENT.ID='05548') AND IN.OUT#'O' AND BILL.DATE >= '17452' THEN         ; * DRF051 ; * DRF063
            IF AIRGAS.PO.TEST THEN       ; * DRF051
               TEST.PO=BOL<1,1>          ; * DRF051
               TEST.PO=FIELD(TEST.PO,',',1)        ; * DRF051
               TEST.PO=FIELD(TEST.PO,' ',1)        ; * DRF051
               READ AIRGAS.PO.REC FROM F.AIRGAS.PO,TEST.PO THEN        ; * DRF051
                  NUM.OF.ITEM=DCOUNT(AIRGAS.PO.REC<3>,@VM)
                  DIVISION=AIRGAS.PO.REC<3,NUM.OF.ITEM>'R%5'           ; * DRF051
                  IF CLIENT.ID='01267' OR CLIENT.ID='05548' OR CLIENT.ID='01638' OR CLIENT.ID='01675' OR CLIENT.ID='05638' OR CLIENT.ID='01749' OR CLIENT.ID='05500' OR CLIENT.ID='05026' OR CLIENT.ID='01457' OR CLIENT.ID='05049' OR CLIENT.ID='01389' OR CLIENT.ID='01644' THEN       ; * DRF051 ;* DRF097 GRB18
                     DIVISION=AIRGAS.PO.REC<3,NUM.OF.ITEM>'R%6'        ; * DRF051
                  END                    ; * DRF051
                  DIVISION=CHANGE(DIVISION,@VM,'0')
                  IF AIRGAS.PO.REC<3>='' THEN DIVISION=''    ; * DRF051
                  MATREAD DIV.REC FROM F.DIV,DIVISION THEN   ; * DRF051
                     IF DIV.REC(7)='I' THEN        ; * DRF051
                        CALL ELINE ('The division :':DIVISION:' is marked inactive')       ; * DRF051
                        CC+=1 ; GOSUB PRINT.CC
                        GOTO 610
                     END                 ; * DRF051
                  END ELSE               ; * DRF051
                     CALL ELINE ('The division :':DIVISION:' is not on file for this client. Check PO')        ; * DRF051
                     CC+=1 ; GOSUB PRINT.CC
                     GOTO 610
                  END                    ; * DRF051
               END ELSE                  ; * DRF051
                  *DF                  IF IN.OUT='T' OR (IN.OUT='I' AND TEST.PO = '') THEN
                  * The below changes was made on 12/29/16 - DRF
                  IF IN.OUT='T' OR IN.OUT='I' THEN
                     CALL ELINE('PO ':TEST.PO:' not on file. Bill must be rejected')       ; * DRF051
                     REJECT.ERR.MSG='AU290'        ; * DRF051
                     PRO.REC=OLD.PRO.REC           ; * DRF051
                     PRO.REC<39>='R'     ; * DRF051
                     REJECT.FLAG=PRO.REC<39>       ; * DRF051
                     PRO.REC<66>='E'     ; * DRF051
                     REJ.TYPE=PRO.REC<66>:'-NEW'   ; * DRF051
                     PRO.REC<59>= REJECT.ERR.MSG   ; * DRF051
                     PRO.REC<62>=USER:@SVM:DATE()  ; * DRF051
                     GOSUB INIT.REJECT.INFO        ; * DRF051
                     RVIN='' ; RVOUT=''  ; * DRF051
                     RVIN<1> = 'E'       ; * DRF051
                     RVIN<2> = CARRIER.ID          ; * DRF051
                     RVIN<3> = CLIENT.ID           ; * DRF051
                     RVIN<4> = FIELD(PRO.ID,'*',2)           ; * DRF051
                     RVIN<5> = 'R'       ; * DRF051
                     RVIN<6> = BILL.DATE           ; * DRF051
                     RVIN<7> = ACTUAL.CHG          ; * CARRIER.CHG ; * DRF051
                     RVIN<8> = REJ.TYPE  ; * DRF051
                     REJECT.REASONS = REJECT.ERR.MSG         ; * DRF051
                     CALL FB.2.1.REJECT.KED(RVIN, RVOUT, REJECT.REASONS, MAILING.ADDR)     ; * DRF051
                     REJECT.FLAG = RVOUT<2>        ; * DRF051
                     MULTI.PRO.ID = RVOUT<4>       ; * DRF051
                     NUM.MULTI.PROS = DCOUNT(MULTI.PRO.ID<1>,@VM)      ; * DRF051
                     MULTI.PRO.DATE = RVOUT<6>     ; * DRF051
                     MULTI.PRO.CHG = RVOUT<7>      ; * DRF051
                     MULTI.PRO.REJ = RVOUT<8>      ; * DRF051
                     IF RVOUT<9>='Y' THEN          ; * DRF051
                        PROC.DATE=''     ; * DRF051
                        IF DATE() LE CLIENT.REC(82) THEN     ; * DRF051
                           BILL.DATE=CLIENT.REC(82)+1        ; * DRF051
                        END ELSE         ; * DRF051
                           BILL.DATE=DATE()        ; * DRF051
                        END              ; * DRF051
                     END                 ; * DRF051
                     BILL.DATE = MULTI.PRO.DATE<1,1>         ; * DRF051
                     ACTUAL.CHG = MULTI.PRO.CHG<1,1>         ; * DRF051

                     IF CARRIER.CHG+0 = 0 THEN CARRIER.CHG=MULTI.PRO.CHG<1,1>    ; * DRF051
                     REJ.TYPE = MULTI.PRO.REJ<1,1>           ; * DRF051
                     GOSUB 8100          ; * Redraw Screen Fields ; * DRF051
                     GOSUB 8200          ; * Redraw Screen Data ; * DRF051
                     BEGIN CASE          ; * DRF051
                        CASE RVOUT<1>='EX'         ; * DRF051
                           GOTO PROGRAM.EXIT       ; * NKH10          ; * DRF051
                        CASE RVOUT<1>='X' OR REJECT.FLAG = ''          ; * DRF051
                           GOTO 400      ; * DRF051
                     END CASE            ; * DRF051
                     REJECTION.ALTERED = RVOUT<3>  ; * DRF051
                     ACCESS.REASON = "REJ"         ; * DRF051
                     GOSUB UPD.FB.BILLS.ACCESS     ; * NKH56
                     GOTO 4900           ; * DRF051
                  END
               END                       ; * DRF051
            END                          ; * DRF051
         END                             ; * DRF051
         IF CLIENT.ID = '01863' AND M.BOL.REC<2> NE "" THEN  ; * NPR060
            W.DIV.EXP = M.BOL.REC<29>    ; * RLM005
            IF W.DIV.EXP = "" THEN       ; * NPR060
               CALL ELINE("Division not found on BOL, using cust/vend division")           ; * NPR060
            END ELSE                     ; * NPR060
               W.DIV = FIELD(W.DIV.EXP,"*",2)      ; * NPR060 ; * DRF059

               IF W.DIV NE "" THEN       ; * NPR060
                  DIVISION = W.DIV "R%5"           ; * NPR060
               END                       ; * NPR060
            END                          ; * NPR060
         END                             ; * NPR060

         IF CLIENT.ID = '10171' AND M.BOL.REC<2> NE "" AND DIVISION='' THEN      ; * NPR060 ; * DRF037    ; * DRF083
            *DF            W.DIV.EXP = M.BOL.REC<29>    ; * RLM005 ; * DRF037    ; * DRF083
            W.DIV = FIELD(M.BOL.REC<42>,'(',1,1)   ; * DRF083
            *DF            IF W.DIV.EXP = "" THEN       ; * NPR060 ; * DRF037    ; * DRF083
            IF W.DIV = "" THEN           ; * NPR060 ; * DRF037    ; * DRF083
               CALL ELINE("Division not found on BOL.")      ; * NPR060 ; * DRF037    ; * DRF083
            END ELSE                     ; * NPR060 ; * DRF037    ; * DRF083
               *DF               W.DIV = M.BOL.REC<29>[6,3]          ; * RLM003 ; * DRF037    ; * DRF083
               IF W.DIV NE "" THEN       ; * NPR060 ; * DRF037    ; * DRF083
                  DIVISION = W.DIV "R%5"           ; * NPR060 ; * DRF037    ; * DRF083
               END                       ; * NPR060 ; * DRF037    ; * DRF083
            END                          ; * NPR060 ; * DRF037    ; * DRF083
         END                             ; * NPR060 ; * DRF037    ; * DRF083
         IF CLIENT.ID = '01675' AND M.BOL.REC<2> NE "" THEN  ; * DRF043
            W.DIV.EXP = M.BOL.REC<29>    ; * DRF043
            IF W.DIV.EXP # "" THEN       ; * DRF043
               W.DIV = M.BOL.REC<29>[8,4]          ; * DRF043
               DIVISION = W.DIV "R%5"    ; *  Client indicated BOL div overides Vend Cust ; * DRF043
            END                          ; * DRF043
         END                             ; * DRF043
         IF CLIENT.ID = '01763' AND IN.OUT = "I" THEN
            W.BOL = BOL<1,1>
            IF W.BOL[1,1] = "H" THEN
               DIVISION = "00001"
            END
            IF W.BOL[1,1] = "T" OR W.BOL[1,1] = "L" THEN
               DIVISION = "00002"
            END
         END
         IF CLIENT.ID = 01053 THEN       ; * NPR10
            EXP.CODE = VOUT<2>
            BOL.ACCRUAL.COST = VOUT<5>   ; * NPR10
         END                             ; * NPR10
         CC+=VOUT<1> ; GOSUB PRINT.CC
         QI = OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI = 'X'
               BACK.FLAG = 1
               GOTO 1475
            CASE QI = 'EX'
               GOTO PROGRAM.EXIT         ; * NKH10
         END CASE
         IF BOL='-' THEN
            LOCATE 'BOL' IN MISSING.DATA<1> SETTING MISSING.POS ELSE
               MISSING.DATA<1,-1>='BOL'
            END
         END
         IF PREV.BOL='-' AND BOL # PREV.BOL THEN
            LOCATE 'BOL' IN MISSING.DATA<1> SETTING MISSING.POS THEN
               DEL MISSING.DATA<1,MISSING.POS>
            END
         END
         IF CLIENT.ID = 01529 AND IN.OUT='O' THEN  ; * JMK133
            IF USER='DAVID' THEN CALL ELINE('01529 CHECK')
            EXP.CODE=VOUT<2>             ; * JMK133
            WT.REJ.TEST=1                ; * JMK137
            IF CARRIER.ID='00015' THEN WT.REJ.TEST=0         ; * JMK137
            IF CARRIER.ID='00041' THEN WT.REJ.TEST=0         ; * JMK137
            IF CARRIER.ID='01075' THEN WT.REJ.TEST=0         ; * JMK137
            IF CARRIER.ID='01312' THEN WT.REJ.TEST=0         ; * JMK137
            IF CARRIER.ID='12440' THEN WT.REJ.TEST=0         ; * NPR04
            IF WT.REJ.TEST THEN          ; * JMK137
               IF BOL='' THEN            ; * JMK133
                  LOCATE 'BOL' IN MISSING.DATA<1> SETTING MISSING.POS ELSE       ; * JMK133
                     MISSING.DATA<1,-1>='BOL'      ; * JMK133
                  END                    ; * JMK133
               END                       ; * JMK133
               IF EXP.CODE='' THEN       ; * JMK133
                  LOCATE 'EXP' IN MISSING.DATA<1> SETTING MISSING.POS ELSE       ; * JMK133
                     MISSING.DATA<1,-1>='EXP'      ; * JMK133
                  END                    ; * JMK133
               END                       ; * JMK133
            END                          ; * JMK137
         END                             ; * JMK133
         IF CLIENT.ID = 01613 AND IN.OUT='O' THEN
            EXP.CODE=VOUT<2>             ; * JMK133
            IF EXP.CODE='' THEN          ; * JMK133
               LOCATE 'EXP' IN MISSING.DATA<1> SETTING MISSING.POS ELSE          ; * JMK133
                  MISSING.DATA<1,-1>='EXP'         ; * JMK133
               END                       ; * JMK133
            END                          ; * JMK133
         END
         IF CLIENT.ID='00883' AND CARRIER.ID = '02653' AND IN.OUT='O' THEN
            IF BOL = '' THEN
               CALL ELINE("You must input a BOL for Pollock when the carrier is Conway")
               GOTO 1500
            END
         END
         IF CLIENT.ID='01614' THEN
            BOL.TST = BOL<1,1>
            IF DIVISION = 3 AND IN.OUT='O' THEN
               BOL.PREFIX = BOL.TST[1,4] ; BOL.SUFFIX = BOL.TST[5,999]
               IF BOL.PREFIX = "7300" AND NUM(BOL.SUFFIX) AND LEN(BOL.SUFFIX) = 4 THEN
                  NULL
               END ELSE
                  CALL ELINE("BOL Number should commence with 7300 and be 8 numbers long")
               END
            END ELSE
               BOL.PREFIX = BOL.TST[1,3] ; BOL.SUFFIX = BOL.TST[4,999]
               IF BOL.PREFIX = "800" AND NUM(BOL.SUFFIX) AND LEN(BOL.SUFFIX) = 5 THEN
                  NULL
               END ELSE
                  CALL ELINE("BOL Number should commence with 800 and be 8 numbers long")
               END
            END
         END
         IF CLIENT.ID='10298' AND DIVISION='00004' THEN
            BEGIN CASE
               CASE NOT(NUM(BOL)) ; NULL
               CASE BOL GE "310378" AND BOL LE "310500"
                  EXP.CODE='620-666-666-612'
                  DTAB<1>=EXP.CODE
               CASE BOL GE "312900" AND BOL LE "313200"
                  EXP.CODE='620-666-666-612'
                  DTAB<1>=EXP.CODE
            END CASE
         END
         IF CLIENT.ID = 00972 THEN
            IF EXP.CODE='814000094058' AND BOL='99999' THEN
               EXP.CODE='814000002075'
               DTAB<1>=EXP.CODE
               CRT @(5,12):EXP.CODE:' ':EXP.CODE:@(-4):
            END
         END
         IF CLIENT.ID = '01636' AND IN.OUT='O' THEN          ; * JMK152
            EXP.CODE=VOUT<2>             ; * JMK152
            EXP.DIST=VOUT<4>             ; * JMK152
            EXP.LIST=VOUT<2>             ; * JMK152
            IF EXP.CODE='' THEN          ; * JMK152
               LOCATE 'EXP' IN MISSING.DATA<1> SETTING MISSING.POS ELSE          ; * JMK152
                  MISSING.DATA<1,-1>='EXP'         ; * JMK152
               END                       ; * JMK152
            END                          ; * JMK152
            DTAB<1>=EXP.LIST             ; * JMK152
            EXP.CODE=DTAB<1,1>           ; * JMK152
         END                             ; * JMK152
         IF CLIENT.ID = 01344 THEN
            EXP.CODE=VOUT<2>
            IF EXP.CODE#'' THEN DIVISION=EXP.CODE[5,4]'R%5'

            IF EXP.CODE='' THEN
               LOCATE 'EXP' IN MISSING.DATA<1> SETTING MISSING.POS ELSE
                  MISSING.DATA<1,-1>='EXP'
               END
            END
         END
         IF CLIENT.ID = "01334" THEN
            W.SHIPPER = ""
            W.CONSIGNEE = ""

            Z.TESTNAME = OCONV(VC.DESC,"MCU")

            IF IN.OUT='I' THEN
               W.CONSIGNEE = Z.TESTNAME
            END

            IF IN.OUT='O' THEN
               W.SHIPPER = Z.TESTNAME
            END
            HIN = '' ; HOUT = ''         ; * Set EDI.REC= '' for keyed bills
            HIN = IN.OUT                 ; * In / Out
            HIN<2> = ORIG.ZIP            ; * Origination Zip.
            HIN<3> = DEST.ZIP            ; * Destination Zip.
            HIN<4> = VC.DESC             ; * Cust./Vend.
            HIN<5> = W.SHIPPER           ; * Shipper
            HIN<6> = W.CONSIGNEE         ; * Consignee
            HIN<7> = BOL                 ; * Bol #
            HIN<8> = CARRIER.ID          ; * Carrier #
            HIN<9> = PRO.REC<7>          ; * Bill Amount
            IN.OUT.HOLD = IN.OUT
            CALL GET.HUSSEY.DIV.EXP(HIN,HOUT)
            H.DIVISION.CODE = HOUT<1>
            H.EXPENSE.CODE = HOUT<2>
            IN.OUT = HOUT<3>
            ERROR.OUT = HOUT<4>
            IF H.DIVISION.CODE = "" THEN H.DIVISION.CODE = DIVISION
            HUSSEY.ERRORS = 0
            IF DIVISION NE H.DIVISION.CODE THEN
               CALL ELINE("Division should be ":H.DIVISION.CODE)
               DIVISION = H.DIVISION.CODE
               HUSSEY.ERRORS = 1
            END
            IF EXP.CODE NE H.EXPENSE.CODE THEN
               CALL ELINE("Expense code should be ":H.EXPENSE.CODE)
               EXP.CODE = H.EXPENSE.CODE
               HUSSEY.ERRORS = 1
            END
            IF IN.OUT NE IN.OUT.HOLD THEN
               CALL ELINE("Shipment IOT should be ":IN.OUT)
               HUSSEY.ERRORS = 1
            END
            IF IN.OUT = "O" AND (CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' OR CARRIER.ID='01075') THEN        ; *NPR023  Ignore checks for Fedex and UPS Outbound
               NULL                      ; *NPR023
            END ELSE                     ; *NPR023
               IF HUSSEY.ERRORS THEN GOTO 500
            END                          ; *NPR023
         END
      END ELSE
         IF BACK.FLAG THEN GOTO 1475
      END
      *      IF CLIENT.ID='01127' OR CLIENT.ID='00761' OR CLIENT.ID='01596' OR CLIENT.ID='01721' OR CLIENT.ID='01763' OR CLIENT.ID='01019' OR CLIENT.ID='01712' OR CLIENT.ID='01419' OR CLIENT.ID='01344' OR ((CLIENT.ID='01083' OR CLIENT.ID='01101' OR CLIENT.ID='00879' OR CLIENT.ID='01112' OR CLIENT.ID='01079' OR CLIENT.ID='01271' OR CLIENT.ID='01418' OR CLIENT.ID='01432' OR CLIENT.ID='01389' OR CLIENT.ID='01675' OR CLIENT.ID='05350' OR CLIENT.ID='05351' OR CLIENT.ID='05349' OR CLIENT.ID='01457' OR CLIENT.ID='01267' OR CLIENT.ID='01113' OR CLIENT.ID='05548')) THEN GOTO 600  ; * NPR019 ; * DRF051 ; * DRF063  ; * NKH55
      IF CLIENT.ID='00761' OR CLIENT.ID='01596' OR CLIENT.ID='01721' OR CLIENT.ID='01763' OR CLIENT.ID='01019' OR CLIENT.ID='01712' OR CLIENT.ID='01419' OR CLIENT.ID='01344' OR ((CLIENT.ID='01083' OR CLIENT.ID='01101' OR CLIENT.ID='00879' OR CLIENT.ID='01112' OR CLIENT.ID='01079' OR CLIENT.ID='01271' OR CLIENT.ID='01418' OR CLIENT.ID='01432' OR CLIENT.ID='01389' OR CLIENT.ID='01675' OR CLIENT.ID='05350' OR CLIENT.ID='05351' OR CLIENT.ID='05349' OR CLIENT.ID='01457' OR CLIENT.ID='01267' OR CLIENT.ID='01113' OR CLIENT.ID='05548')) THEN GOTO 600   ; * NPR019 ; * DRF051 ; * DRF063  ; * NKH55
      IF BOL.FIRST THEN
         IF CLIENT.ID = '01567' THEN
            GOTO 600
         END ELSE
            GOTO 1297
         END
      END
      GOSUB 8100                         ; * Display screen    ; * RLM005
      GOSUB 8200                         ; * Display data      ; * RLM005
      IF CLIENT.ID='05171' THEN
         IF IN.OUT='I' THEN
            IF UFLDS<1>='' THEN
               UFLDS<1>=BOL
            END
            IF UFLDS<3>='' THEN
               UFLDS<3>=VC.DESC
            END
            IF UFLDS<4>='' THEN
               UFLDS<4>=VC.ADDR
            END
            IF UFLDS<5>='' THEN
               UFLDS<5>=CLIENT.NAME
            END
            IF UFLDS<6>='' THEN
               UFLDS<6>=DIV.REC(14)
            END
         END
         IF IN.OUT='O' THEN
            IF UFLDS<3>='' THEN
               UFLDS<3>=CLIENT.NAME
            END
            IF UFLDS<4>='' THEN
               UFLDS<4>=DIV.REC(14)
            END
            IF UFLDS<5>='' THEN
               UFLDS<5>=VC.DESC
            END
            IF UFLDS<6>='' THEN
               UFLDS<6>=VC.ADDR
            END
         END
         IF IN.OUT='T' THEN
            IF UFLDS<3>='' THEN
               UFLDS<3>=VC.DESC
            END
            IF UFLDS<4>='' THEN
               UFLDS<4>=VC.ADDR
            END
         END
         CALL FB.2.1.USER.FIELDS(UVIN,MAT CLIENT.REC,UFLDS)  ; * JMK49
         GOSUB 8100                      ; * JMK49
         GOSUB 8200                      ; * JMK49
      END

*****************************************************************
1550: * Enter discounts
*****************************************************************
      IF CL.DISC.FLAG = 'Y' THEN
         BACK.FLAG = 0
         CALL FB.2.1.DISC(DISC.PERC,DISC.DET,NET,QI)
         QI = OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI = 'X'
               BACK.FLAG = 1
               GOTO 1500
            CASE QI = 'EX'
               GOTO PROGRAM.EXIT         ; * NKH10
         END CASE

*****************************************************************
1555:
*****************************************************************
         IF DISC.PERC = 0 THEN
            DISC.FLAG = ''
            LOOP
            UNTIL DISC.FLAG # '' DO
               HELP = "Enter Y if pro is discountable or N if not."
               CRT BELL:BELL
               CALL GEN.IN(36,18,'Is pro discountable? N','',Q,1,1,'','',1,-1,18,0,QI,HELP,0,23)
               CC+=LEN(QI) ; GOSUB PRINT.CC
               QI = OCONV(QI,'MCU')
               BEGIN CASE
                  CASE QI = 'N'
                     DISC.FLAG = 'N'
                     HELP = "Enter Y if pro is minimum charge or N if not."
                     CRT BELL:BELL

*****************************************************************
1560:
*****************************************************************
                     CALL GEN.IN(36,19,'Is pro minimum charge? N','',Q,1,1,'','',1,-1,19,0,QI,HELP,0,23)
                     CC+=LEN(QI) ; GOSUB PRINT.CC
                     QI = OCONV(QI,'MCU')
                     BEGIN CASE
                        CASE QI = 'N' ! QI = ''
                           MIN.CHG = 'N'
                        CASE QI = 'Y'
                           IF NET LE '6500' THEN
                              MIN.CHG = 'Y'
                           END ELSE
                              CALL ELINE('Net value of pro is greater than $65.00')
                              CC+=1 ; GOSUB PRINT.CC
                              MIN.CHG = 'N'
                           END
                        CASE 1
                           GOTO 1560
                     END CASE
                     QI = OCONV(QI,'MCU')
                  CASE QI = 'Y'
                     DISC.FLAG = 'Y'
                  CASE 1
                     CALL ELINE('Invalid entry!')
                     CC+=1 ; GOSUB PRINT.CC
               END CASE
            REPEAT
         END
         CARRIER.CHG = NET
      END ELSE
         IF BACK.FLAG THEN GOTO 1500
      END

*****************************************************************
1600: * Enter weight
*****************************************************************
      IF CLIENT.ID#'00574' THEN
         IF (AUDIT='Y' OR (AUDIT='U' AND AVOUT<6>#'') OR AUDIT='S') AND (AUDIT.TYPE[1,3]='LTL' OR AUDIT.TYPE='AIRBRN' OR (AUDIT.TYPE[1,2]='TL' AND USER # '')) THEN
            IF BACK.FLAG THEN GOTO 1500
            AUTO.CAL=1
            GOTO 1700
         END
      END
      IF CL.WT.FLAG = 'Y' THEN
         IF DO.BOL.POP THEN
            WEIGHT.POP.FLAG = BOL.POP.VER.ARR<1,16>
            IF WEIGHT.POP.FLAG = 'Y' AND NOT(BACK.FLAG) THEN
               WEIGHT = BOL.POP.VER.ARR<4,16>
            END
         END
         BACK.FLAG = 0
         HELP = 'Ent the ship wght. Ent. - behind the wght to convert kilo to lbs. + to add wts'
         IF WEIGHT = '' THEN REQ = 1 ELSE REQ = 0
         IF (CLIENT.ID='01323' OR CLIENT.ID='01324' OR CLIENT.ID='01325' OR CLIENT.ID='01326' OR CLIENT.ID='01311') AND (FRT.FLAG OR USER = 'JAUDIT' OR USER='FDDAVID' OR SPECIAL.NIKKI.VACATION) THEN   ; * SWB07
            CALL GEN.IN(0,20,WEIGHT'R#7','',Q,REQ,7,'','',2,-7,20,0,QI,HELP,0,23)
         END ELSE
            CALL GEN.IN(0,19,WEIGHT'R#6','',Q,REQ,7,'','',2,-6,19,0,QI,HELP,0,23)
         END
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC
         IF LEN(QI)=7 THEN
            IF ((CLIENT.ID='01323' OR CLIENT.ID='01324' OR CLIENT.ID='01325' OR CLIENT.ID='01326' OR CLIENT.ID='01311') AND (FRT.FLAG OR USER = 'JAUDIT' OR USER='FDDAVID' OR SPECIAL.NIKKI.VACATION)) OR QI[LEN(QI),1]='-' ELSE
               CALL ELINE('ERROR - Weight is to large')
               GOTO 1600
            END
         END
         QI = OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI = 'X'
               IF (CLIENT.ID='01323' OR CLIENT.ID='01324' OR CLIENT.ID='01325' OR CLIENT.ID='01326' OR CLIENT.ID ='01311') AND (FRT.FLAG OR USER = 'JAUDIT' OR USER='FDDAVID' OR SPECIAL.NIKKI.VACATION) THEN      ; * SWB07
                  CRT @(0,20):'        Dim':
               END ELSE
                  CRT @(0,19):'       ':
               END
               BACK.FLAG = 1
               GOTO 1550
            CASE QI = 'EX'
               GOTO PROGRAM.EXIT         ; * NKH10
            CASE CHANGE.FLAG & QI = ''
               Q = WEIGHT
            CASE QI = ''
               Q = WEIGHT
            CASE QI[LEN(QI),1]='-'
               QI=QI[1,LEN(QI)-1]
               IF NUM(QI) THEN
                  QI=QI/.45359
                  QI=QI'R0'
                  IF LEN(QI)=7 THEN
                     CALL ELINE('Converted weight is larger than six digits')
                     GOTO 1600
                  END
                  Q=QI
               END ELSE
                  GOTO 1600
               END
            CASE QI[LEN(QI),1]='+'
               CRT @(0,22):"Enter weights seperated by a '+' "
               CRT @(0,21): ; INPUT W.WEIGHT.STR
               CONVERT " " TO "" IN W.WEIGHT.STR
               N.WTS = DCOUNT(W.WEIGHT.STR,"+")
               W.WEIGHT.TOT = 0
               FOR WT = 1 TO N.WTS
                  W.WGHT = FIELD(W.WEIGHT.STR,"+",WT)
                  IF NUM(W.WGHT) THEN W.WEIGHT.TOT += W.WGHT
               NEXT WT
               CRT @(0,21): @(-3)
               IF NUM(W.WEIGHT.TOT) THEN
                  QI=W.WEIGHT.TOT
                  QI=QI'R0'
                  Q=QI
               END ELSE
                  CALL ELINE("Weights should be numeric")
                  GOTO 1600
               END
            CASE NUM(QI)
               Q = QI
            CASE 1
               GOTO 1600
         END CASE
         IF IN.OUT='O' AND ZIP.ARR#'' AND CLIENT.ID='00574' THEN
            TL.WEIGHT=0
            FOR XX = 1 TO DCOUNT(ZIP.ARR<5>,@VM)
               TL.WEIGHT=TL.WEIGHT+ZIP.ARR<5,XX>
            NEXT XX
            IF Q # TL.WEIGHT THEN
               CALL ELINE('Weight does not match the weight for each zip')
               GOTO 1600
            END
         END
         IF CLIENT.ID = 01529 AND IN.OUT='O' THEN  ; * JMK133
            IF USER='DAVID' THEN CALL ELINE('01529 - PRESS BREAK - 2')
            WT.REJ.TEST=1                ; * JMK134
            IF CARRIER.ID='00015' THEN WT.REJ.TEST=0         ; * JMK134
            IF CARRIER.ID='00041' THEN WT.REJ.TEST=0         ; * JMK134
            IF CARRIER.ID='01075' THEN WT.REJ.TEST=0         ; * JMK134
            IF CARRIER.ID='01312' THEN WT.REJ.TEST=0         ; * JMK134
            IF CARRIER.ID='12440' THEN WT.REJ.TEST=0         ; * NPR04
            IF WT.REJ.TEST THEN          ; * JMK134
               TEST.WT.AMT=0             ; * JMK133
               BOL.NVAL=DCOUNT(BOL,@VM)  ; * JMK133
               FOR BOL.VAL=1 TO BOL.NVAL           ; * JMK133
                  READ CLBOL.REC FROM F.BOL.CRX,BOL<1,BOL.VAL> ELSE CLBOL.REC=''           ; * JMK133
                  CL.WEIGHT=CLBOL.REC<22>+0        ; * JMK133
                  TEST.WT.AMT+=CL.WEIGHT           ; * JMK133
               NEXT BOL.VAL              ; * JMK133
               BEGIN CASE                ; * JMK133
                  CASE TRANS.MODE=2 OR TRANS.MODE=15         ; * JMK133
                     CL.WT.MIN=TEST.WT.AMT*.95     ; * JMK133
                     CL.WT.MAX=TEST.WT.AMT*1.05    ; * JMK133
                  CASE 1                 ; * JMK133
                     CL.WT.MIN=TEST.WT.AMT-5.0     ; * JMK133 ; * JMK142
                     CL.WT.MAX=TEST.WT.AMT+5.0     ; * JMK133 ; * JMK142
               END CASE                  ; * JMK133
               IF Q < CL.WT.MIN OR Q > CL.WT.MAX THEN        ; * JMK133
                  WT.REJECT=1            ; * JMK133
               END                       ; * JMK133
            END                          ; * JMK134
         END                             ; * JMK133
         LOCATE Q IN CARRIER.MODE.WGT<1> BY "AR" SETTING POS ELSE NULL
         T.MODE.BY.WGT = OCONV(CARRIER.MODE.BY.WGT<1,POS>,'MCU')
         LTL.CAR=T.MODE.BY.WGT=1         ; * JMK187
         TL.CAR=T.MODE.BY.WGT=6          ; * JMK187
         AIR.CAR=T.MODE.BY.WGT=12        ; * JMK187
         BEGIN CASE
            CASE (CLIENT.ID='01323' OR CLIENT.ID='01324' OR CLIENT.ID='01325' OR CLIENT.ID='01326' OR CLIENT.ID='01311') AND (FRT.FLAG OR USER = 'JAUDIT' OR USER='FDDAVID' OR SPECIAL.NIKKI.VACATION)   ; * SWB07
               NULL
            CASE T.MODE.BY.WGT='3'
               IF Q > 250000 THEN
                  CALL ELINE('Weight can not be greater than 250000')
                  GOTO 1600
               END
            CASE CLIENT.ID = '00574'
               IF Q > 150000 THEN
                  CALL ELINE('Weight can not be greater than 150000')
                  GOTO 1600
               END
            CASE CLIENT.ID = '01311' AND T.MODE.BY.WGT='6'
            CASE T.MODE.BY.WGT='1'
               IF Q > 50000 THEN
                  CALL ELINE('Weight can not be greater than 50000')
                  GOTO 1600
               END
            CASE T.MODE.BY.WGT='8'
               NULL
            CASE 1
               IF Q > 99999 THEN
                  CALL ELINE('Weight can not be greater than 99999')
                  GOTO 1600
               END
         END CASE
         WEIGHT = Q
         BEGIN CASE
            CASE CARRIER.ID="00015"
            CASE CARRIER.ID="00143"
            CASE CARRIER.ID="00365"
            CASE CARRIER.ID="00041"
            CASE 1
               CALL FB.CLEAR.WINDOW
         END CASE
         IF (CLIENT.ID='01323' OR CLIENT.ID='01324' OR CLIENT.ID='01325' OR CLIENT.ID='01326' OR CLIENT.ID='01311') AND (FRT.FLAG OR USER='JAUDIT' OR USER='FDDAVID' OR SPECIAL.NIKKI.VACATION) THEN     ; * SWB07
            CRT @(0,20):WEIGHT'R#7':'  Dim'
         END ELSE
            CRT @(0,19):WEIGHT'R#6'
         END
      END ELSE
         IF BACK.FLAG THEN GOTO 1550
      END
      AUTO.CAL=1
      IF WEIGHT > 50000 THEN CALL ELINE('WARNING! Weight is over 50,000 lbs! Check it!')
      * Begin NKH81
*      LOCATE('6',CARRIER.REC<44>,1;AL) THEN
      IF CLASSES = '' THEN
         CLASSES = '50'
         WEIGHTS = WEIGHT
      END
*      END
      * End NKH81

*****************************************************************
1700: * Enter carrier charge
*****************************************************************
      IF SU.FLAG THEN
         IF NOT(OK.TO.EDIT) THEN GO 1950
      END
      IF AUDIT='Y' OR (AUDIT='U' AND AVOUT<9>#'') THEN
         IF NOT(FRT.FLAG) THEN
            IF BACK.FLAG THEN GOTO 1600
            GOTO 1800
         END
      END
      BACK.FLAG = 0
      HELP = "Enter the carrier charge. [X]=Back [EX]=Exit"
      IF CARRIER.CHG = '' THEN REQ = 1 ELSE REQ = 0
      CALL GEN.IN(6,19,CARRIER.CHG'R26#9','AMT2',Q,REQ,9,'','',2,-9,19,0,QI,HELP,0,23)
      CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      QI = OCONV(QI,'MCU')
      IF QI[LEN(QI),1]='+' THEN
         FLAT.RATE=1
         QI=QI[1,LEN(QI)-1]
      END
      BEGIN CASE
         CASE QI = ''
            Q = CARRIER.CHG
         CASE QI = 'X'
            CRT @(6,19):'         ':
            BACK.FLAG = 1
            GOTO 1600
         CASE QI = 'EX'
            GOTO PROGRAM.EXIT            ; * NKH10
         CASE (CLIENT.ID = '00885' OR CLIENT.ID = '00223" OR CLIENT.ID= "00373' OR CLIENT.ID='00924' OR CLIENT.ID='01228' OR CLIENT.ID='01212' OR CLIENT.ID='01088' OR CLIENT.ID='01674' OR CLIENT.ID='01992' OR (CLIENT.ID='02079' AND LTL.CAR)) AND QI='0'         ; *SWB01 ; * DRF046 ; * DFR106
            AUTO.CAL=0
            VER.CODE='CC' ; VER.TYPE='R' ; GOSUB UPDATE.VERIFY
            VER.CODE='VD' ; VER.TYPE='R' ; GOSUB UPDATE.VERIFY
            GOTO 1700
         CASE NUM(QI)
            VAR.ARR = ''
            IF USER.TYPE#'A' THEN ACTUAL.CHG = ''
         CASE 1
            GOTO 1700
      END CASE
      IF Q[LEN(Q),1]='+' THEN Q=Q[1,LEN(Q)-1]

      IF CLIENT.ID='01380' AND USER.TYPE#'A' AND IN.OUT='O' AND (CARRIER.ID='08354' OR CARRIER.ID='01906' OR CARRIER.ID='15994' OR CARRIER.ID='16058') THEN      ; * JMK87; * JMK94
         IF Q#CARRIER.CHG THEN
            Q=Q*.8
            Q=Q'R0'
         END
      END
      IF CLIENT.ID='01380' AND USER.TYPE#'A' AND IN.OUT='T' AND (CARRIER.ID='08354') THEN  ; * JMK87; * JMK94 ; * DRF070
         IF Q#CARRIER.CHG THEN
            Q=Q*.8
            Q=Q'R0'
         END
      END
      IF OLD.PRO.REC<88>#'' AND (CARRIER.ID = "00015" OR CARRIER.ID = "01075" OR CARRIER.ID="00143") THEN      ; ** EDI BILL
         IF Q#CARRIER.CHG AND NOT(SU.FLAG) THEN    ; * Can't Change Amount
            CALL ELINE('Cannot Change EDI Bill Amount!')
            CC+=1 ; GOSUB PRINT.CC
            GOTO 1700
         END
      END
      CARRIER.CHG = Q'R0'
      IF ACTUAL.CHG = '' THEN
         BEGIN CASE
            CASE AUTO.CAL AND CLIENT.ID='00885' AND CARRIER.ID='00015' AND BILL.DATE GE ICONV('09/09/97','D') AND DEST.ZIP # "99999" AND ORIG.ZIP # "99999"
               ACTUAL.CHG=CARRIER.CHG
               CARRIER.CHG=CARRIER.CHG+(CARRIER.CHG*.3821)
               CARRIER.CHG=CARRIER.CHG'R0'
               VARIANCE=CARRIER.CHG-ACTUAL.CHG     ; * JMK225
               VAR.ARR<3>+=VARIANCE      ; * JMK225
               VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
            CASE CLIENT.ID='00223' AND AUTO.CAL
               ACTUAL.CHG=CARRIER.CHG
               CARRIER.CHG=CARRIER.CHG+(CARRIER.CHG*.075)
               CARRIER.CHG=CARRIER.CHG'R0'
               VARIANCE=CARRIER.CHG-ACTUAL.CHG     ; * JMK225
               VAR.ARR<3>+=VARIANCE      ; * JMK225
               VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
            CASE CLIENT.ID='00373' AND CARRIER.ID='00601' AND AUTO.CAL           ; * DRF106
               ACTUAL.CHG=CARRIER.CHG    ; * DRF106
               CARRIER.CHG=CARRIER.CHG+(CARRIER.CHG*.24)     ; * DRF106
               CARRIER.CHG=CARRIER.CHG'R0'         ; * DRF106
               VARIANCE=CARRIER.CHG-ACTUAL.CHG     ; * JMK225    ; * DRF106
               VAR.ARR<3>+=VARIANCE      ; * JMK225    ; * DRF106
               VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY      ; * DRF106
            CASE CLIENT.ID='01212' AND AUTO.CAL    ; * JMK13
               ACTUAL.CHG=CARRIER.CHG    ; * JMK13
               CARRIER.CHG=CARRIER.CHG+(CARRIER.CHG*.020)    ; * JMK13
               CARRIER.CHG=CARRIER.CHG'R0'         ; * JMK13
               VARIANCE=CARRIER.CHG-ACTUAL.CHG     ; * JMK225
               VAR.ARR<3>+=VARIANCE      ; * JMK225
               VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY      ; * JMK13
            CASE (CLIENT.ID='00924' OR CLIENT.ID='01228') AND CARRIER.ID='03324' AND AUTO.CAL
               *          AArons Automotive and O&S Trucking "Milk Run"
               ACTUAL.CHG=CARRIER.CHG
               LOOKUP.DATE=DATE()        ; * Use Today as a lookup date
               LOCATE LOOKUP.DATE IN CLIENT.REC(84)<1> BY 'AR' SETTING POS ELSE POS=POS-1
               IF POS=0 THEN POS=1
               CONS.PERC=CLIENT.REC(85)<1,POS>/100
               NEGO.PERC="30"            ; * AFS's Portion of Actual Charges is 3.0%
               CONS.AMT=(NEGO.PERC*ACTUAL.CHG)/(CONS.PERC*10)
               CARRIER.CHG=ACTUAL.CHG+CONS.AMT
               CARRIER.CHG=CARRIER.CHG'R0'
               VARIANCE=CARRIER.CHG-ACTUAL.CHG     ; * JMK225
               VAR.ARR<3>+=VARIANCE      ; * JMK225
               VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
               VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
            CASE CLIENT.ID='01176' AND (CARRIER.ID='00015' OR CARRIER.ID='01075')
               *           Superlift and FedEx logistic only keyed
               CONS.AMT=CARRIER.CHG
               ACTUAL.CHG=0
               VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
               VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
            CASE CLIENT.ID='01088' AND CARRIER.ID='00807' AND AUTO.CAL           ; * JMK103
               *          Hi-Lo Industries and JB Hunt "Milk Run"
               ACTUAL.CHG=CARRIER.CHG    ; * JMK103
               LOOKUP.DATE=DATE()        ; * Use Today as a lookup date ; * JMK103
               LOCATE LOOKUP.DATE IN CLIENT.REC(84)<1> BY 'AR' SETTING POS ELSE POS=POS-1  ; * JMK103
               IF POS=0 THEN POS=1       ; * JMK103
               CONS.PERC=CLIENT.REC(85)<1,POS>/100           ; * JMK103
               NEGO.PERC="20"            ; * AFS's Portion of Actual Charges is 2.0% ; * JMK103
               CONS.AMT=(NEGO.PERC*ACTUAL.CHG)/(CONS.PERC*10)          ; * JMK103
               CARRIER.CHG=ACTUAL.CHG+CONS.AMT     ; * JMK103
               CARRIER.CHG=CARRIER.CHG'R0'         ; * JMK103
               VARIANCE=CARRIER.CHG-ACTUAL.CHG     ; * JMK225
               VAR.ARR<3>+=VARIANCE      ; * JMK225
               VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY      ; * JMK103
               VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY      ; * JMK103
            CASE CLIENT.ID='01674' AND AUTO.CAL    ; * JMK155
               * First Source Electrical client (01674) ; * JMK155
               ACTUAL.CHG=CARRIER.CHG    ; * JMK155
               LOOKUP.DATE=DATE()        ; * Use Today as a lookup date ; * JMK155
               LOCATE LOOKUP.DATE IN CLIENT.REC(84)<1> BY 'AR' SETTING POS ELSE POS=POS-1  ; * JMK155
               IF POS=0 THEN POS=1       ; * JMK155
               CONS.PERC=CLIENT.REC(85)<1,POS>/100           ; * JMK155
               NEGO.PERC="200"           ; * AFS's Portion of Actual Charges is 20.0% ; * JMK155
               CONS.AMT=(NEGO.PERC*ACTUAL.CHG)/(CONS.PERC*10)          ; * JMK155
               CARRIER.CHG=ACTUAL.CHG+CONS.AMT     ; * JMK155
               CARRIER.CHG=CARRIER.CHG'R0'         ; * JMK155
               VARIANCE=CARRIER.CHG-ACTUAL.CHG     ; * JMK225
               VAR.ARR<3>+=VARIANCE      ; * JMK225
               VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY      ; * JMK155
               VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY      ; * JMK155
            CASE CLIENT.ID='01992' AND AUTO.CAL    ; * JMK206
               * M & N Valve client (01992) ; * JMK206
               ACTUAL.CHG=CARRIER.CHG    ; * JMK206
               LOOKUP.DATE=DATE()        ; * Use Today as a lookup date ; * JMK206
               LOCATE LOOKUP.DATE IN CLIENT.REC(84)<1> BY 'AR' SETTING POS ELSE POS=POS-1  ; * JMK206
               IF POS=0 THEN POS=1       ; * JMK206
               CONS.PERC=CLIENT.REC(85)<1,POS>/100           ; * JMK206
               NEGO.PERC="150"           ; * AFS's Portion of Actual Charges is 15.0% ; * JMK206
               CONS.AMT=(NEGO.PERC*ACTUAL.CHG)/(CONS.PERC*10)          ; * JMK206
               CARRIER.CHG=ACTUAL.CHG+CONS.AMT     ; * JMK206
               CARRIER.CHG=CARRIER.CHG'R0'         ; * JMK206
               VARIANCE=CARRIER.CHG-ACTUAL.CHG     ; * JMK225
               VAR.ARR<3>+=VARIANCE      ; * JMK225
               VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY      ; * JMK206
               VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY      ; * JMK206
            CASE CLIENT.ID='02079' AND LTL.CAR AND AUTO.CAL  ; * SWB01
               * Kissner Group (02079) ; * SWB01
               ACTUAL.CHG=CARRIER.CHG    ; * SWB01
               LOOKUP.DATE=DATE()        ; * Use Today as a lookup date ; * SWB01
               LOCATE LOOKUP.DATE IN CLIENT.REC(84)<1> BY 'AR' SETTING POS ELSE POS=POS-1  ; * SWB01
               IF POS=0 THEN POS=1       ; * SWB01
               CONS.PERC=CLIENT.REC(85)<1,POS>/100           ; * SWB01
               NEGO.PERC="100"           ; * AFS's Portion of Actual Charges is 10.0% ; * SWB01
               CONS.AMT=(NEGO.PERC*ACTUAL.CHG)/(CONS.PERC*10)          ; * SWB01
               CARRIER.CHG=ACTUAL.CHG+CONS.AMT     ; * SWB01
               CARRIER.CHG=CARRIER.CHG'R0'         ; * SWB01
               VARIANCE=CARRIER.CHG-ACTUAL.CHG     ; * JMK225
               VAR.ARR<3>+=VARIANCE      ; * JMK225
               VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY      ; * SWB01
               VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY      ; * SWB01
            CASE 1
               ACTUAL.CHG = CARRIER.CHG
         END CASE
      END ELSE
         IF USER.TYPE#'A' AND CLIENT.ID='00223' THEN
            ACTUAL.CHG=CARRIER.CHG
            CARRIER.CHG=CARRIER.CHG+(CARRIER.CHG*.075)
            CARRIER.CHG=CARRIER.CHG'R0'
            VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
         END
         IF USER.TYPE#'A' AND CLIENT.ID='00223' AND CARRIER.ID='00601' THEN
            ACTUAL.CHG=CARRIER.CHG
            CARRIER.CHG=CARRIER.CHG+(CARRIER.CHG*.48)
            CARRIER.CHG=CARRIER.CHG'R0'
            VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
         END

         IF CLIENT.ID='01212' AND AUTO.CAL THEN
            ACTUAL.CHG=CARRIER.CHG       ; * JMK13
            CARRIER.CHG=CARRIER.CHG+(CARRIER.CHG*.020)       ; * JMK13
            CARRIER.CHG=CARRIER.CHG'R0'  ; * JMK13
            VARIANCE=CARRIER.CHG-ACTUAL.CHG        ; * JMK225
            VAR.ARR<3>+=VARIANCE         ; * JMK225
            VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY         ; * JMK13
            VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
         END
         IF (CLIENT.ID='00924' OR CLIENT.ID='01228') AND CARRIER.ID='03324' AND AUTO.CAL THEN
            *         AArons Automotive and O&S Trucking "Milk Run"
            ACTUAL.CHG=CARRIER.CHG
            LOOKUP.DATE=DATE()           ; * Use Today as a lookup date
            LOCATE LOOKUP.DATE IN CLIENT.REC(84)<1> BY 'AR' SETTING POS ELSE POS=POS-1
            IF POS=0 THEN POS=1
            CONS.PERC=CLIENT.REC(85)<1,POS>/100
            NEGO.PERC="30"               ; * AFS's Portion of Actual Charges is 3.0%
            CONS.AMT=(NEGO.PERC*ACTUAL.CHG)/(CONS.PERC*10)
            CARRIER.CHG=ACTUAL.CHG+CONS.AMT
            CARRIER.CHG=CARRIER.CHG'R0'
            VARIANCE=CARRIER.CHG-ACTUAL.CHG        ; * JMK225
            VAR.ARR<3>+=VARIANCE         ; * JMK225
            VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
            VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
         END
         IF CLIENT.ID='01176' AND (CARRIER.ID='00015' OR CARRIER.ID='01075') THEN
            *        Superlift and FedEx logistic only keyed
            CONS.AMT=CARRIER.CHG
            ACTUAL.CHG=0
            VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
            VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
            CRT @(15,19):ACTUAL.CHG'R26#9'
         END
         IF CLIENT.ID='01088' AND CARRIER.ID='00807' AND AUTO.CAL THEN           ; * JMK103
            *          Hi-Lo Industries and JB Hunt "Milk Run"
            ACTUAL.CHG=CARRIER.CHG       ; * JMK103
            LOOKUP.DATE=DATE()           ; * Use Today as a lookup date ; * JMK103
            LOCATE LOOKUP.DATE IN CLIENT.REC(84)<1> BY 'AR' SETTING POS ELSE POS=POS-1     ; * JMK103
            IF POS=0 THEN POS=1          ; * JMK103
            CONS.PERC=CLIENT.REC(85)<1,POS>/100    ; * JMK103
            NEGO.PERC="20"               ; * AFS's Portion of Actual Charges is 2.0% ; * JMK103
            CONS.AMT=(NEGO.PERC*ACTUAL.CHG)/(CONS.PERC*10)   ; * JMK103
            CARRIER.CHG=ACTUAL.CHG+CONS.AMT        ; * JMK103
            CARRIER.CHG=CARRIER.CHG'R0'  ; * JMK103
            VARIANCE=CARRIER.CHG-ACTUAL.CHG        ; * JMK225
            VAR.ARR<3>+=VARIANCE         ; * JMK225
            VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY         ; * JMK103
            VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY         ; * JMK103
         END                             ; * JMK103
         IF CLIENT.ID='01674' AND AUTO.CAL THEN    ; * JMK155
            * First Source Electrical client (01674) ; * JMK155
            ACTUAL.CHG=CARRIER.CHG       ; * JMK155
            LOOKUP.DATE=DATE()           ; * Use Today as a lookup date ; * JMK155
            LOCATE LOOKUP.DATE IN CLIENT.REC(84)<1> BY 'AR' SETTING POS ELSE POS=POS-1     ; * JMK155
            IF POS=0 THEN POS=1          ; * JMK155
            CONS.PERC=CLIENT.REC(85)<1,POS>/100    ; * JMK155
            NEGO.PERC="200"              ; * AFS's Portion of Actual Charges is 20.0% ; * JMK155
            CONS.AMT=(NEGO.PERC*ACTUAL.CHG)/(CONS.PERC*10)   ; * JMK155
            CARRIER.CHG=ACTUAL.CHG+CONS.AMT        ; * JMK155
            CARRIER.CHG=CARRIER.CHG'R0'  ; * JMK155
            VARIANCE=CARRIER.CHG-ACTUAL.CHG        ; * JMK225
            VAR.ARR<3>+=VARIANCE         ; * JMK225
            VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY         ; * JMK155
            VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY         ; * JMK155
         END                             ; * JMK155
         IF CLIENT.ID='01992' AND AUTO.CAL THEN    ; * JMK206
            * Cooper Valves client (01992)           ; * JMK206
            ACTUAL.CHG=CARRIER.CHG       ; * JMK206
            LOOKUP.DATE=DATE()           ; * Use Today as a lookup date ; * JMK206
            LOCATE LOOKUP.DATE IN CLIENT.REC(84)<1> BY 'AR' SETTING POS ELSE POS=POS-1     ; * JMK206
            IF POS=0 THEN POS=1          ; * JMK206
            CONS.PERC=CLIENT.REC(85)<1,POS>/100    ; * JMK206
            NEGO.PERC="150"              ; * AFS's Portion of Actual Charges is 15.0% ; * JMK206
            CONS.AMT=(NEGO.PERC*ACTUAL.CHG)/(CONS.PERC*10)   ; * JMK206
            CARRIER.CHG=ACTUAL.CHG+CONS.AMT        ; * JMK206
            VARIANCE=CARRIER.CHG-ACTUAL.CHG        ; * JMK225
            VAR.ARR<3>+=VARIANCE         ; * JMK225
            CARRIER.CHG=CARRIER.CHG'R0'  ; * JMK206
            VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY         ; * JMK206
            VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY         ; * JMK206
         END                             ; * JMK206
         IF CLIENT.ID='02079' AND LTL.CAR AND AUTO.CAL THEN  ; * SWB01
            * Kissner Group client (02079)           ; * SWB01
            ACTUAL.CHG=CARRIER.CHG       ; * SWB01
            LOOKUP.DATE=DATE()           ; * Use Today as a lookup date ; * SWB01
            LOCATE LOOKUP.DATE IN CLIENT.REC(84)<1> BY 'AR' SETTING POS ELSE POS=POS-1     ; * SWB01
            IF POS=0 THEN POS=1          ; * SWB01
            CONS.PERC=CLIENT.REC(85)<1,POS>/100    ; * SWB01
            NEGO.PERC="100"              ; * AFS's Portion of Actual Charges is 10.0% ; * SWB01
            CONS.AMT=(NEGO.PERC*ACTUAL.CHG)/(CONS.PERC*10)   ; * SWB01
            CARRIER.CHG=ACTUAL.CHG+CONS.AMT        ; * SWB01
            CARRIER.CHG=CARRIER.CHG'R0'  ; * SWB01
            VARIANCE=CARRIER.CHG-ACTUAL.CHG        ; * JMK225
            VAR.ARR<3>+=VARIANCE         ; * JMK225
            VER.CODE='CC' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY         ; * SWB01
            VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY         ; * SWB01
         END                             ; * SWB01
      END
      CRT @(6,19):CARRIER.CHG'R26#9'
      FIRST.TIME.TRY=1

*****************************************************************
1800: * Enter actual charge
*****************************************************************
      IF AUDIT='Y' OR (AUDIT='U' AND AVOUT<8>+0#0) THEN
         IF NOT(FRT.FLAG) THEN
            IF BACK.FLAG THEN GOTO 1700
            *df            IF USER.TYPE='A' THEN
            GOTO 1825
            *df            END
         END
      END
      BACK.FLAG = 0
      IF CLIENT.ID='01176' AND (CARRIER.ID='00015' OR CARRIER.ID='01075') THEN
         GOTO 1825
      END
      IF FLAT.RATE THEN
         CRT @(24,19):'F'
      END
      HELP = "Enter the Actual Charge. [X]=Back [EX]=Exit"
      CALL GEN.IN(15,19,ACTUAL.CHG'R26#9','AMT2',Q,0,9,'','',2,-9,19,0,QI,HELP,0,23)
      CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      QI = OCONV(QI,'MCU')
      IF QI#'X' AND QI#'' AND FLAT.RATE THEN
         IF QI[LEN(QI),1]#'+' THEN
            FLAT.RATE=0
            CRT @(24,19):' '
         END
      END
      IF QI[LEN(QI),1]='+' THEN
         FLAT.RATE=1
         QI=QI[1,LEN(QI)-1]
      END
      BEGIN CASE
         CASE QI = ''
            Q = ACTUAL.CHG
         CASE QI = 'X'
            CRT @(15,19):'         ':
            GOTO 1700
         CASE NUM(QI)
            VAR.ARR = ''
         CASE QI = 'EX'
            GOTO PROGRAM.EXIT            ; * NKH10
         CASE 1
            GOTO 1800
      END CASE
      IF Q[LEN(Q),1]='+' THEN Q=Q[1,LEN(Q)-1]
      IF OLD.PRO.REC<88>#'' AND (CARRIER.ID = "00015" OR CARRIER.ID = "01075" OR CARRIER.ID = "00143") THEN    ; ** EDI BILL
         *DF      IF OLD.PRO.REC<88>#'' AND (CARRIER.ID = "00015" OR CARRIER.ID = "01075") AND USER#'RCASON' AND USER#'JMILLER' AND USER#'CSANFORD' AND USER#'LCARDWELL' AND USER#'DAVID' THEN           ; ** EDI BILL
         IF Q#ACTUAL.CHG THEN            ; * Can't Change Amount
            IF NOT(SU.FLAG) THEN
               CALL ELINE('Cannot Change EDI Bill Amount!')
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1800
            END ELSE
               REMIT.ID=CLIENT.ID:'*':PRO.ID
               READ DREMIT FROM EDI.REMIT,REMIT.ID THEN
                  DELETE EDI.REMIT,REMIT.ID
               END
            END
         END
      END
      IF PRO[LEN(PRO)-1,2] = 'BD' OR PRO[LEN(PRO)-1,2] = 'AD' ELSE
         IF PRO.REC<98>+0#0 AND USER.TYPE='A' THEN
            IF Q > PRO.REC<98> THEN
               CALL ELINE('Amount must be equal or less than the amount keyed by freight payment.')
               GOTO 1800
            END
         END
      END
      IF CARRIER.ID='00041' AND CLIENT.ID='10337' AND PRO[1,7]='753-294' THEN
         IF Q LT CARRIER.CHG-1 THEN
            CALL ELINE('Actual Charge must be within a penny of Carrier Charge. See FAP Manager')
            GOTO 1800
         END
      END

      * Begin NKH80
      IF CLIENT.ID = '07293' THEN
         HUSH ON
         STMT = 'SSELECT FB.BILLS.HIST,':CLIENT.ID:' WITH 16 = "':ID.BOL.CRX:'" OR WITH 240 = "':ID.BOL.CRX:'"'
         EXECUTE STMT RTNLIST DUP.LIST CAPTURING DUPS
         HUSH OFF

         EOF=0
         LOOP
            READNEXT DUP.ID FROM DUP.LIST ELSE EOF = 1
         UNTIL EOF

            IF APPROVE.BILL THEN
               HELP='Duplicate BOL - Approve Bill? (Y/N)' ; 
               CALL GEN.IN(0,22,'Approve Bill   ','',SQ,0,2,'','',2,-2,22,1,QI,HELP,0,23)
               QI=OCONV(QI,'MCU')
               IF QI = 'Y' THEN GOTO 7000
            END

            OPEN 'FB.BILLS.HIST,07293' TO F.FB.HIST THEN
               READ TEMP.PRO.REC FROM F.FB.HIST, DUP.ID THEN
                  OLD.AMT = TEMP.PRO.REC<8>
               END
            END
            IF Q = OLD.AMT THEN
               REJECT.ERR.MSG='AU346'
               REJ.TYPE='E'
               CALL ELINE('Duplicate BOL on file. Bill must be rejected')
               GOSUB INIT.REJECT.INFO
               RVIN='' ; RVOUT=''
               RVIN<1> = 'E'
               RVIN<2> = CARRIER.ID
               RVIN<3> = CLIENT.ID
               RVIN<4> = FIELD(PRO.ID,'*',2)
               RVIN<5> = 'R'
               RVIN<6> = BILL.DATE
               RVIN<7> = ACTUAL.CHG
               RVIN<8> = REJ.TYPE
               REJECT.REASONS = REJECT.ERR.MSG
               CALL FB.2.1.REJECT.KED(RVIN, RVOUT, REJECT.REASONS, MAILING.ADDR)
               REJECT.FLAG = RVOUT<2>
               PRO.REC<66>=REJ.TYPE
               REJECT.REASONS<3> = 'Duplicate BOL: ':ID.BOL.CRX
               REJECT.REASONS<4> = USER:@SVM:DATE()
               GOSUB 8100                ; * Redraw Screen Fields
               GOSUB 8200                ; * Redraw Screen Data
               BEGIN CASE
                  CASE RVOUT<1>='EX'
                     GOTO PROGRAM.EXIT
                  CASE RVOUT<1>='X' OR REJECT.FLAG = ''
                     GOTO 400
               END CASE
               REJECTION.ALTERED = RVOUT<3>
               ACCESS.REASON = "REJ"
               GOSUB UPD.FB.BILLS.ACCESS
               GOTO 4900
            END
         REPEAT
7000:
      END
      * End NKH80
      W.NEVERPAY = (PRO.REC<66>='N' AND PRO.REC<39>='R')     ; *NPR030
      *****      IF PRO[LEN(PRO)-1,2]='AD' AND ((Q > "99999" AND CARRIER.MODE # '6') OR (Q > "99999" AND CARRIER.MODE = '6')) AND NOT(W.NEVERPAY) AND PRO # "579-646877-0AD" THEN     ; *NPR030 ; * DRF020
      ***      IF PRO[LEN(PRO)-1,2]='AD' AND ((Q > "175000" AND CARRIER.MODE # '6') OR (Q > "175000" AND CARRIER.MODE = '6')) AND NOT(W.NEVERPAY) AND PRO # "579-646877-0AD" THEN   ; *NPR030 ; * DRF020 GRB09
      IF PRO[LEN(PRO)-1,2]='AD' AND ((Q > "300000" AND CARRIER.MODE # '6') OR (Q > "300000" AND CARRIER.MODE = '6')) AND NOT(W.NEVERPAY) AND PRO # "579-646877-0AD" THEN   ; *NPR030 ; * DRF020 GRB09 GRB11 NKH66

*****************************************************************
AD.CONFIRMATION:
*****************************************************************
         CRT CHAR(7)
         HELP='Press Enter for confirmation or X-back to Actual Charge'
         CALL GEN.IN(0,22,'Carrier amount excess limit. Press Enter to Send password to supervisor *****','',Y,0,5,'','',2,-5,22,0,YI,HELP,0,23)
         IF OCONV(YI,'MCU')='X' THEN
            CRT @(0,22):@(-4):
            GOTO 1800
         END
         IF TRIM(YI)='' ELSE
            CALL ELINE('Invalid Entry.')
            GOTO AD.CONFIRMATION
         END
         * AD over 599.99 has to have a supervisor approval
         PASS.WORD=OCONV(PRO,'MCN')
         PASS.WORD=PASS.WORD*17
         PASS.WORD=PASS.WORD[LEN(PASS.WORD)-5,6]
         *
         MVIN=''
         SUBJ='AD for more than the limit was attempted'
         TEXT=USER:' attempted to enter a AD bill with an amount '
         TEXT<1,-1>='of ':Q'R26':' '
         TEXT<1,-1>='on ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
         TEXT<1,-1>='Client ':CLIENT.ID:' Carrier ':CARRIER.ID:' Pro ':PRO
         IF FOUND.ORIG THEN
            TEXT<1,-1>='Original Bill was paid at ':ORIG.ON.FILE<8>'R26'
         END
         TEXT<1,-1>='PASSWORD is ':PASS.WORD
         MVIN=''
         MVIN<1>='WPardue@afs.net'
*         MVIN<1,-1>='MMcKay@afs.net'     ; * DRF067  NKH77
*         MVIN<1,-1>='Crivers@afs.net'    ; * NKH52   NKH77
         MVIN<1,-1>='dbarnes@afs.net'    ; * NKH77
         MVIN<4>='AFS'
         MVIN<5>=SUBJ
         MVIN<6>=TEXT
         CALL SENDMAIL(MVIN,MVOUT)

*****************************************************************
AD.PASSWORD:
*****************************************************************
         HELP='Enter password X-back to Actual Charge or C to Cancel bill'
         ECHO OFF
         CALL GEN.IN(0,22,'Password: ***********','',Y,0,11,'','',2,-11,22,0,YI,HELP,0,23)
         ECHO ON
         IF OCONV(YI,'MCU')='X' THEN
            CRT @(0,22):@(-4):
            GOTO 1800
         END
         IF OCONV(YI,'MCU')='C' THEN
            GOTO 300
         END
         IF YI=PASS.WORD ELSE
            CALL ELINE('Invalid Password.')
            GOTO AD.PASSWORD
         END
      END
* Start of DRF105
      IF PRO[LEN(PRO)-1,2]='BD' AND Q > "99999" AND PRO.REC<39> # 'R' THEN       ; * DRF105
*DFCALL ELINE('PRESS BREAK BD ENTERED')

*****************************************************************
BD.CONFIRMATION:
*****************************************************************
         CRT CHAR(7)
         HELP='Press Enter for confirmation or X-back to Actual Charge'
         CALL GEN.IN(0,22,'Carrier amount excess limit. Press Enter to Send password to supervisor *****','',Y,0,5,'','',2,-5,22,0,YI,HELP,0,23)
         IF OCONV(YI,'MCU')='X' THEN
            CRT @(0,22):@(-4):
            GOTO 1800
         END
         IF TRIM(YI)='' ELSE
            CALL ELINE('Invalid Entry.')
            GOTO AD.CONFIRMATION
         END
         * BD over 999.99 has to have a supervisor approval
         PASS.WORD=OCONV(PRO,'MCN')
         PASS.WORD=PASS.WORD*17
         PASS.WORD=PASS.WORD[LEN(PASS.WORD)-5,6]
         *
         MVIN=''
         SUBJ='BD for more than the limit was attempted'
         TEXT=USER:' attempted to enter a BD bill with an amount '
         TEXT<1,-1>='of ':Q'R26':' '
         TEXT<1,-1>='on ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
         TEXT<1,-1>='Client ':CLIENT.ID:' Carrier ':CARRIER.ID:' Pro ':PRO
         IF FOUND.ORIG THEN
            TEXT<1,-1>='Original Bill was paid at ':ORIG.ON.FILE<8>'R26'
         END
         TEXT<1,-1>='PASSWORD is ':PASS.WORD
         MVIN=''
         MVIN<1>='WPardue@afs.net'
*         MVIN<1,-1>='MMcKay@afs.net'     ; * DRF067  NKH77
*         MVIN<1,-1>='Crivers@afs.net'    ; * NKH52   NKH77
         MVIN<1,-1>='dbarnes@afs.net'    ; * NKH77
         MVIN<4>='AFS'
         MVIN<5>=SUBJ
         MVIN<6>=TEXT
         CALL SENDMAIL(MVIN,MVOUT)

*****************************************************************
BD.PASSWORD:
*****************************************************************
         HELP='Enter password X-back to Actual Charge or C to Cancel bill'
         ECHO OFF
         CALL GEN.IN(0,22,'Password: ***********','',Y,0,11,'','',2,-11,22,0,YI,HELP,0,23)
         ECHO ON
         IF OCONV(YI,'MCU')='X' THEN
            CRT @(0,22):@(-4):
            GOTO 1800
         END
         IF OCONV(YI,'MCU')='C' THEN
            GOTO 300
         END
         IF YI=PASS.WORD ELSE
            CALL ELINE('Invalid Password.')
            GOTO AD.PASSWORD
         END
      END
* End of DRF105
      IF BAL.DUE THEN
         IF PRO[LEN(PRO)-5,2] = 'BD' THEN
            LOOKUP.DATE=DATE()
            LOCATE LOOKUP.DATE IN CLIENT.REC(84)<1> BY 'AR' SETTING DATE.POS ELSE DATE.POS=DATE.POS-1
            IF DATE.POS=0 THEN DATE.POS=1
            IF CLIENT.REC(131)<1,DATE.POS>#'' THEN
               CALL ELINE('Cannot enter a BDBDBD for this client because it has a overcharge cap.')
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1800
            END
            BD.ID = CARRIER.ID:'*':PRO[1,LEN(PRO)-6]:"*":VERSION
            READ OLD.OVC.REC FROM F.HIST,BD.ID ELSE OLD.OVC.REC=''
            OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
            OLD.OVC.COM=ABS(OLD.OVC.REC<43>)       ; * JMK190
            IF CLIENT.ID='01706' THEN
               READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
               IF OLD.OVC.REC<1>='00902' OR OLD.OVC.REC<1>='00917' OR OLD.OVC.REC<1>='00918' OR OLD.OVC.REC<1>='00938' OR OLD.OVC.REC<1>='01164' OR OLD.OVC.REC<1>='01472' OR OLD.OVC.REC<1>='01479' OR OLD.OVC.REC<1>='01576' OR OLD.OVC.REC<1>='01578' THEN
                  OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
               END
            END
            IF CLIENT.ID='01633' THEN
               READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
               IF OLD.OVC.REC<1>='00972' THEN
                  OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
               END
            END
            IF CLIENT.ID='01811' THEN
               READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
               IF OLD.OVC.REC<1>='01228' THEN
                  OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
               END
            END
            IF CLIENT.ID='00951' THEN
               READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
               IF OLD.OVC.REC<1>='01019' THEN
                  OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
               END
            END
            IF CLIENT.ID='01019' THEN
               READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
               IF OLD.OVC.REC<1>='00951' THEN
                  OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
               END
            END
            BD.ID = CARRIER.ID:'*':PRO[1,LEN(PRO)-4]:"*":VERSION
            READ OLD.OVC.REC FROM F.HIST,BD.ID ELSE OLD.OVC.REC=''
            OLD.OVC.AMT=OLD.OVC.AMT-OLD.OVC.REC<8>
            OLD.OVC.COM-=ABS(OLD.OVC.REC<43>)      ; * JMK190
            IF CLIENT.ID='01706' THEN
               READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
               IF OLD.OVC.REC<1>='00902' OR OLD.OVC.REC<1>='00917' OR OLD.OVC.REC<1>='00918' OR OLD.OVC.REC<1>='00938' OR OLD.OVC.REC<1>='01164' OR OLD.OVC.REC<1>='01472' OR OLD.OVC.REC<1>='01479' OR OLD.OVC.REC<1>='01576' OR OLD.OVC.REC<1>='01578' THEN
                  OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
               END
            END
            IF CLIENT.ID='01633' THEN
               READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
               IF OLD.OVC.REC<1>='00972' THEN
                  OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
               END
            END
            IF CLIENT.ID='01811' THEN
               READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
               IF OLD.OVC.REC<1>='01228' THEN
                  OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
               END
            END
            IF CLIENT.ID='00951' THEN
               READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
               IF OLD.OVC.REC<1>='01019' THEN
                  OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
               END
            END
            IF CLIENT.ID='01019' THEN
               READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
               IF OLD.OVC.REC<1>='00951' THEN
                  OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
               END
            END
            BD.ID = CARRIER.ID:'*':PRO[1,LEN(PRO)-2]:"*":VERSION
            READ OLD.OVC.REC FROM F.HIST,BD.ID ELSE OLD.OVC.REC=''
            OLD.OVC.AMT=OLD.OVC.AMT-OLD.OVC.REC<8>
            OLD.OVC.COM-=ABS(OLD.OVC.REC<43>)      ; * JMK190
            IF CLIENT.ID='01706' THEN
               READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
               IF OLD.OVC.REC<1>='00902' OR OLD.OVC.REC<1>='00917' OR OLD.OVC.REC<1>='00918' OR OLD.OVC.REC<1>='00938' OR OLD.OVC.REC<1>='01164' OR OLD.OVC.REC<1>='01472' OR OLD.OVC.REC<1>='01479' OR OLD.OVC.REC<1>='01576' OR OLD.OVC.REC<1>='01578' THEN
                  OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
               END
            END
            IF CLIENT.ID='01633' THEN
               READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
               IF OLD.OVC.REC<1>='00972' THEN
                  OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
               END
            END
            IF CLIENT.ID='01811' THEN
               READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
               IF OLD.OVC.REC<1>='01228' THEN
                  OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
               END
            END
            IF CLIENT.ID='00951' THEN
               READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
               IF OLD.OVC.REC<1>='01019' THEN
                  OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
               END
            END
            IF CLIENT.ID='01019' THEN
               READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
               IF OLD.OVC.REC<1>='00951' THEN
                  OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
               END
            END
         END ELSE
            IF PRO[LEN(PRO)-3,2] = 'BD' THEN
               LOOKUP.DATE=DATE()
               LOCATE LOOKUP.DATE IN CLIENT.REC(84)<1> BY 'AR' SETTING DATE.POS ELSE DATE.POS=DATE.POS-1
               IF DATE.POS=0 THEN DATE.POS=1
               IF CLIENT.REC(131)<1,DATE.POS>#'' THEN
                  CALL ELINE('Cannot enter a BDBD for this client because it has a overcharge cap.')
                  CC+=1 ; GOSUB PRINT.CC
                  GOTO 1800
               END
               BD.ID = CARRIER.ID:'*':PRO[1,LEN(PRO)-4]:"*":VERSION
               READ OLD.OVC.REC FROM F.HIST,BD.ID ELSE OLD.OVC.REC=''
               OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
               OLD.OVC.COM=ABS(OLD.OVC.REC<43>)    ; * JMK190
               IF CLIENT.ID='01706' THEN
                  READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
                  IF OLD.OVC.REC<1>='00902' OR OLD.OVC.REC<1>='00917' OR OLD.OVC.REC<1>='00918' OR OLD.OVC.REC<1>='00938' OR OLD.OVC.REC<1>='01164' OR OLD.OVC.REC<1>='01472' OR OLD.OVC.REC<1>='01479' OR OLD.OVC.REC<1>='01576' OR OLD.OVC.REC<1>='01578' THEN
                     OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
                  END
               END
               IF CLIENT.ID='01633' THEN
                  READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
                  IF OLD.OVC.REC<1>='00972' THEN
                     OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
                  END
               END
               IF CLIENT.ID='01811' THEN
                  READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
                  IF OLD.OVC.REC<1>='01228' THEN
                     OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
                  END
               END
               IF CLIENT.ID='00951' THEN
                  READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
                  IF OLD.OVC.REC<1>='01019' THEN
                     OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
                  END
               END
               IF CLIENT.ID='01019' THEN
                  READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
                  IF OLD.OVC.REC<1>='00951' THEN
                     OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
                  END
               END
               BD.ID = CARRIER.ID:'*':PRO[1,LEN(PRO)-2]:"*":VERSION
               READ OLD.OVC.REC FROM F.HIST,BD.ID ELSE OLD.OVC.REC=''
               OLD.OVC.AMT=OLD.OVC.AMT-OLD.OVC.REC<8>
               OLD.OVC.COM-=ABS(OLD.OVC.REC<43>)   ; * JMK190
               IF CLIENT.ID='01706' THEN
                  READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
                  IF OLD.OVC.REC<1>='00902' OR OLD.OVC.REC<1>='00917' OR OLD.OVC.REC<1>='00918' OR OLD.OVC.REC<1>='00938' OR OLD.OVC.REC<1>='01164' OR OLD.OVC.REC<1>='01472' OR OLD.OVC.REC<1>='01479' OR OLD.OVC.REC<1>='01576' OR OLD.OVC.REC<1>='01578' THEN
                     OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
                  END
               END
               IF CLIENT.ID='01633' THEN
                  READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
                  IF OLD.OVC.REC<1>='00972' THEN
                     OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
                  END
               END
               IF CLIENT.ID='01811' THEN
                  READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
                  IF OLD.OVC.REC<1>='01228' THEN
                     OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
                  END
               END
               IF CLIENT.ID='00951' THEN
                  READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
                  IF OLD.OVC.REC<1>='01019' THEN
                     OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
                  END
               END
               IF CLIENT.ID='01019' THEN
                  READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
                  IF OLD.OVC.REC<1>='00951' THEN
                     OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
                  END
               END
            END ELSE
               BD.ID = CARRIER.ID:'*':PRO[1,LEN(PRO)-2]:"*":VERSION
               READ OLD.OVC.REC FROM F.HIST,BD.ID ELSE OLD.OVC.REC=''
               OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
               OLD.OVC.COM=ABS(OLD.OVC.REC<43>)    ; * JMK190
               IF CLIENT.ID='01706' THEN
                  READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
                  IF OLD.OVC.REC<1>='00902' OR OLD.OVC.REC<1>='00917' OR OLD.OVC.REC<1>='00918' OR OLD.OVC.REC<1>='00938' OR OLD.OVC.REC<1>='01164' OR OLD.OVC.REC<1>='01472' OR OLD.OVC.REC<1>='01479' OR OLD.OVC.REC<1>='01576' OR OLD.OVC.REC<1>='01578' THEN
                     OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
                  END
               END
               IF CLIENT.ID='01633' THEN
                  READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
                  IF OLD.OVC.REC<1>='00972' THEN
                     OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
                  END
               END
               IF CLIENT.ID='01811' THEN
                  READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
                  IF OLD.OVC.REC<1>='01228' THEN
                     OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
                  END
               END
               IF CLIENT.ID='00951' THEN
                  READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
                  IF OLD.OVC.REC<1>='01019' THEN
                     OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
                  END
               END
               IF CLIENT.ID='01019' THEN
                  READ OLD.OVC.REC FROM F.CRX,BD.ID ELSE OLD.OVC.REC=''
                  IF OLD.OVC.REC<1>='00951' THEN
                     OLD.OVC.AMT=ABS(OLD.OVC.REC<11>)
                  END
               END
            END
         END
         IF Q > OLD.OVC.AMT THEN
            CALL ELINE('ERROR - BD Bill Amount Cannot Exceed Previous OC Cutback of ':OLD.OVC.AMT'R26,':'.')
            CC+=1 ; GOSUB PRINT.CC
            GOTO 1800
         END
      END
      * Begin GRB17
      ****       IF Q GE "2000000" AND CARRIER.ID # "00041" AND USER.TYPE#'A' THEN          ; * JMK254
      ****          BEGIN CASE                      ; * JMK48
      ****             CASE FRT.FLAG                ; * SWB07
      ****             CASE USER='FPMGR'            ; * JMK48
      ****             CASE USER='DAVID'            ; * JMK48 ; * DF
      ****             CASE USER='MARY'             ; * JMK48 ; * SWB07
      ****             CASE USER='KRISTY'           ; * JMK48
      ****             CASE USER='BRIAN'            ; * JMK48
      ****            CASE SU.FLAG                 ; * JMK254 ; * Myra said that SU can change the amount 05/04/15 DRF
      ****             CASE 1                       ; * JMK48
      ****                CALL ELINE("Only mary can enter bills 20,000 and above.")         ; * SWB07 ; * JMK254
      ****                GOTO 1800                 ; * JMK48
      ****          END CASE                        ; * JMK48
      ****
      ****          CALL ELINE("Warning: Bills over 20,000 must be approved  Mary.")        ; * JMK48 ; * JMK128 ; * JMK254
      ****       END
      * End GRB17
      ACTUAL.CHG = Q'R0'
      IF FLAT.RATE THEN
         CRT @(24,19):'F'
      END ELSE
         CRT @(24,19):' '
      END
      CRT @(15,19):ACTUAL.CHG'R26#9'
      IF ACTUAL.CHG GT CARRIER.CHG THEN
         CALL ELINE('ERROR - Actual charge cannot be greater than carrier charge.')
         CC+=1 ; GOSUB PRINT.CC
         GOTO 1800
      END
      IF OLD.PRO.REC<8>#'' THEN
         IF OLD.PRO.REC<8>#ACTUAL.CHG THEN CHANGE.EXP=1
      END
      CARRIER.AND.ACTUAL.MATCH=0
      IF AUDIT.TYPE # 'LTLALL' AND USER.TYPE#'A' AND NOT(SU.FLAG) THEN
         CARRIER.AND.ACTUAL.MATCH=1
      END
      IF AUDIT.TYPE = 'LTLALL' AND USER.TYPE#'A' AND NOT(SU.FLAG) THEN
         IF AUDIT # 'Y' AND AUDIT # 'U' THEN
            CARRIER.AND.ACTUAL.MATCH=1
         END
         IF AUDIT = 'U' THEN
            IF AMOUNT.MATCH = '' THEN
               CARRIER.AND.ACTUAL.MATCH=1
            END
         END
      END
      IF CARRIER.AND.ACTUAL.MATCH AND (CLIENT.ID # '00223' AND (CLIENT.ID # '00924' OR CARRIER.ID # '03324') AND (CLIENT.ID # '01228' OR CARRIER.ID # '03324')AND (CLIENT.ID#'01212') AND (CLIENT.ID # '00885' OR CARRIER.ID # '00015') AND (CLIENT.ID # '01088' OR CARRIER.ID # '00807') AND (CLIENT.ID # '01674' OR (CARRIER.ID # '00041' AND CARRIER.ID # '01312')) AND (CLIENT.ID # '01992') AND (CLIENT.ID # '02079') AND (CLIENT.ID # '00373' OR CARRIER.ID # '00601')) THEN     ; * SWB01 ; * DRF046    ; * DRF106
         IF USER='DAVID' THEN CALL ELINE('PRSS BREK')
         IF ACTUAL.CHG # CARRIER.CHG THEN
            CALL ELINE('ERROR - Actual charge must match carrier charge.')
            CC+=1 ; GOSUB PRINT.CC
            GOTO 1800
         END
      END
      GOSUB 9500                         ; * JMK31

      IF BLOCKIT.YES=1 THEN GO 300       ; * JMK31 ; * JMK172

      *** Append notes when Accounting creates a one-cent variance
      IF SU.FLAG AND DBCTRL<15> = 'AC' THEN        ; * JCW05
         IF CARRIER.CHG = 1 AND ACTUAL.CHG = 0 THEN          ; * JCW05
            NOTE1 = 'Original Amount of ':OCONV(OLD.PRO.REC<8>,'MR2$')           ; * JCW05
            NOTE1 := ', changed on ':OCONV(DATE(),'D2/')     ; * JCW05
            NOTE2 = 'by ':USER:' in Accounting.'   ; * JCW05
            *** To prevent adding the notes more than once...
            LOCATE NOTE1 IN FB.NOTE<1> SETTING POS ELSE      ; * JCW05
               FB.NOTE<1,-1> = NOTE1     ; * JCW05
               FB.NOTE<1,-1> = NOTE2     ; * JCW05
            END                          ; * JCW05
         END ELSE                        ; * JCW05
            *** Remove appended notes when Accounting removes the one-cent variance
            IF OLD.PRO.REC<7> = 1 AND OLD.PRO.REC<8> = 0 THEN          ; * JCW05
               NOTE.CNT = DCOUNT(FB.NOTE,CHAR(253))          ; * JCW05
               FOR I = 1 TO NOTE.CNT     ; * JCW05
                  IF FB.NOTE<1,I>[1,19] = 'Original Amount of ' THEN   ; * JCW05
                     FB.NOTE = DELETE(FB.NOTE,1,I)           ; * JCW05
                     IF FB.NOTE<1,I>[1,3] = 'by ' THEN FB.NOTE = DELETE(FB.NOTE,1,I)       ; * JCW05
                     EXIT                ; * JCW05
                  END                    ; * JCW05
               NEXT I                    ; * JCW05
            END                          ; * JCW05
         END                             ; * JCW05
      END                                ; * JCW05

*****************************************************************
1825: * Skip Actual Charge
*****************************************************************
      *---- Display mileage
      IF CL.MILE.FLAG = 'Y' THEN
         IF SENT.TO.PCMILER THEN
            VIN='READ'
            VIN<2>=CH.NUM
            CALL PCMILER(VIN,VOUT,F.PCIN,F.PCOUT,F.MILEAGE)
            SENT.TO.PCMILER=0
            MILEAGE=OCONV(VOUT<1>,'MR0')
         END
         CRT @(5,15):MILEAGE'L1,#10'
         CRT @(0,22):@(-4):
      END

*****************************************************************
1850: * Calculate charges
*****************************************************************
      CHARGES = 0
      TEMP.CLIENT.ID=CLIENT.ID
      IF CLIENT.ID='00760' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='00978' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='00981' AND (CARRIER.ID='00601') THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='00986' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01028' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01029' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01044' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01045' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01059' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01024' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01026' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01104' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01058' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01532' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01361' AND (CARRIER.ID='00017' OR CARRIER.ID='00093') THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01384' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01763' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01777' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01385' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01533' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='01982' THEN          ; * JMK252
         TEMP.CLIENT.ID='00857'          ; * JMK252
      END                                ; * JMK252
      IF CLIENT.ID='02174' THEN          ; * JMK249
         TEMP.CLIENT.ID='00857'          ; * JMK249
      END                                ; * JMK249
      *DF      IF CLIENT.ID='02451' THEN          ; * DRF010
      *DF         TEMP.CLIENT.ID='00857'          ; * DRF010
      *DF      END                                ; * DRF010
      IF CLIENT.ID='02071' THEN
         TEMP.CLIENT.ID='00857'
      END
      IF CLIENT.ID='05060' THEN          ; * DRF017
         TEMP.CLIENT.ID='00857'          ; * DRF017
      END                                ; * DRF017
      IF CLIENT.ID='05457' THEN          ; * DRF055
         TEMP.CLIENT.ID='00857'          ; * DRF055
      END                                ; * DRF055
      IF CLIENT.ID='05401' THEN          ; * GRB001
         TEMP.CLIENT.ID='00857'          ; * GRB001
      END
      IF CLIENT.ID='05328' THEN          ; * GRB001
         TEMP.CLIENT.ID='00857'          ; * GRB001
      END
      TEMP.CARRIER.ID=CARRIER.ID
      IF USER.NAME='DAVID' THEN CALL ELINE('Wayne rating')
      IF LTL.CAR THEN
         BEGIN CASE
            CASE CARRIER.ID='00212'
            CASE CARRIER.ID='00171'
            CASE CARRIER.ID='00017'
            CASE CARRIER.ID='00093'
            CASE CARRIER.ID='00030'
            CASE CARRIER.ID='00050'
            CASE CARRIER.ID='00787'
            CASE CARRIER.ID='00014' AND TEMP.CLIENT.ID='00857' AND CLIENT.ID#'01028' AND CLIENT.ID#'01044' AND CLIENT.ID#'01045' AND CLIENT.ID#'01059'
            CASE CARRIER.ID='00124' AND CLIENT.ID='00857'
            CASE CARRIER.ID='00114'      ; *DRF013
            CASE CARRIER.ID='02715'      ; *DRF030
            CASE 1
               TEMP.CARRIER.ID='99999'
         END CASE
         IF CARRIER.ID='02715' AND (ORIG.STATE='TN' OR DEST.STATE='TN') THEN     ; * DRF031
            TEMP.CARRIER.ID='NO-02715'   ; * DRF031
         END                             ; * DRF031
         IF CLIENT.ID='00857' AND CARRIER.ID='00748' THEN
            TEMP.CARRIER.ID='NO-00748'
         END
         IF TEMP.CLIENT.ID='00857' AND CARRIER.ID='01786' THEN
            TEMP.CARRIER.ID='NO-01786'
         END
         IF TEMP.CARRIER.ID='00014' THEN
            TEMP.CARRIER.ID='NO-00014'
         END
         IF CARRIER.ID='00014' AND TEMP.CLIENT.ID='00857' AND CLIENT.ID#'01028' AND CLIENT.ID#'01044' AND CLIENT.ID#'01045' AND CLIENT.ID#'01059' THEN
            TEMP.CARRIER.ID='00014'
         END
         IF CLIENT.ID='00986' AND CARRIER.ID='00093' THEN
            TEMP.CLIENT.ID='00986'
         END
         IF CLIENT.ID='01361' AND CARRIER.ID='00093' THEN
            TEMP.CLIENT.ID='00986'
         END
         IF CLIENT.ID='00981' AND CARRIER.ID='00093' THEN
            TEMP.CLIENT.ID='NO-00981'
         END
         IF CLIENT.ID='00986' AND CARRIER.ID='00018' THEN
            TEMP.CLIENT.ID='00986'
            TEMP.CARRIER.ID='00018'
         END
         IF CLIENT.ID='00986' AND CARRIER.ID='02653' THEN
            TEMP.CLIENT.ID='00986'
            TEMP.CARRIER.ID='02653'
         END
         IF CLIENT.ID='01029' AND CARRIER.ID='00018' THEN
            TEMP.CLIENT.ID='00986'
            TEMP.CARRIER.ID='00018'
         END
         IF CLIENT.ID='00981' AND CARRIER.ID='00124' THEN
            TEMP.CLIENT.ID='NO-00981'
            INDIRECT=0
            IF INDEX('MN-WI-MI-IA-KS-MO-AL-GA-NC-SC-TN-KY-IN-IL-OH-PA-NY',ORIG.STATE,1) ELSE
               INDIRECT=1
            END
            IF INDEX('MN-WI-MI-IA-KS-MO-AL-GA-NC-SC-TN-KY-IN-IL-OH-PA-NY',DEST.STATE,1) ELSE
               INDIRECT=1
            END
            TEMP.CARRIER.ID='00124'
            IF INDIRECT THEN
               TEMP.CARRIER.ID='00563'
            END
         END
         IF USER='DAVID' THEN CALL ELINE('PRESS BREAK - RATING')
         IF TEMP.CLIENT.ID='00857' AND CARRIER.ID='00030' THEN
            BEGIN CASE
               CASE INDEX('AR-IL-KS-LA-MS-MO-NM-OK-TN-TX',ORIG.STATE,1) AND INDEX('AR-IL-KS-LA-MS-MO-NM-OK-TN-TX',DEST.STATE,1)
                  TEMP.CARRIER.ID='00030'
                  IF (ORIG.STATE='MO' AND ORIG.ZIP[1,3]#'641') OR (DEST.STATE='MO' AND DEST.ZIP[1,3]#'641') THEN
                     TEMP.CARRIER.ID='00030C'
                  END
               CASE INDEX('CA-AZ-NV-AR-IL-KS-LA-MS-MO-NM-OK-TN-TX',ORIG.STATE,1) AND INDEX('CA-AZ-NV-AR-IL-KS-LA-MS-MO-NM-OK-TN-TX',DEST.STATE,1)
                  TEMP.CARRIER.ID='00030A'
                  IF (ORIG.STATE='MO' AND ORIG.ZIP[1,3]#'641') OR (DEST.STATE='MO' AND DEST.ZIP[1,3]#'641') THEN
                     TEMP.CARRIER.ID='00030C'
                  END
               CASE DEST.STATE='CO'
                  TEMP.CARRIER.ID='00030B'
               CASE 1
                  TEMP.CARRIER.ID='00030C'
            END CASE
         END
         IF CLIENT.ID='00981' AND CARRIER.ID='00563' THEN
            TEMP.CLIENT.ID='NO-00981'
            TEMP.CARRIER.ID='00124'
         END
         IF CLIENT.ID='00981' AND CARRIER.ID='00018' THEN
            TEMP.CLIENT.ID='NO-00981'
            TEMP.CARRIER.ID='00018'
         END
         IF CLIENT.ID='00981' AND CARRIER.ID='00748' THEN
            TEMP.CLIENT.ID='NO-00981'
            TEMP.CARRIER.ID='00748'
         END
         IF CLIENT.ID='00981' AND CARRIER.ID='00787' THEN
            TEMP.CLIENT.ID='NO-00981'
            TEMP.CARRIER.ID='00787'
         END
         IF CLIENT.ID='00981' AND CARRIER.ID='00017' AND IN.OUT='O' AND ORIG.ZIP='53144' THEN
            TEMP.CLIENT.ID='NO-00981'
            TEMP.CARRIER.ID='00017'
         END
         IF CLIENT.ID='00981' AND CARRIER.ID='00017' AND IN.OUT='O' AND ORIG.ZIP='16506' THEN
            TEMP.CLIENT.ID='NO-00981'
            TEMP.CARRIER.ID='00017'
         END
         IF CLIENT.ID='00981' AND CARRIER.ID='00017' AND IN.OUT='O' AND ORIG.ZIP='44087' THEN
            TEMP.CLIENT.ID='NO-00981'
            TEMP.CARRIER.ID='00017'
         END
         IF CLIENT.ID='00981' AND CARRIER.ID='00017' AND IN.OUT='O' AND ORIG.ZIP='47978' THEN
            TEMP.CLIENT.ID='NO-00981'
            TEMP.CARRIER.ID='00017'
         END
         IF CLIENT.ID='00981' AND CARRIER.ID='00601' THEN
            TEMP.CLIENT.ID='00981'
            TEMP.CARRIER.ID='00601'
         END
         IF CLIENT.ID='00981' AND CARRIER.ID='00601' AND IN.OUT='O' AND ORIG.ZIP='36507' THEN
            TEMP.CLIENT.ID='00981'
            TEMP.CARRIER.ID='99601'
         END
         IF CLIENT.ID='00981' AND CARRIER.ID='00601' AND IN.OUT='I' AND DEST.ZIP='36507' THEN
            TEMP.CLIENT.ID='00981'
            TEMP.CARRIER.ID='99601'
         END
         IF CLIENT.ID='00978' AND CARRIER.ID='00017' THEN
            TEMP.CLIENT.ID='00978'
            TEMP.CARRIER.ID='00017'
         END
         IF CLIENT.ID='01044' AND CARRIER.ID='00014' THEN
            TEMP.CLIENT.ID='01045'
            TEMP.CARRIER.ID='00014'
         END
         IF CLIENT.ID='01059' AND CARRIER.ID='00014' THEN
            TEMP.CLIENT.ID='01045'
            TEMP.CARRIER.ID='00014'
         END
         IF CLIENT.ID='01045' AND CARRIER.ID='00014' THEN
            TEMP.CLIENT.ID='01045'
            TEMP.CARRIER.ID='00014'
         END
         IF CLIENT.ID='01028' AND CARRIER.ID='00014' THEN
            TEMP.CLIENT.ID='01045'
            TEMP.CARRIER.ID='00014'
         END
         IF CLIENT.ID='01024' AND CARRIER.ID='00014' THEN
            TEMP.CLIENT.ID='01045'
            TEMP.CARRIER.ID='00014'
         END
         IF CLIENT.ID='01044' AND CARRIER.ID='00017' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01059' AND CARRIER.ID='00017' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01045' AND CARRIER.ID='00017' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01028' AND CARRIER.ID='00017' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01024' AND CARRIER.ID='00017' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01044' AND CARRIER.ID='00093' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01059' AND CARRIER.ID='00093' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01045' AND CARRIER.ID='00093' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01028' AND CARRIER.ID='00093' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01024' AND CARRIER.ID='00093' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01044' AND CARRIER.ID='00171' THEN
            TEMP.CLIENT.ID='01045'
            TEMP.CARRIER.ID='00171'
         END
         IF CLIENT.ID='01059' AND CARRIER.ID='00171' THEN
            TEMP.CLIENT.ID='01045'
            TEMP.CARRIER.ID='00171'
         END
         IF CLIENT.ID='01045' AND CARRIER.ID='00171' THEN
            TEMP.CLIENT.ID='01045'
            TEMP.CARRIER.ID='00171'
         END
         IF CLIENT.ID='01028' AND CARRIER.ID='00171' THEN
            TEMP.CLIENT.ID='01045'
            TEMP.CARRIER.ID='00171'
         END
         IF CLIENT.ID='01024' AND CARRIER.ID='00171' THEN
            TEMP.CLIENT.ID='01045'
            TEMP.CARRIER.ID='00171'
         END
         IF CLIENT.ID='01044' AND CARRIER.ID='00212' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01059' AND CARRIER.ID='00212' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01045' AND CARRIER.ID='00212' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01028' AND CARRIER.ID='00212' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01024' AND CARRIER.ID='00212' THEN
            TEMP.CLIENT.ID='01045'
         END
         IF CLIENT.ID='01044' AND CARRIER.ID='00453' THEN
            TEMP.CLIENT.ID='00986'
            TEMP.CARRIER.ID='00453'
         END
         IF CLIENT.ID='01059' AND CARRIER.ID='00453' THEN
            TEMP.CLIENT.ID='00986'
            TEMP.CARRIER.ID='00453'
         END
         IF CLIENT.ID='01045' AND CARRIER.ID='00453' THEN
            TEMP.CLIENT.ID='00986'
            TEMP.CARRIER.ID='00453'
         END
         IF CLIENT.ID='01028' AND CARRIER.ID='00453' THEN
            TEMP.CLIENT.ID='00986'
            TEMP.CARRIER.ID='00453'
         END
         IF CLIENT.ID='01024' AND CARRIER.ID='00453' THEN
            TEMP.CLIENT.ID='00986'
            TEMP.CARRIER.ID='00453'
         END
         IF CLIENT.ID='00986' AND CARRIER.ID='00453' THEN
            TEMP.CLIENT.ID='00986'
            TEMP.CARRIER.ID='00453'
         END
         IF CLIENT.ID='01029' AND CARRIER.ID='00453' THEN
            TEMP.CLIENT.ID='00986'
            TEMP.CARRIER.ID='00453'
         END
         IF CLIENT.ID='00760' AND CARRIER.ID='00453' THEN
            TEMP.CLIENT.ID='00986'
            TEMP.CARRIER.ID='00453'
         END
         IF CLIENT.ID='00978' AND CARRIER.ID='00453' THEN
            TEMP.CLIENT.ID='00986'
            TEMP.CARRIER.ID='00453'
         END
         IF CLIENT.ID='00857' AND CARRIER.ID='00453' THEN
            TEMP.CLIENT.ID='00986'
            TEMP.CARRIER.ID='00453'
         END
         IF CLIENT.ID='01763' AND CARRIER.ID='00453' THEN
            TEMP.CLIENT.ID='00986'
            TEMP.CARRIER.ID='00453'
         END
         IF CLIENT.ID='01058' AND CARRIER.ID='00453' THEN
            TEMP.CLIENT.ID='00986'
            TEMP.CARRIER.ID='00453'
         END
         IF TEMP.CLIENT.ID='00986' AND TEMP.CARRIER.ID='00453' THEN    ; * DRF012
            IF ORIG.ZIP[1,5] MATCHES ('1A1N1A1N1A') OR DEST.ZIP[1,5] MATCHES ('1A1N1A1N1A') THEN     ; * DRF012
               TEMP.CLIENT.ID='XXXXX'    ; * DRF012
            END                          ; * DRF012
         END                             ; * DRF012
         IF CLIENT.ID='00978' AND CARRIER.ID='00114' AND BILL.DATE GT 13281 THEN
            TEMP.CLIENT.ID='XXXXX'
         END
         IF CLIENT.ID='00760' AND CARRIER.ID='00114' AND BILL.DATE GT 13281 THEN
            TEMP.CLIENT.ID='XXXXX'
         END
         IF CLIENT.ID='00978' AND CARRIER.ID='00601' THEN
            TEMP.CLIENT.ID='00978'
            TEMP.CARRIER.ID='00601'
         END
         IF CLIENT.ID='01361' AND CARRIER.ID='00601' THEN
            TEMP.CLIENT.ID='00978'
            TEMP.CARRIER.ID='00601'
         END
         IF CLIENT.ID='01361' AND CARRIER.ID='00014' THEN
            TEMP.CLIENT.ID='00857'
            TEMP.CARRIER.ID='00014'
         END
         IF CLIENT.ID='01763' AND CARRIER.ID='00601' THEN
            TEMP.CLIENT.ID='00978'
            TEMP.CARRIER.ID='00601'
         END
         IF CLIENT.ID='00760' AND CARRIER.ID='00601' THEN
            TEMP.CLIENT.ID='00978'
            TEMP.CARRIER.ID='00601'
         END
         IF CLIENT.ID='00986' AND CARRIER.ID='00601' THEN
            TEMP.CLIENT.ID='00978'
            TEMP.CARRIER.ID='00601'
         END
         IF TEMP.CLIENT.ID='00857' THEN
            IF CARRIER.ID='00212' OR CARRIER.ID='00171' THEN
               PRICING.APP=1
               BEGIN CASE
                  CASE ORIG.ZIP[1,3]='025' OR DEST.ZIP[1,3]='025'
                     PRICING.APP=0
                  CASE ORIG.ZIP[1,3]='026' OR DEST.ZIP[1,3]='026'
                     PRICING.APP=0
                  CASE ORIG.ZIP[1,3]='100' OR DEST.ZIP[1,3]='100'
                     PRICING.APP=0
                  CASE ORIG.ZIP[1,3]='101' OR DEST.ZIP[1,3]='101'
                     PRICING.APP=0
                  CASE ORIG.ZIP[1,3]='102' OR DEST.ZIP[1,3]='102'
                     PRICING.APP=0
                  CASE ORIG.ZIP[1,3]='103' OR DEST.ZIP[1,3]='103'
                     PRICING.APP=0
                  CASE ORIG.ZIP[1,3]='104' OR DEST.ZIP[1,3]='104'
                     PRICING.APP=0
                  CASE ORIG.ZIP[1,3]='105' OR DEST.ZIP[1,3]='105'
                     PRICING.APP=0
                  CASE ORIG.ZIP[1,3]='106' OR DEST.ZIP[1,3]='106'
                     PRICING.APP=0
                  CASE ORIG.ZIP[1,3]='107' OR DEST.ZIP[1,3]='107'
                     PRICING.APP=0
                  CASE ORIG.ZIP[1,3]='108' OR DEST.ZIP[1,3]='108'
                     PRICING.APP=0
                  CASE ORIG.ZIP[1,3]='109' OR DEST.ZIP[1,3]='109'
                     PRICING.APP=0
                  CASE ORIG.ZIP[1,3]='110' OR DEST.ZIP[1,3]='110'
                     PRICING.APP=0
                  CASE ORIG.ZIP[1,3]='111' OR DEST.ZIP[1,3]='111'
                     PRICING.APP=0
                  CASE ORIG.ZIP[1,3]='112' OR DEST.ZIP[1,3]='112'
                     PRICING.APP=0
                  CASE ORIG.ZIP[1,3]='113' OR DEST.ZIP[1,3]='113'
                     PRICING.APP=0
                  CASE ORIG.ZIP[1,3]='114' OR DEST.ZIP[1,3]='114'
                     PRICING.APP=0
                  CASE ORIG.ZIP[1,3]='115' OR DEST.ZIP[1,3]='115'
                     PRICING.APP=0
                  CASE ORIG.ZIP[1,3]='116' OR DEST.ZIP[1,3]='116'
                     PRICING.APP=0
                  CASE ORIG.ZIP[1,3]='117' OR DEST.ZIP[1,3]='117'
                     PRICING.APP=0
                  CASE ORIG.ZIP[1,3]='118' OR DEST.ZIP[1,3]='118'
                     PRICING.APP=0
                  CASE ORIG.ZIP[1,3]='119' OR DEST.ZIP[1,3]='119'
                     PRICING.APP=0
                  CASE ORIG.ZIP[1,3]='200' OR DEST.ZIP[1,3]='200'
                     PRICING.APP=0
                  CASE ORIG.ZIP[1,3]='201' OR DEST.ZIP[1,3]='201'
                     PRICING.APP=0
                  CASE ORIG.ZIP[1,3]='202' OR DEST.ZIP[1,3]='202'
                     PRICING.APP=0
                  CASE ORIG.ZIP[1,3]='203' OR DEST.ZIP[1,3]='203'
                     PRICING.APP=0
                  CASE ORIG.ZIP[1,3]='204' OR DEST.ZIP[1,3]='204'
                     PRICING.APP=0
                  CASE ORIG.ZIP[1,3]='205' OR DEST.ZIP[1,3]='205'
                     PRICING.APP=0
               END CASE
               IF NOT(PRICING.APP) THEN
                  TEMP.CARRIER.ID='NO-FEDEX'
               END
            END
         END
         IF CLIENT.ID='00857' AND CARRIER.ID='00601' THEN
            TEMP.CLIENT.ID='00978'
            TEMP.CARRIER.ID='00601'
         END
         IF TEMP.CLIENT.ID='00857' AND TEMP.CARRIER.ID='00017' AND IN.OUT='T' THEN
            TEMP.CLIENT.ID='00981'
         END
         IF TEMP.CLIENT.ID='00857' AND TEMP.CARRIER.ID='00787' THEN
            IF ORIG.STATE='TX' AND INDEX('FL-LA',DEST.STATE,1) THEN
               TEMP.CARRIER.ID='99998'
            END
            IF ORIG.STATE='AL' AND INDEX('FL-LA-OK-TX',DEST.STATE,1) THEN
               TEMP.CARRIER.ID='99997'
            END
            IF ORIG.STATE='AL' AND DEST.STATE='CA' THEN
               TEMP.CARRIER.ID='99996'
            END
         END
      END
      IF USER='DAVID' THEN CALL ELINE('ENTERING THE RATES')
      CALL FB.2.1.RATE(TEMP.CLIENT.ID,TEMP.CARRIER.ID,CLASS,MILEAGE,WEIGHT,CHARGES,MARGIN)
      IF CHARGES # 0 THEN
         READ BENCH.DFSC FROM F.NFSC,'B*':CARRIER.ID:'*':CLIENT.ID ELSE
            READ BENCH.DFSC FROM F.NFSC,'B*':CARRIER.ID ELSE BENCH.DFSC=''
         END
         READ CONTR.DFSC FROM F.NFSC,"C*":CARRIER.ID:"*":CLIENT.ID ELSE CONTR.DFSC=BENCH.DFSC
         IF BENCH.DFSC<30>='DISABLE' THEN
            BENCH.DFSC=''                ; ** No Effect
            CONTR.DFSC=''
         END
         IF BENCH.DFSC#'' THEN
            FSC.VIN=BILL.DATE
            FSC.VIN<2>=WEIGHT
            FSC.VIN<3>=MILEAGE
            FSC.VIN<6>=CHARGES
            FSC.VIN<7>=ORIG.STATE        ; * Special for Xpedx & AFS
            FSC.VIN<8>=DEST.STATE        ; * Special for AFS
            CALL CALC.FSC(FSC.VIN,FSC.VOUT,BENCH.DFSC,F.TABLES)
            CHARGES=CHARGES+FSC.VOUT<1>
            OLA.AMT=CHARGES
         END
      END

      *---- Check actual charges against calculated charges
      IF CHARGES # 0 AND ACTUAL.CHG-CHARGES GT MARGIN AND FIRST.TIME.TRY THEN
         FIRST.TIME.TRY=0
         CALL ELINE('Charges do not match on line audit. Please verify amount')
         ACTUAL.CHG=''
         GOTO 1800
      END
      IF CHARGES # 0 AND USER.TYPE#'A' THEN
         XX = ACTUAL.CHG-CHARGES
         IF XX GT MARGIN THEN
            BILL.STATUS='3'

         END ELSE
            BILL.STATUS=1
         END
      END
      IF TEMP.CLIENT.ID='00857' THEN
         IF CLIENT.ID='00986' THEN       ; * DRF033 ; * DRF044
            IF CARRIER.ID#'00212' AND CARRIER.ID#'00787' AND CARRIER.ID#'04861' AND CARRIER.ID#'01751' AND CARRIER.ID#'05156' AND CARRIER.ID#'00453' AND CARRIER.ID#'01786' AND CARRIER.ID#'00114' AND CARRIER.ID#'00017' AND CARRIER.ID#'00451' AND CARRIER.ID#'00223' AND CARRIER.ID#'00093' AND CARRIER.ID#'02653' AND CARRIER.ID#'00376' AND CARRIER.ID#'01648' AND CARRIER.ID#'00030' AND CARRIER.ID#'00050' THEN
               BILL.STATUS='4'
               IF LTL.CAR THEN
                  MISROUTE.ARRAY=''
                  MISROUTE.ARRAY<1>=CHARGES
                  MISROUTE.ARRAY<2>='70000'
                  MISROUTE.AMOUNT=CHARGES
                  MISROUTE.CARRIER='70000'
               END
            END
         END ELSE
            IF CARRIER.ID#'00212' AND CARRIER.ID#'00787' AND CARRIER.ID#'04861' AND CARRIER.ID#'01751' AND CARRIER.ID#'05156' AND CARRIER.ID#'00453' AND CARRIER.ID#'01786' AND CARRIER.ID#'00114' AND CARRIER.ID#'00017' AND CARRIER.ID#'00451' AND CARRIER.ID#'00223' AND CARRIER.ID#'00093' AND CARRIER.ID#'00376' AND CARRIER.ID#'01648' AND CARRIER.ID#'00030' AND CARRIER.ID#'00014' AND CARRIER.ID#'00601' AND CARRIER.ID# '00171' AND CARRIER.ID#'00050' THEN
               BILL.STATUS='4'
               IF CARRIER.ID='00124' AND CLIENT.ID='00857' THEN
                  BILL.STATUS='3'
               END
               IF LTL.CAR THEN
                  MISROUTE.ARRAY=''
                  MISROUTE.ARRAY<1>=CHARGES
                  MISROUTE.ARRAY<2>='70000'
                  MISROUTE.AMOUNT=CHARGES
                  MISROUTE.CARRIER='70000'
               END
            END
         END
      END

*****************************************************************
1875:
*****************************************************************
      IF USER.TYPE='A' AND BILL.STATUS='3' AND CHARGES AND FIRST.TIME.THRU THEN
         IF CAPACITY.LOAD#'' THEN
            CRT @(0,21):'Capacity'
         END ELSE
            CRT @(0,21):'        '
         END
         CRT @(15,21):CHARGES'R26#9'
         HELP='[1]=Accept OLA, [2]=Accept Data, [3]=Enter Charges'
         CALL GEN.IN(0,22,'Enter [A] to accept these amounts --','',Q,0,2,'','',2,-2,22,0,QI,HELP,0,23)
         CC+=LEN(QI)+1
         QI = OCONV(QI,'MCU')
         IF QI='X' THEN
            CRT @(0,22):@(-3)
            GOTO 1600
         END
         IF QI='EX' THEN
            GOTO PROGRAM.EXIT            ; * NKH10
         END
         IF QI='3' THEN
            CARRIER.CHG=''
            ACTUAL.CHG=''
            OVERCHARGE.AMT=''
            LOGISTICS.AMT=''
            AUTO.CAL=0
            FIRST.TIME.THRU=0
            GOTO 1700
         END
         IF QI='2' THEN
            CRT @(0,21):@(-3)
            GOTO 2200
         END
         IF QI='A' OR QI = '1' THEN
            ACTUAL.CHG=CHARGES
            OVERCHARGE.AMT=CARRIER.CHG-ACTUAL.CHG
            IF OVERCHARGE.AMT < 0 THEN
               OVERCHARGE.AMT=0
            END
            CRT @(6,19):CARRIER.CHG'R26#9'
            CRT @(15,19):ACTUAL.CHG'R26#9'
            CRT @(0,22):@(-3)
            GOTO 1900
         END
         CALL ELINE('Invalid entry')
         GOTO 1875
      END

*****************************************************************
1900: * Select variance
*****************************************************************
      VARIANCE = (CARRIER.CHG-ACTUAL.CHG)'R0'
      CRT @(25,19):VARIANCE'R26#7'
      IF (AUTO.CAL AND CLIENT.ID='00885' AND CARRIER.ID='00015' AND BILL.DATE GE ICONV('09/09/97','D') AND DEST.ZIP # "99999" AND ORIG.ZIP # "99999") OR (CLIENT.ID='00223' AND AUTO.CAL) OR (CLIENT.ID='00924' AND CARRIER.ID='03324' AND AUTO.CAL) OR (CLIENT.ID='01228' AND CARRIER.ID='03324') OR (CLIENT.ID='01212' AND AUTO.CAL) OR (CLIENT.ID='01088' AND CARRIER.ID='00807' AND AUTO.CAL) OR (CLIENT.ID='01674' AND CARRIER.ID='00041' AND AUTO.CAL) OR (AUTO.CAL AND CLIENT.ID='02079' AND LTL.CAR) OR (AUTO.CAL AND CLIENT.ID='00373' AND CARRIER.ID = ' 00601') THEN  ; * SWB01 ; * DRF046    ; * DRF106
         IF AUDIT#'Y' THEN
            IF USER='DAVID' THEN CALL ELINE('PRESS BREAK FOR VARIANCE')
            VAR.ARR=''
            VAR.ARR<3>=VARIANCE
         END
         VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
         IF BACK.FLAG THEN GOTO 1800
         GOTO 1950
      END
      IF CLIENT.ID='01176' AND (CARRIER.ID='00015' OR CARRIER.ID='01075') THEN
         VAR.ARR=''
         VAR.ARR<3>=VARIANCE
         VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
         IF BACK.FLAG THEN GOTO 1800
         GOTO 1950
      END
      IF VARIANCE # 0 & VERSION = 0 THEN
         IF (USER.TYPE='A' AND VAR.ARR<1>#'') OR (USER.TYPE='A' AND VAR.ARR<2>#'') OR (AUDIT#'Y' AND AUDIT#'U') OR (USER.TYPE='A') THEN
            IF VAR.ARR<8>='Tariff Error' THEN VAR.ARR<8>='' ; VAR.ARR<11>=''     ; * JMK154
            IF VAR.ARR<7>='Tariff Error' THEN VAR.ARR<7>='' ; VAR.ARR<10>=''     ; * JMK154
            IF OLD.PRO.REC<41,1>#'' AND VAR.ARR<1>#'' THEN VAR.ARR<7>=OLD.PRO.REC<41,1>
            IF OLD.PRO.REC<41,2>#'' AND VAR.ARR<2>#'' THEN VAR.ARR<8>=OLD.PRO.REC<41,2>
            IF OLD.PRO.REC<41,3>#'' AND VAR.ARR<3>#'' THEN VAR.ARR<9>=OLD.PRO.REC<41,3>
            BACK.FLAG = 0
            VIN=0                        ; * Starting Characters
            VIN<2>=USER
            GOSUB GET.ALLOW.DISCOUNTS
            VIN<3>=ALLOW.DISCOUNTS
            VIN<4>=CLIENT.ID
            VIN<5>=CARRIER.ID
            VOUT=''
            CALL FB.2.1.VARIANCE.NEW(VIN,VOUT,MAT CLIENT.REC,BAL.DUE,VARIANCE,VAR.ARR,QI)
            CC+=VOUT<1> ; GOSUB PRINT.CC
            DISC.DESC=VOUT<2>            ; * JMK34
            GOSUB 8100                   ; * Display screen
            GOSUB 8200                   ; * Display data
            IF QI = 'X' THEN
               BACK.FLAG = 1
               GOTO 1800
            END
            IF QI = 'D' THEN GOTO 1900
            IF QI = 'EX' THEN GOTO PROGRAM.EXIT    ; * NKH10
         END
         IF BACK.FLAG THEN GOTO 1800
      END ELSE
         IF BACK.FLAG THEN GOTO 1800
      END

*****************************************************************
1950: * Enter Misrouting charge
*****************************************************************
      IF CLIENT.REC(69)='Y' OR CLIENT.REC(69)=IN.OUT THEN
         MISROUTE.ARRAY=''
         MISROUTE.AMOUNT=''
         MISROUTE.CARRIER=''
      END
      IF ((CLIENT.REC(69)='Y' OR MISROUTE.ARRAY<1>#'') AND (CLIENT.REC(69)='Y' OR MISROUTE.ARRAY<2>#'')) OR ((CLIENT.REC(69)=IN.OUT OR MISROUTE.ARRAY<1>#'') AND CLIENT.REC(69)=IN.OUT OR MISROUTE.ARRAY<2>#'') THEN
         CRT @(43,17):' Charges    Approved Carrier'
         CRT @(33,19):'Misroute: '
         CRT @(33,20):'LCC: '
         CRT @(43,18):'----------  -------'
         IF USER='DAVID' THEN CALL ELINE('PRESS BREAK - GOING INTO MISROUTE')
         IF USER='NPRATT' THEN CALL ELINE('PRESS BREAK - GOING INTO MISROUTE')   ; * RR
         *********************************************************************
         *MISROUTE.FLG = 1 ; VC.OVERRIDE = ''   NKH01 - For Testing
         BEGIN CASE
            CASE MISROUTE.FLG=1 AND VC.OVERRIDE#'Y'          ; * JMK56 ; * JMK153
               GOSUB FIND.GOOD.CARRIER   ; * NPR775 Call to internal FIND.GOOD.CARRIER
            CASE (CLIENT.ID='00877' OR CLIENT.ID='00893') AND CARRIER.ID='00004'
               GOSUB FIND.GOOD.CARRIER   ; * NPR775 Call to internal FIND.GOOD.CARRIER
         END CASE

         IF USER='DAVID' THEN CALL ELINE('Got All Misroute Information')

         SAVE.MR.AMOUNT=MISROUTE.AMOUNT ; SAVE.MR.CARRIER=MISROUTE.CARRIER
         *********************************************************************
         CRT @(43,19):MISROUTE.AMOUNT'R26#10'
         IF MISROUTE.CARRIER#'' THEN
            READV MISROUTE.NAME FROM F.CARRIERS,MISROUTE.CARRIER,1 ELSE
               MISROUTE.NAME='Unknown Carrier'
            END
            CRT @(56,19):MISROUTE.CARRIER'R%5':' ':MISROUTE.NAME'L#10'
         END ELSE
            CRT @(56,19):SPACE(16)
         END
         IF SU.FLAG THEN
            IF BACK.FLAG AND MISROUTE.AMOUNT+0#0 THEN GOTO ENTER.MISROUTE.CARRIER

*****************************************************************
ENTER.MISROUTE.CHARGE:
*****************************************************************
            BACK.FLAG = 0
            HELP = "Enter the Misrouting Charge. [X]=Back [EX]=Exit"
            REQ=0
            CALL GEN.IN(43,19,MISROUTE.AMOUNT'R26#10','AMT2',Q,REQ,9,'','',2,-10,19,0,QI,HELP,0,23)
            CC+=LEN(QI)+1 ; GOSUB PRINT.CC
            QI = OCONV(QI,'MCU')
            BEGIN CASE
               CASE QI = ''
                  Q = MISROUTE.AMOUNT
               CASE QI = 'X'
                  CRT @(43,19):MISROUTE.AMOUNT'R26#10'
                  BACK.FLAG=1
                  IF SU.FLAG THEN
                     *DF                     IF USER='DAVID' AND NOT(OK.TO.EDIT) THEN GOTO 1600
                     IF NOT(OK.TO.EDIT) THEN GOTO 1600
                  END
                  GOTO 1800
               CASE NUM(QI)
                  NULL
               CASE QI = 'EX'
                  GOTO PROGRAM.EXIT      ; * NKH10
               CASE 1
                  GOTO 1950
            END CASE
            MISROUTE.AMOUNT = Q'R0'
            IF VC.OVERRIDE='Y' AND MISROUTE.AMOUNT+0#0 THEN  ; * JMK05 ; * JMK56 ; * JMK153
               CALL ELINE("Vendor Override in Effect...No Misroutes")  ; * JMK05 ; * JMK56 ; * JMK153
               MISROUTE.AMOUNT=0         ; * JMK05 ; * JMK56 ; * JMK153
            END                          ; * JMK05 ; * JMK56 ; * JMK153
            CRT @(43,19):MISROUTE.AMOUNT'R26#10'
            IF MISROUTE.AMOUNT+0=0 THEN
               CRT @(56,19):SPACE(16)
               MISROUTE.CARRIER=''
               MISROUTE.NAME=''
            END
            IF MISROUTE.AMOUNT < 100 AND MISROUTE.AMOUNT # 0 THEN
               HELP = 'Is this the correct amount?':BELL
               CALL GEN.IN(0,22,'Correct? Y ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
               CC+=LEN(QI)+1 ; GOSUB PRINT.CC
               QI = OCONV(QI,'MCU')
               IF QI # 'Y' THEN GOTO 1950
            END
         END
      END ELSE
         IF SU.FLAG THEN
            IF BACK.FLAG THEN GOTO 1900
         END ELSE
            IF BACK.FLAG THEN GOTO 1800
         END
      END

      IF SU.FLAG THEN
         IF MISROUTE.AMOUNT+0#0 THEN

*****************************************************************
ENTER.MISROUTE.CARRIER:
*****************************************************************
            IF MISROUTE.CARRIER # '' THEN MASK = MISROUTE.CARRIER'R%5' ELSE MASK = '#####'
            BACK.FLAG=0
            HELP = "Enter the approved carrier for the misroute."
            CALL GEN.IN(56,19,MASK,'',Q,0,20,'','',2,-5,19,0,QI,HELP,0,23)
            CC+=LEN(QI)+1 ; GOSUB PRINT.CC
            QI = OCONV(QI,'MCU')
            IF QI='' THEN QI=MISROUTE.CARRIER ; Q=MISROUTE.CARRIER
            BEGIN CASE
               CASE QI = 'EX'
                  GOTO PROGRAM.EXIT      ; * NKH10
               CASE QI = 'X'
                  IF MISROUTE.CARRIER#'' THEN
                     CRT @(56,19):MISROUTE.CARRIER'R%5'
                  END ELSE
                     CRT @(56,19):SPACE(16)
                  END
                  GOTO 1950
               CASE QI = ''
                  CALL ELINE('Entry is required.')
                  GOTO ENTER.MISROUTE.CARRIER
               CASE NOT(QI MATCHES "0N")
                  VIN=0                  ; * Starting Chars In
                  VOUT=''
                  CALL SOUNDEX.DISPLAY.NEW(VIN,VOUT,QI,'CARRIERS','SDX.CARRIER,NAME','1,2,3,4',ITEM.LIST)
                  CC+=VOUT<1> ; GOSUB PRINT.CC
                  GOSUB 8100
                  GOSUB 8200
                  BEGIN CASE
                     CASE ITEM.LIST = ''
                        GOTO ENTER.MISROUTE.CARRIER
                     CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                        GOTO ENTER.MISROUTE.CARRIER
                     CASE ITEM.LIST # ''
                        IF NUM(ITEM.LIST<1,1>) THEN SND.DATA=ITEM.LIST<1,1> ; GOSUB SEND.DATA
                        GOTO ENTER.MISROUTE.CARRIER
                  END CASE
               CASE NUM(QI)
                  Q = QI'R%5'
               CASE 1
                  GOTO ENTER.MISROUTE.CARRIER
            END CASE
            MISROUTE.CARRIER = Q

            *----   Get Carrier Data
            READ MISROUTE.CARRIER.REC FROM F.CARRIERS,MISROUTE.CARRIER ELSE      ; * JMK264
               CALL ELINE("ERROR - Carrier ":CARRIER.ID:" not on file.")
               GOTO ENTER.MISROUTE.CARRIER
            END
            IF MISROUTE.CARRIER.REC<89>#'A' THEN   ; * JMK264
               CALL ELINE("ERROR - Carrier ":CARRIER.ID:" is currently not active. Choose again.")   ; * JMK264
               GOTO ENTER.MISROUTE.CARRIER         ; * JMK264
            END                          ; * JMK264
            MISROUTE.NAME=MISROUTE.CARRIER.REC<1>  ; * JMK264
            CRT @(56,19):MISROUTE.CARRIER'R%5':' ':MISROUTE.NAME'L#10'
            IF SAVE.MR.AMOUNT#MISROUTE.AMOUNT OR SAVE.MR.CARRIER#MISROUTE.CARRIER THEN
               * If the user changed the default misroute amt or carrier then
               VER.CODE='M' ; VER.TYPE='R' ; GOSUB UPDATE.VERIFY
            END
         END
      END

      MISR.CHK = 0 ; SMARTY.CHK = 0      ; * NKH78
      IF (DATE() GE 11127 AND MISROUTE.AMOUNT+0#0) OR CLIENT.ID='01651' THEN
         IF IN.OUT = 'I' OR CLIENT.ID='01651' THEN
            MISR.CHK = 1                 ; * NKH78
            GO ENTER.VEND.CUST           ; * NKH78
         END
      END

      * Begin NKH78
      LOCATE "RES" IN MISC.CHG.CODES SETTING MPOS THEN
         SMARTY.CHK = 1
         GO ENTER.VEND.CUST
      END

      GO CUST.VEND.END
      * End NKH78

*      IF (DATE() GE 11127 AND MISROUTE.AMOUNT+0#0) OR CLIENT.ID='01651' THEN    ; * NKH78

*****************************************************************
ENTER.VEND.CUST:
*****************************************************************
*         IF IN.OUT = 'I' OR CLIENT.ID='01651' THEN                              ; * NKH78
      T.ADDRESS = CUST.VEND.ADDR
      IF VC.ID # '' THEN
         READ VCUST.REC FROM F.VEND.CUST,VC.ID THEN
            IF SMARTY.CHK AND VCUST.REC<3> # '' THEN GO CUST.VEND.END  ; * NKH78
            T.ADDRESS<1>=VCUST.REC<1>    ; * Name
            T.ADDRESS<2>=VCUST.REC<3,1>  ; * Address 1
            T.ADDRESS<3>=VCUST.REC<3,2>  ; * Address 2
            T.ADDRESS<5>=VCUST.REC<5>    ; * City
            T.ADDRESS<6>=VCUST.REC<6>    ; * State
            T.ADDRESS<4>=VCUST.REC<7>    ; * Zip
         END
      END ELSE
         *            CALL ELINE('VC.ID WAS NULL! DID NOT READ VEND.CUST.')
      END

*****************************************************************
DISPLAY.ADDR:
*****************************************************************
      ADDR.POS = 1

*****************************************************************
UPDATE.ADDR:
*****************************************************************
      CRT @(40, 6):'|     ENTER CUST.VEND ADDRESS      '
      CRT @(40, 7):'|--------------------------------------'
      CRT @(40, 8):'| NAME  :':T.ADDRESS<1>'L#30':@(-4)
      CRT @(40, 9):'| ADDR 1:':T.ADDRESS<2>'L#30':@(-4)
      CRT @(40,10):'| ADDR 2:':T.ADDRESS<3>'L#30':@(-4)
      CRT @(40,11):'| ZIP   :':T.ADDRESS<4>'L#30':@(-4)
      CRT @(40,12):'| CITY  :':T.ADDRESS<5>'L#30':@(-4)
      CRT @(40,13):'| STATE :':T.ADDRESS<6>'L#30':@(-4)
      CRT @(40,14):'| UPDATE:':@(-4)
      CRT @(40,15):'---------------------------------------'

*****************************************************************
EDIT.ADDR:
*****************************************************************
      HELP = "Enter Cust.Vendor Address information. [X]=Back [EX]=Exit"
      MASK = T.ADDRESS<ADDR.POS>'L#30'
      CALL GEN.IN(49,7+ADDR.POS,MASK,'',Q,0,30,'','',2,49,7+ADDR.POS,1,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      BEGIN CASE
         CASE QI='X'
            CRT @(49,7+ADDR.POS):T.ADDRESS<ADDR.POS>:@(-4)
            IF ADDR.POS = 1 THEN
               IF SU.FLAG AND MISR.CHK THEN        ; * NKH78
                  GOTO ENTER.MISROUTE.CARRIER
               END ELSE
                  GOTO 1800
               END
            END ELSE
               ADDR.POS-=1
               GOTO EDIT.ADDR
            END
         CASE QI='EX'
            GOTO PROGRAM.EXIT            ; * NKH10
         CASE 1
            IF Q#'' THEN T.ADDRESS<ADDR.POS>=TRIM(Q)
            VAL = T.ADDRESS<ADDR.POS>
            CRT @(49,7+ADDR.POS):T.ADDRESS<ADDR.POS>:@(-4)
            IF ADDR.POS = 2 AND (TRIM(VAL) = '' OR TRIM(VAL) = 'BAD ADDRESS') THEN
               CALL ELINE('MUST HAVE AN ADDRESS.')
               GOTO EDIT.ADDR
            END
            IF ADDR.POS = 3 THEN GOTO SAVE.ADDR
            ADDR.POS+=1
            IF ADDR.POS = 5 AND VAL # '' THEN
               READ T.REC FROM F.ZIPS,VAL THEN
                  T.ADDRESS<5> = T.REC<1>
                  T.ADDRESS<6> = T.REC<2>
                  GOTO UPDATE.ADDR
               END
            END
            GOTO EDIT.ADDR
      END CASE

*****************************************************************
SAVE.ADDR:
*****************************************************************
      HELP = "Update Cust.Vendor Address Information? [Y]es [N]o [X]=Back [EX]=Exit"
      MASK = 'Y '
      CALL GEN.IN(49,14,MASK,'',Q,0,2,'','',2,49,14,1,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      BEGIN CASE
         CASE QI='X' OR QI='N'
            GOTO EDIT.ADDR
         CASE QI='EX'
            GOTO PROGRAM.EXIT            ; * NKH10
         CASE QI='' OR QI='Y'
         CASE 1
            CALL ELINE('Invalid Option.  Y, N, X or EX.')
            GOTO SAVE.ADDR
      END CASE

      IF VC.ID # '' THEN
         OLD.VCUST.NAME = VCUST.REC<1>
         VCUST.REC<1> = T.ADDRESS<1>
         VCUST.REC<3,1> = T.ADDRESS<2>
         VCUST.REC<3,2> = T.ADDRESS<3>
         VCUST.REC<5> = T.ADDRESS<5>
         VCUST.REC<6> = T.ADDRESS<6>
         VCUST.REC<7> = T.ADDRESS<4>
         IF VCUST.REC<1> # OLD.VCUST.NAME THEN
            *** Remove link to old description in VEND.CUST.NAMES
            VCN.ID = VCUST.REC<42>
            READ VCN.REC FROM F.VCN, VCN.ID THEN
               LOCATE VC.ID IN VCN.REC<2> SETTING POS THEN
                  VCN.REC = DELETE(VCN.REC,2,POS)
                  IF VCN.REC<2> # '' THEN
                     WRITE VCN.REC ON F.VCN, VCN.ID
                  END ELSE
                     DELETE F.VCN, VCN.ID
                     CALL SOUNDEX.EDIT(OLD.VCUST.NAME,'',VCN.ID,'SDX.VCN,':CLIENT.ID)
                  END
               END
            END
            STMT = 'SELECT VEND.CUST.NAMES,':CLIENT.ID:' WITH 1 = "':VCUST.REC<1>:'" SAMPLE 1'
            EXECUTE STMT RTNLIST VCN.LIST CAPTURING MSG
            BEGIN CASE
               CASE @SELECTED < 1
                  GOSUB ADD.NEW.VCN
                  VCN.REC = ''
                  VCN.REC<1> = VCUST.REC<1>
                  VCN.REC<2> = VC.ID
                  WRITE VCN.REC TO F.VCN, VCN.ID
                  CALL SOUNDEX.EDIT('',VCUST.REC<1>,VCN.ID,'SDX.VCN,':CLIENT.ID)
               CASE @SELECTED = 1
                  READNEXT VCN.ID FROM VCN.LIST THEN
                     READ VCN.REC FROM F.VCN, VCN.ID THEN
                        LOCATE VC.ID IN VCN.REC<2> SETTING POS ELSE
                           VCN.REC<2,-1> = VC.ID
                           WRITE VCN.REC ON F.VCN, VCN.ID
                        END
                     END
                  END
            END CASE
            VCUST.REC<42> = VCN.ID
         END
         WRITE VCUST.REC ON F.VEND.CUST,VC.ID
         CALL SOUNDEX.EDIT(OLD.VCUST.NAME,VCUST.REC<1>,VC.ID,'SDX.VEND.CUST,':CLIENT.ID)
         ZIP = VCUST.REC<7>              ; * JCW04
         DESC = VCUST.REC<1>             ; * JCW04
         DESC = TRIM(OCONV(DESC,'MCU'))  ; * JCW04
         IF ZIP # 99999 THEN             ; * JCW04
            XREF.ID = DESC:'*':ZIP       ; * JCW04
         END ELSE                        ; * JCW04
            XREF.ID = DESC               ; * JCW04
         END                             ; * JCW04
         WRITEV VC.ID TO F.VC.XREF, XREF.ID, 1     ; * JCW04
         READ VC.ZIP.REC FROM F.VC.ZIPS, ZIP ELSE VC.ZIP.REC = ''      ; * JCW04
         LOCATE VC.ID IN VC.ZIP.REC<1> SETTING POS ELSE      ; * JCW04
            VC.ZIP.REC<1,-1> = VC.ID     ; * JCW04
            WRITE VC.ZIP.REC TO F.VC.ZIPS, ZIP     ; * JCW04
         END                             ; * JCW04
      END
      CUST.VEND.ADDR = T.ADDRESS
      GOSUB 8100                         ; * Display screen
      GOSUB 8200                         ; * Display data
*         END  ; * NKH78
*      END  `  ; * NKH78

*****************************************************************
CUST.VEND.END:                           ; * NKH78
*****************************************************************

      TEMP.REC = ''
      IF OLD.PRO.REC<39>='R' AND REJECT.FLAG#'R' ELSE
         TEMP.REC<53>=OLD.PRO.REC<53>
         TEMP.REC<54>=OLD.PRO.REC<54>
         TEMP.REC<98>=OLD.PRO.REC<98>
      END
      TEMP.REC<1> = BILL.DATE
      TEMP.REC<2> = IN.OUT
      IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN     ; * United Parcel Service
         TEMP.REC<3>='99999'
         TEMP.REC<4>='99999'
      END ELSE
         TEMP.REC<3>=ORIG.ZIP
         TEMP.REC<4>=DEST.ZIP
      END
      TEMP.REC<5> = EXP.CODE
      IF CLIENT.ID='30028' THEN          ; * JMK193
         IF TEMP.REC<236>='' THEN        ; * JMK193
            TEMP.REC<236>=EXP.CCTR       ; * JMK193
         END                             ; * JMK193
         IF TEMP.REC<237>='' THEN        ; * JMK193
            TEMP.REC<237>=EXP.PROJ       ; * JMK193
         END                             ; * JMK193
      END                                ; * JMK193
      TEMP.REC<6> = WEIGHT
      TEMP.REC<7> = CARRIER.CHG
      TEMP.REC<8> = ACTUAL.CHG
      TEMP.REC<9> = DIVISION
      TEMP.REC<10> = 0-VAR.ARR<1>
      TEMP.REC<11> = 0-VAR.ARR<2>
      TEMP.REC<12> = 0-VAR.ARR<3>
      TEMP.REC<17> = VC.ID
      TEMP.REC<18> = ZIP.ARR<1>
      NUM.ZIPS = DCOUNT(TEMP.REC<18>, @VM)
      IF NUM.ZIPS > 1 THEN
         DEL TEMP.REC<18,NUM.ZIPS>
         DEL TEMP.REC<18,1>
      END
      TEMP.REC<19> = MILEAGE
      TEMP.REC<20> = CARRIER.ID
      TEMP.REC<22> = MISROUTE.ARRAY<1>
      TEMP.REC<23> = MISROUTE.ARRAY<2>
      TEMP.REC<24> = DISC.PERC
      IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN
         TEMP.REC<25>='ZZ'
         TEMP.REC<26>='ZZ'
         TEMP.REC<27>='UPS'
         TEMP.REC<28>='UPS'
      END ELSE
         IF CARRIER.ID='01075' THEN
            IF ORIG.ZIP='99999' THEN
               TEMP.REC<25>='ZZ'
               TEMP.REC<27>='FedEx Ground'
            END ELSE
               TEMP.REC<25>=ORIG.STATE
               TEMP.REC<27>=ORIG.CITY
            END
            IF DEST.ZIP='99999' THEN
               TEMP.REC<26>='ZZ'
               TEMP.REC<28>='FedEx Ground'
            END ELSE
               TEMP.REC<26>=DEST.STATE
               TEMP.REC<28>=DEST.CITY
            END
         END ELSE
            TEMP.REC<25>=ORIG.STATE
            TEMP.REC<26>=DEST.STATE
            TEMP.REC<27>=ORIG.CITY
            TEMP.REC<28>=DEST.CITY
         END
      END
      TEMP.REC<38> = DUE.DATE
      TEMP.REC<238> = PMT.DUE.DATE       ; *NPR048
      VAR.CODE = ''
      IF VARIANCE = 0 THEN VAR.ARR = ''
      IF VAR.ARR<1>'R0' # 0 ! VAR.ARR<4>'R0' NE 0 THEN
         VAR.CODE = VAR.CODE:'D'
      END
      IF VAR.ARR<2>'R0' # 0 ! VAR.ARR<5>'R0' NE 0 THEN
         VAR.CODE = VAR.CODE:'O'
      END
      IF VAR.ARR<3>'R0' # 0 ! VAR.ARR<6>'R0' NE 0 THEN
         VAR.CODE = VAR.CODE:'C'
      END
      TEMP.REC<29> = VAR.CODE
      READV E.DATE FROM F.HIST, OLD.PRO.ID, 30 THEN
         TEMP.REC<30> = E.DATE
      END
      IF VERSION > 0 THEN TEMP.REC<30>=''          ; * Set to Null on Dups
      IF DATE() LE CLIENT.REC(82) THEN
         NEW.BILL.DATE=CLIENT.REC(82)+1
      END ELSE
         NEW.BILL.DATE=DATE()
      END
      IF OLD.PRO.REC<66>='N' AND OLD.PRO.REC<39> = 'R' AND TEMP.REC<39> # 'R' THEN TEMP.REC<30>=''   ; * JIM - NEVERPAYS
      IF TEMP.REC<30>='' THEN TEMP.REC<30>=NEW.BILL.DATE
      IF TEMP.REC<39>#'R' AND OLD.PRO.REC<37>='' THEN
         IF TEMP.REC<30> LE CLIENT.REC(82) THEN TEMP.REC<30>=NEW.BILL.DATE
      END
      TEMP.REC<34> = 0-VAR.ARR<4>
      TEMP.REC<35> = 0-VAR.ARR<5>
      TEMP.REC<36> = 0-VAR.ARR<6>
      IF USER.TYPE='A' THEN
         IF REJECT.FLAG THEN
            TEMP.REC<39>=REJECT.FLAG
         END ELSE
            TEMP.REC<39>=OLD.PRO.REC<39>
            TEMP.REC<54>=OLD.PRO.REC<54>
            TEMP.REC<98>=OLD.PRO.REC<98>
         END
      END
      TEMP.REC<40> = BANK.ID
      TEMP.REC<45> = VERIFIED
      TEMP.REC<68> = BILL.STATUS
      TEMP.REC<88> = OLD.PRO.REC<88>     ; * Copy over EDI Links
      TEMP.REC<93> = MISSING.DATA
      TEMP.REC<96>=OVERRIDE.STATUS
      IF OLA.AMT#'' THEN
         TEMP.REC<99>=OLA.AMT
      END
      TEMP.REC<116>=OVERRIDE.FIELD
      TEMP.REC<117>=OVERRIDE.OPERATOR
      TEMP.REC<118>=OVERRIDE.INFO
      TEMP.REC<119>=FLAT.RATE
      IF REJECT.FLAG # '' THEN TEMP.REC<39> = REJECT.FLAG
      IF (OLD.PRO.REC<88>) AND TEMP.REC<39>='' THEN
         TEMP.REC<39>='V'                ; * IF EDI, Mark as verified
      END
      IF QV.VALID THEN                   ; * JMK24
         * Begin NKH30
         IF TEMP.REC<68> = '1' THEN
            TEMP.REC<39> = 'O'
            IF CARRIER.REC<131,1> = 'Y' THEN       ; * NKH56
               TEMP.REC<292> = "Y"       ; * NKH56
            END                          ; * NKH56
         END ELSE
            TEMP.REC<39> = TEMP.REC<68>
         END
         TEMP.REC<98> = TEMP.REC<8>
         * End NKH30
         IF USER.TYPE#'A' AND OLD.PRO.REC<37>='' AND (CLIENT.ID='01290' OR CLIENT.ID='01313' OR CLIENT.ID='01309' OR CLIENT.ID='01316' OR CLIENT.ID='01339' OR CLIENT.ID='01333' OR CLIENT.ID='01320' OR CLIENT.ID='01322') THEN
            TEMP.REC<98>=TEMP.REC<8>
         END
      END                                ; * JMK24
      READV P.DATE FROM F.HIST, OLD.PRO.ID, 37 THEN
         TEMP.REC<37> = P.DATE
      END
      IF OLD.PRO.REC<66>='N' AND OLD.PRO.REC<39> = 'R' AND TEMP.REC<39> # 'R' THEN TEMP.REC<37>=''
      IF VERSION > 0 THEN TEMP.REC<37>=''
      TEMP.REC<41,1> = VAR.ARR<7>
      TEMP.REC<41,2> = VAR.ARR<8>
      TEMP.REC<41,3> = VAR.ARR<9>
      TEMP.REC<46> = MIN.CHG
      APRVD.CARRIER = 'N'
      IF QI = 'W' THEN TEMP.REC<48> = 'Y' ELSE TEMP.REC<48> = ''
      FOR X = 84 TO 86
         TEMP.REC<X>=OLD.PRO.REC<X>
      NEXT X
      TEMP.REC<51> = VAR.REC<1>
      TEMP.REC<52> = VAR.REC<2>
      TEMP.REC<56> = VAR.REC<3>
      TEMP.REC<55> = LEN(PRO.REC)-LEN(USER)
      TEMP.REC<59> = REJECT.REASONS<1>
      TEMP.REC<60> = REJECT.REASONS<2>
      TEMP.REC<61> = REJECT.REASONS<3>
      TEMP.REC<62> = REJECT.REASONS<4>
      TEMP.REC<64,1>=MAILING.ADDR<1>
      TEMP.REC<64,2>=MAILING.ADDR<2>
      TEMP.REC<64,3>=MAILING.ADDR<3>
      TEMP.REC<64,4>=MAILING.ADDR<4>
      TEMP.REC<66> = REJ.TYPE
      CARRIER.MODE.WGT = CARRIER.REC<70>
      CARRIER.MODE.BY.WGT = CARRIER.REC<71>
      LOCATE WEIGHT IN CARRIER.MODE.WGT<1> BY "AR" SETTING POS ELSE NULL
      T.MODE.BY.WGT = OCONV(CARRIER.MODE.BY.WGT<1,POS>,'MCU')
      LTL.CAR=T.MODE.BY.WGT=1            ; * JMK187
      TL.CAR=T.MODE.BY.WGT=6             ; * JMK187
      AIR.CAR=T.MODE.BY.WGT=12           ; * JMK187
      TEMP.REC<21> = T.MODE.BY.WGT
      MILE.MODE=0                        ; * JMK256
      IF TEMP.REC<21>='1' THEN MILE.MODE=1         ; * JMK256
      IF TEMP.REC<21>='6' THEN MILE.MODE=1         ; * JMK256
      IF TEMP.REC<21>='11' THEN MILE.MODE=1        ; * JMK256
      IF MILE.MODE=0 THEN TEMP.REC<19>=''          ; * JMK256
      IF PRO[LEN(PRO)-1,2]='AD' THEN TEMP.REC<19>=''         ; * JMK162
      IF PRO[LEN(PRO)-1,2]='BD' THEN TEMP.REC<19>=''         ; * JMK162
      IF VC.OVERRIDE='Y' ELSE
         TEMP.REC<63> = MISROUTE.AMOUNT
         TEMP.REC<69> = MISROUTE.CARRIER
         TEMP.REC<189>=MISROUTE.AMOUNT   ; * JMK126
         TEMP.REC<190>=MISROUTE.CARRIER  ; * JMK126
      END                                ; * JMK55
      IF (CLIENT.ID='01014' AND CARRIER.ID='03131') OR (CLIENT.ID='01079' AND CARRIER.ID='00250') THEN         ; * JCW03
         TEMP.REC<63> = ''               ; * JCW03
         TEMP.REC<69> = ''               ; * JCW03
         TEMP.REC<22> = ''               ; * JCW03
         TEMP.REC<23> = ''               ; * JCW03
         IF VC.OVERRIDE = 'Y' THEN       ; * JCW03
            TEMP.REC<189> = ''           ; * JCW03
            TEMP.REC<190> = ''           ; * JCW03
            TEMP.REC<191> = ''           ; * JCW03
            TEMP.REC<192> = ''           ; * JCW03
            TEMP.REC<193> = ''           ; * JCW03
            TEMP.REC<194> = ''           ; * JCW03
            TEMP.REC<195> = ''           ; * JCW03
            TEMP.REC<196> = ''           ; * JCW03
         END                             ; * JCW03
      END                                ; * JCW03
      IF DAUDIT<13>='Y' THEN             ; * JMK57
         TEMP.REC<197>='Y'               ; * JMK57
      END ELSE                           ; * JMK57
         TEMP.REC<197>='N'               ; * JMK57
      END                                ; * JMK57
      IF QI='A' OR QI='1' THEN
         TEMP.REC<39> = 'O'
         IF CARRIER.REC<131,1> = 'Y' THEN          ; * NKH56
            TEMP.REC<292> = 'Y'          ; * NKH56
         END                             ; * NKH56
         IF OLD.PRO.REC<39> # 'O' AND TEMP.REC<39>='O' AND CLIENT.ID='00574' THEN
            IF DATE() LE CLIENT.REC(82) THEN
               TEMP.REC<30>=CLIENT.REC(82)+1
            END ELSE
               TEMP.REC<30> = DATE()
            END
         END
      END ELSE
         IF REJECT.FLAG#'R' THEN TEMP.REC<39>=TEMP.REC<68>
      END
      IF VERSION GT 0 THEN TEMP.REC<39> = 'O'
      TEMP.REC<90> = VC.CODE
      TEMP.REC<91> = CC
      TEMP.REC<100>= VC.ID               ; * Item ID for Cust.Vend
      TEMP.REC<101>= CUST.VEND.ADDR<1>   ; * Name
      TEMP.REC<102>= CUST.VEND.ADDR<2>   ; * Address1
      TEMP.REC<102,2>= CUST.VEND.ADDR<3>           ; * Address2
      TEMP.REC<103>= CUST.VEND.ADDR<5>   ; * City
      TEMP.REC<104>= CUST.VEND.ADDR<6>   ; * State
      TEMP.REC<105>= CUST.VEND.ADDR<4>   ; * Zip
      IF USER.TYPE='A' THEN
         IF TEMP.REC<97>='' THEN
            IF OLD.CLASS # CLASSES THEN
               TEMP.REC<97>=OLD.CLASS
            END
         END
      END
      TEMP.REC<74> = CLASSES
      TEMP.REC<75> = WEIGHTS
      TEMP.REC<110>= AUDITOR.VIEWED      ; * 1=OLA Auditor viewed, 0=OLA, ''=Manual bill.
      MISC.CHG.POS=DCOUNT(CLASSES<1>,@VM)          ; * Find out how many
      FOR MISC.CHG.CNT=1 TO MISC.CHG.POS
         TEMP.REC<70,MISC.CHG.CNT>='FRT'
      NEXT MISC.CHG.CNT
      IF MISC.CHG.CODES#'' THEN
         TEMP.REC<70,MISC.CHG.POS+1>=MISC.CHG.CODES
         TEMP.REC<77,MISC.CHG.POS+1>=CONTR.MISC.CHG.AMTS
         TEMP.REC<79,MISC.CHG.POS+1>=BENCH.MISC.CHG.AMTS
      END
      IF SU.FLAG THEN
         TEMP.REC<39>=OLD.PRO.REC<39>
         TEMP.REC<68>=OLD.PRO.REC<68>
         TEMP.REC<54>=OLD.PRO.REC<54>
         TEMP.REC<89>=OLD.PRO.REC<89>
         TEMP.REC<95>=OLD.PRO.REC<95>
         TEMP.REC<97>=OLD.PRO.REC<97>
      END
      TEMP.REC<120>=ZIP.ARR<1>           ; * MV Zips
      TEMP.REC<121>=ZIP.ARR<2>           ; * MV Cities
      TEMP.REC<122>=ZIP.ARR<3>           ; * MV States
      TEMP.REC<149>=ZIP.ARR<7>           ; * MV Miles JMK12
      TEMP.ZIP.ARR=ZIP.ARR
      DEL TEMP.ZIP.ARR<1,1>
      DEL TEMP.ZIP.ARR<2,1>
      DEL TEMP.ZIP.ARR<3,1>
      DEL TEMP.ZIP.ARR<4,1>
      DEL TEMP.ZIP.ARR<5,1>
      DEL TEMP.ZIP.ARR<6,1>
      DEL TEMP.ZIP.ARR<7,1>              ; * JMK12
      IF CLIENT.ID='00574' AND IN.OUT='O' THEN
         TEMP.REC<136>=TEMP.ZIP.ARR<4>
         TEMP.REC<137>=TEMP.ZIP.ARR<2>
         TEMP.REC<138>=TEMP.ZIP.ARR<3>
         TEMP.REC<139>=TEMP.ZIP.ARR<1>
         TEMP.REC<140>=TEMP.ZIP.ARR<5>
         TEMP.REC<142>=TEMP.ZIP.ARR<6>
         CLIENT.CUST.TOT.WT=0
         X=DCOUNT(TEMP.ZIP.ARR<5>,CHAR(253))
         FOR I=1 TO X
            CLIENT.CUST.TOT.WT=CLIENT.CUST.TOT.WT+TEMP.ZIP.ARR<5,I>
         NEXT I
         NEW.TOT=''
         PRO.REC<31>=''
         PRO.REC<33>=''
         X=DCOUNT(TEMP.ZIP.ARR<5>,CHAR(253))
         TIMES=X-1
         IF TIMES => 1 THEN
            FOR I=1 TO TIMES
               IF CLIENT.CUST.TOT.WT+0=0 THEN
                  WT.PERCENT=1/X
               END ELSE
                  WT.PERCENT=TEMP.ZIP.ARR<5,I>/CLIENT.CUST.TOT.WT
               END
               TEMP.REC<141,I>=(WT.PERCENT*ACTUAL.CHG)'R0'
               NEW.TOT=NEW.TOT+TEMP.REC<141,I>
               LOCATE TEMP.REC<142,I> IN TEMP.REC<31> SETTING EXP.POS THEN
                  TEMP.REC<33,EXP.POS>=TEMP.REC<33,EXP.POS>+TEMP.REC<141,I>
               END ELSE
                  TEMP.REC<31,-1>=TEMP.REC<142,I>
                  TEMP.REC<33,-1>=TEMP.REC<141,I>
               END
            NEXT I
         END
         TEMP.REC<141,X>=ACTUAL.CHG-NEW.TOT
         LOCATE TEMP.REC<142,X> IN TEMP.REC<31> SETTING EXP.POS THEN
            TEMP.REC<33,EXP.POS>=TEMP.REC<33,EXP.POS>+TEMP.REC<141,X>
         END ELSE
            TEMP.REC<31,-1>=TEMP.REC<142,X>
            TEMP.REC<33,-1>=TEMP.REC<141,X>
         END
         IF TEMP.REC<31>='' THEN TEMP.REC<31>=TEMP.REC<5>
      END
      TEMP.REC<123>=ADDRESS.CORRECTION.CHARGE      ; * For United Parcel Service
      LCC.CAPTURE=1                      ; * JMK159
      PRO.NO=FIELD(PRO.ID,'*',2)         ; * JMK159
      PRO.LENGTH=LEN(PRO.NO)             ; * JMK159
      DUP=FIELD(PRO.ID,'*',3)            ; * JMK159
      IF PRO.NO[PRO.LENGTH-1,2] = 'BD' THEN BAL.DUE = 1 ELSE BAL.DUE = 0         ; * JMK159
      IF PRO.NO[PRO.LENGTH-1,2] = 'AD' THEN ADD.DUE = 1 ELSE ADD.DUE = 0         ; * JMK159
      IF PRO.NO[PRO.LENGTH-1,2] = 'CM' THEN CR.MEMO = 1 ELSE CR.MEMO = 0         ; * JMK159
      NEVERPAY.FLAG = (TEMP.REC<66>='N' AND TEMP.REC<39>='R')          ; * JMK159
      HOLD.FLAG = (TEMP.REC<66>#'N' AND TEMP.REC<39>='R')    ; * JMK159
      IF MISROUTE.AMOUNT+0#0 THEN LCC.CAPTURE=0
      IF DUP THEN LCC.CAPTURE=0          ; * JMK159
      IF HOLD.FLAG THEN LCC.CAPTURE=0    ; * JMK159
      IF NEVERPAY.FLAG THEN LCC.CAPTURE=0          ; * JMK159
      IF CLIENT.ID[1,2]='99' THEN LCC.CAPTURE=0    ; * JMK159
      IF TEMP.REC<63>+0#0 THEN LCC.CAPTURE=0       ; * JMK159 - NO MISROUTE BILLS
      IF TEMP.REC<21>#1 THEN LCC.CAPTURE=0         ; * JMK159 - ONLY LTL BILLS
      IF CLIENT.ITM<93>#'Y' THEN LCC.CAPTURE=0     ; * JMK159 - ONLY LOGISTICS BILLS
      IF CLIENT.ITM<93>="Y" THEN         ; * JMK189
         IF CLIENT.ITM<149>#'' THEN      ; * JMK189
            IF BILL.DATE<CLIENT.ITM<149> THEN LCC.CAPTURE=0  ; * JMK189
         END                             ; * JMK189
      END                                ; * JMK189
      IF CLIENT.ITM<94>#'Y' THEN LCC.CAPTURE=0     ; * JMK159 - ONLY MISROUTE CLIENT BILLS
      IF USER#'DAVID' AND TEMP.REC<2>='T' THEN LCC.CAPTURE=0           ; * JMK159 - NO THIRD PARTY BILLS
      IF ADD.DUE OR BAL.DUE THEN LCC.CAPTURE=0     ; * JMK159 ; *Added no AD or BD by DRF 12-11-03
      * Begin NKH54

      * Truckload LCC
      *      IF CLIENT.ID = "06916" THEN
      *         TL.VIN = ''
      *         TL.VIN<1> = CLIENT.ID
      *         B.DATE = OCONV(BILL.DATE,'D4/')
      *         B.MM = FIELD(B.DATE,'/',1,1)
      *         B.DD = FIELD(B.DATE,'/',2,1)
      *         B.YYYY = FIELD(B.DATE,'/',3,1)
      *         TL.BILL.DATE = B.YYYY:'-':B.MM:'-':B.DD:'T00:00:00.000Z'
      *         TL.VIN<3> = TL.BILL.DATE
      *         TL.VIN<4> = WEIGHT
      *         TL.VIN<5> = ORIG.CITY
      *         TL.ORIG.COUNTRY = ORIG.COUNTRY.CD
      *         IF TL.ORIG.COUNTRY = 'US' THEN TL.ORIG.COUNTRY = 'USA'
      *         TL.VIN<6> = TL.ORIG.COUNTRY
      *         TL.VIN<7> = ORIG.ZIP
      *         TL.VIN<8> = ORIG.STATE
      *         TL.VIN<9> = DEST.CITY
      *         TL.DEST.COUNTRY = DEST.COUNTRY.CD
      *         IF TL.DEST.COUNTRY = 'US' THEN TL.DEST.COUNTRY = 'USA'
      *         TL.VIN<10> = TL.DEST.COUNTRY
      *         TL.VIN<11> = DEST.ZIP
      *         TL.VIN<12> = DEST.STATE
      *         TL.VIN<13> = IN.OUT
      *         BEGIN CASE
      *            CASE IN.OUT = "I"
      *               TL.VIN<13> = 'INBOUND'
      *            CASE IN.OUT = 'O'
      *               TL.VIN<13> = 'OUTBOUND'
      *            CASE IN.OUT = 'T'
      *               TL.VIN<13> = 'THIRD_PARTY'
      *         END CASE

      *CRT 'BEGIN TIME: ':OCONV(TIME(),'MTS')
      *         PRINT @(0,22):@(-4):'Retreiving LCC rates from Tempo - Please wait.'
      *         CALL TEMPO.V5(TL.VIN,TL.VOUT)
      *         PRINT @(0,22):@(-4)
      *CRT 'END TIME: ':OCONV(TIME(),'MTS')         ;INPUT CONT

      *         LCC.AMOUNT=''
      *         LCC.CARRIER=''
      *         LCC.ARRAY = ''  ; * <1> = Amounts  <2> = Carriers
      *         LCC.NAME=''
      *         LCC.SCAC=''

      *         IF TL.VOUT = '' THEN
      *            GOSUB TEMPO.EMAIL
      *         END ELSE

      *            TL.VOUT<1>   SCAC
      *            TL.VOUT<2>   Mode
      *            TL.VOUT<3>   Gross Rate
      *            TL.VOUT<5>   Undiscounted Gross
      *            TL.VOUT<6>   Client id
      *            TL.VOUT<7>   Fuel Amount

      *SCAC.COUNT = DCOUNT(TL.VOUT<1>,@VM)
      *            FOR SC = 1 TO SCAC.COUNT
      *              IF TL.VOUT<6,SC> = "" OR TL.VOUT<6,SC> = "0" THEN TL.VOUT<6,SC> = '1'   ; * Transit Days
      *               READV TL.CARRIER FROM SCAC.XREF, TL.VOUT<1,SC>,1 ELSE TL.CARRIER = ' '
      *               IF CARRIER.ID # "38016" THEN
      *                  TL.AMOUNT = TL.VOUT<3,SC> + TL.VOUT<7,SC>
      *                  IF TL.AMOUNT = '' THEN TL.AMOUNT = 0
      *                  IF LCC.ARRAY<2> = '' THEN
      *                     LCC.ARRAY<2> = TL.CARRIER
      *                     LCC.ARRAY<1> = ICONV(TL.AMOUNT,'MD2')
      *                  END ELSE
      *                     LCC.ARRAY<2,-1> = TL.CARRIER
      *                     LCC.ARRAY<1,-1> = ICONV(TL.AMOUNT,'MD2')
      *                  END
      *                  IF LCC.AMOUNT = '' THEN
      *                     LCC.AMOUNT = TL.VOUT<3,SC> + TL.VOUT<7,SC>
      *                     LCC.SCAC = TL.VOUT<1,SC>
      *                  END ELSE
      *                     LCC.AMT = TL.VOUT<3,SC> + TL.VOUT<7,SC>
      *                     IF LCC.AMT < LCC.AMOUNT THEN
      *                        LCC.AMOUNT = LCC.AMT
      *                        LCC.SCAC = TL.VOUT<1,SC>
      *                     END
      *                  END
      *               END
      *            NEXT SC
      *            READV LCC.CARRIER FROM SCAC.XREF, LCC.SCAC, 1 ELSE
      *               LCC.CARRIER = ''
      *               IF LCC.AMOUNT # "" THEN
      *                  CALL ELINE('LCC SCAC: ':LCC.SCAC:' Not on file')
      *                  GOSUB LCC.CARRIER.EMAIL
      *               END
      *            END
      *            LCC.AMOUNT = ICONV(LCC.AMOUNT,'MD2')
      *         END
      * If LCC is the carrier entered remove LCC data
      *         IF LCC.CARRIER = CARRIER.ID THEN
      *            LCC.AMOUNT=0
      *            LCC.CARRIER=''
      *            LCC.ARRAY = ''
      *            LCC.NAME=''
      *            LCC.SCAC=''
      *         END
      * If amount to pay is less than the LCC clear out LCC data
      *         IF ACTUAL.CHG <= LCC.AMOUNT THEN
      *            LCC.AMOUNT=0
      *            LCC.CARRIER=''
      *            LCC.ARRAY = ''
      *            LCC.NAME=''
      *            LCC.SCAC=''
      *         END
      * If SCAC is not on file clear out LCC data
      *         IF LCC.CARRIER = "" THEN
      *            LCC.AMOUNT=0
      *            LCC.CARRIER=''
      *            LCC.ARRAY = ''
      *            LCC.NAME=''
      *            LCC.SCAC=''
      *         END
      *         IF LCC.AMOUNT+0=0 ELSE
      *            READV LCC.NAME FROM F.CARRIERS,LCC.CARRIER,1 ELSE LCC.NAME='Unknown Carrier'
      *            CRT @(43,20):LCC.AMOUNT'R26#10'
      *            CRT @(56,20):LCC.CARRIER'%5':' ':LCC.NAME'L#10'
      *         END
      *      END ELSE
      * End NKH54
      IF LCC.CAPTURE THEN                ; * JMK159
         GET.LCC=1                       ; * JMK159
         IF USER='DAVID' THEN CALL ELINE('LCC PRESS BREAK')
         IF TEMP.REC<21>#'1' THEN GET.LCC=0        ; * JMK159
         IF TEMP.REC<74>='' THEN GET.LCC=0         ; * JMK159
         IF TEMP.REC<75>='' THEN GET.LCC=0         ; * JMK159
         IF TEMP.REC<119>='1' THEN GET.LCC=0
         IF GOIN THEN
            IF AVIN<45>=1 THEN GET.LCC=0
            IF AVIN='' AND TEMP.REC<119>=1 THEN GET.LCC=0
         END ELSE
            IF TEMP.REC<119>=1 THEN GET.LCC=0
         END
         IF GET.LCC THEN                 ; * JMK159
            GCVIN=''                     ; * JMK159
            GCVIN<1>=AUDIT.CLIENT.ID     ; * JMK159
            GCVIN<2>=PRO.ID              ; * JMK159
            GCVIN<3>=CLIENT.ID           ; * JMK159
            GCVIN<7>=ID.BOL.CRX          ; * JMKXXX
            GCVOUT=''                    ; * JMK159
            CARRIER.ARRAY=''             ; * JMK159
            CALL FIND.GOOD.CARRIERS.SUB.V2(GCVIN,GCVOUT,TEMP.REC,CARRIER.ARRAY,F.CLIENTS,F.CARRIERS,F.NFSC,F.PCIN,F.PCOUT,F.TABLES,F.AUDIT,F.AUDIT.TABLES,F.AUDIT.ZIPS,F.ZIP.LINE.ITEM)        ; * JMK159 *DRF05 * NKH01
            TEMP.HOLD=''                 ; * JMK176
            IF TEMP.REC<37>='' THEN      ; * JMK176
               TEMP.HOLD=TEMP.REC        ; * JMK176
               NXT.PROC.DT=DATE()        ; * JMK176
               DUE.DT.FLG=CLIENT.ITM<186>          ; * JMK201
               IF DUE.DT.FLG='' THEN DUE.DT.FLG='N'          ; * JMK201
               IF DUE.DT.FLG#'N' THEN    ; * JMK201
                  NXT.PROC.DT=DUE.DATE   ; * JMK201
               END                       ; * JMK201
               CALL NEXT.PROCESS.DATE(NXT.PROC.DT,CLIENT.DOW)          ; * JMK176
               TEMP.HOLD<37>=NXT.PROC.DT           ; * JMK176
               COMM.VIN=PRO.ID           ; * JMK176
               COMM.VIN<2>=CLIENT.REC(84)          ; * JMK176
               COMM.VIN<3>=CLIENT.REC(34)          ; * JMK176
               COMM.VIN<4>=CLIENT.REC(33)          ; * JMK176
               COMM.VIN<5>=CLIENT.REC(85)          ; * JMK176
               COMM.VIN<6>=CLIENT.REC(88)          ; * JMK176
               COMM.VIN<7>=CARRIER.ID    ; * JMK176
               COMM.VIN<8>=CLIENT.ID     ; * JMK176
               COMM.VIN<9>=USER          ; * JMK176
               COMM.VIN<10>=CLIENT.REC(131)        ; * JMK176
               COMM.VIN<13>=CLIENT.REC(187)        ; * JMK176
               COMM.VIN<14>=CLIENT.REC(200)        ; * JMK176
               COMM.VIN<15>=CLIENT.REC(208)        ; * JMK176
               COMM.VIN<16>=CLIENT.REC(209)        ; * JMK176
               COMM.VIN<17>=CLIENT.REC(210)        ; * JMK176
               COMM.VIN<18>=CLIENT.REC(211)        ; * JMK176
               COMM.VIN<19>=CLIENT.REC(212)        ; * JMK176
               COMM.VIN<20>=CLIENT.REC(213)        ; * JMK176
               COMM.VIN<21>=CLIENT.REC(214)        ; * JMK176
               COMM.VIN<22>=CLIENT.REC(215)        ; * JMK176
               COMM.VIN<23>=CLIENT.REC(216)        ; * JMK176
               COMM.VIN<24>=CLIENT.REC(217)        ; * JMK176
               COMM.VIN<25>=CLIENT.REC(218)        ; * JMK176
               COMM.VIN<26>=CLIENT.REC(219)        ; * JMK176
               COMM.VIN<28>=CLIENT.REC(268)        ; * JMK223
               CALL CALC.COMMISSION(TEMP.HOLD,COMM.VIN,COMM.VOUT)      ; * JMK176
               DISCOUNT.COMM=COMM.VOUT<1>          ; * JMK176
               OVERCHG.COMM=COMM.VOUT<2>           ; * JMK176
               CONSULTING.COMM=COMM.VOUT<3>        ; * JMK176
               EXP.DIST.COMM=COMM.VOUT<4>          ; * JMK176
               MGMT.SVC.COMM=COMM.VOUT<5>          ; * JMK176
               MISR.CONS.COMM=COMM.VOUT<6>         ; * JMK176
               TEMP.HOLD<42>=DISCOUNT.COMM         ; * JMK176
               TEMP.HOLD<43>=OVERCHG.COMM          ; * JMK176
               TEMP.HOLD<44>=CONSULTING.COMM       ; * JMK176
               TEMP.HOLD<32>=EXP.DIST.COMM         ; * JMK176
               TEMP.HOLD<165>=MGMT.SVC.COMM        ; * JMK176
               TEMP.HOLD<203>=MISR.CONS.COMM       ; * JMK176
            END                          ; * JMK176
            IF USER='DAVID' THEN CALL ELINE('LCC CARRIER.ARRAY')
            LCC.AMOUNT=CARRIER.ARRAY<1,1>          ; * JMK159 ; * JMK173
            LCC.CARRIER=CARRIER.ARRAY<2,1>         ; * JMK159 ; * JMK173
            IF TEMP.HOLD#'' THEN         ; * JMK176
               TRUE.COST=TEMP.HOLD<8>+TEMP.HOLD<44>          ; * JMK176
            END ELSE
               TRUE.COST=TEMP.REC<8>+TEMP.REC<44>  ; * JMK173
            END
            LOCATE CARRIER.ID IN CARRIER.ARRAY<2> SETTING LPOS THEN    ; * JMK176
               IF LCC.AMOUNT GE TRUE.COST OR LCC.CARRIER=CARRIER.ID THEN         ; * JMK173 ; * JMK176 ; * JMK183
                  LCC.AMOUNT=''
                  LCC.CARRIER=''
               END
               LCC.ARRAY=CARRIER.ARRAY
            END ELSE                     ; * JMK176
               LCC.AMOUNT=''
               LCC.CARRIER=''
               LCC.ARRAY=''
            END                          ; * JMK176
            IF LCC.AMOUNT+0=0 ELSE
               READV LCC.NAME FROM F.CARRIERS,LCC.CARRIER,1 ELSE LCC.NAME='Unknown Carrier'
               CRT @(43,20):LCC.AMOUNT'R26#10'
               CRT @(56,20):LCC.CARRIER'%5':' ':LCC.NAME'L#10'
            END
         END ELSE
            LCC.AMOUNT=''
            LCC.CARRIER=''
            LCC.ARRAY=''                 ; * JMK175
            CRT @(56,20):'                 '
         END                             ; * JMK159
         *         END                             ; * NKH54
         LCC.OVR.AMOUNT=LCC.AMOUNT       ; * JMK188
         LCC.OVR.CARRIER=LCC.CARRIER     ; * JMK188
         IF CLIENT.ID='01457' OR CLIENT.ID='01529' THEN      ; * JMK188
            IF LCC.AMOUNT+0#0 AND VC.OVERRIDE='Y' THEN       ; * JMK188
               LCC.AMOUNT=''             ; * JMK188
               LCC.CARRIER=''            ; * JMK188
               LCC.NAME=''               ; * JMK188
            END                          ; * JMK188
         END                             ; * JMK188
      END                                ; * JMK159
      IF SU.FLAG OR (USER.TYPE='A' AND MISROUTE.AMOUNT+0=0) THEN
         IF BACK.FLAG AND LCC.AMOUNT+0#0 THEN GOTO ENTER.LCC.CARRIER

*****************************************************************
ENTER.LCC.CHARGE:
*****************************************************************
         BACK.FLAG = 0
         HELP = "Enter the LCC Charge. [X]=Back [EX]=Exit"
         REQ=0
         CALL GEN.IN(43,20,LCC.AMOUNT'R26#10','AMT2',Q,REQ,9,'','',2,-10,20,0,QI,HELP,0,23)
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC
         QI = OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI = ''
               Q = LCC.AMOUNT
            CASE QI = 'X'
               CRT @(43,20):LCC.AMOUNT'R26#10'
               GOTO ENTER.MISROUTE.CHARGE
            CASE NUM(QI)
               QI=Q'R0'
            CASE QI = 'EX'
               GOTO PROGRAM.EXIT         ; * NKH10
            CASE 1
               GOTO 1950
         END CASE
         IF QI > ACTUAL.CHG THEN
            CALL ELINE('LCC cannot be greater than the amount to pay')
            CC+=1
            QI=''
            GOTO ENTER.LCC.CHARGE
         END
         LCC.AMOUNT = Q'R0'
         CRT @(43,20):LCC.AMOUNT'R26#10'
         IF LCC.AMOUNT+0=0 THEN
            CRT @(56,20):SPACE(16)
            LCC.CARRIER=''
            LCC.NAME=''
         END
      END
      IF USER.TYPE='A' OR SU.FLAG THEN
         IF BACK.FLAG THEN GOTO 1900
      END ELSE
         IF BACK.FLAG THEN GOTO 1800
      END

      IF USER.TYPE='A' OR SU.FLAG THEN
         IF LCC.AMOUNT+0#0 THEN

*****************************************************************
ENTER.LCC.CARRIER:
*****************************************************************
            IF LCC.CARRIER # '' THEN MASK = LCC.CARRIER'R%5' ELSE MASK = '#####'
            BACK.FLAG=0
            HELP = "Enter the approved carrier for the least cost."
            CALL GEN.IN(56,20,MASK,'',Q,0,20,'','',2,-5,20,0,QI,HELP,0,23)
            CC+=LEN(QI)+1 ; GOSUB PRINT.CC
            QI = OCONV(QI,'MCU')
            IF QI='' THEN QI=LCC.CARRIER ; Q=LCC.CARRIER
            BEGIN CASE
               CASE QI = 'EX'
                  GOTO PROGRAM.EXIT      ; * NKH10
               CASE QI = 'X'
                  IF LCC.CARRIER#'' THEN
                     CRT @(56,20):LCC.CARRIER'R%5'
                  END ELSE
                     CRT @(56,20):SPACE(16)
                  END
                  GOTO ENTER.LCC.CHARGE
               CASE QI = ''
                  CALL ELINE('Entry is required.')
                  GOTO ENTER.LCC.CARRIER
               CASE NOT(QI MATCHES "0N")
                  VIN=0                  ; * Starting Chars In
                  VOUT=''
                  CALL SOUNDEX.DISPLAY.NEW(VIN,VOUT,QI,'CARRIERS','SDX.CARRIER,NAME','1,2,3,4',ITEM.LIST)
                  CC+=VOUT<1> ; GOSUB PRINT.CC
                  GOSUB 8100
                  GOSUB 8200
                  BEGIN CASE
                     CASE ITEM.LIST = ''
                        GOTO ENTER.LCC.CARRIER
                     CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                        GOTO ENTER.LCC.CARRIER
                     CASE ITEM.LIST # ''
                        IF NUM(ITEM.LIST<1,1>) THEN SND.DATA=ITEM.LIST<1,1> ; GOSUB SEND.DATA
                        GOTO ENTER.LCC.CARRIER
                  END CASE
               CASE NUM(QI)
                  Q = QI'R%5'
               CASE 1
                  GOTO ENTER.LCC.CARRIER
            END CASE
            LCC.CARRIER = Q

*****************************************************************
* Get Carrier Data
*****************************************************************
            READ LCC.CARRIER.REC FROM F.CARRIERS,LCC.CARRIER ELSE      ; * JMK264
               CALL ELINE("ERROR - Carrier ":CARRIER.ID:" not on file.")
               GOTO ENTER.LCC.CARRIER
            END
            IF LCC.CARRIER.REC<89>#'A' THEN        ; * JMK264
               CALL ELINE("ERROR - Carrier ":CARRIER.ID:" is currently not active. Choose again.")   ; * JMK264
               GOTO ENTER.LCC.CARRIER    ; * JMK264
            END                          ; * JMK264
            LCC.NAME=LCC.CARRIER.REC<1>  ; * JMK264
            CRT @(56,20):LCC.CARRIER'R%5':' ':LCC.NAME'L#10'
         END
      END
      IF USER.TYPE = 'A' THEN GOTO 2100

*****************************************************************
2000: * Enter air shipment pieces
*****************************************************************
      IF T.MODE[1,3] = 'TEMP' & CL.AIR.FLAG = 'Y' THEN
         IF (AUDIT='Y' OR AUDIT='U') AND AUDIT.TYPE='AIRBRN' THEN
            IF BACK.FLAG THEN
               *DF             IF USER='DAVID' OR USER='MYRA' OR USER='MARY' OR SU.FLAG THEN
               IF SU.FLAG THEN
                  GOTO 1950              ; * Back into Audit Routine
               END ELSE
                  IF USER.TYPE='A' THEN
                     GOTO ENTER.LCC.CHARGE
                  END ELSE
                     GOTO 1800
                  END
               END
            END
            GOTO 2100
         END
         BACK.FLAG = 0
         HELP = 'Enter the number of air pieces. [X]=Back [EX]=Exit'
         IF AIR.PIECES = '' THEN REQ = 1 ELSE REQ = 0
         CALL GEN.IN(0,21,AIR.PIECES'R#7','',Q,REQ,7,'','',2,-7,21,0,QI,HELP,0,23)
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC
         QI = OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI = 'X'
               CRT @(0,21):'       ':
               BACK.FLAG = 1
               IF SU.FLAG THEN
                  GOTO 1950
               END ELSE
                  GOTO 1800
               END
            CASE QI = 'EX'
               GOTO PROGRAM.EXIT         ; * NKH10
            CASE CHANGE.FLAG & QI = ''
               Q = AIR.PIECES
            CASE QI = ''
               Q = AIR.PIECES
            CASE NUM(QI)
               Q = QI
            CASE 1
               GOTO 2000
         END CASE
         AIR.PIECES = Q
         CRT @(0,21):AIR.PIECES'R#7'
      END ELSE
         IF SU.FLAG THEN
            IF BACK.FLAG THEN GOTO 1950
         END ELSE
            IF USER.TYPE='A' THEN
               GOTO ENTER.MISROUTE.CHARGE
            END ELSE
               IF BACK.FLAG THEN GOTO 1800
            END
         END
      END

*****************************************************************
2001:
*****************************************************************
      IF NOT(SU.FLAG) OR USER='MARY' THEN          ; * DRF050
         BEGIN CASE                      ; * JMK12
            CASE INDEX(T.MODE,'AIR',1) GT 0 & CL.AIR.FLAG = 'Y'        ; * JMK12
               BACK.FLAG = 0
               HELP = 'Enter the dimensional weight of the shipment. [X]=Back [EX]=Exit'
               IF DIM.WEIGHT = '' THEN
                  REQ = 1
                  MASK = ''
               END ELSE
                  REQ = 0
                  MASK = DIM.WEIGHT'R#6'
               END
               CALL GEN.IN(1,21,MASK,'',Q,REQ,6,'','',2,1,21,0,QI,HELP,0,23)
               CC+=LEN(QI)+1 ; GOSUB PRINT.CC
               QI = OCONV(QI,'MCU')
               BEGIN CASE
                  CASE QI = 'X'
                     CRT @(0,21):'         ':
                     BACK.FLAG = 1
                     IF SU.FLAG THEN
                        GOTO 1950
                     END ELSE
                        GOTO 1800
                     END
                  CASE QI = 'EX'
                     GOTO PROGRAM.EXIT   ; * NKH10
                  CASE CHANGE.FLAG & QI = ''
                     Q = DIM.WEIGHT
                  CASE QI = ''
                     Q = DIM.WEIGHT
                  CASE NUM(QI)
                     Q = QI
                  CASE 1
                     GOTO 2001
               END CASE
               DIM.WEIGHT = Q
               CRT @(1,21):DIM.WEIGHT'R#6'
               IF DIM.WEIGHT > 50000 THEN CALL ELINE('WARNING! Weight is over 50,000 lbs! Check it!')
               IF DIM.WEIGHT = WEIGHT THEN CHARGE.WEIGHT = DIM.WEIGHT ELSE CHARGE.WEIGHT = WEIGHT
               CARRIER.MODE.WGT = CARRIER.REC<70>
               CARRIER.MODE.BY.WGT = CARRIER.REC<71>
               LOCATE CHARGE.WEIGHT IN CARRIER.MODE.WGT<1> BY "AR" SETTING POS ELSE NULL
               T.MODE.BY.WGT = OCONV(CARRIER.MODE.BY.WGT<1,POS>,'MCU')
               LTL.CAR=T.MODE.BY.WGT=1   ; * JMK187
               TL.CAR=T.MODE.BY.WGT=6    ; * JMK187
               AIR.CAR=T.MODE.BY.WGT=12  ; * JMK187
               IF T.MODE.BY.WGT = 12 AND CHARGE.WEIGHT > 75 THEN
                  VIN=''
                  VIN<1> = SERVICE.LEVEL
                  VIN<2> = AIR.PIECES
                  VIN<3> = AIR.CHRG.CODES
                  VIN<4> = AIR.CHRG.AMTS
                  VIN<5> = DIM.WEIGHT
                  VIN<6> = WEIGHT
                  VIN<7> = CARRIER.ID
                  VIN<8> = CARRIER.NAME
                  ORIG = ORIG.ZIP:' ':ORIG.CITY:', ': ORIG.STATE
                  VIN<9> = ORIG
                  DEST = DEST.ZIP:' ':DEST.CITY:', ': DEST.STATE
                  VIN<10> = DEST
                  VIN<11> = ACTUAL.CHG
                  VIN<12> = CC
                  IF CHANGE.FLAG THEN VIN<13> = 'E' ELSE VIN<13> = 'I'
                  VIN<14> = USER
                  CVIN<15> = MISC.REASON           ; * JMK157
                  ID = 'AIR.SERVLEV*':CARRIER.ID
                  READ SERVICE.LEV FROM F.TABLES,ID ELSE
                     CALL ELINE('There must be a service level table set up for this carrier.')
                     GOTO 100
                  END
                  VOUT=''
                  IF SU.FLAG=1 AND DBCTRL<15>='AC' ELSE
                     CALL FB.2.1.AIR.FREIGHT(VIN,VOUT,AIR.CODES,SERVICE.LEV,QI)
                  END
                  CC+=VOUT<5> ; GOSUB PRINT.CC
                  IF VOUT # '' THEN
                     SERVICE.LEVEL = VOUT<1>
                     AIR.PIECES = VOUT<2>
                     AIR.CHRG.CODES = VOUT<3>
                     AIR.CHRG.AMTS = VOUT<4>
                     MISC.REASON = CVOUT<6>        ; * JMK157
                  END
                  QI = OCONV(QI,'MCU')
                  BEGIN CASE
                     CASE QI = 'X'
                        BACK.FLAG = 1
                        GOSUB 8100
                        GOSUB 8200
                        GOTO 2001
                     CASE QI = 'EX'
                        GOTO PROGRAM.EXIT          ; * NKH10
                  END CASE
                  GOSUB 8100
                  GOSUB 8200
               END                       ; * IF T.MODE.BY.WGT = 12 AND CHARGE.WEIGHT > 75
            CASE INDEX(T.MODE,'TRUCKLOAD',1) GT 0 & CL.TL.FLAG = 'Y'   ; * JMK12
               BACK.FLAG = 0
               IF SU.FLAG=1 AND DBCTRL<15>='AC' ELSE
                  GOSUB GET.TL.ROUTE     ; * JMK18
               END
               BEGIN CASE
                  CASE QI = 'X'
                     BACK.FLAG = 1
                     GOSUB 8100
                     GOSUB 8200

                     IF SU.FLAG THEN
                        GOTO 1950
                     END ELSE
                        GOTO 1800
                     END
                  CASE QI = 'EX'
                     GOTO PROGRAM.EXIT   ; * NKH10
               END CASE
               IF VOUT # '' THEN
                  ZIP.ARR<1>=RVOUT<1>
                  ZIP.ARR<2>=RVOUT<2>
                  ZIP.ARR<3>=RVOUT<3>
                  ZIP.ARR<7>=RVOUT<7>
                  TL.BILL.MILES=RVOUT<6>
               END
               BACK.FLAG = 0
               GOSUB 8100
               GOSUB 8200
            CASE 1                       ; * JMK12
               IF BACK.FLAG THEN
                  IF SU.FLAG THEN
                     GOTO 1950
                  END ELSE
                     GOTO 1800
                  END
               END
               CARRIER.MODE.WGT = CARRIER.REC<70>
               CARRIER.MODE.BY.WGT = CARRIER.REC<71>
               LOCATE WEIGHT IN CARRIER.MODE.WGT<1> BY "AR" SETTING POS ELSE NULL
               T.MODE.BY.WGT = OCONV(CARRIER.MODE.BY.WGT<1,POS>,'MCU')
               LTL.CAR=T.MODE.BY.WGT=1   ; * JMK187
               TL.CAR=T.MODE.BY.WGT=6    ; * JMK187
               AIR.CAR=T.MODE.BY.WGT=12  ; * JMK187
               *        END                             ; * IF INDEX(T.MODE,'AIR',1) GT 0 & CL.AIR.FLAG = 'Y' ; * JMK12
         END CASE                        ; * JMK12
      END                                ; * IF NOT(SU.FLAG)

*****************************************************************
2050: * Handling Units
*****************************************************************
      IF CARRIER.MODE NE 1 THEN GOTO 2100          ; * Skip handling unit prompt for non LTL carriers
      IF TEMPO.CLIENT.FLG THEN           ; * GRB20
         GOTO 2100
      END
      IF DO.BOL.POP THEN
         HU.POP.FLAG = BOL.POP.VER.ARR<1,30>
         IF HU.POP.FLAG = 'Y' AND NOT(BACK.FLAG) THEN
            HANDLING.UNITS = BOL.POP.VER.ARR<4,30>
         END
      END
      IF CLIENT.ID = "01310" THEN        ; * NPR037
         HANDLING.UNITS = UFLDS<4>       ; * NPR037
      END                                ; * NPR037
      IF CLIENT.ID = "01718" THEN        ; * NPR037
         HANDLING.UNITS = UFLDS<1>       ; * NPR037
      END                                ; * NPR037

      BACK.FLAG = 0
      HELP = 'Enter the number of Handling Units. [X]=Back [EX]=Exit'
      IF HANDLING.UNITS = '' THEN REQ = 1 ELSE REQ = 0
      CALL GEN.IN(19,15,HANDLING.UNITS'R#5','',Q,REQ,5,'','',2,-5,15,0,QI,HELP,0,23)
      CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI = 'X'
            CRT @(0,21):'       ':
            CRT @(19,15):HANDLING.UNITS'R#5'
            BACK.FLAG = 1
            IF SU.FLAG THEN
               GOTO 1950
            END ELSE
               GOTO 1800
            END
         CASE QI = 'EX'
            GOTO PROGRAM.EXIT            ; * NKH10
         CASE CHANGE.FLAG & QI = ''
            Q = HANDLING.UNITS
         CASE QI = ''
            Q = HANDLING.UNITS
         CASE NUM(QI) AND QI GE 0
            Q = QI
         CASE 1
            CALL ELINE("Enter a valid number or zero")
            GOTO 2050
      END CASE
      HANDLING.UNITS = Q
      CRT @(19,15):HANDLING.UNITS'R#5'

*****************************************************************
2100: * Enter expense distributions
*****************************************************************
      IF CL.EXP.DIST.FLAG MATCHES 'Y':@VM:'O' AND VERSION = 0 THEN
         IF USER.TYPE='A' THEN
            IF BACK.FLAG THEN GOTO 2000
            TOT=0
            X=DCOUNT(DTAB<1>,CHAR(253))
            FOR I=1 TO X
               TOT=TOT+DTAB<3,I>
            NEXT I
            NEW.TOT=''
            IF TOT # ACTUAL.CHG THEN
               IF (CLIENT.ID='10356' AND CARRIER.ID='00041' AND DIVISION < '00004') OR (CLIENT.ID='10356' AND CARRIER.ID='00041' AND DIVISION='00007') OR (CLIENT.ID='01157' AND CARRIER.ID='00041') OR (CLIENT.ID='01085' AND CARRIER.ID='00041') OR (CLIENT.ID='01087' AND CARRIER.ID='00041') THEN
                  VIN=0                  ; * Starting Characters for Subroutine
                  VIN<2>=USER
                  VIN<3>=CLIENT.ID       ; * JMK193
                  VIN<4>=CARRIER.ID
                  VIN<5>=DIVISION
                  VOUT=''
                  CALL FB.2.1.DIST.NEW(VIN,VOUT,F.DIV,F.EXP,ACTUAL.CHG,DTAB,QI)
                  CC+=VOUT<1> ; GOSUB PRINT.CC
               END ELSE
                  X=DCOUNT(DTAB<1>,CHAR(253))
                  TIMES=X-1
                  IF TIMES => 1 THEN
                     FOR I=1 TO TIMES
                        EXP.PERCENT=DTAB<3,I>/TOT
                        DTAB<3,I>=(EXP.PERCENT*ACTUAL.CHG)'R0'
                        NEW.TOT=NEW.TOT+DTAB<3,I>
                     NEXT I
                  END
                  DTAB<3,X>=ACTUAL.CHG-NEW.TOT
               END
            END
            GOTO 2200
         END
         BACK.FLAG = 0
         IF CL.EXP.DIST.FLAG = 'Y' OR (CLIENT.ID='10356' AND CARRIER.ID='00041' AND DIVISION < '00004') OR (CLIENT.ID='10356' AND CARRIER.ID='00041' AND DIVISION='00007') OR (CLIENT.ID='01157' AND CARRIER.ID='00041') OR (CLIENT.ID='01085' AND CARRIER.ID='00041') OR (CLIENT.ID='01087' AND CARRIER.ID='00041') THEN
            IF CLIENT.ID='10356' AND CARRIER.ID='00041' AND DIVISION < '00004' AND PRO[1,7]#'1RA-951' THEN
               IF PRO[1,7]='22W-9A7' OR PRO[1,7]='22W-9A9' THEN
                  DTAB<1,2>=DTAB<1,1>[1,17]:'0'
               END ELSE
                  DTAB<1,2>=DTAB<1,1>[1,17]:'3'
               END
            END
            IF CLIENT.ID='01085' AND CARRIER.ID='00041' THEN
               DTAB<1,2>='03.0.0603.53600.0000.0000'
            END
            IF CLIENT.ID='01087' AND CARRIER.ID='00041' THEN
               DTAB<1,2>='11-419-925'
            END
            IF DTAB<3> = '' THEN DTAB<3> = ACTUAL.CHG
            QI = ''
            VIN=0                        ; * Starting Characters for Subroutine
            VIN<2>=USER
            VIN<3>=CLIENT.ID             ; * JMK193
            VIN<4>=CARRIER.ID
            VIN<5>=DIVISION
            VOUT=''
            CALL FB.2.1.DIST.NEW(VIN,VOUT,F.DIV,F.EXP,ACTUAL.CHG,DTAB,QI)
            CC+=VOUT<1> ; GOSUB PRINT.CC
         END ELSE
            IF CHANGE.FLAG=1 OR CHANGE.EXP=1 AND DCOUNT(DTAB<1>,@VM)>1 THEN      ; * JMK117
               SND.DATA='Y'              ; * JMK117
               GOSUB SEND.DATA           ; * JMK117
            END                          ; * JMK117
            HELP = "Distribute expenses? [Y or 1]=Yes [N or CR]=No [X]=Back [EX]=Exit"
            CRT @(0,22):
            CALL GEN.IN(0,22,'Enter option please. --','',Q,0,2,'','',2,-2,22,1,Q2,HELP,0,23)
            CC+=LEN(Q2)+1 ; GOSUB PRINT.CC
            Q2 = OCONV(Q2,'MCU')
            IF Q = 'Y' ! Q = '1' THEN
               QI = ''
               VIN=0                     ; * Starting Characters for Subroutine
               VIN<2>=USER
               VIN<3>=CLIENT.ID          ; * JMK193
               VIN<4>=CARRIER.ID
               VIN<5>=DIVISION
               VOUT=''
               CALL FB.2.1.DIST.NEW(VIN,VOUT,F.DIV,F.EXP,ACTUAL.CHG,DTAB,QI)
               CC+=VOUT<1> ; GOSUB PRINT.CC
            END ELSE
               IF CLIENT.ID='01053' THEN DTAB<1>=EXP.CODE
               DTAB<3> = ACTUAL.CHG
            END
            IF Q2 = 'X' THEN
               BACK.FLAG = 1
               IF CARRIER.MODE NE 1 THEN
                  GOTO 2000
               END ELSE
                  GOTO 2050              ; * NPR035
               END
            END
            IF Q2 = 'EX' THEN GOTO PROGRAM.EXIT    ; * NKH10
         END
      END ELSE
         IF BACK.FLAG THEN GOTO 2000
         IF CLIENT.ID='01053' THEN DTAB<1>=EXP.CODE
         DTAB<3> = ACTUAL.CHG
         QI = ''
      END
      IF QI = 'X' THEN
         BACK.FLAG = 1
         IF CARRIER.MODE NE 1 THEN
            GOTO 2000
         END ELSE
            GOTO 2050                    ; * NPR035
         END
      END
      IF QI = 'EX' THEN GOTO PROGRAM.EXIT          ; * NKH10

*****************************************************************
2200: * Enter variance distributions
*****************************************************************
      QI = ''
      IF CL.VAR.FLAG='Y' THEN CL.VAR.FLAG='A'
      IF (CL.VAR.FLAG = 'Y' & VERSION = 0) OR (CL.VAR.FLAG = 'A' & VERSION = 0) THEN
         IF VAR.ARR<3>+0 # 0 THEN
            IF AUDIT#'Y' AND CL.VAR.FLAG='Y' THEN
               BACK.FLAG = 0
               VIN=0
               VIN<2>=USER
               VOUT=''
               CALL FB.2.1.VAR.DIST.NEW(VIN,VOUT,F.VAR,VAR.ARR<3>,VAR.REC,QI)
               CC+=VOUT<1> ; GOSUB PRINT.CC
               VER.CODE='LD' ; VER.TYPE='R' ; GOSUB UPDATE.VERIFY
               IF QI = 'X' THEN
                  BACK.FLAG = 1
                  GOTO 2100
               END
               IF QI = 'EX' THEN GOTO PROGRAM.EXIT           ; * NKH10
               IF CLIENT.ID='00367' THEN
                  IF VAR.REC<1>#DIVISION+0 THEN
                     CALL ELINE('Variance Distribution must be the division number.')
                     CC+=1 ; GOSUB PRINT.CC
                     GOTO 2200
                  END
               END
            END ELSE
               IF BACK.FLAG THEN GOTO 2100
               VAR.REC=''
               BEGIN CASE
                  CASE AUDIT.TYPE[1,3]='LTL' AND CLIENT.ID='00367'
                     VAR.CODE=DIVISION+0           ; * For Delta Distributing
                     VAR.REC<1>=VAR.CODE
                     VAR.REC<2>=LOGISTIC.AMT
                     READV DESC FROM F.VAR,VAR.CODE,1 ELSE DESC='Not On File'
                     VAR.REC<3>=DESC
                  CASE 1
                     VAR.REC<1>=CARRIER.MODE
                     READV DESC FROM F.VAR,CARRIER.MODE,1 ELSE
                        READV TR.MODE FROM F.TRANSPORT,CARRIER.MODE,1 ELSE
                           CALL ELINE("Carrier: ":CARRIER.ID:" has an invalid transportation code of '":CARRIER.MODE:"'")
                           GOTO PROGRAM.EXIT       ; * NKH10
                        END
                        WRITEV TR.MODE ON F.VAR,CARRIER.MODE,1
                        DESC=TR.MODE
                     END
                     VAR.REC<2>=VAR.ARR<3>
                     VAR.REC<3>=DESC
               END CASE
               VER.CODE='LD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
            END
         END ELSE
            IF BACK.FLAG THEN GOTO 2100
         END
      END ELSE
         IF BACK.FLAG THEN GOTO 2100
      END

*****************************************************************
ENTER.DUTY:
*****************************************************************
      IF (USER.TYPE # 'A' OR PRO[LEN(PRO)-1,2]='AD' OR PRO[LEN(PRO)-1,2]='BD') AND (CL.BANK#"C") AND ((ORIG.ZIP MATCH('1A1N1A1N1A1N') OR (DEST.ZIP MATCH('1A1N1A1N1A1N')))) THEN     ; * JMK97 ;* NPR038 ; * JMK235
         QI=''
         VOUT=''
         VIN=CC
         VIN<2>=USER
         VIN<3>=IN.OUT
         VIN<4>=ACTUAL.CHG
         VIN<5>=CLIENT.ID
         VIN<6>=ORIG.ZIP
         VIN<7>=DEST.ZIP
         CALL FB.2.1.DUTY(VIN,VOUT,DIDUTY,DODUTY,QI)
         CC+=VOUT<1> ; GOSUB PRINT.CC
         IF QI='X' THEN
            BACK.FLAG=1
            GOTO 2200
         END
      END ELSE
         IF (USER.TYPE # 'A' OR PRO[LEN(PRO)-1,2]='AD' OR PRO[LEN(PRO)-1,2]='BD') AND (CL.BANK="C") AND ((ORIG.ZIP MATCH('1A1N1A1N1A1N') OR (DEST.ZIP MATCH('1A1N1A1N1A1N')))) THEN  ; * JMK257
            QI=''                        ; * JMK257
            VOUT=''                      ; * JMK257
            VIN=CC                       ; * JMK257
            VIN<2>=USER                  ; * JMK257
            VIN<3>=IN.OUT                ; * JMK257
            VIN<4>=ACTUAL.CHG            ; * JMK257
            VIN<5>=CLIENT.ID             ; * JMK257
            VIN<6>=ORIG.ZIP              ; * JMK257
            VIN<7>=DEST.ZIP              ; * JMK257

            CALL FB.2.1.DUTY(VIN,VOUT,DIDUTY,DODUTY,QI)      ; * JMK257
            * GRB
            CDCC = DCOUNT(MISC.CHG<1>,@VM)
            ***   IF USER = 'GBINO' THEN

            FOR I = 1 TO CDCC
               CD = MISC.CHG<1,I>        ; * code keyed in first screen
               LOCATE(CD,DODUTY<1>,1;POP) THEN     ; * update from fb.2.1.duty
                  MISC.CHG<2,I> = DODUTY<2,POP>    ; * replace ola/tempo amount with keyed in amt in duty
               END
            NEXT I

            FOR I = 1 TO CDCC
               SER.CD = MISC.CHG<1,I>
               LOCATE(SER.CD,DTL.CHRG.CODES<1>,1;PPP) THEN
                  IF MISC.CHG<2,I> GT 0 THEN
                     DTL.CHRG.AMTS<1,PPP> =MISC.CHG<2,I>
                  END
               END
            NEXT I
            ***    END

            CC+=VOUT<1> ; GOSUB PRINT.CC           ; * JMK257
            IF QI='X' THEN               ; * JMK257
               BACK.FLAG=1               ; * JMK257
               GOTO 2200                 ; * JMK257
            END                          ; * JMK257
            IF CLIENT.ID='01460' OR CLIENT.ID='01986' THEN
               EXPVIN=''                 ; * JMK112
               EXPVOUT=''                ; * JMK112
               EXPVIN<1>=CLIENT.ID       ; * JMK112
               EXPVIN<2>=ACTUAL.CHG      ; * JMK112
               EXPVIN<3>=DIVISION        ; * JMK112
               CALL DIST.EXPENSE(EXPVIN,EXPVOUT,DODUTY)      ; * JMK112
               IF EXPVOUT#'' THEN        ; * JMK112
                  DTAB<1>=EXPVOUT<1>     ; * JMK112
                  DTAB<3>=EXPVOUT<2>     ; * JMK112
                  EXP.CODE=DTAB<1,1>     ; * JMK112
               END                       ; * JMK112
            END
         END ELSE                        ; * JMK257
            IF BACK.FLAG THEN GOTO 2200
         END                             ; * JMK257
      END

      * Begin NKH40
      DTL.CHG.CNT = DCOUNT(DTL.CHRG.AMTS,@VM)
      FOR JJ = 1 TO DTL.CHG.CNT
         SS = INDEX(DTL.CHRG.AMTS<1,JJ>,"%",1)
         IF SS THEN
            LOCATE(DTL.CHRG.CODES<1,JJ>,DODUTY<1>,1;QQ) THEN
               DTL.CHRG.AMTS<1,JJ> = DODUTY<2,QQ>
               LOCATE(DTL.CHRG.CODES<1,JJ>,MISC.CHG.CODES,1;MPOS) THEN
                  CONTR.MISC.CHG.AMTS<1,MPOS> = DTL.CHRG.AMTS<1,JJ>
                  BENCH.MISC.CHG.AMTS<1,MPOS> = DTL.CHRG.AMTS<1,JJ>
               END
            END
         END
      NEXT JJ

      *      IF SS THEN
      *         MISC.CODE.COUNT = DCOUNT(MISC.CHG.CODES,@VM)
      *         FOR JJ = 1 TO MISC.CODE.COUNT
      *            LOCATE(MISC.CHG.CODES<1,JJ>,DTL.CHRG.CODES,1;QQ) THEN
      *               CONTR.MISC.CHG.AMTS<1,JJ> = DTL.CHRG.AMTS<1,QQ>
      *               BENCH.MISC.CHG.AMTS<1,JJ> = DTL.CHRG.AMTS<1,QQ>
      *            END
      *         NEXT JJ
      *      END
      * End NKH40

      *DF      IF (CLIENT.ID='01105' OR CLIENT.ID='01898' OR CLIENT.ID='01979' OR CLIENT.ID='02225' OR CLIENT.ID = '02118') THEN  ; * JMK209
      IF (CLIENT.ID='01105' OR CLIENT.ID='01898' OR CLIENT.ID='01979' OR CLIENT.ID='02225' OR CLIENT.ID = '02118' OR CLIENT.ID = '01866'OR CLIENT.ID = '05166') THEN       ; * JMK209
         EXPVIN=''
         EXPVOUT=''
         EXPVIN<1>=CLIENT.ID
         EXPVIN<2>=ACTUAL.CHG
         EXPVIN<3>=DIVISION
         EXPVIN<4>=DTAB<1>
         IF DODUTY='' AND DIDUTY# '' THEN          ; * DRF074
            CALL DIST.EXPENSE(EXPVIN,EXPVOUT,DIDUTY)         ; * DRF074
         END ELSE                        ; * DRF074
            CALL DIST.EXPENSE(EXPVIN,EXPVOUT,DODUTY)
         END                             ; * DRF074
         IF EXPVOUT#'' THEN
            DTAB<1>=EXPVOUT<1>
            DTAB<3>=EXPVOUT<2>
            EXP.CODE=DTAB<1,1>
         END
      END
      BEEN.THRU=0

*****************************************************************
4900: * Item update
*****************************************************************
      *This block of code was added to fix SysAid ticket 2447 but also
      *was useful for Project 182 for proper handling of changing a
      *Never Pay to an Eventually Pay in FB.TIMELINE.SUMMARY.
      IF OLD.PRO.REC<39> = 'O' THEN      ; * NKH56
         IF CARRIER.REC<131,1> = 'Y' THEN          ; * NKH56
            PRO.REC<292> = 'Y'           ; * NKH56
            IF OLD.PRO.REC # "" THEN OLD.PRO.REC<292> = 'Y'  ; * NKH60
         END                             ; * NKH56
      END                                ; * NKH56
      IF OLD.PRO.REC<37> # '' THEN       ; * SWB08
         IF OLD.PRO.REC<66> = 'N' AND REJ.TYPE = 'E' THEN    ; * SWB08
            IF OLD.PRO.REC<39> = 'R' THEN          ; * SWB08
               CHANGED.TO.EVENTUAL.PAY = 1         ; * TRUE ; * SWB08
               * This will cause field 249 to be nulled in the FB.BILLS.HIST record
               * in the WRITE.PRO.INFO subroutine.
               MR.TO.PROCESS.DAYS = ''   ; * SWB08
            END                          ; * SWB08
         END                             ; * SWB08
      END                                ; * SWB08
      IF AMOUNT.MATCH='' AND USER.TYPE='' THEN AMOUNT.MATCH=0          ; * NPR039
      IF REJECT.FLAG OR VERSION#0 ELSE
         CAPTURE.DETAIL=0                ; * JMK43
         IF CLIENT.ID='01095' THEN
            IF ORIG.ZIP='99999' OR LEN(ORIG.ZIP)=6 OR DEST.ZIP='99999' OR LEN(DEST.ZIP)=6 THEN
               CAPTURE.DETAIL=1
            END ELSE
               CAPTURE.DETAIL=0
            END
         END

         IF FB.DTL.CAPTURE='Y' THEN CAPTURE.DETAIL=1         ; * JMK52
         IF (INDEX(T.MODE,'TRUCKLOAD',1) GT 0 & CL.TL.FLAG = 'Y') THEN CAPTURE.DETAIL=1    ; * JMK43
         IF DTL.CHRG.AMTS#'' THEN CAPTURE.DETAIL=1           ; * JMK83
         IF CARRIER.ID='00041' THEN CAPTURE.DETAIL=0         ; * JMK76
         IF CARRIER.ID='01312' THEN CAPTURE.DETAIL=0         ; * JMK76
         *        IF CARRIER.MODE='8' THEN CAPTURE.DETAIL=0           ; * JMK169; * JMK174
         IF CAPTURE.DETAIL THEN          ; * JMK43
            BEGIN CASE                   ; * JMK91
               CASE AIR.CAR              ; * JMK91
                  AIR.CHRG.AMT=SUM(AIR.CHRG.AMTS)  ; * JMK91

*****************************************************************
VERIFY.AIR.AMTS:  *   ; * JMK91
*****************************************************************
                  IF (AIR.CHRG.AMT#ACTUAL.CHG ) OR (PRO.REC<39>#'R' AND AMOUNT.MATCH=0) OR (AIR.CAR & CL.AIR.FLAG='Y') OR (QI='X') THEN      ; * JMK91 ; * JMK158 ; * NPR059
                     IF ACTUAL.CHG=0 THEN
                        NUM.OF.CODES=DCOUNT(AIR.CHRG.AMTS,@VM)
                        FOR XX = 1 TO NUM.OF.CODES
                           AIR.CHRG.AMTS<1,XX>=0
                        NEXT XX
                     END ELSE
                        GOSUB GET.FB.DETAILS       ; * JMK91
                     END
                     IF QI='X' THEN      ; * JMK91
                        BACK.FLAG=1      ; * JMK91
                        GOSUB 8100       ; * JMK91
                        GOSUB 8200       ; * JMK91
                        GOTO ENTER.DUTY  ; * JMK91
                     END                 ; * JMK91
                     FRT.ARRAY=''        ; * JMK91
                     MIS.ARRAY=''        ; * JMK91
                     DTL.OUT=''          ; * JMK91
                     DTL.OUT<40>=AIR.CHRG.CODES    ; * JMK91
                     DTL.OUT<44>=AIR.CHRG.AMTS     ; * JMK91
                     GOSUB RECALC.FB.DETAILS       ; * JMK91
                  END                    ; * JMK91
                  IF SU.FLAG=1 AND DBCTRL<15>='AC' ELSE
                     LOCATE('FUEL',AIR.CHRG.CODES,1;FPOS) ELSE         ; * JMK91

*****************************************************************
VERIFY.FUEL:            *         ; * JMK91
*****************************************************************
                        CRT @(0,21):@(-3):"[YES] I verify that this bill does NOT have a fuel surcharge."      ; * JMK91
                        HELP="X=Change. EX=Exit. [YES]=Continue."      ; * JMK91
                        CALL GEN.IN(0,22,'Enter selection please. ---','',Q,0,3,'','',0,-3,22,1,QI,HELP,0,23)  ; * JMK91
                        QI=OCONV(QI,'MCU')         ; * JMK91
                        BEGIN CASE       ; * JMK91
                           CASE QI='X'   ; * JMK91
                              CRT @(0,21):@(-3):   ; * JMK91
                              GOTO 4900  ; * JMK91
                           CASE QI='EX'  ; * JMK91
                              GOTO PROGRAM.EXIT    ; * NKH10       ; * JMK91
                           CASE QI='YES'           ; * JMK91
                              NULL       ; * JMK91
                           CASE QI='1'   ; * JMK91
                              NULL       ; * JMK91
                           CASE 1        ; * JMK91
                              CALL ELINE('Invalid entry. Must be [X], [EX], or [YES].')    ; * JMK91
                              GOTO VERIFY.FUEL     ; * JMK91
                        END CASE         ; * JMK91
                        CRT @(0,21):@(-3):         ; * JMK91
                     END                 ; * JMK91
                  END
               CASE 1                    ; * JMK91
                  DTL.CHRG.AMT=SUM(DTL.CHRG.AMTS)  ; * JMK18

*****************************************************************
VERIFY.DTL.AMTS:  *   ; * JMK18
*****************************************************************
                  IF (DTL.CHRG.AMT#ACTUAL.CHG ) OR (PRO.REC<39>#'R' AND AMOUNT.MATCH=0) OR (TL.CAR & CL.TL.FLAG='Y') OR (QI='X') THEN        ; * JMK18 ; * JMK69 ; * JMK158 ; * NPR059
                     IF ACTUAL.CHG=0 THEN
                        NUM.OF.CODES=DCOUNT(DTL.CHRG.AMTS,@VM)
                        FOR XX = 1 TO NUM.OF.CODES
                           DTL.CHRG.AMTS<1,XX>=0
                        NEXT XX
                     END ELSE
                        GOSUB GET.FB.DETAILS       ; * JMK18
                     END
                     IF QI='X' THEN
                        BACK.FLAG=1
                        GOSUB 8100
                        GOSUB 8200
                        GOTO ENTER.DUTY
                     END
                     FRT.ARRAY=''        ; * JMK18
                     MIS.ARRAY=''        ; * JMK18
                     DTL.OUT=''          ; * JMK18
                     DTL.OUT<40>=DTL.CHRG.CODES    ; * JMK18
                     DTL.OUT<44>=DTL.CHRG.AMTS     ; * JMK18
                     GOSUB RECALC.FB.DETAILS       ; * JMK18
                  END                    ; * JMK18
                  CHECK.FSC = 1          ; * NPR031
                  IF ORIG.ZIP = "99999" OR DEST.ZIP = "99999" THEN
                     IF CARRIER.ID='00041' THEN
                        CHECK.FSC = 1
                     END ELSE
                        CHECK.FSC = 0
                     END
                  END
                  IF INTL.CAR OR INDEX(T.MODE,"INTERNATIONAL",1) THEN CHECK.FSC = 0
                  IF SU.FLAG=1 AND DBCTRL<15>='AC' THEN CHECK.FSC=0

                  IF NOT(CHECK.FSC) THEN
                     NULL
                  END ELSE

                     LOCATE('FSC',DTL.CHRG.CODES,1;FPOS) ELSE          ; * JMK18

*****************************************************************
VERIFY.FSC:             *         ; * JMK18
*****************************************************************
                        CRT @(0,21):@(-3):"[YES] I verify that this bill does NOT have a fuel surcharge."      ; * JMK18
                        HELP="X=Change. EX=Exit. [YES]=Continue."      ; * JMK18
                        CALL GEN.IN(0,22,'Enter selection please. ---','',Q,0,3,'','',0,-3,22,1,QI,HELP,0,23)  ; * JMK18
                        QI=OCONV(QI,'MCU')         ; * JMK18
                        BEGIN CASE       ; * JMK18
                           CASE QI='X'   ; * JMK18
                              CRT @(0,21):@(-3):   ; * JMK18
                              GOTO 4900  ; * JMK18
                           CASE QI='EX'  ; * JMK18
                              GOTO PROGRAM.EXIT    ; * NKH10       ; * JMK18
                           CASE QI='YES'           ; * JMK18
                              NULL       ; * JMK18
                           CASE QI='1'   ; * JMK22
                              NULL       ; * JMK22
                           CASE 1        ; * JMK18
                              CALL ELINE('Invalid entry. Must be [X], [EX], or [YES].')    ; * JMK18
                              GOTO VERIFY.FSC      ; * JMK18
                        END CASE         ; * JMK18
                        CRT @(0,21):@(-3):
                     END                 ; * JMK18
                  END                    ; * NPR031
            END CASE                     ; * JMK91
            GOSUB 8100
            GOSUB 8200
         END                             ; * JMK18
      END
      IF USER.TYPE # 'A' AND NOT(SU.FLAG) THEN
         IF AUDIT.TYPE = 'LTLALL' THEN
            IF USER='DAVID' THEN CALL ELINE('STACK ASSIGNMENT')
            IF AMOUNT.MATCH=0 THEN
               IF AUDIT # 'Y' THEN
                  BILL.STATUS=4
               END ELSE
                  BILL.STATUS=3
               END
            END ELSE
               IF AUDIT = 'Y' THEN
                  IF HIGH.CLASS > LOWEST.TABLE.CLASS THEN
                     IF CONTR.ABS.MIN THEN
                        BILL.STATUS=1
                        MIN.CHG='Y'
                     END ELSE
                        BILL.STATUS=2
                     END
                  END ELSE
                     BILL.STATUS=1
                  END
               END
            END
         END
         IF AUDIT.TYPE='TLALL' THEN
            IF AUDIT='Y' THEN

               IF CLIENT.ID='00949' THEN
                  BILL.STATUS=3
               END ELSE
                  BILL.STATUS=1
               END
            END
            IF AUDIT='U' THEN
               BILL.STATUS=3
            END
         END
         IF VERSION = '0' THEN
            OVERRIDE.STATUS=''
            TEMP.REC = ''
            TEMP.REC<1> = BILL.DATE
            TEMP.REC<2> = IN.OUT
            TEMP.REC<3> = ORIG.ZIP
            TEMP.REC<4> = DEST.ZIP
            TEMP.REC<5> = EXP.CODE
            IF CLIENT.ID='30028' THEN    ; * JMK193
               IF TEMP.REC<236>='' THEN  ; * JMK193
                  TEMP.REC<236>=EXP.CCTR           ; * JMK193
               END                       ; * JMK193
               IF TEMP.REC<237>='' THEN  ; * JMK193
                  TEMP.REC<237>=EXP.PROJ           ; * JMK193
               END                       ; * JMK193
            END                          ; * JMK193
            TEMP.REC<6> = WEIGHT+0
            TEMP.REC<8> = ACTUAL.CHG+0
            TEMP.REC<9> = DIVISION
            TEMP.REC<10> = VAR.ARR<1>+0
            TEMP.REC<11> = VAR.ARR<2>+0
            TEMP.REC<12> = VAR.ARR<3>+0
            TEMP.REC<16> = BOL
            TEMP.REC<205> = BOL.DIST     ; * JMK84
            TEMP.REC<17> = VC.ID
            TEMP.REC<19> = MILEAGE+0
            CARRIER.MODE.WGT = CARRIER.REC<70>
            CARRIER.MODE.BY.WGT = CARRIER.REC<71>
            LOCATE WEIGHT IN CARRIER.MODE.WGT<1> BY "AR" SETTING POS ELSE NULL
            T.MODE.BY.WGT = OCONV(CARRIER.MODE.BY.WGT<1,POS>,'MCU')
            LTL.CAR=T.MODE.BY.WGT=1      ; * JMK187
            TL.CAR=T.MODE.BY.WGT=6       ; * JMK187
            AIR.CAR=T.MODE.BY.WGT=12     ; * JMK187
            TEMP.REC<21> = T.MODE.BY.WGT
            TEMP.REC<25> = ORIG.STATE
            TEMP.REC<26> = DEST.STATE
            TEMP.REC<27> = ORIG.CITY
            TEMP.REC<28> = DEST.CITY
            TEMP.REC<68> = BILL.STATUS
            TEMP.REC<63> = MISROUTE.AMOUNT
            TEMP.REC<69> = MISROUTE.CARRIER
            TEMP.REC<143>=LCC.AMOUNT
            TEMP.REC<147>=LCC.CARRIER
            MISC.CHG.POS=DCOUNT(CLASSES<1>,@VM)    ; * Find out how many
            FOR MISC.CHG.CNT=1 TO MISC.CHG.POS
               TEMP.REC<70,MISC.CHG.CNT>='FRT'
            NEXT MISC.CHG.CNT
            IF MISC.CHG.CODES#'' THEN
               TEMP.REC<70,MISC.CHG.POS+1>=MISC.CHG.CODES
            END
            TEMP.REC<74> = CLASSES
            TEMP.REC<119> = FLAT.RATE
            IF AIR.CHRG.CODES#'' THEN    ; * NPR770
               TEMP.REC<151>=AIR.CHRG.CODES        ; * NPR770
            END
            IF INTL.CHRG.CODES#'' THEN   ; * NPR770
               TEMP.REC<151>=INTL.CHRG.CODES       ; * NPR770
            END
            IF DTL.CHRG.CODES#'' THEN    ; * NPR770
               TEMP.REC<151>=DTL.CHRG.CODES        ; * NPR770
            END
            OVERRIDE.VIN=''
            OVERRIDE.VIN<1>=VC.DESC
            OVERRIDE.VIN<2>=ACTUAL.CHG+0
            OVERRIDE.VIN<3>=OLA.AMT+0
            OVERRIDE.VIN<5>=PRO
            IF USER='DAVID' THEN CALL ELINE('PRESS BREAK')
            CALL CHECK.OVERRIDES(OVERRIDE.VIN,CLIENT.ID,CARRIER.ID,TEMP.REC,OVER.VOUT)
            IF OVER.VOUT<1>#'' AND OVER.VOUT<1>#BILL.STATUS THEN
               IF USER='DAVID' THEN
                  NUM.OF.OVER.RULE=DCOUNT(OVER.VOUT<2>,@VM)
                  FOR XX = 1 TO NUM.OF.OVER.RULE
                     CRT @(40,7+XX):OVER.VOUT<2,XX>'L#10':" ":OVER.VOUT<3,XX>'L#3':" ":OVER.VOUT<4,XX>'L#23'
                  NEXT XX
                  CALL ELINE('Set in the override stack')
               END
               IF OVER.VOUT<1>='1' AND (BILL.STATUS='3' OR BILL.STATUS='4') THEN
                  IF VAR.ARR<3> GT 0 THEN
                     VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
                  END
               END
               OVERRIDE.STATUS=BILL.STATUS
               BILL.STATUS=OVER.VOUT<1>
               OVERRIDE.FIELD=OVER.VOUT<2>
               OVERRIDE.OPERATOR=OVER.VOUT<3>
               OVERRIDE.INFO=OVER.VOUT<4>
            END
            IF CLIENT.ID='01290' OR CLIENT.ID='01313' OR CLIENT.ID='01309' OR CLIENT.ID='01316' OR CLIENT.ID='01339' OR CLIENT.ID='01333' OR CLIENT.ID='01320' OR CLIENT.ID='01322' OR (CLIENT.ID='01351' AND CARRIER.ID='00041') OR (CLIENT.ID='01342' AND CARRIER.ID='15113') OR (CLIENT.ID='01342' AND CARRIER.ID='01075') ELSE
               IF BILL.STATUS=1 THEN
                  BEGIN CASE
                     CASE CLIENT.ID='01340'
                        IF ACTUAL.CHG GT '499999' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='499999'
                        END
                     CASE CLIENT.ID='01344' AND CARRIER.ID='15417'
                        IF ACTUAL.CHG GT '362500' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='362500'
                        END
                     CASE CLIENT.ID='10340' AND CARRIER.ID='11488'     ; * DRF026
                     CASE CLIENT.ID='01288' AND CARRIER.ID='14577'
                        IF ACTUAL.CHG GT '560000' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='560000'
                        END
                     CASE CLIENT.ID='01310' AND CARRIER.ID='06005'
                        IF ACTUAL.CHG GT '400000' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='400000'
                        END
                     CASE CLIENT.ID='01179' AND CARRIER.ID='07450'
                        IF ACTUAL.CHG GT '500000' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='500000'
                        END
                     CASE CLIENT.ID='00392' AND CARRIER.ID='00212'
                        IF ACTUAL.CHG GT '600000' THEN
                           BILL.STATUS='4'
                           OVERRIDE.FIELD='CHRG'
                           OVERRIDE.OPERATOR='GT'
                           OVERRIDE.INFO='600000'
                        END
                     CASE CLIENT.ID='10087' AND CARRIER.ID='00677'     ; * DRF021
                        IF ACTUAL.CHG GT '400000' THEN       ; * DRF021
                           BILL.STATUS='4'         ; * DRF021
                           OVERRIDE.FIELD='CHRG'   ; * DRF021
                           OVERRIDE.OPERATOR='GT'  ; * DRF021
                           OVERRIDE.INFO='400000'  ; * DRF021
                        END              ; * DRF021
                     CASE CLIENT.ID='05085'        ; * DRF039
                        IF ACTUAL.CHG GT '1000000' THEN      ; * DRF039
                           BILL.STATUS='4'         ; * DRF039
                           OVERRIDE.FIELD='CHRG'   ; * DRF039
                           OVERRIDE.OPERATOR='GT'  ; * DRF039
                           OVERRIDE.INFO='1000000'           ; * DRF039
                        END              ; * DRF039
                        *DF                     CASE T.MODE.BY.WGT='1' AND ACTUAL.CHG GT '149999'           ; * DRF034; * DRF092
                     CASE T.MODE.BY.WGT='1' AND ACTUAL.CHG GT '299999'           ; * DRF034; * DRF092
                        BILL.STATUS='4'
                        OVERRIDE.FIELD='CHRG'
                        OVERRIDE.OPERATOR='GT'
                        OVERRIDE.INFO='99999'

                     CASE (CARRIER.ID#'00041' AND CARRIER.ID#'08519' AND CARRIER.ID#'12393' AND CARRIER.ID#'03029' AND CARRIER.ID#'11159' AND CARRIER.ID#'09899' AND CARRIER.ID#'00642' AND CARRIER.ID#'04064' AND CARRIER.ID#'23288' AND CARRIER.ID#'23289') AND ACTUAL.CHG GT '1500000'          ; * GRB006      ; * DRF024
                        BILL.STATUS='4'
                        OVERRIDE.FIELD='CHRG'
                        OVERRIDE.OPERATOR='GT'
                        OVERRIDE.INFO='999999'     ; * DRF024
                  END CASE
               END
            END
         END
         IF ACTUAL.CHG+0>150000 AND TRANS.MODE=1 THEN        ; * JMK141
            NO.CORE.FLAG=0               ; * JMK141
            IF PRO.REC<197>#'Y' OR MISROUTE.AMOUNT+0#0 THEN  ; * JMK141
               NVAL=DCOUNT(CLASSES,@VM)  ; * JMK141
               FOR VAL=1 TO NVAL UNTIL NO.CORE.FLAG          ; * JMK141
                  CLS=CLASSES<1,VAL>     ; * JMK141
                  IF CLS < 100 AND ACTUAL.CHG+0>150000 THEN NO.CORE.FLAG=1       ; * JMK141
                  IF CLS >= 100 AND ACTUAL.CHG+0>200000 THEN NO.CORE.FLAG=1      ; * JMK141
               NEXT VAL                  ; * JMK141
               IF NVAL=0 THEN NO.CORE.FLAG=1       ; * JMK141
               IF NO.CORE.FLAG AND PRO.REC<21>='1' AND BILL.STATUS<3 THEN        ; * JMK141
                  BILL.STATUS='3'        ; * JMK141
               END                       ; * JMK141
            END                          ; * JMK141
         END                             ; * JMK141
         IF USER = "MARY" THEN           ; * Temporary for testing purposes 052509.
            CARRIER.MODE.WGT = CARRIER.REC<70>
            CARRIER.MODE.BY.WGT = CARRIER.REC<71>
            LOCATE WEIGHT IN CARRIER.MODE.WGT<1> BY "AR" SETTING POS ELSE NULL
            T.MODE.BY.WGT = OCONV(CARRIER.MODE.BY.WGT<1,POS>,'MCU')
            LTL.CAR=T.MODE.BY.WGT=1      ; * JMK187
            TL.CAR=T.MODE.BY.WGT=6       ; * JMK187
            AIR.CAR=T.MODE.BY.WGT=12     ; * JMK187
            IF USER.TYPE NE 'A' THEN
               NULL
            END ELSE
               IF BILL.STATUS = "3" OR BILL.STATUS = "4" THEN
                  NULL
               END ELSE
                  THRESHOLD.AMT = '' ; TCH.NOTE1 = "" ; TCH.NOTE2 = ""
                  ID.TAB.TCH = "MODE_THC*" : T.MODE.BY.WGT : "*" : CLIENT.ID
                  READV TR.MODE.DESC FROM F.TRANSPORT,T.MODE.BY.WGT,1 ELSE TR.MODE.DESC = ''
                  TCH.NOTE2 = "Set for transport mode ":T.MODE.BY.WGT
                  IF TR.MODE.DESC NE '' THEN TCH.NOTE2 := " (":TR.MODE.DESC:")"
                  READ TCH.REC FROM F.TABLES, ID.TAB.TCH THEN
                     THRESHOLD.AMT = TCH.REC<1>
                  END ELSE
                     ID.TAB.TCH = "MODE_THC*" : T.MODE.BY.WGT : "*ALL"
                     READ TCH.REC FROM F.TABLES, ID.TAB.TCH THEN
                        THRESHOLD.AMT = TCH.REC<1>
                        TCH.NOTE2 = " and ALL Clients"
                     END
                  END
                  IF THRESHOLD.AMT NE '' THEN
                     IF ACTUAL.CHG GE THRESHOLD.AMT THEN
                        NEW.BILL.STATUS = "4"      ; * Force the bill to go to the Auditors regardless of any other reasons to the contrary
                        TCH.NOTE1 = "Bill Amount of ":OCONV(ACTUAL.CHG,"MR2$"):"  Exceeds set threshold of ":OCONV(THRESHOLD.AMT,"MR2$")
                        IF INDEX(FB.NOTE,"threshold",1) THEN
                           NULL
                        END ELSE
                           FB.NOTE<1,-1> = TCH.NOTE1
                           FB.NOTE<1,-1> = TCH.NOTE2 : " -- Changed Stack # from ":BILL.STATUS:" to ":NEW.BILL.STATUS
                        END
                        GOSUB SEND.THRESHOLD.EMAIL
                        BILL.STATUS = NEW.BILL.STATUS
                     END
                  END
               END
            END
         END
         GOSUB 8100
         GOSUB 8200

*****************************************************************
VERIFY.BOL:
*****************************************************************
         IF M.BOL.REC = '' THEN GOTO VERIFY.BOL.END
         IF DO.BOL.POP THEN
            IF CLIENT.REC(254) NE "" THEN
               BLOUT = ''
               CL.BOL.POP.VER = CLIENT.REC(254)
               CL.BOL.POP.VER<2> = CLIENT.REC(255)
               CL.BOL.POP.VER<3> = CLIENT.REC(256)
               TEMP.REC<75> = WEIGHTS    ; * NPR028 was not being updated earlier in pgm.
               CALL FB.SETUP.BOL.POP.VER(M.BOL.REC,TEMP.REC,BLOUT,CL.BOL.POP.VER,"V")      ; * Verify data
               IF BLOUT NE '' THEN
                  CRT @(0,21):"Update Bill even if BOL data does not verify [YES]. [NO] "
                  HELP="X=Change. EX=Exit. [YES]=Continue."
                  CALL GEN.IN(0,22,'Enter selection please. ---','',Q,0,3,'','',0,-3,22,1,QI,HELP,0,23)
                  QI=OCONV(QI,'MCU')
                  BEGIN CASE
                     CASE QI='X'
                        CRT @(0,21):@(-3):
                        GOTO 4900
                     CASE QI='EX'
                        GOTO PROGRAM.EXIT          ; * NKH10
                     CASE QI='YES'
                        NULL
                     CASE QI='NO'
                        GOSUB 8100
                        GOSUB 8200
                        CHANGE.FLAG=1
                        GO 300
                     CASE 1
                        CALL ELINE('Invalid entry. Must be [X], [EX], [NO], or [YES].')
                        GOTO VERIFY.BOL
                  END CASE
                  CRT @(0,21):@(-3):
               END
            END
         END

*****************************************************************
VERIFY.BOL.END:
*****************************************************************
         GOSUB 8100
         GOSUB 8200
         * Begin NKH30
         TEXT.LINE=''
         *         BEGIN CASE
         *            CASE VERSION > 0
         *               TEXT.LINE=''
         *            CASE BILL.STATUS='1'
         *               TEXT.LINE='Stack 1V - This bill does NOT need to go to an auditor.'         ; * JMK24
         *            CASE BILL.STATUS='2'
         *               TEXT.LINE='Stack 2 - This bill was audited but class needs to be verified by audit.'
         *            CASE BILL.STATUS='3'
         *               TEXT.LINE='Stack 3 - This bill audited. But the amount did not match.'
         *            CASE BILL.STATUS='4'
         *               TEXT.LINE='Stack 3 - This bill did not audit. An auditor needs to approve it.'
         *            CASE 1
         *               IF VERSION='0' THEN
         *                  TEXT.LINE='This bill did not have a status. CALL PROGRAMMING.'
         *               END
         *         END CASE
         QV.VALID=0                      ; * JMK24
         *         IF BILL.STATUS=1 THEN           ; * JMK24
         *            QV.ID=CLIENT.ID'R%5':'*':CARRIER.ID'R%5'         ; * JMK24

         *            READ QV.REC FROM F.QV,QV.ID ELSE       ; * JMK24
         *               QV.ID='00000*':CARRIER.ID'R%5'      ; * JMK24
         *               READ QV.REC FROM F.QV,QV.ID ELSE QV.REC='N'   ; * JMK24
         *            END                          ; * JMK24
         *            QV.FLG=QV.REC<1>             ; * JMK24
         QV.FLG='Y'
         * End NKH30
         IF QV.FLG='Y' THEN              ; * JMK24
            IF USER.TYPE='A' THEN QV.FLG='N'       ; * JMK24
         END                             ; * JMK24
         IF QV.FLG='Y' THEN              ; * JMK24
            IF REJECT.FLAG='R' THEN QV.FLG='N'     ; * JMK24
         END                             ; * JMK24
         IF QV.FLG='Y' THEN              ; * JMK24
            IF VERSION#'0' THEN QV.FLG='N'         ; * JMK24
         END                             ; * JMK24
         * Begin NKH30
         *            IF QV.FLG='Y' THEN           ; * JMK24
         *               TEST=CLIENT.QV            ; * JMK24
         *               LOCATE('P',TEST,1;PPOS) THEN        ; * JMK24
         *                  DEL TEST<1,PPOS>       ; * JMK24
         *               END                       ; * JMK24
         *               LOCATE('A',TEST,1;PPOS) THEN        ; * JMK24
         *                  DEL TEST<1,PPOS>       ; * JMK24
         *               END                       ; * JMK24
         *               IF TEST#'' THEN QV.FLG='N'          ; * JMK24
         *            END                          ; * JMK24
         *            IF CLIENT.REC(92)='00002' THEN QV.FLG='N'        ; * BOH02
         * End NKH30
         IF QV.FLG='Y' THEN              ; * JMK24
            GOSUB QUICK.VERIFY           ; * JMK24
            IF QV.VALID=0 THEN           ; * JMK24
               GOSUB 8100                ; * JMK24
               GOSUB 8200                ; * JMK24
               CHANGE.FLAG=1             ; * JMK24
               GO 300                    ; * JMK24
            END
            *               TEXT.LINE='Stack 1G - This bill does NOT need to go to an auditor or verify.'         ; * JMK24   ; * NKH30
         END                             ; * JMK24
         *         END                             ; * JMK24   ; * NKH30
         CRT @(0,21):TEXT.LINE:@(-3)
      END

*****************************************************************
PROMPT.FOR.UPDATE:                       ; * SWB02
*****************************************************************
      IF USER.TYPE#'A' THEN
         ALCON.REJECT=0
         IF ALCON.REJECT THEN
            IF NOT(BILL.IS.LOCKED) OR BILL.LOCK.OVERRIDE THEN          ; * NKH59   NKH60
               HELP = '[R]=Rej [Y]=Upd [NU]=No Upd [N]=Note [X]=Back [EX]=Exit'  ; * JMK111
            END ELSE                     ; * NKH59
               HELP = '[Y]=Upd [NU]=No Upd [N]=Note [X]=Back [EX]=Exit'          ; * JMK111            NKH59
            END                          ; * NKH59
            CALL GEN.IN(0,22,'Update?  ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)  ; * NKH59
         END ELSE
            BOL.REJECT=0
            IF CLIENT.ID='01599' AND BOL[1,1]='9' AND BOL#'99' THEN
               BOL.REJECT=1
            END
            IF (VC.REJECT OR WT.REJECT OR BOL.REJECT) AND REJECT.FLAG#'R' THEN   ; * JMK28 ; * JMK133
               IF NOT(BILL.IS.LOCKED) OR BILL.LOCK.OVERRIDE THEN       ; * NKH59   NKH60
                  HELP = '[R]=Rej [NU]=No Upd [N]=Note [X]=Back [EX]=Exit'       ; * JMK28 ; * JMK111
               END ELSE                  ; * NKH59
                  HELP = '[NU]=No Upd [N]=Note [X]=Back [EX]=Exit'     ; * JMK28 ; * JMK111     NKH59
               END                       ; * NKH59
               CALL GEN.IN(0,22,'Update?  ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)         ; * JMK28  NKH59
               *               IF QI='' THEN QI='R'         ; * NKH59
            END ELSE                     ; * JMK28
               *               IF SESSION.UPDATE.FB.TIMELINE THEN  ; * SWB08     NKH06
               *                  HELP = '[R]=Rej [Y]=Upd [NU]=No Upd [N]=Note [MR]=Mail Room Date [X]=Back [EX]=Exit'         ; * SWB08  NKH04
               *                  HELP = '[R]=Rej [Y]=Upd [NU]=No Upd [L]=Lock & Upd [N]=Note [MR]=Mail Room Date [X]=Back [EX]=Exit'      ; *  NKH04  NKH06
               *               END ELSE                  ; * SWB08      NKH06
               *                  HELP = '[R]=Rej [Y]=Upd [NU]=No Upd [N]=Note [X]=Back [EX]=Exit'               ; * JMK111   NKH04
               IF NOT(BILL.IS.LOCKED) OR BILL.LOCK.OVERRIDE THEN       ; * NKH59   NKH60
                  HELP = '[R]=Rej [Y]=Upd [NU]=No Upd [L]=Lock & Upd [N]=Note [X]=Back [EX]=Exit'    ; * NKH04
               END ELSE                  ; * NKH59
                  HELP = '[Y]=Upd [NU]=No Upd [L]=Lock & Upd [N]=Note [X]=Back [EX]=Exit'  ; * NKH04 NKH59
               END                       ; * NKH59
               *               END                       ; * SWB08 NKH06
               CALL GEN.IN(0,22,'Update?  ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
               * Begin NKH04
               *               IF QI='' THEN QI='Y'
               BEGIN CASE
                  CASE QI='Y' OR QI='8'
                     QI='Y'
                     IF IMAGE.IS.LOCKED THEN       ; * NKH33
                        LOCK.SEQ += 1    ; * NKH33
                     END ELSE            ; * NKH33
                        LOCK.SEQ = 0     ; * NKH33
                     END                 ; * NKH33
                     LOCK.IMAGE = 0
                     IMAGE.IS.LOCKED = 0           ; * NKH33
                  CASE UPCASE(QI)='L' OR QI = '9'
                     QI='Y'
                     LOCK.SEQ += 1       ; * NKH33
                     LOCK.IMAGE = 1
                     IMAGE.IS.LOCKED = 1           ; * NKH33
                  CASE QI = ''
                     CALL ELINE('Invalid entry.')
                     GOTO PROMPT.FOR.UPDATE
               END CASE

PROMPT.FOR.UPDATE.1:
               IF VERIFY.FLAG THEN
                  HELP = '[V]=Verified [X]=Back [EX]=Exit'
                  CALL GEN.IN(0,22,'Did you uncheck Failed Verification on the image?   ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
                  IF QI = "v" THEN QI = "V"
                  IF QI # "V" AND QI # "X" AND QI # 'EX' THEN GOTO PROMPT.FOR.UPDATE.1
               END
               * End NKH04
            END                          ; * JMK28
         END
      END ELSE
         REJECTABLE = NOT(REJECT.FLAG = 'R' AND CHANGE.FLAG AND OLD.PRO.REC<1>='')
         IF BILL.IS.LOCKED AND NOT(BILL.LOCK.OVERRIDE) THEN REJECTABLE = 0       ; * NKH59   NKH60
         IF REJECT.FLAG='R' THEN
            HELP=''
         END ELSE
            HELP='[1]=[A]pprove '
         END
         HELP=HELP:'[2]=[C]hange '
         IF NOT(BILL.IS.LOCKED) OR BILL.LOCK.OVERRIDE THEN   ; * NKH59   NKH60
            HELP=HELP:'[U]pd but not Approve [NU]o Upd [N]ote [R]ej'   ; * JMK111
         END ELSE                        ; * NKH59
            HELP=HELP:'[U]pd but not Approve [NU]o Upd [N]ote'         ; * JMK111    NKH59
         END                             ; * NKH59
         HELP := " [D]et"                ; * NPR056
         CALL GEN.IN(0,22,'Approve for Payment? - ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
      END
      CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      IF USER.TYPE#'A' THEN
         IF VC.REJECT AND QI='' THEN QI='R'        ; * JMK28
         IF ALCON.REJECT THEN
            IF QI='' THEN QI='R'
         END ELSE
            IF QI='' THEN QI='Y'
         END
      END
      QI = OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI = 'V'                   ; * NKH04
         CASE QI = 'EX'
            GOTO PROGRAM.EXIT            ; * NKH10
         CASE QI = 'R' AND REJECTABLE
            IF NOT(REJECTION.ALTERED) THEN GOSUB INIT.REJECT.INFO
            RVIN='' ; RVOUT=''
            RVIN<1> = 'E'
            RVIN<2> = CARRIER.ID
            RVIN<3> = CLIENT.ID
            RVIN<4> = FIELD(PRO.ID,'*',2)
            RVIN<5> = 'R'
            RVIN<6> = BILL.DATE
            RVIN<7> = ACTUAL.CHG         ; * CARRIER.CHG
            RVIN<8> = REJ.TYPE
            *Pass REJECTION.ALTERED into FB.2.1.REJECT.KED to fix bug that caused
            *changes in FB.2.1.REJECT.KED to be lost the 2nd time the user chose 'R'
            *at the Update prompt.
            RVIN<11> = REJECTION.ALTERED           ; * SWB06
            CALL FB.2.1.REJECT.KED(RVIN, RVOUT, REJECT.REASONS, MAILING.ADDR)
            REJECT.FLAG = RVOUT<2>
            MULTI.PRO.ID = RVOUT<4>
            NUM.MULTI.PROS = DCOUNT(MULTI.PRO.ID<1>,@VM)
            MULTI.PRO.DATE = RVOUT<6>
            MULTI.PRO.CHG = RVOUT<7>
            MULTI.PRO.REJ = RVOUT<8>
            REJ.PAYIT = RVOUT<9>         ; * JMK231
            IF RVOUT<9>='Y' THEN
               PROC.DATE=''
               IF DATE() LE CLIENT.REC(82) THEN
                  BILL.DATE=CLIENT.REC(82)+1
               END ELSE
                  BILL.DATE=DATE()
               END
            END
            BILL.DATE = MULTI.PRO.DATE<1,1>
            ACTUAL.CHG = MULTI.PRO.CHG<1,1>
            IF CARRIER.CHG+0 = 0 THEN CARRIER.CHG=MULTI.PRO.CHG<1,1>
            REJ.TYPE = MULTI.PRO.REJ<1,1>
            GOSUB 8100                   ; * Redraw Screen Fields
            GOSUB 8200                   ; * Redraw Screen Data
            BEGIN CASE
               CASE RVOUT<1>='EX'
                  GOTO PROGRAM.EXIT      ; * NKH10
               CASE RVOUT<1>='X' OR REJECT.FLAG = ''
                  GOTO 400
            END CASE
            REJECTION.ALTERED = RVOUT<3>
            ACCESS.REASON = "REJ"        ; * NPR042 Bill rejected
            GOSUB UPD.FB.BILLS.ACCESS    ; * NKH56
            GOTO 4900
         CASE QI = 'N'                   ; * JMK111
            CALL FB.2.1.NOTES(FB.NOTE,QI,0)        ; * JMK119
            GOSUB 8100                   ; * JMK119
            GOSUB 8200                   ; * JMK119
            ACCESS.REASON = "NOTE.ADD"   ; * NPR042 --  Note Added  NKH36
            GOSUB UPD.FB.BILLS.ACCESS    ; * NPR042
            GOTO 4900                    ; * JMK111
         CASE QI = 'NU'                  ; * JMK111
            CHANGE.FLAG = 0
            GOSUB 8100                   ; * Display screen
            ACCESS.REASON = "NU"         ; * NPR042 Exit with No Update
            GOSUB UPD.FB.BILLS.ACCESS    ; * NPR042
            GOTO 300                     ; * ENTER PRO
         CASE QI = 'X'
            IF VERSION GT 0 THEN
               CALL ELINE('Back up not allowed on duplicate posting.')
               CC+=1 ; GOSUB PRINT.CC
               GOTO 4900                 ; * UPDATE ACTION
            END
            BACK.FLAG = 1
            GOTO ENTER.DUTY
         CASE (QI='C' OR QI='2')
            ACCESS.REASON = "CNG"        ; * NPR042
            GOSUB UPD.FB.BILLS.ACCESS    ; * NKH56
            IF BILL.STATUS='2' THEN GOTO 390
            AUDIT='S'
            GOTO 430
         CASE (QI='Y' AND USER.TYPE#'A') OR (QI='U' AND USER.TYPE='A') OR (QI='A' AND REJECT.FLAG # 'R' AND USER.TYPE='A') OR (QI='1' AND REJECT.FLAG # 'R' AND USER.TYPE='A')
            IF MISSING.DATA#'' AND NOT(REJECT.FLAG) THEN
               CALL ELINE('Missing ':MISSING.DATA<1,1>:' ':MISSING.DATA<1,2>:' ':MISSING.DATA<1,3>:' you should reject bill until this information comes in.')
               GOTO 4900
            END
            IF DBCTRL<14>='N' AND (NOT(REJECT.FLAG) OR CLIENT.ID#'00000') THEN
               CALL ELINE('Can only update rejected bills for Client 00000.')
               GOTO 4900
            END
            IF REJECT.FLAG#'R' AND VERSION=0 THEN
               IF TEMP.CLIENT.ID#'00857' THEN
                  IF FLAT.RATE AND MISROUTE.ARRAY<1>#'' THEN
                     CALL ELINE('Flat rate should not have a misroute')
                     GOTO 4900
                  END

               END
            END

            * Begin NKH71
*****************************************************************
VERIFY.AMT:
*****************************************************************
*DF            IF ACTUAL.CHG > 300000 AND USER.TYPE = "A" AND CARRIER.MODE='1' AND REJECT.FLAG#'R' THEN    ; * DRF105
            IF ACTUAL.CHG > 200000 AND USER.TYPE = "A" AND CARRIER.MODE='1' AND REJECT.FLAG#'R' THEN           ; * DRF105
               HELP='Press Enter for confirmation or X-back'
               CALL GEN.IN(0,22,'Amount exceed limit. Enter Passwrd or <cr> to Send password to Wayne ******','',Z,0,6,'','',2,-6,22,0,ZI,HELP,0,23)
               IF OCONV(ZI,'MCU')='X' THEN
                  CRT @(0,22):@(-4):
                  GOTO 1800
               END
               PASS.WORD=OCONV(PRO,'MCN')
               PASS.WORD=PASS.WORD*19
               PASS.WORD=PASS.WORD[LEN(PASS.WORD)-5,6]
               IF TRIM(ZI)#'' AND ZI # PASS.WORD THEN
                  CALL ELINE('Incorrect Password.')
                  GOTO VERIFY.AMT
               END

               * Actual charge has to have a supervisor approval
               IF TRIM(ZI)='' THEN
                  MVIN=''
                  SUBJ='Actual Amount Limit exceeded for ':PRO.ID
                  FBVIN=''
                  FBVIN<1>=PROG.NAME
                  FBVIN<2>=PROG.DESC
                  FBVIN<3>=PACK.NAME
                  FBVIN<4>=CO.NAME
                  FBVIN<5>=OCONV(TIME(),'MTH'):' ':OCONV(DATE(),'D2/')
                  FBVIN<6>=CLIENT.ID
                  FBVIN<7>=CARRIER.ID
                  FBVIN<8>=PRO.ID
                  FBVOUT=''
                  CALL GET.FB.INFO(FBVIN,FBVOUT,CLIENT.ITM,CARRIER.REC,PRO.REC,F.TABLES)
                  TEXT=FBVOUT
                  TEXT<1,-1>=' '
                  TEXT<1,-1>='The PASSWORD to allow entry is: ':PASS.WORD
                  MVIN=''
                  MVIN<1>='WPardue@afs.net'
*                  MVIN<1,-1>='MMcKay@afs.net'           ; * NKH75
*                  MVIN<1,-1>='crivers@afs.net'          ; * NKH75
                  MVIN<1,-1>='dbarnes@afs.net'     ; * NKH75
                  MVIN<4>='AFS'
                  MVIN<5>=SUBJ
                  MVIN<6>=TEXT
                  CALL SENDMAIL(MVIN,MVOUT)
                  GOTO VERIFY.AMT
               END
            END
            * End NKH71

            IF USER='DAVID' THEN CALL ELINE('PRESS BREAK - AT VENDOR CHECK')
            IF CARRIER.MODE='10' AND ACTUAL.CHG > 50000 AND USER.TYPE#'A' AND CARRIER.ID#'14768' THEN
               IF FRT.FLAG OR USER='DAVID' THEN    ; * SWB07

*****************************************************************
CHECK.AMT.VERIFICATION:
*****************************************************************
                  CRT @(0,21):"[YES] I have checked the amount and it is only for freight charges!"
                  HELP="X=Change. EX=Exit. [YES]=Continue."
                  CALL GEN.IN(0,22,'Enter selection please. ---','',Q,0,3,'','',0,-3,22,1,QI,HELP,0,23)
                  QI=OCONV(QI,'MCU')
                  BEGIN CASE
                     CASE QI='X'
                        CRT @(0,21):@(-3):
                        GOTO 4900
                     CASE QI='EX'
                        GOTO PROGRAM.EXIT          ; * NKH10
                     CASE QI='YES'
                        NULL
                     CASE 1
                        CALL ELINE('Invalid entry. Must be [X], [EX], or [YES].')
                        GOTO CHECK.AMT.VERIFICATION
                  END CASE
                  CRT @(0,21):@(-3):
               END ELSE
                  CALL ELINE('Error. Please take bill Mary')
                  GOTO 4900
               END
            END
            IF CL.DIV.FLAG='Y' AND REJECT.FLAG#'R' THEN
               IF DIVISION='' THEN
                  CALL ELINE('No Division found. Please enter a Division. Update Refused')
                  GOTO 4900
               END
            END
            IF ((ORIG.ZIP='' AND CL.ORIG.FLAG='Y') OR (DEST.ZIP='' AND CL.DEST.FLAG='Y')) AND REJECT.FLAG#'R' THEN
               CALL ELINE('Orig zip is: ':ORIG.ZIP:' and dest zip is: ':DEST.ZIP:' Update refused')
               TEMP.REC = ''
               TEMP.REC<1> = BILL.DATE
               TEMP.REC<2> = IN.OUT
               TEMP.REC<3> = ORIG.ZIP
               TEMP.REC<4> = DEST.ZIP
               TEMP.REC<5> = EXP.CODE
               IF CLIENT.ID='30028' THEN           ; * JMK193
                  IF TEMP.REC<236>='' THEN         ; * JMK193
                     TEMP.REC<236>=EXP.CCTR        ; * JMK193
                  END                    ; * JMK193
                  IF TEMP.REC<237>='' THEN         ; * JMK193
                     TEMP.REC<237>=EXP.PROJ        ; * JMK193
                  END                    ; * JMK193
               END                       ; * JMK193
               TEMP.REC<6> = WEIGHT+0
               TEMP.REC<7> = CARRIER.CHG+0
               TEMP.REC<8> = ACTUAL.CHG+0
               TEMP.REC<9> = DIVISION
               TEMP.REC<10> = VAR.ARR<1>+0
               TEMP.REC<11> = VAR.ARR<2>+0
               TEMP.REC<12> = VAR.ARR<3>+0
               TEMP.REC<16> = BOL
               TEMP.REC<205> = BOL.DIST  ; * JMK84
               TEMP.REC<17> = VC.ID
               TEMP.REC<19> = MILEAGE+0
               CARRIER.MODE.WGT = CARRIER.REC<70>
               CARRIER.MODE.BY.WGT = CARRIER.REC<71>
               LOCATE WEIGHT IN CARRIER.MODE.WGT<1> BY "AR" SETTING POS ELSE NULL
               T.MODE.BY.WGT = OCONV(CARRIER.MODE.BY.WGT<1,POS>,'MCU')
               LTL.CAR=T.MODE.BY.WGT=1   ; * JMK187
               TL.CAR=T.MODE.BY.WGT=6    ; * JMK187
               AIR.CAR=T.MODE.BY.WGT=12  ; * JMK187
               TEMP.REC<21> = T.MODE.BY.WGT
               TEMP.REC<25> = ORIG.STATE
               TEMP.REC<26> = DEST.STATE
               TEMP.REC<27> = ORIG.CITY
               TEMP.REC<28> = DEST.CITY
               TEMP.REC<68> = BILL.STATUS
               MISC.CHG.POS=DCOUNT(CLASSES<1>,@VM)           ; * Find out how many
               FOR MISC.CHG.CNT=1 TO MISC.CHG.POS
                  TEMP.REC<70,MISC.CHG.CNT>='FRT'
               NEXT MISC.CHG.CNT
               IF MISC.CHG.CODES#'' THEN
                  TEMP.REC<70,MISC.CHG.POS+1>=MISC.CHG.CODES
               END
               TEMP.REC<74> = CLASSES
               TEMP.REC<119> = FLAT.RATE
               FBVIN=''
               FBVIN<1>=PROG.NAME
               FBVIN<2>=PROG.DESC
               FBVIN<3>=PACK.NAME
               FBVIN<4>=CO.NAME
               FBVIN<5>=OCONV(TIME(),'MTH'):' ':OCONV(DATE(),'D2/')
               FBVIN<6>=CLIENT.ID
               FBVIN<7>=CARRIER.ID
               FBVIN<8>=PRO.ID
               FBVOUT=''
               CALL GET.FB.INFO(FBVIN,FBVOUT,CLIENT.ITM,CARRIER.REC,TEMP.REC,F.TABLES)
               NTEXT=FBVOUT
               NTEXT<1,-1>=' '
               MVIN=''
               MVIN<1>='MMcKay@afs.net'
               MVIN<2>='david@afs.net'
               MVIN<4>='AFS'
               SUBJ=USER:' entered a bill without an orig or dest zip.'
               MVIN<5>=SUBJ
               MVIN<6>=NTEXT
               CALL SENDMAIL(MVIN,MVOUT)
               GOTO 4900
            END
            IF PRO[LEN(PRO)-1,2] = 'BD' OR PRO[LEN(PRO)-1,2] = 'AD' ELSE
               IF USER.TYPE='A' AND ACTUAL.CHG > PRO.REC<98> AND REJECT.FLAG#'R' THEN
                  CALL ELINE('Actual amt must be equal or less than the amount keyed by freight payment')
                  GOTO 4900
               END
            END
            IF PRO[LEN(PRO)-1,2] = 'BD' OR PRO[LEN(PRO)-1,2] = 'AD' THEN         ; * JMK111
               TEST.NOTE=1               ; * JMK130
               IF CARRIER.ID='00015' OR REJECT.FLAG='R' THEN           ; * JMK130 ; * JMK131
                  TEST.NOTE=0            ; * JMK130
               END                       ; * JMK130
               IF TEST.NOTE THEN         ; * JMK130
                  IF USER.TYPE='A' THEN  ; * JMK130
                     IF LEN(TRIM(FB.NOTE))<5 THEN  ; * JMK130
                        CALL ELINE('You must enter a valid reason for this bill')          ; * JMK111
                        GOTO 4900        ; * JMK111
                     END ELSE            ; * JMK111 ; * JMK130
                        FBVIN=''         ; * JMK111
                        FBVIN<1>=PROG.NAME         ; * JMK111
                        FBVIN<2>=PROG.DESC         ; * JMK111
                        FBVIN<3>=PACK.NAME         ; * JMK111
                        FBVIN<4>=CO.NAME           ; * JMK111
                        FBVIN<5>=OCONV(TIME(),'MTH'):' ':OCONV(DATE(),'D2/')     ; * JMK111
                        FBVIN<6>=CLIENT.ID         ; * JMK111
                        FBVIN<7>=CARRIER.ID        ; * JMK111
                        FBVIN<8>=PRO.ID  ; * JMK111
                        FBVOUT=''        ; * JMK111
                        CALL GET.FB.INFO(FBVIN,FBVOUT,CLIENT.ITM,CARRIER.REC,PRO.REC,F.TABLES)       ; * JMK111
                        NTEXT=FBVOUT     ; * JMK111
                        NTEXT<1,-1>=' '  ; * JMK111
                        BEGIN CASE       ; * JMK111
                           CASE PRO[LEN(PRO)-1,2]='AD'       ; * JMK111
                              NTEXT<1,-1>='AD Note :':FB.NOTE          ; * JMK111
                              SUBJ='Additional Billing Reason for pro ':PRO.ID   ; * JMK111
                           CASE PRO[LEN(PRO)-1,2]='BD'       ; * JMK111
                              NTEXT<1,-1>='BD Note :':FB.NOTE          ; * JMK111
                              SUBJ='Balance Due Billing Reason for pro ':PRO.ID  ; * JMK111
                           CASE 1        ; * JMK111
                              NTEXT<1,-1>='Note :':FB.NOTE   ; * JMK111
                              SUBJ='FB Note for pro ':PRO.ID           ; * JMK111
                        END CASE         ; * JMK111
                        MVIN=''          ; * JMK111

                        MVIN<1,-1>='WPardue@afs.net'         ; * JMK241

                        MVIN<4>='AFS'    ; * JMK111
                        MVIN<5>=SUBJ     ; * JMK111
                        MVIN<6>=NTEXT    ; * JMK111

                     END                 ; * JMK130
                  END                    ; * JMK111
               END                       ; * JMK130
            END                          ; * JMK241
            IF ACTUAL.CHG+0>300000 AND TRANS.MODE=1 THEN     ; * JMK141 GRB16
               NO.CORE.FLAG=0            ; * JMK141
               IF PRO.REC<197>#'Y' OR MISROUTE.AMOUNT+0#0 THEN         ; * JMK141
                  NVAL=DCOUNT(CLASSES,@VM)         ; * JMK141
                  FOR VAL=1 TO NVAL UNTIL NO.CORE.FLAG       ; * JMK141
                     CLS=CLASSES<1,VAL>  ; * JMK141
                     IF CLS < 100 AND ACTUAL.CHG+0>300000 THEN NO.CORE.FLAG=1    ; * JMK141 GRB16
                     IF CLS >= 100 AND ACTUAL.CHG+0>300000 THEN NO.CORE.FLAG=1   ; * JMK141 GRB16
                  NEXT VAL               ; * JMK141
                  IF NVAL=0 THEN NO.CORE.FLAG=1    ; * JMK141
                  IF (USER.TYPE='A') AND NO.CORE.FLAG AND PRO.REC<21>='1' AND CLIENT.REC(93)='Y' AND REJECT.FLAG#'R' THEN          ; * JMK141 DRF03

*****************************************************************
NO.CORE.CONFIRMATION:                    ; * JMK141
*****************************************************************
                     CRT CHAR(7)         ; * JMK141
                     HELP='Press Enter for confirmation or X-back'     ; * JMK141
                     CALL GEN.IN(0,22,'Non-core limits. Enter Passwrd or <cr> to Send password to Wayne ******','',Z,0,6,'','',2,-6,22,0,ZI,HELP,0,23)           ; * JMK141 ; * JMK238
                     IF OCONV(ZI,'MCU')='X' THEN   ; * JMK141
                        CRT @(0,22):@(-4):         ; * JMK141
                        GOTO 1800        ; * JMK141
                     END                 ; * JMK141
                     PASS.WORD=OCONV(PRO,'MCN')    ; * JMK141
                     PASS.WORD=PASS.WORD*19        ; * JMK141
                     PASS.WORD=PASS.WORD[LEN(PASS.WORD)-5,6]           ; * JMK141
                     IF TRIM(ZI)#'' AND ZI # PASS.WORD THEN  ; * JMK141
                        CALL ELINE('Incorrect Password.')    ; * JMK141
                        GOTO NO.CORE.CONFIRMATION  ; * JMK141
                     END                 ; * JMK141

                     * No Core Limits actual charge has to have a supervisor approval       ; * JMK141
                     IF TRIM(ZI)='' THEN           ; * JMK141
                        MVIN=''          ; * JMK141
                        SUBJ='Non-Core or Misroute Limit exceeded for ':PRO.ID   ; * JMK141
                        FBVIN=''         ; * JMK141
                        FBVIN<1>=PROG.NAME         ; * JMK141
                        FBVIN<2>=PROG.DESC         ; * JMK141
                        FBVIN<3>=PACK.NAME         ; * JMK141
                        FBVIN<4>=CO.NAME           ; * JMK141
                        FBVIN<5>=OCONV(TIME(),'MTH'):' ':OCONV(DATE(),'D2/')     ; * JMK141
                        FBVIN<6>=CLIENT.ID         ; * JMK141
                        FBVIN<7>=CARRIER.ID        ; * JMK141
                        FBVIN<8>=PRO.ID  ; * JMK141
                        FBVOUT=''        ; * JMK141
                        CALL GET.FB.INFO(FBVIN,FBVOUT,CLIENT.ITM,CARRIER.REC,PRO.REC,F.TABLES)       ; * JMK141
                        TEXT=FBVOUT      ; * JMK141
                        TEXT<1,-1>=' '   ; * JMK141
                        TEXT<1,-1>='The PASSWORD to allow entry is: ':PASS.WORD  ; * JMK141
                        MVIN=''          ; * JMK141
                        MVIN<1>='WPardue@afs.net'
                        MVIN<1,-1>='MMcKay@afs.net'          ; * DRF068
                        MVIN<1,-1>='crivers@afs.net'         ; * NKH53
                        MVIN<4>='AFS'    ; * JMK141
                        MVIN<5>=SUBJ     ; * JMK141
                        MVIN<6>=TEXT     ; * JMK141
                        CALL SENDMAIL(MVIN,MVOUT)  ; * JMK141
                        GOTO NO.CORE.CONFIRMATION  ; * JMK146
                     END                 ; * JMK141
                  END                    ; * JMK141
               END                       ; * JMK141
            END                          ; * JMK141
            * Begin GRB007
            IF ACTUAL.CHG+0>100000 AND TRANS.MODE=1 THEN
               IF CLIENT.REC(147) = 89997 THEN
                  MVIN=''
                  SUBJ='AirGas invoice over $1000 Limit ':PRO.ID
                  FBVIN=''
                  FBVIN<1>=PROG.NAME
                  FBVIN<2>=PROG.DESC
                  FBVIN<3>=PACK.NAME
                  FBVIN<4>=CO.NAME
                  FBVIN<5>=OCONV(TIME(),'MTH'):' ':OCONV(DATE(),'D2/')
                  FBVIN<6>=CLIENT.ID
                  FBVIN<7>=CARRIER.ID
                  FBVIN<8>=PRO.ID
                  FBVOUT=''
                  CALL GET.FB.INFO(FBVIN,FBVOUT,CLIENT.ITM,CARRIER.REC,PRO.REC,F.TABLES)
                  TEXT=FBVOUT
                  TEXT<1,-1>=' '
                  ****                        TEXT<1,-1>='The PASSWORD to allow entry is: ':PASS.WORD
                  MVIN=''
                  MVIN<1>='WPardue@afs.net'
                  MVIN<4>='AFS'
                  MVIN<5>=SUBJ
                  MVIN<6>=TEXT
                  ******      CALL SENDMAIL(MVIN,MVOUT)
               END
            END
            * End GRB007
            IF CL.EXP.FLAG='Y' AND REJECT.FLAG#'R' THEN
               IF EXP.CODE='' THEN
                  CALL ELINE('No Expense Code found. Please enter a Expense Code. Update Refused')
                  GOTO 4900
               END
            END
         CASE QI = 'D' AND USER.TYPE='A'
            CVIN=''
            CVIN<3> = DTL.CHRG.CODES
            CVIN<4> = DTL.CHRG.AMTS
            CVIN<6> = WEIGHT
            CVIN<7> = CARRIER.ID
            CVIN<8> = CARRIER.NAME
            ORIG = ORIG.ZIP:' ':ORIG.CITY:', ': ORIG.STATE
            CVIN<9> = ORIG
            DEST = DEST.ZIP:' ':DEST.CITY:', ': DEST.STATE
            CVIN<10> = DEST
            CVIN<11> = ACTUAL.CHG
            CVIN<12> = CC
            CVIN<13>='E'
            CVIN<14> = USER
            CVIN<15> = MISC.REASON       ; * JMK157
            CVOUT=''
            IF USER = 'GBINO' THEN DEBUG
            CALL FB.2.1.TL.FREIGHT(CVIN,CVOUT,LI.CODES,QI)
            CC+=VOUT<1> ; GOSUB PRINT.CC
            IF CVOUT # '' THEN
               DTL.CHRG.CODES = CVOUT<3>
               DTL.CHRG.AMTS = CVOUT<4>
               MISC.REASON = CVOUT<6>    ; * JMK157
            END
            GOSUB RECALC.FB.DETAILS
            GOSUB 8100                   ; * NPR024
            GOSUB 8200                   ; * NPR024
            GOTO 4900
            *         CASE QI = 'MR' AND SESSION.UPDATE.FB.TIMELINE       ; * SWB08    NKH06
            *            GOSUB GET.MAIL.ROOM.DATE     ; * SWB08                        NKH06
            *            GOTO 4900                    ; * SWB08                        NKH06
         CASE 1
            CALL ELINE('Invalid entry. Please try again.')
            GOTO 4900
      END CASE
      IF (CL.VAR.FLAG='Y' AND REJECT.FLAG#'R') OR (CL.VAR.FLAG='A' AND REJECT.FLAG#'R') THEN
         VAR.TIMES=DCOUNT(VAR.REC<2>,@VM)
         TOT.LOG.AMT=0
         FOR VAR.CNT=1 TO VAR.TIMES
            TOT.LOG.AMT+=VAR.REC<2,VAR.CNT>
         NEXT VAR.CNT
         IF SU.FLAG=1 AND DBCTRL<15>='AC' ELSE
            IF ((CL.VEND.FLAG = 'Y' AND IN.OUT='I') OR (CL.CUST.FLAG = 'Y' AND IN.OUT='O')) AND VC.ID='' AND VERSION=0 THEN
               SUBJ='-s"Blank Vendor Customer"'
               TEXT=USER:' ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
               TEXT<-1>=CLIENT.ID:' ':CLIENT.NAME
               TEXT<-1>='PRO ID: ':PRO.ID
               TEXT<-1>='Vendor Customer ID is Blank'
               TEXT<-1>='Update to File Refused!'
               TEXT<-1>='User returned to Customer Vendor Routine'

               CALL ELINE('Vendor Customer is blank! Update Refused! Renter/Update Customer Vendor!')
               CC+=1 ; GOSUB PRINT.CC
               GOTO 1400
            END
         END
         IF TOT.LOG.AMT+0 # VAR.ARR<3>+0 THEN
            IF VAR.ARR<3>+0=0 THEN
               VAR.REC=''                ; * Set All Logistics Variance Info to ''
            END ELSE
               SUBJ='-s"Logistics Distribution Error"'
               TEXT=USER:' ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
               TEXT<-1>=CLIENT.ID:' ':CLIENT.NAME
               TEXT<-1>='PRO ID: ':PRO.ID
               TEXT<-1>='Logistics Variance <12> is ':VAR.ARR<3>'R26,'
               TEXT<-1>='Logistics Distribution <52> is ':TOT.LOG.AMT'R26,'
               TEXT<-1>='Update to File Refused!'

               CALL ELINE('Logistics Variance Distribution Error! Update Refused! Renter/Update Bill')
               CC+=1 ; GOSUB PRINT.CC
               GOTO PROGRAM.EXIT         ; * NKH10
            END
         END
      END
      IF CHECK.EXP.CODES AND REJECT.FLAG#'R' THEN
         EXP.TIMES=DCOUNT(DTAB<3>,@VM)
         TOT.EXP.AMT=0
         NO.CODE=0
         FOR EXP.CNT=1 TO EXP.TIMES
            TOT.EXP.AMT+=DTAB<3,EXP.CNT>
            IF DTAB<1,EXP.CNT>='' THEN NO.CODE=1
         NEXT EXP.CNT
         IF CLIENT.ID='00574' AND IN.OUT='O' THEN
            IF DTAB<1,EXP.TIMES>#EXP.CODE THEN NO.CODE=1
         END ELSE
            IF CLIENT.ID='30028' THEN    ; * JMK193
               IF FIELD(DTAB<1,1>,'.',1)#EXP.CODE THEN NO.CODE=1       ; * Force Error ; * JMK193
            END ELSE                     ; * JMK193
               IF DTAB<1,1>#EXP.CODE THEN NO.CODE=1          ; * Force Error
            END                          ; * JMK193
         END
         IF TOT.EXP.AMT+0 # ACTUAL.CHG+0 OR NO.CODE THEN
            MVIN=''
            SUBJ='Expense Distribution Error'
            TEXT=USER:' ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
            TEXT<1,-1>=CLIENT.ID:' ':CLIENT.NAME
            TEXT<1,-1>='PRO ID: ':PRO.ID
            TEXT<1,-1>='Expense Variance <33> is ':TOT.EXP.AMT'R26,'
            TEXT<1,-1>='Actual Bill Charge <8> is ':ACTUAL.CHG'R26,'
            IF NO.CODE THEN TEXT<1,-1>='MV Expense Code missing <31>'
            TEXT<1,-1>='Update to File Refused!'
            TEXT<1,-1>='User returned to Expense Code Prompt'
            TEXT<1,-1>='Expense Distribution Reset to <5> & <8>'
            TEXT<1,-1>=EXP.CODE
            TEXT<1,-1>=DTAB<1>
            MVIN=''
            MVIN<1>='David@afs.net'
            MVIN<4>='AFS'
            MVIN<5>=SUBJ
            MVIN<6>=TEXT
            CALL SENDMAIL(MVIN,MVOUT)
            SUBJ='-s"Expense Distribution Error"'
            TEXT=USER:' ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
            TEXT<-1>=CLIENT.ID:' ':CLIENT.NAME
            TEXT<-1>='PRO ID: ':PRO.ID
            TEXT<-1>='Expense Variance <33> is ':TOT.EXP.AMT'R26,'
            TEXT<-1>='Actual Bill Charge <8> is ':ACTUAL.CHG'R26,'
            IF NO.CODE THEN TEXT<-1>='MV Expense Code missing <31>'
            TEXT<-1>='Update to File Refused!'
            TEXT<-1>='User returned to Expense Code Prompt'
            TEXT<-1>='Expense Distribution Reset to <5> & <8>'
            CALL ELINE('Expense Distribution Error! You will be sent to Expense Code Entry!')
            CC+=1 ; GOSUB PRINT.CC
            DTAB=EXP.CODE ; DTAB<3>=ACTUAL.CHG
            GOTO 1295                    ; * Expense Code Entry
         END
      END
      IF REJECT.FLAG#'R' THEN
         ADD.ATT=0
         IF ACTUAL.CHG-CARRIER.CHG+VAR.ARR<1+ADD.ATT>+VAR.ARR<2+ADD.ATT>+VAR.ARR<3+ADD.ATT> # 0 THEN
            SUBJ='-s"Variance Error"'
            TEXT=USER:' ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
            TEXT<-1>=CLIENT.ID:' ':CLIENT.NAME
            TEXT<-1>='PRO ID: ':PRO.ID
            TEXT<-1>='Actual Charge <8> is ':ACTUAL.CHG'R26,'
            TEXT<-1>='Carrier Charge <7> is ':CARRIER.CHG'R26,'
            TEXT<-1>='Discount Variance <10> is ':VAR.ARR<1+ADD.ATT>'R26,'
            TEXT<-1>='Overcharge Variance <11> is ':VAR.ARR<2+ADD.ATT>'R26,'
            TEXT<-1>='Logistics Variance <12> is ':VAR.ARR<3+ADD.ATT>'R26,'
            TEXT<-1>='Difference is ':(ACTUAL.CHG-CARRIER.CHG+VAR.ARR<1+ADD.ATT>+VAR.ARR<2+ADD.ATT>+VAR.ARR<3+ADD.ATT>)'R26,'
            TEXT<-1>='Update to File Refused!'

            CALL ELINE('Difference between carrier and actual charges do not match variance. No Update')
            CC+=1 ; GOSUB PRINT.CC
            GOTO 4900
         END

         IF CARRIER.CHG-ACTUAL.CHG > 9999999 AND PRO.ID#'00601*087-1351935*0' THEN         ; * DRF019 GRB004

*****************************************************************
997389013:
*****************************************************************
            SUBJ='-s"Variance Error"'
            TEXT=USER:' ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
            TEXT<-1>=CLIENT.ID:' ':CLIENT.NAME
            TEXT<-1>='PRO ID: ':PRO.ID
            TEXT<-1>='Actual Charge <8> is ':ACTUAL.CHG'R26,'
            TEXT<-1>='Carrier Charge <7> is ':CARRIER.CHG'R26,'
            TEXT<-1>='Discount Variance <10> is ':VAR.ARR<1+ADD.ATT>'R26,'
            TEXT<-1>='Overcharge Variance <11> is ':VAR.ARR<2+ADD.ATT>'R26,'
            TEXT<-1>='Logistics Variance <12> is ':VAR.ARR<3+ADD.ATT>'R26,'
            TEXT<-1>='The variance is greater than 9999.99'
            TEXT<-1>='Update to File Refused!'
            CALL ELINE('The variance is greater than 99999.99. No Update')       ; * GRB004
            CC+=1 ; GOSUB PRINT.CC
            GOTO 4900
         END
      END

      IF PRO.ID#'00041*703-5E8111205-I*0' AND PRO.ID#'00041*R60-4V2111205-O*0' AND PRO.ID#'00041*V94-711111205-O*0' AND PRO.ID#'00041*W3Y-101111205-O*0' AND PRO.ID#'00500*063078877*0' AND PRO.ID#'00124*1760041063*0' AND PRO.ID#'00748*10015809ADBD*0' AND PRO.ID#'15435*ORD617321*0' AND PRO.ID#'15435*ORD617699*0' THEN
         IF ACTUAL.CHG#0 AND PRO[LEN(PRO)-1,2]#'AD' THEN
            IF VAR.ARR<3>+0 > 5*ACTUAL.CHG THEN
               IF (USER.TYPE='A') OR (USER.TYPE#'A' AND BILL.STATUS='1') THEN

*****************************************************************
FIVE.TIMES.CONFIRMATION:
*****************************************************************
                  CRT CHAR(7)
                  HELP='Press Enter for confirmation or X-back'
                  CALL GEN.IN(0,22,'Log. amt exceeds lmt. Enter Passwrd, <cr> to Send passwrd to Aud Mgr ******','',Z,0,6,'','',2,-6,22,0,ZI,HELP,0,23)
                  IF OCONV(ZI,'MCU')='X' THEN
                     CRT @(0,22):@(-4):
                     GOTO 1800
                  END
                  PASS.WORD=OCONV(PRO,'MCN')
                  PASS.WORD=PASS.WORD*19
                  PASS.WORD=PASS.WORD[LEN(PASS.WORD)-5,6]
                  IF TRIM(ZI)#'' AND ZI # PASS.WORD THEN
                     CALL ELINE('Incorrect Password.')
                     GOTO FIVE.TIMES.CONFIRMATION
                  END
                  * 5 Times actual charge has to have a supervisor approval
                  IF TRIM(ZI)='' THEN
                     MVIN=''
                     SUBJ='Logistics is 5 times the actual charge was attempted'
                     TEXT=USER:' attempted to enter a bill with a logistic amount more '
                     TEXT<1,-1>='than 5 times the freight amount'
                     TEXT<1,-1>=' '
                     TEXT<1,-1>='The PASSWORD to allow entry is: ':PASS.WORD
                     TEXT<1,-1>=' '
                     FBVIN=''
                     FBVIN<1>=PROG.NAME
                     FBVIN<2>=PROG.DESC
                     FBVIN<3>=PACK.NAME
                     FBVIN<4>=CO.NAME
                     FBVIN<5>=OCONV(TIME(),'MTH'):' ':OCONV(DATE(),'D2/')
                     FBVIN<6>=CLIENT.ID
                     FBVIN<7>=CARRIER.ID
                     FBVIN<8>=PRO.ID
                     FBVOUT=''
                     CALL GET.FB.INFO(FBVIN,FBVOUT,CLIENT.ITM,CARRIER.REC,PRO.REC,F.TABLES)
                     TEXT<1,-1>=FBVOUT
                     MVIN=''
                     MVIN<1>='WPardue@afs.net'
                     MVIN<1,-1>='david@afs.net'
                     MVIN<1,-1>='dbarnes@afs.net'  ; * GRB19
                     MVIN<4>='AFS'
                     MVIN<5>=SUBJ
                     MVIN<6>=TEXT
                     CALL SENDMAIL(MVIN,MVOUT)
                     GOTO 300
                  END

*****************************************************************
FIVE.TIMES.PASSWORD:
*****************************************************************
               END
            END
         END ELSE
            IF PRO.ID#'00041*703-5E8111205-I*0' AND PRO.ID#'00041*R60-4V2111205-O*0' AND PRO.ID#'00041*V94-711111205-O*0' AND PRO.ID#'00041*W3Y-101111205-O*0' AND PRO.ID#'10027*32385770AD*0' AND PRO.ID#'10027*32385760AD*0' AND PRO.ID#'00939*32395090AD*0' THEN
               IF VAR.ARR<3>+0 > 499999 THEN
                  CALL ELINE('ERROR - The Consulting cannot be over a certain limited see your supervisor')
                  GOTO 4900
               END
            END
         END
      END
                                         ; * IF CLIENT.ID='00891' AND CARRIER.ID='03029'
      IF CLIENT.ID='01088' AND CARRIER.ID='00807' AND REJECT.FLAG#'R' AND VERSION=0 AND USER#'MYRA' THEN       ; * JMK103
         IF PRO.ID # '00807*0097019-0097019*0' THEN
            *          Hi-Lo Industries and JB Hunt Trucking "Milk Run"
            LOOKUP.DATE=DATE()           ; * Use Today as a lookup date ; * JMK103
            LOCATE LOOKUP.DATE IN CLIENT.REC(84)<1> BY 'AR' SETTING POS ELSE POS=POS-1     ; * JMK103
            IF POS=0 THEN POS=1          ; * JMK103
            CONS.PERC=CLIENT.REC(85)<1,POS>/100    ; * JMK103
            NEGO.PERC="20"               ; * AFS's Portion of Actual Charges is 2.0% ; * JMK103
            CONS.AMT=(NEGO.PERC*ACTUAL.CHG)/(CONS.PERC*10)   ; * JMK103
            CONS.AMT=CONS.AMT'R0'        ; * JMK103
            VAR.COMP=CONS.AMT            ; * JMK103
            VAR.ENTERED=VAR.ARR<3>+0     ; * JMK103
            IF VAR.ENTERED # VAR.COMP AND INDEX(PRO.ID,'BD',1) LT 1 THEN         ; * JMK103
               * Consulting variance after applying AFS portion must equal NEGO.PERC of Actual Charge
               CALL ELINE('Error! Consulting is not correct. Exit program and re-enter bill.')       ; * JMK103
               CC+=1 ; GOSUB PRINT.CC    ; * JMK103
               LINE.OUT=''               ; * JMK103
               LINE.OUT<1,10>=123        ; * JMK103
               TEMP.ID=USER:"*":DATE():"*":TIME()  ; * JMK103
               MVIN=''                   ; * JMK103
               SUBJ='Hi-Lo Industries and JB Hunt was attempted to be updated with an incorrect consulting amount'       ; * JMK103
               TEXT=USER:' attempted to update a bill with the consulting '      ; * JMK103
               TEXT<1,-1>='amount of ':VAR.ENTERED'R26':' and the computer computed the amount'      ; * JMK103
               TEXT<1,-1>='as ':VAR.COMP'R26'      ; * JMK103
               TEXT<1,-1>='on ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')   ; * JMK103
               TEXT<1,-1>='Client ':CLIENT.ID:' Carrier ':CARRIER.ID:' Pro ':PRO.ID        ; * JMK103
               MVIN=''                   ; * JMK103
               MVIN<1>='David@afs.net'   ; * JMK103
               MVIN<2>='SMatthews@afs.net'
               MVIN<4>='AFS'             ; * JMK103
               MVIN<5>=SUBJ              ; * JMK103
               MVIN<6>=TEXT              ; * JMK103
               CALL SENDMAIL(MVIN,MVOUT)           ; * JMK103
               GOTO 4900                 ; * Update Y/N Question ; * JMK103
            END                          ; * JMK103
         END
      END                                ; * JMK103
      IF CLIENT.ID = "00882" OR CLIENT.ID = "00923" OR CLIENT.ID = "00943" OR CLIENT.ID = "01025" THEN
         IF CARRIER.ID = "00050" OR CARRIER.ID = "00212" OR CARRIER.ID = "00004" OR CARRIER.ID = "00114" THEN
            IF WEIGHT GE "700" THEN
               IF VAR.ARR<3> GT "3670" THEN
                  * Logistics cap of 36.70 for Dealers (00882, 00923, and 00943) on or after 4/23/01 with
                  * weight for 700 or more for carriers (AAA Cooper, Amverican, or Consolidated Frieghtways)
                  CALL ELINE('Error! Logistics cap of 36.70 on these bills')
                  CC+=1 ; GOSUB PRINT.CC
                  LINE.OUT=''
                  LINE.OUT<1,10>=123
                  TEMP.ID=USER:"*":DATE():"*":TIME()
                  MVIN=''
                  SUBJ='Logistics cap of 36.70'
                  TEXT=USER:' attempted to update a bill with a logistics '
                  TEXT<1,-1>='amount of ':VAR.ARR<3>'R26#8'
                  TEXT<1,-1>='on ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
                  TEXT<1,-1>='Client ':CLIENT.ID:' Carrier ':CARRIER.ID:' Pro ':PRO.ID
                  MVIN=''
                  MVIN<1>='SMatthews@afs.net':@VM:'David@afs.net'
                  MVIN<2>='MMcKay@afs.net'
                  MVIN<4>='AFS'
                  MVIN<5>=SUBJ
                  MVIN<6>=TEXT
                  CALL SENDMAIL(MVIN,MVOUT)
                  GOTO 4900              ; * Update Y/N Question
               END
            END
         END
      END                                ; * IF CLIENT.ID = "00882" OR CLIENT.ID = "00923" OR CLIENT.ID = "00943" OR CLIENT.ID = "01025"
      IF REJECT.FLAG='R' THEN
         IF REJ.TYPE='' THEN
            CALL ELINE('Please go back and enter this bill as Eventually Pay or Never Pay.')
            GOTO 4900
         END
      END
      IF REJ.TYPE#'' AND OLD.PRO.REC<37>='' THEN   ; * JMK118 ; * JMK125
         NEED.REASON=0                   ; * JMK118
         IF TRIM(REJECT.REASONS<1>)#'' THEN NEED.REASON=1    ; * JMK118
         IF TRIM(REJECT.REASONS<2>)#'' THEN NEED.REASON=1    ; * JMK118
         IF TRIM(REJECT.REASONS<3>)#'' THEN NEED.REASON=1    ; * JMK118
         IF TRIM(REJECT.REASONS<4>)#'' THEN NEED.REASON=1    ; * JMK118
         IF NEED.REASON=0 THEN           ; * JMK118
            CALL ELINE('Please go back and enter accompanying rejection reason for this bill.')      ; * JMK118
            GOTO 4900                    ; * JMK118
         END                             ; * JMK118
      END                                ; * JMK118
      IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN
         IF ACTUAL.CHG LE ADDRESS.CORRECTION.CHARGE AND ADDRESS.CORRECTION.CHARGE GT 0 THEN
            CALL ELINE('Actual Charge must be greater than UPS Address Correction Charge. Check both.')
            GOTO 4900                    ; * Update Y/N Question
         END
      END
      IF CLIENT.ID='00949-AMERIMAX IS MOVING THEIR OWN LOADS FROM HELENA 10-20-04' AND NOT(REJECT.FLAG) THEN
         IF BILL.DATE GE '13189' AND TL.CAR AND INDEX(OCONV(ORIG.CITY,'MCU'),'HELENA',1) AND CARRIER.ID#'00642' AND CARRIER.ID#'23288' THEN
                                         ; * Per JC TL does not use CH Robinson
            IF CARRIER.ID # '10313' THEN           ; * Per JC TL does not use CH Robinson
               CALL ELINE('Cannot update a truckload bill from Helena after 2/9/04. - See Owen')
               GOTO 4900
            END

         END
      END
      IF 0 THEN
         IF IN.OUT='I' THEN
            IF BOL MATCH "'000'4N" ELSE
               CALL ELINE('Client 01009 must have a P O number that matches 000NNNN in order to update')
               GOTO 4900
            END
         END
      END
      IF (CLIENT.ID = '00924' OR CLIENT.ID = '01228') AND NOT(REJECT.FLAG) THEN
         UP.VC.DESC=OCONV(VC.DESC,'MCU')
         IF UP.VC.DESC[1,4]='FTPC' OR UP.VC.DESC[1,9]='FLEETRITE' OR UP.VC.DESC[1,7]='F T P C' THEN
            CALL ELINE('Cannot update a bill with a customer/vendor of Fleetrite or FTPC')
            GOTO 4900
         END
      END
      IF CHANGE.FLAG AND SU.FLAG THEN

*****************************************************************
5000:
*****************************************************************
         HELP="[A]djust Bill [X]=Back [EX]it"      ; * SWB08
         CALL GEN.IN(0,22,'Adjust bill - ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC
         QI = OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI = 'EX'
               GOTO PROGRAM.EXIT         ; * NKH10
            CASE QI = 'X'
               GOTO 4900

            CASE QI = 'A'                ; * SWB08
               POST.YTD=QI
               GOSUB WRITE.PRO.INFO
               ADJUST.HIST.ID=CLIENT.ID:'*':PRO.ID:'*':T.DATE:'*':T.TIME:'*OLD'
               WRITE OLD.PRO.REC ON F.ADJUST.HIST,ADJUST.HIST.ID
               ADJUST.HIST.ID=CLIENT.ID:'*':PRO.ID:'*':T.DATE:'*':T.TIME:'*NEW'
               GOSUB LOCK.RECORD.UPDATE  ; * NKH60
               WRITE PRO.REC ON F.ADJUST.HIST,ADJUST.HIST.ID
               ADJUST.VIN=POST.YTD
               ADJUST.VIN<2>=PRO.ID
               ADJUST.VIN<3>=CLIENT.ID
               IF USER='DAVID' THEN CALL ELINE('GOING INTO ADJUST')
               CALL FB.ADJUST(ADJUST.VIN,ADJUST.VOUT,MAT CLIENT.REC,OLD.PRO.REC,PRO.REC)
            CASE 1
               CALL ELINE('Invalid entry. Please try again.')
               GOTO 5000
         END CASE
      END ELSE
         * Write the Bill information
         CHECK.BOL.SRC=1                 ; * SWB03
         BEGIN CASE
            CASE VERSION # 0
               CHECK.BOL.SRC=0
            CASE CARRIER.MODE # 1 AND CARRIER.MODE # 6
               CHECK.BOL.SRC=0
            CASE USER.TYPE='A'
               CHECK.BOL.SRC=0
            CASE REJECT.FLAG='R'         ; * SWB04
               CHECK.BOL.SRC=0           ; * SWB04
            CASE CHANGE.FLAG AND BOL.SRC # ''
               *The user is making changes to a Freight Bill. BOL.SRC was set during
               *the creation of the Freight Bill but reset it to null and check it
               *again.
               BOL.SRC=''
               TEMP.BOL.LIST=PRO.REC<16>
               IF PRO.REC<240>#'' THEN
                  LOCATE PRO.REC<240> IN TEMP.BOL.LIST<1> SETTING T.BL.POS ELSE  ; * SWB02
                     TEMP.BOL.LIST=INSERT(TEMP.BOL.LIST,1,1,0,PRO.REC<240>)      ; * SWB02
                  END                    ; * SWB02
               END
            CASE BOL.SRC # ''
               CHECK.BOL.SRC=0
            CASE 1
               *BOL.SRC is null and we want to determine what it should be.
               TEMP.BOL.LIST=BOL         ; * SWB03
               LOCATE ID.BOL.CRX IN TEMP.BOL.LIST<1> SETTING T.BL.POS ELSE       ; * SWB03
                  TEMP.BOL.LIST=INSERT(TEMP.BOL.LIST,1,1,0,ID.BOL.CRX)           ; * SWB03
               END                       ; * SWB03
         END CASE
         IF CHECK.BOL.SRC THEN           ; * SWB03
            SRC.VOUT=''                  ; * SWB01
            TEMP.BOL.OPEN=BOL.OPEN       ; * SWB02
            IF NOT(TEMP.BOL.OPEN) THEN   ; * SWB02
               OPEN '','FB.BOL.CRX,':CLIENT.ID TO F.BOL.CRX THEN       ; * SWB02
                  *SRC.VOUT has been set to null. We can't open FB.BOL.CRX for the CLIENT
                  *so skip the subroutine and the user will get asked whether they have
                  *a paper bol
                  TEMP.BOL.OPEN=1
               END                       ; * SWB02
            END                          ; * SWB02
            IF TEMP.BOL.OPEN THEN
               CALL FB.BOL.SRC.SUB(TEMP.BOL.LIST, F.BOL.CRX, SRC.VOUT)           ; * SWB02
            END
            BOL.SRC=SRC.VOUT<1>          ; * SWB02
            BOL.SRC.DESC=''              ; * SWB02
            IF BOL.SRC # '' THEN         ; * SWB02
               READ BOL.SRC.INFO FROM F.TABLES, 'BOL.SRC*':BOL.SRC ELSE BOL.SRC.INFO=''    ; * SWB02
               BOL.SRC.DESC=BOL.SRC.INFO<2>        ; * SWB02
            END ELSE                     ; * JMK251
               *           IF OLD.PRO.REC<240> NE "" THEN          ; * SWB02 ; * JMK251
               IF OLD.PRO.REC<240> NE "" OR ID.BOL.CRX NE "" THEN      ; * SWB02 ; * JMK251
                  BOL.SRC.DESC='AFS-BOL'           ; * SWB02
               END                       ; * SWB02
            END                          ; * JMK251
            IF BOL.SRC.DESC # '' THEN    ; * SWB02
               CRT @(69,0): STR('-',11)  ; * SWB02
               CRT @(69,0): REV.ON : BOL.SRC.DESC : REV.OFF  ; * SWB02
            END                          ; * SWB02

*****************************************************************
VERIFY.NO.BOL:
*****************************************************************
            IF BOL.SRC='' THEN           ; * SWB02
               HELP="BOL not found. Do you have a Paper BOL?   X=Change. EX=Exit. [0]=No. [1]=Yes."  ; * SWB04
               CALL GEN.IN(0,22,'Enter selection please. ---','',Q,0,3,'','',0,-3,22,1,QI,HELP,0,23)           ; * SWB02
               QI=OCONV(QI,'MCU')        ; * SWB02
               BEGIN CASE                ; * SWB02
                  CASE QI='X'            ; * SWB02
                     CRT @(0,21):@(-3):  ; * SWB02
                     GOTO PROMPT.FOR.UPDATE        ; * SWB02
                  CASE QI='EX'           ; * SWB02
                     GOTO PROGRAM.EXIT   ; * NKH10                ; * SWB02
                  CASE QI=1              ; * SWB02
                     BOL.SRC=3           ; * SWB02
                  CASE QI=0              ; * SWB02
                     BOL.SRC=4           ; * SWB02
                  CASE 1                 ; * SWB02
                     CALL ELINE('Invalid entry. Must be [X], [EX], [0]=No, or [1]=Yes.')   ; * SWB02
                     GOTO VERIFY.NO.BOL  ; * SWB02
               END CASE                  ; * SWB02
               CRT @(0,21):@(-3):        ; * SWB02
            END                          ; * SWB02
         END                             ; * SWB03
         GOSUB WRITE.PRO.INFO
         * Begin NKH04
         IF SAVE.OCR.ENTRY THEN OCR.ENTRY = 1
         IF OCR.ENTRY THEN
            IF DBCTRL<14> = "A" THEN LOCK.IMAGE = 0
            IF NOT(LOCK.IMAGE) THEN OCR.ITEM=OCR.ITEM+1
            OCR.INC = OCR.INC:' | OCR INC 6'       ; * NKH24
            IF OCR.ITEM > ARRAY.COUNT THEN
               CALL ELINE('You have entered all of the OCR for this client')
               *               GOTO 100
            END
         END
         * End NKH04
         *
         * Handle Multiple Pros from Reject System
         *
         * (We use the above gosub to write the first
         *  values for the orginal bill. This handles the
         *  AD,BD, and VERSION differences from the Multiple
         *  rejects.  We will save the current values and restore
         *  them once we have written all of the other multiple bills)
         *
         IF NUM.MULTI.PROS > 1 THEN
            * Save current values
            T.PRO.REC = PRO.REC
            T.PRO.ID = PRO.ID
            T.ACTUAL.CHG = ACTUAL.CHG
            T.BILL.DATE = BILL.DATE
            T.VERSION = VERSION
            T.REJ.TYPE = REJ.TYPE
            * Write the Multiple Reject Bills
            * (Loop from 2 to number of multiples, the first
            * one was already written and is only a placeholder)
            FOR TX = 2 TO NUM.MULTI.PROS
               PRO.ID = CARRIER.ID:'*':MULTI.PRO.ID<1,TX>:'*':'0'
               CARRIER.CHG = MULTI.PRO.CHG<1,TX>
               ACTUAL.CHG = MULTI.PRO.CHG<1,TX>
               BILL.DATE = MULTI.PRO.DATE<1,TX>
               REJ.TYPE = MULTI.PRO.REJ<1,TX>
               VERSION=0
               * Construct Perform the Write
               GOSUB WRITE.PRO.INFO
            NEXT TX
            * Restore OLD values
            PRO.REC = T.PRO.REC
            PRO.ID = T.PRO.ID
            *           CARRIER.CHG = T.CARRIER.CHG
            ACTUAL.CHG = T.ACTUAL.CHG
            BILL.DATE = T.BILL.DATE
            VERSION = T.VERSION
            REJ.TYPE = T.REJ.TYPE
         END
      END
      IF END.FLAG='Y' THEN
         GOTO PROGRAM.EXIT               ; * NKH10
      END
      M.BOL.REC = ''                     ; *NPR028
      AFS.BOL=0                          ; * JAD02
      ID.BOL.CRX = ''                    ; *NPR028
      ID.BOL.CRX2 = ''                   ; *NPR028
      BOL.POP.VER.ARR = ''               ; *NPR777
      CHANGE.FLAG = 0                    ; * At line 300, this will clear all vars
      GOSUB 8100                         ; * Display screen
      * Begin NKH04
      IF OCR.ENTRY AND DBCTRL<14> = "A" THEN
         IF OCR.ITEM > ARRAY.COUNT THEN
            T.ARRAY = ""
            ARRAY.COUNT = 0
            GOTO 100
         END ELSE
            GOTO 300                     ; * ENTER PRO
         END
      END
      GOTO 300
      *      GOTO 4900                          ; * UPDATE ACTION
      * End NKH04

*****************************************************************
WRITE.PRO.INFO:
*****************************************************************
      * Begin NKH04
      IF OCR.ENTRY THEN
         SAVE.OK = 1
         IF IMAGE = "" AND N.IMAGE # "" THEN
            IMAGE = N.IMAGE
         END
         * Begin NKH37
         IF AD.BD.FLAG THEN
            LOCK.IMAGE = 0
            CHANGE.PRO = 0
            OCR.ENTRY = 1
            OCR.ITEM += 1
            IMAGE = N.IMAGE
         END
         * End NKH37
         IF CLIENT.REC(70)<1,16> = "Y" AND IMAGE = '' THEN
            BEGIN CASE
               CASE CHANGE.FLAG
               CASE OLD.PRO.REC<88> = '' OR OLD.PRO.REC<53>[1,5] # 'EBILL'
                  SAVE.OK = 0
            END CASE
         END
         IF NOT(SAVE.OK) THEN
            CALL ELINE('You must first enter OCR as the carrier to save a bill for an OCR client')
            GOTO 200
         END
      END
      * End NKH04
      PRO.REC<288> = 'WRITE 2'           ; * NKH LOGGING
      PRO.REC<289> = IMAGE.NUMBER        ; * NKH LOGGING
      T.DATE=DATE()                      ; * NPR06
      T.TIME=TIME()                      ; * NPR06
      PRO.REC = ''
      IF OLD.PRO.REC<295> > "" THEN      ; * NKH82
         PRO.REC<295> = OLD.PRO.REC<295>           ; * NKH82
         PRO.REC<296> = OLD.PRO.REC<296>           ; * NKH82
      END                                ; * NKH82
      IF OLD.PRO.REC<297> # "" THEN
         PRO.REC<297>=OLD.PRO.REC<297>
      END
      IF OLD.PRO.REC<298> # "" THEN
         PRO.REC<298>=OLD.PRO.REC<298>
      END
      IF COVERAGE.CERT.NUM#'' AND COVERAGE.CERT.NUM[1,3]#'WIS' THEN    ; * DRF102
         PRO.REC<297>=COVERAGE.CERT.NUM  ; * DRF102
         PRO.REC<298>=COVERAGE.AMOUNT    ; * DRF102
      END                                ; * DRF102
      IF OLD.PRO.REC<39>='R' AND REJECT.FLAG#'R' ELSE
         PRO.REC<53>=OLD.PRO.REC<53>
         PRO.REC<54>=OLD.PRO.REC<54>
         PRO.REC<98>=OLD.PRO.REC<98>
      END
      PRO.REC<1> = BILL.DATE
      PRO.REC<2> = IN.OUT
      IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN     ; * United Parcel Service
         PRO.REC<3>='99999'
         PRO.REC<4>='99999'
      END ELSE
         PRO.REC<3>=ORIG.ZIP
         PRO.REC<4>=DEST.ZIP
      END
      PRO.REC<5> = EXP.CODE
      PRO.REC<6> = WEIGHT
      PRO.REC<7> = CARRIER.CHG
      PRO.REC<8> = ACTUAL.CHG
      PRO.REC<9> = DIVISION
      PRO.REC<10> = 0-VAR.ARR<1>
      PRO.REC<11> = 0-VAR.ARR<2>
      PRO.REC<12> = 0-VAR.ARR<3>
      PRO.REC<13> = CHECK.AMT
      PRO.REC<14> = CHECK.NUM
      PRO.REC<15> = CHECK.DATE
      IF CL.BANK = 'V' OR CL.BANK='N' THEN
         PRO.REC<13>=OLD.PRO.REC<13>
         PRO.REC<14>=OLD.PRO.REC<14>
         PRO.REC<15>=OLD.PRO.REC<15>
      END
      PRO.REC<16> = BOL
      IF CLIENT.ID='02192' THEN
         PRO.REC<16>=CHANGE(PRO.REC<16>,","," ")
      END
      IF CLIENT.ID='00949' THEN
         IF TL.CAR THEN
            CL.BOL.CRX.FLAG = 'Y'
         END ELSE
            CL.BOL.CRX.FLAG = 'N'
         END
      END
      IF CL.BOL.CRX.FLAG = 'Y' THEN
         GOSUB SET.BOL.CRX
      END
      PRO.REC<17> = VC.ID
      PRO.REC<18> = ZIP.ARR<1>
      NUM.ZIPS = DCOUNT(PRO.REC<18>, @VM)
      IF NUM.ZIPS > 1 THEN
         DEL PRO.REC<18,NUM.ZIPS>
         DEL PRO.REC<18,1>
      END
      PRO.REC<19> = MILEAGE
      PRO.REC<20> = CARRIER.ID
      PRO.REC<22> = MISROUTE.ARRAY<1>
      PRO.REC<23> = MISROUTE.ARRAY<2>
      PRO.REC<24> = DISC.PERC
      IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN
         PRO.REC<25>='ZZ'
         PRO.REC<26>='ZZ'
         PRO.REC<27>='UPS'
         PRO.REC<28>='UPS'
      END ELSE
         IF CARRIER.ID='01075' THEN
            IF ORIG.ZIP='99999' THEN
               PRO.REC<25>='ZZ'
               PRO.REC<27>='FedEx Ground'
            END ELSE
               PRO.REC<25>=ORIG.STATE
               PRO.REC<27>=ORIG.CITY
            END
            IF DEST.ZIP='99999' THEN
               PRO.REC<26>='ZZ'
               PRO.REC<28>='FedEx Ground'
            END ELSE
               PRO.REC<26>=DEST.STATE
               PRO.REC<28>=DEST.CITY
            END
         END ELSE
            PRO.REC<25>=ORIG.STATE
            PRO.REC<26>=DEST.STATE
            PRO.REC<27>=ORIG.CITY
            PRO.REC<28>=DEST.CITY
         END
      END
      PRO.REC<38> = DUE.DATE
      PRO.REC<238> = PMT.DUE.DATE        ; * NPR048
      VAR.CODE = ''
      IF VARIANCE = 0 THEN VAR.ARR = ''
      IF VAR.ARR<1>'R0' # 0 ! VAR.ARR<4>'R0' NE 0 THEN
         VAR.CODE = VAR.CODE:'D'
      END
      IF VAR.ARR<2>'R0' # 0 ! VAR.ARR<5>'R0' NE 0 THEN
         VAR.CODE = VAR.CODE:'O'
      END
      IF VAR.ARR<3>'R0' # 0 ! VAR.ARR<6>'R0' NE 0 THEN
         VAR.CODE = VAR.CODE:'C'
      END
      PRO.REC<29> = VAR.CODE
      READV E.DATE FROM F.HIST, OLD.PRO.ID, 30 THEN
         PRO.REC<30> = E.DATE
      END
      IF VERSION > 0 THEN PRO.REC<30>=''           ; * Set to Null on Dups
      IF DATE() LE CLIENT.REC(82) THEN
         NEW.BILL.DATE=CLIENT.REC(82)+1
      END ELSE
         NEW.BILL.DATE=DATE()
      END
      IF OLD.PRO.REC<66>='N' AND OLD.PRO.REC<39> = 'R' AND PRO.REC<39> # 'R' THEN PRO.REC<30>=''     ; * JIM - NEVERPAYS
      IF PRO.REC<30>='' THEN PRO.REC<30>=NEW.BILL.DATE
      IF PRO.REC<39>#'R' AND OLD.PRO.REC<37>='' THEN
         IF PRO.REC<30> LE CLIENT.REC(82) THEN PRO.REC<30>=NEW.BILL.DATE
      END
      PRO.REC<280> = IMAGE               ; * NKH04
      PRO.REC<281> = BATCH.NO            ; * NKH08
      IF LOCK.SEQ = 0 THEN               ; * NKH33
         LOCK.SEQ.WRITE = 1              ; * NKH33
      END ELSE                           ; * NKH33
         LOCK.SEQ.WRITE = LOCK.SEQ       ; * NKH33
      END                                ; * NKH33
      PRO.REC<290> = LOCK.SEQ.WRITE      ; * NKH33
      IF NOT(IMAGE.IS.LOCKED) THEN LOCK.SEQ = 0    ; * NKH33
      *      PRO.REC<246> = RVCD.DATE           ; * NKH06   * NKH13
      * Begin NKH10
      IF OLD.PRO.REC<283> = '' THEN
         PRO.REC<283> = 'FB.2.1.NW.TEMPO'          ; *GRB20
      END ELSE
         PRO.REC<283> = OLD.PRO.REC<283>
      END
      * End NKH10
      PRO.REC<294> = RES.FLAG            ; * NKH74
      ********************************************************************
      IF CLIENT.ID = '00978' THEN
         BASE.AMT=PRO.REC<8>             ; * Get Starting amount
         EXP.ARRAY=''
         * Distribute BFG-Garlock Palmyra changed Inbound percent on 1/28/03
         * Distribute BFG-Garlock Palmyra changed Inbound and Outbound percent on 1/9/04 - DRF
         * Distribute BFG-Garlock Palmyra changed Inbound percent on 02/03/04 - DRF
         * Distribute BFG-Garlock Palmyra changed Inbound and Outbound percent on 02/01/05 - DRF
         * Distribute changed Inbound and Outbound 01/31/06 - DRF
         * Distribute changed Inbound and Outbound 01/11/07 - DRF
         * Distribute changed Inbound 04/24/08 - DRF
         * Distribute changed Inbound 01/05/10 - DRF
         IF IN.OUT='I' OR IN.OUT='T' THEN          ; * DRF058
            EXP.ARRAY<1,1>='MLD' ; EXP.ARRAY<2,1>=15.1
            EXP.ARRAY<1,2>='KLZ' ; EXP.ARRAY<2,2>=28.0
            EXP.ARRAY<1,3>='CMP' ; EXP.ARRAY<2,3>=0.1
            EXP.ARRAY<1,4>='GYL' ; EXP.ARRAY<2,4>=15.4
            EXP.ARRAY<1,5>='HPS' ; EXP.ARRAY<2,5>=31.0
            EXP.ARRAY<1,6>='FAB' ; EXP.ARRAY<2,6>=1.3
            EXP.ARRAY<1,7>='EJ' ; EXP.ARRAY<2,7>=2.1
            EXP.ARRAY<1,8>='HYD' ; EXP.ARRAY<2,8>=4.6
            EXP.ARRAY<1,9>='RIM' ; EXP.ARRAY<2,9>=2.4
         END ELSE
            *  Distribute BFG-Garlock Palmyra automatically....
            IF PRO.ID[1,13]='00041*1X4-568' OR PRO.ID[1,13]='00041*3V9-86A' THEN
               EXP.ARRAY<1,1>='KLZ' ; EXP.ARRAY<2,1>=100.0
            END ELSE
               EXP.ARRAY<1,1>='MLD' ; EXP.ARRAY<2,1>=1.1
               EXP.ARRAY<1,2>='KLZ' ; EXP.ARRAY<2,2>=20.2
               EXP.ARRAY<1,3>='CMP' ; EXP.ARRAY<2,3>=0.9
               EXP.ARRAY<1,4>='GYL' ; EXP.ARRAY<2,4>=19.9
               EXP.ARRAY<1,5>='HPS' ; EXP.ARRAY<2,5>=32.1
               EXP.ARRAY<1,6>='FAB' ; EXP.ARRAY<2,6>=8.4
               EXP.ARRAY<1,7>='EJ' ; EXP.ARRAY<2,7>=9.2
               EXP.ARRAY<1,8>='HYD' ; EXP.ARRAY<2,8>=8.2
            END
         END
         EXP.TIMES=DCOUNT(EXP.ARRAY<1>,@VM)
         EXP.CHECK=0
         AMT.LEFT=BASE.AMT
         DTAB=''
         FOR X = 1 TO EXP.TIMES
            EXP.CHECK+=EXP.ARRAY<2,X>
            IF X = EXP.TIMES THEN
               EXP.AMT=AMT.LEFT
            END ELSE
               EXP.AMT=BASE.AMT*EXP.ARRAY<2,X>/100
               EXP.AMT=OCONV(EXP.AMT,'MR0')
            END
            IF EXP.AMT>'0' OR CARRIER.CHG>'1' THEN
               DTAB<1,-1>=EXP.ARRAY<1,X>
               DTAB<3,-1>=EXP.AMT
               AMT.LEFT-=EXP.AMT
            END
         NEXT X
         IF EXP.CHECK#100 THEN
            CALL ELINE('Automatic Expense Breakout for BFG Garlock is not 100% Update Refused!')
            CC+=1 ; GOSUB PRINT.CC
            GOTO 1400
         END
         EXP.CODE=DTAB<1,1>              ; * Set "Expense Code" to the 1st Value
         PRO.REC<5>=EXP.CODE
         PRO.REC<31> = DTAB<1>
         PRO.REC<33> = DTAB<3>
      END ELSE
         PRO.REC<31> = DTAB<1>
         PRO.REC<33> = DTAB<3>
      END
      ********************************************************************
      IF CLIENT.ID='10298' AND DIVISION='00004' AND CARRIER.ID='06140' AND PRO.REC<8> > 165000 THEN
         DTAB<1,2>='515-467-006-000'
         DTAB<3,1>='165000'
         DTAB<3,2>=PRO.REC<8>-'165000'
         PRO.REC<31>=DTAB<1>
         PRO.REC<33>=DTAB<3>
      END
      IF CLIENT.ID='01105' AND PRO.REC<8> > 0 AND ORIG.EXP.CODE MATCHES 'SPLIT' THEN
         DTAB<1,2>='1008.TXT.160100.50651.0000.0000'
         DTAB<1,3>='1008.DIV.160100.50651.0000.0000'
         DTAB<3,1>=OCONV(PRO.REC<8>*390/1000,'MR0')
         DTAB<3,2>=OCONV(PRO.REC<8>*220/1000,'MR0')
         DTAB<3,3>=PRO.REC<8>-(DTAB<3,1>+DTAB<3,2>+DTAB<3,3>)
         PRO.REC<31>=DTAB<1>
         PRO.REC<33>=DTAB<3>
      END
      * Begin TAG01
      *      IF (CLIENT.ID='01063' OR CLIENT.ID='01195') AND PRO.REC<8> > 0 THEN
      IF (CLIENT.ID='01063' OR CLIENT.ID='01195' OR CLIENT.ID='05543') AND PRO.REC<8> > 0 THEN
         * End TAG01
         IF MULTI.CODE#'' THEN
            DTAB<1>=MULTI.CODE
            CODE.COUNTER=DCOUNT(DTAB<1>,@VM)
            CODE.ACC = 0
            FOR XX = 1 TO CODE.COUNTER-1
               DTAB<3,XX> = OCONV(PRO.REC<8>*MULTI.PERCENT<1,XX>/10000,'MR0')
               CODE.ACC = CODE.ACC + DTAB<3,XX>
            NEXT XX
            DTAB<3,CODE.COUNTER>=PRO.REC<8>-CODE.ACC
         END
         PRO.REC<31>=DTAB<1>
         PRO.REC<33>=DTAB<3>
      END
      IF CLIENT.ID='02190' AND PRO.REC<8> > 0 AND EXP.CODE = '58065-100-01' THEN
         DTAB<1,1>=EXP.CODE
         DTAB<1,2>='58065-200-01'
         DTAB<3,1>=OCONV(PRO.REC<8>*500/1000,'MR0')
         DTAB<3,2>=PRO.REC<8>-(DTAB<3,1>)
         PRO.REC<31>=DTAB<1>
         PRO.REC<33>=DTAB<3>
      END
      ********************************************************************
      IF CLIENT.ID='01271' OR CLIENT.ID='01418' OR CLIENT.ID='01113' THEN        ; * JMK80 ; * JMK96
         DTAB=''                         ; * JMK80
         EXP.ID=PRO.REC<31,1>            ; * JMK80
         EXP.AMT=PRO.REC<8>              ; * JMK80
         DTAB<1>=EXP.ID                  ; * JMK80
         DTAB<3>=EXP.AMT                 ; * JMK80
         HAZ.EXP.AMT=0                   ; * JMK80
         FSC.EXP.AMT=0                   ; * JMK80
         IF CLIENT.ID#'01113' THEN
            LOCATE('HAZ',DTL.CHRG.CODES,1;HAZPOS) THEN       ; * JMK80
               IF CLIENT.ID='01271' THEN
                  HAZ.EXP.ID=OCONV(EXP.ID,'G.2'):'.382301'   ; * JMK80
               END ELSE
                  HAZ.EXP.ID=OCONV(EXP.ID,'G-2'):'-382301'   ; * JMK80
                  IF CLIENT.ID='01418' THEN
                     HAZ.EXP.ID='380120'
                  END
               END
               HAZ.EXP.AMT=DTL.CHRG.AMTS<1,HAZPOS>           ; * JMK80
               DTAB<1,-1>=HAZ.EXP.ID     ; * JMK80
               DTAB<3,-1>=HAZ.EXP.AMT    ; * JMK80
            END                          ; * JMK80
         END
         LOCATE('FSC',DTL.CHRG.CODES,1;FSCPOS) THEN          ; * JMK80
            IF CLIENT.ID = '01271' THEN  ; * JCW06
               FSC.EXP.ID=OCONV(EXP.ID,'G.2'):'.388101'      ; * JMK80 ; * JCW06
            END ELSE                     ; * JCW06
               FSC.EXP.ID=OCONV(EXP.ID,'G-2'):'-388101'      ; * JCW06
               IF CLIENT.ID='01418' THEN
                  FSC.EXP.ID='380130'
               END
            END                          ; * JCW06
            FSC.EXP.AMT=DTL.CHRG.AMTS<1,FSCPOS>    ; * JMK80
            DTAB<1,-1>=FSC.EXP.ID        ; * JMK80
            DTAB<3,-1>=FSC.EXP.AMT       ; * JMK80
         END                             ; * JMK80
         DTAB<3,1>=EXP.AMT-HAZ.EXP.AMT-FSC.EXP.AMT           ; * JMK80
         PRO.REC<31>=DTAB<1>             ; * JMK80
         PRO.REC<33>=DTAB<3>             ; * JMK80
      END                                ; * JMK80
      IF CLIENT.ID='01832' THEN          ; * JMK191
         DTAB=''                         ; * JMK191
         EXP.ID=PRO.REC<31,1>            ; * JMK191
         EXP.AMT=PRO.REC<8>              ; * JMK191
         DTAB<1>=EXP.ID                  ; * JMK191
         DTAB<3>=EXP.AMT                 ; * JMK191
         GST.EXP.AMT=0                   ; * JMK191
         HST.EXP.AMT=0                   ; * JMK191
         QST.EXP.AMT=0                   ; * JMK191
         GST.EXP.TOT=0                   ; * JMK233
         HST.EXP.TOT=0                   ; * JMK233
         QST.EXP.TOT=0                   ; * JMK233
         DCCNT=DCOUNT(DTL.CHRG.CODES<1>,@VM)       ; * JMK233
         LOCATE('GST',DTL.CHRG.CODES,1;GSCPOS) THEN          ; * JMK191
            FOR GSVAL=GSCPOS TO DCCNT    ; * JMK233
               GST.EXP.ID='GST'          ; * JMK191
               IF DTL.CHRG.CODES<1,GSVAL>=GST.EXP.ID THEN    ; * JMK233
                  GST.EXP.AMT=DTL.CHRG.AMTS<1,GSVAL>         ; * JMK191 ; * JMK233
                  DTAB<1,-1>=GST.EXP.ID  ; * JMK191
                  DTAB<3,-1>=GST.EXP.AMT           ; * JMK191
                  GST.EXP.TOT+=GST.EXP.AMT         ; * JMK233
               END                       ; * JMK233
            NEXT GSVAL                   ; * JMK233
         END                             ; * JMK191
         LOCATE('HST',DTL.CHRG.CODES,1;HSCPOS) THEN          ; * JMK191
            FOR HSVAL=HSCPOS TO DCCNT    ; * JMK233
               HST.EXP.ID='HST'          ; * JMK191
               IF DTL.CHRG.CODES<1,HSVAL>=HST.EXP.ID THEN    ; * JMK233
                  HST.EXP.AMT=DTL.CHRG.AMTS<1,HSVAL>         ; * JMK191 ; * JMK233
                  DTAB<1,-1>=HST.EXP.ID  ; * JMK191
                  DTAB<3,-1>=HST.EXP.AMT           ; * JMK191
                  HST.EXP.TOT+=HST.EXP.AMT         ; * JMK233
               END                       ; * JMK233
            NEXT GSVAL                   ; * JMK233
         END                             ; * JMK191
         LOCATE('QST',DTL.CHRG.CODES,1;QSCPOS) THEN          ; * JMK191
            FOR QSVAL=QSCPOS TO DCCNT    ; * JMK233
               QST.EXP.ID='QST'          ; * JMK191
               IF DTL.CHRG.CODES<1,QSVAL>=QST.EXP.ID THEN    ; * JMK233
                  QST.EXP.AMT=DTL.CHRG.AMTS<1,QSVAL>         ; * JMK191 ; * JMK233
                  DTAB<1,-1>=QST.EXP.ID  ; * JMK191
                  DTAB<3,-1>=QST.EXP.AMT           ; * JMK191
                  QST.EXP.TOT+=QST.EXP.AMT         ; * JMK233
               END                       ; * JMK233
            NEXT GSVAL                   ; * JMK233
         END                             ; * JMK191
         DTAB<3,1>=EXP.AMT-GST.EXP.TOT-HST.EXP.TOT-QST.EXP.TOT         ; * JMK191 ; * JMK233
         PRO.REC<31>=DTAB<1>             ; * JMK191
         PRO.REC<33>=DTAB<3>             ; * JMK191
      END                                ; * JMK191
      IF CLIENT.ID='02153' THEN          ; * JMK242
         DTAB=''                         ; * JMK242
         EXP.ID=PRO.REC<31,1>            ; * JMK242
         EXP.AMT=PRO.REC<8>              ; * JMK242
         DTAB<1>=EXP.ID                  ; * JMK242
         DTAB<3>=EXP.AMT                 ; * JMK242
         FSC.EXP.AMT=0                   ; * JMK242
         LOCATE('FSC',DTL.CHRG.CODES,1;FSCPOS) THEN          ; * JMK242
            FSC.EXP.ID='60530'           ; * JMK242
            FSC.EXP.AMT=DTL.CHRG.AMTS<1,FSCPOS>    ; * JMK242
            DTAB<1,-1>=FSC.EXP.ID        ; * JMK242
            DTAB<3,-1>=FSC.EXP.AMT       ; * JMK242
         END                             ; * JMK242
         DTAB<3,1>=EXP.AMT-FSC.EXP.AMT   ; * JMK242
         PRO.REC<31>=DTAB<1>             ; * JMK242
         PRO.REC<33>=DTAB<3>             ; * JMK242
      END                                ; * JMK242
      PRO.REC<34> = 0-VAR.ARR<4>
      PRO.REC<35> = 0-VAR.ARR<5>
      PRO.REC<36> = 0-VAR.ARR<6>
      IF USER.TYPE='A' THEN
         IF REJECT.FLAG THEN
            PRO.REC<39>=REJECT.FLAG
         END ELSE
            PRO.REC<39>=OLD.PRO.REC<39>
            PRO.REC<54>=OLD.PRO.REC<54>
            PRO.REC<98>=OLD.PRO.REC<98>
         END
      END ELSE
         IF AUDIT='Y' THEN
            IF ABS(DIFFERENCE) < 2 THEN
               PRO.REC<39>='A'           ; * Amounts Verified
               VER.CODE='A' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
            END
            VER.CODE='VD' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
         END
         PRO.REC<54>=''
      END
      PRO.REC<40> = BANK.ID
      PRO.REC<45> = VERIFIED
      PRO.REC<68> = BILL.STATUS
      FRT.ARRAY=''                       ; * JMK14
      MIS.ARRAY=''                       ; * JMK14
      DTL.OUT=''                         ; * JMK17
      ENPRO.MILEAGE=0                    ; * SWB09
      LOCATE CLIENT.ID IN ENPRO.CLIENT.NBRS<1> SETTING ENPRO.POS THEN  ; * SWB09
         LOCATE CLIENT.ID IN ENPRO.CLIENTS.USING.OLA<1> SETTING ENPRO.OLA.CLIENT.POS THEN  ; * SWB09
            LOCATE CARRIER.ID IN ENPRO.CARRIERS.USING.OLA<ENPRO.OLA.CLIENT.POS, 1> SETTING ENPRO.OLA.CARRIER.POS ELSE    ; * SWB09
               *If it is an ENPRO client # and the Client Carrier combination is NOT OLA theN we want to build fields 153 - 164 of
               *the Freight Bill based on what is in the detail screen, not OLA.
               ENPRO.MILEAGE=1           ; * SWB09
            END                          ; * SWB09
         END ELSE                        ; * SWB09
            ENPRO.MILEAGE=1              ; * SWB09
         END                             ; * SWB09
      END                                ; * SWB09
      BEGIN CASE                         ; * JMK17
         CASE ENPRO.MILEAGE=1            ; * SWB09
            DTL.OUT<40>=DTL.CHRG.CODES   ; * SWB09
            DTL.OUT<44>=DTL.CHRG.AMTS    ; * SWB09
         CASE AVOUT<40>#''               ; * JMK17
            DTL.OUT=AVOUT                ; * JMK17
            IF DTL.CHRG.CODES='' THEN    ; * JMK18

            END                          ; * JMK18
         CASE DTL.CHRG.CODES<1,1>#'' AND INDEX(T.MODE,'TRUCKLOAD',1) GT 0        ; * JMK17
            DTL.OUT<40>=DTL.CHRG.CODES   ; * JMK17
            DTL.OUT<44>=DTL.CHRG.AMTS    ; * JMK17

         CASE 1                          ; * JMK17
            DTL.OUT=''                   ; * JMK17
            IF DTL.CHRG.CODES#'' THEN    ; * JMK19
               DTL.OUT<40>=DTL.CHRG.CODES          ; * JMK19
               DTL.OUT<44>=DTL.CHRG.AMTS           ; * JMK19
            END                          ; * JMK19
      END CASE                           ; * JMK17
      GOSUB RECALC.FB.DETAILS            ; * JMK18
      PRO.REC<88> = OLD.PRO.REC<88>      ; * Copy over EDI Links
      PRO.REC<93> = MISSING.DATA

      IF CAPTURE.INVOICE OR CARRIER.ID='01075' THEN          ; * JMK106  ; * NPR07
         PRO.REC<94>=OCONV(INV.NUM,'MCU')
      END
      IF CAPTURE.INVOICE OR CARRIER.ID='20114' THEN          ; * JMK106  ; * NPR07
         PRO.REC<94>=OCONV(INV.NUM,'MCU')
      END
      PRO.REC<291> = ACCT.NUM            ; * NKH43
      ACCT.NUM = ''                      ; * NKH43
      PRO.REC<96>=OVERRIDE.STATUS
      IF OLA.AMT#'' THEN
         PRO.REC<99>=OLA.AMT
      END
      PRO.REC<116>=OVERRIDE.FIELD
      PRO.REC<117>=OVERRIDE.OPERATOR
      PRO.REC<118>=OVERRIDE.INFO
      PRO.REC<119>=FLAT.RATE
      * Update the PRO.REC<39> - Only alter contents of <39> if we need to.
      * incase <39> already contains a prior value.
      IF REJECT.FLAG # '' THEN PRO.REC<39> = REJECT.FLAG
      IF (OLD.PRO.REC<88>) AND PRO.REC<39>='' THEN
         PRO.REC<39>='V'                 ; * IF EDI, Mark as verified
      END
      IF QV.VALID THEN                   ; * JMK24
         * Begin NKH30
         IF PRO.REC<68> = '1' THEN
            PRO.REC<39>='O'              ; * JMK24
            IF CARRIER.REC<131,1> = 'Y' THEN       ; * NKH56
               PRO.REC<292> = 'Y'        ; * NKH56
               IF OLD.PRO.REC # "" THEN OLD.PRO.REC<292> = 'Y'         ; * NKH60
            END                          ; * NKH56
         END ELSE
            PRO.REC<39> = PRO.REC<68>
         END
         PRO.REC<98> = PRO.REC<8>
         *         OLD.PRO.REC<98> = PRO.REC<8>
         * End NKH30
         IF USER.TYPE#'A' AND OLD.PRO.REC<37>='' AND (CLIENT.ID='01290' OR CLIENT.ID='01313' OR CLIENT.ID='01309' OR CLIENT.ID='01316' OR CLIENT.ID='01339' OR CLIENT.ID='01333' OR CLIENT.ID='01320' OR CLIENT.ID='01322') THEN
            PRO.REC<98>=PRO.REC<8>
         END
      END                                ; * JMK24
      READV P.DATE FROM F.HIST, OLD.PRO.ID, 37 THEN
         PRO.REC<37> = P.DATE
      END ELSE
         *DF      PRO.REC<54>=''
      END
      IF CHANGED.TO.EVENTUAL.PAY THEN PRO.REC<37> = ''       ; * NPR14
      IF CHANGED.TO.AUDIT.REVIEW THEN PRO.REC<37> = ''
      IF OLD.PRO.REC<66>='N' AND OLD.PRO.REC<39> = 'R' AND PRO.REC<39> # 'R' THEN PRO.REC<37>=''
      IF VERSION > 0 THEN PRO.REC<37>=''
      PRO.REC<41,1> = VAR.ARR<7>
      PRO.REC<41,2> = VAR.ARR<8>
      PRO.REC<41,3> = VAR.ARR<9>
      PRO.REC<46> = MIN.CHG
      APRVD.CARRIER = 'N'
      IF APRVD.CARRS THEN
         GOSUB SET.APRVD.CARR
      END
      PRO.REC<47> = APRVD.CARRIER
      IF QI = 'W' THEN PRO.REC<48> = 'Y' ELSE PRO.REC<48> = ''
      CALC = 0
      COST.MILE = 0
      IF MILEAGE+0 # 0 THEN
         COST.MILE = OCONV(ACTUAL.CHG,'MD2')/MILEAGE
         COST.MILE = ICONV( COST.MILE,'MD2' )
      END
      IF CL.CPM.MIN+0 > 0 THEN
         IF COST.MILE LT CL.CPM.MIN THEN
            COST.MILE = ''
         END
      END
      PRO.REC<49> = COST.MILE'R0'
      FOR X = 84 TO 86
         PRO.REC<X>=OLD.PRO.REC<X>
      NEXT X
      PRO.REC<282>=OLD.PRO.REC<282>      ; * NKH09
      PRO.REC<284>=OLD.PRO.REC<284>      ; * NKH14
      PRO.REC<285>=OLD.PRO.REC<285>      ; * NKH14

      IF PRO.REC<84>='' AND OLD.PRO.REC<84>#'' THEN
         PRO.REC<84>=OLD.PRO.REC<84>
         PRO.REC<85>=OLD.PRO.REC<85>
         PRO.REC<86>=OLD.PRO.REC<86>
         IF OLD.PRO.REC<282> # '' THEN PRO.REC<282>=OLD.PRO.REC<282>   ; * NKH09
         IF OLD.PRO.REC<284> # '' THEN PRO.REC<284>=OLD.PRO.REC<284>   ; * NKH14
         IF OLD.PRO.REC<285> # '' THEN PRO.REC<285>=OLD.PRO.REC<285>   ; * NKH14
      END
      PRO.REC<84,-1>=USER                ; * Update Each Time bill is Filed
      PRO.REC<85,-1>=T.TIME              ; * Update Each Time bill is Filed   ;*NPR06
      PRO.REC<86,-1>=DATE()              ; * Update Each Time bill is Filed
      IF OLD.PRO.REC<282> = '' THEN PRO.REC<282>=CH.NUM      ; * NKH09
      IF OLD.PRO.REC<284> = '' THEN PRO.REC<284>=DATE()      ; * NKH14
      IF OLD.PRO.REC<285> = '' THEN PRO.REC<285>=TIME()      ; * NKH14
      IF QV.VALID THEN                   ; * JMK24
         PRO.REC<54>=USER                ; * JMK26
         PRO.REC<84,-1>=USER             ; * JMK24
         PRO.REC<85,-1>=T.TIME           ; * JMK24       ;*NPR06
         PRO.REC<86,-1>=DATE()           ; * JMK24
         IF OLD.PRO.REC<282> = '' THEN PRO.REC<282>=CH.NUM   ; * NKH09
         IF OLD.PRO.REC<284> = '' THEN PRO.REC<284>=DATE()   ; * NKH14
         IF OLD.PRO.REC<285> = '' THEN PRO.REC<285>=TIME()   ; * NKH14
      END                                ; * JMK24
      PRO.REC<51> = VAR.REC<1>
      PRO.REC<52> = VAR.REC<2>
      PRO.REC<56> = VAR.REC<3>
      IF PRO.REC<53> = '' THEN PRO.REC<53> = USER
      PRO.REC<55> = LEN(PRO.REC)-LEN(USER)
      PRO.REC<57> = AIR.PIECES
      PRO.REC<58> = CLASS<2>
      PRO.REC<59> = REJECT.REASONS<1>
      PRO.REC<60> = REJECT.REASONS<2>
      PRO.REC<61> = REJECT.REASONS<3>
      PRO.REC<62> = REJECT.REASONS<4>
      PRO.REC<64,1>=MAILING.ADDR<1>
      PRO.REC<64,2>=MAILING.ADDR<2>
      PRO.REC<64,3>=MAILING.ADDR<3>
      PRO.REC<64,4>=MAILING.ADDR<4>
      PRO.REC<66> = REJ.TYPE
      IF REJ.TYPE[2,4]='-NEW' THEN
         PRO.REC<66>=REJ.TYPE[1,1]
      END
      CARRIER.MODE.WGT = CARRIER.REC<70>
      CARRIER.MODE.BY.WGT = CARRIER.REC<71>
      LOCATE WEIGHT IN CARRIER.MODE.WGT<1> BY "AR" SETTING POS ELSE NULL
      T.MODE.BY.WGT = OCONV(CARRIER.MODE.BY.WGT<1,POS>,'MCU')
      LTL.CAR=T.MODE.BY.WGT=1            ; * JMK187
      TL.CAR=T.MODE.BY.WGT=6             ; * JMK187
      AIR.CAR=T.MODE.BY.WGT=12           ; * JMK187
      PRO.REC<21> = T.MODE.BY.WGT
      IF PRO.REC<21>#'1' AND PRO.REC<21>#'6' THEN PRO.REC<19>=''       ; * JMK162
      IF PRO[LEN(PRO)-1,2]='AD' THEN PRO.REC<19>=''          ; * JMK162
      IF PRO[LEN(PRO)-1,2]='BD' THEN PRO.REC<19>=''          ; * JMK162
      PRO.REC<65> = SERVICE.LEVEL
      PRO.REC<106> = DIM.WEIGHT
      PRO.REC<107> = AIR.CHRG.CODES
      PRO.REC<108> = AIR.CHRG.AMTS
      PRO.REC<207> = INTL.CHRG.CODES     ; * NPR031
      PRO.REC<208> = INTL.CHRG.AMTS      ; * NPR031
      IF VC.OVERRIDE='Y' THEN            ; * JMK55
         PRO.REC<189>=MISROUTE.AMOUNT    ; * JMK55
         PRO.REC<190>=MISROUTE.CARRIER   ; * JMK55
         PRO.REC<191>=13513              ; * JMK55
         PRO.REC<192>='NEVER'            ; * JMK55
         PRO.REC<193>='On file when reason system started'   ; * JMK55
         PRO.REC<194>='Logistics Dept'   ; * JMK55
         PRO.REC<195>=13513              ; * JMK55
         PRO.REC<196>=46800              ; * JMK55
      END ELSE                           ; * JMK55
         PRO.REC<63> = MISROUTE.AMOUNT
         PRO.REC<69> = MISROUTE.CARRIER
         PRO.REC<189>=MISROUTE.AMOUNT    ; * JMK126
         PRO.REC<190>=MISROUTE.CARRIER   ; * JMK126
      END                                ; * JMK55
      *** These two client/carrier combinations should never be counted as misroutes
      *** Requested by Donna Dupont and Kristy Rivet
      IF (CLIENT.ID='01014' AND CARRIER.ID='03131') OR (CLIENT.ID='01079' AND CARRIER.ID='00250') THEN         ; * JCW03
         PRO.REC<63> = ''                ; * JCW03
         PRO.REC<69> = ''                ; * JCW03
         PRO.REC<22> = ''                ; * JCW03
         PRO.REC<23> = ''                ; * JCW03
         IF VC.OVERRIDE = 'Y' THEN       ; * JCW03
            PRO.REC<189> = ''            ; * JCW03
            PRO.REC<190> = ''            ; * JCW03
            PRO.REC<191> = ''            ; * JCW03
            PRO.REC<192> = ''            ; * JCW03
            PRO.REC<193> = ''            ; * JCW03
            PRO.REC<194> = ''            ; * JCW03
            PRO.REC<195> = ''            ; * JCW03
            PRO.REC<196> = ''            ; * JCW03
         END                             ; * JCW03
      END                                ; * JCW03
      IF DAUDIT<13>='Y' THEN             ; * JMK57
         PRO.REC<197>='Y'                ; * JMK57
      END ELSE                           ; * JMK57
         PRO.REC<197>='N'                ; * JMK57
      END                                ; * JMK57
      IF (USER.TYPE='A' AND NOT(SU.FLAG) AND QI='A') OR (USER.TYPE='A' AND NOT(SU.FLAG) AND QI='1') OR (USER.TYPE='A' AND NOT(SU.FLAG) AND QI='U') THEN
         AUDITOR=USER
         PRO.REC<89> = AUDITOR
         PRO.REC<95> = DATE()
         IF QI='A' OR QI='1' THEN
            PRO.REC<39> = 'O'
            IF OLD.PRO.REC<39> # 'O' AND PRO.REC<39>='O' AND CLIENT.ID='00574' THEN
               IF DATE() LE CLIENT.REC(82) THEN
                  PRO.REC<30>=CLIENT.REC(82)+1
               END ELSE
                  PRO.REC<30> = DATE()
               END
            END
            ACCESS.REASON = "APPROVE"    ; * NPR042
            GOSUB UPD.FB.BILLS.ACCESS    ; * NKH56
         END ELSE
            IF REJECT.FLAG#'R' THEN PRO.REC<39>=PRO.REC<68>
         END
      END
      IF VERSION GT 0 THEN PRO.REC<39> = 'O'
      PRO.REC<90> = VC.CODE
      PRO.REC<91> = CC
      PRO.REC<100>= VC.ID                ; * Item ID for Cust.Vend
      PRO.REC<101>= CUST.VEND.ADDR<1>    ; * Name
      PRO.REC<102>= CUST.VEND.ADDR<2>    ; * Address1
      PRO.REC<102,2>= CUST.VEND.ADDR<3>  ; * Address2
      PRO.REC<103>= CUST.VEND.ADDR<5>    ; * City
      PRO.REC<104>= CUST.VEND.ADDR<6>    ; * State
      PRO.REC<105>= CUST.VEND.ADDR<4>    ; * Zip
      IF USER.TYPE='A' THEN
         IF PRO.REC<97>='' THEN
            IF OLD.CLASS # CLASSES THEN
               PRO.REC<97>=OLD.CLASS
            END
         END
      END
      PRO.REC<74> = CLASSES
      PRO.REC<75> = WEIGHTS
      PRO.REC<110>= AUDITOR.VIEWED       ; * 1=OLA Auditor viewed, 0=OLA, ''=Manual bill.
      MISC.CHG.POS=DCOUNT(CLASSES<1>,@VM)          ; * Find out how many
      FOR MISC.CHG.CNT=1 TO MISC.CHG.POS
         PRO.REC<70,MISC.CHG.CNT>='FRT'
      NEXT MISC.CHG.CNT
      IF MISC.CHG.CODES#'' THEN
         PRO.REC<70,MISC.CHG.POS+1>=MISC.CHG.CODES
         PRO.REC<77,MISC.CHG.POS+1>=CONTR.MISC.CHG.AMTS
         PRO.REC<79,MISC.CHG.POS+1>=BENCH.MISC.CHG.AMTS
      END
      IF SU.FLAG THEN
         PRO.REC<39>=OLD.PRO.REC<39>
         PRO.REC<68>=OLD.PRO.REC<68>
         PRO.REC<54>=OLD.PRO.REC<54>
         PRO.REC<89>=OLD.PRO.REC<89>
         PRO.REC<95>=OLD.PRO.REC<95>
         PRO.REC<97>=OLD.PRO.REC<97>
      END
      PRO.REC<120>=ZIP.ARR<1>            ; * MV Zips
      PRO.REC<121>=ZIP.ARR<2>            ; * MV Cities
      PRO.REC<122>=ZIP.ARR<3>            ; * MV States
      PRO.REC<149>=ZIP.ARR<7>            ; * MV Miles JMK12
      TEMP.ZIP.ARR=ZIP.ARR
      DEL TEMP.ZIP.ARR<1,1>
      DEL TEMP.ZIP.ARR<2,1>
      DEL TEMP.ZIP.ARR<3,1>
      DEL TEMP.ZIP.ARR<4,1>
      DEL TEMP.ZIP.ARR<5,1>
      DEL TEMP.ZIP.ARR<6,1>
      DEL TEMP.ZIP.ARR<7,1>              ; * JMK12
      IF CLIENT.ID='00574' AND IN.OUT='O' THEN
         PRO.REC<136>=TEMP.ZIP.ARR<4>
         PRO.REC<137>=TEMP.ZIP.ARR<2>
         PRO.REC<138>=TEMP.ZIP.ARR<3>
         PRO.REC<139>=TEMP.ZIP.ARR<1>
         PRO.REC<140>=TEMP.ZIP.ARR<5>
         PRO.REC<142>=TEMP.ZIP.ARR<6>
         CLIENT.CUST.TOT.WT=0
         X=DCOUNT(TEMP.ZIP.ARR<5>,CHAR(253))
         FOR I=1 TO X
            CLIENT.CUST.TOT.WT=CLIENT.CUST.TOT.WT+TEMP.ZIP.ARR<5,I>
         NEXT I
         NEW.TOT=''
         PRO.REC<31>=''
         PRO.REC<33>=''
         X=DCOUNT(TEMP.ZIP.ARR<5>,CHAR(253))
         TIMES=X-1
         IF TIMES => 1 THEN
            FOR I=1 TO TIMES
               IF CLIENT.CUST.TOT.WT+0=0 THEN
                  WT.PERCENT=1/X
               END ELSE
                  WT.PERCENT=TEMP.ZIP.ARR<5,I>/CLIENT.CUST.TOT.WT
               END
               PRO.REC<141,I>=(WT.PERCENT*ACTUAL.CHG)'R0'
               NEW.TOT=NEW.TOT+PRO.REC<141,I>
               LOCATE PRO.REC<142,I> IN PRO.REC<31> SETTING EXP.POS THEN
                  PRO.REC<33,EXP.POS>=PRO.REC<33,EXP.POS>+PRO.REC<141,I>
               END ELSE
                  PRO.REC<31,-1>=PRO.REC<142,I>
                  PRO.REC<33,-1>=PRO.REC<141,I>
               END
            NEXT I
         END
         PRO.REC<141,X>=ACTUAL.CHG-NEW.TOT
         LOCATE PRO.REC<142,X> IN PRO.REC<31> SETTING EXP.POS THEN
            PRO.REC<33,EXP.POS>=PRO.REC<33,EXP.POS>+PRO.REC<141,X>
         END ELSE
            PRO.REC<31,-1>=PRO.REC<142,X>
            PRO.REC<33,-1>=PRO.REC<141,X>
         END
         IF PRO.REC<31>='' THEN PRO.REC<31>=PRO.REC<5>
      END
      PRO.REC<123>=ADDRESS.CORRECTION.CHARGE       ; * For United Parcel Service
      PRO.REC<143>=LCC.AMOUNT            ; * JMK159
      PRO.REC<145>=LCC.ARRAY<1>          ; * JMK159
      PRO.REC<146>=LCC.ARRAY<2>          ; * JMK159
      PRO.REC<147>=LCC.CARRIER           ; * JMK159
      BEGIN CASE                         ; * NPR057
         CASE CLIENT.ID='01510' OR CLIENT.ID='01909'         ; * NPR057
            PRO.REC<239,1>= '800'        ; * NPR057
         CASE CLIENT.ID='02171'
            PRO.REC<239,1>= '1500'
         CASE CLIENT.ID='02215'
            PRO.REC<239,1>= '1200'
            *DF         CASE CLIENT.ID='02465'
            *DF            PRO.REC<239,1>= '2000'
         CASE CLIENT.ID='05022'
            PRO.REC<239,1>= '1500'
         CASE CLIENT.ID='05096'          ; * JMK266
            PRO.REC<239,1>= '1000'       ; * JMK266
         CASE CLIENT.ID='05124'
            PRO.REC<239,1>= '2000'
         CASE CLIENT.ID='05125'          ; * JMK269
            PRO.REC<239,1>= '1000'       ; * JMK269
         CASE CLIENT.ID='05178'          ; * JMK725
            PRO.REC<239,1>= '500'        ; * JMK725
         CASE CLIENT.ID='05238'          ; * JMK271
            PRO.REC<239,1>= '1500'       ; * JMK271
         CASE CLIENT.ID='05294'          ; * DRF032
            IF T.MODE.BY.WGT='1' THEN    ; * DRF035
               PRO.REC<239,1>= '300'     ; * DRF032 ; * DRF035
            END ELSE                     ; * DRF035
               PRO.REC<239,1>='0'        ; * DRF035
            END                          ; * DRF035
         CASE CLIENT.ID='05894'          ; * GRB13
            IF T.MODE.BY.WGT='1' THEN
               PRO.REC<239,1>= '1800'
            END ELSE
               PRO.REC<239,1>='0'
            END
         CASE CLIENT.ID='05089'          ; * GRB14
            IF T.MODE.BY.WGT='1' THEN
               PRO.REC<239,1>= '0400'
            END ELSE
               PRO.REC<239,1>='0'
            END
         CASE CLIENT.ID='05675'          ; * DRF085
            IF T.MODE.BY.WGT='1' THEN    ; * DRF085
               PRO.REC<239,1>= '500'     ; * DRF085
            END ELSE                     ; * DRF085
               PRO.REC<239,1>='0'        ; * DRF085
            END                          ; * DRF085
         CASE CLIENT.ID='06795'          ; * DRF091
            IF T.MODE.BY.WGT='1' THEN    ; * DRF091
               IF CARRIER.ID='00171' OR CARRIER.ID='00212' OR CARRIER.ID='01786' OR CARRIER.ID='00018' OR CARRIER.ID='02653' OR CARRIER.ID= '01522' THEN         ; * DRF91
                  PRO.REC<239,1>= '350'  ; * DRF091
               END ELSE                  ; * DRF091
                  PRO.REC<239,1>='0'     ; * DRF091
               END                       ; * DRF091
            END ELSE                     ; * DRF091
               PRO.REC<239,1>='0'        ; * DRF091
            END                          ; * DRF091
         CASE CLIENT.ID='05610'          ; * DRF093
            IF T.MODE.BY.WGT='1' THEN    ; * DRF093
               IF CARRIER.ID='00171' OR CARRIER.ID='00212' OR CARRIER.ID='00124' OR CARRIER.ID='00017' THEN    ; * DRF093
                  PRO.REC<239,1>= '1500'           ; * DRF093
               END ELSE                  ; * DRF093
                  PRO.REC<239,1>='0'     ; * DRF093
               END                       ; * DRF093
            END ELSE                     ; * DRF093
               PRO.REC<239,1>='0'        ; * DRF093
            END                          ; * DRF093
         CASE CLIENT.ID='05998'          ; * GRB15
            IF T.MODE.BY.WGT='1' THEN
               PRO.REC<239,1>= '1500'
            END ELSE
               PRO.REC<239,1>='0'
            END
         CASE CLIENT.ID='06021'          ; * DRF084
            IF T.MODE.BY.WGT='1' THEN    ; * DRF084
               PRO.REC<239,1>= '400'     ; * DRF084
            END ELSE                     ; * DRF084
               PRO.REC<239,1>='0'        ; * DRF084
            END                          ; * DRF084
         CASE CLIENT.ID='02374'          ; * DRF041
            IF T.MODE.BY.WGT='1' THEN    ; * DRF041
               PRO.REC<239,1>= '1200'    ; * DRF041
            END ELSE                     ; * DRF041
               PRO.REC<239,1>='0'        ; * DRF041
            END                          ; * DRF041
         CASE CLIENT.ID='02481'          ; * DRF053
            IF T.MODE.BY.WGT='1' THEN    ; * DRF053
               PRO.REC<239,1>= '1000'    ; * DRF053
            END ELSE                     ; * DRF053
               PRO.REC<239,1>='0'        ; * DRF053
            END                          ; * DRF053
         CASE CLIENT.ID='01933'          ; * DRF061
            IF T.MODE.BY.WGT='1' THEN    ; * DRF061
               *DF               PRO.REC<239,1>= '550'     ; * DRF061
               PRO.REC<239,1>= '495'     ; * DRF071
            END ELSE                     ; * DRF061
               PRO.REC<239,1>='0'        ; * DRF061
            END                          ; * DRF061
         CASE CLIENT.ID='01801'          ; * DRF062
            PRO.REC<239,1>= '500'        ; * DRF062
         CASE CLIENT.ID='05765'          ; * DRF072
            IF T.MODE.BY.WGT='1' THEN    ; * DRF072
               PRO.REC<239,1>= '1500'    ; * DRF072
            END ELSE                     ; * DRF072
               PRO.REC<239,1>='0'        ; * DRF072
            END                          ; * DRF072
         CASE CLIENT.ID='07060'          ; * DRF098
            IF T.MODE.BY.WGT='1' THEN    ; * DRF098
               IF CARRIER.ID='02653' OR CARRIER.ID='00014' OR CARRIER.ID='00013' OR CARRIER.ID= '00212' OR CARRIER.ID='00171' THEN           ; * DRF098 ; * DRF099
                  PRO.REC<239,1>= '1000'           ; * DRF098
               END ELSE                  ; * DRF098
                  PRO.REC<239,1>='0'     ; * DRF098
               END                       ; * DRF098
            END ELSE                     ; * DRF098
               PRO.REC<239,1>='0'        ; * DRF098
            END                          ; * DRF098
         CASE CLIENT.ID='06972'          ; * DRF095
            IF T.MODE.BY.WGT='1' THEN    ; * DRF095
               PRO.REC<239,1>= '1500'    ; * DRF095
            END ELSE                     ; * DRF095
               PRO.REC<239,1>='0'        ; * DRF095
            END                          ; * DRF095

            *DF         CASE CLIENT.ID='05806'          ; * DRF077; * DRF079
            *DF            IF T.MODE.BY.WGT='1' THEN    ; * DRF077; * DRF079
            *DF               PRO.REC<239,1>= '500'    ; * DRF077; * DRF079
            *DF            END ELSE                     ; * DRF077; * DRF079
            *DF               PRO.REC<239,1>='0'        ; * DRF077; * DRF079
            *DF            END                          ; * DRF077; * DRF079

         CASE 1                          ; * NPR057
            PRO.REC<239,1>=LCC.ARRAY<5,1>*100      ; * NPR057   logistics comm % for LCC
      END CASE                           ; * NPR057
      PRO.REC<148>=UPS.FEE.CHARGE        ; * For United Parcel Service; * JMK11
      PRO.REC<150>=TL.BILL.MILES         ; * JMK12
      IF AIR.CHRG.CODES#'' THEN          ; * JMK81
         PRO.REC<151>=AIR.CHRG.CODES     ; * JMK81
         PRO.REC<152>=AIR.CHRG.AMTS      ; * JMK81

         FRT.ARRAY=''                    ; * JMK149
         MIS.ARRAY=''                    ; * JMK149
         GOSUB RECALC.FB.DETAILS         ; * JMK149
      END                                ; * NPR031
      IF INTL.CHRG.CODES#'' THEN         ; * JMK81              ; * NPR031
         PRO.REC<151>=INTL.CHRG.CODES    ; * JMK81              ; * NPR031
         PRO.REC<152>=INTL.CHRG.AMTS     ; * JMK81              ; * NPR031

         FRT.ARRAY=''                    ; * JMK149             ; * NPR031
         MIS.ARRAY=''                    ; * JMK149             ; * NPR031
         GOSUB RECALC.FB.DETAILS         ; * JMK149             ; * NPR031
      END                                ; * NPR031
      IF DTL.CHRG.CODES #'' THEN         ; * JMK81  ; * NPR031
         PRO.REC<151>=DTL.CHRG.CODES     ; * JMK12
         PRO.REC<152>=DTL.CHRG.AMTS      ; * JMK12
         PRO.REC<218>=MISC.REASON        ; * JMK157
         IF CLIENT.ID='02427' THEN       ; * DRF045
            IF PRO[LEN(PRO)-1,2]='AD' OR PRO[LEN(PRO)-1,2]='BD' THEN   ; * DRF045
               IF PRO.REC<7>=PRO.REC<8> THEN       ; * DRF045
                  IF PRO.REC<152,1>=0 THEN         ; * DRF045
                     IF PRO.REC<70>='' THEN        ; * DRF045
                        PRO.REC<70>=PRO.REC<151>   ; * DRF045
                        PRO.REC<77>=PRO.REC<152>   ; * DRF045
                        PRO.REC<79>=PRO.REC<152>   ; * DRF045
                     END                 ; * DRF045
                  END                    ; * DRF045
               END                       ; * DRF045
            END                          ; * DRF045
         END                             ; * DRF045
         FRT.ARRAY=''                    ; * JMK149
         MIS.ARRAY=''                    ; * JMK149
         GOSUB RECALC.FB.DETAILS         ; * JMK149
      END                                ; * JMK81
      IF FRT.ARRAY<1>='' THEN            ; * JMK81
         IF AIR.CHRG.CODES#'' THEN       ; * JMK81
            DTL.OUT<40>=AIR.CHRG.CODES   ; * JMK81
            DTL.OUT<44>=AIR.CHRG.AMTS    ; * JMK81
            GOSUB RECALC.FB.DETAILS      ; * JMK19
         END                             ; * JMK81
         IF INTL.CHRG.CODES#'' THEN      ; * JMK81 ; * NPR031
            DTL.OUT<40>=INTL.CHRG.CODES  ; * JMK81 ; * NPR031
            DTL.OUT<44>=INTL.CHRG.AMTS   ; * JMK81 ; * NPR031
            GOSUB RECALC.FB.DETAILS      ; * JMK19 ; * NPR031
         END                             ; * JMK81 ; * NPR031
         IF DTL.CHRG.CODES#'' THEN       ; * JMK81
            DTL.OUT<40>=DTL.CHRG.CODES   ; * JMK81
            DTL.OUT<44>=DTL.CHRG.AMTS    ; * JMK81
            GOSUB RECALC.FB.DETAILS      ; * JMK19
         END                             ; * JMK81
      END                                ; * JMK19
      FOR ATT=1 TO 6                     ; * JMK14
         PRO.REC<152+ATT>=FRT.ARRAY<ATT>           ; * JMK14
         PRO.REC<158+ATT>=MIS.ARRAY<ATT>           ; * JMK14
      NEXT ATT                           ; * JMK14
      PRO.REC<166>=DISC.DESC             ; * JMK34
      FOR UATT=1 TO 6                    ; * JMK49
         PRO.REC<182+UATT>=UFLDS<UATT>   ; * JMK49
      NEXT UATT                          ; * JMK49
      IF CLIENT.ID='02427' THEN          ; * JMK270
         IF IN.OUT='O' THEN              ; * JMK270
            IF SO.NUM#'' THEN            ; * JMK270
               PRO.REC<183>=SO.NUM       ; * JMK270
            END                          ; * JMK270
         END                             ; * JMK270
      END                                ; * JMK270
      IF CLIENT.ID='01700' THEN
         PRO.REC<183>=VC.CODE
      END
      IF CLIENT.ID = '01053' THEN        ; * NPR10
         PRO.REC<183>=BOL.ACCRUAL.COST   ; * NPR10
      END                                ; * NPR10
      IF CLIENT.ID='05706' THEN          ; * DRF073
         IF DIVISION#'' THEN             ; * DRF073
            PRO.REC<183>=DIV.REC(23)     ; * DRF073
         END                             ; * DRF073
      END                                ; * DRF073
      IF CLIENT.ID='05813' THEN          ; * DRF076
         IF CARRIER.ID='00171' THEN      ; * DRF076
            PRO.REC<183>='118138'        ; * DRF076
         END                             ; * DRF076
         IF CARRIER.ID='00212' THEN      ; * DRF076
            PRO.REC<183>='118138'        ; * DRF076
         END                             ; * DRF076
         IF CARRIER.ID='00015' THEN      ; * DRF076
            PRO.REC<183>='050200'        ; * DRF076
         END                             ; * DRF076
         IF CARRIER.ID='01075' THEN      ; * DRF076
            PRO.REC<183>='050200'        ; * DRF076
         END                             ; * DRF076
      END                                ; * DRF076
      IF CLIENT.ID='05806' THEN          ; * DRF078
         OPEN '','FB.BOL.CRX,':CLIENT.ID TO F.BOL.CRX ELSE   ; * DRF078
            CALL ELINE("Can't open FB.BOL.CRX file for client ":CLIENT.ID)       ; * DRF078
         END                             ; * DRF078
         NUM.OF.BOL.LINE=DCOUNT(PRO.REC<16>,@VM)   ; * DRF078
         FOR BOL.LINE = 1 TO NUM.OF.BOL.LINE       ; * DRF078
            SO.NUM=PRO.REC<16,BOL.LINE>  ; * DRF078
            READ DTEST FROM F.BOL.CRX,SO.NUM THEN  ; * DRF078
               PRO.REC<183>=SO.NUM       ; * DRF078
               PRO.REC<184>=DTEST<42>    ; * DRF078
               PRO.REC<185>=DTEST<43>    ; * DRF078
            END                          ; * DRF078
         NEXT BOL.LINE                   ; * DRF078
      END                                ; * DRF078
      IF CLIENT.ID='07028' THEN          ; * DRF096
         PRO.REC<183>=VC.CODE            ; * DRF096
      END                                ; * DRF096
      IF CLIENT.ID='06916' THEN
         LOCATE 'FSC' IN PRO.REC<151> SETTING FPOS THEN
            IF IN.OUT='O' THEN
               LOCATE '61030' IN PRO.REC<31> SETTING FEPOS THEN
                  PRO.REC<33,FEPOS>=PRO.REC<152,FPOS>
                  PRO.REC<33,1>=PRO.REC<8>-PRO.REC<152,FPOS>
               END ELSE
                  PRO.REC<31,-1>='61030'
                  PRO.REC<33,-1>=PRO.REC<152,FPOS>
                  PRO.REC<33,1>=PRO.REC<8>-PRO.REC<152,FPOS>
               END
            END
            IF IN.OUT='I' THEN
               LOCATE '62240' IN PRO.REC<31> SETTING FEPOS THEN
                  PRO.REC<33,FEPOS>=PRO.REC<152,FPOS>
                  PRO.REC<33,1>=PRO.REC<8>-PRO.REC<152,FPOS>
               END ELSE
                  PRO.REC<31,-1>='62240'
                  PRO.REC<33,-1>=PRO.REC<152,FPOS>
                  PRO.REC<33,1>=PRO.REC<8>-PRO.REC<152,FPOS>
               END
            END
         END
      END
      IF CLIENT.ITM<147>='89997' THEN    ; * JMK154
         UP.VC.DESC=OCONV(VC.DESC,'MCU')           ; * JMK154
         IF VC.TYPE='I' OR INDEX(UP.VC.DESC,'AIRGAS',1) THEN           ; * JMK154
            READV DEST.AG.BRANCH FROM F.ALOC.ZIP,DEST.ZIP,1 ELSE DEST.AG.BRANCH=''         ; * JMK154
            READV ORIG.AG.BRANCH FROM F.ALOC.ZIP,ORIG.ZIP,1 ELSE ORIG.AG.BRANCH=''         ; * JMK154
         END ELSE                        ; * JMK154
            ORIG.AG.BRANCH=''            ; * JMK154
            DEST.AG.BRANCH=''            ; * JMK154
         END                             ; * JMK154
         IF ORIG.AG.BRANCH='' OR DEST.AG.BRANCH='' THEN      ; * JMK154
            AG.SHIP='OTHER'              ; * JMK154
         END ELSE                        ; * JMK154
            IF ORIG.AG.BRANCH=DEST.AG.BRANCH THEN  ; * JMK154
               AG.SHIP='INTRA'           ; * JMK154
            END ELSE                     ; * JMK154
               AG.SHIP='INTER'           ; * JMK154
            END                          ; * JMK154
         END                             ; * JMK154
         *DF         PRO.REC<188>=AG.SHIP            ; * JMK154
         IF PRO.REC<184>='' THEN         ; * DRF049
            IF PRO.REC<16>#'' THEN       ; * DRF049
               READ AIRGAS.PO.REC FROM F.AIRGAS.PO,PRO.REC<16,1> ELSE AIRGAS.PO.REC=''     ; * DRF049
               IF AIRGAS.PO.REC<5>#'' THEN         ; * DRF049
                  PRO.REC<184>=AIRGAS.PO.REC<5>    ; * DRF049
               END                       ; * DRF049
               IF AIRGAS.PO.REC<6>#'' THEN         ; * DRF075
                  PRO.REC<187>=AIRGAS.PO.REC<6>    ; * DRF075
               END                       ; * DRF075
               IF AIRGAS.PO.REC<7>#'' THEN         ; * DRF075
                  PRO.REC<188>=AIRGAS.PO.REC<7>    ; * DRF075
               END                       ; * DRF075
            END                          ; * DRF049
         END                             ; * DRF049
      END                                ; * JMK154
      PRO.REC<199>=CONTR.FSC.PARMS       ; * JMK61
      PRO.REC<200>=BENCH.FSC.PARMS       ; * JMK61
      PRO.REC<201>=AFS.FSC.PARMS         ; * JMK61
      PRO.REC<202>=MISROUTE.ARRAY<3>     ; * JMK62
      IF CARR.FSC='Y' OR CARR.FSC='C' THEN         ; * JMK65 ; * JMK159
         PRO.REC<204>=BENCH.FSC.PARMS<1,7>-AFS.FSC.PARMS<1,7>          ; * JMK65
      END                                ; * JMK65
      PRO.REC<205>=BOL.DIST              ; * JMK84
      IF ORIG.ZIP MATCH('1A1N1A1N1A1N') AND (CL.BANK#'C') THEN         ; * JMK112
         PRO.REC<124>=DIDUTY<2,1>
         PRO.REC<125>=DIDUTY<2,2>
         PRO.REC<126>=DIDUTY<2,3>
         PRO.REC<127>=DIDUTY<2,4>
         PRO.REC<128>=DIDUTY<2,5>
      END
      IF DEST.ZIP MATCH('1A1N1A1N1A1N') AND (CL.BANK#'C') THEN         ; * JMK112
         PRO.REC<124>=''
         PRO.REC<125>=DODUTY<2,1>
         PRO.REC<126>=DODUTY<2,2>
         PRO.REC<127>=DODUTY<2,3>
         PRO.REC<128>=DODUTY<2,4>

      END
      IF (ORIG.ZIP MATCH ('1A1N1A1N1A1N') OR DEST.ZIP MATCH('1A1N1A1N1A1N')) AND (CL.BANK='C') THEN
         IF NOT(DEST.ZIP MATCH('1A1N1A1N1A1N')) THEN
            PRO.REC<124>=DIDUTY<2,1>
            PRO.REC<125>=DIDUTY<2,2>
            PRO.REC<126>=DIDUTY<2,3>
            PRO.REC<127>=DIDUTY<2,4>
            PRO.REC<128>=DIDUTY<2,5>
         END ELSE
            PRO.REC<124>=''
            PRO.REC<125>=DODUTY<2,1>
            PRO.REC<126>=DODUTY<2,2>
            PRO.REC<127>=DODUTY<2,3>
            PRO.REC<128>=DODUTY<2,4>
         END
      END
      PRO.REC<213>=FB.NOTE               ; * JMK111
      PRO.REC<217>=VAR.ARR<10>           ; * JMK154 - DISCOUNT CLASS
      PRO.REC<217>=VAR.ARR<11>           ; * JMK154 - OVERCHARGE CLASS WILL REPLACE ANY DISCOUNT CLASS
      PRO.REC<218>=MISC.REASON           ; * JMK157
      * Begin NKH76
      TRANSIT.TIME = AO.TRANSIT.TIME
      TT.COUNT = DCOUNT(TRANSIT.TIME,@VM)
      IF TT.COUNT > 1 THEN TRANSIT.TIME = ''
      C.SCAC = ''
      IF TRANSIT.TIME = '' AND AUDIT.TYPE = "LTLALL" THEN
         READV C.SCAC FROM F.CARRIERS, CARRIER.ID, 12 THEN
            LOCATE C.SCAC IN CC.VOUT<1> SETTING CC.POS THEN
               TRANSIT.TIME = CC.VOUT<29,CC.POS>
            END
         END
      END
      * End NKH76
*      IF TRANSIT.TIME = '' THEN GOSUB CALC.TRANSIT.TIME      ; * NPR053   NKH76
      PRO.REC<220>=TRANSIT.TIME          ; * JMK175
      PRO.REC<221>=''                    ; * JMK227
      NLCCVAL=DCOUNT(PRO.REC<146>,@VM)   ; * JMK227
      FOR LCCVAL=1 TO NLCCVAL            ; * JMK227
         VIN=''                          ; * JMK227
         VIN<1>=CLIENT.ID                ; * JMK227
         VIN<2>=PRO.REC<146,LCCVAL>      ; * JMK227
         VOUT=''                         ; * JMK227
         CALL RECALC.TRANSIT.TIME.V2(VIN,VOUT,PRO.REC,F.TABLES,F.CARRIERS,F.CS)  ; * JMK227   * NKH01
         PRO.REC<221,LCCVAL>=VOUT<2>+0   ; * JMK227
      NEXT VAL                           ; * JMK227
      NMSVAL=DCOUNT(PRO.REC<23>,@VM)     ; * JMK227
      FOR MSVAL=1 TO NMSVAL              ; * JMK227
         VIN=''                          ; * JMK227
         VIN<1>=CLIENT.ID                ; * JMK227
         VIN<2>=PRO.REC<23,MSVAL>        ; * JMK227
         VOUT=''                         ; * JMK227
         CALL RECALC.TRANSIT.TIME.V2(VIN,VOUT,PRO.REC,F.TABLES,F.CARRIERS,F.CS)  ; * JMK227  * NKH01
         PRO.REC<221,MSVAL>=VOUT<2>+0    ; * JMK227
      NEXT MSVAL                         ; * JMK227
      PRO.REC<224>=LCC.ARRAY<7>          ; * JMK159
      IF ORIG.ZIP = "99999" THEN
         ORIG.COUNTRY.CD = COUNTRY.LIST<1,1>
      END ELSE
         ORIG.COUNTRY.CD = "US"
      END
      IF LEN(ORIG.ZIP) = "6" AND ORIG.ZIP MATCH ('1A1N1A1N1A1N') THEN ORIG.COUNTRY.CD = "CA"         ; * Canada
      IF LEN(ORIG.ZIP) = "6" AND ORIG.ZIP MATCH ('5N"M"') THEN ORIG.COUNTRY.CD = "MX"      ; * Mexico
      PRO.REC<222>=ORIG.COUNTRY.CD
      IF DEST.ZIP = "99999" THEN
         DEST.COUNTRY.CD = COUNTRY.LIST<2,1>
      END ELSE
         DEST.COUNTRY.CD = "US"
      END
      IF LEN(DEST.ZIP) = "6" AND DEST.ZIP MATCH ('1A1N1A1N1A1N') THEN DEST.COUNTRY.CD = "CA"         ; * Canada
      IF LEN(DEST.ZIP) = "6" AND DEST.ZIP MATCH ('5N"M"') THEN DEST.COUNTRY.CD = "MX"      ; * Mexico
      PRO.REC<223>=DEST.COUNTRY.CD
      IF VC.OVERRIDE="Y" AND LCC.OVR.AMOUNT+0#0 THEN         ; * JMK188
         PRO.REC<227>=LCC.OVR.AMOUNT     ; * JMK188
         PRO.REC<228>=LCC.OVR.CARRIER    ; * JMK188
         PRO.REC<229>=13513              ; * JMK188
         PRO.REC<230>='NEVER'            ; * JMK188
         PRO.REC<231>='On file when reason system started'   ; * JMK188
         PRO.REC<232>='Logistics Dept'   ; * JMK188
         PRO.REC<233>=13513              ; * JMK188
         PRO.REC<234>=46800              ; * JMK188
      END                                ; * JMK188
      PRO.REC<235>=HANDLING.UNITS        ; * NPR35
      IF CLIENT.ID='30028' THEN          ; * JMK193
         PRO.REC<236>=DTAB<4>            ; * JMK193
         PRO.REC<237>=DTAB<5>            ; * JMK193
         EXP.HOLD=PRO.REC<31>            ; * JMK193
         EXP.NVAL=DCOUNT(EXP.HOLD<1>,@VM)          ; * JMK193
         FOR EXP.VAL=1 TO EXP.NVAL       ; * JMK193
            IF INDEX(EXP.HOLD<1,EXP.VAL>,'.',1) THEN         ; * JMK193
               PRO.REC<31,EXP.VAL>=FIELD(EXP.HOLD<1,EXP.VAL>,'.',1)    ; * JMK193
               PRO.REC<236,EXP.VAL>=FIELD(EXP.HOLD<1,EXP.VAL>,'.',2)   ; * JMK193
               PRO.REC<237,EXP.VAL>=FIELD(EXP.HOLD<1,EXP.VAL>,'.',3)   ; * JMK193
            END                          ; * JMK193
         NEXT VAL                        ; * JMK193
         PRO.REC<5>=PRO.REC<31,1>        ; * JMK193
         EXP.HOLD=''                     ; * JMK193
      END                                ; * JMK193
      IF BOL.ID.USED NE '' THEN          ; * JMK220
         PRO.REC<240> = BOL.ID.USED      ; * JMK220
      END                                ; * JMK220
      IF M.BOL.REC NE "" THEN            ; * NPR041
         M.BOL.REC<47> = PRO.ID          ; * NPR041
         M.BOL.REC<48> = DATE()          ; * NPR041
         M.ID.BOL.CRX = M.VOUT<1>        ; * NPR041
         IF CLIENT.ID#'05301' THEN       ; * DRF061
            IF M.ID.BOL.CRX NE "" THEN   ; * NPR058
               WRITE M.BOL.REC ON F.BOL.CRX, M.ID.BOL.CRX    ; * NPR041
               PRO.REC<240> = M.ID.BOL.CRX         ; * NPR058
            END                          ; * NPR058
         END ELSE                        ; * DRF061
            IF M.ID.BOL.CRX NE "" THEN   ; * NPR058     ; * DRF061
               IF PRO.REC<39>#'R' THEN   ; * DRF061
                  WRITE M.BOL.REC ON F.BOL.CRX, M.ID.BOL.CRX           ; * NPR041     ; * DRF061
               END                       ; * DRF061
               PRO.REC<240> = M.ID.BOL.CRX         ; * NPR058     ; * DRF061
            END                          ; * NPR058     ; * DRF061
         END                             ; * DRF061
      END                                ; * NPR041
      IF CLIENT.ID='01977' OR CLIENT.ID='01979' THEN         ; * JMK207
         IF PRO.REC<30><DATE() THEN      ; * JMK207
            PRO.REC<241>=OLD.PRO.REC<241>          ; * JMK207
            PRO.REC<242>=OLD.PRO.REC<242>          ; * JMK207
            PRO.REC<243>=OLD.PRO.REC<243>          ; * JMK207
         END                             ; * JMK207
      END                                ; * JMK207
      IF CHANGE.FLAG THEN
         IF OLD.PRO.ID#PRO.ID THEN       ; * JMK218
            GOSUB BILL.UPDATE.LOCK       ; * NKH56
            IF NOT(BILL.IS.LOCKED) OR BILL.LOCK.OVERRIDE THEN          ; * NKH56   NKH60
               WRITE OLD.PRO.ID:@FM:USER:@FM:PRO.ID:@FM:OLD.PRO.REC<8> ON F.DEL.BILLS, DATE():'*':T.TIME       ; * NPR06
               CALL UPD.FB.STATUS.UPDATE(CLIENT.ID,OLD.PRO.ID,F.STATUS.UPDATE)   ; * JMK248
               * Begin NKH04
               IF OCR.ENTRY THEN
                  USER.PREFIX = ''
                  IF POST.DUP THEN USER.PREFIX = 'DUP-'
                  IF NOT(UPDATED.IMG) THEN
                     IVIN=''
                     IVIN<1> = IMAGE
                     IVIN<2> = USER.PREFIX:USER
                     IVIN<3> = CLIENT.ID
                     IVIN<4> = 'U'
                     IVIN<5> = PRO.ID
                     IVOUT = ''          ; * NKH14
                     IF IVIN<1> > "" THEN          ; * NKH26
                        CALL SEND.IMG.UPD.REST(IVIN,IVOUT)
                        IMG.UPD := 'UPD 7'         ; * NKH14
                        GOSUB UPDATE.IMAGE.LOG     ; * NKH14
                     END                 ; * NKH26
                  END
                  IMAGE.NUMBER := 'CALL IMAGE 3'   ; * NKH LOGGING
               END
               * End NKH04
               DELETING = 1              ; * NKH60
               GOSUB BILL.UPDATE.LOCK    ; * NKH60
               DELETE F.BILLS,OLD.PRO.ID
               DELETE F.HIST,OLD.PRO.ID
               DELETE F.CRX,OLD.PRO.ID
               DELETE F.OPEN,CLIENT.ID:'*':OLD.PRO.ID
               DELETE F.PRE.OPEN,CLIENT.ID:'*':OLD.PRO.ID    ; *NPR01
            END                          ; * JMK218
         END                             ; * NKH56
      END
      IF CLIENT.ID='01977' OR CLIENT.ID='01979' THEN         ; * JMK205
         CHK.PENDING=1                   ; * JMK205
         IF CARRIER.ID='00015' THEN CHK.PENDING=0  ; * JMK205
         IF CARRIER.ID='00041' THEN CHK.PENDING=0  ; * JMK205
         IF CARRIER.ID='01075' THEN CHK.PENDING=0  ; * JMK205
         IF PRO.REC<241>#'' THEN CHK.PENDING=0     ; * JMK205 - ALREADY DECIDED
         IF CHK.PENDING THEN             ; * JMK205
            IF CHANGE.FLAG THEN          ; * JMK207
               OLD.PRO.ORG=OLD.PRO.REC   ; * JMK207
               OLD.PRO.ORG<84>=''        ; * JMK207
               OLD.PRO.ORG<85>=''        ; * JMK207
               OLD.PRO.ORG<86>=''        ; * JMK207
               OLD.PRO.ORG<282>=''       ; * NKH09
               PRO.ORG=PRO.REC           ; * JMK207
               PRO.ORG<84>=''            ; * JMK207
               PRO.ORG<85>=''            ; * JMK207
               PRO.ORG<86>=''            ; * JMK207
               PRO.ORG<282>=''           ; * NKH09
               IF OLD.PRO.ORG NE PRO.ORG THEN      ; * JMK207 ; * JMK218
                  WEB.PUSH=0             ; * JMK218
                  IF PRO.REC<39>='P' THEN WEB.PUSH=1         ; * JMK218
                  IF PRO.REC<242>#'' AND PRO.REC<241>='' THEN WEB.PUSH=1         ; * JMK218
                  IF WEB.PUSH=1 THEN     ; * JMK218
                     OPEN '','EDI.BILLS.HIST,':CLIENT.ID TO F.EDI.BILLS.HIST THEN          ; * JMK217
                        READ EDI.HIST.REC FROM F.EDI.BILLS.HIST,PRO.ID ELSE      ; * JMK217
                           EDI.HIST.REC=''         ; * JMK217
                        END              ; * JMK217
                     END ELSE            ; * JMK217
                        EDI.HIST.REC=''  ; * JMK217
                     END                 ; * JMK217
                     IF PRO.REC<242>#'' THEN       ; * JMK217
                        RVW.DATE=PRO.REC<242>      ; * JMK217
                     END ELSE            ; * JMK217
                        DAY=1            ; * Monday batch date ; * JMK217
                        TEST.DATE=PRO.REC<30>      ; * JMK217
                        DOW=OCONV(TEST.DATE,'DW')  ; * JMK217
                        RVW.DATE=TEST.DATE+DAY-DOW           ; * JMK217
                        IF RVW.DATE>TEST.DATE THEN           ; * JMK217
                           RVW.DATE-=7   ; * JMK217
                        END              ; * JMK217
                     END                 ; * JMK217
                     DIV.ID=PRO.REC<9>   ; * JMK217
                     READ DIV.ITM FROM F.DIV,DIV.ID ELSE DIV.ITM=''    ; * JMK217
                     DIV.NAME=DIV.ITM<11>          ; * JMK217
                     VC.ID=PRO.REC<17>   ; * JMK217
                     READ VC.REC FROM F.VEND.CUST,VC.ID ELSE VC.REC=''           ; * JMK217
                     CSCAC.ID=CLIENT.ID:'*':CARRIER.ID       ; * JMK217
                     READ CSCAC.REC FROM F.CSCAC,CSCAC.ID ELSE CSCAC.REC=''      ; * JMK217
                     VIN=''              ; * JMK217
                     VOUT=''             ; * JMK217
                     VIN<1>=CLIENT.ID    ; * JMK217
                     VIN<2>=RVW.DATE     ; * JMK217
                     VIN<3>=PRO.ID       ; * JMK217
                     VIN<4>=EDI.HIST.REC<72>       ; * JMK217
                     VIN<5>=USER         ; * JMK217
                     CALL UPD.SQL.FB.REVIEW(VIN,VOUT,CLIENT.ITM,CARRIER.REC,PRO.REC,DIV.ITM,VC.REC,CSCAC.REC,F.REVIEW)   ; * JMK217
                     PRO.REC<39>="P"     ; * JMK217
                     IF PRO.REC<242>='' THEN       ; * JMK217
                        PRO.REC<242>=RVW.DATE      ; * JMK217
                     END                 ; * JMK217
                     IF FWR.FLAG THEN    ; * SWB10
                        REVIEW.STATUS.CODE='970'   ; * SWB10
                        FWR.REC.CNT=0    ; * SWB10
                        FWR.REC.FOUND=1  ; * SWB10
                        LOOP             ; * SWB10
                           FWR.REC.CNT += 1        ; * SWB10
                           READU FWR.REC FROM F.WEB.REVIEW,PRO.ID:'_':FWR.REC.CNT THEN     ; * SWB10
                              RELEASE F.WEB.REVIEW,PRO.ID:'_':FWR.REC.CNT        ; * SWB10
                           END ELSE      ; * SWB10
                              FWR.REC.FOUND=0      ; * SWB10
                              FWR.REC=''           ; * SWB10
                              FWR.REC<1>=TODAY     ; * SWB10
                              FWR.REC<2>=REVIEW.STATUS.CODE  ; * SWB10
                              FWR.REC<3>=DIV.ID    ; * SWB10
                              FWR.REC<4>=PRO.REC<30>         ; * SWB10
                              REJ.INFO=PRO.REC<62>           ; * SWB10
                              FWR.REC<5>=REJ.INFO<1,1,2>     ; * SWB10
                              FWR.REC<6>=REJ.INFO<1,1,1>     ; * SWB10
                              FWR.REC<7>=PRO.REC<61>         ; * SWB10
                              FWR.REC<8>=PRO.REC<1>          ; * SWB10
                              FWR.REC<9>=PRO.REC<247>        ; * SWB10
                              IF TODAY LE CLIENT.REC(82) AND PRO.REC<30> > TODAY THEN      ; * SWB10
                                 *This bill is being sent to the web on the day the Client was processed BUT AFTER the
                                 *Client was processed. The 'AP' is being tacked on so that BUILD.DF.REVIEW.SUB will know
                                 *to include this 'transaction' on the report run the NEXT TIME Processing is done because normally
                                 *bills SENT on the previous processing day do not get reported.
                                 FWR.REC<10>='FBTWAP'        ; * SWB10
                              END ELSE   ; * SWB10
                                 *FBTW means (F)reight (B)ill Entry (t)o (W)eb (without going thru LOAD.FB.REVIEW)
                                 FWR.REC<10>='FBTW'          ; * SWB10
                              END        ; * SWB10
                              WRITE FWR.REC ON F.WEB.REVIEW,PRO.ID:'_':FWR.REC.CNT         ; * SWB10
                           END           ; * SWB10
                        UNTIL NOT(FWR.REC.FOUND) DO          ; * SWB10
                        REPEAT           ; * SWB10
                     END                 ; * SWB10
                  END                    ; * JMK218
               END                       ; * JMK207
            END                          ; * JMK207
         END                             ; * JMK205
      END                                ; * JMK205
      IF PRO.REC<244>='' AND BOL.SRC#'' THEN       ; * SWB01
         PRO.REC<244>=BOL.SRC            ; * SWB01
      END                                ; * SWB01
      * Begin NKH06
      *      IF VERSION = 0 AND UPDATE.FB.TIMELINE THEN   ; * SWB08
      *         IF BILL.MR.DATE = '' THEN       ; * SWB08
      *            *It is a NEW Freight Bill.
      *            PRO.REC<246> = MR.DATE       ; * SWB08
      *            PRO.REC<248> = ELAPSED.BIZ.DAYS        ; * SWB08
      *            TIMELINE.TRANS.TYPE = 'FN'   ; * SWB08
      *            GOSUB UPDATE.TIMELINE.SUMMARY          ; * SWB08
      *         END                             ; * SWB08
      *      END ELSE IF BILL.MR.DATE # '' THEN           ; * SWB08
      *         PRO.REC<246> = BILL.MR.DATE     ; * SWB08
      *         PRO.REC<248> = MR.TO.ENT.DAYS   ; * SWB08
      *         PRO.REC<249> = MR.TO.PROCESS.DAYS         ; * SWB08
      *      END                                ; * SWB08
      * End NKH06
      *ORIG.ENTERED.DATE should be null if it is a NEW Freight Bill
      *   OR   If the Bill was entered before approximately 05/22/12
      * when PROJ 182 was installed.
      *      IF ORIG.ENTERED.DATE # '' THEN     ; * SWB08   NKH06
      *         PRO.REC<247> = ORIG.ENTERED.DATE          ; * SWB08  NKH06
      *      END                                ; * SWB08   NKH06
      *If the Bill is being entered, we want to store Todays Date in Field
      *247. If the Bill existed and doesn't have 247 filled in, don't fill
      *it in.
      *It is vital that field 247 not be updated or changed once it has
      *been stored in the freight bill because it is part of the KEY of
      *the FB.TIMELINE.SUMMARY file. If <247> is nulled or otherwise
      *changed, IT WILL CAUSE A PROBLEM IN FB.TIMELINE.SUMMARY.
      *      IF PRO.REC<247> = '' AND ORIG.ENTERED.DATE.SAVE = '' AND OLD.PRO.REC = '' THEN PRO.REC<247> = INT.TODAY  ; * SWB08  NKH06
      IF PRO.REC<37> = '' ! VERSION GT 0 THEN
         IF CLIENT.ID # '00000' THEN
            IF OCR.ENTRY AND NOT(UPDATED.IMG) THEN
               *               IF DBCTRL<14> # 'A' THEN   ; * NKH26
               IVIN=''
               IVIN<1> = PRO.REC<280>
               IVIN<2> = USER
               IVIN<3> = CLIENT.ID
               IVIN<4> = 'U'
               IVIN<5> = PRO.ID
               IVOUT = ''                ; * NKH14
               IF IVIN<1> > "" THEN      ; * NKH26
                  CALL SEND.IMG.UPD.REST(IVIN,IVOUT)
                  IMG.UPD := 'UPD 8'     ; * NKH14
                  GOSUB UPDATE.IMAGE.LOG           ; * NKH14
               END                       ; * NKH26
            END
            GOSUB BILL.UPDATE.LOCK       ; * NKH56
            IF BILL.IS.LOCKED AND NOT(BILL.LOCK.OVERRIDE) THEN         ; * NKH56   NKH60
               IF OLD.PRO.REC<8> # PRO.REC<8> THEN           ; * NKH59
                  CALL ELINE('Bill is locked for editing - Amount cannot be changed')
                  GOTO 300               ; * NKH56
               END                       ; * NKH59
            END                          ; * NKH56
            IMAGE.NUMBER := 'CALL IMAGE 7'         ; * NKH LOGGING
            PRO.REC<288> = 'WRITE 3'     ; * NKH LOGGING
            PRO.REC<289> = IMAGE.NUMBER  ; * NKH LOGGING
            GOSUB LOCK.RECORD.UPDATE     ; * NKH60
            WRITE PRO.REC ON F.BILLS,PRO.ID
            * Begin GRB18

            IF CARRIER.REC<130> = 'Y' THEN
               GB = PRO.REC<59,1>
               GB1 = OLD.PRO.REC<59,1>
               IF GB # GB1 THEN
                  IF GB = "11" OR GB= "13" OR GB = "14" OR GB = "15" OR GB = "AU44" OR GB = "21" THEN
                     REJECT.ID = CLIENT.ID:"*":PRO.ID
                     WRITE "" ON F.REJ.EDI,REJECT.ID
                  END
               END
            END
            * End GRB18
            *            TEMP.PRO.ID = FIELD(PRO.ID,'*',2,1)[1,2]           ; * NKH28
            *            IF T.ARRAY<4,OCR.ITEM>[1,2] # TEMP.PRO.ID THEN     ; * NKH28
            *               CALL ELINE('STOP KEYING 01 - Contact Nicole, Greg or Daivd right now!')   ; * NKH28
            *            END                                                ; * NKH28
            OCR.ARR.LOG.REC<1> = T.ARRAY<3>        ; * NKH21
            OCR.ARR.LOG.REC<2> = OCR.ITEM          ; * NKH21
            OCR.ARR.LOG.REC<3> = OCR.INC           ; * NKH24
            OCR.ARR.LOG.REC<4> = T.ARRAY<4>
            OCR.ARR.KEY = CLIENT.ID:"*":PRO.ID:'*BILL*':TIME()         ; * NKH21
            IF OCR.ARR.FLAG = 'Y' THEN   ; * NKH21
               WRITE OCR.ARR.LOG.REC ON OCR.ARR.LOG, OCR.ARR.KEY       ; * NKH21
            END                          ; * NKH21
            *            OCR.INC = ''                                       ; * NKH24
         END
      END
      IF OLD.PRO.REC='' THEN
         ERR=0
         IF SU.FLAG THEN ERR=1
         IF FRT.FLAG THEN ERR=1
         IF ERR THEN
            CALL ELINE('You are entering new bills under the user ':USER:'.')
            CC+=1 ; GOSUB PRINT.CC
         END
      END
      IF PRO.REC<37>#'' THEN
         COMM.VIN=PRO.ID
         COMM.VIN<2>=CLIENT.REC(84)
         COMM.VIN<3>=CLIENT.REC(34)
         COMM.VIN<4>=CLIENT.REC(33)
         COMM.VIN<5>=CLIENT.REC(85)
         COMM.VIN<6>=CLIENT.REC(88)      ; * JMK42
         COMM.VIN<7>=CARRIER.ID
         COMM.VIN<8>=CLIENT.ID
         COMM.VIN<9>=USER
         COMM.VIN<10>=CLIENT.REC(131)
         COMM.VIN<13>=CLIENT.REC(187)    ; * JMK42
         COMM.VIN<14>=CLIENT.REC(200)    ; * JMK93
         COMM.VIN<15>=CLIENT.REC(208)    ; * JMK93
         COMM.VIN<16>=CLIENT.REC(209)    ; * JMK93
         COMM.VIN<17>=CLIENT.REC(210)    ; * JMK93
         COMM.VIN<18>=CLIENT.REC(211)    ; * JMK93
         COMM.VIN<19>=CLIENT.REC(212)    ; * JMK93
         COMM.VIN<20>=CLIENT.REC(213)    ; * JMK93
         COMM.VIN<21>=CLIENT.REC(214)    ; * JMK100
         COMM.VIN<22>=CLIENT.REC(215)    ; * JMK100
         COMM.VIN<23>=CLIENT.REC(216)    ; * JMK100
         COMM.VIN<24>=CLIENT.REC(217)    ; * JMK100
         COMM.VIN<25>=CLIENT.REC(218)    ; * JMK100
         COMM.VIN<26>=CLIENT.REC(219)    ; * JMK100
         IF BAL.DUE THEN                 ; * JMK190
            COMM.VIN<27>=OLD.OVC.COM     ; * JMK190
         END                             ; * JMK190
         COMM.VIN<28>=CLIENT.REC(268)    ; * JMK223
         CALL CALC.COMMISSION(PRO.REC,COMM.VIN,COMM.VOUT)
         DISCOUNT.COMM=COMM.VOUT<1>
         OVERCHG.COMM=COMM.VOUT<2>
         CONSULTING.COMM=COMM.VOUT<3>
         EXP.DIST.COMM=COMM.VOUT<4>
         MGMT.SVC.COMM=COMM.VOUT<5>
         MISR.CONS.COMM=COMM.VOUT<6>     ; * JMK62
         PRO.REC<42>=DISCOUNT.COMM
         PRO.REC<43>=OVERCHG.COMM
         PRO.REC<44>=CONSULTING.COMM
         PRO.REC<32>=EXP.DIST.COMM
         PRO.REC<165>=MGMT.SVC.COMM
         PRO.REC<203>=MISR.CONS.COMM     ; * JMK62 - MISR COMM FOR MISR VARIANCES
      END
      * Begin NKH04
      IF OCR.ENTRY THEN
         USER.PREFIX = ''
         IF POST.DUP THEN USER.PREFIX = 'DUP-'
         IVIN=''
         IVIN<1> = IMAGE
         IVIN<2> = USER.PREFIX:USER
         IVIN<3> = CLIENT.ID
         IVIN<4> = 'U'
         IVIN<5> = PRO.ID
         IVOUT = ''                      ; * NKH14
         IF NOT(LOCK.IMAGE) AND DBCTRL<14>='F' THEN
            IF NOT(UPDATED.IMG) THEN
               IF IVIN<1> > "" THEN      ; * NKH26
                  CALL SEND.IMG.UPD.REST(IVIN,IVOUT)
                  IMG.UPD := 'UPD 9'     ; * NKH14
                  GOSUB UPDATE.IMAGE.LOG           ; * NKH14
               END                       ; * NKH26
            END
            IMAGE.NUMBER := 'CALL IMAGE 4'         ; * NKH LOGGING
            IF REJECT.FLAG = "R" THEN
               VIN = "" ; VOUT = ""
               VIN<1> = IMAGE
               VIN<2> = "REJECTED"
               CALL SEND.IMG.PROC.REST(VIN,VOUT)
            END
         END
      END
      * End NKH04
      PRO.REC<288> = 'WRITE 4'           ; * NKH LOGGING
      PRO.REC<289> = IMAGE.NUMBER        ; * NKH LOGGING
      GOSUB LOCK.RECORD.UPDATE           ; * NKH60
      WRITE PRO.REC ON F.HIST,PRO.ID
      * Begin GRB18
      IF CARRIER.REC<130> = 'Y' THEN
         GB = PRO.REC<59,1>
         GB1 = OLD.PRO.REC<59,1>
         IF GB # GB1 THEN
            IF GB = "11" OR GB = "13" OR GB = "14" OR GB = "15" OR GB= "AU44" OR GB = "21" THEN
               REJECT.ID = CLIENT.ID:"*":PRO.ID
               WRITE "" ON F.REJ.EDI,REJECT.ID
            END
         END
      END
      * End GRB18
      OCR.ARR.LOG.REC<1> = T.ARRAY<3>    ; * NKH21
      OCR.ARR.LOG.REC<2> = OCR.ITEM      ; * NKH21
      OCR.ARR.LOG.REC<3> = OCR.INC       ; * NKH24
      OCR.ARR.LOG.REC<4> = T.ARRAY<4>
      OCR.ARR.KEY = CLIENT.ID:"*":PRO.ID:'*HIST*':TIME()     ; * NKH21
      IF OCR.ARR.FLAG = 'Y' THEN         ; * NKH21
         WRITE OCR.ARR.LOG.REC ON OCR.ARR.LOG, OCR.ARR.KEY   ; * NKH21
      END                                ; * NKH21
      OCR.INC = ''                       ; * NKH24
      CALL UPD.FB.STATUS.UPDATE(CLIENT.ID,PRO.ID,F.STATUS.UPDATE)      ; * JMK248
      ACCESS.REASON = "CNG"              ; * NKH36
      GOSUB UPD.FB.BILLS.ACCESS          ; * NPR042
      IF PRO.REC<39>='R' THEN
         SEND.TO.PER=''
         SUBJ.TO.PER='Reject Notification'
         YY = DCOUNT(PRO.REC<59>,@VM)
         IF USER='DAVID' THEN CALL ELINE('CHECK FOR EMAIL')
         FOR ZZ = 1 TO YY
            IF PRO.REC<60,ZZ,2> = DATE() THEN
               LOCATE PRO.REC<59,ZZ> IN REJECT.CODES<1> SETTING ZZ.POS THEN
                  IF REJECT.CODES<3,ZZ.POS>#'' THEN
                     LOCATE OCONV(REJECT.CODES<3,ZZ.POS>,'MCU') IN SEND.TO.PER<1> SETTING YY.POS ELSE
                        SEND.TO.PER<1,-1>=OCONV(REJECT.CODES<3,ZZ.POS>,'MCU')
                     END
                  END
                  IF PRO.REC<59,ZZ>='AU243' THEN
                     LOCATE 'KKRIVJANSKY@AFS.NET' IN SEND.TO.PER<1> SETTING YY.POS ELSE
                        SEND.TO.PER<1,-1>='KKRIVJANSKY@AFS.NET'
                     END
                  END
               END
            END
         NEXT ZZ
         IF SEND.TO.PER#'' THEN
            NUM.OF.EMAIL = DCOUNT(SEND.TO.PER<1>,@VM)
            FOR YY = 1 TO NUM.OF.EMAIL
               MVIN=''
               SUBJ=SUBJ.TO.PER
               FBVIN=''
               FBVIN<1>=PROG.NAME
               FBVIN<2>=PROG.DESC
               FBVIN<3>=PACK.NAME
               FBVIN<4>=CO.NAME
               FBVIN<5>=OCONV(TIME(),'MTH'):' ':OCONV(DATE(),'D2/')
               FBVIN<6>=CLIENT.ID
               FBVIN<7>=CARRIER.ID
               FBVIN<8>=PRO.ID
               FBVOUT=''
               CALL GET.FB.INFO.R(FBVIN,FBVOUT,CLIENT.ITM,CARRIER.REC,PRO.REC,F.TABLES)    ; * GRB002
               TEXT=FBVOUT
               MVIN=''
               MVIN<1>=SEND.TO.PER<1,YY>
               MVIN<4>='AFS'
               MVIN<5>=SUBJ
               MVIN<6>=TEXT
               CALL SENDMAIL(MVIN,MVOUT)
            NEXT YY
         END
      END
      LOCATE 'MISC' IN PRO.REC<151> SETTING MPOS THEN        ; * JMK157
         OLD.MISC.CNT=COUNT(OLD.PRO.REC<151>,'MISC')         ; * JMK158
         NEW.MISC.CNT=COUNT(PRO.REC<151>,'MISC')   ; * JMK158
         IF NEW.MISC.CNT>OLD.MISC.CNT THEN         ; * JMK158
            SLSMAN.NAME=SALESMAN.REC<1>  ; * JMK157
            DISC.AMT=-PRO.REC<10>        ; * JMK157
            VIN<1>=PROG.NAME             ; * JMK157
            VIN<2>=PROG.DESC             ; * JMK157
            VIN<3>=PACK.NAME             ; * JMK157
            VIN<4>=CO.NAME               ; * JMK157
            VIN<5>=OCONV(TIME(),'MTH'):' ':OCONV(DATE(),'D2/')         ; * JMK157
            VIN<6>=CLIENT.ID             ; * JMK157
            VIN<7>=CARRIER.ID            ; * JMK157
            VIN<8>=PRO.ID                ; * JMK157
            VOUT=''                      ; * JMK157
            CALL GET.FB.INFO(VIN,VOUT,CLIENT.ITM,CARRIER.REC,PRO.REC,F.TABLES)   ; * JMK157
            MESSAGE='On ':oconv(DATE(),'D2/'):' at ':OCONV(TIME(),'MTHS'):', ':USER.NAME:' entered a MISC code in the FB Details for:'       ; * JMK157
            MESSAGE<1,-1>=' '            ; * JMK157
            MESSAGE<1,-1>=VOUT           ; * JMK157
            SUBJECT=CLIENT.NAME:' - ':CLIENT.ID:', ':SLSMAN.NAME:', ':PRO.ID:' MISC FB Details'      ; * JMK157
            FROM_ADD='FB_Entry@afs.net'  ; * JMK157
            TO_ADD=''                    ; * JMK157
            CC_ADD=''                    ; * JMK157
            BCC_ADD=''                   ; * JMK157
            TO_ADD<1,-1>='McMkay@afs.net'          ; * JMK157
            EMAIL.OUT=''                 ; * JMK157
            EMAIL.OUT<1>=TO_ADD          ; * JMK157
            EMAIL.OUT<2>=CC_ADD          ; * JMK157
            EMAIL.OUT<3>=BCC_ADD         ; * JMK157
            EMAIL.OUT<4>=FROM_ADD        ; * JMK157
            EMAIL.OUT<5>=SUBJECT         ; * JMK157
            EMAIL.OUT<6>=MESSAGE         ; * JMK157
            EMAIL.OUT<7>=1               ; * JMK157
            CALL SENDMAIL(EMAIL.OUT,RESULT)        ; * JMK157
         END                             ; * JMK158
      END                                ; * JMK157
      IF CLIENT.ID='00664' THEN          ; * JMK105
         EXP.LIST=PRO.REC<31>            ; * JMK105
         GOOD.TO.GO=1                    ; * JMK105
         NEXP=DCOUNT(EXP.LIST,@VM)       ; * JMK105
         IF ORIG.ZIP='' THEN GOOD.TO.GO=0          ; * JMK105
         IF DEST.ZIP='' THEN GOOD.TO.GO=0          ; * JMK105
         IF IN.OUT='' THEN GOOD.TO.GO=0  ; * JMK105
         IF VC.ID='' THEN GOOD.TO.GO=0   ; * JMK105
         IF EXP.LIST='' THEN GOOD.TO.GO=0          ; * JMK105
         IF NEXP > 1 THEN GOOD.TO.GO=0   ; * JMK105
         IF GOOD.TO.GO THEN              ; * JMK105
            EXP.MAT.ID=ORIG.ZIP:'*':DEST.ZIP:'*':IN.OUT:'*':VC.ID      ; * JMK105
            READU EXP.MAT.REC FROM F.EXP.MAT,EXP.MAT.ID ELSE EXP.MAT.REC=''      ; * JMK105
            EXP.MAT.ORG=EXP.MAT.REC      ; * JMK105
            LOCATE EXP.LIST IN EXP.MAT.REC<1> SETTING EPOS ELSE        ; * JMK105
               EXP.MAT.REC<1,-1>=EXP.LIST          ; * JMK105
            END                          ; * JMK105
            IF EXP.MAT.REC#EXP.MAT.ORG THEN        ; * JMK105
               WRITE EXP.MAT.REC ON F.EXP.MAT,EXP.MAT.ID     ; * JMK105
            END                          ; * JMK105
            RELEASE F.EXP.MAT,EXP.MAT.ID           ; * JMK105
         END                             ; * JMK105
      END                                ; * JMK105
      GOSUB GET.ALLOW.DISCOUNTS          ; * JMK34
      IF ALLOW.DISCOUNTS=0 AND PRO.REC<10>+0#0 AND VERSION=0 THEN      ; * JMK34; * JMK38
         SLSMAN.NAME=SALESMAN.REC<1>     ; * JMK34
         DISC.AMT=-PRO.REC<10>           ; * JMK34
         VIN<1>=PROG.NAME                ; * JMK34
         VIN<2>=PROG.DESC                ; * JMK34
         VIN<3>=PACK.NAME                ; * JMK34
         VIN<4>=CO.NAME                  ; * JMK34
         VIN<5>=OCONV(TIME(),'MTH'):' ':OCONV(DATE(),'D2/')  ; * JMK34
         VIN<6>=CLIENT.ID                ; * JMK34
         VIN<7>=CARRIER.ID               ; * JMK34
         VIN<8>=PRO.ID                   ; * JMK34
         VOUT=''                         ; * JMK34
         CALL GET.FB.INFO(VIN,VOUT,CLIENT.ITM,CARRIER.REC,PRO.REC,F.TABLES)      ; * JMK34
         MESSAGE=VOUT                    ; * JMK34
         MESSAGE<1,-1>=' '               ; * JMK34
         MESSAGE<1,-1>='Explanation to management for discount : ':DISC.DESC     ; * JMK34 ; * JMK58
         SUBJECT=CLIENT.NAME:'/':CARRIER.NAME:', ':SLSMAN.NAME:', ':CL.AUDITOR:' for $':DISC.AMT'R26,'         ; * JMK34 ; * JMK204
         FROM_ADD='CustomerService@afs.net'        ; * JMK34
         TO_ADD=''                       ; * JMK34
         CC_ADD=''                       ; * JMK34
         BCC_ADD=''                      ; * JMK34
         TO_ADD<1,-1>=USER.EMAIL         ; * JMK34
         CC_ADD<1,-1>='BBarker@afs.net'  ; * JMK34
         CC_ADD<1,-1>='WPardue@afs.net'
         *DF         CC_ADD<1,-1>='DFriend@afs.net'
         EMAIL.OUT=''                    ; * JMK34
         EMAIL.OUT<1>=TO_ADD             ; * JMK34
         EMAIL.OUT<2>=CC_ADD             ; * JMK34
         EMAIL.OUT<3>=BCC_ADD            ; * JMK34
         EMAIL.OUT<4>=FROM_ADD           ; * JMK34
         EMAIL.OUT<5>=SUBJECT            ; * JMK34
         EMAIL.OUT<6>=MESSAGE            ; * JMK34
         EMAIL.OUT<7>=1                  ; * JMK34
         CALL SENDMAIL(EMAIL.OUT,RESULT)           ; * JMK34
      END                                ; * JMK34
      IF LOOKUP.ONLY THEN
         IF CARRIER.REC<89>='I' THEN
            IF PRO[PRO.LEN-1,2]='AD' OR PRO[PRO.LEN-1,2]='BD' THEN
               FBVIN=''
               FBVIN<1>=PROG.NAME
               FBVIN<2>=PROG.DESC
               FBVIN<3>=PACK.NAME
               FBVIN<4>=CO.NAME
               FBVIN<5>=OCONV(TIME(),'MTH'):' ':OCONV(DATE(),'D2/')
               FBVIN<6>=CLIENT.ID
               FBVIN<7>=CARRIER.ID
               FBVIN<8>=PRO.ID
               FBVOUT=''
               CALL GET.FB.INFO(FBVIN,FBVOUT,CLIENT.ITM,CARRIER.REC,PRO.REC,F.TABLES)
               NTEXT=FBVOUT
               NTEXT<1,-1>=' '
               MVIN=''
               MVIN<1>='MButts@afs.net'
               MVIN<2>='OHolman@afs.net'
               MVIN<4>='AFS'
               SUBJ=USER:' entered a bill for an inactive carrier.'
               MVIN<5>=SUBJ
               MVIN<6>=NTEXT
               CALL SENDMAIL(MVIN,MVOUT)
            END
         END
      END
      IF USER='DAVID' THEN
         CRT @(0,23):'Owen press break!':
         INPUT NUL
      END
      VIN=USER                           ; * User 'MCU' That Gets Credit
      VIN<2>=TIME()                      ; * Current Time
      VIN<3>=DATE()                      ; * Bill Date (Use Today)
      VIN<4>='E'                         ; * "E"ntered
      VIN<5>=CLIENT.ID                   ; * Client entered
      VIN<6>=CC                          ; * Characters Keyed
      IF OLD.PRO.REC='' THEN VIN<7>=1    ; * New Bill (Not Changed)
      IF OLD.PRO.REC<39>='R' AND PRO.REC<39>#'R' THEN VIN<7>=1         ; * Give them Credit for "Approving" a rejected bill
      VIN<8>=LAST.CLIENT.KEYED
      VIN<9>=CLIENT.START.TIME
      VIN<10>=CHR.START.TIME             ; * JMK27
      VIN<11>=TIME()                     ; * JMK27
      CALL EMP.PERF.UPDATE(VIN,VOUT,F.EMP.HR.PERF,F.EMP.DY.PERF)
      LAST.CLIENT.KEYED=VOUT
      IF CLIENT.ID = '00000' THEN
      END
      CC=0
      CHR.START.TIME=TIME()              ; * JMK27
      IF CHANGED.TO.EVENTUAL.PAY THEN
         READ TPRO.REC FROM F.BILLS,PRO.ID ELSE TPRO.REC = PRO.REC     ; * NPR14
         TPRO.REC<66> = "E"              ; * NPR14
         TPRO.REC<37> = ""               ; * NPR14
         TPRO.REC<288> = 'WRITE 5'       ; * NKH LOGGING
         TPRO.REC<289> = IMAGE.NUMBER    ; * NKH LOGGING
         WRITE TPRO.REC TO F.BILLS, PRO.ID         ; * NPR14
      END
      IF CHANGED.TO.AUDIT.REVIEW THEN
         PRO.REC<288> = 'WRITE 6'        ; * NKH LOGGING
         PRO.REC<289> = IMAGE.NUMBER     ; * NKH LOGGING
         GOSUB LOCK.RECORD.UPDATE        ; * NKH60
         WRITE PRO.REC TO F.BILLS, PRO.ID
         OCR.ARR.LOG.REC<1> = T.ARRAY<3>           ; * NKH21
         OCR.ARR.LOG.REC<2> = OCR.ITEM   ; * NKH21
         OCR.ARR.LOG.REC<3> = OCR.INC    ; * NKH24
         OCR.ARR.LOG.REC<4> = T.ARRAY<4>
         OCR.ARR.KEY = CLIENT.ID:"*":PRO.ID:'*BILL*':TIME()  ; * NKH21
         IF OCR.ARR.FLAG = 'Y' THEN      ; * NKH21
            WRITE OCR.ARR.LOG.REC ON OCR.ARR.LOG, OCR.ARR.KEY          ; * NKH21
         END                             ; * NKH21
         *         OCR.INC = ''                                       ; * NKH24
      END
      IF CARRIER.ID = '00041' THEN
         ACTIVITY.CODE = 1
         ACT.TRANS.DATE = BILL.DATE
         GOSUB UPD.UPS.SCHED
         IF PMT.DUE.DATE = "" THEN PMT.DUE.DATE = BILL.DATE + 11       ; * Default For UPS only if all other Due Date calcs failed. ;* NPR047
         ACTIVITY.CODE = 2
         ACT.TRANS.DATE = PMT.DUE.DATE
         GOSUB UPD.UPS.SCHED
      END
      IF CHANGE.FLAG THEN
         IF PRO.REC<37> # '' THEN
            READ DFOX FROM F.FOX,PRO.REC<37> ELSE DFOX=''
            FOX.ID=CLIENT.ID:"*":OLD.PRO.ID
            LOCATE FOX.ID IN DFOX SETTING POS THEN
               DEL DFOX<POS>
            END
            IF PRO.REC<8>#0 THEN
               READ PRE.TEST.REC FROM F.PRE.OPEN,CLIENT.ID:'*':PRO.ID ELSE PRE.TEST.REC=''           ; * JMK213
               READ TEST.REC FROM F.OPEN,CLIENT.ID:'*':PRO.ID ELSE TEST.REC=''   ; * JMK213
               DFOX<-1>=CLIENT.ID:"*":PRO.ID
               IF PRO.REC<14>='' THEN
                  WRITE DFOX ON F.FOX,PRO.REC<37>
                  PRO.REC<133>=DOPEN.REC<133>
                  PRO.REC<134>=DOPEN.REC<134>
                  PRO.REC<135>=DOPEN.REC<135>
                  IF PRE.TEST.REC#'' THEN          ; * JMK213
                     GOSUB LOCK.RECORD.UPDATE      ; * NKH60
                     WRITE PRO.REC ON F.PRE.OPEN,CLIENT.ID:'*':PRO.ID  ; * JMK213
                  END                    ; * JMK213
                  IF TEST.REC#'' THEN    ; * JMK213
                     GOSUB LOCK.RECORD.UPDATE      ; * NKH60
                     WRITE PRO.REC ON F.OPEN,CLIENT.ID:'*':PRO.ID
                  END                    ; * JMK213
               END
            END ELSE
               DELETE F.OPEN,CLIENT.ID:'*':PRO.ID
               DELETE F.PRE.OPEN,CLIENT.ID:'*':PRO.ID        ; * Check if OK
               IF CARRIER.ID = "00642" OR CARRIER.ID = "03029" OR CARRIER.ID = "08519" OR CARRIER.ID="23288" THEN        ; *NPR09
                  GOSUB SEND.ZERO.EMAIL  ; *NPR09
               END                       ; *NPR09
            END
            CHANGE = (PRO.REC<8>+PRO.REC<42>+PRO.REC<43>+PRO.REC<44>)-(OLD.PRO.REC<8>+OLD.PRO.REC<42>+OLD.PRO.REC<43>+OLD.PRO.REC<44>)
            IF (PRO.REC<8>#OLD.PRO.REC<8>) OR (PRO.REC<10>#OLD.PRO.REC<10>) OR (PRO.REC<11>#OLD.PRO.REC<11>) OR (PRO.REC<12>#OLD.PRO.REC<12>) THEN
               GOSUB WRITE.MODS
            END
         END
      END
      * Update Fedex invoice file
      IF VERSION=0 THEN
         IF PRO.REC<94>#'' THEN
            READ DINV.XREF FROM F.INV.XREF,PRO.REC<94> ELSE DINV.XREF=''
            LOCATE PRO.ID IN DINV.XREF BY 'AR' SETTING INV.POS ELSE
               INS PRO.ID BEFORE DINV.XREF<INV.POS>
               WRITE DINV.XREF ON F.INV.XREF,PRO.REC<94>
            END
         END
         IF CHANGE.FLAG THEN
            IF OLD.PRO.ID#PRO.ID OR OLD.INV#PRO.REC<94> THEN
               IF OLD.INV#PRO.REC<94> THEN
                  READ DINV.XREF FROM F.INV.XREF,OLD.INV THEN
                     LOCATE OLD.PRO.ID IN DINV.XREF BY 'AR' SETTING INV.POS THEN
                        DEL DINV.XREF<INV.POS>
                        IF DINV.XREF='' THEN
                           DELETE F.INV.XREF,OLD.INV
                        END ELSE
                           WRITE DINV.XREF ON F.INV.XREF,OLD.INV
                        END
                     END
                  END
               END ELSE
                  IF OLD.PRO.ID#PRO.ID THEN
                     READ DINV.XREF FROM F.INV.XREF,PRO.REC<94> THEN
                        LOCATE OLD.PRO.ID IN DINV.XREF BY 'AR' SETTING INV.POS THEN
                           DEL DINV.XREF<INV.POS>
                           IF DINV.XREF='' THEN
                              DELETE F.INV.XREF,PRO.REC<94>
                           END ELSE
                              WRITE DINV.XREF ON F.INV.XREF,PRO.REC<94>
                           END
                        END
                     END
                  END
               END
            END
         END
      END
      * Update freight bill cross reference (skeletal) record
      IF SEQ.FLAG ELSE
         REC = ''
         REC<1> = CLIENT.ID
         REC<2> = BILL.DATE
         REC<7> = PRO.REC<7>
         REC<8> = PRO.REC<8>
         REC<10> = PRO.REC<10>
         REC<11> = PRO.REC<11>
         REC<12> = PRO.REC<12>
         REC<30> = PRO.REC<30>
         REC<37> = PRO.REC<37>
         REC<39> = PRO.REC<39>
         REC<41> = PRO.REC<41>
         REC<53> = PRO.REC<53>
         REC<54> = PRO.REC<54>
         REC<55> = PRO.REC<55>
         REC<63> = PRO.REC<63>
         IF CLIENT.ID[1,2]='99' ELSE
            WRITE REC ON F.CRX,PRO.ID
         END
      END
      IF PRO.REC<37>#'' THEN             ; * JMK82
         STMT='COGNOS OLEDBAFS ':CLIENT.ID:' ':PRO.REC<37>'D2/':' ':PRO.REC<37>'D2/':' ':PRO.ID      ; * JMK82
         EXECUTE STMT                    ; * JMK82
         OPEN '','EDI.BILLS.HIST,':CLIENT.ID TO F.EDI.BILLS.HIST THEN  ; * JMK145
            READ EDI.HIST.REC FROM F.EDI.BILLS.HIST,PRO.ID ELSE        ; * JMK145
               EDI.HIST.REC=''           ; * JMK145
            END                          ; * JMK145
         END ELSE                        ; * JMK145
            EDI.HIST.REC=''              ; * JMK145
         END                             ; * JMK145
         IF CL.DIV.FLAG='Y' THEN         ; * JMK145
            READ DIV.ITM FROM F.DIV,DIVISION ELSE DIV.ITM=''           ; * JMK145
         END ELSE                        ; * JMK145
            DIV.ITM=''                   ; * JMK145
         END                             ; * JMK145
         SQLVIN=''                       ; * JMK145
         SQLVIN<1>=USER                  ; * JMK145
         SQLVIN<2>=CLIENT.ID             ; * JMK145
         SQLVIN<3>=PRO.ID                ; * JMK145
         SQLVIN<5>=LI.CODES<1>           ; * JMK145
         SQLVIN<6>=LI.CODES<3>           ; * JMK145
         SQLVOUT=''                      ; * JMK145
         CALL UPD.SQL.FBHIST.SUB(SQLVIN,SQLVOUT,CLIENT.ITM,DIV.ITM,VC.REC,PRO.REC,EDI.HIST.REC)      ; * JMK145
      END                                ; * JMK82
      RETURN

*****************************************************************
INITIALIZE.GENERAL.VARIABLES:***
*****************************************************************
      BELL=CHAR(7)
      SENT.TO.PCMILER=0
      CARRIER.NAME='' ; CARRIER.STREET='' ; CARRIER.CITY=''
      CARRIER.STATE=''
      TRANS.MODE='' ; MISC.CHARGE='' ; T.MODE.BY.WGT=''
      DATE.BY.CARRIER=0
      START.DATE=''
      OVERCHARGE.DATE=''
      PROMPT''
      LAST.PRO=''                        ; * The Last Pro Number you were looking at
      LAST.ORIG.ZIP=''
      LAST.ORIG.CITY=''
      LAST.ORIG.STATE=''
      LAST.DEST.ZIP=''
      LAST.DEST.CITY=''
      LAST.DEST.STATE=''
      SU.FLAG=0
      FRT.FLAG=0
      AD.BD.FLAG=0
      PROG.NAME='FB.2.1.NW'
      PROG.DESC='FREIGHT BILL ENTRY'     ; * NKH36
      PACK.NAME='FREIGHT BILLING'
      ****      CALL CHANNEL(CH.NUM)
      CALL GET.USER.NEW(USER,CH.NUM)
      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'FB.2.1.NW' ; UPL.VOUT = ''      ; * NPR_UPL 04/23/2010
      UPL.VIN<3> = USER                  ; * NKH01
      UPL.VIN<4> = CH.NUM                ; * NKH01
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)       ; * NPR_UPL 04/23/2010
      OWEN=0
      SPECIAL.NIKKI.VACATION=0
      IF USER='DAVID' THEN SPECIAL.NIKKI.VACATION=1
      *      INT.TODAY = DATE()                 ; * SWB08   NKH06
      *      TODAY.DOW = OCONV(INT.TODAY, 'DW')           ; * SWB08  NKH06
      TRUE = 1                           ; * SWB08
      FALSE = 0                          ; * SWB08
      CO.NAME='AFS, LLC'
      EXP.DIST='' ; BAL.DUE=0 ; CLIENT.ID=''
      CLIENT.NAME='' ; CARRIER.ID=''
      PRO.REC=''
      BACK.FLAG=0 ; CHANGE.FLAG=0 ; VOIDED=0 ; DELETE.FLAG=0
      F.DIV=''
      NOT.PROCESSED=0
      MAT DIV.REC=''
      MAT CHECK.REC=''
      NUM.EQUIP.TYPES=0
      MAT CLIENT.REC=''
      CLIENT.ITM=''                      ; *GRB
      EXP.CODE.XREF=0
      USER.MODIFY=1
      INV.NUM=''
      NUM.OF.PRO=0
      TOT.NUM.OF.PRO=0
      CC=0                               ; * Initalize Character Count to Zero
      CHR.START.TIME=TIME()              ; * JMK27
      CL.STATUS = ""                     ; * NPR08
      PRE.AUD.FROM.DT = ""               ; * NPR08
      PRE.AUD.TO.DT = ""                 ; * NPR08
      NEW.AUDITOR.TEXT = ""              ; * NPR08
      ACCT.MGR = ''                      ; * NPR08
      ACCT.MGR.NAME = ''                 ; * NPR08
      ACCT.MGR.EMAIL = ''                ; * NPR08
      HLB = '' ; HLA = ''                ; * NPR13
      CBVOUT=''
      ORIG.ON.FILE = ''
      HUSSEY.ERRORS = 0                  ; * NPR021
      M.BOL.REC = ''                     ; *NPR028
      AFS.BOL=0                          ; * JAD02
      ID.BOL.CRX = ''                    ; *NPR028
      ID.BOL.CRX2 = ''                   ; *NPR028
      BOL.POP.VER.ARR = ''               ; *NPR777
      RTN.FROM.VC=0
      BDA.FLAG = 0                       ; * NPR030211
      TRANSIT.TIME = ''                  ; * NKH76
      AO.TRANSIT.TIME = ''               ; * NKH76
      APPROVE.BILL=0                     ; * NKH80
      * Begin NKH06
      *      DOW.NAMES = 'Monday':@FM:'Tuesday':@FM:'Wednesday':@FM:'Thursday':@FM:'Friday'       ; * SWB08
      *      SESSION.UPDATE.FB.TIMELINE = FALSE           ; * SWB08
      *      SESSION.MR.DISP.STR = STR('-', 23)           ; * SWB08
      *      MR.DISP.STR = ''                   ; * SWB08
      *      MR.DOW = ''                        ; * SWB08
      *      MR.DATE = ''                       ; * SWB08
      * End NKH06

      RETURN

*****************************************************************
INITIALIZE.BILL.VARIABLES:
*****************************************************************
      REJECTS.DISPLAYED = 0              ; * NKH38
      BILL.IS.LOCKED = 0                 ; * NKH56
      QV.VALID=0                         ; * JMK24
      DISC.DESC=''                       ; * JMK34
      AUDIT='N'
      AMOUNT.MATCH=''
      IF CLIENT.ID='' THEN
         AUDITOR.TEXT=''
      END ELSE
         AUDITOR.TEXT = CL.AUDITOR       ; * NPR08
      END
      NEW.AUDITOR.TEXT = ''              ; * NPR08
      RULES.OUTPUT = '0'                 ; *NPR08
      PRO='' ; BILL.DATE='' ; DUE.DATE='' ; PROC.DATE=''
      PMT.DUE.DATE = ''                  ; * NPR048
      IN.OUT='' ; DIVISION='' ; MISSING.DATA=''
      EXP.CODE='' ; VC.DESC='' ; EXP.CODE.DESC='' ; BOL='' ; BOL.DIST=''         ; * JMK84
      EXP.CCTR='' ; EXP.PROJ=''          ; * JMK193
      WEIGHT='' ; CARRIER.CHG='' ; ACTUAL.CHG='' ; VARIANCE=''
      VAR.ARR='' ; DTAB='' ; CHECK.NUM='' ; ZIP.ARR=''
      CHECK.AMT='' ; CHECK.DATE=''
      ORIG.ZIP='' ; DEST.ZIP='' ; ORIG.CITY='' ; DEST.CITY=''
      ORIG.STATE='' ; DEST.STATE='' ; VOID.DESC='' ; MILEAGE=''
      DISC.DET='' ; DISC.PERC=0 ; DISC.FLAG='' ; MIN.CHG=''
      VAR.REC='' ; CLASS='' ; BANK.ID='' ; AIR.PIECES='' ; VC.REC = ''
      HANDLING.UNITS = ''                ; * NPR035
      BOL.ID.USED = ''                   ; * NPR058
      DIM.WEIGHT='' ; AIR.CHRG.CODES='' ; AIR.CHRG.AMTS='' ; SERVICE.LEVEL=''
      INTL.CHRG.CODES = '' ; INTL.CHRG.AMTS = ''   ; * NPR031
      CLASSES='' ; WEIGHTS=''
      *      IMAGE = ''   ; * NKH04
      *      RVCD.DATE=''                       ; * NKH06   * NKH13
      AUDITOR.VIEWED=''
      MISC.CHG.CODES='' ; CONTR.MISC.CHG.AMTS='' ; BENCH.MISC.CHG.AMTS=''
      AIR.CHRG.CODES='' ; AIR.CHRG.AMTS=''         ; * JMK148
      INTL.CHRG.CODES='' ; INTL.CHRG.AMTS=''       ; * NPR031
      DTL.CHRG.CODES='' ; DTL.CHRG.AMTS=''         ; * JMK148
      MISC.REASON=''                     ; * JMK157
      FRT.ARRAY='' ; MIS.ARRAY=''        ; * JMK148
      AVOUT=''                           ; * JMK149
      CONTR.FSC.PARMS='' ; BENCH.FSC.PARMS='' ; AFS.FSC.PARMS=''       ; * JMK61
      VERIFIED='' ; AUDITOR=''
      CUST.VEND.ADDR=''
      MISROUTE.AMOUNT='' ; VC.CODE='' ; VC.ID='' ; VC.OVERRIDE=''
      VC.TYPE=''                         ; * JMK28
      VC.REJECT=0                        ; * JMK28
      WT.REJECT=0
      MISROUTE.CARRIER='' ; MISROUTE.NAME=''
      LCC.AMOUNT=''
      LCC.CARRIER=''
      LCC.OVR.AMOUNT=''                  ; * JMK188
      LCC.OVR.CARRIER=''                 ; * JMK188
      LCC.NAME=''
      LCC.ARRAY=''
      MISROUTE.ARRAY=''
      TRANS.MODE='' ; MISC.CHARGE=''
      MAILING.ADDR=''
      REJECT.REASONS=''
      REJECT.FLAG=''
      REJECTION.ALTERED=''
      VERSION=''
      ENTRY.DATE=''
      NUM.MULTI.PROS=0                   ; * Number of Multiple Pros from Reject System
      MULTI.PRO.ID=''                    ; * (MV) Pro ID(s) from Reject system
      MULTI.PRO.CHG=''                   ; * (MV) (ACTUAL)Carrier Amount(s) from Reject System
      MULTI.PRO.DATE=''                  ; * (MV) Bill Date(s) from Reject System
      MULTI.PRO.REJ=''                   ; * (MV) Rejection Type(s) from Reject System
      REJ.TYPE=''                        ; * Rejection Type from Reject System
      REJ.PAYIT=''                       ; * JMK231
      BILL.STATUS='4'
      BOL.SRC=''                         ; * SWB02
      OVERRIDE.STATUS=''
      OLA.AMT=''
      OVERRIDE.FIELD=''
      OVERRIDE.OPERATOR=''
      OVERRIDE.INFO=''
      FLAT.RATE=0
      DIFFERENCE=''
      OLD.CLASS=''
      ORIG.EXP.CODE=''
      MULTI.CODE=''
      MULTI.PERCENT=''
      ADDRESS.CORRECTION.CHARGE=0        ; * This value is used for UPS and placed in PRO.REC<123>
      UPS.FEE.CHARGE=0                   ; * This value is used for UPS and placed in PRO.REC<148>; * JMK11
      FRT.ARRAY=''                       ; * JMK19
      MIS.ARRAY=''                       ; * JMK19
      AVOUT=''                           ; * JMK149
      TL.BILL.MILES=''                   ; * JMK12
      DTL.OUT=''                         ; * JMK18
      DIDUTY=''
      DODUTY=''
      PREV.SELECTED=''
      BEEN.THRU=0
      LCC.AMOUNT=''
      UFLDS=''                           ; * JMK49
      COVERAGE.CERT.NUM=''               ; * DRF102
      COVERAGE.AMOUNT=''                 ; * DRF102
      FIRST.TIME.THRU=1
      FB.NOTE=''                         ; * JMK111
      BOL.ACCRUAL.COST = ""              ; * NPR10
      ADD.NOTE.REC = ""                  ; * NPR12
      CHANGED.TO.EVENTUAL.PAY = 0        ; * NPR14
      CHANGED.TO.AUDIT.REVIEW = 0
      TRANSIT.TIME=''                    ; * JMK175
      CAPACITY.LOAD=''
      *****      CHECK.FOR.CAPACITY=1
      CHECK.FOR.CAPACITY=0
      VC.REC = ''
      COUNTRY.LIST = ""                  ; *NPR020
      ORIG.COUNTRY.CD = ""               ; *NPR020
      ORIG.COUNTRY.NAME = ""             ; *NPR020
      DEST.COUNTRY.CD = ""               ; *NPR020
      DEST.COUNTRY.NAME = ""             ; *NPR020
      ENTERED.BY = ''                    ; *NPR024
      VERIFIED.BY = ''                   ; *NPR024
      ACCESS.REASON = ''                 ; *NPR042
      *      BILL.MR.DISP.STR = ''              ; * SWB08   NKH06
      *For the upcoming Freight Bill, set the 'TIMELINE TRACKING' variable
      *to true or false based on whether the Tracking is on FOR THE SESSION
      *      UPDATE.FB.TIMELINE = SESSION.UPDATE.FB.TIMELINE        ; * SWB08 NKH06
      *      BILL.MR.DATE = ''                  ; * SWB08   NKH06
      * Begin NKH06
      *      MR.TO.ENT.DAYS = ''                ; * SWB08
      *      MR.TO.PROCESS.DAYS = ''            ; * SWB08
      *      ORIG.ENTERED.DATE = ''             ; * SWB08
      *      BILL.MR.DATE.SAVE = ''             ; * SWB08
      *      MR.TO.ENT.DAYS.SAVE = ''           ; * SWB08
      *      MR.TO.PROCESS.DAYS.SAVE = ''       ; * SWB08
      *      ORIG.ENTERED.DATE.SAVE = ''        ; * SWB08
      *      PROCESSED.DATE.SAVE = ''           ; * SWB08
      *      TIMELINE.TRANS.TYPE = ''           ; * SWB08
      * End NKH06
      ACCESS.REASON = ''                 ; * SWB08
      SO.NUM=''                          ; * JMK270
      RES.FLAG = ''                      ; * NKH74
      RETURN

*****************************************************************
OPEN.GENERAL.FILES:
*****************************************************************
      OPEN '','OCR.ARR.LOG' TO OCR.ARR.LOG ELSE    ; * NKH21
         CALL OPEN.ABORT('OCR.ARR.LOG','FB.2.1.NW')          ; * NKH21
      END                                ; * NKH21
      OPEN '','ZIPS' TO ZIPS ELSE        ; * NKH01
         CALL OPEN.ABORT('ZIPS','FB.2.1.NW')       ; * NKH01
      END                                ; * NKH01
      OPEN 'EMP.HR.PERF' TO F.EMP.HR.PERF ELSE
         CALL OPEN.ABORT("EMP.HR.PERF",PROG.NAME)
      END
      OPEN 'EMP.DY.PERF' TO F.EMP.DY.PERF ELSE
         CALL OPEN.ABORT("EMP.DY.PERF",PROG.NAME)
      END
      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         CALL OPEN.ABORT("CLIENTS",PROG.NAME)
      END
      OPEN '','FB.MILEAGE' TO F.MILEAGE ELSE
         CALL OPEN.ABORT("FB.MILEAGE",PROG.NAME)
      END
      OPEN '','FB.RATE.TABLES' TO F.RATE.TABLES ELSE
         CALL OPEN.ABORT("RATE.TABLES",PROG.NAME)
      END
      OPEN 'DICT','CLIENTS' TO F.DICT.CLIENTS ELSE
         CALL OPEN.ABORT("DICT CLIENTS",PROG.NAME)
      END
      OPEN '','CARRIERS' TO F.CARRIERS ELSE
         CALL OPEN.ABORT("CARRIERS",PROG.NAME)
      END
      OPEN 'DICT','CARRIERS' TO F.DICT ELSE
         CALL OPEN.ABORT("DICT CARRIERS",PROG.NAME)
      END
      OPEN '','FB.ADJUSTS' TO F.ADJUSTS ELSE
         CALL OPEN.ABORT("FB.ADJUSTS",PROG.NAME)
      END
      OPEN '','FB.CHECKS.HDR' TO F.CHECKS ELSE     ; * JCW01
         CALL OPEN.ABORT("FB.CHECKS.HDR",PROG.NAME)          ; * JCW01
      END                                ; * JCW01
      OPEN '','STARTUP.DATE' TO F.SU.DATE ELSE
         CALL OPEN.ABORT("STARTUP.DATE",PROG.NAME)
      END
      OPEN '','EDI.REMITTANCE' TO EDI.REMIT ELSE
         CALL OPEN.ABORT("EDI.REMITTANCE",PROG.NAME)
      END
      OPEN '','FB.BILLS.CRX' TO F.CRX ELSE
         EXECUTE 'CREATE-FILE FB.BILLS.CRX 1 103' CAPTURING OUTPUT
         OPEN '','FB.BILLS.CRX' TO F.CRX ELSE
            CALL OPEN.ABORT("FB.BILLS.CRX",PROG.NAME)
         END
      END
      OPEN '','FB.INQUIRE' TO F.INQUIRE ELSE
         CALL OPEN.ABORT("FB.INQUIRE",PROG.NAME)
      END
      OPEN '','FB.INQUIRE.HIST' TO F.INQUIRE.HIST ELSE
         CALL OPEN.ABORT("FB.INQUIRE.HIST",PROG.NAME)
      END
      OPEN '','FB.MODS' TO F.MODS ELSE
         CALL OPEN.ABORT("FB.MODS",PROG.NAME)
      END
      OPEN '','BR.OPEN.BILLS.1000.1' TO F.OPEN.BILLS ELSE
         CALL OPEN.ABORT("BR.OPEN.BILLS.1000.1",PROG.NAME)
      END
      OPEN '','FB.OPEN.BILLS' TO F.OPEN ELSE
         CALL OPEN.ABORT("FB.OPEN.BILLS",PROG.NAME)
      END
      OPEN '','FB.PRE.OPEN.BILLS' TO F.PRE.OPEN ELSE         ; *NPR01
         CALL OPEN.ABORT("FB.PRE.OPEN.BILLS",PROG.NAME)      ; *NPR01
      END                                ; *NPR01
      OPEN '','FB.PAY' TO F.PAY ELSE
         CALL OPEN.ABORT("FB.PAY",PROG.NAME)
      END
      OPEN '','FB.TRANSPORT' TO F.TRANSPORT ELSE
         CALL OPEN.ABORT("FB.TRANSPORT",PROG.NAME)
      END
      OPEN '','FED.INV.XREF' TO F.INV.XREF ELSE
         CALL OPEN.ABORT("FED.INV.XREF",PROG.NAME)
      END
      OPEN '','EDI.TEST' TO F.EDI.TEST ELSE
         CALL OPEN.ABORT("EDI.TEST",PROG.NAME)
      END
      OPEN '','DELETED.BILLS' TO F.DEL.BILLS ELSE
         CALL OPEN.ABORT('DELETED.BILLS',PROG.NAME)
      END
      OPEN '','FB.BC.FSC' TO F.NFSC ELSE
         CALL OPEN.ABORT('FB.BC.FSC',PROG.NAME)
      END
      OPEN '','FB.NFSC.SUB' TO F.NFSC.SUB ELSE
         CALL OPEN.ABORT('FB.NFSC.SUB',PROG.NAME)
      END
      OPEN '','FB.FSC' TO F.FSC ELSE
         CALL OPEN.ABORT('FB.FSC',PROG.NAME)
      END
      OPEN '','FB.ADJUST.HIST' TO F.ADJUST.HIST ELSE
         CALL OPEN.ABORT('FB.ADJUST.HIST',PROG.NAME)
      END
      OPEN '','FB.TABLES' TO F.TABLES ELSE
         CALL OPEN.ABORT('FB.TABLES',PROG.NAME)
      END
      OPEN '','FB.COUNTRIES' TO F.COUNTRIES ELSE   ; * NPR020
         CALL OPEN.ABORT('FB.COUNTRIES',PROG.NAME)           ; * NPR020
      END                                ; * NPR020
      OPEN '','FB.CAR.CTRL' TO F.CONTROL ELSE
         CALL OPEN.ABORT('FB.CAR.CTRL',PROG.NAME)
      END
      OPEN '','FB.CAR.MODE.CTRL' TO F.MODE.CONTROL ELSE      ; * JAD001
         CALL OPEN.ABORT('FB.CAR.MODE.CTRL',PROG.NAME)       ; * JAD001
      END                                ; * JAD001
      OPEN '','FB.REJ.CTRL' TO F.REJ.CTRL ELSE     ; * JMK46
         CALL OPEN.ABORT('FB.REJ.CTRL',PROG.NAME)  ; * JMK46
      END                                ; * JMK46
      OPEN '','CC.DAYS' TO F.CCDAYS ELSE           ; * JMK46
         CALL OPEN.ABORT('CC.DAYS',PROG.NAME)      ; * JMK46
      END                                ; * JMK46
      OPEN '','BCTRL' TO F.BCTRL ELSE
         CALL OPEN.ABORT('BCTRL',PROG.NAME)
      END
      * Begin GRB18
      OPEN '','EDI.REJECT.FILE' TO F.REJ.EDI ELSE
         CALL OPEN.ABORT('EDI.REJECT.FILE',PROG.NAME)
      END
      * End GRB18
      READ DBCTRL FROM F.BCTRL,USER ELSE DBCTRL=''
      USER.NAME=DBCTRL<13>               ; * JMK19
      USER.DPT=DBCTRL<15>                ; * JMK140
      READ AVAL.EQUIP.TYPES FROM F.TABLES,"TL.EQUIPMENT.TYPES" ELSE
         AVAL.EQUIP.TYPES = ''
      END
      READ AVAL.ACC.CODES FROM F.TABLES,"TL.ACCESSORIAL.CHRGS" ELSE
         AVAL.ACC.CODES = ''
      END
      *      READ DOW.USERS FROM F.TABLES,"DOW.CONTROL" ELSE        ; * SWB08 NKH06
      *         DOW.USERS = ''                  ; * SWB08   NKH06
      *      END                                ; * SWB08   NKH06
      OPEN '','AR.SLSMAN.1000.1' TO F.SLSMAN ELSE
         CALL OPEN.ABORT('AR.SLSMAN.1000.1',PROG.NAME)
      END
      OPEN '','FB.ON.SCREEN' TO F.ONSCREEN ELSE    ; * JMK01
         CALL OPEN.ABORT("FB.ONSCREEN",PROG.NAME)  ; * JMK01
      END                                ; * JMK01
      OPEN '','FB.TAG.BLOCK' TO F.TAG.BLOCK ELSE   ; * JMK19
         CALL OPEN.ABORT('FB.TAG.BLOCK',PROG.NAME)           ; * JMK19
      END                                ; * JMK19
      *      OPEN '','FB.QUICK.VERIFY' TO F.QV ELSE       ; * JMK24           ; * NKH30
      *         CALL OPEN.ABORT('FB.QUICK.VERIFY',PROG.NAME)        ; * JMK24 ; * NKH30
      *      END                                ; * JMK24                     ; * NKH30
      OPEN '','CLIENT.SCAC' TO F.CSCAC ELSE        ; * JMK54
         CALL OPEN.ABORT('CLIENT.SCAC',PROG.NAME)  ; * JMK54
      END                                ; * JMK54

      *---- Open mileage input and output files
      OPEN '','PCIN' TO F.PCIN ELSE
         CALL OPEN.ABORT('PCIN',PROG.NAME)
      END
      OPEN '','PCOUT' TO F.PCOUT ELSE
         CALL OPEN.ABORT('PCOUT',PROG.NAME)
      END
      OPEN '','EDI.BILLS' TO F.EDI.BILLS ELSE
         CALL OPEN.ABORT('EDI.BILLS',PROG.NAME)
      END
      OPEN '','ZIPS.CODES' TO F.ZIPS ELSE
         CALL OPEN.ABORT('ZIPS.CODES',PROG.NAME)
      END
      OPEN '','FB.OVERRIDE' TO F.OVERRIDE ELSE
         CALL OPEN.ABORT('FB.OVERRIDE',PROG.NAME)
      END
      OPEN '','AIRGAS.LOC.ZIP' TO F.ALOC.ZIP ELSE  ; * JMK154
         CALL OPEN.ABORT('AIRGAS.LOC.ZIP',PROG.NAME)         ; * JMK154
      END                                ; * JMK154
      OPEN '','FB.NOTES' TO F.NOTES ELSE           ; *NPR11
         CALL OPEN.ABORT("FB.NOTES",PROG.NAME)     ; *NPR11
      END                                ; *NPR11
      OPEN '','FB.PRO.FORMAT' TO F.PRO.FORMAT ELSE           ; *NPR026
         CALL OPEN.ABORT("FB.PRO.FORMAT",PROG.NAME)          ; *NPR026
      END                                ; *NPR026
      OPEN '','&SAVEDLISTS&' TO F.SL ELSE          ; * JMK186
         CALL OPEN.ABORT('&SAVEDLISTS&',PROG.NAME)           ; * JMK186
      END                                ; * JMK186
      OPEN '','UPS.SCHED' TO F.UPS.SCHED ELSE
         CALL OPEN.ABORT('UPS.SCHED',PROG.NAME)
      END
      OPEN '','UPS.SCHED.HIST' TO F.UPS.SCHED.HIST ELSE
         CALL OPEN.ABORT('UPS.SCHED.HIST',PROG.NAME)
      END
      OPEN '','PRO.BOL.XREF' TO F.PBX ELSE         ; * JMK102
         CALL OPEN.ABORT('PRO.BOL.XREF',PROG.NAME)           ; * JMK102
      END                                ; * JMK102
      OPEN '','FB.CARRIER.PAYEE' TO F.CARRIER.PAYEE ELSE     ; * JMK197
         CALL OPEN.ABORT('FB.CARRIER.PAYEE',PROG.NAME)       ; * JMK197
      END                                ; * JMK197
      OPEN '','ZIP.LINE.ITEM' TO F.ZIP.LINE.ITEM ELSE        ; *DRF05
         CALL OPEN.ABORT('ZIP.LINE.ITEM',PROG.NAME)          ; *DRF05
      END                                ; *DRF05
      OPEN '','CARRIER.SVC' TO F.CS ELSE           ; * JMK227
         CALL OPEN.ABORT('CARRIER.SVC',PROG.NAME)  ; * JMK227
      END                                ; * JMK227
      OPEN '','TC.HOLIDAYS' TO F.TC.HOLIDAYS ELSE  ; * SWB01
         CALL OPEN.ABORT('TC.HOLIDAYS',PROG.NAME)  ; * SWB01
      END                                ; * SWB01
      OPEN '','FB.TIMELINE.SUMMARY' TO F.TIMELINE.SUMMARY ELSE         ; * SWB01
         CALL OPEN.ABORT("FB.TIMELINE.SUMMARY",PROG.NAME)    ; * SWB01
      END                                ; * SWB01
      OPEN '','FB.STATUS.UPDATE' TO F.STATUS.UPDATE ELSE     ; * JMK248
         CALL OPEN.ABORT('FB.STATUS.UPDATE',PROG.NAME)       ; * JMK248
      END                                ; * JMK248
      OPEN '','AIRGAS.PO' TO F.AIRGAS.PO ELSE      ; * DRF049
         CALL OPEN.ABORT('AIRGAS.PO',PROG.NAME)    ; * DRF049
      END                                ; * DRF049
      * Begin TAG02
      OPEN '','OPERATOR' TO F.OPERATOR ELSE
         CALL OPEN.ABORT('OPERATOR',PROG.NAME)
      END
      * End TAG02
      OPEN '','OCR.LOCK' TO OCR.LOCK ELSE          ; * NKH10
         CALL OPEN.ABORT('OCR.LOCK',PROG.NAME)     ; * NKH10
      END                                ; * NKH10
      OPEN '','CONTROL' TO CONTROL.FILE ELSE       ; * NKH14
         CALL OPEN.ABORT('CONTROL',PROG.NAME)      ; * NKH14
      END                                ; * NKH14
      OPEN '','IMAGE.UPD.LOG' TO IMAGE.UPD.LOG ELSE          ; * NKH14
         CALL OPEN.ABORT('IMAGE.UPD.LOG',PROG.NAME)          ; * NKH14
      END                                ; * NKH14
      OPEN '','PRO.OVERRIDE' TO PRO.OVERRIDE ELSE  ; * NKH19
         CALL OPEN.ABORT('PRO.OVERRIDE',PROG.NAME)           ; * NKH19
      END                                ; * NKH19
      *      OPEN '','SCAC.XREF' TO SCAC.XREF ELSE                  ; * NKH54
      *         CALL OPEN.ABORT('SCAC.XREF',PROG.NAME)              ; * NKH54
      *      END                                                    ; * NKH54
      OPEN '','FB.BILLS.LOCKED' TO FB.BILLS.LOCKED ELSE      ; * NKH56
         CALL OPEN.ABORT('FB.BILLS.LOCKED',PROG.NAME)        ; * NKH56
      END                                ; * NKH56
      OPEN '','FB.BILLS.LOCKED.HIST' TO FB.BILLS.LOCKED.HIST ELSE      ; * NKH60
         CALL OPEN.ABORT('FB.BILLS.LOCKED.HIST',PROG.NAME)   ; * NKH60
      END                                ; * NKH60
      OPEN '','FB.LOCK.LOG' TO F.LOCK.LOG ELSE     ; * NKH60
         CALL OPEN.ABORT('FB.LOCK.LOG',PROG.NAME)  ; * NKH60
      END                                ; * NKH60
      OPEN 'DICT','FB.BILLS' TO F.DICT.BILLS ELSE  ; * NKH60
         CALL OPEN.ABORT('DICT FB.BILLS',PROG.NAME)          ; * NKH60
      END                                ; * NKH60
      * Begin Mod GRB19
      OPEN '','TEMPO.CLIENTS' TO F.TEMPOC ELSE
         CALL OPEN.ABORT('TEMPO.CLIENTS',PROG.NAME)
      END
      OPEN '','TEMPO.CLIENTS.ACC' TO F.TEMPOCACC ELSE
         CALL OPEN.ABORT('TEMPO.CLIENTS.ACC',PROG.NAME)
      END
      * End Mod GRB19

      RETURN

*****************************************************************
OPEN.CLIENT.FILES:
*****************************************************************
      START.OVER=0
      OPEN '','FB.BILLS,':CLIENT.ID TO F.BILLS ELSE
         CALL ELINE("ERROR - Cannot open FB.BILLS for client ":CLIENT.ID)
         CC+=1 ; GOSUB PRINT.CC
         START.OVER=1
         RETURN
      END
      IF CLIENT.ID='00761' THEN          ; * JMK143
         OPEN '','EDI.BILLS.HIST,':CLIENT.ID TO F.EDI.BILLS.HIST ELSE  ; * JMK143
            CALL ELINE("ERROR - Cannot open EDI.BILLS.HIST for client ":CLIENT.ID)         ; * JMK143
            CC+=1 ; GOSUB PRINT.CC       ; * JMK143
            START.OVER=1                 ; * JMK143
            RETURN                       ; * JMK143
         END                             ; * JMK143
      END                                ; * JMK143
      OPEN '','FB.OPEN.DATE.XREF,':CLIENT.ID TO F.FOX ELSE
         EXECUTE 'CREATE-FILE DATA FB.OPEN.DATE.XREF,':CLIENT.ID:' 23,1' CAPTURING OUTPUT  ; * NKH05
         OPEN '','FB.OPEN.DATE.XREF,':CLIENT.ID TO F.FOX ELSE
            CALL ELINE("Cannot Create FB.OPEN.DATE.XREF,":CLIENT.ID)
            CC+=1 ; GOSUB PRINT.CC
            START.OVER=1
            RETURN
         END
      END
      OPEN '','FB.CLIENTS.CUSTS,':CLIENT.ID TO F.CLIENTS.CUST ELSE
         F.CLIENTS.CUST=''
      END

      *********************************************************************************** GRB
      OPEN '','FB.BILLS.HIST,':CLIENT.ID TO F.HIST ELSE
         CALL ELINE("Cannot open FB.BILLS.HIST for client ":CLIENT.ID)
         CC+=1 ; GOSUB PRINT.CC
         START.OVER=1
         RETURN
      END
      ARCH.FILE = 1
      OPEN '','FB.BILLS.ARCH,':CLIENT.ID TO F.ARCH ELSE
         ARCH.FILE = 0
      END
      IF CLIENT.ID='00664' THEN          ; * JMK105
         OPEN '','EXPENSE.MATRIX,':CLIENT.ID TO F.EXP.MAT ELSE         ; * JMK105
            CALL ELINE("Cannot open EXPENSE.MATRIX for client ":CLIENT.ID)       ; * JMK105
            CC+=1 ; GOSUB PRINT.CC       ; * JMK105
            START.OVER=1                 ; * JMK105
            RETURN                       ; * JMK105
         END                             ; * JMK105
      END                                ; * JMK105
      BOL.OPEN=0                         ; * JMK133
      IF CLIENT.ID='00761' THEN BOL.OPEN=1         ; * JMK138
      IF CLIENT.ID='01311' THEN BOL.OPEN=1         ; * JMK135
      IF CLIENT.ID='01460' THEN BOL.OPEN=1         ; * JMK135
      IF CLIENT.ID='01529' THEN BOL.OPEN=1         ; * JMK133
      IF CLIENT.ID='01613' THEN BOL.OPEN=1
      IF CLIENT.ID='01636' THEN BOL.OPEN=1         ; * JMK152
      IF CLIENT.ID='01441' THEN BOL.OPEN=1         ; * NPR040
      IF CLIENT.ID='01329' THEN BOL.OPEN=1         ; * NPR051
      IF CLIENT.ID='01712' THEN BOL.OPEN=1         ; * JMK152
      IF CLIENT.ID='01952' THEN BOL.OPEN=1         ; * JMK231
      IF CLIENT.ID='02427' THEN BOL.OPEN=1         ; * JMK270
      IF BOL.OPEN THEN                   ; * JMK133
         OPEN '','FB.BOL.CRX,':CLIENT.ID TO F.BOL.CRX ELSE   ; * JMK133
            CALL OPEN.ABORT("FB.BOL.CRX,":CLIENT.ID,PROG.NAME)         ; * JMK133
         END                             ; * JMK133
      END                                ; * JMK133
      MISROUTE.FLG=0
      CLIENT.AUDIT=1
      OPEN '','FB.AUDIT,':CLIENT.ID TO F.AUDIT THEN
         READV SUB.CLIENT FROM F.AUDIT,'SUBSTITUTE',1 THEN
            AUDIT.CLIENT.ID = SUB.CLIENT
            OPEN '','FB.AUDIT,':AUDIT.CLIENT.ID TO F.AUDIT ELSE CLIENT.AUDIT=0
         END ELSE
            AUDIT.CLIENT.ID = CLIENT.ID
         END
      END ELSE
         AUDIT.CLIENT.ID = CLIENT.ID
         CLIENT.AUDIT=0
      END
      IF CLIENT.AUDIT THEN
         READ TEST FROM F.AUDIT,'DISABLE' THEN CLIENT.AUDIT=0
      END
      IF CLIENT.AUDIT THEN
         OPEN '','FB.AUDIT.TABLES,':AUDIT.CLIENT.ID TO F.AUDIT.TABLES ELSE
            EXECUTE 'CREATE-FILE DATA FB.AUDIT.TABLES,':AUDIT.CLIENT.ID:' 503,1' CAPTURING OUTPUT    ; * NKH05
            OPEN '','FB.AUDIT.TABLES,':AUDIT.CLIENT.ID TO F.AUDIT.TABLES ELSE
               CALL ELINE('Error Cannot open FB.AUDIT.TABLES,':AUDIT.CLIENT.ID:' No On-Line Audit Allowed!')
               CC+=1 ; GOSUB PRINT.CC
               CLIENT.AUDIT=0
            END
         END
      END
      IF CLIENT.AUDIT THEN
         OPEN '','FB.AUDIT.PP,':AUDIT.CLIENT.ID TO F.AUDIT.PP ELSE
            EXECUTE 'CREATE-FILE DATA FB.AUDIT.PP,':AUDIT.CLIENT.ID:' 7,1' CAPTURING OUTPUT
            OPEN '','FB.AUDIT.PP,':AUDIT.CLIENT.ID TO F.AUDIT.PP ELSE
               CALL ELINE('Error Cannot open FB.AUDIT.PP,':AUDIT.CLIENT.ID:' No On-Line Audit Allowed!')
               CC+=1 ; GOSUB PRINT.CC
               CLIENT.AUDIT=0
            END
         END
      END
      IF CLIENT.AUDIT THEN
         OPEN '','FB.AUDIT.ZIPS,':AUDIT.CLIENT.ID TO F.AUDIT.ZIPS ELSE
            EXECUTE 'CREATE-FILE DATA FB.AUDIT.ZIPS,':AUDIT.CLIENT.ID:' 101,1' CAPTURING OUTPUT      ; * NKH05
            OPEN '','FB.AUDIT.ZIPS,':AUDIT.CLIENT.ID TO F.AUDIT.ZIPS ELSE
               CALL ELINE('Error Cannot open FB.AUDIT.ZIPS,':AUDIT.CLIENT.ID:' No On-Line Audit Allowed!')
               CC+=1 ; GOSUB PRINT.CC
               CLIENT.AUDIT=0
            END
         END
      END
      CARRIER.AUDIT=0
      AUDIT='N'
      AUDIT.TYPE=''
      IF CL.VAR.FLAG = 'Y' OR CL.VAR.FLAG = 'A' THEN
         OPEN '','VARIANCE.CODES,':CLIENT.ID TO F.VAR ELSE
            CALL ELINE("Cannot open VARIANCE.CODES for client ":CLIENT.ID)
            CC+=1 ; GOSUB PRINT.CC
            START.OVER=1
            RETURN
         END
      END
      IF CL.DIV.FLAG = 'Y' THEN
         OPEN '','DIVISION.CODES,':CLIENT.ID TO F.DIV ELSE
            CALL ELINE("Cannot open DIVISION.CODES for client ":CLIENT.ID)
            CC+=1 ; GOSUB PRINT.CC
            START.OVER=1
            RETURN
         END
         IF CLIENT.ID='00761' THEN       ; * JMK99
            OPEN '','DIV.CODE.XREF,':CLIENT.ID TO F.DIV.CODE.XREF THEN           ; * JMK99
               DIV.CODE.XREF=1           ; * JMK99
            END ELSE                     ; * JMK99
               DIV.CODE.XREF=0           ; * JMK99
            END                          ; * JMK99
         END                             ; * JMK99
         ZIP.DIV.XREF=1
         OPEN 'ZIP.DIV.XREF,':CLIENT.ID TO F.ZIP.DIV.XREF ELSE ZIP.DIV.XREF=0
         IF CLIENT.ITM<70,14>='Y' THEN ZIP.DIV.XREF=0        ; * JMK212
      END
      IF CL.EXP.FLAG = 'Y' THEN
         CHECK.EXP.CODES=1
         OPEN '','EXPENSE.CODES,':CLIENT.ID TO F.EXP ELSE
            CALL ELINE("Cannot open EXPENSE.CODES for client ":CLIENT.ID)
            CC+=1 ; GOSUB PRINT.CC
            START.OVER=1
            RETURN
         END
         OPEN '','EXPENSE.CODE.XREF,':CLIENT.ID TO F.EXP.CODE.XREF THEN
            EXP.CODE.XREF=1
         END ELSE
            EXP.CODE.XREF=0
         END
      END ELSE CHECK.EXP.CODES=0
      IF CL.VEND.FLAG = 'Y' ! CL.CUST.FLAG = 'Y' THEN
         OPEN '','VEND.CUST,':CLIENT.ID TO F.VEND.CUST ELSE
            EXECUTE 'CREATE-FILE DATA VEND.CUST,':CLIENT.ID:' 1009,2' CAPTURING OUTPUT     ; * NKH05
            OPEN '','VEND.CUST,':CLIENT.ID TO F.VEND.CUST ELSE
               CALL ELINE("Cannot open VEND.CUST for client ":CLIENT.ID)
               CC+=1 ; GOSUB PRINT.CC
               START.OVER=1
               RETURN
            END
         END
         OPEN '','VEND.CUST.NAMES,':CLIENT.ID TO F.VCN ELSE  ; * JCW02
            EXECUTE 'CREATE-FILE DATA SDX.VCN,':CLIENT.ID:' 139,1' CAPTURING OUTPUT        ; * JCW02     NKH05
            EXECUTE 'CREATE-FILE DATA VEND.CUST.NAMES,':CLIENT.ID:' 601,1' CAPTURING OUTPUT          ; * JCW02     NKH05
            OPEN '','VEND.CUST.NAMES,':CLIENT.ID TO F.VCN ELSE         ; * JCW02
               CALL ELINE("Cannot open VEND.CUST.NAMES for client ":CLIENT.ID)   ; * JCW02
               CC+=1 ; GOSUB PRINT.CC    ; * JCW02
               START.OVER=1              ; * JCW02
               RETURN                    ; * JCW02
            END                          ; * JCW02
         END                             ; * JCW02
         OPEN '','VEND.CUST.XREF,':CLIENT.ID TO F.VC.XREF ELSE
            EXECUTE 'CREATE-FILE DATA VEND.CUST.XREF,':CLIENT.ID:' 401,1' PASSLIST CAPTURING OUTPUT  ; * NKH05
            OPEN '','VEND.CUST.XREF,':CLIENT.ID TO F.VC.XREF ELSE
               CALL ELINE("Cannot open VEND.CUST.XREF for client ":CLIENT.ID)
               CC+=1 ; GOSUB PRINT.CC
               START.OVER=1
               RETURN
            END
         END

         OPEN '','VEND.CUST.ZIPS,':CLIENT.ID TO F.VC.ZIPS ELSE
            EXECUTE 'CREATE-FILE DATA VEND.CUST.ZIPS,':CLIENT.ID:' 131,1' PASSLIST CAPTURING OUTPUT  ; * NKH05
            OPEN '','VEND.CUST.ZIPS,':CLIENT.ID TO F.VC.ZIPS ELSE
               CALL ELINE("Cannot open VEND.CUST.ZIPS for client ":CLIENT.ID)
               CC+=1 ; GOSUB PRINT.CC
               START.OVER=1
               RETURN
            END
         END
      END
      OPEN '','FB.APRVD.CARRS,':CLIENT.ID TO F.APRVD.CARRS THEN
         APRVD.CARRS = 1
      END ELSE
         APRVD.CARRS = 0
         APRVD.CARRIER = ''              ; * Set Individual Switch to '' (Skip Entry)
      END
      IF CLIENT.ID[1,2]#'99' THEN        ; * JMK140
         OPEN '','FB.BILLS.ACCESS,':CLIENT.ID TO F.ACCESS ELSE         ; * JMK140
            EXECUTE 'CREATE-FILE DATA FB.BILLS.ACCESS,':CLIENT.ID:' 1009,2' CAPTURING OUTPUT         ; * JMK140  NKH05
            OPEN '','FB.BILLS.ACCESS,':CLIENT.ID TO F.ACCESS ELSE      ; * JMK140
               CALL ELINE("Cannot Create FB.BILLS.ACCESS,":CLIENT.ID)  ; * JMK140
               CC+=1 ; GOSUB PRINT.CC    ; * JMK140
               START.OVER=1              ; * JMK140
               RETURN                    ; * JMK140
            END                          ; * JMK140
         END                             ; * JMK140
      END                                ; * JMK140
      FWR.FLAG=1                         ; * SWB10
      OPEN '','FB.WEB.REVIEW,':CLIENT.ID TO F.WEB.REVIEW ELSE          ; * SWB10
         FWR.FLAG=0                      ; * SWB10
      END                                ; * SWB10
      RETURN

******************************************************************
CLOSE.CLIENT.FILES:
******************************************************************
      CLOSE F.ACCESS
      CLOSE F.APRVD.CARRS
      CLOSE F.AUDIT
      CLOSE F.AUDIT.PP
      CLOSE F.AUDIT.TABLES
      CLOSE F.AUDIT.ZIPS
      CLOSE F.BILLS
      CLOSE F.BOL.CRX
      CLOSE F.CLIENTS.CUST
      CLOSE F.DIV
      CLOSE F.DIV.CODE.XREF
      CLOSE F.EDI.BILLS.HIST
      CLOSE F.EXP
      CLOSE F.EXP.CODE.XREF
      CLOSE F.EXP.MAT
      CLOSE F.FOX
      CLOSE F.HIST
      CLOSE F.SUMM
      CLOSE F.VAR
      CLOSE F.VC.XREF
      CLOSE F.VC.ZIPS
      CLOSE F.VCN
      CLOSE F.VEND.CUST
      CLOSE F.ARCH
      RETURN

*****************************************************************
8100: * Display screen
*****************************************************************
      CLR.SCR = 1 ; GOSUB DISP.SCREEN.HEADING      ; *NPR08
      GOSUB GET.SCREEN.DSP               ; * NPR034
      CRT SCREEN.DSP
      IF CHANGE.FLAG THEN GOSUB 8200

      RETURN

*****************************************************************
GET.SCREEN.DSP:
*****************************************************************
      IF DBCTRL<14>='A' THEN             ; * NKH04
         SCREEN.DSP =@(0,1):'Client :':SPACE(32):'OCR SK:'   ; * NPR08 NKH04
      END ELSE                           ; * NKH04
         SCREEN.DSP =@(0,1):'Client : '  ; * NPR08
      END                                ; * NKH04
      SCREEN.DSP:=@(0,2):'Carrier: '     ; * NPR08
      SCREEN.DSP:=@(0,3):'Address: '     ; * SWB01
      SCREEN.DSP:=@(0,4):'PreAud : '     ; * NPR08
      SCREEN.DSP:=@(0,5):'Image  : '     ; * NKH04
      SCREEN.DSP:=@(19,4):'to'           ; * NPR08
      SCREEN.DSP:=@(31,4):'Cl Stat.: '   ; * NPR08
      SCREEN.DSP:=@(49,1):'Salesman : '  ; * NPR08
      SCREEN.DSP:=@(49,2):'Acc.Mgr. : '  ; * NPR08
      SCREEN.DSP:=@(49,3):'Auditor  : '  ; * NPR08
      SCREEN.DSP:=@(49,4):'OverRide : '  ; * NPR08
      SCREEN.DSP:=@(63,4):'Stack : '     ; * NPR08
      *      SCREEN.DSP:=@(0, 5):STR('-',47)    ; * RLM002  NKH04
      SCREEN.DSP:=@(49,5):'AR Rep   : '  ; * RLM002
      SCREEN.DSP:=@(0, 6):'Pro..' : SPACE(76)      ; * NPR034

      IF CAPTURE.INVOICE THEN            ; * JMK106
         SCREEN.DSP:=@(36,7):'Inv Num: '           ; * NPR034
         IF CARRIER.ID # '00041' THEN SCREEN.DSP:=@(66,7): STR("-",4):' of ':STR("-",4)    ; * NPR034
      END
      IF CARRIER.ID = "00015" OR CARRIER.ID = "01075" THEN   ; * NKH43
         SCREEN.DSP:=@(36,8):'Acct Num: ':ACCT.NUM           ; * NKH43
      END ELSE                           ; * NKH43  NKH44
         *      IF CARRIER.ID = "00212" OR CARRIER.ID = "00171" THEN           ; * NKH43  NKH44
         IF CARRIER.ID = '00041' OR CARRIER.ID = '01312' OR CARRIER.ID = '00365' THEN      ; * NKH63
            SCREEN.DSP:=@(10,8):'Acct Num: ':ACCT.NUM        ; * NKH43  NKH44
         END                             ; * NKH63
      END                                ; * NKH43
      IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN     ; * United Parcel Service
         SCREEN.DSP:=@(46,8):'UPS Addr Correc Chrg: '        ; * NPR034
         SCREEN.DSP:=@(46,9):'UPS Fees Charge     : '        ; * NPR034
      END
      SCREEN.DSP:=@(0, 7):'Date.'
      SCREEN.DSP:=@(0, 8):'IOT..'
      SCREEN.DSP:=@(0, 9):'Div..'
      SCREEN.DSP:=@(0,10):'Orig.'
      SCREEN.DSP:=@(0,11):'Dest.'
      SCREEN.DSP:=@(0,12):'Exp..'
      SCREEN.DSP:=@(0,13):'Cust.'        ; * NKH06
      *      SCREEN.DSP:=@(0,14):'Rcvd.'        ; * NKH06   * NKH13
      SCREEN.DSP:=@(0,15):'Mile.'
      SCREEN.DSP:=@(16,15):'HU:' : @(-4)           ; * NPR035
      SCREEN.DSP:=@(0,16):'        Carrier   Actual         '
      SCREEN.DSP:=@(0,17):'  Wght  Charges  Charges   Var              Charges    Approved Carrier'
      SCREEN.DSP:=@(0,18):' ----- -------- -------- -------           ---------- --------'
      SCREEN.DSP:=@(33,19):'Misroute: '
      SCREEN.DSP:=@(33,20):'LCC: '

      IF (CLIENT.ID='01323' OR CLIENT.ID='01324' OR CLIENT.ID='01325' OR CLIENT.ID='01326') AND (FRT.FLAG OR USER='JAUDIT' OR USER='FDDAVID' OR SPECIAL.NIKKI.VACATION) THEN         ; * SWB07
         SCREEN.DSP:=@(8,20):' Dim Wgt':@(-4)
      END ELSE
         SCREEN.DSP:=@(0,20):' Dimensional Wgt':@(-4)
      END
      SCREEN.DSP:=@(33,20):'LCC: '

      IF BAL.DUE THEN SCREEN.DSP := @(25,16):'Bal Due'
      RETURN

*****************************************************************
GET.RELATED.BILLS:
*****************************************************************
      DA=''
      LOOKPRO=PRO		; * NKH84
      C.PRO=PRO     ; * NKH84      
      IF NUM(C.PRO[1,1]) THEN C.PRO = 'I':PRO     ; * NKH84      
      LOOP UNTIL INDEX(LOOKPRO[LEN(LOOKPRO)-1,2],'AD',1)=0 DO
         LOOKPRO=LOOKPRO[1,LEN(LOOKPRO)-2]
      REPEAT
      LOOP UNTIL INDEX(LOOKPRO[LEN(LOOKPRO)-1,2],'BD',1)=0 DO
         LOOKPRO=LOOKPRO[1,LEN(LOOKPRO)-2]
      REPEAT
      LOOP UNTIL INDEX(LOOKPRO[LEN(LOOKPRO)-1,2],'-I',1)=0 DO          ; * JMK85
         LOOKPRO=LOOKPRO[1,LEN(LOOKPRO)-2]
      REPEAT
      LOOP UNTIL INDEX(LOOKPRO[LEN(LOOKPRO)-1,2],'-O',1)=0 DO          ; * JMK85
         LOOKPRO=LOOKPRO[1,LEN(LOOKPRO)-2]
      REPEAT
      LOOP UNTIL INDEX(LOOKPRO[LEN(LOOKPRO)-1,2],'-T',1)=0 DO          ; * JMK85
         LOOKPRO=LOOKPRO[1,LEN(LOOKPRO)-2]
      REPEAT

      EXIT.LOOP=0
      LOOP
      UNTIL NOT(LOOKPRO[LEN(LOOKPRO)-1,2] MATCHES "'-'1N") OR EXIT.LOOP DO
         TESTPRO=LOOKPRO[1,LEN(LOOKPRO)-2]
         LOOK.ID=CARRIER.ID:'*':TESTPRO:'*0'
         READV TEST FROM F.CRX,LOOK.ID,1 THEN
            LOOKPRO=TESTPRO
         END ELSE EXIT.LOOP=1
      REPEAT
      LOOK.ID=CARRIER.ID:'*':LOOKPRO:'*':0
      PRO.EXT='orig'

      READ DLOOK FROM F.HIST,LOOK.ID THEN GOSUB ADD.LINE ELSE
         READ DLOOK FROM F.CRX,LOOK.ID THEN
            DLOOK<1>=DLOOK<2>
            GOSUB ADD.LINE
         END ELSE
            NULL
         END
      END

      * Begin NKH84
      * Look for I, D, M for R&L
      SAVE.LOOKPRO=''
      CHECK.ADBD=0
      IF CARRIER.ID = '00114' THEN
      	 IF NUM(LOOKPRO[1,1]) THEN 
      	 	  LOOKPRO = 'I':LOOKPRO	
         END      	 	  
         BEGIN CASE
            CASE LOOKPRO[1,1] = 'I'
               SAVE.LOOKPRO = LOOKPRO
               GOSUB RELATED.BILLS.CHK
               CHECK.ADBD=1
               LOOKPRO:='AD' ; GOSUB RELATED.BILLS.CHK
               LOOKPRO:='AD' ; GOSUB RELATED.BILLS.CHK
               LOOKPRO=SAVE.LOOKPRO
               LOOKPRO:='BD' ; GOSUB RELATED.BILLS.CHK
               LOOKPRO:='BD' ; GOSUB RELATED.BILLS.CHK                                             
               * Get associated D Bills
               LOOKPRO=SAVE.LOOKPRO
               CHECK.ADBD=0
               LOOKPRO[1,1]='D' ; GOSUB RELATED.BILLS.CHK
               CHECK.ADBD=1
               LOOKPRO:='AD' ; GOSUB RELATED.BILLS.CHK
               LOOKPRO:='AD' ; GOSUB RELATED.BILLS.CHK
               LOOKPRO=SAVE.LOOKPRO
               LOOKPRO:='BD' ; GOSUB RELATED.BILLS.CHK
               LOOKPRO:='BD' ; GOSUB RELATED.BILLS.CHK
               * Get associated M Bills
               LOOKPRO=SAVE.LOOKPRO
               CHECK.ADBD=0
               LOOKPRO[1,1]='M' ; GOSUB RELATED.BILLS.CHK
               CHECK.ADBD=1
               LOOKPRO:='AD' ; GOSUB RELATED.BILLS.CHK
               LOOKPRO:='AD' ; GOSUB RELATED.BILLS.CHK
               LOOKPRO=SAVE.LOOKPRO
               LOOKPRO:='BD' ; GOSUB RELATED.BILLS.CHK
               LOOKPRO:='BD' ; GOSUB RELATED.BILLS.CHK
            CASE LOOKPRO[1,1] = 'D'
               SAVE.LOOKPRO = LOOKPRO
               GOSUB RELATED.BILLS.CHK
               CHECK.ADBD=1
               LOOKPRO:='AD' ; GOSUB RELATED.BILLS.CHK
               LOOKPRO:='AD' ; GOSUB RELATED.BILLS.CHK
               LOOKPRO=SAVE.LOOKPRO
               LOOKPRO:='BD' ; GOSUB RELATED.BILLS.CHK
               LOOKPRO:='BD' ; GOSUB RELATED.BILLS.CHK                              
               * Get associated I Bills 
               LOOKPRO=SAVE.LOOKPRO 
               CHECK.ADBD=0          
               LOOKPRO[1,1]='I' ; GOSUB RELATED.BILLS.CHK
               CHECK.ADBD=1
               LOOKPRO:='AD' ; GOSUB RELATED.BILLS.CHK
               LOOKPRO:='AD' ; GOSUB RELATED.BILLS.CHK
               LOOKPRO=SAVE.LOOKPRO
               LOOKPRO:='BD' ; GOSUB RELATED.BILLS.CHK
               LOOKPRO:='BD' ; GOSUB RELATED.BILLS.CHK
               * Get associated M Bills
               LOOKPRO=SAVE.LOOKPRO
               CHECK.ADBD=0
               LOOKPRO[1,1]='M' ; GOSUB RELATED.BILLS.CHK
               CHECK.ADBD=1
               LOOKPRO:='AD' ; GOSUB RELATED.BILLS.CHK
               LOOKPRO:='AD' ; GOSUB RELATED.BILLS.CHK
               LOOKPRO=SAVE.LOOKPRO
               LOOKPRO:='BD' ; GOSUB RELATED.BILLS.CHK
               LOOKPRO:='BD' ; GOSUB RELATED.BILLS.CHK            
            CASE LOOKPRO[1,1] = 'M'  
               SAVE.LOOKPRO = LOOKPRO
               GOSUB RELATED.BILLS.CHK
               CHECK.ADBD=1
               LOOKPRO:='AD' ; GOSUB RELATED.BILLS.CHK
               LOOKPRO:='AD' ; GOSUB RELATED.BILLS.CHK
               LOOKPRO=SAVE.LOOKPRO
               LOOKPRO:='BD' ; GOSUB RELATED.BILLS.CHK
               LOOKPRO:='BD' ; GOSUB RELATED.BILLS.CHK                                             
               * Get associated I Bills               
               LOOKPRO=SAVE.LOOKPRO
               CHECK.ADBD=0                 
               LOOKPRO[1,1]='I' ; GOSUB RELATED.BILLS.CHK
               CHECK.ADBD=1
               LOOKPRO:='AD' ; GOSUB RELATED.BILLS.CHK
               LOOKPRO:='AD' ; GOSUB RELATED.BILLS.CHK
               LOOKPRO=SAVE.LOOKPRO
               LOOKPRO:='BD' ; GOSUB RELATED.BILLS.CHK
               LOOKPRO:='BD' ; GOSUB RELATED.BILLS.CHK
               * Get associated D Bills
               LOOKPRO=SAVE.LOOKPRO
               CHECK.ADBD=0
               LOOKPRO[1,1]='D' ; GOSUB RELATED.BILLS.CHK
               CHECK.ADBD=1
               LOOKPRO:='AD' ; GOSUB RELATED.BILLS.CHK
               LOOKPRO:='AD' ; GOSUB RELATED.BILLS.CHK
               LOOKPRO=SAVE.LOOKPRO
               LOOKPRO:='BD' ; GOSUB RELATED.BILLS.CHK
               LOOKPRO:='BD' ; GOSUB RELATED.BILLS.CHK
         END CASE
      END ELSE
         GOSUB RELATED.BILLS.CHK
      END
      
      RETURN

*****************************************************************
RELATED.BILLS.CHK:
*****************************************************************
      * Look for R&L M Bill
      IF CARRIER.ID = '00114' AND NOT(CHECK.ADBD) AND C.PRO[1,1] # 'M' THEN
         PRO.EXT=''
         DONE=0
         LOOP UNTIL DONE=1 DO
            IF LOOKPRO[1,1] = 'M' THEN
               LOOK.ID=CARRIER.ID:'*':LOOKPRO:'*':0
               READ DLOOK FROM F.HIST,LOOK.ID THEN
                  GOSUB ADD.LINE
                  DONE=1
               END ELSE
                  READ DLOOK FROM F.CRX,LOOK.ID THEN
                     DLOOK<1>=DLOOK<2>
                     GOSUB ADD.LINE
                     DONE=1
                  END ELSE
                     DONE=1
                  END
               END
            END ELSE
            	 DONE=1
            END
         REPEAT
      END
      * Look for R&L I Bill
      IF CARRIER.ID = '00114' AND NOT(CHECK.ADBD) AND C.PRO[1,1] # 'I' THEN
         PRO.EXT=''
         DONE=0
         LOOP UNTIL DONE=1 DO
            IF LOOKPRO[1,1] = 'I' THEN
               LOOK.ID=CARRIER.ID:'*':LOOKPRO:'*':0
               READ DLOOK FROM F.HIST,LOOK.ID THEN
                  GOSUB ADD.LINE
                  DONE=1
               END ELSE
                  READ DLOOK FROM F.CRX,LOOK.ID THEN
                     DLOOK<1>=DLOOK<2>
                     GOSUB ADD.LINE
                     DONE=1
                  END ELSE
                     DONE=1
                  END
               END
            END ELSE
            	 DONE=1
            END
         REPEAT
      END
      * Look for R&L D Bill
      IF CARRIER.ID = '00114' AND NOT(CHECK.ADBD) AND C.PRO[1,1] # 'D' THEN
         PRO.EXT=''
         DONE=0
         LOOP UNTIL DONE=1 DO
            IF LOOKPRO[1,1] = 'D' THEN
               LOOK.ID=CARRIER.ID:'*':LOOKPRO:'*':0
               READ DLOOK FROM F.HIST,LOOK.ID THEN
                  GOSUB ADD.LINE
                  DONE=1
               END ELSE
                  READ DLOOK FROM F.CRX,LOOK.ID THEN
                     DLOOK<1>=DLOOK<2>
                     GOSUB ADD.LINE
                     DONE=1
                  END ELSE
                     DONE=1
                  END
               END
            END ELSE
            	 DONE=1
            END
         REPEAT
      END
      
			* End NKH84
			
      * Look for AD, ADAD, ADADAD
      PRO.EXT=''
      DONE=0
      LOOP UNTIL DONE=1 DO
         PRO.EXT:='AD'
         LOOK.ID=CARRIER.ID:'*':LOOKPRO:PRO.EXT:'*':0
         READ DLOOK FROM F.HIST,LOOK.ID THEN
            GOSUB ADD.LINE
            ** Check for ADBD
            SAVE.PRO.EXT=PRO.EXT
            PRO.EXT:='BD'
            LOOK.ID=CARRIER.ID:'*':LOOKPRO:PRO.EXT:'*':0
            READ DLOOK FROM F.HIST,LOOK.ID THEN GOSUB ADD.LINE ELSE NULL
            PRO.EXT=SAVE.PRO.EXT
         END ELSE
            READ DLOOK FROM F.CRX,LOOK.ID THEN
               DLOOK<1>=DLOOK<2>
               GOSUB ADD.LINE
            END ELSE
               DONE=1
            END
         END
      REPEAT
      * Look for BD, BDBD, BDBDBD
      PRO.EXT=''
      DONE=0
      LOOP UNTIL DONE=1 DO
         PRO.EXT:='BD'
         LOOK.ID=CARRIER.ID:'*':LOOKPRO:PRO.EXT:'*':0
         READ DLOOK FROM F.HIST,LOOK.ID THEN
            GOSUB ADD.LINE
            ** Check for BDAD
            SAVE.PRO.EXT=PRO.EXT
            PRO.EXT:='AD'
            LOOK.ID=CARRIER.ID:'*':LOOKPRO:PRO.EXT:'*':0
            READ DLOOK FROM F.HIST,LOOK.ID THEN GOSUB ADD.LINE ELSE NULL
            PRO.EXT=SAVE.PRO.EXT
         END ELSE
            READ DLOOK FROM F.CRX,LOOK.ID THEN
               DLOOK<1>=DLOOK<2>
               GOSUB ADD.LINE
            END ELSE
               DONE=1
            END
         END
      REPEAT
      * Begin NKH42
      * Look for CR
      PRO.EXT=''
      DONE=0
      LOOP UNTIL DONE=1 DO
         PRO.EXT:='CR'
         LOOK.ID=CARRIER.ID:'*':LOOKPRO:PRO.EXT:'*':0
         READ DLOOK FROM F.HIST,LOOK.ID THEN
            GOSUB ADD.LINE
            ** Check for CR
            SAVE.PRO.EXT=PRO.EXT
            PRO.EXT:='CR'
            LOOK.ID=CARRIER.ID:'*':LOOKPRO:PRO.EXT:'*':0
            READ DLOOK FROM F.HIST,LOOK.ID THEN GOSUB ADD.LINE ELSE NULL
            PRO.EXT=SAVE.PRO.EXT
         END ELSE
            READ DLOOK FROM F.CRX,LOOK.ID THEN
               DLOOK<1>=DLOOK<2>
               GOSUB ADD.LINE
            END ELSE
               DONE=1
            END
         END
      REPEAT
      * End NKH42
      * Look for -1, -2, -3,
      PRO.EXT=''
      DONE=0
      CTR=0
      LOOP CTR+=1 UNTIL DONE=1 DO
         PRO.EXT='-':CTR
         LOOK.ID=CARRIER.ID:'*':LOOKPRO:PRO.EXT:'*':0
         READ DLOOK FROM F.HIST,LOOK.ID THEN GOSUB ADD.LINE ELSE
            READ DLOOK FROM F.CRX,LOOK.ID THEN
               DLOOK<1>=DLOOK<2>
               GOSUB ADD.LINE
            END ELSE
               DONE=1
            END
         END
      REPEAT
      * Look for /1, /2, /3,
      PRO.EXT=''
      DONE=0
      CTR=0
      LOOP CTR+=1 UNTIL DONE=1 DO
         PRO.EXT='/':CTR
         LOOK.ID=CARRIER.ID:'*':LOOKPRO:PRO.EXT:'*':0
         READ DLOOK FROM F.HIST,LOOK.ID THEN GOSUB ADD.LINE ELSE
            READ DLOOK FROM F.CRX,LOOK.ID THEN
               DLOOK<1>=DLOOK<2>
               GOSUB ADD.LINE
            END ELSE
               DONE=1
            END
         END
      REPEAT
      * Look for -1, -1-1, -1-1-1
      PRO.EXT='-1'                       ; * Already found -1's look for -1-1 next
      DONE=0
      LOOP UNTIL DONE=1 DO
         PRO.EXT:='-1'
         LOOK.ID=CARRIER.ID:'*':LOOKPRO:PRO.EXT:'*':0
         READ DLOOK FROM F.HIST,LOOK.ID THEN GOSUB ADD.LINE ELSE
            READ DLOOK FROM F.CRX,LOOK.ID THEN
               DLOOK<1>=DLOOK<2>
               GOSUB ADD.LINE
            END ELSE
               DONE=1
            END
         END
      REPEAT
      * Look for -I, -O, -T ; * JMK85
      PRO.EXT='-I'                       ; * JMK85
      LOOK.ID=CARRIER.ID:'*':LOOKPRO:PRO.EXT:'*':0           ; * JMK85
      READ DLOOK FROM F.HIST,LOOK.ID THEN          ; * JMK85
         GOSUB ADD.LINE
         NO.DASH.O=1
      END ELSE
         READ DLOOK FROM F.CRX,LOOK.ID THEN        ; * JMK85
            DLOOK<1>=DLOOK<2>            ; * JMK85
            GOSUB ADD.LINE               ; * JMK85
            NO.DASH.O=1
         END                             ; * JMK85
      END                                ; * JMK85
      PRO.EXT='-O'                       ; * JMK85
      LOOK.ID=CARRIER.ID:'*':LOOKPRO:PRO.EXT:'*':0           ; * JMK85
      READ DLOOK FROM F.HIST,LOOK.ID THEN          ; * JMK85
         GOSUB ADD.LINE
         DASH.O=1
      END ELSE
         READ DLOOK FROM F.CRX,LOOK.ID THEN        ; * JMK85
            DLOOK<1>=DLOOK<2>            ; * JMK85
            GOSUB ADD.LINE               ; * JMK85
            DASH.O=1
         END                             ; * JMK85
      END                                ; * JMK85
      PRO.EXT='-T'                       ; * JMK85
      LOOK.ID=CARRIER.ID:'*':LOOKPRO:PRO.EXT:'*':0           ; * JMK85
      READ DLOOK FROM F.HIST,LOOK.ID THEN          ; * JMK85
         GOSUB ADD.LINE
         NO.DASH.O=1
      END ELSE
         READ DLOOK FROM F.CRX,LOOK.ID THEN        ; * JMK85
            DLOOK<1>=DLOOK<2>            ; * JMK85
            GOSUB ADD.LINE               ; * JMK85
            NO.DASH.O=1
         END                             ; * JMK85
      END                                ; * JMK85
      PRO.EXT='-IAD'                     ; * JMK260
      LOOK.ID=CARRIER.ID:'*':LOOKPRO:PRO.EXT:'*':0           ; * JMK260
      READ DLOOK FROM F.HIST,LOOK.ID THEN          ; * JMK260
         GOSUB ADD.LINE                  ; * JMK260
         NO.DASH.O=1                     ; * JMK260
      END ELSE                           ; * JMK260
         READ DLOOK FROM F.CRX,LOOK.ID THEN        ; * JMK260
            DLOOK<1>=DLOOK<2>            ; * JMK260
            GOSUB ADD.LINE               ; * JMK260
            NO.DASH.O=1                  ; * JMK260
         END                             ; * JMK260
      END                                ; * JMK260
      PRO.EXT='-OAD'                     ; * JMK260
      LOOK.ID=CARRIER.ID:'*':LOOKPRO:PRO.EXT:'*':0           ; * JMK260
      READ DLOOK FROM F.HIST,LOOK.ID THEN          ; * JMK260
         GOSUB ADD.LINE                  ; * JMK260
         DASH.O=1                        ; * JMK260
      END ELSE
         READ DLOOK FROM F.CRX,LOOK.ID THEN        ; * JMK260
            DLOOK<1>=DLOOK<2>            ; * JMK260
            GOSUB ADD.LINE               ; * JMK260
            DASH.O=1                     ; * JMK260
         END                             ; * JMK260
      END                                ; * JMK260
      PRO.EXT='-TAD'                     ; * JMK260
      LOOK.ID=CARRIER.ID:'*':LOOKPRO:PRO.EXT:'*':0           ; * JMK260
      READ DLOOK FROM F.HIST,LOOK.ID THEN          ; * JMK260
         GOSUB ADD.LINE                  ; * JMK260
         NO.DASH.O=1                     ; * JMK260
      END ELSE
         READ DLOOK FROM F.CRX,LOOK.ID THEN        ; * JMK260
            DLOOK<1>=DLOOK<2>            ; * JMK260
            GOSUB ADD.LINE               ; * JMK260
            NO.DASH.O=1                  ; * JMK260
         END                             ; * JMK260
      END                                ; * JMK260

      IF DA#'' THEN
         RELATED.BILLS=1
      END ELSE
         RELATED.BILLS=0
      END
      RETURN

*****************************************************************
DISPLAY.RELATED.BILLS:
*****************************************************************
      IF DA#'' THEN
         GOSUB DA.TO.PA                  ; * JCW07
         PRINT @(0,7):@(-3):@(0,8):"Pro#":
         PRINT @(6,8):"Shp Date":
         PRINT @(15,8):"Carr Billed":
         PRINT @(27,8):"Amount Paid":
         PRINT @(39,8):"Proc Date":
         PRINT @(49,8):"Check Dt":
         PRINT @(58,8):"Check #":
         PRINT @(67,8):"Check Amt":
         PRINT @(77,8):"A/C"             ; * NPR15
         PRINT @(0,9):"----":
         PRINT @(6,9):"--------":
         PRINT @(15,9):"-----------":
         PRINT @(27,9):"-----------":
         PRINT @(39,9):"---------":
         PRINT @(49,9):"--------":
         PRINT @(58,9):"-------":
         PRINT @(66,9):"----------":
         PRINT @(77,9):"---"             ; * NPR15

         LINES = DCOUNT(PA,@AM)
         START.POS = 1
         DONE = 0
         LOOP UNTIL DONE DO
            FOR I = 1 TO 13              ; *NPR15
               CRT @(0,9+I):PA<START.POS+I-1>:@(-4)
            NEXT X

*****************************************************************
ENTER.SELECTION:
*****************************************************************
            IF LINES <= 12 THEN
               MASK = '--'
               HELP = '[Return] to display bill'
               CALL GEN.IN(0,22,MASK,'',Q,0,20,'','',0,2,22,1,QI,HELP,0,23)
            END ELSE
               MASK = 'Enter Selection: '
               HELP = REV.ON:'More Notes:':REV.OFF:' [F]orward  [B]ack  [Return] to display bill'
               CALL GEN.IN(0,22,MASK,'',Q,0,20,'','',0,17,22,1,QI,HELP,0,23)
            END
            Q = OCONV(Q,'MCU')
            BEGIN CASE
               CASE Q = 'F'
                  START.POS += 12
                  IF START.POS > LINES THEN START.POS = 1
               CASE Q = 'B'
                  START.POS -= 12
                  IF START.POS < 1 THEN START.POS = DIV(LINES,12) * 12 + 1
               CASE Q = ''
                  DONE = 1
               CASE 1
                  CALL ELINE('Invalid entry! You must enter "F", "B", or "".')
                  GOTO ENTER.SELECTION
            END CASE
            CC+=LEN(QI)+1 ; GOSUB PRINT.CC
         REPEAT
         CRT @(0,10):@(-3)
      END
      RETURN

*****************************************************************
DA.TO.PA:
*****************************************************************
      AMT.TOT = 0
      CARR.BILLED = 0                    ; * NPR061
      PA = ''
      DA.CNT = DCOUNT(DA<1>,CHAR(253))
      FOR I = 1 TO DA.CNT
         LINE = ''
         LINE = DA<1,I>'L#6'
         LINE := OCONV(DA<2,I>,'D2-')'R#8'
         LINE := OCONV(DA<3,I>,'MR2,')'R#12'
         IF DA<9,I> NE 'R' THEN          ; * NPR061
            LINE := OCONV(DA<4,I>,'MR2,')'R#11'
         END ELSE                        ; * NPR061
            LINE := OCONV("0",'MR2,')'R#11'        ; * NPR061
         END                             ; * NPR061
         LINE := OCONV(DA<5,I>,'D2-')'R#10'
         IF DA<9,I> = 'R' THEN
            LINE := ' * * * R E J E C T E D * * *' 'R#30'    ; * NPR061
         END ELSE
            IF DA<1,I> = 'CR' THEN       ; * NKH42
               LINE := ' * * * CORRECTED BILL  * * *' 'R#30'           ; * NKH42
            END ELSE                     ; * NKH42
               LINE := OCONV(DA<6,I>,'D2-')'R#10'
               LINE := DA<7,I>'R#8'
               LINE := OCONV(DA<8,I>,'MR2,')'R#11'
               LINE := SPACE(2):DA<11,I>
               AMT.TOT += DA<4,I>        ; * NPR061
            END                          ; * NKH42
         END
         PA<-1> = LINE
         IF DA<10,I> # '' THEN
            NSVAL=DCOUNT(DA<10,I>,@SVM)
            FOR J = 1 TO NSVAL
               PA<-1> = 'NOTE: ':DA<10,I,J>
            NEXT J
         END
         CARR.BILLED += DA<3,I>          ; * NPR061
      NEXT I
      PA<-1> = '----------- -----------''R#38'     ; * NPR061
      PA<-1> = OCONV(CARR.BILLED,'MD2,') 'R#26' : " " : OCONV(AMT.TOT,'MD2,') "R#10"       ; * NPR061
      *** Add Variance data to display (discount)
      IF (OLD.PRO.REC<10>+0) # 0 THEN
         PA<-1> = 'DISCOUNT -- ':OCONV(0-OLD.PRO.REC<10>,'MR2')
         VAR.NOTE = '     ':OLD.PRO.REC<41,1>
         VAR.NOTE.LEN = LEN(VAR.NOTE)
         IF VAR.NOTE # '' THEN
            DONE = 0
            LOOP UNTIL DONE DO
               PA<-1> = VAR.NOTE[1,80]
               VAR.NOTE = VAR.NOTE[81,9999]
               VAR.NOTE.LEN -= 80
               IF VAR.NOTE.LEN < 0 THEN DONE = 1
            REPEAT
         END
      END
      *** Add Variance data to display (overcharge)
      IF (OLD.PRO.REC<11>+0) # 0 THEN
         PA<-1> = 'OVERCHARGE -- ':OCONV(0-OLD.PRO.REC<11>,'MR2')
         VAR.NOTE = '     ':OLD.PRO.REC<41,2>
         VAR.NOTE.LEN = LEN(VAR.NOTE)
         IF VAR.NOTE # '' THEN
            DONE = 0
            LOOP UNTIL DONE DO
               PA<-1> = VAR.NOTE[1,80]
               VAR.NOTE = VAR.NOTE[81,9999]
               VAR.NOTE.LEN -= 80
               IF VAR.NOTE.LEN < 0 THEN DONE = 1
            REPEAT
         END
      END
      GOSUB CHECK.FOR.ADD.NOTES          ; * NPR12
      NOTE.VIN = ''                      ; * NPR99
      N.NOTES = DCOUNT(ADD.NOTE.REC<4>,@VM)        ; * NPR99
      FOR NN = 1 TO N.NOTES              ; * NPR99
         NOTE.STR = ADD.NOTE.REC<4,NN>:" (":ADD.NOTE.REC<1,NN>:" ":OCONV(ADD.NOTE.REC<2,NN>,'D2/'):")"         ; * NPR99
         NOTE.VIN<1,-1> = NOTE.STR       ; * NPR99
      NEXT NN                            ; * NPR99
      IF NOTE.VIN NE "" THEN             ; * NPR12
         CONVERT @VM TO " " IN NOTE.VIN  ; * NPR12
         CONVERT @SVM TO " " IN NOTE.VIN           ; * NPR12
         NOTE.VIN = TRIM(NOTE.VIN)       ; * NPR12
         NOTE.VIN<2> = 75                ; * NPR12
         CALL WRAP.TEXT(NOTE.VIN,NOTE.VOUT)        ; * NPR12
         N.NOTES = NOTE.VOUT<2>          ; * NPR12
         FOR I=1 TO N.NOTES              ; * NPR12
            IF I = 1 THEN PA<-1> = STR("-",24):" A D D I T I O N A L  N O T E S ":STR("-",24)        ; * NPR12
            ADD.NOTE=NOTE.VOUT<1,I>      ; * NPR12
            PA<-1> = "  ":ADD.NOTE       ; * NPR12
         NEXT I                          ; * NPR12
      END
      DMSG=''                            ; * DFP01
      TEST.ID = CLIENT.ID:"*":PRO.ID     ; * DFP01
      READ TEST.REC FROM F.PAY,TEST.ID ELSE TEST.REC=""      ; * DFP01
      IF TEST.REC#'' THEN                ; * DFP01
         SELECTED.DT=TEST.REC<133>+0     ; * DFP01
         SCHEDULED.DT=TEST.REC<134>+0    ; * DFP01
         IF SELECTED.DT OR SCHEDULED.DT THEN       ; * DFP01
            DMSG<1>=' '
            DMSG<2>='This bill has been selected for payment on '      ; * DFP01
            DMSG<2>:=SELECTED.DT'D2/':'.'          ; * DFP01
            DMSG<3>='Scheduled for payment on '    ; * DFP01
            DMSG<3>:=SCHEDULED.DT'D2/':'.'         ; * DFP01
            DMSG<4>=REV.ON               ; * DFP01
            DMSG<4>:='* * * NO UPDATES ALLOWED * * *'        ; * DFP01
            DMSG<4>:=REV.OFF             ; * DFP01
            Q=''                         ; * DFP01
            OK.TO.EDIT=0                 ; * DFP01
         END                             ; * DFP01
      END                                ; * DFP01
      IF DMSG#'' THEN                    ; * DFP01
         FOR DMCNT=1 TO 4                ; * DFP01
            PA<-1>=DMSG<DMCNT>           ; * DFP01
         NEXT DMCNT                      ; * DFP01
      END                                ; * DFP01
      RETURN

*****************************************************************
DISPLAY.REJECTS:
*****************************************************************
      REJECT.REASONS<1>=OLD.PRO.REC<59>
      REJECT.REASONS<2>=OLD.PRO.REC<60>
      REJECT.REASONS<3>=OLD.PRO.REC<61>
      REJECT.REASONS<4>=OLD.PRO.REC<62>
      REJ.TYPE = OLD.PRO.REC<66>

      CLR.SCR = 1 ; GOSUB DISP.SCREEN.HEADING      ; *NPR08

      CRT @(59,3):AUDITOR.TEXT'L#20':    ; * NPR08 ; * JMK161
      CRT @(9, 1):CBVOUT<1>:CLIENT.ID:' ':HLB:CLIENT.NAME:HLA:@(-6)    ; * NPR08  ;* NPR13
      TEXT=CARRIER.ID:' ':CARRIER.NAME:' ':CARRIER.STREET:' ':CARRIER.CITY
      CARRIER.TEXT = TRIM(CARRIER.ID:' ':CARRIER.NAME)
      CRT @(9,2):CARRIER.TEXT[1,38]

      CRT @(0, 5):STR('-',79)
      DISP=PRO
      IF VERSION#'' THEN
         DISP:=' Version ':VERSION
      END
      IF REJECT.FLAG='R' THEN DISP:=' (REJECTED'
      IF REJ.TYPE#'N' THEN
         DISP:='-PAYABLE'
      END ELSE
         DISP:='-NEVER PAY'
      END
      DISP:=')'
      CRT @(0, 6):'Pro#:':DISP
      CRT @(0, 7):'Date:'
      IF OLD.PRO.REC<1> THEN             ; * BILL DATE
         DISP=OLD.PRO.REC<1>'D2/'
      END ELSE
         DISP='(none)'
      END
      CRT @(5,7):DISP
      IF OLD.PRO.REC<38> # '' THEN CRT @(14, 7):'Due:':OLD.PRO.REC<38>'D2/'
      CRT @(40, 7):'Amnt:'
      IF OLD.PRO.REC<7> THEN             ; * CARRIER CHARGE
         DISP=OLD.PRO.REC<7>'R26#8'
      END ELSE
         DISP='(none)'
      END
      CRT @(45,7):DISP
      CRT @(0, 8):STR('-',79):
      CRT @(0,21):STR('-',79):
      CRT @(28,8):' REJECT PAYMENT REASONS '
      LINE = 1
      LINE.NUM=1
      VIN=74                             ; * MAX LINE LEN
      VIN<2>='ALL'                       ; * SHOW ALL REASONS (INCLUDING 'REM:')
      CALL FORMAT.REJECT.REASONS(VIN, OLD.PRO.REC, VOUT)
      IF VOUT<1> = -1 THEN
         VOUT<1> = 1                     ; * Error happened. Print it with the ForLoop
      END ELSE
         IF VOUT<1> = 0 THEN
            CALL ELINE("Contact David - This bill's rejection reasons are missing")
         END
      END
      * Will the display hold all reasons?
      LINE.NUM = VOUT<1>
      IF LINE.NUM > 8 THEN
         * Break reasons on screen - Only show FULL reasons -
         * Don't break between lines.
         LINE.NUM = 8
         LOOP
         UNTIL (VOUT<2,LINE.NUM+1>#'' OR LINE.NUM < 3)
            LINE.NUM-=1
         REPEAT
      END
      * Display
      FOR RX = 1 TO LINE.NUM
         NUM = VOUT<2,RX>
         IF NUM THEN NUM=NUM'R#2':')' ELSE NUM = '   '
         TEXT.LINE = NUM:VOUT<3,RX>
         CRT @(0,9+RX):TEXT.LINE'L#79'
      NEXT
      * If there were more reasons than what was displayed
      * let the user know (Spell it out for them)
      IF LINE.NUM < VOUT<1> THEN
         MSG = @(18,19)
         MSG:= TERM.ESC.SEQ:CHAR(TERM.BLINK)
         MSG:= "* MORE REJECT REASONS ON FILE FOR THIS BILL *"
         MSG:= TERM.ESC.SEQ:CHAR(TERM.NORMAL)
         MSG:=@(20,20)
         MSG:= "* PRESS 'R' TO VIEW ALL REJECT REASONS *"
         CRT MSG
      END ELSE
         CRT @(20,20):"* PRESS 'R' TO VIEW A DETAILED LISTING *"
      END
      IF REJ.TYPE='N' THEN
         CALL ELINE('NOTICE! This bill is a NEVER PAY reject!')
      END
      REJECTS.DISPLAYED = 1              ; * NKH34
      RETURN

*****************************************************************
8200: * Display data
*****************************************************************
      IF IMAGE = "" AND PRO.REC<280> > "" THEN IMAGE = PRO.REC<280>    ; * NKH04
      IF NOT(OCR.ENTRY) THEN IMAGE = PRO.REC<280>  ; * NKH04
      DATA.DSP = ""                      ; * NPR08
      IF CARR.FSC='Y' THEN               ; * JMK107
         DATA.DSP := @(9,1):CBVOUT<1>:CLIENT.ID:'*':HLB:CLIENT.NAME[1,26]:HLA:@(-6)        ; *NPR08  ;*NPR13 * NKH04
      END ELSE                           ; * JMK107
         DATA.DSP := @(9,1):CBVOUT<1>:CLIENT.ID:' ':HLB:CLIENT.NAME[1,26]:HLA:@(-6)        ; *NPR08  ;*NPR13 * NKH04
      END                                ; * JMK107
      DATA.DSP := @(47,1):OCR.STACK      ; * NKH04
      DATA.DSP := @(59,1):SECOND.SALESMAN.NUMBER.NAME[1,21]  ; *SWB01
      CARRIER.TEXT=CARRIER.ID:' ':CARRIER.NAME     ; *NPR08
      CARRIER.ADDR = CARRIER.STREET:' ':CARRIER.CITY
      DATA.DSP := @(9,2):CARRIER.TEXT[1,38]        ; *NPR08
      DATA.DSP := @(9,3):CARRIER.ADDR[1,40]        ; *NPR08
      ACCT.MGR.DSP=TRIM(ACCT.MGR:" ":ACCT.MGR.NAME)          ; * SWB01
      DATA.DSP := @(59,2):ACCT.MGR.DSP[1,21]       ; * SWB01
      IF AUDITOR.TEXT = "" AND CL.AUDITOR NE "" THEN AUDITOR.TEXT = CL.AUDITOR   ; * NPR08
      DATA.DSP := @(59,3):AUDITOR.TEXT'L#21'       ; *NPR08 ; * JMK161
      DATA.DSP := @(9,4):OCONV(PRE.AUD.FROM.DT,"D2/")        ; *NPR08
      DATA.DSP := @(9,5):IMAGE           ; * NKH04
      *      DATA.DSP := @(5,14):OCONV(RVCD.DATE,'D2/')   ; * NKH06  * NKH13
      DATA.DSP := @(22,4):OCONV(PRE.AUD.TO.DT,"D2/")         ; *NPR08
      DATA.DSP := @(41,4):CL.STATUS      ; *NPR08
      DATA.DSP := @(70,4):NEW.AUDITOR.TEXT         ; *NPR08
      DATA.DSP := @(59,5):AR.REP.NAME    ; * RLM002
      DISP=PRO
      IF VERSION#'' THEN
         DISP:=' Version ':VERSION
      END
      IF REJECT.FLAG='R' THEN DISP:=' (REJECTED)'
      IF ENTERED.BY#'' THEN DISP:='   Entered by : ':ENTERED.BY        ; * NPR024
      IF VERIFIED.BY # '' THEN DISP:='   Verified by : ':VERIFIED.BY   ; * NPR024
      DATA.DSP := @(5,6):DISP : @(-4)    ; * NPR024  ; NPR034
      IF CAPTURE.INVOICE THEN            ; * JMK106
         DATA.DSP := @(46,7) : INV.NUM'L#20'
         IF NUM.OF.PRO GE "0" THEN
            DATA.DSP := @(66,7):NUM.OF.PRO'R#4' : @(74,7) : TOT.NUM.OF.PRO'R#4'
         END
      END
      IF CARRIER.ID='01075' AND INV.NUM#'' THEN
         DATA.DSP := @(46,7) : INV.NUM'L#20'
      END
      IF CARRIER.ID='20114' AND INV.NUM#'' THEN
         DATA.DSP := @(46,7) : INV.NUM'L#20'
      END
      IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN     ; * United Parcel Service
         DATA.DSP := @(46,8):'UPS Addr Correc Chrg: '
         IF ADDRESS.CORRECTION.CHARGE NE '' THEN DATA.DSP := ADDRESS.CORRECTION.CHARGE 'R26,'
         DATA.DSP := @(46,9):'UPS Fees Charge     : '
         IF UPS.FEE.CHARGE NE '' THEN DATA.DSP := UPS.FEE.CHARGE 'R26,'
      END
      IF BILL.DATE#'' THEN DATA.DSP:=@(5,7):BILL.DATE'D2/'
      IF DUE.DATE#'' THEN
         DATA.DSP := @(14,7):'Due ':DUE.DATE'D2/'
         DATA.DSP := @(27,7):'Ent ':ENTRY.DATE 'D2/'         ; * NPRZZ  ; * NKH43
      END ELSE
         IF ENTRY.DATE#'' THEN DATA.DSP := @(14,7):'Ent ':ENTRY.DATE 'D2/'       ; * NPRZZ
      END
      DATA.DSP := @(5,8):IN.OUT'L#5'
      IF DIVISION # '' THEN
         IF DIVISION # '-' THEN
            IF CLIENT.ID='01638' OR CLIENT.ID='01267' OR CLIENT.ID = '01675' OR CLIENT.ID = '05638' OR CLIENT.ID='01749' OR CLIENT.ID='05500' OR CLIENT.ID='05026' OR CLIENT.ID='01457' OR CLIENT.ID='05049' OR CLIENT.ID = '05548' OR CLIENT.ID='01389' OR CLIENT.ID='01644' THEN       ; *GRB11 ;* DRF097 GRB18
               DATA.DSP := @(5,9):DIVISION'R%6'
            END ELSE
               DATA.DSP := @(5,9):DIVISION'R%5'
            END
         END ELSE
            DATA.DSP := @(5,9):DIVISION:SPACE(4)
         END
      END
      IF DO.BOL.POP THEN
         IF M.BOL.REC NE "" THEN
            DATA.DSP := @(11,8) : "BOL # ":ID.BOL.CRX
         END
      END
      IF ORIG.ZIP # '' THEN
         DESC = ORIG.ZIP ZIP.MASK
         IF ZIP.LEN = '5' OR ZIP.LEN = 'C' THEN DESC = DESC:' ':ORIG.CITY:', '
         DESC = DESC:ORIG.STATE
         IF ORIG.ZIP = "99999" AND ORIG.COUNTRY.CD NE "" THEN

            DATA.DSP := @(5,10):DESC:" (":ORIG.COUNTRY.CD:")"          ; * NPR020
         END ELSE                        ; * NPR020
            DATA.DSP := @(5,10):DESC:@(-4)
         END
      END
      IF DEST.ZIP # '' THEN
         DESC = DEST.ZIP ZIP.MASK
         IF ZIP.LEN = '5' OR ZIP.LEN = 'C' THEN DESC = DESC:' ':DEST.CITY:', '
         DESC = DESC:DEST.STATE
         IF DEST.ZIP = "99999" AND DEST.COUNTRY.CD NE "" THEN

            DATA.DSP := @(5,11):DESC:" (":DEST.COUNTRY.CD:")"          ; * NPR020
         END ELSE                        ; * NPR020
            DATA.DSP := @(5,11):DESC:@(-4)
         END
      END
      DATA.DSP := @(5,12):EXP.CODE:' ':EXP.CODE.DESC:@(-4)
      IF VC.DESC # '' THEN
         BEGIN CASE
            CASE IN.OUT='O'
               LN = 'Cust.':VC.DESC
            CASE IN.OUT='I'
               LN = 'Vend.':VC.DESC
            CASE IN.OUT='T'
               LN = 'Shpr.':VC.DESC
         END CASE
         DATA.DSP := @(0,13):LN
      END
      DATA.DSP := @(5,14):CLASS<1,1>
      DATA.DSP := @(5,15):MILEAGE'L1,#10'
      IF (CLIENT.ID='01323' OR CLIENT.ID='01324' OR CLIENT.ID='01325' OR CLIENT.ID='01326') AND (FRT.FLAG OR USER='JAUDIT' OR USER='FDDAVID' OR SPECIAL.NIKKI.VACATION) THEN         ; * SWB07
         DATA.DSP := @(0,20) : WEIGHT'R#7' : '  Dim'
         DATA.DSP := @(0,19) : '      '
      END ELSE
         DATA.DSP := @(0,19) : WEIGHT'R#6'
      END
      DATA.DSP := CARRIER.CHG'R26#9'
      DATA.DSP := ACTUAL.CHG'R26#9'
      IF FLAT.RATE THEN
         DATA.DSP := 'F'
      END ELSE
         DATA.DSP := ' '
      END
      DATA.DSP := VARIANCE'R26#7'
      DATA.DSP := @(43,19) : MISROUTE.AMOUNT'R26#10'
      LOCATE 'A' IN VERIFIED<1> SETTING NUL THEN
         DATA.DSP := @(8,20):"|--From On-Line Audit--|"
      END ELSE
         IF ENTRY.DATE#'' AND ENTRY.DATE < "11140" THEN
            DATA.DSP := @(8,20):"|-Entered on ":ENTRY.DATE'D2/':" -|"
         END
      END
      DATA.DSP := @(19,15) : HANDLING.UNITS 'R#5'  ; * NPR035
      DATA.DSP := @(37,13):"Class: "
      DATA.DSP := @(37,14):"Weight:"
      N.CLASSES = DCOUNT(CLASSES<1>,@VM)           ; * NPR08
      IF N.CLASSES GT "5" THEN CLC = 5 ELSE CLC = N.CLASSES  ; * NPR08
      FOR XX = 1 TO CLC
         DATA.DSP := @(37+XX*7,13):CLASSES<1,XX>'R#7'
         DATA.DSP := @(37+XX*7,14):WEIGHTS<1,XX>'R#7'
      NEXT XX
      IF CLASSES<1,6>#'' THEN DATA.DSP := @(75,15):'more'
      IF MISROUTE.CARRIER#'' THEN
         READV MISROUTE.NAME FROM F.CARRIERS,MISROUTE.CARRIER,1 ELSE
            MISROUTE.NAME='Unknown Carrier'
         END
         DATA.DSP := @(56,19):MISROUTE.CARRIER'R%5':' ':MISROUTE.NAME'L#11'
      END ELSE
         DATA.DSP := @(56,19):SPACE(16)
      END
      DATA.DSP := @(43,20) : LCC.AMOUNT'R26#10'
      IF LCC.CARRIER#'' THEN
         READV LCC.NAME FROM F.CARRIERS,LCC.CARRIER,1 ELSE
            LCC.NAME='Unknown Carrier'
         END
         DATA.DSP := @(56,20):LCC.CARRIER'R%5':' ':LCC.NAME'L#11'
      END ELSE
         DATA.DSP := @(56,20):SPACE(16)
      END
      DATA.DSP := @(0,21):AIR.PIECES'R#7'
      DATA.DSP := @(0,21):DIM.WEIGHT'R#7'
      IF RULES.OUTPUT = '1' THEN         ; *NPR08
         DATA.DSP := @(59,4):'Y'         ; *NPR08
      END ELSE                           ; *NPR08
         DATA.DSP := @(59,4):'N'         ; *NPR08
      END
      IF BDA.FLAG THEN
         DATA.DSP := @(69,0): "---" :REV.ON: "BDA" : REV.OFF: "-----"  ; * SWB02
      END
      BOL.SRC.DESC=''                    ; * SWB02
      IF BOL.SRC # '' THEN               ; * SWB02
         READ BOL.SRC.INFO FROM F.TABLES, 'BOL.SRC*':BOL.SRC ELSE BOL.SRC.INFO=''          ; * SWB02
         BOL.SRC.DESC=BOL.SRC.INFO<2>    ; * SWB02

      END ELSE IF BOL.ID.USED NE "" THEN           ; * SWB02
         BOL.SRC.DESC='AFS-BOL'          ; * SWB02
      END                                ; * SWB02
      IF BOL.SRC.DESC # '' THEN          ; * SWB02
         DATA.DSP := @(69,0): STR('-',11)          ; * JMK208 ; * SWB02
         LEN.BOL.SRC.DESC=LEN(TRIM(BOL.SRC.DESC))  ; * SWB02
         DATA.DSP := @(69,0): REV.ON : BOL.SRC.DESC[1,LEN.BOL.SRC.DESC] : REV.OFF          ; * SWB02
      END                                ; * NPR058
      CRT DATA.DSP

      RETURN

*****************************************************************
8250: * Select inquire options
******************************************************************
      IF QI = 'I' OR QI = '3' OR QI = 'ADJ' OR QI = 10 THEN  ; *NPR06
         LOOP
            HELP = "[cr]=Exit [B]OLs [C]ls [D]isc [V]ar [E]xp [L]ogis I[M]age "  ; * JMK119 NKH04
            IF DTL.CHRG.CODES NE '' THEN HELP := "[Q]uery Det. "       ; * NPR054
            IF OLD.PRO.REC<88>#'' THEN HELP:= "ED[I] "       ; * JMK119 ; * NPR08
            IF OLD.PRO.REC<213>#'' THEN HELP:= "[N]otes "    ; * JMK119
            IF OLD.PRO.REC<116>#'' THEN HELP:= "[O]vRds "    ; * NPR08
            IF OLD.PRO.REC<240>#'' THEN HELP:= "[A]FSBOL "   ; * JMK208
            CALL GEN.IN(0,22,' ','',Q,0,1,'','',1,79,22,1,QI,HELP,0,22)
            CC+=LEN(QI) ; GOSUB PRINT.CC
         UNTIL QI = '' DO
            QI = OCONV(QI,'MCU')
            BEGIN CASE
               CASE QI = ''
                  NULL
               CASE QI = 'A' AND OLD.PRO.REC<240>#''         ; * JMK208 ; * JMK221
                  CALL FB.SHOW.AFSBOL(OLD.PRO.REC<240>)      ; * JMK208
               CASE QI = 'B'
                  VIN=0
                  VIN<2>=USER
                  VIN<4>=IN.OUT          ; * Send In / Out Flag Every Time
                  VIN<5>=CARRIER.ID
                  VIN<12>=ACTUAL.CHG     ; * JMK84
                  VIN<13>=BOL.DIST       ; * JMK84
                  IF CLIENT.ID='02427' THEN        ; * JMK270
                     SO.NUM=TRIM(OLD.PRO.REC<183>)           ; * JMK270
                     IF SO.NUM#'' THEN   ; * JMK270
                        VIN<14>=SO.NUM   ; * JMK270
                     END                 ; * JMK270
                  END                    ; * JMK270
                  IF CLIENT.ID='05543' AND AFS.BOL THEN
                     BOL=''
                  END
                  CALL FB.2.1.BOL.NEW(VIN,VOUT,CLIENT.ID,MAT CLIENT.REC,BOL,QI,'I')
                  CC+=VOUT<1> ; GOSUB PRINT.CC
                  GOSUB 8100             ; * NPR024
                  GOSUB 8200             ; * NPR024
               CASE QI = "Q"
                  BEGIN CASE
*                     CASE INTL.CAR OR ORIG.ZIP = "99999" OR DEST.ZIP = "99999"                             ; * NKH79
                     CASE (INTL.CAR OR ORIG.ZIP = "99999" OR DEST.ZIP = "99999") AND CLIENT.ID # "02427"       ; * NKH79
                        IF NOT(PARCEL.FLAG) THEN
                           CVIN = ''
                           CVIN<3> = INTL.CHRG.CODES
                           CVIN<4> = INTL.CHRG.AMTS
                           CVIN<7> = CARRIER.ID
                           CVIN<8> = CARRIER.NAME
                           ORIG = ORIG.ZIP:' ':ORIG.CITY:', ': ORIG.STATE
                           CVIN<9> = ORIG
                           DEST = DEST.ZIP:' ':DEST.CITY:', ': DEST.STATE
                           CVIN<10> = DEST
                           CVIN<11> = ACTUAL.CHG
                           CVIN<12> = 0
                           CVIN<13>='V'
                           CVIN<14> = USER
                           CVOUT=''

                           CALL FB.2.1.INTL.FREIGHT(CVIN,CVOUT,INTL.CODES,QI)
                           CC+=CVOUT<5> ; GOSUB PRINT.CC
                           GOSUB 8100
                           GOSUB 8200
                        END
                     CASE 1
                        CVIN=''
                        CVIN<3> = DTL.CHRG.CODES
                        CVIN<4> = DTL.CHRG.AMTS
                        CVIN<6> = WEIGHT
                        CVIN<7> = CARRIER.ID
                        CVIN<8> = CARRIER.NAME
                        ORIG = ORIG.ZIP:' ':ORIG.CITY:', ': ORIG.STATE
                        CVIN<9> = ORIG
                        DEST = DEST.ZIP:' ':DEST.CITY:', ': DEST.STATE
                        CVIN<10> = DEST
                        CVIN<11> = ACTUAL.CHG
                        CVIN<12> = CC
                        CVIN<13>='E'
                        CVIN<14> = USER
                        CVIN<15> = MISC.REASON     ; * JMK157
                        IF TEMPO.CLIENT.FLG THEN   ; * GRB19
                           CVIN<16> = CLIENT.ID    ; * GRB19
                        END              ; * GRB19
                        CVOUT=''
                        IF USER = 'GBINO' THEN DEBUG
                        CALL FB.2.1.TL.FREIGHT(CVIN,CVOUT,LI.CODES,QI)
                        CC+=VOUT<1> ; GOSUB PRINT.CC
                        GOSUB 8100       ; * NPR024
                        GOSUB 8200       ; * NPR024
                  END CASE
               CASE QI = 'D'
                  CALL FB.2.1.DISC(DISC.PERC,DISC.DET,NET,'I')
                  CALL FB.CLEAR.WINDOW
               CASE QI = 'C'
                  CALL FB.2.1.CLASS(CLASS,QI,'I')
                  CALL FB.CLEAR.WINDOW
                  GOSUB 8100             ; * NPR024
                  GOSUB 8200             ; * NPR024
               CASE QI = 'V'
                  VIN=0                  ; * Starting Characters
                  VIN<2>=USER
                  GOSUB GET.ALLOW.DISCOUNTS
                  VIN<3>=ALLOW.DISCOUNTS
                  VIN<4>=CLIENT.ID
                  VIN<5>=CARRIER.ID
                  CALL FB.2.1.VARIANCE.NEW(VIN,VOUT,MAT CLIENT.REC,BAL.DUE,VARIANCE,VAR.ARR,'I')
                  CC+=VOUT<1> ; GOSUB PRINT.CC
                  DISC.DESC=VOUT<2>      ; * JMK34
                  GOSUB 8100
                  GOSUB 8200
               CASE QI = 'E'
                  VIN=0                  ; * Starting Characters for Subroutine
                  VIN<2>=USER
                  VIN<3>=CLIENT.ID       ; * JMK193
                  VIN<4>=CARRIER.ID
                  VIN<5>=DIVISION
                  CALL FB.2.1.DIST.NEW(VIN,VOUT,F.DIV,F.EXP,ACTUAL.CHG,DTAB,'I')
                  CC+=VOUT<1> ; GOSUB PRINT.CC
                  CALL FB.CLEAR.WINDOW
                  GOSUB 8100             ; * NPR024
                  GOSUB 8200             ; * NPR024
               CASE QI = 'L'
                  VIN=0
                  VIN<2>=USER
                  CALL FB.2.1.VAR.DIST.NEW(VIN,VOUT,F.VAR,VAR.ARR<3>,VAR.REC,'I')
                  CC+=VOUT<1> ; GOSUB PRINT.CC
                  CALL FB.CLEAR.WINDOW
                  GOSUB 8100             ; * NPR024
                  GOSUB 8200             ; * NPR024
               CASE QI = 'I' AND OLD.PRO.REC<88>#''
                  EDI.VIN=''
                  EDI.VIN<1>=CLIENT.ID
                  EDI.VIN<2>=CARRIER.ID
                  EDI.VIN<3>=PRO
                  EDI.VOUT=''
                  CALL FB.2.1.EDI(EDI.VIN,EDI.VOUT,OLD.PRO.REC)
                  QI=''
                  GOSUB 8100
                  GOSUB 8200
               CASE QI = 'N' AND OLD.PRO.REC<213>#''         ; * JMK119
                  CALL FB.2.1.NOTES(FB.NOTE,QI,1)  ; * JMK119
                  GOSUB 8100             ; * JMK119
                  GOSUB 8200             ; * JMK119
               CASE QI = 'O' AND OLD.PRO.REC<116>#''         ; * NPR08
                  GOSUB DISPLAY.OVERRIDE.RULES     ; * NPR08
                  GOSUB 8100             ; * NPR08
                  GOSUB 8200             ; * NPR08
                  * Begin NKH04
               CASE QI = 'M'
                  IMAGE=OLD.PRO.REC<280>
                  IF IMAGE # "" THEN
                     *CRT 'SHOW IMAGE 3';INPUT CONT
                     CALL FB.SHOW.INV.IMAGE(IMAGE)
                  END ELSE
                     CALL ELINE('No image attached to this bill')
                  END
                  * End NKH04
            END CASE
         REPEAT
      END
      * Begin NKH04
      IF OCR.ENTRY THEN                  ; * NKH34
         IF SAVE.IMAGE # '' THEN
            IMAGE = SAVE.IMAGE
            *CRT 'SHOW IMAGE 6';INPUT CONT
            CALL FB.SHOW.INV.IMAGE(IMAGE)
            SAVE.IMAGE = ''
         END
      END                                ; * NKH34
      * End NKH04
      RETURN

******************************************************************
DISP.SCREEN.HEADING:
******************************************************************
      IF CLR.SCR THEN
         CRT @(-1):
      END ELSE
         CRT @(0,0):@(-4):
         CRT @(0,1):@(-4):
      END
      *      MR.DISP.STR = SESSION.MR.DISP.STR  ; * SWB08   NKH06
      *      IF BILL.MR.DISP.STR # '' THEN MR.DISP.STR = BILL.MR.DISP.STR     ; * SWB08   NKH06
      *      CRT @(0,0):MR.DISP.STR:" F R E I G H T  B I L L  E N T R Y ":STR("-",22)   ; * SWB08     NKH06
      CRT @(0,0):STR("-",23):" F R E I G H T  B I L L  E N T R Y ":STR("-",22)   ; * NKH06
      IF BDA.FLAG THEN CRT @(69,0): "---" :REV.ON: "BDA" : REV.OFF: "-----"      ; * SWB02

      RETURN                             ; * NPR08

*****************************************************************
8300: * Assign data
*****************************************************************
      BILL.DATE = PRO.REC<1>
      INV.NUM = PRO.REC<94>
      DUE.DATE = PRO.REC<38>
      PMT.DUE.DATE = PRO.REC<238>        ; * NPR048
      IN.OUT = PRO.REC<2>
      ORIG.ZIP = PRO.REC<3>
      DEST.ZIP = PRO.REC<4>
      EXP.CODE = PRO.REC<5>
      WEIGHT = PRO.REC<6>
      CARRIER.CHG = PRO.REC<7>
      ACTUAL.CHG = PRO.REC<8>
      DIVISION = PRO.REC<9>

      VAR.ARR<1> = -PRO.REC<10>
      VAR.ARR<2> = -PRO.REC<11>
      VAR.ARR<3> = -PRO.REC<12>

      BOL = PRO.REC<16>
      BOL.DIST = PRO.REC<205>            ; * JMK84
      VC.ID = PRO.REC<17>
      IF CL.VEND.FLAG = 'Y' ! CL.CUST.FLAG = 'Y' THEN
         IF (VC.ID MATCHES "5N" ) OR (CLIENT.ID = "02427" AND (VC.ID MATCHES "6N")) OR (CLIENT.ID = "01862" AND (VC.ID MATCHES "6N")) OR (CLIENT.ID = "05267" AND (VC.ID MATCHES "6N")) THEN   ; * GRB10
            ****     IF VC.ID MATCHES "5N" THEN; * GRB10
            IF VC.ID #'' AND VC.DESC = '' THEN
               READ VC.REC FROM F.VEND.CUST,VC.ID ELSE VC.REC = ''
               VC.DESC=VC.REC<1>
               VC.OVERRIDE=VC.REC<10>
            END
         END ELSE
            VC.DESC = VC.ID
            VC.ID = ''
         END
      END

      MILEAGE = PRO.REC<19>
      ORIG.STATE = PRO.REC<25>
      DEST.STATE = PRO.REC<26>
      ORIG.CITY = PRO.REC<27>
      DEST.CITY = PRO.REC<28>
      IF PRO.REC<39>='A' THEN AUDIT='Y' ELSE AUDIT='N'
      MIN.CHG = PRO.REC<46>
      ENTERED.BY = PRO.REC<53>           ; * NPR123
      VERIFIED.BY = PRO.REC<54>          ; * NPR123
      CLASS<2> = PRO.REC<58>
      AIR.PIECES = PRO.REC<57>
      BILL.STATUS = PRO.REC<68>
      CLASSES = PRO.REC<74>
      WEIGHTS = PRO.REC<75>
      FRT.ARRAY=''                       ; * JMK14
      MIS.ARRAY=''                       ; * JMK14
      MISC.CHG.CODES=''
      CONTR.MISC.CHG.AMTS=''             ; * SWB09
      BENCH.MISC.CHG.AMTS=''             ; * SWB09
      MISC.CHG.TIMES=DCOUNT(PRO.REC<70>,@VM)
      FOR MISC.CHG.COUNT=1 TO MISC.CHG.TIMES
         IF WEIGHTS<1,MISC.CHG.COUNT>='' & CLASSES<1,MISC.CHG.COUNT>='' THEN
            MISC.CHG.POS=DCOUNT(MISC.CHG.CODES<1>,@VM)+1
            MISC.CHG.CODES<1,MISC.CHG.POS>=PRO.REC<70,MISC.CHG.COUNT>
            CONTR.MISC.CHG.AMTS<1,MISC.CHG.POS>=PRO.REC<77,MISC.CHG.COUNT>
            BENCH.MISC.CHG.AMTS<1,MISC.CHG.POS>=PRO.REC<79,MISC.CHG.COUNT>
         END
      NEXT MISC.CHG.COUNT
      DTAB<1> = PRO.REC<31>
      DTAB<3> = PRO.REC<33>
      IF CLIENT.ID='30028' THEN          ; * JMK193
         DTAB=''                         ; * JMK193
         EXP.NVAL=DCOUNT(PRO.REC<31>,@VM)          ; * JMK193
         FOR EXP.VAL=1 TO EXP.NVAL       ; * JMK193
            DTAB<1,EXP.VAL>=PRO.REC<31,EXP.VAL>:'.':PRO.REC<236,EXP.VAL>:'.':PRO.REC<237,EXP.VAL>    ; * JMK193
         NEXT VAL                        ; * JMK193
      END                                ; * JMK193
      VAR.ARR<4> = -PRO.REC<34>
      VAR.ARR<5> = -PRO.REC<35>
      VAR.ARR<6> = -PRO.REC<36>
      VAR.ARR<7> = PRO.REC<41,1>
      VAR.ARR<8> = PRO.REC<41,2>
      VAR.ARR<9> = PRO.REC<41,3>

      VERIFIED = PRO.REC<45>             ; * MV with Codes to indicate "Good" Fields
      VAR.REC<1> = PRO.REC<51>
      VAR.REC<2> = PRO.REC<52>
      VAR.REC<3> = PRO.REC<56>
      LOGISTIC.AMT = PRO.REC<52>
      VARIANCE = CARRIER.CHG-ACTUAL.CHG
      IF VARIANCE = 0 THEN VAR.ARR = ''

      MISROUTE.ARRAY = PRO.REC<22>
      MISROUTE.ARRAY<2> = PRO.REC<23>
      MISROUTE.ARRAY<3> = PRO.REC<202>   ; * JMK62
      MISROUTE.ARRAY<5> = PRO.REC<221>   ; * JMK226 ; * JMK227
      LCC.ARRAY = PRO.REC<145>           ; * JMK226
      LCC.ARRAY<2> = PRO.REC<146>        ; * JMK226
      LCC.ARRAY<5> = PRO.REC<239>        ; * JMK226
      LCC.ARRAY<7> = PRO.REC<224>        ; * JMK226
      LCC.ARRAY<24> = PRO.REC<221>       ; * JMK226

      ZIP.ARR<1> = PRO.REC<120>          ; * JMK12
      ZIP.ARR<2> = PRO.REC<121>
      ZIP.ARR<3> = PRO.REC<122>
      ZIP.ARR<7> = PRO.REC<149>          ; * JMK12

      NUM.ZIPS = DCOUNT( ZIP.ARR<1>, @VM )
      ZIP.ARR<2,NUM.ZIPS> = PRO.REC<28>
      ZIP.ARR<3,NUM.ZIPS> = PRO.REC<26>
      IF CLIENT.ID='00574' THEN
         IF USER='DAVID' THEN CALL ELINE('PRESS BREAK')
         ZIP.ARR<4>=@VM:PRO.REC<136>
         ZIP.ARR<5>=@VM:PRO.REC<140>
         ZIP.ARR<6>=@VM:PRO.REC<142>
      END
      TRANS.MODE=PRO.REC<65>             ; ** From On-Line Audit
      IF VC.OVERRIDE='Y' THEN            ; * JMK55
         MISROUTE.AMOUNT = PRO.REC<189>  ; * JMK55
         MISROUTE.CARRIER = PRO.REC<190>           ; * JMK55
      END ELSE                           ; * JMK55
         MISROUTE.AMOUNT = PRO.REC<63>
         MISROUTE.CARRIER = PRO.REC<69>
      END
      REJECT.REASONS=''
      REJECT.REASONS<1>=PRO.REC<59>
      REJECT.REASONS<2>=PRO.REC<60>
      REJECT.REASONS<3>=PRO.REC<61>
      REJECT.REASONS<4>=PRO.REC<62>
      MAILING.ADDR<1>=PRO.REC<64,1>
      MAILING.ADDR<2>=PRO.REC<64,2>
      MAILING.ADDR<3>=PRO.REC<64,3>
      MAILING.ADDR<4>=PRO.REC<64,4>
      REJ.TYPE = PRO.REC<66>
      SERVICE.LEVEL = PRO.REC<65>
      DIM.WEIGHT = PRO.REC<106>
      AIR.CHRG.CODES<1> = PRO.REC<107>
      AIR.CHRG.AMTS<1> = PRO.REC<108>
      INTL.CHRG.CODES<1> = PRO.REC<207>  ; * NPR031
      INTL.CHRG.AMTS<1> = PRO.REC<208>   ; * NPR031
      TRANS.MODE = PRO.REC<21>
      ENTRY.DATE=PRO.REC<30>
      MISSING.DATA=PRO.REC<93>
      AUDITOR=PRO.REC<89>
      VC.CODE=PRO.REC<90>
      OLA.AMT=PRO.REC<99>
      IF PRO.REC<100>#'' THEN
         VC.ID=PRO.REC<100>
      END
      CUST.VEND.ADDR<1> = PRO.REC<101>   ; * Name
      CUST.VEND.ADDR<2> = PRO.REC<102>   ; * Address1,Address2 (MV)
      CUST.VEND.ADDR<3> = PRO.REC<103>   ; * City
      CUST.VEND.ADDR<4> = PRO.REC<104>   ; * State
      CUST.VEND.ADDR<5> = PRO.REC<105>   ; * Zip
      IF PRO.REC<39>='R' THEN REJECT.FLAG = PRO.REC<39>
      OVERRIDE.STATUS=PRO.REC<96>
      OVERRIDE.FIELD=PRO.REC<116>
      OVERRIDE.OPERATOR=PRO.REC<117>
      OVERRIDE.INFO=PRO.REC<118>
      FLAT.RATE=PRO.REC<119>
      ADDRESS.CORRECTION.CHARGE=PRO.REC<123>
      UPS.FEE.CHARGE=PRO.REC<148>        ; * JMK11
      TL.BILL.MILES=PRO.REC<150>         ; * JMK12
      IF AIR.CAR THEN                    ; * JMK164
         AIR.CHRG.CODES=PRO.REC<151>     ; * JMK12
         AIR.CHRG.AMTS=PRO.REC<152>      ; * JMK12
      END ELSE                           ; * JMK164
         DTL.CHRG.CODES=PRO.REC<151>     ; * JMK12
         DTL.CHRG.AMTS=PRO.REC<152>      ; * JMK12
      END                                ; * JMK164
      TL.CHG.AMTS=PRO.REC<152>           ; * JMK12

      IF ORIG.ZIP MATCH('1A1N1A1N1A1N') AND (CL.BANK#'C') THEN         ; * JMK112
         DIDUTY<2,1>=PRO.REC<124>
         DIDUTY<2,2>=PRO.REC<125>
         DIDUTY<2,3>=PRO.REC<126>
         DIDUTY<2,4>=PRO.REC<127>
         DIDUTY<2,5>=PRO.REC<128>
      END                                ; * JMK112
      IF DEST.ZIP MATCH('1A1N1A1N1A1N') AND (CL.BANK#'C') THEN         ; * JMK112
         DODUTY<2,1>=PRO.REC<125>
         DODUTY<2,2>=PRO.REC<126>
         DODUTY<2,3>=PRO.REC<127>
         DODUTY<2,4>=PRO.REC<128>
      END
      IF (ORIG.ZIP MATCH('1A1N1A1N1A1N') OR DEST.ZIP MATCH('1A1N1A1N1A1N')) AND (CL.BANK='C') THEN
         IF NOT(DEST.ZIP MATCH('1A1N1A1N1A1N')) THEN
            DIDUTY<2,1>=PRO.REC<124>
            DIDUTY<2,2>=PRO.REC<125>
            DIDUTY<2,3>=PRO.REC<126>
            DIDUTY<2,4>=PRO.REC<127>
            DIDUTY<2,5>=PRO.REC<128>
         END ELSE
            DODUTY<2,1>=PRO.REC<125>
            DODUTY<2,2>=PRO.REC<126>
            DODUTY<2,3>=PRO.REC<127>
            DODUTY<2,4>=PRO.REC<128>
         END
      END
      LCC.AMOUNT=PRO.REC<143>
      LCC.CARRIER=PRO.REC<147>
      DISC.DESC=PRO.REC<166>             ; * JMK58
      FOR UATT=1 TO 6                    ; * JMK49
         UFLDS<UATT>=PRO.REC<182+UATT>   ; * JMK49
      NEXT UATT                          ; * JMK49
      CONTR.FSC.PARMS=PRO.REC<199>       ; * JMK61
      BENCH.FSC.PARMS=PRO.REC<200>       ; * JMK61
      AFS.FSC.PARMS=PRO.REC<201>         ; * JMK61
      FB.NOTE=PRO.REC<213>               ; * JMK111
      MISC.REASON=PRO.REC<218>           ; * JMK157
      ORIG.COUNTRY.CD = PRO.REC<222>     ; * NPR020
      DEST.COUNTRY.CD = PRO.REC<223>     ; * NPR020
      *DF      BOL.SRC = PRO.REC<224>             ; * SWB02
      BOL.SRC = PRO.REC<244>             ; * SWB02; * Change to 244 instead of 224
      HANDLING.UNITS = PRO.REC<235>      ; * NPR35
      IF CLIENT.ID='30028' THEN          ; * JMK193
         EXP.CCTR = PRO.REC<236,1>       ; * JMK193
         EXP.PROJ = PRO.REC<237,1>       ; * JMK193
      END                                ; * JMK193
      BOL.ID.USED = PRO.REC<240>         ; * NPR058
      *      RVCD.DATE = PRO.REC<246>           ; * NKH06   * NKH13
      *      IMAGE = PRO.REC<280>               ; * NKH04
      *BILL.MR.DATE assigned at READ. Don't need to assign here.
      *Fields 246 and 247 are updated but not displayed by this program
      *      MR.TO.ENT.DAYS = PRO.REC<248>      ; * SWB08   NKH06
      *      MR.TO.PROCESS.DAYS = PRO.REC<249>  ; * SWB08   NKH06
      *Field 30 is updated every time a Rejection is done. Field 248 is
      *set ONLY when the Freight Bill is created thru FB.2.1.NW. It is used
      *to update files. It should NEVER be updated except when the bill is
      *being created.
      *      ORIG.ENTERED.DATE = PRO.REC<247>   ; * SWB08   NKH06
      TEMP.CLIENT.ID=CLIENT.ID
      RETURN

*****************************************************************
8400: * Get next sequential pro number
*****************************************************************
      READVU NEXT.NUM FROM F.DICT.CLIENTS, 'SEQ', 1 ELSE NEXT.NUM = ''
      NEXT.NUM = NEXT.NUM 'R0'
      IF NEXT.NUM = 0 THEN NEXT.NUM = 1
      NEXT.NUM += 1
      WRITEV NEXT.NUM ON F.DICT.CLIENTS, 'SEQ', 1
      Q = NEXT.NUM 'R%5'
      RETURN

*****************************************************************
SET.BOL.CRX:* set bill of lading cross ref
*****************************************************************
      OPEN '','FB.BOL.CRX,':CLIENT.ID TO F.BOL.CRX ELSE
         CALL OPEN.ABORT("FB.BOL.CRX,":CLIENT.ID,PROG.NAME)
      END
      IF USER='DAVID' THEN CALL ELINE('BOL - PRESS BREAK')
      BEGIN CASE                         ; * JMK135
         CASE CLIENT.ID='01311'          ; * JMK135
            PRO.ATT=10                   ; * JMK135
         CASE CLIENT.ID='01460'          ; * JMK135
            PRO.ATT=10                   ; * JMK135
         CASE CLIENT.ID='01613'
            PRO.ATT=3
         CASE 1
            PRO.ATT=1                    ; * JMK135
      END CASE                           ; * JMK135
      IF VERSION=0 THEN
         IF CHANGE.FLAG THEN
            IF OLD.PRO.ID#PRO.ID OR OLD.BOL#PRO.REC<16> THEN
               IF OLD.BOL#PRO.REC<16> THEN
                  X = DCOUNT(OLD.BOL<1>,CHAR(253))
                  FOR I = 1 TO X
                     IF OLD.BOL<1,I>#'' THEN
                        IF (CLIENT.ID#'00057' OR OLD.BOL<1,I>#'99999') AND (CLIENT.ID#'00057' OR OLD.BOL<1,I>#'88888') THEN
                           IF CLIENT.ID='01053' THEN
                              IF OLD.PRO.REC<2>='T' THEN

                                 BOL.ID='O*':OLD.BOL<1,I>
                              END ELSE
                                 BOL.ID=OLD.PRO.REC<2>:'*':OLD.BOL<1,I>
                              END
                           END ELSE
                              BOL.ID=OLD.BOL<1,I>
                           END
                           READ TEMP FROM F.BOL.CRX,BOL.ID THEN
                              TEMP.PRO.NUM=FIELD(OLD.PRO.ID,'*',2)

                              LOCATE TEMP.PRO.NUM IN TEMP<PRO.ATT> SETTING POS THEN        ; * JMK135
                                 DEL TEMP<PRO.ATT,POS>       ; * JMK135
                                 DEL TEMP<PRO.ATT+1,POS>     ; * JMK135
                                 DEL TEMP<PRO.ATT+2,POS>     ; * JMK135
                                 IF TEMP<PRO.ATT>='' AND CLIENT.ID#'01053' AND CLIENT.ID#'01529' AND CLIENT.ID#'01613' THEN        ; * JMK133; * JMK135
                                    IF CLIENT.ID#'00981' AND CLIENT.ID#'01053' AND CLIENT.ID#'01311' AND CLIENT.ID#'01460' AND CLIENT.ID#'01613' THEN
                                       DELETE F.BOL.CRX,BOL.ID
                                    END
                                 END ELSE
                                    WRITE TEMP ON F.BOL.CRX,BOL.ID
                                 END
                              END
                           END
                        END
                     END
                  NEXT I
               END ELSE
                  IF OLD.PRO.ID#PRO.ID THEN
                     X=DCOUNT(BOL<1>,CHAR(253))
                     FOR I = 1 TO X
                        IF BOL<1,I>#'' THEN
                           IF (CLIENT.ID#'00057' OR BOL<1,I>#'99999') AND (CLIENT.ID#'00057' OR BOL<1,I>#'88888') THEN
                              IF CLIENT.ID='01053' THEN
                                 IF IN.OUT='T' THEN
                                    BOL.ID='I*':BOL<1,I>
                                 END ELSE
                                    BOL.ID=IN.OUT:'*':BOL<1,I>
                                 END
                              END ELSE
                                 BOL.ID=BOL<1,I>
                              END
                              READ TEMP FROM F.BOL.CRX,BOL.ID THEN
                                 TEMP.PRO.NUM=FIELD(OLD.PRO.ID,'*',2)

                                 LOCATE TEMP.PRO.NUM IN TEMP<PRO.ATT> SETTING POS THEN     ; * JMK135
                                    DEL TEMP<PRO.ATT,POS>    ; * JMK135
                                    DEL TEMP<PRO.ATT+1,POS>  ; * JMK135
                                    DEL TEMP<PRO.ATT+2,POS>  ; * JMK135
                                    IF TEMP<PRO.ATT>='' AND CLIENT.ID#'01053' AND CLIENT.ID#'01529' THEN       ; * JMK133; * JMK135
                                       IF CLIENT.ID#'00981' AND CLIENT.ID#'01053' AND CLIENT.ID#'01613' THEN
                                          DELETE F.BOL.CRX,BOL.ID
                                       END
                                    END ELSE
                                       WRITE TEMP ON F.BOL.CRX,BOL.ID
                                    END
                                 END
                              END
                           END
                        END
                     NEXT I
                  END
               END
            END
         END
         IF DELETE.FLAG THEN
            X = DCOUNT(OLD.PRO.REC<16>,CHAR(253))
            FOR I = 1 TO X
               IF OLD.PRO.REC<16,I>#'' THEN
                  IF (CLIENT.ID#'00057' OR OLD.PRO.REC<16,I>#'99999') AND (CLIENT.ID#'00057' OR OLD.PRO.REC<16,I>#'88888') THEN
                     IF CLIENT.ID='01053' THEN
                        IF OLD.PRO.REC<2>='T' THEN
                           BOL.ID='I*':OLD.PRO.REC<16,I>
                        END ELSE
                           BOL.ID=OLD.PRO.REC<2>:'*':OLD.PRO.REC<16,I>
                        END
                     END ELSE
                        BOL.ID=OLD.PRO.REC<16,I>
                     END
                     READ TEMP FROM F.BOL.CRX,BOL.ID THEN
                        TEMP.PRO.NUM=FIELD(OLD.PRO.ID,'*',2)
                        LOCATE TEMP.PRO.NUM IN TEMP<PRO.ATT> SETTING POS THEN    ; * JMK135
                           DEL TEMP<PRO.ATT,POS>   ; * JMK135
                           DEL TEMP<PRO.ATT+1,POS>           ; * JMK135
                           DEL TEMP<PRO.ATT+2,POS>           ; * JMK135
                           IF TEMP<PRO.ATT>='' AND CLIENT.ID#'01053' AND CLIENT.ID#'01529' AND CLIENT.ID#'01613' THEN    ; * JMK133; * JMK135
                              IF CLIENT.ID#'00981' AND CLIENT.ID#'01053' AND CLIENT.ID#'01613' THEN
                                 DELETE F.BOL.CRX,BOL.ID
                              END
                           END ELSE
                              WRITE TEMP ON F.BOL.CRX,BOL.ID
                           END
                        END
                     END
                  END
               END
            NEXT I
         END ELSE
            X = DCOUNT(BOL<1>,CHAR(253))
            FOR I = 1 TO X
               IF BOL<1,I>#'' THEN
                  IF (CLIENT.ID#'00057' OR BOL<1,I>#'99999') AND (CLIENT.ID#'00057' OR BOL<1,I>#'88888') THEN
                     IF CLIENT.ID='01053' THEN
                        IF IN.OUT='T' THEN
                           BOL.ID='I*':BOL<1,I>
                        END ELSE
                           BOL.ID=IN.OUT:'*':BOL<1,I>
                        END
                     END ELSE
                        BOL.ID=BOL<1,I>
                     END
                     READ TEMP FROM F.BOL.CRX,BOL.ID THEN
                        TEMP.PRO.NUM=FIELD(PRO.ID,'*',2)
                        LOCATE TEMP.PRO.NUM IN TEMP<PRO.ATT> SETTING POS ELSE    ; * JMK135
                           TEMP<PRO.ATT,-1>=TEMP.PRO.NUM     ; * JMK135
                           TEMP<PRO.ATT+1,-1>=FIELD(PRO.ID,'*',1)      ; * JMK135
                           TEMP<PRO.ATT+2,-1>=DATE()         ; * JMK135
                           WRITE TEMP ON F.BOL.CRX,BOL.ID
                        END
                     END ELSE
                        TEMP = ''
                        TEMP<PRO.ATT> = FIELD(PRO.ID,'*',2)  ; * JMK135
                        TEMP<PRO.ATT+1> = FIELD(PRO.ID,'*',1)          ; * JMK135
                        TEMP<PRO.ATT+2> = DATE()   ; * JMK135
                        WRITE TEMP ON F.BOL.CRX,BOL.ID
                     END
                  END
               END
            NEXT I
         END
      END
      RETURN

*****************************************************************
SET.APRVD.CARR:* set approved carrier flag
*****************************************************************
      READ X FROM F.APRVD.CARRS,CARRIER.ID THEN
         BEGIN CASE
            CASE X<1> = '' AND X<2> = ''
               APRVD.CARRIER = 'Y'
            CASE X<1> # '' & X<2> NE ''
               IF PRO.REC<1> LT X<1> OR PRO.REC<1> GT X<2> ELSE
                  APRVD.CARRIER = 'Y'
               END
            CASE X<1> # '' AND X<2> = ''
               IF PRO.REC<1> GE X<1> THEN APRVD.CARRIER = 'Y'
            CASE X<1> = '' AND X<2> # ''
               IF PRO.REC<1> LE X<2> THEN APRVD.CARRIER = 'Y'
         END CASE
      END

      RETURN

*****************************************************************
WRITE.MODS:
*****************************************************************
      IF USER='DEBBIE' THEN
         LOOP
            HELP = "[Y]=Post adjustment. [N]=Do not post adjustment."
            CALL GEN.IN(0,22,'Post adjustment? N','',Q,0,1,'','',1,-1,22,1,QI,HELP,0,23)
            CC+=LEN(QI) ; GOSUB PRINT.CC
            QI = OCONV(QI,'MCU')
            IF QI = '' THEN QI = 'N'
         UNTIL QI = 'Y' ! QI = 'N' DO
         REPEAT
      END ELSE
         QI='N'
      END
      ADJ.REC = ''
      ADJ.REC<1> = DATE()
      ADJ.REC<2> = (PRO.REC<8>+PRO.REC<42>+PRO.REC<43>+PRO.REC<44>)-(OLD.PRO.REC<8>+OLD.PRO.REC<42>+OLD.PRO.REC<43>+OLD.PRO.REC<44>)
      ADJ.REC<3> = CARRIER.ID
      ADJ.REC<4> = CLIENT.ID
      ADJ.REC<5> = PRO
      ADJ.REC<6> = PREV.SELECTED
      *---- Post carrier adjustment if requested
      IF QI = 'Y' THEN
         DONE = 0
         SEQ = 1
         LOOP
            ADJ.ID = DATE():'*':CLIENT.ID:'*':SEQ
            READ DUMMY FROM F.ADJUSTS,ADJ.ID ELSE DONE = 1
         UNTIL DONE DO
            SEQ = SEQ+1
         REPEAT
         WRITE ADJ.REC ON F.ADJUSTS,ADJ.ID
      END
      *---- Post freight bill modification record
      DONE = 0
      SEQ = 1
      ADJ.REC<2> = PRO.REC<8>-OLD.PRO.REC<8>
      ADJ.REC<7> = OLD.PRO.REC<8>
      ADJ.REC<8> = PRO.REC<8>
      * Reset attribute to the difference in the actual charge for the
      * FB.MOD file as this is used to balance and the adjustment should
      * not contain commission differences.
      LOOP
         ADJ.ID = DATE():'*':CLIENT.ID:'*':SEQ
         READ DUMMY FROM F.MODS,ADJ.ID ELSE DONE = 1
      UNTIL DONE DO
         SEQ = SEQ+1
      REPEAT
      WRITE ADJ.REC ON F.MODS,ADJ.ID

      RETURN

*****************************************************************
ADD.LINE:
*****************************************************************
      ADD.COUNT=DCOUNT(DA<1>,@VM)+1
      IF CARRIER.ID = '00114' THEN		                  ; * NKH84
      	 IF NOT(NUM(LOOKPRO[1,1])) THEN                 ; * NKH84      	 	  
      	    DA<1,ADD.COUNT>=LOOKPRO[1,1]:'-':PRO.EXT		; * NKH84
      	 END ELSE                                       ; * NKH84
      	 	  DA<1,ADD.COUNT>=PRO.EXT                     ; * NKH84      	 	 
      	 END                                            ; * NKH84
      END ELSE                                          ; * NKH84
         DA<1,ADD.COUNT>=PRO.EXT
      END                                               ; * NKH84
      DA<2,ADD.COUNT>=DLOOK<1>
      DA<3,ADD.COUNT>=DLOOK<8>-DLOOK<11>-DLOOK<10>
      DA<4,ADD.COUNT>=DLOOK<8>
      DA<5,ADD.COUNT>=DLOOK<37>          ; ** Process Date
      DA<6,ADD.COUNT>=DLOOK<15>          ; ** Check Date
      CHECK.ID=DLOOK<14>                 ; ** Check Number
      CHECK.NUM=FIELD(CHECK.ID,"*",1)
      MATREAD CHECK.REC FROM F.CHECKS , CHECK.ID ELSE
         MAT CHECK.REC=''
      END
      CHECK.AMT = FCK.AMT
      DA<7,ADD.COUNT>=CHECK.NUM
      DA<8,ADD.COUNT>=CHECK.AMT
      DA<9,ADD.COUNT>=DLOOK<39>          ; *REJECT.FLAG
      DA<10,ADD.COUNT>=CHANGE(DLOOK<213>,@VM,@SVM)           ; * JMK119
      ACH.CHECK.FLAG = "C"               ; * NPR15
      IF CHECK.NUM NE '' THEN            ; * NPR15
         IF CHECK.REC(26) NE "" THEN ACH.CHECK.FLAG = "A"    ; * NPR15
      END ELSE                           ; * NPR15
         IF CARRIER.REC<102> = "A" THEN ACH.CHECK.FLAG = "A"           ; * NPR15
      END                                ; * NPR15
      DA<11,ADD.COUNT> = ACH.CHECK.FLAG  ; * NPR15
      RETURN

*****************************************************************
PRINT.CARRIER.ADDRESS.LETTER:
*****************************************************************
      RVIN = CARRIER.ID
      RVIN<2> = CLIENT.ID
      RVIN<3> = PRO.ID
      RVOUT=''
      CALL FB.2.1.CARRIER.LETTER(RVIN, RVOUT)
      RETURN

*****************************************************************
INIT.REJECT.INFO:
*****************************************************************
      REJECT.FLAG = OLD.PRO.REC<39>
      REJECT.REASONS<1>=OLD.PRO.REC<59>
      REJECT.REASONS<2>=OLD.PRO.REC<60>
      REJECT.REASONS<3>=OLD.PRO.REC<61>
      REJECT.REASONS<4>=OLD.PRO.REC<62>
      MAILING.ADDR<1>=OLD.PRO.REC<64,1>
      MAILING.ADDR<2>=OLD.PRO.REC<64,2>
      MAILING.ADDR<3>=OLD.PRO.REC<64,3>
      MAILING.ADDR<4>=OLD.PRO.REC<64,4>
      RETURN

*****************************************************************
UPDATE.VERIFY:* Routine to add and remove codes from VERIFIED
*****************************************************************
      *  VER.CODE - Code to manulipate
      *  P  - Pro Number
      *  A  - Actual Charge
      *  E  - Expense Code
      *  DC - Division Code
      *  CC -  Carrier Charge
      *  VD -  Variance Distribution
      *  M  - Misroute information
      *  LD - Logistics Distribution
      *  VER.TYPE - 'R'emove Code, 'A'dd Code
      BEGIN CASE
         CASE VER.TYPE='R'
            LOCATE VER.CODE IN VERIFIED<1> SETTING POS THEN
               DEL VERIFIED<1,POS>
            END
         CASE VER.TYPE='A'
            LOCATE VER.CODE IN VERIFIED<1> BY 'AL' SETTING POS ELSE
               INS VER.CODE BEFORE VERIFIED<1,POS>
            END
         CASE 1
            CALL ELINE("Invalid VER.TYPE of '":VER.TYPE:"'  Stop and Call Programming!")
            CC+=1 ; GOSUB PRINT.CC
      END CASE
      RETURN

*****************************************************************
CHECK.XREF.CARRIERS:
*****************************************************************
      *     Input:   XREF.CARRIERS multi Valued
      *              CHK.PRO ; * Pro Nuber to Check (For Multiple Styles)
      *     Purpose: Checks Pro Numbers Across Multi Carriers in List
      *              if one is found flags user as duplicate and returns to pro
      *     LOCATE CARRIER.ID IN XREF.CARRIERS<1> SETTING POS THEN
      *       DEL XREF.CARRIERS<1,POS>; * Remove This One Already Checked
      TIMES=DCOUNT(XREF.CARRIERS<1>,@VM)
      FOR XCHK = 1 TO TIMES
         CHK.ID = XREF.CARRIERS<1,XCHK>:'*':CHK.PRO:"*":VERSION
         READ DUMMY FROM F.CRX,CHK.ID THEN
            IF DUMMY<2> > XREF.CHECK.DATE THEN     ; * JMK124
               PRO.REC = DUMMY
               PRO.REC<1>=DUMMY<2>       ; * Correct the Position of the Date ; * JMK166
               PRO.REC<2>=''             ; * Correct the I/O Flag (Not on CRX File) ; * JMK166
               DUM.CL=DUMMY<1>           ; * JMK166
               GOSUB 8100                ; * Display screen
               GOSUB 8300                ; * Assign data
               GOSUB 8200                ; * Display data
               LN1 = 'Duplicate! '
               LN1 := ' Client: ':DUMMY<1>
               LN1 := '  Carrier: ':XREF.CARRIERS<1,XCHK>
               LN1 := '  Pro: ':CHK.PRO
               LN1 := ' ent on ':DUMMY<30>'D2/'
               CRT @(0,21):LN1:@(-4)
               VAR = DUMMY<7>-DUMMY<8>
               IF DUMMY<37>='' THEN DUM.PROC='' ELSE
                  DUM.PROC='Proc ':DUMMY<37>'D2/':' '
               END
               LN2 = DUM.PROC:'Pd ':DUMMY<15>'D2/':' Ck# ':FIELD(DUMMY<14>,"*",1):' for '
               LN2 := DUMMY<13>'L26,':' act chgs ':DUMMY<8>'L26,'
               LN2 := ' var ':VAR'L26,'
               CALL ELINE(LN2)
               CC+=1 ; GOSUB PRINT.CC
               CRT @(0,21):@(-3):
               PRO.REC = ''
               RETURN TO 300             ; * ENTER PRO
            END                          ; * JMK124
         END
      NEXT XCHK
      RETURN

*****************************************************************
CALC.TRANSIT.TIME:* Copied from FB.2.1.AUDIT.OWEN
*****************************************************************
      CK.CS=0
      READ NSMC.LIST FROM F.TABLES,'NSMC.CARRIERS' ELSE NSMC.LIST=''
      LOCATE CARRIER.ID IN NSMC.LIST SETTING WPOS THEN CK.CS=1
      JL.FLAG=0
      TRANSIT.TIME=''
      * Begin NKH01
      *      IF CARRIER.ID > '' THEN   ; * NKH03
      *         READV CARRIER.SCAC FROM F.CARRIERS, CARRIER.ID, 12 ELSE CARRIER.SCAC = '' ; * NKH03
      *      END ELSE                  ; * NKH03
      CARRIER.SCAC = 'ALL'
      *      END                       ; * NKH03
      READV ORIG.COUNTRY FROM ZIPS, ORIG.ZIP, 3 ELSE
         IF NUM(ORIG.ZIP[1,1]) THEN
            ORIG.COUNTRY = 'US'
         END ELSE
            ORIG.COUNTRY = 'CAN'
         END
      END
      BEGIN CASE
         CASE ORIG.COUNTRY = 'US'
            ORIG.COUNTRY = 'USA'
         CASE ORIG.COUNTRY = 'CA'
            ORIG.COUNTRY = 'CAN'
         CASE ORIG.COUNTRY = 'MX'
            ORIG.COUNTRY = 'MEX'
      END CASE
      READV DEST.COUNTRY FROM ZIPS, DEST.ZIP, 3 ELSE
         IF NUM(DEST.ZIP[1,1]) THEN
            DEST.COUNTRY = 'US'
         END ELSE
            DEST.COUNTRY = 'CAN'
         END
      END
      BEGIN CASE
         CASE DEST.COUNTRY = 'US'
            DEST.COUNTRY = 'USA'
         CASE DEST.COUNTRY = 'CA'
            DEST.COUNTRY = 'CAN'
         CASE DEST.COUNTRY = 'MX'
            DEST.COUNTRY = 'MEX'
      END CASE
      CC.VIN = ''
      CC.VIN<1> = CARRIER.SCAC
      CC.VIN<2> = DEST.COUNTRY
      CC.VIN<3> = DEST.ZIP
      CC.VIN<4> = ORIG.COUNTRY
      CC.VIN<5> = ORIG.ZIP
      CC.VIN<6> = CLIENT.ID
      CC.VOUT = ''
      CALL CCXL.V2(CC.VIN,CC.VOUT)
      * End NKH01
      IF CARRIER.SCAC#'' THEN
         * Begin NKH01
         *         SVC.VIN=''
         *         SVC.VIN<1>='BOTH'
         *         SVC.VIN<2>='10000'
         *         SVC.VIN<3>=CARRIER.SCAC
         *         SVC.VIN<4>=CARRIER.TYPE
         *         SVC.VIN<5>=ORIG.ZIP
         *         SVC.VIN<6>=DEST.ZIP
         *         SVC.VOUT=''
         *         CALL RWS.SVC(SVC.VIN,SVC.VOUT,F.TABLES)
         *         SVC.ERROR=SVC.VOUT<1>
         *         TRANSIT.TIME=SVC.VOUT<2>
         *         ORIG.DIR.FLG=SVC.VOUT<3>
         *         DEST.DIR.FLG=SVC.VOUT<4>
         *         COMB.DIR.FLG=SVC.VOUT<5>

         * From TransitMethod
         TRANSIT.TIME = CC.VOUT<29>
         IF TRANSIT.TIME = 0 THEN TRANSIT.TIME = 1
         ORIG.DIR.FLG = CC.VOUT<31>[1,1]
         IF ORIG.DIR.FLG = 'C' OR ORIG.DIR.FLG = 'P' THEN ORIG.DIR.FLG = 'I'
         DEST.DIR.FLG = CC.VOUT<30>[1,1]
         IF DEST.DIR.FLG = 'C' OR DEST.DIR.FLG = 'P' THEN DEST.DIR.FLG = 'I'
         COMB.DIR.FLG = CC.VOUT<32>[1,1]
         IF COMB.DIR.FLG = 'C' OR COMB.DIR.FLG = 'P' THEN COMB.DIR.FLG = 'I'
         * End NKH01
         IF CARRIER.SCAC='CNWY' THEN
            ORIG.DIR.FLG='D'
            DEST.DIR.FLG='D'
            COMB.DIR.FLG='D'
         END
         ID.JL.TAB = "JL*":CLIENT.ID:"*":CARRIER.SCAC
         READ JL.REC FROM F.TABLES, ID.JL.TAB ELSE JL.REC = ""
         LOCATE DEST.ZIP IN JL.REC SETTING DEST.POS THEN DEST.DIR.FLG = "D"
         LOCATE ORIG.ZIP IN JL.REC SETTING ORIG.POS THEN ORIG.DIR.FLG = "D"
         IF ORIG.DIR.FLG='D' AND DEST.DIR.FLG='D' THEN
            COMB.DIR.FLG='D'
         END
         *        IF COMB.DIR.FLG#'' AND COMB.DIR.FLG#'D' THEN        ; * JMK219
         IF COMB.DIR.FLG#'D' THEN        ; * JMK219
            JL.FLAG=1
         END
      END
      IF CLIENT.ID='01031' AND CARRIER.ID='25117' THEN       ; * JMK240
         TRANSIT.TIME='09'               ; * JMK240
         ORIG.DIR.FLG='D'                ; * JMK240
         DEST.DIR.FLG='D'                ; * JMK240
         COMB.DIR.FLG='D'                ; * JMK240
      END                                ; * JMK240
      IF CK.CS THEN
         ORIG.DIR.FLG=''                 ; * JMK277
         DEST.DIR.FLG=''                 ; * JMK277
         COMB.DIR.FLG=''                 ; * JMK277
         TRANSIT.TIME=''                 ; * JMK278
         IF COMB.DIR.FLG='' THEN
            JL.FLAG=0
         END
         OPEN '','CARRIER.SVC' TO F.CS THEN
            CS.ID=CARRIER.ID:'*':ORIG.ZIP
            READ CS.REC FROM F.CS,CS.ID ELSE
               CS.ID=CARRIER.ID:'*':ORIG.ZIP[1,3]
               READ CS.REC FROM F.CS,CS.ID ELSE
                  CS.REC=''
               END
            END
            IF CS.REC#'' THEN
               DEST.FOUND=0
               LOCATE DEST.ZIP IN CS.REC<1> SETTING DPOS THEN
                  DEST.FOUND=1
               END ELSE
                  LOCATE DEST.ZIP[1,3] IN CS.REC<1> SETTING DPOS THEN
                     DEST.FOUND=1
                  END
               END
               IF DEST.FOUND THEN
                  TRANSIT.TIME=CS.REC<3,DPOS>
                  ORIG.DIR.FLG='D'
                  DEST.DIR.FLG=CS.REC<2,DPOS>
                  COMB.DIR.FLG=''
                  IF DEST.DIR.FLG#'' THEN
                     IF ORIG.DIR.FLG='D' AND DEST.DIR.FLG='D' THEN
                        COMB.DIR.FLG='D'
                     END ELSE
                        COMB.DIR.FLG='I'
                     END
                  END
                  NVAL=DCOUNT(CS.REC<13>,@VM)
                  CARR.DATA.DATE=CS.REC<13,NVAL>
                  *                 IF COMB.DIR.FLG#'' AND COMB.DIR.FLG#'D' THEN         ; * JMK219
                  IF COMB.DIR.FLG#'D' THEN         ; * JMK219
                     JL.FLAG=1
                  END
               END
            END
         END
      END

      RETURN

*****************************************************************
SEND.DATA:* Execute DATA stmt and reduce CC
*****************************************************************
      CC-=(LEN(SND.DATA)+1)
      DATA SND.DATA
      RETURN

*****************************************************************
PRINT.CC:
*****************************************************************
      IF USER#'MARY' AND USER#'DAVID' THEN RETURN
      PRINT @(0,0):@(-4):'Characters: ':CC'R#4':
      RETURN

*****************************************************************
FIND.GOOD.CARRIER:* Find all Good Carriers on a Misrouted Bill
*****************************************************************
      MISROUTE.ARRAY=''                  ; *<1>=Amount (MV Lowest to Highest) <2>=Carrier #
      BAD.MISROUTE.ARRAY=''              ; * JMK115
      IF CLIENT.ID='10225' AND CARRIER.ID='00510' THEN
         *      Secial Override for R&M Energy & Levinge .. No Misroutes
         RETURN
      END
      IF CLIENT.ID='01148' AND CARRIER.ID='09743' THEN       ; * JMK162
         *      Secial Override for Bell Sports & Standard Fordwarding .. No Misroutes    ; * JMK162
         RETURN                          ; * JMK162
      END                                ; * JMK162
      IF CLIENT.ID='01015' AND CARRIER.ID='02199' THEN       ; * DRF088
         *      Secial Override for Hillyard & N&M Transfer .. No Misroutes    ; * DRF088
         RETURN                          ; * DRF088
      END                                ; * DRF088
      IF CLIENT.ID='01015' AND CARRIER.ID='01268' THEN       ; * DRF088
         *      Secial Override for Hillyard & Panama Transfer .. No Misroutes    ; * DRF088
         RETURN                          ; * DRF088
      END                                ; * DRF088
      IF CLIENT.ID='01015' AND CARRIER.ID='05166' THEN       ; * DRF090
         *      Secial Override for Hillyard & TCBX. No Misroutes    ; * DRF090
         RETURN                          ; * DRF090
      END                                ; * DRF090
      IF IN.OUT='T' THEN
         *      Do not "Compute" Misroutes on Third Party Bills
         IF USER#'DAVID' THEN
            RETURN
         END
      END
      IF CL.LOGISTICS NE "Y" OR BILL.DATE LT CLIENT.REC(149) THEN      ; * JMK214
         RETURN                          ; * JMK214
      END                                ; * JMK214
      IF FLAT.RATE THEN
         *    Do not "Compute" Misroutes on flat rate shipments
         RETURN
      END
      STMT= 'SELECT FB.AUDIT,':AUDIT.CLIENT.ID
      STMT:=' WITH 1 = "LTLALL"'
      STMT:=' AND WITH 11 = "ENABLE"'
      STMT:=' AND WITH 13 = "Y"'         ; * Core Carrier Flag = "Y"
      EXECUTE STMT RTNLIST MISR.LIST CAPTURING OUTPUT
      IF NOT(@SELECTED) THEN RETURN

*****************************************************************
GET.NEXT.CARRIER:
*****************************************************************
      READNEXT MISR.CARRIER.ID FROM MISR.LIST ELSE
         LOCATE '00212' IN MISROUTE.ARRAY<2> SETTING PPOS THEN         ; * JMK200
            LOCATE '00171' IN MISROUTE.ARRAY<2> SETTING EPOS THEN      ; * JMK200
               NATT=DCOUNT(MISROUTE.ARRAY,@AM)     ; * JMK200
               FOR ATT= 1 TO NATT        ; * JMK200
                  DEL MISROUTE.ARRAY<ATT,EPOS>     ; * JMK200
               NEXT ATT                  ; * JMK200
            END                          ; * JMK200
         END                             ; * JMK200
         MISROUTE.AMOUNT=MISROUTE.ARRAY<1,1>
         MISROUTE.CARRIER=MISROUTE.ARRAY<2,1>
         LOCATE CARRIER.ID IN MISROUTE.ARRAY<2> SETTING MISROUTE.POS THEN
            ** If misroute carrier is the same as the
            ** current carrier set misroute to null
            MISROUTE.AMOUNT=''
            MISROUTE.CARRIER=''
            MISROUTE.ARRAY=''
         END
         IF MISROUTE.CARRIER#'' THEN
            READV MISROUTE.NAME FROM F.CARRIERS,MISROUTE.CARRIER,1 ELSE
               MISROUTE.NAME='Unkown Carrier'
            END
            VER.CODE='M' ; VER.TYPE='A' ; GOSUB UPDATE.VERIFY
         END
         *** PICK BEST (IF ANY) CARRIER
         RETURN
      END
      IF MISR.CARRIER.ID = CARRIER.ID THEN GOTO GET.NEXT.CARRIER
      READ MISR.CARRIER.REC FROM F.CARRIERS,MISR.CARRIER.ID ELSE       ; * JMK115
         MISR.CARRIER.REC='~~ Not On File ~~'      ; * JMK115
      END                                ; * JMK115
      MISR.CARRIER.SCAC = MISR.CARRIER.REC<12>     ; * JMK115
      MISR.CARRIER.TYPE = 'A'            ; * JMK115
      IF MISR.CARRIER.REC<44>='6' THEN   ; * JMK115
         MISR.CARRIER.TYPE='B'           ; * JMK115
      END                                ; * JMK115
      READ DMRA.AUDIT FROM F.AUDIT,MISR.CARRIER.ID ELSE GOTO GET.NEXT.CARRIER
      IF DMRA.AUDIT<11>='DISABLE' THEN GOTO GET.NEXT.CARRIER:
      MRA.VIN=SAVE.AVOUT
      TOT.WEIGHT=SUM(WEIGHTS<1>)         ; *DRF05
      TEMP.MISC.CHG.CODES=MISC.CHG.CODES           ; *DRF05
      LOCATE TOT.WEIGHT IN MISR.CARRIER.REC<70> BY "AR" SETTING WEIGHT.POS ELSE NULL       ; *DRF05
      TEMP.TRANSPORT.MODE = OCONV(MISR.CARRIER.REC<71,WEIGHT.POS>,'MCU')         ; *DRF05
      ZIP.LINE.ID=MISR.CARRIER.ID:'*':CLIENT.ID:'*':TEMP.TRANSPORT.MODE:'*':IN.OUT         ; *DRF05
      READ DZIP.LINE FROM F.ZIP.LINE.ITEM,ZIP.LINE.ID ELSE   ; *DRF05
         ZIP.LINE.ID=MISR.CARRIER.ID:'*ALL*':TEMP.TRANSPORT.MODE:'*':IN.OUT      ; *DRF05
         READ DZIP.LINE FROM F.ZIP.LINE.ITEM,ZIP.LINE.ID ELSE DZIP.LINE=''       ; *DRF05
      END                                ; *DRF05
      IF DZIP.LINE#'' THEN               ; *DRF05
         LOCATE ORIG.ZIP IN DZIP.LINE<1> BY 'AR' SETTING ZIP.POS THEN  ; *DRF05
            ZIP.POS=ZIP.POS+1            ; *DRF05
         END                             ; *DRF05
         IF ZIP.POS > 1 THEN             ; *DRF05
            ZIP.POS=ZIP.POS-1            ; *DRF05
            IF DZIP.LINE<2,ZIP.POS> >= ORIG.ZIP THEN         ; *DRF05
               NUM.OF.SVM = DCOUNT(DZIP.LINE<3,ZIP.POS>,@SVM)          ; *DRF05
               FOR Z = 1 TO NUM.OF.SVM   ; *DRF05
                  IF DZIP.LINE<4,ZIP.POS,Z>='O' OR DZIP.LINE<4,ZIP.POS,Z>='B' THEN         ; *DRF05
                     LOCATE DZIP.LINE<3,ZIP.POS,Z> IN TEMP.MISC.CHG.CODES<1> SETTING DUMMY.POS ELSE  ; *DRF05
                        INS DZIP.LINE<3,ZIP.POS,Z> BEFORE TEMP.MISC.CHG.CODES<1,1>         ; *DRF05
                     END                 ; *DRF05
                  END                    ; *DRF05
               NEXT Z                    ; *DRF05
            END                          ; *DRF05
         END                             ; *DRF05
         LOCATE DEST.ZIP IN DZIP.LINE<1> BY 'AR' SETTING ZIP.POS THEN  ; *DRF05
            ZIP.POS=ZIP.POS+1            ; *DRF05
         END                             ; *DRF05
         IF ZIP.POS > 1 THEN             ; *DRF05
            ZIP.POS=ZIP.POS-1            ; *DRF05
            IF DZIP.LINE<2,ZIP.POS> >= DEST.ZIP THEN         ; *DRF05
               NUM.OF.SVM = DCOUNT(DZIP.LINE<3,ZIP.POS>,@SVM)          ; *DRF05
               FOR Z = 1 TO NUM.OF.SVM   ; *DRF05
                  IF DZIP.LINE<4,ZIP.POS,Z>='D' OR DZIP.LINE<4,ZIP.POS,Z>='B' THEN         ; *DRF05
                     LOCATE DZIP.LINE<3,ZIP.POS,Z> IN TEMP.MISC.CHG.CODES<1> SETTING DUMMY.POS ELSE  ; *DRF05
                        INS DZIP.LINE<3,ZIP.POS,Z> BEFORE TEMP.MISC.CHG.CODES<1,1>         ; *DRF05
                     END                 ; *DRF05
                  END                    ; *DRF05
               NEXT Z                    ; *DRF05
            END                          ; *DRF05
         END                             ; *DRF05
      END                                ; *DRF05
      MRA.VIN<21>=TEMP.MISC.CHG.CODES<1>           ; *DRF05
      MRA.VIN<10>=MISR.CARRIER.ID        ; * Correct to "Test" Carrier Number
      MRA.VIN<16>=USER                   ; * JMK999
      MRA.VIN<17>=1                      ; * Looking for misroute flag
      NUM.OF.MISC.CHARGES=DCOUNT(MRA.VIN<21>,@VM)
      FOR XX = 1 TO NUM.OF.MISC.CHARGES
         IF MRA.VIN<21,XX>='FSC' THEN
            DEL MRA.VIN<21,XX>
            DEL MRA.VIN<22,XX>
            DEL MRA.VIN<23,XX>
         END
      NEXT XX

      MRA.VIN<24>=(CL.LOGISTICS='Y') & (BILL.DATE >= CLIENT.REC(149))  ; * JMK170
      MRA.VIN<25>=''
      MRA.VIN<46>=MAX.LTL                ; * JMK07
      MRA.VIN<48>=CLIENT.REC(188)        ; * JMK62 - FORCE BENCHMARK MINIMUM
      MRA.VIN<49>=CARR.FSC               ; * JMK62 - CARRIER ONLY FSC
      MRA.VIN<50>= MISR.CARRIER.SCAC     ; * JMK115
      MRA.VIN<51>= MISR.CARRIER.TYPE     ; * JMK115
      MRA.VIN<52>=SAVE.AVOUT<3>
      IF ENTRY.DATE#'' THEN
         MRA.VIN<3>=ENTRY.DATE
      END ELSE
         MRA.VIN<3>=DATE()
      END

      READ DMRA.BENCH.FSC FROM F.NFSC,'B*':MISR.CARRIER.ID:'*':AUDIT.CLIENT.ID ELSE
         READ DMRA.BENCH.FSC FROM F.NFSC,'B*':MISR.CARRIER.ID ELSE DMRA.BENCH.FSC=''
      END
      READ DMRA.CONTR.FSC FROM F.NFSC,"C*":MISR.CARRIER.ID:"*":AUDIT.CLIENT.ID ELSE DMRA.CONTR.FSC=DMRA.BENCH.FSC
      IF DMRA.BENCH.FSC<30>='DISABLE' THEN
         DMRA.BENCH.FSC=''               ; ** No Effect
         DMRA.CONTR.FSC=''
      END

      IF USER='DAVID' AND MISR.CARRIER.ID='00018' THEN
         CALL ELINE('PRESS BREAK')
      END

      * Begin NKH01
      IF CC.VOUT = '' THEN GOSUB CALC.TRANSIT.TIME
      TMP.CARRIER.ID = MRA.VIN<10>       ; * NKH03
      READV CC.CARRIER.SCAC FROM F.CARRIERS, TMP.CARRIER.ID, 12 ELSE   ; * NKH03
         READV CC.CARRIER.SCAC FROM F.CARRIERS, MISR.CARRIER.ID, 12 ELSE CC.CARRIER.SCAC = ''
      END
      ORIG.DIR.FLG = ''
      DEST.DIR.FLG = ''
      COMB.DIR.FLG = ''
      SCAC.COUNT = DCOUNT(CC.VOUT<1>,@VM)
      FOR SC = 1 TO SCAC.COUNT
         LOCATE(CC.CARRIER.SCAC,CC.VOUT,1,SC;S.POS;'AL') THEN
            * From TransitMethod
            TRANSIT.TIME = CC.VOUT<29,SC>
            IF TRANSIT.TIME = 0 THEN TRANSIT.TIME = 1
            ORIG.DIR.FLG = CC.VOUT<31,SC>[1,1]
            IF ORIG.DIR.FLG = 'C' OR ORIG.DIR.FLG = 'P' THEN ORIG.DIR.FLG = 'I'
            DEST.DIR.FLG = CC.VOUT<30,SC>[1,1]
            IF DEST.DIR.FLG = 'C' OR DEST.DIR.FLG = 'P' THEN DEST.DIR.FLG = 'I'
            COMB.DIR.FLG = CC.VOUT<32,SC>[1,1]
            IF COMB.DIR.FLG = 'C' OR COMB.DIR.FLG = 'P' THEN COMB.DIR.FLG = 'I'
         END
      NEXT SC
      MRA.VIN<56>=ORIG.DIR.FLG
      MRA.VIN<57>=DEST.DIR.FLG
      MRA.VIN<58>=COMB.DIR.FLG
      MRA.VIN<59>=AUDIT.CLIENT.ID        ; * NKH02
      * End NKH01
      CALL FB.AUTO.V2(MRA.VIN,MRA.VOUT,DMRA.AUDIT,DMRA.CONTR.FSC,DMRA.BENCH.FSC,DTARIFFS,DTARIFF.DATE.XREF,LI.CODES,F.AUDIT.TABLES,F.AUDIT.ZIPS,F.PCIN,F.PCOUT,F.TABLES)   ; * NKH01
      MRA.VOUT<24>=''                    ; * Kill Why
      *      MRA.TRANSIT.TIME=MRA.VOUT<49>      ; * JMK115 ; * JMK192   ; * NKH01
      MRA.TRANSIT.TIME = TRANSIT.TIME    ; * NKH01
      ORIG.DIRECT.FLAG=MRA.VOUT<50>      ; * JMK115
      DEST.DIRECT.FLAG=MRA.VOUT<51>      ; * JMK115
      COMB.DIRECT.FLAG=MRA.VOUT<52>      ; * JMK115
      IF AUDIT.CLIENT.ID='01031' AND MISR.CARRIER.ID='25117' THEN      ; * JMK240
         MRA.TRANSIT.TIME='09'           ; * JMK240
         ORIG.DIRECT.FLAG='D'            ; * JMK240
         DEST.DIRECT.FLAG='D'            ; * JMK240
         COMB.DIRECT.FLAG='D'            ; * JMK240
      END                                ; * JMK240
      IF COMB.DIRECT.FLAG='I' AND IN.OUT='I' THEN  ; * JMK115
         REASON="Not Considered - Indirect Shipment"         ; * JMK115
         BAD.MISROUTE.ARRAY<1,-1>="~"    ; * JMK115
         BAD.MISROUTE.ARRAY<2,-1>=MISR.CARRIER.ID  ; * JMK115
         BAD.MISROUTE.ARRAY<3,-1>=MISROUTE.NAME    ; * JMK115
         BAD.MISROUTE.ARRAY<4,-1>=REASON           ; * JMK115

         BAD.MISROUTE.ARRAY<5,-1>=MRA.TRANSIT.TIME           ; * JMK192
         GO GET.NEXT.CARRIER             ; * JMK115
      END                                ; * JMK115
      IF MRA.VOUT<2>='Y' THEN
         MIS.CONTR.AMT=MRA.VOUT<8>
         IF MIS.CONTR.AMT > 2000 THEN    ; * JMK89 - DON'T INCLUDE LOW FB TOTALS
            MIS.BENCH.AMT=MRA.VOUT<9>    ; * JMK167
            MIS.CONSULT.AMT=MIS.BENCH.AMT-MIS.CONTR.AMT      ; * JMK62
            NXT.PROC.DT=DATE()           ; * JMK167
            CALL NEXT.PROCESS.DATE(NXT.PROC.DT,CLIENT.DOW)   ; * JMK167
            LOCATE NXT.PROC.DT IN CLIENT.ITM<84> BY 'AR' SETTING POS ELSE        ; * JMK167
               POS=POS-1                 ; * JMK167
            END                          ; * JMK167
            IF POS<1 THEN                ; * JMK167
               LOG.COMM=0                ; * JMK167
            END ELSE                     ; * JMK167
               COMM.PERC = CLIENT.ITM<85,POS>/100  ; * JMK167
               SAVINGS = MIS.BENCH.AMT-MIS.CONTR.AMT         ; * JMK167
               LOG.COMM = (SAVINGS*COMM.PERC/100)'R0'        ; * JMK167
            END                          ; * JMK167
            LOCATE (MIS.CONTR.AMT+LOG.COMM) IN MISROUTE.ARRAY<1> BY 'AR' SETTING POS ELSE NULL       ; * JMK167
            INS (MIS.CONTR.AMT+LOG.COMM) BEFORE MISROUTE.ARRAY<1,POS>  ; * JMK167
            INS MISR.CARRIER.ID BEFORE MISROUTE.ARRAY<2,POS>
            INS MIS.CONSULT.AMT BEFORE MISROUTE.ARRAY<3,POS>           ; * JMK62

            INS MRA.TRANSIT.TIME BEFORE MISROUTE.ARRAY<5,POS>          ; * JMK192
         END                             ; * JMK89
      END
      GOTO GET.NEXT.CARRIER
      RETURN

*****************************************************************
GET.ALLOW.DISCOUNTS:
*****************************************************************
      IF START.DATE #'' THEN
         OVERCHARGE.DATE=START.DATE
      END ELSE
         IF CLIENT.REC(149)#'' THEN
            OVERCHARGE.DATE=CLIENT.REC(149)+45
         END ELSE
            OVERCHARGE.DATE=CL.PRE.DATE+45
         END
      END
      IF OVERCHARGE.DATE < BILL.DATE THEN          ; * (More than 90 Days past)
         BEGIN CASE
            CASE CLIENT.ID='00244'       ; * Indel Davis
               ALLOW.DISCOUNTS=1
            CASE CLIENT.ID='00418'       ; * Sunbelt Plastics
               ALLOW.DISCOUNTS=1
            CASE CLIENT.ID='00373'       ; * Station Wholesale
               ALLOW.DISCOUNTS=1
            CASE CLIENT.ID='00910'       ; * Booth Crystal Tips Per Brian
               ALLOW.DISCOUNTS=1
            CASE CLIENT.ID='00903'       ; * PT Coupling
               ALLOW.DISCOUNTS=1
            CASE CLIENT.ID='00873'       ; * Southland Rebuilders
               ALLOW.DISCOUNTS=1
            CASE CLIENT.ID='00875'       ; * Hi-Tach Oil
               ALLOW.DISCOUNTS=1
            CASE CLIENT.ID='01365'       ; * ATK ; * JMK90
               ALLOW.DISCOUNTS=1         ; * JMK90
            CASE CLIENT.ID='01530'       ; * ATK ; * JMK122
               ALLOW.DISCOUNTS=1         ; * JMK122
            CASE 1
               ALLOW.DISCOUNTS=0
         END CASE
      END ELSE
         ALLOW.DISCOUNTS=1
      END
      RETURN

******************************************************************
CHECK.FOR.ADJ:* NPR06  Start of changes
******************************************************************
      ADJ.ID.ARRAY = ""
      N.TOUCHES = DCOUNT(OLD.PRO.REC<85>,@VM)
      FOR I.TOUCH = 1 TO N.TOUCHES
         W.TIME = OLD.PRO.REC<85,I.TOUCH>
         W.DATE = OLD.PRO.REC<86,I.TOUCH>
         ID.ADJ = CLIENT.ID:"*":PRO.ID:"*":W.DATE:"*":W.TIME:"*OLD"
         READ W.ADJ.REC FROM F.ADJUST.HIST, ID.ADJ THEN
            ADJ.ID.ARRAY<-1> = ID.ADJ
         END
      NEXT I.TOUCH

      RETURN

******************************************************************
DISPLAY.ADJ.DATA:*** Display Adjustments
******************************************************************
      CLR.SCR = 1 ; GOSUB DISP.SCREEN.HEADING      ; *NPR08

      CRT @(0, 3):'Client : ' : CBVOUT<1>:CLIENT.ID:' ':HLB:CLIENT.NAME:HLA:@(-6)          ; *NPR13
      CRT @(0, 4):'Carrier: ' : CARRIER.ID:' ':CARRIER.NAME
      DISPP = PRO:' Version ':VERSION
      CRT @(0, 5):'Pro #  : ' : DISPP

      IF OLD.PRO.REC<1> THEN             ; * BILL DATE
         DDISP=OLD.PRO.REC<1>'D2/'
      END ELSE
         DDISP='(none)'
      END
      CRT @(35, 5):'Date : ' :DDISP:" ":

      CRT "ADJUSTMENT Date : ":OCONV(FIELD(ID.ADJ,"*",5),"D2/")

      CRT @(0,6):STR("-",79)

      CRT @(22,7):"--- Now ---  "
      CRT @(35,7):"--- Prior to Adj ---"
      CRT @(61,7):"--- Difference ---"

      CRT @(0,8):"Carrier Charges ": "....." : OCONV(OLD.PRO.REC<7>,"MR2") "R#12":"  ":
      CRT @(39,8): OCONV(W.ADJ.REC<7>,"MR2") "R#12"
      W.DIFF = OLD.PRO.REC<7> - W.ADJ.REC<7>
      CRT @(62,8):OCONV(W.DIFF,"MR2") "R#12"

      CRT @(0,9):"Actual Charges  ": "....." : OCONV(OLD.PRO.REC<8>,"MR2") "R#12":"  ":
      CRT @(39,9): OCONV(W.ADJ.REC<8>,"MR2") "R#12"
      W.DIFF = OLD.PRO.REC<8> - W.ADJ.REC<8>
      CRT @(62,9):OCONV(W.DIFF,"MR2") "R#12"

      CRT @(0,10):"Overcharge Var  ": "....." :OCONV(OLD.PRO.REC<11>,"MR2") "R#12":"  ":
      CRT @(39,10): OCONV(W.ADJ.REC<11>,"MR2") "R#12"
      W.DIFF = OLD.PRO.REC<11> - W.ADJ.REC<11>
      CRT @(62,10):OCONV(W.DIFF,"MR2") "R#12"

      CRT @(0,11):"Consult Var.    ": "....." :OCONV(OLD.PRO.REC<12>,"MR2") "R#12":"  ":
      CRT @(39,11): OCONV(W.ADJ.REC<12>,"MR2") "R#12"
      W.DIFF = OLD.PRO.REC<12> - W.ADJ.REC<12>
      CRT @(62,11):OCONV(W.DIFF,"MR2") "R#12"

      CRT @(0,12):"Variance Code   ": "....." :OLD.PRO.REC<51> "R#12":"  ":
      CRT @(39,12): W.ADJ.REC<51> "R#12"

      CRT @(0,13):"Variance Amt.   ": "....." :OCONV(OLD.PRO.REC<52>,"MR2") "R#12":"  ":
      CRT @(39,13): OCONV(W.ADJ.REC<52>,"MR2") "R#12"
      W.DIFF = OLD.PRO.REC<52> - W.ADJ.REC<52>
      CRT @(62,13):OCONV(W.DIFF,"MR2") "R#12"

      CRT @(0,15):"Notes Now : "
      CRT @(1,16):OLD.PRO.REC<41,1>
      CRT @(1,17):OLD.PRO.REC<41,2>

      CRT @(0,18):"Notes Prior to Adjustment : "
      CRT @(1,19):W.ADJ.REC<41,1>
      CRT @(1,20):W.ADJ.REC<41,2>

      CALL ELINE("")

      RETURN

*****************************************************************
CHECK.FOR.ADD.NOTES:*
******************************************************************
      ID.NOTES = CLIENT.ID:"*":PRO.ID    ; * NPR12
      READ ADD.NOTE.REC FROM F.NOTES, ID.NOTES ELSE ADD.NOTE.REC = ""  ; * NPR12

      RETURN                             ; * NPR12

******************************************************************
DISPLAY.ADD.NOTES:
******************************************************************
      CALL FB.DRAW.BOX(28,4,52,7,' ','')           ; * NPR12
      CALL FB.DRAW.BOX(29,5,50,3,' ','+=+|+=+|')   ; * NPR12
      CALL FB.DRAW.BOX(29,7,50,7,' ','+=+|+=+|')   ; * NPR12
      CALL FB.PRINT.CENT(29,78,6,"A D D I T I O N A L  N O T E S")     ; * NPR12
      NOTE.VIN = ADD.NOTE.REC<4>         ; * NPR12
      CONVERT @VM TO " " IN NOTE.VIN     ; * NPR12
      CONVERT @SVM TO " " IN NOTE.VIN    ; * NPR12
      NOTE.VIN = TRIM(NOTE.VIN)          ; * NPR12
      NOTE.VIN<2> = 47                   ; * NPR12
      CALL WRAP.TEXT(NOTE.VIN,NOTE.VOUT)           ; * NPR12
      N.NOTES = NOTE.VOUT<2>             ; * NPR12
      CRT REV.ON:
      FOR I=1 TO N.NOTES                 ; * NPR12
         ADD.NOTE=NOTE.VOUT<1,I> 'L#47'  ; * NPR12
         ROW=I+7                         ; * NPR12
         IF ROW GT 11 THEN               ; * NPR12
            CRT @(56,ROW):">>> More notes ....."   ; * NPR12
            I = N.NOTES                  ; * NPR12
         END ELSE                        ; * NPR12
            CRT @(31,ROW):ADD.NOTE       ; * NPR12
         END                             ; * NPR12
      NEXT I                             ; * NPR12
      CRT REV.OFF:                       ; * NPR12

      RETURN                             ; * NPR12

******************************************************************
DISPLAY.OVERRIDE.RULES:* Display OverRide rules
******************************************************************
      CRT @(57,6):"|--- Overide Info ---|"
      CRT @(60,7):"Field"
      CRT @(68,7):"Optr"
      CRT @(75,7):"Info"
      OVERRIDE.RULES.COUNT = DCOUNT(PRO.REC<116>,@VM)
      IF OVERRIDE.RULES.COUNT GT 13 THEN ORC = 13 ELSE ORC = OVERRIDE.RULES.COUNT
      FOR LN = 1 TO ORC
         CRT @(58,7+LN) :
         IF PRO.REC<116,LN> NE "" THEN
            OVR.FIELD = PRO.REC<116,LN>
            OVR.OPER = PRO.REC<117,LN>
            OVR.INFO = PRO.REC<118,LN>
            CRT @(59,7+LN) : OVR.FIELD "L#8"
            CRT @(69,7+LN) : OVR.OPER
            CRT @(73,7+LN) : OVR.INFO "R#6"
         END
      NEXT LN
      IF OVERRIDE.RULES.COUNT GT 13 THEN CRT @(59,21):"More Overide Info <<<"
      CALL ELINE("")

      RETURN                             ; * NPR08 End Changes

*****************************************************************
PROCESS.INQUIRE:
*****************************************************************
      INQUIRE.SEQ=0
      INQUIRE.DONE=0
      LOOP
         INQUIRE.SEQ+=1
      UNTIL INQUIRE.DONE=1 DO
         INQUIRE.HIST.ID=CLIENT.ID:'*':PRO.ID:'*':INQUIRE.SEQ
         READV NUL FROM F.INQUIRE.HIST,INQUIRE.HIST.ID,1 ELSE INQUIRE.DONE=1
      REPEAT
      INQUIRE.REC=OLD.PRO.REC
      INQUIRE.REC<34>=USER
      INQUIRE.REC<35>=DATE()
      INQUIRE.REC<36>=TIME()
      WRITE INQUIRE.REC ON F.INQUIRE,INQUIRE.HIST.ID
      INQUIRE.HIST=''
      INQUIRE.HIST<7>=USER
      INQUIRE.HIST<8>=DATE()
      INQUIRE.HIST<9>=TIME()
      WRITE INQUIRE.HIST ON F.INQUIRE.HIST,INQUIRE.HIST.ID
      GOSUB 8100                         ; * Display screen
      RETURN

*****************************************************************
GET.TL.ROUTE:
*****************************************************************
      IF ZIP.ARR='' THEN
         ZIP.ARR<1,1>=ORIG.ZIP
         ZIP.ARR<2,1>=ORIG.CITY
         ZIP.ARR<3,1>=ORIG.STATE
         ZIP.ARR<7,1>=''
         ZIP.ARR<1,2>=DEST.ZIP
         ZIP.ARR<2,2>=DEST.CITY
         ZIP.ARR<3,2>=DEST.STATE
         ZIP.ARR<7,2>=MILEAGE
      END
      RVIN=''
      RVIN<1> = ZIP.ARR<1>
      RVIN<2> = ZIP.ARR<2>
      RVIN<3> = ZIP.ARR<3>
      RVIN<4> = TL.BILL.MILES
      RVIN<5> = CH.NUM
      RVIN<6> = IN.OUT
      RVIN<7> = CC
      ORIG = ORIG.ZIP'L#6':' ':ORIG.CITY:', ': ORIG.STATE
      RVIN<8> = ORIG
      DEST = DEST.ZIP'L#6':' ':DEST.CITY:', ': DEST.STATE
      RVIN<9> = DEST
      RVIN<10> = ZIP.ARR<7>
      BEGIN CASE
         CASE LOOKUP.ONLY ; RVIN<11>='V'
         CASE CHANGE.FLAG ; RVIN<11>='E'
         CASE 1 ; RVIN<11>='I'
      END CASE
      RVIN<12> = MILEAGE
      RVIN<13>=USER
      RVIN<14>=CLIENT.ID
      RVIN<15>=CLIENT.NAME
      RVIN<16>=CARRIER.ID
      RVIN<17>=CARRIER.NAME
      RVIN<18>=PRO.ID
      RVOUT=''

      CALL FB.2.1.TL.ROUTE(RVIN,RVOUT,F.PCIN,F.PCOUT,F.MILEAGE,QI,MAT CLIENT.REC)
      IF FP.CO='00002' THEN MILEAGE=RVOUT<6>       ; * JMK67
      MILEAGE=SUM(RVOUT<4>)              ; * NPR888

      CC+=RVOUT<5> ; GOSUB PRINT.CC
      QI = OCONV(QI,'MCU')
      RETURN

*****************************************************************
GET.FB.DETAILS:
*****************************************************************
      PARCEL.FLAG = 0                    ; * NPR031
      IF CARRIER.ID='00041' OR CARRIER.ID='01075' THEN PARCEL.FLAG = 1           ; * NPR031

      BEGIN CASE                         ; * JMK91
         CASE AIR.CAR                    ; * JMK91
            CVIN=''                      ; * JMK91
            IF AIR.CHRG.CODES='' THEN    ; * JMK91
               AIR.CHRG.CODES<1,1>='BASE'          ; * JMK91
               AIR.CHRG.AMTS<1,1>=ACTUAL.CHG       ; * JMK91
               IF MISC.CHG.CODES#'' THEN           ; * JMK91
                  AIR.CHRG.CODES<1,-1>=MISC.CHG.CODES        ; * JMK91
                  AIR.CHRG.AMTS<1,-1>=CONTR.MISC.CHG.AMTS    ; * JMK91
                  MISC.CHG=SUM(CONTR.MISC.CHG.AMTS)          ; * JMK91
                  AIR.CHRG.AMTS<1,1>=ACTUAL.CHG-MISC.CHG     ; * JMK91
               END                       ; * JMK91
            END                          ; * JMK91
            CVIN<1> = SERVICE.LEVEL      ; * JMK91
            CVIN<2> = AIR.PIECES         ; * JMK91
            CVIN<3> = AIR.CHRG.CODES     ; * JMK91
            CVIN<4> = AIR.CHRG.AMTS      ; * JMK91
            CVIN<5> = DIM.WEIGHT         ; * JMK91
            CVIN<6> = WEIGHT             ; * JMK91
            CVIN<7> = CARRIER.ID         ; * JMK91
            CVIN<8> = CARRIER.NAME       ; * JMK91
            ORIG = ORIG.ZIP:' ':ORIG.CITY:', ': ORIG.STATE   ; * JMK91
            CVIN<9> = ORIG               ; * JMK91
            DEST = DEST.ZIP:' ':DEST.CITY:', ': DEST.STATE   ; * JMK91
            CVIN<10> = DEST              ; * JMK91
            CVIN<11> = ACTUAL.CHG        ; * JMK91
            CVIN<12> = CC                ; * JMK91
            IF CHANGE.FLAG THEN CVIN<13> = 'E' ELSE CVIN<13> = 'I'     ; * JMK91
            CVIN<14> = USER              ; * JMK91
            CVIN<15> = MISC.REASON       ; * JMK157

            ID = 'AIR.SERVLEV*':CARRIER.ID
            READ SERVICE.LEV FROM F.TABLES,ID ELSE
               CALL ELINE('There must be a service level table set up for this carrier.')
               GOTO 100
            END
            CVOUT=''                     ; * JMK91
            IF SU.FLAG=1 AND DBCTRL<15>='AC' ELSE
               CALL FB.2.1.AIR.FREIGHT(CVIN,CVOUT,AIR.CODES,SERVICE.LEV,QI)      ; * JMK91
            END
            CC+=CVOUT<5> ; GOSUB PRINT.CC          ; * JMK91
            IF CVOUT # '' THEN           ; * JMK91
               SERVICE.LEVEL = CVOUT<1>  ; * JMK91
               AIR.PIECES = CVOUT<2>     ; * JMK91
               AIR.CHRG.CODES = CVOUT<3>           ; * JMK91
               AIR.CHRG.AMTS = CVOUT<4>  ; * JMK91
               MISC.REASON = CVOUT<6>    ; * JMK157
            END                          ; * JMK91
         CASE (INTL.CAR OR ORIG.ZIP = "99999" OR DEST.ZIP = "99999") AND CLIENT.ID # "02427"         ; * NKH79
*         CASE INTL.CAR OR ORIG.ZIP = "99999" OR DEST.ZIP = "99999"                             ; * NKH79
            IF NOT(PARCEL.FLAG) THEN
               CVIN = ''
               CVIN<1> = ''
               CVIN<2> = ''
               CVIN<3> = INTL.CHRG.CODES
               CVIN<4> = INTL.CHRG.AMTS
               CVIN<7> = CARRIER.ID
               CVIN<8> = CARRIER.NAME
               ORIG = ORIG.ZIP:' ':ORIG.CITY:', ': ORIG.STATE
               CVIN<9> = ORIG
               DEST = DEST.ZIP:' ':DEST.CITY:', ': DEST.STATE
               CVIN<10> = DEST
               CVIN<11> = ACTUAL.CHG
               CVIN<12> = 0
               IF CHANGE.FLAG THEN CVIN<13> = 'E' ELSE CVIN<13> = 'I'
               CVIN<14> = USER
               CVOUT=''
               IF SU.FLAG=1 AND DBCTRL<15>='AC' ELSE
                  CALL FB.2.1.INTL.FREIGHT(CVIN,CVOUT,INTL.CODES,QI)
               END
               CC+=CVOUT<5> ; GOSUB PRINT.CC
               IF CVOUT # '' THEN
                  INTL.CHRG.CODES = CVOUT<3>
                  INTL.CHRG.AMTS = CVOUT<4>
               END
               QI = OCONV(QI,'MCU')
               BEGIN CASE
                  CASE QI = 'X'
                     BACK.FLAG = 1
                     GOSUB 8100
                     GOSUB 8200
                     GOTO 2001
                  CASE QI = 'EX'
                     GOTO PROGRAM.EXIT   ; * NKH10
               END CASE
               GOSUB 8100
               GOSUB 8200
            END
         CASE 1                          ; * JMK91
            CVIN=''
            IF DTL.CHRG.CODES='' THEN
               DTL.CHRG.CODES<1,1>='FRT'
               DTL.CHRG.AMTS<1,1>=ACTUAL.CHG
               IF MISC.CHG.CODES#'' THEN
                  DTL.CHRG.CODES<1,-1>=MISC.CHG.CODES
                  DTL.CHRG.AMTS<1,-1>=CONTR.MISC.CHG.AMTS
                  MISC.CHG=SUM(CONTR.MISC.CHG.AMTS)
                  DTL.CHRG.AMTS<1,1>=ACTUAL.CHG-MISC.CHG
               END
            END
            CVIN<3> = DTL.CHRG.CODES
            CVIN<4> = DTL.CHRG.AMTS
            CVIN<6> = WEIGHT
            CVIN<7> = CARRIER.ID
            CVIN<8> = CARRIER.NAME
            ORIG = ORIG.ZIP:' ':ORIG.CITY:', ': ORIG.STATE
            CVIN<9> = ORIG
            DEST = DEST.ZIP:' ':DEST.CITY:', ': DEST.STATE
            CVIN<10> = DEST
            CVIN<11> = ACTUAL.CHG
            CVIN<12> = 0
            BEGIN CASE
               CASE LOOKUP.ONLY ; CVIN<13>='V'
               CASE CHANGE.FLAG ; CVIN<13>='E'
               CASE 1 ; CVIN<13>='I'
            END CASE
            CVIN<14> = USER
            CVIN<15> = MISC.REASON       ; * JMK157
            IF TEMPO.CLIENT.FLG THEN     ; * GRB19
               CVIN<16> = CLIENT.ID      ; * GRB19
            END                          ; * GRB19
            CVOUT=''
            IF USER = 'GBINO' THEN DEBUG


            CALL FB.2.1.TL.FREIGHT(CVIN,CVOUT,LI.CODES,QI)
            CC+=CVOUT<5> ; GOSUB PRINT.CC
            IF CVOUT # '' THEN
               DTL.CHRG.CODES = CVOUT<3>
               DTL.CHRG.AMTS = CVOUT<4>
               MISC.REASON = CVOUT<6>    ; * JMK157
            END
            IF CLIENT.ID = "01334" THEN
               IF CVOUT # '' THEN
                  N.CDX = DCOUNT(CVOUT<3>,@VM)
                  SIT.AMT = 0
                  FOR I.CDX = 1 TO N.CDX
                     W.CD = CVOUT<3,I.CDX>
                     IF W.CD = "SIT" THEN
                        SIT.AMT = CVOUT<4,I.CDX>
                     END
                  NEXT I.CDX
                  N.RT.ZIPS = DCOUNT(ZIP.ARR<1>,@VM)
                  IF N.RT.ZIPS LE 2 AND SIT.AMT NE "0" THEN
                     CALL ELINE("Stop in Transit points need to be entered for SIT code with Amount")
                     GOTO GET.FB.DETAILS
                  END
                  IF N.RT.ZIPS GT 2 AND SIT.AMT EQ "0" THEN
                     CALL ELINE("Stop in Transit points have been entered - Must have an SIT code with Amount")
                     GOTO GET.FB.DETAILS
                  END
               END
            END

      END CASE                           ; * JMK91
      QI = OCONV(QI,'MCU')
      RETURN

*****************************************************************
RECALC.FB.DETAILS:
*****************************************************************
      NVAL=DCOUNT(DTL.OUT<40>,@VM)       ; * JMK14
      FOR VAL=1 TO NVAL                  ; * JMK14
         TRAN.TYPE=DTL.OUT<40,VAL>       ; * JMK14
         BEGIN CASE                      ; * JMK14
            CASE TRAN.TYPE='FRT' OR TRAN.TYPE = 1 OR TRAN.TYPE = 2     ; * JMK14  ;* NPR031
               NXT.VAL=DCOUNT(FRT.ARRAY<1>,@VM)+1  ; * JMK14
               FOR ATT=1 TO 6            ; * JMK14
                  FRT.ARRAY<ATT,NXT.VAL>=DTL.OUT<39+ATT,VAL>           ; * JMK14
               NEXT ATT                  ; * JMK14
            CASE TRAN.TYPE='MIN'         ; * JMK14
               NXT.VAL=DCOUNT(FRT.ARRAY<1>,@VM)+1  ; * JMK14
               FOR ATT=1 TO 6            ; * JMK14
                  FRT.ARRAY<ATT,NXT.VAL>=DTL.OUT<39+ATT,VAL>           ; * JMK14
               NEXT ATT                  ; * JMK14
            CASE TRAN.TYPE='DEF'         ; * JMK14
               NXT.VAL=DCOUNT(FRT.ARRAY<1>,@VM)+1  ; * JMK14
               FOR ATT=1 TO 6            ; * JMK14
                  FRT.ARRAY<ATT,NXT.VAL>=DTL.OUT<39+ATT,VAL>           ; * JMK14
               NEXT ATT                  ; * JMK14
            CASE TRAN.TYPE='BASE'        ; * JMK81
               NXT.VAL=DCOUNT(FRT.ARRAY<1>,@VM)+1  ; * JMK81
               FOR ATT=1 TO 6            ; * JMK81
                  FRT.ARRAY<ATT,NXT.VAL>=DTL.OUT<39+ATT,VAL>           ; * JMK81
               NEXT ATT                  ; * JMK81
            CASE 1                       ; * JMK14
               LOCATE(TRAN.TYPE,MIS.ARRAY,1;MPOS) THEN       ; * JMK14
                  FOR ATT=5 TO 6         ; * JMK14
                     IF NUM(DTL.OUT<39+ATT,VAL>) THEN        ; * JMK14
                        MIS.ARRAY<ATT,MPOS>+=DTL.OUT<39+ATT,VAL>+0     ; * JMK14
                     END                 ; * JMK14
                  NEXT ATT               ; * JMK14
               END ELSE                  ; * JMK14
                  NXT.VAL=DCOUNT(MIS.ARRAY<1>,@VM)+1         ; * JMK14
                  FOR ATT=1 TO 4         ; * JMK14
                     MIS.ARRAY<ATT,NXT.VAL>=DTL.OUT<39+ATT,VAL>        ; * JMK14
                  NEXT ATT               ; * JMK14
                  FOR ATT=5 TO 6         ; * JMK14
                     IF NUM(DTL.OUT<39+ATT,VAL>) THEN        ; * JMK14
                        MIS.ARRAY<ATT,MPOS>+=DTL.OUT<39+ATT,VAL>+0     ; * JMK14
                     END                 ; * JMK14
                  NEXT ATT               ; * JMK14
               END                       ; * JMK14
         END CASE                        ; * JMK14
      NEXT VAL                           ; * JMK14
      RETURN

*****************************************************************
ADD.NEW.VCN:
*****************************************************************
      TABLE.ID = 'VCN*':CLIENT.ID        ; * JCW02
      READ TABLE.REC FROM F.TABLES, TABLE.ID ELSE  ; * JCW02
         TABLE.REC = ''                  ; * JCW02
         TABLE.REC<1> = 0                ; * JCW02
      END                                ; * JCW02
      DONE = 0                           ; * JCW02
      LOOP UNTIL DONE DO                 ; * JCW02
         VCN.ID = TABLE.REC<1>'R%5'      ; * JCW02
         TABLE.REC<1> += 1               ; * JCW02
         READ TEST FROM F.VCN, VCN.ID ELSE         ; * JCW02
            WRITE TABLE.REC ON F.TABLES, TABLE.ID  ; * JCW02
            DONE = 1                     ; * JCW02
         END                             ; * JCW02
      REPEAT                             ; * JCW02
      RETURN                             ; * JCW02

      * Begin NKH30
*****************************************************************
*GET.QV.OPTS:
*****************************************************************
      *      CLIENT.QV=''
      *      IF CL.DUE.VER='Y' THEN             ; * JMK24
      *         CLIENT.QV<1,-1>='DD'            ; * JMK24
      *      END                                ; * JMK24
      *      IF CL.IO.VER='Y' THEN              ; * JMK24
      *         CLIENT.QV<1,-1>='IO'            ; * JMK24
      *      END                                ; * JMK24
      *      IF CL.DIV.VER='Y' THEN             ; * JMK24
      *         CLIENT.QV<1,-1>='DC'            ; * JMK24
      *      END                                ; * JMK24
      *      IF CL.EXP.VER='Y' THEN             ; * JMK24
      *         CLIENT.QV<1,-1>='EC'            ; * JMK24
      *      END                                ; * JMK24
      *      IF CL.ORIG.VER='Y' THEN            ; * JMK24
      *         CLIENT.QV<1,-1>='ORIG'          ; * JMK24
      *      END                                ; * JMK24
      *      IF CL.DEST.VER='Y' THEN            ; * JMK24
      *         CLIENT.QV<1,-1>='DEST'          ; * JMK24
      *      END                                ; * JMK24
      *      IF CL.WT.VER='Y' THEN              ; * JMK24
      *         CLIENT.QV<1,-1>='WT'            ; * JMK24
      *      END                                ; * JMK24
      *      IF CL.ZIP.VER='Y' THEN             ; * JMK24
      *         CLIENT.QV<1,-1>='Z'             ; * JMK24
      *      END                                ; * JMK24
      *      IF CL.BOL.VER='Y' THEN             ; * JMK24
      *         CLIENT.QV<1,-1>='BL'            ; * JMK24
      *      END                                ; * JMK24
      *      IF CL.PO.VER='Y' THEN              ; * JMK24
      *         CLIENT.QV<1,-1>='PO'            ; * JMK24
      *      END                                ; * JMK24
      *      IF CL.VEND.VER='Y' THEN            ; * JMK24
      *         CLIENT.QV<1,-1>='V'             ; * JMK24
      *      END                                ; * JMK24
      *      IF CL.CUST.VER='Y' THEN            ; * JMK24
      *         CLIENT.QV<1,-1>='C'             ; * JMK24
      *      END                                ; * JMK24
      *      IF CL.EXP.DIST.VER='Y' THEN        ; * JMK24
      *         CLIENT.QV<1,-1>='ED'            ; * JMK24
      *      END                                ; * JMK24
      *      IF CL.DATE.VER='Y' THEN            ; * JMK24
      *         CLIENT.QV<1,-1>='PD'            ; * JMK24
      *      END                                ; * JMK24
      *      IF CL.PRO.VER='Y' THEN             ; * JMK24
      *         CLIENT.QV<1,-1>='P'             ; * JMK24
      *      END                                ; * JMK24
      *      IF CL.DISC.VER='Y' THEN            ; * JMK24
      *         CLIENT.QV<1,-1>='DISC'          ; * JMK24
      *      END                                ; * JMK24
      *      IF CL.LOG.VER='Y' THEN             ; * JMK24
      *         CLIENT.QV<1,-1>='LD'            ; * JMK24
      *      END                                ; * JMK24
      *      IF CL.CLS.VER='Y' THEN             ; * JMK24
      *         CLIENT.QV<1,-1>='CLS'           ; * JMK24
      *      END                                ; * JMK24
      *      IF CL.AIR.VER='Y' THEN             ; * JMK24
      *         CLIENT.QV<1,-1>='AP'            ; * JMK24
      *      END                                ; * JMK24
      *      RETURN                             ; * JMK24
      * End NKH30
******************************************************************
QUICK.VERIFY:
******************************************************************
      * FIRST CHECK THE CLIENT FOR PROPER PROFILE
      PRO.LIST=''
      PRO.LIST<1>=PRO
      PRO.LIST<2>=1
      AMT.LIST=''
      AMT.LIST<1>=ACTUAL.CHG
      AMT.LIST<2>=1
      PRO.VERIFY='N'
      AMT.VERIFY='N'
      * Begin NKH30
      CAR.VERIFY='N'
      CAR.LIST=''
      CAR.LIST<1>=CARRIER.ID
      CAR.LIST<2>=1
      * End NKH30

*****************************************************************
9300: * DISPLAY VERIFICATION SCREEN
*****************************************************************
      GOSUB DISPLAY.VERIFICATION.SCREEN  ; * NKH30

      * Begin NKH30
*****************************************************************
9305: * START CARRIER ENTRY
*****************************************************************
      CAR.VERIFY = ''
      CRT @(14,6):STR(' ',40)
      MASK = '#####'
      HELP="Enter the Carrier Number. [X]=Back. [EX]=Exit."
      CALL GEN.IN(8,6,MASK,'',Q,0,20,'','',2,8,6,0,QI,HELP,0,23)
      CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      IF NUM(QI) THEN
         QI=QI'R%5'
      END ELSE
         QI=OCONV(QI,'MCU')
      END
      CRT @(8,6):QI
      BEGIN CASE
         CASE QI='X'
            CRT @(8,6):'         ':
            BACK.FLAG=1
            GOTO 9450
         CASE QI='EX'
            GOTO PROGRAM.EXIT
         CASE QI = '00000'
            GOTO 9305
         CASE NOT(QI MATCHES "0N")
            VIN=0                        ; * Starting Chars In
            VOUT=''
            CALL SOUNDEX.DISPLAY.NEW(VIN,VOUT,QI,'CARRIERS','SDX.CARRIER,NAME','1,2,3,4',ITEM.LIST)
            CC+=VOUT<1> ; GOSUB PRINT.CC
            GOSUB DISPLAY.VERIFICATION.SCREEN
            BEGIN CASE
               CASE ITEM.LIST = ''
                  GOTO 9305
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                  GOTO 9305
               CASE ITEM.LIST # ''
                  IF NUM(ITEM.LIST<1,1>) THEN SND.DATA=ITEM.LIST<1,1> ; GOSUB SEND.DATA
                  GOTO 9305
            END CASE
         CASE QI # CARRIER.ID
            LOCATE(QI,CAR.LIST,1;CKPOS) THEN
               CALL ELINE('Your verified carrier does not match original entry - Please re-enter.')
               SAVE.VER.PRO = PRO        ; * NKH30
               GOSUB 8100                ; * Display screen
               GOSUB 8200
               GO 200
            END ELSE
               CAR.LIST<1,-1>=QI
               CAR.CNT=DCOUNT(CAR.LIST<1>,@VM)
               IF CAR.CNT > 3 THEN
                  CALL ELINE('You have entered too many carriers that do not match - Please re-enter.')
                  SAVE.VER.PRO = PRO     ; * NKH30
                  GOSUB 8100             ; * Display screen
                  GOSUB 8200
                  GO 200
               END ELSE
                  CALL ELINE('This carier number does not match original entry - Please re-verify.')
                  GO 9305
               END
            END
         CASE 1
            CAR.VERIFY = 'Y'
            CRT @(14,6):CARRIER.NAME:' ':CARRIER.CITY:', ':CARRIER.STATE
      END CASE

      * End NKH30
*****************************************************************
9310: * START PRO ENTRY
*****************************************************************
      IF PRO.MASKS<1,1>#'' THEN
         MASK=PRO.MASKS<1,1>
         IF PRO.MASKS<1,2>#'' THEN
            OTHER.MASKS=PRO.MASKS
            DEL OTHER.MASKS<1,1>         ; ** Remove the First one (already used)
            TEXT='Other Valid Masks: ':CHANGE(OTHER.MASKS<1>,@VM,' ')
            CRT @(0,22):@(-4):TEXT[1,59]:
         END ELSE OTHER.MASKS=''
      END ELSE
         OTHER.MASKS=''
         MASK=STR('-',20)
      END
      *********************************************************************
      QV.PRO=''
      BACK.FLAG=0
      HELP="Enter Pro. [S]=Scan Carrier. [N]=Next Img [X]=Back. [EX]=Exit."      ; * NKH04
      CALL GEN.IN(8,7,MASK,'',Q,0,21,'','',2,8,7,0,QI,HELP,0,23)       ; * DRF028   ; * NKH30
      CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      IF OTHER.MASKS#'' THEN PRINT @(0,22):@(-4):
      IF QI='' THEN GO 9310              ; * Do Nothing Per Brian 12/2/97
      IF INDEX(QI,'*',1) THEN
         CALL ELINE('ERROR! Pro Number cannot contain an *')
         CC+=1 ; GOSUB PRINT.CC
         GO 9310                         ; * NKH30
      END
      PLUS.POS=INDEX(QI,'+',1)
      **************************************************************
      IF PLUS.POS THEN
         QI=CHANGE(QI,"+","-")
         Q=QI
         CRT @(8,7):QI:                  ; * NKH30
      END
      IF QI[LEN(QI),1]='-' AND (CARRIER.ID='00093' OR CARRIER.ID='00017') THEN
         QI=QI[1,LEN(QI)-1]:'X'
         Q=QI
         CRT @(8,7):QI:                  ; * NKH30
      END
      **************************************************************
      IF INDEX(QI,'+',1) THEN
         CALL ELINE('ERROR! Pro Number cannot contain an +')
         CC+=1 ; GOSUB PRINT.CC
         GO 9310                         ; * NKH30
      END
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='S'
            CRT @(0,0):@(-3)
            CALL FB.DRAW.BOX(8,3,67,16,' ','')
            CALL FB.DRAW.BOX(9,4,65,12,' ','+=+|+=+|')
            CALL FB.DRAW.BOX(9,4,65,3,' ','+=+|+=+|')
            CALL FB.PRINT.CENT(9,74,8,"C A R R I E R   C O M M E N T S")
            FOR I=1 TO 8
               COMMENT=CARRIER.REC<45,I>'L#60'
               ROW=I+6
               CRT @(10,ROW):I'R#2':'|':COMMENT
            NEXT I
            CALL ELINE('')
            GOTO 9300
         CASE QI='X'
            CRT @(5,7):SPACE(21)         ; * DRF028   ; * NKH30
            GOTO 9305                    ; * NKH30
         CASE QI='EX'
            GOTO PROGRAM.EXIT            ; * NKH10
      END CASE
      QV.PRO=OCONV(Q,'MCU')
      CALL CLR.CONTROL(QV.PRO)
      VIN=QV.PRO
      CALL CHECK.PRO.NEW(VIN,CARRIER.REC,VOUT)     ; * JMK165
      QV.CHK.MSG = TRIM(VOUT<1>)
      CHK.OLD.QV.PRO = VOUT<3>           ; * Mv with Old Pro Number to check
      IF QV.CHK.MSG # '' THEN
         TEST.BILL.ID=CARRIER.ID:'*':QV.PRO:'*0'   ; * JMK210
         READ TEST.PRO.REC FROM F.HIST,TEST.BILL.ID ELSE     ; * JMK210
            CALL ELINE('Error! ':QV.CHK.MSG)
            LOCK.IMAGE = 1               ; * NKH04
            CC+=1 ; GOSUB PRINT.CC
            GO 9310
         END                             ; * JMK210
      END
      QV.PRO.LEN=LEN(QV.PRO)
      IF QV.PRO[QV.PRO.LEN-1,2]='BD' THEN QV.BAL.DUE=1 ELSE QV.BAL.DUE=0

*****************************************************************
9320: * END OF PRO CHECK
*****************************************************************
      LOCATE(QV.PRO,PRO.LIST,1;CKPOS) THEN
         PRO.LIST<2,CKPOS>+=1
         IF PRO.LIST<2,CKPOS>>1 THEN
            IF QV.PRO=PRO THEN
               PRO.VERIFY='Y'
            END ELSE
               CALL ELINE('Your verified pro does not match original entry - Please re-enter.')
               SAVE.VER.PRO = PRO        ; * NKH30
               GO 300                    ; * NKH30
            END
         END
      END ELSE
         PRO.LIST<1,-1>=QV.PRO
         PRO.LIST<2,-1>=1
         PRO.CNT=DCOUNT(PRO.LIST<1>,@VM)
         IF PRO.CNT > 3 THEN
            CALL ELINE('You have entered too many pros that do not match - Please re-enter.')
            SAVE.VER.PRO = PRO           ; * NKH30
            GO 300                       ; * NKH30
         END
         CALL ELINE('This pro does not match original entry - Please re-verify.')
         GO 9310                         ; * NKH30
      END
      DISP=QV.PRO:' Version ':VERSION
      CRT @(8,7):DISP                    ; * NKH30

*****************************************************************
9400: * Enter actual charge
*****************************************************************
      * VERIFY AMOUNT
      LOCATE 'A' IN VERIFIED<1> BY 'AL' SETTING DUMMY.POS THEN
         AMT.VERIFIED=1
         CRT @(8,8):ACTUAL.CHG'R26#9'    ; * NKH30
         AMT.VERIFY='Y'
         GO 9450
      END ELSE
         AMT.VERIFIED=0
      END
      HELP="Enter the Actual Charge. [X]=Back. [EX]=Exit."
      MASK=0'R26,#9'
      FLAT.RATE=0                        ; * JMK26
      CALL GEN.IN(8,8,MASK'R26#9','AMT2',Q,0,9,'','',2,-9,8,0,QI,HELP,0,23)      ; * NKH30
      CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      QI=OCONV(QI,'MCU')
      IF QI[LEN(QI),1]='+' THEN          ; * JMK26
         FLAT.RATE=1                     ; * JMK26
         QI=QI[1,LEN(QI)-1]              ; * JMK26
      END                                ; * JMK26
      BEGIN CASE
         CASE QI='X'
            CRT @(8,8):'         ':      ; * NKH30
            BACK.FLAG=1
            GOTO 9310                    ; * NKH30
         CASE QI='EX'
            GOTO PROGRAM.EXIT            ; * NKH10
      END CASE
      IF Q[LEN(Q),1]='+' THEN Q=Q[1,LEN(Q)-1]
      QV.ACTUAL.CHG=Q'R0'
      LOCATE(QV.ACTUAL.CHG,AMT.LIST,1;CKPOS) THEN
         AMT.LIST<2,CKPOS>+=1
         IF AMT.LIST<2,CKPOS> > 1 THEN
            IF QV.ACTUAL.CHG=ACTUAL.CHG THEN
               AMT.VERIFY='Y'
               CRT @(8,8):QV.ACTUAL.CHG'R26#9'     ; * NKH30
               GO 9450
            END ELSE
               CALL ELINE('Your verified amount does not match original entry - Please re-enter.')
               SAVE.VER.PRO = PRO        ; * NKH30
               GO 300
            END
         END
      END ELSE
         AMT.LIST<1,-1>=QV.ACTUAL.CHG
         AMT.LIST<2,-1>=1
         AMT.CNT=DCOUNT(AMT.LIST<1>,@VM)
         IF AMT.CNT > 3 THEN
            CALL ELINE('You have entered too many amts that do not match - Please re-enter.')
            SAVE.VER.PRO = PRO           ; * NKH30
            GO 300
         END
         CALL ELINE('This amount does not match original entry - Please re-verify.')
         GO 9400
      END
      FLAT.RATE.MATCH=1                  ; * JMK26
      IF FLAT.RATE THEN                  ; * JMK26
         IF PRO.REC<119>#1 THEN FLAT.RATE.MATCH=0  ; * JMK26
      END ELSE                           ; * JMK26
         IF PRO.REC<119>=1 THEN FLAT.RATE.MATCH=0  ; * JMK26
      END                                ; * JMK26
      IF QV.ACTUAL.CHG NE PRO.REC<8> OR NOT(FLAT.RATE.MATCH) THEN      ; * JMK26
         IF DATE()=12112 AND QV.ACTUAL.CHG = PRO.REC<7> ELSE           ; * JMK26
            * Special override for Xpedx on 2/27/01; * JMK26
            CALL ELINE('Invalid Actual Charge.')   ; * JMK26
            GOTO 9400                    ; * JMK26
         END                             ; * JMK26
      END                                ; * JMK26
      CRT @(5,8):QV.ACTUAL.CHG'R26#9'    ; * NKH30
      IF FLAT.RATE THEN                  ; * JMK26
         CRT @(5,19):'F'                 ; * JMK26
      END ELSE                           ; * JMK26
         CRT @(5,19):' '                 ; * JMK26
      END                                ; * JMK26

*****************************************************************
9450: * DETERMINE SUCCESS
*****************************************************************
      IF PRO.VERIFY='Y' AND AMT.VERIFY='Y' AND CAR.VERIFY='Y' THEN     ; * NKH30
         QV.VALID=1
         SAVE.VER.PRO = ''               ; * NKH30
      END
      RETURN

      * Begin NKH30
*****************************************************************
DISPLAY.VERIFICATION.SCREEN:
*****************************************************************
      QV.PROG.DESC="QUICK VERIFICATION"
      CLR.SCR = 1 ; GOSUB DISP.SCREEN.HEADING
      CRT @(0,3):'Client number  ':CLIENT.ID:' ':CL.NAME:@(-4)
      CRT @(70,3):' Stack ':BILL.STATUS'R#2':
      CRT @(0,4):STR('-',79)
      CRT @(0,6):'Carrier.'
      CRT @(0,7):'Pro.....'
      CRT @(0,8):'Amt.....'

      RETURN

      * End NKH30
*****************************************************************
9500: *  CHECK FOR QUICK PAY BLOCKING TAG
*****************************************************************
      BLOCKIT=0                          ; * JMK31
      BLOCKIT.YES=0                      ; * JMK172
      BLOCKIT.NO=0                       ; * JMK172
      BLOCKIT.MAYBE=0                    ; * JMK72

      IF USER.TYPE='A' THEN RETURN       ; * JMK19
      IF CARRIER.ID='00642' THEN RETURN  ; * JMK19
      IF CARRIER.ID='08519' THEN RETURN
      IF CARRIER.ID='03029' THEN RETURN
      IF CARRIER.ID='23288' THEN RETURN
      IF CLIENT.ID='01078' THEN RETURN   ; * JMK71

      TLVIN=''                           ; * JMK21
      TLVOUT=''                          ; * JMK21
      TLVIN<1>=ORIG.CITY                 ; * JMK21
      TLVIN<2>=ORIG.STATE                ; * JMK21
      CALL SET.CITY(TLVIN,TLVOUT)        ; * JMK21
      TL.ORIG.CITY=TLVOUT<1>             ; * JMK21
      TL.ORIG.STATE=TLVOUT<2>            ; * JMK21
      TLVIN=''                           ; * JMK21
      TLVOUT=''                          ; * JMK21
      TLVIN<1>=DEST.CITY                 ; * JMK21
      TLVIN<2>=DEST.STATE                ; * JMK21
      CALL SET.CITY(TLVIN,TLVOUT)        ; * JMK21
      TL.DEST.CITY=TLVOUT<1>             ; * JMK21
      TL.DEST.STATE=TLVOUT<2>            ; * JMK21
      TAG.ID=TL.ORIG.CITY:'*':TL.ORIG.STATE:'*':TL.DEST.CITY:'*':TL.DEST.STATE   ; * JMK19; * JMK21
      TAG.ID=CHANGE(TAG.ID,' ','_')      ; * JMK19
      READU TAG.REC FROM F.TAG.BLOCK,TAG.ID THEN   ; * JMK19
         IF TAG.REC<13,1>='EDEEN' THEN GO 9520     ; * JMK@@@
         LOCATE(PRO.ID,TAG.REC,16;PPOS) THEN       ; * JMK21
            IF TAG.REC<21,PPOS>='D' THEN GO 9520   ; * JMK21
         END                             ; * JMK21
         NVAL=DCOUNT(TAG.REC<1>,@VM)     ; * JMK19
         FOR VAL=1 TO NVAL               ; * JMK19
            BLOCKIT=1                    ; * JMK19
            TAG.CHG=TAG.REC<1,VAL>       ; * JMK19
            TAG.PU.DT=TAG.REC<2,VAL>     ; * JMK19
            TAG.LOAD.NO=TAG.REC<10,VAL>  ; * JMK19
            TAG.EXP.DT=TAG.PU.DT+TAG.LIFESPAN      ; * JMK19
            TAG.CHG.VAR=TAG.CHG*TAG.CHG.PCT        ; * JMK19
            TAG.CHG.LO=ICONV(TAG.CHG-TAG.CHG.VAR,'MR0')      ; * JMK19
            TAG.CHG.HI=ICONV(TAG.CHG+TAG.CHG.VAR,'MR0')      ; * JMK19
            IF ACTUAL.CHG < TAG.CHG.LO THEN BLOCKIT=0        ; * JMK19

            IF BLOCKIT THEN              ; * JMK19
               IF (FRT.FLAG OR USER='DAVID' OR USER='SROSALIES') AND CLIENT.ID='00949' THEN          ; * SWB07

*****************************************************************
9505:
*****************************************************************
                  HELP='Is this a Direct Dispatch? (Y or 1/N or 0)'    ; * JMK40
                  CALL GEN.IN(0,22,'Direct Dispatch? N ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)      ; * JMK40
                  QI=OCONV(QI,'MCU')     ; * JMK40
                  IF QI='' THEN QI='N'   ; * JMK40
                  BEGIN CASE             ; * JMK40
                     CASE QI='Y' OR QI='1'         ; * JMK40
                        BLOCKIT=0        ; * JMK40
                        GOTO 9520        ; * JMK40
                     CASE QI='N' OR QI='0'         ; * JMK40
                     CASE 1              ; * JMK40
                        GOTO 9505        ; * JMK40
                  END CASE               ; * JMK40
               END                       ; * JMK40

*****************************************************************
9507:          * VERIFY LOAD MATCH
*****************************************************************
               VERIFY.MATCH=1            ; * JMK139
               SHIP.PASS=0               ; * JMK171
               TAG.AMT=TAG.REC<1,VAL>    ; * JMK72
               TAG.PU.DT=TAG.REC<2,VAL>  ; * JMK72
               TAG.DEL.DT=TAG.REC<3,VAL>           ; * JMK72
               TAG.CARRIER=TAG.REC<4,VAL>          ; * JMK72
               READ TAG.CARRIER.REC FROM F.CARRIERS,TAG.CARRIER ELSE TAG.CARRIER.REC=''    ; * JMK72
               TAG.CLIENT=TAG.REC<5,VAL>           ; * JMK72
               READ TAG.CLIENT.REC FROM F.CLIENTS,TAG.CLIENT ELSE TAG.CLIENT.REC=''        ; * JMK72
               TAG.ORIG.ZIP=TAG.REC<6,VAL>         ; * JMK72
               ZIP.VAR = TAG.ORIG.ZIP    ; * JMK72
               CALL FB.READ.ZIP(ZIP.VAR,CITY,STATE)          ; * JMK72
               TAG.ORIG.CITY=CITY        ; * JMK72
               TAG.ORIG.STATE=STATE      ; * JMK72
               TAG.DEST.ZIP=TAG.REC<7,VAL>         ; * JMK72
               ZIP.VAR = TAG.DEST.ZIP    ; * JMK72
               CALL FB.READ.ZIP(ZIP.VAR,CITY,STATE)          ; * JMK72
               TAG.DEST.CITY=CITY        ; * JMK72
               TAG.DEST.STATE=STATE      ; * JMK72
               TAG.WEIGHT=TAG.REC<8,VAL>           ; * JMK72
               TAG.MILES=TAG.REC<9,VAL>  ; * JMK72
               TAG.LOAD.NO=TAG.REC<10,VAL>         ; * JMK72
               TAG.INV.NO=TAG.REC<11,VAL>          ; * JMK72
               TAG.DEPT=TAG.REC<12,VAL>  ; * JMK72
               CRT @(0,22):BELL:         ; * JMK72
               CRT @(05,08):'+':STR('-',68):'+':   ; * JMK72
               FOR LX=9 TO 20            ; * JMK72
                  CRT @(05,LX):'|':SPACE(68):'|':  ; * JMK72
               NEXT LX                   ; * JMK72
               CRT @(05,21):'+':STR('-',68):'+':   ; * JMK72
               CRT @(10,08):'Potential Transportation Bill':           ; * JMK72
               IF NVAL>1 THEN            ; * JMK171
                  CRT @(49,08):VAL:' of ':NVAL     ; * JMK171
               END                       ; * JMK171
               CRT @(07,09):'Est. Charges  : ':TAG.AMT'L26#12':        ; * JMK72
               CRT @(07,10):'Pick Up Date  : ':TAG.PU.DT'D2/':         ; * JMK72
               CRT @(07,11):'Delivery Date : ':TAG.DEL.DT'D2/':        ; * JMK72
               CRT @(07,12):'Carrier Name  : ':(TAG.CARRIER:' ':TAG.CARRIER.REC<1>)'L#45':           ; * JMK72
               CRT @(07,13):'Client Name   : ':(TAG.CLIENT:' ':TAG.CLIENT.REC<2>)'L#45':   ; * JMK72
               CRT @(07,14):'Origin Zip    : ':TAG.ORIG.ZIP:' ':TAG.ORIG.CITY:' ':TAG.ORIG.STATE     ; * JMK72
               CRT @(07,15):'Dest. Zip     : ':TAG.DEST.ZIP:' ':TAG.DEST.CITY:' ':TAG.DEST.STATE     ; * JMK72
               CRT @(07,16):'Est. Weight   : ':TAG.WEIGHT:   ; * JMK72
               CRT @(07,17):'Est. Miles    : ':TAG.MILES:    ; * JMK72
               CRT @(07,18):'Load Number   : ':TAG.LOAD.NO:  ; * JMK72
               CRT @(07,19):'Inv. Number   : ':TAG.INV.NO:   ; * JMK72
               CRT @(07,20):'Dept/User     : ':TAG.DEPT:     ; * JMK72

               HELP='[Y]es-everything is identical [M]aybe-not sure [N]o-definitely not [Ex]it'      ; * JMK72 ; * JMK74
               CALL GEN.IN(0,22,'Does this load match? ###','',Q,0,4,'','',2,-3,22,1,QI,HELP,0,23)   ; * JMK72 ; * JMK74
               QI=OCONV(QI,'MCU')        ; * JMK72
               IF QI='Y' THEN QI='YES'   ; * JMK74
               IF QI='N' THEN QI='NO'    ; * JMK74
               IF QI='M' THEN QI='MAYBE'           ; * JMK74
               BEGIN CASE                ; * JMK72
                  CASE QI='EX'           ; * JMK72
                     GOTO PROGRAM.EXIT   ; * NKH10                ; * JMK72
                  CASE QI='YES'          ; * JMK72
                     BLOCKIT.YES=1       ; * JMK172
                     BLOCKIT.NO=0        ; * JMK172
                     BLOCKIT.MAYBE=0     ; * JMK172
                     GO 9520             ; * JMK172
                  CASE QI='NO'           ; * JMK72
                     SHIP.PASS=1         ; * JMK72 ; * JMK74 ; * JMK171
                     BLOCKIT.YES=0       ; * JMK172
                     BLOCKIT.NO=1        ; * JMK172
                     BLOCKIT.MAYBE=0     ; * JMK172
                  CASE QI='MAYBE'        ; * JMK74
                     BLOCKIT.YES=0       ; * JMK172
                     BLOCKIT.NO=0        ; * JMK172
                     BLOCKIT.MAYBE=1     ; * JMK172
                  CASE 1                 ; * JMK72
                     GOTO 9507
               END CASE                  ; * JMK72
               GOSUB 8100                ; * Display screen ; * JMK72
               GOSUB 8200                ; * Display data   ; * JMK72
               IF BLOCKIT OR VERIFY.MATCH THEN     ; * JMK72 ; * JMK139
                  LOCATE(PRO.ID,TAG.REC,16;TPOS) ELSE        ; * JMK23
                     NVAL1=DCOUNT(TAG.REC<16>,@VM)           ; * JMK23
                     TAG.REC<16,NVAL1+1>=PRO.ID    ; * JMK23
                     TAG.REC<17,NVAL1+1>=USER      ; * JMK23
                     TAG.REC<18,NVAL1+1>=TIME()    ; * JMK23
                     TAG.REC<19,NVAL1+1>=DATE()    ; * JMK23
                     TAG.REC<20,NVAL1+1>=ACTUAL.CHG          ; * JMK23
                     TAG.REC<21,NVAL1+1>=''        ; * JMK23
                     WRITE TAG.REC ON F.TAG.BLOCK,TAG.ID     ; * JMK23
                  END                    ; * JMK23
                  RELEASE F.TAG.BLOCK,TAG.ID       ; * JMK23
                  SUBJ='TL Block Triggered'        ; * JMK19
                  TEXT=''
                  TEXT<1,-1>='On ':DATE()'D2/':' at ':OCONV(TIME(),'MTH'):', ':USER.NAME   ; * JMK19
                  TEXT:=' attempted to enter a bill which appears to match Load ':TAG.LOAD.NO:'.'    ; * JMK19
                  *                 IF BLOCKIT=0 THEN      ; * JMK139 ; * JMK171
                  IF SHIP.PASS=1 THEN    ; * JMK139 ; * JMK171
                     TEXT<1,-1>=' '      ; * JMK139
                     TEXT<1,-1>=USER.NAME:' chose not to block this shipment.'   ; * JMK139
                  END                    ; * JMK139
                  TEXT<1,-1>=' '
                  TEXT<1,-1>='This load is defined as follows:'        ; * JMK19
                  TEXT<1,-1>='Origin         : ':ORIG.ZIP:' - ':ORIG.CITY:', ':ORIG.STATE  ; * JMK19
                  TEXT<1,-1>='Destination    : ':DEST.ZIP:' - ':DEST.CITY:', ':DEST.STATE  ; * JMK19
                  TEXT<1,-1>='Client         : ':CLIENT.ID:' - ':CLIENT.NAME     ; * JMK19
                  TEXT<1,-1>='Carrier        : ':CARRIER.ID:' - ':CARRIER.NAME   ; * JMK19
                  TEXT<1,-1>='Pro Number     : ':PRO         ; * JMK19
                  TEXT<1,-1>='Load Amount    : ':TAG.CHG'R26#8'        ; * JMK19
                  TEXT<1,-1>='Entered Amount : ':ACTUAL.CHG'R26#8'     ; * JMK19
                  TEXT<1,-1>='Ship Date      : ':BILL.DATE'D2/'        ; * JMK19
                  TEXT<1,-1>=' '         ; * JMK30
                  TEXT<1,-1>='For in-house use only.  FB.2.1.NW - Label 9500'    ; * JMK30
                  MVIN=''                ; * JMK19
                  MVIN<1>='TL_Block_Notify@AFSLogistics.Com'           ; * JMK73
                  MVIN<4>='AFS'          ; * JMK19
                  MVIN<5>=SUBJ           ; * JMK19
                  MVIN<6>=TEXT           ; * JMK19
                  CALL SENDMAIL(MVIN,MVOUT)        ; * JMK19
                  IF BLOCKIT=0 THEN      ; * JMK171
                     GO 9520             ; * JMK19 ; * JMK72
                  END                    ; * JMK171
               END                       ; * JMK72
            END                          ; * JMK19 ; * JMK72
         NEXT VAL                        ; * JMK19 ; * JMK72
      END ELSE                           ; * JMK19
         RELEASE F.TAG.BLOCK,TAG.ID      ; * JMK19
         TAG.ID=TL.DEST.CITY:'*':TL.DEST.STATE:'*':TL.ORIG.CITY:'*':TL.ORIG.STATE          ; * JMK19
         TAG.ID=CHANGE(TAG.ID,' ','_')   ; * JMK19
         READ TAG.REC FROM F.TAG.BLOCK,TAG.ID THEN           ; * JMK19
            LOCATE(PRO.ID,TAG.REC,16;PPOS) THEN    ; * JMK21
               IF TAG.REC<21,PPOS>='D' THEN GO 9520          ; * JMK21
            END                          ; * JMK21
            NVAL=DCOUNT(TAG.REC<1>,@VM)  ; * JMK19
            FOR VAL=1 TO NVAL            ; * JMK19
               BLOCKIT=1                 ; * JMK19
               TAG.CHG=TAG.REC<1,VAL>    ; * JMK19
               TAG.PU.DT=TAG.REC<2,VAL>  ; * JMK19
               TAG.LOAD.NO=TAG.REC<10,VAL>         ; * JMK19
               TAG.EXP.DT=TAG.PU.DT+TAG.LIFESPAN   ; * JMK19
               TAG.CHG.VAR=TAG.CHG*TAG.CHG.PCT     ; * JMK19
               TAG.CHG.LO=ICONV(TAG.CHG-TAG.CHG.VAR,'MR0')   ; * JMK19
               TAG.CHG.HI=ICONV(TAG.CHG+TAG.CHG.VAR,'MR0')   ; * JMK19
               IF ACTUAL.CHG < TAG.CHG.LO THEN BLOCKIT=0     ; * JMK19
               IF BLOCKIT THEN           ; * JMK19
                  IF (FRT.FLAG OR USER='DAVID' OR USER='SROSALIES') AND CLIENT.ID='00949' THEN       ; * SWB07

*****************************************************************
9510:
*****************************************************************
                     HELP='Is this a Direct Dispatch? (Y/N)'           ; * JMK40
                     CALL GEN.IN(0,22,'Direct Dispatch? N ','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)   ; * JMK40
                     QI=OCONV(QI,'MCU')  ; * JMK40
                     IF QI='' THEN QI='N'          ; * JMK40
                     BEGIN CASE          ; * JMK40
                        CASE QI='Y'      ; * JMK40
                           BLOCKIT=0     ; * JMK40
                           GOTO 9520     ; * JMK40
                        CASE QI='N'      ; * JMK40
                        CASE 1           ; * JMK40
                           GOTO 9510     ; * JMK40
                     END CASE            ; * JMK40
                  END                    ; * JMK40

*****************************************************************
9512:             * VERIFY LOAD MATCH                ; * JMK72
*****************************************************************
                  VERIFY.MATCH=1         ; * JMK139
                  SHIP.PASS=0            ; * JMK171
                  TAG.AMT=TAG.REC<1,VAL>           ; * JMK72
                  TAG.PU.DT=TAG.REC<2,VAL>         ; * JMK72
                  TAG.DEL.DT=TAG.REC<3,VAL>        ; * JMK72
                  TAG.CARRIER=TAG.REC<4,VAL>       ; * JMK72
                  READ TAG.CARRIER.REC FROM F.CARRIERS,TAG.CARRIER ELSE TAG.CARRIER.REC=''           ; * JMK72
                  TAG.CLIENT=TAG.REC<5,VAL>        ; * JMK72
                  READ TAG.CLIENT.REC FROM F.CLIENTS,TAG.CLIENT ELSE TAG.CLIENT.REC=''     ; * JMK72
                  TAG.ORIG.ZIP=TAG.REC<6,VAL>      ; * JMK72
                  ZIP.VAR = TAG.ORIG.ZIP           ; * JMK72
                  CALL FB.READ.ZIP(ZIP.VAR,CITY,STATE)       ; * JMK72
                  TAG.ORIG.CITY=CITY     ; * JMK72
                  TAG.ORIG.STATE=STATE   ; * JMK72
                  TAG.DEST.ZIP=TAG.REC<7,VAL>      ; * JMK72
                  ZIP.VAR = TAG.DEST.ZIP           ; * JMK72
                  CALL FB.READ.ZIP(ZIP.VAR,CITY,STATE)       ; * JMK72
                  TAG.DEST.CITY=CITY     ; * JMK72
                  TAG.DEST.STATE=STATE   ; * JMK72
                  TAG.WEIGHT=TAG.REC<8,VAL>        ; * JMK72
                  TAG.MILES=TAG.REC<9,VAL>         ; * JMK72
                  TAG.LOAD.NO=TAG.REC<10,VAL>      ; * JMK72
                  TAG.INV.NO=TAG.REC<11,VAL>       ; * JMK72
                  TAG.DEPT=TAG.REC<12,VAL>         ; * JMK72
                  CRT @(0,22):BELL:      ; * JMK72
                  CRT @(05,08):'+':STR('-',68):'+':          ; * JMK72
                  FOR LX=9 TO 20         ; * JMK72
                     CRT @(05,LX):'|':SPACE(68):'|':         ; * JMK72
                  NEXT LX                ; * JMK72
                  CRT @(05,21):'+':STR('-',68):'+':          ; * JMK72
                  CRT @(10,08):'Potential Transportation Bill':        ; * JMK72
                  IF NVAL>1 THEN         ; * JMK171
                     CRT @(49,08):VAL:' of ':NVAL  ; * JMK171
                  END                    ; * JMK171
                  CRT @(07,09):'Est. Charges  : ':TAG.AMT'L26#12':     ; * JMK72
                  CRT @(07,10):'Pick Up Date  : ':TAG.PU.DT'D2/':      ; * JMK72
                  CRT @(07,11):'Delivery Date : ':TAG.DEL.DT'D2/':     ; * JMK72
                  CRT @(07,12):'Carrier Name  : ':(TAG.CARRIER:' ':TAG.CARRIER.REC<1>)'L#45':        ; * JMK72
                  CRT @(07,13):'Client Name   : ':(TAG.CLIENT:' ':TAG.CLIENT.REC<2>)'L#45':          ; * JMK72
                  CRT @(07,14):'Origin Zip    : ':TAG.ORIG.ZIP:' ':TAG.ORIG.CITY:' ':TAG.ORIG.STATE  ; * JMK72
                  CRT @(07,15):'Dest. Zip     : ':TAG.DEST.ZIP:' ':TAG.DEST.CITY:' ':TAG.DEST.STATE  ; * JMK72
                  CRT @(07,16):'Est. Weight   : ':TAG.WEIGHT:          ; * JMK72
                  CRT @(07,17):'Est. Miles    : ':TAG.MILES:           ; * JMK72
                  CRT @(07,18):'Load Number   : ':TAG.LOAD.NO:         ; * JMK72
                  CRT @(07,19):'Inv. Number   : ':TAG.INV.NO:          ; * JMK72
                  CRT @(07,20):'Dept/User     : ':TAG.DEPT:  ; * JMK72

                  HELP='[Y]es-everything is identical [M]aybe-not sure [N]o-definitely not [Ex]it'   ; * JMK72 ; * JMK74
                  CALL GEN.IN(0,22,'Does this load match? ###','',Q,0,4,'','',2,-3,22,1,QI,HELP,0,23)          ; * JMK72 ; * JMK74
                  QI=OCONV(QI,'MCU')     ; * JMK72
                  IF QI='Y' THEN QI='YES'          ; * JMK74
                  IF QI='N' THEN QI='NO'           ; * JMK74
                  IF QI='M' THEN QI='MAYBE'        ; * JMK74
                  BEGIN CASE             ; * JMK72
                     CASE QI='EX'        ; * JMK72
                        GOTO PROGRAM.EXIT          ; * NKH10             ; * JMK72
                     CASE QI='YES'       ; * JMK72

                        BLOCKIT.YES=1    ; * JMK172
                        BLOCKIT.NO=0     ; * JMK172
                        BLOCKIT.MAYBE=0  ; * JMK172
                        GO 9520          ; * JMK172
                     CASE QI='NO'        ; * JMK72

                        SHIP.PASS=1      ; * JMK72 ; * JMK74 ; * JMK171
                        BLOCKIT.YES=0    ; * JMK172
                        BLOCKIT.NO=1     ; * JMK172
                        BLOCKIT.MAYBE=0  ; * JMK172
                     CASE QI='MAYBE'     ; * JMK74
                        BLOCKIT.YES=0    ; * JMK172
                        BLOCKIT.NO=0     ; * JMK172
                        BLOCKIT.MAYBE=1  ; * JMK172
                     CASE 1              ; * JMK72
                        GOTO 9512        ; * JMK72
                  END CASE               ; * JMK72
                  GOSUB 8100             ; * Display screen ; * JMK72
                  GOSUB 8200             ; * Display data   ; * JMK72
                  IF BLOCKIT OR VERIFY.MATCH THEN  ; * JMK72 ; * JMK139
                     LOCATE(PRO.ID,TAG.REC,16;TPOS) ELSE     ; * JMK23
                        NVAL1=DCOUNT(TAG.REC<16>,@VM)        ; * JMK23
                        TAG.REC<16,NVAL1+1>=PRO.ID           ; * JMK23
                        TAG.REC<17,NVAL1+1>=USER   ; * JMK23
                        TAG.REC<18,NVAL1+1>=TIME()           ; * JMK23
                        TAG.REC<19,NVAL1+1>=DATE()           ; * JMK23
                        TAG.REC<20,NVAL1+1>=ACTUAL.CHG       ; * JMK23
                        TAG.REC<21,NVAL1+1>=''     ; * JMK23
                        WRITE TAG.REC ON F.TAG.BLOCK,TAG.ID  ; * JMK23
                     END                 ; * JMK23
                     RELEASE F.TAG.BLOCK,TAG.ID    ; * JMK23
                     SUBJ='TL Block Triggered - Verify Direction'      ; * JMK19
                     TEXT=''
                     TEXT<1,-1>='On ':DATE()'D2/':' at ':OCONV(TIME(),'MTH'):', ':USER.NAME          ; * JMK19
                     TEXT:=' attempted to enter a bill which appears to match Load ':TAG.LOAD.NO     ; * JMK19
                     TEXT:=' when Origin and Destination are reversed.'          ; * JMK19
                     IF SHIP.PASS=1 THEN           ; * JMK139 ; * JMK171
                        TEXT<1,-1>=' '   ; * JMK139
                        TEXT<1,-1>=USER.NAME:' chose not to block this shipment.'          ; * JMK139
                     END                 ; * JMK139
                     TEXT<1,-1>=' '
                     TEXT<1,-1>='This load is defined as follows:'     ; * JMK19
                     TEXT<1,-1>='Origin         : ':DEST.ZIP:' - ':DEST.CITY:', ':DEST.STATE         ; * JMK19
                     TEXT<1,-1>='Destination    : ':ORIG.ZIP:' - ':ORIG.CITY:', ':ORIG.STATE         ; * JMK19
                     TEXT<1,-1>='Client         : ':CLIENT.ID:' - ':CLIENT.NAME  ; * JMK19
                     TEXT<1,-1>='Carrier        : ':CARRIER.ID:' - ':CARRIER.NAME          ; * JMK19
                     TEXT<1,-1>='Pro Number     : ':PRO      ; * JMK19
                     TEXT<1,-1>='Load Amount    : ':TAG.CHG'R26#8'     ; * JMK19
                     TEXT<1,-1>='Entered Amount : ':ACTUAL.CHG'R26#8'  ; * JMK19
                     TEXT<1,-1>='Ship Date      : ':BILL.DATE'D2/'     ; * JMK19
                     TEXT<1,-1>=' '      ; * JMK30
                     TEXT<1,-1>='For in-house use only.  FB.2.1.NW - Label 9500'           ; * JMK30
                     MVIN=''             ; * JMK19
                     MVIN<1>='TL_Block_Notify@AFSLogistics.Com'        ; * JMK73
                     MVIN<4>='AFS'       ; * JMK19
                     MVIN<5>=SUBJ        ; * JMK19
                     MVIN<6>=TEXT        ; * JMK19
                     CALL SENDMAIL(MVIN,MVOUT)     ; * JMK19
                     IF BLOCKIT=0 THEN   ; * JMK171
                        GO 9520          ; * JMK19
                     END                 ; * JMK171
                  END                    ; * JMK72
               END                       ; * JMK19
            NEXT VAL                     ; * JMK19
         END                             ; * JMK19
      END                                ; * JMK19

*****************************************************************
9520: * END OF TRAFFIC LANE CHECKING   ; * JMK21
*****************************************************************
      RELEASE F.TAG.BLOCK,TAG.ID         ; * JMK19
      RETURN

*****************************************************************
UPD.FB.BILLS.ACCESS:
*****************************************************************
      IF ACCESS.REASON = 'CNG' AND OLD.PRO.REC = '' AND NOT(CHANGE.FLAG) THEN ACCESS.REASON = 'KEY.VER'        ; * NKH36
      IF ACCESS.REASON = "" THEN
         BEGIN CASE
            CASE OLD.PRO.REC = "" AND NOT(CHANGE.FLAG)
               ACCESS.REASON = "KEY.VER"
            CASE OLD.PRO.REC NE PRO.REC AND CHANGE.FLAG
               ACCESS.REASON = "CNG"
            CASE OLD.PRO.REC NE PRO.REC AND NOT(CHANGE.FLAG)
               ACCESS.REASON = "???"
            CASE 1
               ACCESS.REASON = ""
         END CASE
         CHANGES.FOUND = 0
         CCVIN = '' ; CCVOUT = ''
         CCVIN<1> = ACCESS.REASON
         CCVIN<2> = CHANGES.FOUND
         CALL CMP.PRO.RECS(CCVIN,CCVOUT,OLD.PRO.REC,PRO.REC)
         CHANGES.FOUND = VOUT<1>
         IF NOT(CHANGES.FOUND) AND ACCESS.REASON = "CNG" THEN ACCESS.REASON = "INQ"
      END
      **** Code below moved from earlier in program because additional
      ****  reasons added for touching/accessing bill.
      VIN=''                             ; * JMK140
      VOUT=''                            ; * JMK140
      VIN<1>=CLIENT.ID                   ; * JMK140
      VIN<2>=PRO.ID                      ; * JMK140
      VIN<3>=USER                        ; * JMK140
      VIN<4>=USER.DPT                    ; * JMK140
      VIN<5>=DATE()                      ; * JMK140
      VIN<6>=TIME()                      ; * JMK140
      VIN<7>='1'                         ; * JMK140
      VIN<8>=PROG.NAME                   ; * JMK140
      VIN<9>=PROG.DESC                   ; * JMK140
      VIN<10>=PACK.NAME                  ; * JMK140
      VIN<11>=CO.NAME                    ; * JMK140
      *      IF USER.TYPE='' THEN W.REASON = ACCESS.REASON ELSE W.REASON = ACCESS.REASON:"_":USER.TYPE   ; * NKH36
      W.REASON = ACCESS.REASON           ; * NKH36
      VIN<12> = W.REASON
      IF CLIENT.ID[1,2]= '99' THEN       ; * NPR042
         OPEN '','FB.BILLS.ACCESS,':CLIENT.ID TO F.ACCESS ELSE RETURN  ; * NPR042 Do not update 'touches'
      END                                ; * NPR042
      * Begin NKH06
      *      IF UPDATE.FB.TIMELINE AND ACCESS.REASON = "KEY" THEN   ; * SWB08
      *         ACCESS.REASON.SAVE = ACCESS.REASON        ; * SWB08
      *         W.REASON.SAVE = W.REASON        ; * SWB08
      *         ACCESS.REASON = 'MR'            ; * SWB08
      *         IF USER.TYPE='' THEN W.REASON = ACCESS.REASON ELSE W.REASON = ACCESS.REASON:"_":USER.TYPE   ; * SWB08
      *         VIN<5> = MR.DATE                ; * SWB08
      *         VIN<6> = 28800                  ; * SWB08
      *         VIN<12> = W.REASON              ; * SWB08
      *         CALL UPD.FB.BILLS.ACCESS(VIN,VOUT,CLIENT.ITM,CARRIER.REC,OLD.PRO.REC,F.ACCESS,F.TABLES)     ; * SWB08
      *
      *         ACCESS.REASON = ACCESS.REASON.SAVE        ; * SWB08
      *         W.REASON = W.REASON.SAVE        ; * SWB08
      *         VIN<5>=INT.TODAY                ; * SWB08
      *         VIN<6>=TIME()                   ; * SWB08
      *         VIN<12> = W.REASON              ; * SWB08
      *      END                                ; * SWB08
      * End NKH06
      CALL UPD.FB.BILLS.ACCESS(VIN,VOUT,CLIENT.ITM,CARRIER.REC,OLD.PRO.REC,F.ACCESS,F.TABLES)
      RETURN

*****************************************************************
UPD.UPS.SCHED:*** NPR033 Added subroutine
*****************************************************************
      UPS.VIN = '' ; UPS.VOUT = ''
      UPS.VIN<1> = CLIENT.ID:"*":PRO.ID
      UPS.VIN<2> = ACTIVITY.CODE
      UPS.VIN<3> = ACT.TRANS.DATE
      UPS.VIN<4> = ""                    ; * No longer used
      ***      UPS.VIN<5> = USER.NAME
      UPS.VIN<5> = USER
      UPS.VIN<6> = DATE()
      UPS.VIN<7> = TIME()

      CALL FB.UPD.UPS.SCHED(UPS.VIN,UPS.VOUT,F.UPS.SCHED,F.UPS.SCHED.HIST)

      RETURN

******************************************************************
TL.BLOCK.EMAIL:*** NPR03 - Routine originally added by NPR Jan 2008.
******************************************************************
      TEXT =''
      TEXT<1,-1>='On ':DATE()'D2/':' at ':OCONV(TIME(),'MTH'):', ':USER.NAME
      TEXT<1,-1>='  attempted to enter a bill with PO/BOL Number : ':W.BOL
      TEXT<1,-1>='  This might conflict with the TL system and was not allowed'
      TEXT<1,-1>=' '
      TEXT<1,-1>='Client         : ':CLIENT.ID:' - ':CLIENT.NAME
      TEXT<1,-1>='Carrier        : ':CARRIER.ID:' - ':CARRIER.NAME
      TEXT<1,-1>='Pro Number     : ':PRO
      TEXT<1,-1>=' '
      TEXT<1,-1>='For in-house use only.  FB.2.1.NW - TL.BLOCK.EMAIL Internal call'
      SUBJ=USER.NAME:' Attempted to enter a bill with PO/BOL Number : ':W.BOL
      MVIN=''
      MVIN<1>='TL_Block_Notify@AFSLogistics.Com'
      MVIN<4>='AFS'
      MVIN<5>=SUBJ
      MVIN<6>=TEXT
      CALL SENDMAIL(MVIN,MVOUT)

      RETURN

******************************************************************
SEND.ZERO.EMAIL:*** NPR09 - Routine originally added by NPR Oct 2008.
******************************************************************
      TEXT =''
      TEXT<1,-1>='On ':DATE()'D2/':' at ':OCONV(TIME(),'MTH'):', ':USER.NAME: '  Zeroed bill ':PRO
      TEXT<1,-1>=' '
      TEXT<1,-1>='Client         : ':CLIENT.ID:' - ':CLIENT.NAME
      TEXT<1,-1>='Carrier        : ':CARRIER.ID:' - ':CARRIER.NAME
      TEXT<1,-1>=' '
      TEXT<1,-1>='For in-house use only.  FB.2.1.NW - See SEND.ZERO.EMAIL Internal subroutine call'
      SUBJ=USER.NAME:' Zeroed bill ':PRO
      MVIN=''
      MVIN<1,-1>='MMcKay@afs.net'
      MVIN<1,-1>='smatthews@afs.net'
      MVIN<1,-1>='gallison@afs.net'
      MVIN<4>='AFS'
      MVIN<5>=SUBJ
      MVIN<6>=TEXT
      CALL SENDMAIL(MVIN,MVOUT)

      RETURN

******************************************************************
SEND.THRESHOLD.EMAIL:*** NPR16 - Send email to Acct Manager if assigned Threshold for client has been reached (Forcing Audit regardless of any other factors)
******************************************************************
      READV T.MODE FROM F.TRANSPORT,CARRIER.MODE,1 ELSE T.MODE = ''
      TEXT =''
      TEXT<1,-1>='Entry Date Time  : ':DATE()'D2/':' at ':OCONV(TIME(),'MTH')
      TEXT<1,-1>=' '
      TEXT<1,-1>='Client           : ':CLIENT.ID:' - ':CLIENT.NAME
      TEXT<1,-1>='Carrier          : ':CARRIER.ID:' - ':CARRIER.NAME
      TEXT<1,-1>='Pro #            : ':PRO
      TEXT<1,-1>='Entered by       : ':USER.NAME
      TEXT<1,-1>=' '
      TEXT<1,-1>= TCH.NOTE1
      TEXT<1,-1>=' '
      TEXT<1,-1>= TCH.NOTE2
      TEXT<1,-1>=' '
      TEXT<1,-1>= "Changed Stack # from ":BILL.STATUS:" to ":NEW.BILL.STATUS:" - Forced bill to go to Auditor ":CL.AUDITOR
      TEXT<1,-1>=' '
      TEXT<1,-1>=' '
      TEXT<1,-1>='For in-house use only : Message generated in  FB.2.1.NW - See SEND.THRESHOLD.EMAIL Internal subroutine call'
      SUBJ=USER.NAME:' ACCT.MGR.EMAIL = ':ACCT.MGR.EMAIL:"  ":PRO
      SUBJ = "Bill  ":PRO:" for client ":CLIENT.ID:" - ":CLIENT.NAME:" The Amount of ":OCONV(ACTUAL.CHG,"MR2$"):" exceeds set threshold of ":OCONV(THRESHOLD.AMT,"MR2$")
      MVIN=''
      MVIN<1>= 'mbutts@afs.net'
      MVIN<1,-1>='MMcKay@afs.net'
      MVIN<1,-1>=ACCT.MGR.EMAIL
      MVIN<4>='AFS'
      MVIN<5>=SUBJ
      MVIN<6>=TEXT
      CALL SENDMAIL(MVIN,MVOUT)

      RETURN

      * Begin NKH54
*****************************************************************
*TEMPO.EMAIL:
*****************************************************************
      *      TEXT =''
      *      TEXT<1,-1>= 'Data passed to Tempo:'
      *      TEXT<1,-1>= 'Client : ':CLIENT.ID
      *      TEXT<1,-1>= 'Date:  : ':OCONV(BILL.DATE,'D4/')
      *      TEXT<1,-1>= 'Orig   : ':ORIG.ZIP
      *      TEXT<1,-1>= 'Dest   : ':DEST.ZIP
      **      TEXT<1,-1>= 'Class  : ':TL.CLASS
      *      TEXT<1,-1>= 'IOT    : ':IN.OUT
      **      TEXT<1,-1>= 'Pallets: ':TL.PALLETS
      *      TEXT<1,-1>= 'Weight : ':WEIGHT
      **      TEXT<1,-1>= 'Mode   : ':MODE
      *      TEXT<1,-1>= ' '
      *      TEXT<1,-1>= 'Additional information:'
      *      TEXT<1,-1>= 'Carrier: ':CARRIER.ID
      *      TEXT<1,-1>= 'Pro    : ':PRO
      *      TEXT<1,-1>= ' '
      *      TEXT<1,-1>='No rates returned from Tempo Rating to determine LCC'
      *      SUBJ='Truckload rating not retuned from Tempo for LCC'
      *      MVIN=''
      *      MVIN<1,-1>='nmeddaugh@afs.net'
      **      MVIN<1,-1>='gbino@afs.net'
      **      MVIN<1,-1>='dfriend@afs.net'
      *      MVIN<4>='AFS'
      *      MVIN<5>=SUBJ
      *      MVIN<6>=TEXT
      *      CALL SENDMAIL(MVIN,MVOUT)
      *
      *      RETURN

*****************************************************************
*LCC.CARRIER.EMAIL:
*****************************************************************
      *      TEXT =''
      *      TEXT<1,-1>= 'Client : ':CLIENT.ID
      *      TEXT<1,-1>= 'Carrier: ':CARRIER.ID
      *      TEXT<1,-1>= 'Pro    : ':PRO
      *      TEXT<1,-1>= ' '
      *      TEXT<1,-1>='LCC Truckload SCAC: ':LCC.SCAC:' returned from Tempo - Not in file CARRIERS during Data Entry'
      *      SUBJ='Truckload SCAC not found in CARRIERS file'
      *      MVIN=''
      *      MVIN<1,-1>='nmeddaugh@afs.net'
      *      MVIN<1,-1>='mary@afs.net'
      *      MVIN<1,-1>='wpardue@afs.net'
      *      MVIN<1,-1>='arsexton@afs.net'
      *      MVIN<4>='AFS'
      *      MVIN<5>=SUBJ
      *      MVIN<6>=TEXT
      *      CALL SENDMAIL(MVIN,MVOUT)
      *
      *      RETURN

      * End NKH54
      * Begin NKH04
*****************************************************************
UPDATE.IMAGE:
*****************************************************************
      USER.PREFIX = ''
      IF POST.DUP THEN USER.PREFIX = "DUP-"
      *      HELP = '[Y]es [N]o'
      *      CALL GEN.IN(0,22,'Update with new image?  ','',Q,0,2,'','',2,-2,22,1,Q1,HELP,0,23)
      *Q1='Y'
      *      IF Q1 = 'Y' THEN
      * Update Image Log
      IF OLD.PRO.REC<280> # N.IMAGE THEN
         SYS.TME = TIME()
         PROC.DTE =DATE()
         VIN="" ; VOUT=""
         VIN<1> = PROC.DTE
         VIN<2> = SYS.TME
         VIN<6> = USER.PREFIX:USER
         VIN<10> = CH.NUM
         VIN<8> = "FB.2.1.NW"
         VIN<11> = "OCR.IMG.NO*":CLIENT.ID:'*':PRO.ID
         VIN<3> = ""
         VIN<4> = OLD.PRO.REC<280>
         VIN<5> = N.IMAGE
         CALL UPD.AUD.LOG(VIN,VOUT)

         VIN='' ; VOUT = ''
         VIN<1>=N.IMAGE
         IF N.IMAGE > "" THEN            ; * NKH39
            CALL SEND.IMG.DUPLICATE.REST(VIN,VOUT)
         END                             ; * NKH39

         IF NOT(UPDATED.IMG) THEN
            IVIN=''
            IVIN<1> = N.IMAGE
            IVIN<2> = USER.PREFIX:USER
            IVIN<3> = CLIENT.ID
            IVIN<4> = 'U'
            IVIN<5> = PRO.ID
            IVOUT = ''                   ; * NKH14
            IF IVIN<1> > "" THEN         ; * NKH26
               CALL SEND.IMG.UPD.REST(IVIN,IVOUT)
               IMG.UPD := 'UPD 10'       ; * NKH14
               GOSUB UPDATE.IMAGE.LOG    ; * NKH14
            END                          ; * NKH26
         END
         IMAGE.NUMBER := 'CALL IMAGE 5'  ; * NKH LOGGING
      END
      * Update Image Number
      OLD.PRO.REC<280> = N.IMAGE
      IMAGE = N.IMAGE
      IMAGE.CHANGE = 1
      *      END

      RETURN

*****************************************************************
OCR.INIT:
*****************************************************************
      IMAGE = ''
      LOCK.SEQ = 0                       ; * NKH33
      IMAGE.IS.LOCKED = 0                ; * NKH33
      LOCK.IMAGE = 0
      T.ARRAY = ''
      OCR.ENTRY = 0
      SAVE.OCR.ENTRY = 0
      OCR.STACK = ''
      CHANGE.PRO = 0
      SKIPPING = 0
      COMING.FROM.CARRIER = 0
      OCR.ITEM = 0
      ARRAY.COUNT = 0
      VERIFY.FLAG = 0
      OCR.CLIENT = 0
      IMAGE.CHANGED = 0
      POST.DUP = 0
      PRO.MATCH = 1
      OCR.INC = ''                       ; * NKH24

      RETURN
      * End NKH04

      * Begin NKH14
*****************************************************************
UPDATE.IMAGE.LOG:
*****************************************************************
      IMG.LOG.REC = ''
      UPDATED.IMG = 1
      IF IVOUT = 'SUCESS' THEN IVOUT = 'SUCCESS'
      IF IVOUT # 'SUCCESS' THEN
         SLEEP 2
         IVOUT = ''
         IF IVIN<1> > "" THEN            ; * NKH26
            CALL SEND.IMG.UPD.REST(IVIN,IVOUT)
            IMG.UPD := 'UPD 11'          ; * NKH14
            IF IVOUT = 'SUCESS' THEN IVOUT = 'SUCCESS'
         END                             ; * NKH26
      END
      IF IVOUT # 'SUCCESS' THEN
         SLEEP 2
         IVOUT = ''
         IF IVIN<1> > "" THEN            ; * NKH26
            CALL SEND.IMG.UPD.REST(IVIN,IVOUT)
            IMG.UPD := 'UPD 12'          ; * NKH14
            IF IVOUT = 'SUCESS' THEN IVOUT = 'SUCCESS'
         END                             ; * NKH26
      END
      CONTROL.KEY = 'FB.2.1.NW'
      READ PROG.CONTROL.REC FROM CONTROL.FILE, CONTROL.KEY THEN
         IMG.UPD.FLAG = PROG.CONTROL.REC<1>
         SEQ.IMG.CNT = PROG.CONTROL.REC<2>
         IF IMG.UPD.FLAG = "Y" THEN
            SEQ.IMG.CNT += 1
            WRITEV SEQ.IMG.CNT ON CONTROL.FILE, CONTROL.KEY, 2
            IMG.LOG.REC<1> = IVIN<1>
            IMG.LOG.REC<2> = DATE()
            IMG.LOG.REC<3> = TIME()
            IMG.LOG.REC<4> = IVOUT
            IMG.LOG.REC<5> = IMG.UPD
            WRITE IMG.LOG.REC ON IMAGE.UPD.LOG, SEQ.IMG.CNT
         END
      END

      IMG.UPD = ''

      RETURN

      * End NKH14
      * Begin NKH06
*****************************************************************
*GET.MAIL.ROOM.DATE:                      ; * SWB08
*****************************************************************
      *      MASK = '##'                        ; * SWB08
      *      IF MR.DOW = '' THEN                ; * SWB08
      *         *MR.DOW will only be null upon entry to the program.
      *         CRT @(0,0):@(-1):'Mail Room: '  ; * SWB08
      *      END ELSE                           ; * SWB08
      *         MASK = MR.DOW                   ; * SWB08
      *         CRT @(0,0):'Mail Room: ':STR('-', 12)     ; * SWB08
      *      END                                ; * SWB08
      *      HELP = 'Enter Day of Week these Freight Bills were recvd in Mail Room. [1]=Mon [5]=Fri'        ; * SWB08
      *      CALL GEN.IN(0,0,'Mail Room: ':MASK,'',Q,0,2,'','',2,-2,0,0,QI,HELP,0,23)   ; * SWB08
      *      IF QI='' THEN QI = MASK            ; * SWB08
      *      QI = OCONV(QI,'MCU')               ; * SWB08
      *      IF QI = 'T' THEN                   ; * SWB08
      *         QI = TODAY.DOW                  ; * SWB08
      *      END                                ; * SWB08
      *      BEGIN CASE                         ; * SWB08
      *         CASE QI = 'X' AND MR.DOW # ''   ; * SWB08
      *            *Nothing to do. Leave MR.DOW as it is.
      *         CASE QI = 'X'                   ; * SWB08
      *            STOP                         ; * SWB08
      *         CASE QI = 'EX'                  ; * SWB08
      *            STOP                         ; * SWB08
      *         CASE TRIM(Q) = ''               ; * SWB08   ; * SWB08
      *            CALL ELINE('Please enter the Day of Week these Freight Bills were received in the Mail Room.')     ; * SWB08
      *            GOTO GET.MAIL.ROOM.DATE      ; * SWB08
      *         CASE NOT( NUM(Q) )              ; * SWB08
      *            CALL ELINE('Day Of the Week must be 1 thru 5')   ; * SWB08
      *            GOTO GET.MAIL.ROOM.DATE      ; * SWB08
      *         CASE REM(Q, 1) # 0              ; * SWB08
      *            CALL ELINE('Day Of Week must be a whole number of 1 thru 5, inclusive')        ; * SWB08
      *            GOTO GET.MAIL.ROOM.DATE      ; * SWB08
      *         CASE QI < 0 OR QI > 5           ; * SWB08
      *            CALL ELINE('Day Of Week must be 1 thru 5')       ; * SWB08
      *            GOTO GET.MAIL.ROOM.DATE      ; * SWB08
      *         CASE 1                          ; * SWB08
      *            *This is the normal response
      *            IF QI > TODAY.DOW THEN       ; * SWB08
      *               *If the user entered a DOW > todays, verify they mean to have a Mail
      *               *Room Date from 'Last Week'.

*****************************************************************
*VERIFY.DOW:    ***   ; * SWB08
*****************************************************************
      *               CRT @(0,21):"[YES] Bills being entered were received last week!"  ; * SWB08
      *               HELP="X=Change. EX=Exit. [YES]=Continue."     ; * SWB08
      *               CALL GEN.IN(0,22,'Enter selection please. ---','',Y.Q,0,3,'','',0,-3,22,1,Y.QI,HELP,0,23)       ; * SWB08
      *               Y.QI=OCONV(Y.QI,'MCU')    ; * SWB08
      *               BEGIN CASE                ; * SWB08
      *                  CASE Y.QI='X'          ; * SWB08
      *                     GOTO GET.MAIL.ROOM.DATE       ; * SWB08
      *                  CASE Y.QI='EX'         ; * SWB08
      *                     STOP                ; * SWB08
      *                  CASE Y.QI='YES'        ; * SWB08
      *                     NULL                ; * SWB08
      *                  CASE 1                 ; * SWB08
      *                     CALL ELINE('Invalid entry. Must be [X], [EX], or [YES].')   ; * SWB08
      *                     GOTO VERIFY.DOW     ; * SWB08
      *               END CASE                  ; * SWB08
      *            END                          ; * SWB08
      *            IF QI = TODAY.DOW THEN       ; * SWB08
      *               MR.DOW = QI               ; * SWB08
      *               MR.DATE = INT.TODAY       ; * SWB08
      *               ELAPSED.CAL.DAYS = 0      ; * SWB08
      *               ELAPSED.BIZ.DAYS.TEST = ELAPSED.CAL.DAYS      ; * SWB08
      *            END ELSE                     ; * SWB08
      *               MR.DOW = QI               ; * SWB08
      *               IF MR.DOW <= TODAY.DOW THEN         ; * SWB08
      *                  ELAPSED.CAL.DAYS = TODAY.DOW - MR.DOW      ; * SWB08
      *                  MR.DATE = INT.TODAY - ELAPSED.CAL.DAYS     ; * SWB08
      *                  ELAPSED.BIZ.DAYS.TEST = ELAPSED.CAL.DAYS   ; * SWB08
      *               END ELSE                  ; * SWB08
      *                  ELAPSED.CAL.DAYS = (7 - (MR.DOW - TODAY.DOW))        ; * SWB08
      *                  MR.DATE = INT.TODAY - ELAPSED.CAL.DAYS     ; * SWB08
      *                  ELAPSED.BIZ.DAYS.TEST = ELAPSED.CAL.DAYS - 2         ; * SWB08
      *               END                       ; * SWB08
      *            END                          ; * SWB08
      *            *Determine if the Day Of Week entered was a business day
      *            VIN = MR.DATE                ; * SWB08
      *            VIN<2> = 0                   ; * SWB08
      *            CALL CALC.DATE(VIN, VOUT, F.TC.HOLIDAYS)         ; * SWB08
      *            IF VOUT<1> # MR.DATE THEN    ; * SWB08
      *               CALL ELINE(OCONV(MR.DATE, 'D2'):' was not a business day. Please enter the DOW these bills were received in the Mail Room.')  ; * SWB08
      *               GOTO GET.MAIL.ROOM.DATE   ; * SWB08
      *            END                          ; * SWB08

      *Determine the number of Elapsed Business Days between the Mail Room
      *Received Date and Today.
      *            ELAPSED.BIZ.DAYS.DETERMINED = FALSE    ; * SWB08
      *            ELAPSED.BIZ.DAYS = 0         ; * SWB08
      *            BDT = ELAPSED.BIZ.DAYS.TEST + 1        ; * SWB08
      *            LOOP                         ; * SWB08
      *               BDT -= 1                  ; * SWB08
      *            UNTIL BDT = 0 OR ELAPSED.BIZ.DAYS.DETERMINED DO  ; * SWB08
      *               VIN = MR.DATE             ; * SWB08
      *               VIN<2> = BDT              ; * SWB08
      *               CALL CALC.DATE(VIN, VOUT, F.TC.HOLIDAYS)      ; * SWB08
      *               DATE.RETURNED = VOUT<1>   ; * SWB08
      *               BEGIN CASE                ; * SWB08
      *                  CASE DATE.RETURNED > INT.TODAY   ; * SWB08
      *                     *Nothing to do except keep looking.
      *                  CASE DATE.RETURNED = INT.TODAY   ; * SWB08
      *                     ELAPSED.BIZ.DAYS.DETERMINED = TRUE      ; * SWB08
      *                     ELAPSED.BIZ.DAYS = BDT        ; * SWB08
      *                  CASE 1                 ; * SWB08
      *                     CALL ELINE('Can not determine Received to Entered Elapsed Business Days. Notify I.T. immediately.')           ; * SWB08
      *                     GOTO GET.MAIL.ROOM.DATE       ; * SWB08

      *               END CASE                  ; * SWB08
      *            REPEAT                       ; * SWB08
      *      END CASE                           ; * SWB08
      *MR.DISP.STR will be dashes (------) IF...
      *1) The user is not setup to get the new Mail Room Received Date prompt
      *   AND they are entering NEW Freight Bills
      *2) The user is setup to get the new Mail Room Received Date prompt and
      *   they bring up an existing FB that does NOT have the Mail Room
      *   Received Date and other related info.

      * Otherwise, the DOW will be displayed in the top left corner of the
      * screen for NEW FB's and the actual Date will be displayed for
      * existing FB's that have the related info.
      *      SESSION.MR.DISP.STR = 'Mail Room: ':DOW.NAMES<MR.DOW>  ; * SWB08
      *      SESSION.MR.DISP.LEN = LEN(SESSION.MR.DISP.STR)         ; * SWB08
      *      SESSION.MR.DISP.STR := STR("-", 23 - SESSION.MR.DISP.LEN)        ; * SWB08
      * By setting SESSION.MR.DISP.STR and displaying the updated info in the
      * top left corner, we avoid having to redisplay the entire screen here
      * but have done the necessary 'setup' for the DISP.SCREEN.HEADING
      * routine to work the next time it is called.
      *      CRT @(0,0):SESSION.MR.DISP.STR     ; * SWB08

      *      RETURN                             ; * SWB08

      * NKH06 - Timeline tracking has not been used since 08/19/2016
*****************************************************************
*UPDATE.TIMELINE.SUMMARY:                 ; * SWB08
*****************************************************************
      *      IF VERSION = 0 THEN                ; * SWB08
      *         TR.VIN = USER                   ; * SWB08
      *         TR.VIN<2> = CLIENT.ID           ; * SWB08
      *         TR.VIN<3> = CARRIER.ID          ; * SWB08
      *         BEGIN CASE                      ; * SWB08
      *            CASE TIMELINE.TRANS.TYPE = 'FN'        ; * SWB08
      *               TR.VIN<4> = MR.DATE       ; * SWB08
      *               TR.VIN<5> = INT.TODAY     ; * SWB08
      *               TR.VIN<6> = ELAPSED.BIZ.DAYS        ; * SWB08
      *               TR.VIN<7> = ''            ; * SWB08
      *               TR.VIN<8> = ''            ; * SWB08
      *            CASE TIMELINE.TRANS.TYPE = 'DEL'       ; * SWB08
      *               TR.VIN<4> = BILL.MR.DATE  ; * SWB08
      *               TR.VIN<5> = OLD.PRO.REC<247>        ; * SWB08
      *               TR.VIN<6> = OLD.PRO.REC<248>        ; * SWB08
      *               TR.VIN<7> = ''            ; * SWB08
      *               TR.VIN<8> = ''            ; * SWB08
      *            CASE TIMELINE.TRANS.TYPE = 'UNP'       ; * SWB08
      *               *The only way to get here should be is if the Bill as Rejected as
      *               *'Never Pay', verified, processed, then Rejected as Eventual Pay
      *               *which, for the purposes of the Tracking, is the same as 'Unprocessing'.
      *               TR.VIN<1> = OLD.PRO.REC<53>         ; * SWB08
      *               TR.VIN<4> = BILL.MR.DATE  ; * SWB08
      *               TR.VIN<5> = ORIG.ENTERED.DATE       ; * SWB08
      *               TR.VIN<6> = OLD.PRO.REC<248>        ; * SWB08
      *               TR.VIN<7> = PROCESSED.DATE.SAVE     ; * SWB08
      *               TR.VIN<8> = OLD.PRO.REC<249>        ; * SWB08
      *            CASE 1                       ; * SWB08
      *               *Nothing to do here because even though it is an error, the error
      *               *will be reported via email later.
      *         END CASE                        ; * SWB08
      *
      *         TR.VIN<9> = PRO.ID              ; * SWB08
      *         TR.VIN<10> = TIMELINE.TRANS.TYPE          ; * SWB08
      *         CALL FB.UPD.TIMELINE.SUMMARY(TR.VIN, TR.VOUT, F.TIMELINE.SUMMARY)       ; * SWB08
      *         IF TR.VOUT # '' THEN            ; * SWB08
      *            TR.EMAIL.VIN=''              ; * SWB08
      *            TR.EMAIL.VIN<3>=''           ; * SWB08
      *            TR.EMAIL.VIN<4>='FB.2.1.NW@afs.net'    ; * SWB08
      *            TR.EMAIL.VIN<5>='Freight Bill Timeline Tracking errors'    ; * SWB08
      *            BEGIN CASE                   ; * SWB08
      *               CASE TR.VOUT[1, 11] = 'TRANS.TYPE='           ; * SWB08
      *                  *Invalid Trans Type was passed
      *                  TR.EMAIL.VIN<6>='An invalid TRANS.TYPE of ':FIELD(TR.VOUT, '=', 2):' was passed from FB.2.1.NW to FB.UPD.TIMELINE.TRACKING '         ; * SWB08
      *                  TR.EMAIL.VIN<6> := 'with the following parmaters:'   ; * SWB08
      *                  FOR TTEO = 1 TO 10     ; * SWB08
      *                     TR.EMAIL.VIN<6,-1>='TR.VIN<':TTEO:'> = ':TR.VIN<TTEO>       ; * SWB08
      *                  NEXT TTEO              ; * SWB08
      *               CASE 1                    ; * SWB08
      *                  *This transaction caused the FB Counter in one or more of the Summmary
      *                  *records to 'go negative'. This transaction is not necessarily the one
      *                  *that CAUSED the miscount.'
      *                  TR.EMAIL.VIN<6>='A TIMELINE.SUMMARY transaction with a TRANS.TYPE of ':TIMELINE.TRANS.TYPE   ; * SWB08
      *                  TR.EMAIL.VIN<6,-1>=' was passed from FB.2.1.NW to FB.UPD.TIMELINE.TRACKING '       ; * SWB08
      *                  TR.EMAIL.VIN<6,-1>='resulted in one or more Summary records having a Count of less than zero '         ; * SWB08
      *                  TR.EMAIL.VIN<6,-1>='with the following parmaters:'   ; * SWB08
      *                  FOR TTEO = 1 TO 10     ; * SWB08
      *                     TR.EMAIL.VIN<6,-1>='TR.VIN<':TTEO:'> = ':TR.VIN<TTEO>       ; * SWB08
      *                  NEXT TTEO              ; * SWB08
      *                  TR.EMAIL.VIN<6,-1>=' '           ; * SWB08
      *                  TR.EMAIL.VIN<6,-1>='FB.TIMELINE.SUMMARY ID ' 'L#45  ':'Field 1  ':'Trans  ':'FB #'           ; * SWB08
      *                  TR.EMAIL.VIN<6,-1>=' '           ; * SWB08
      *                  TR.ERR.CNT = DCOUNT(TR.VOUT<1>, @VM)       ; * SWB08
      *                  FOR TTEC = 1 TO TR.ERR.CNT       ; * SWB08
      *                     TR.EMAIL.VIN<6,-1> = TR.VOUT<1, TTEC>'L#45  ':TR.VOUT<2, TTEC>'L#7  ':TR.VOUT<3, TTEC>'L#5  ':TR.VOUT<4, TTEC>          ; * SWB08
      *                  NEXT TTEC              ; * SWB08
      *            END CASE                     ; * SWB08
      *            CALL SENDMAIL(TR.EMAIL.VIN,TR.EMAIL.VOUT)        ; * SWB08
      *         END                             ; * SWB08
      *      END                                ; * SWB08
      *
      *      RETURN                             ; * SWB08
      * End NKH06
      * Begin TAG02
*****************************************************************
CHECK.DEL.BILLS:
*****************************************************************
      USE.DEL.BILL=0
      DEL.SEL.STMT = 'SELECT DELETED.BILLS WITH CARRIER.NUM.IDX = ':DQUOTE(DEL.CARRIER.NBR)
      DEL.SEL.STMT := ' AND WITH PRO.NUM.IDX = ':DQUOTE(DEL.PRO.NBR)
      DEL.SEL.STMT := ' AND WITH CLIENT.NUM.IDX = ':DQUOTE(DEL.CLIENT.ID)
      DEL.SEL.STMT := ' BY-DSND DATE BY-DSND TIME'
      EXECUTE DEL.SEL.STMT CAPTURING OUTPUT RETURNING ERRNUM
      READLIST DEL.BILLS ELSE DEL.BILLS=""
      IF NOT(DEL.BILLS) THEN CHK.DEL.BILL=1 ; RETURN
      NUM.DEL.BILLS = DCOUNT(DEL.BILLS,@AM)
      READ DEL.BILLS.REC FROM F.DEL.BILLS,DEL.BILLS<1> THEN
         DISP.DEL.BILL=""
         DISP.DEL.BILL<1> = 'Deleted By:   ':DEL.BILLS.REC<2>
         DISP.DEL.BILL<2> = 'Deleted Date: ':OCONV(FIELD(DEL.BILLS<1>,'*',1),'D2/')
         DISP.DEL.BILL<3> = 'Deleted Time: ':OCONV(FIELD(DEL.BILLS<1>,'*',2),'MTH')
         DISP.DEL.BILL<4> = 'Comments:     ':DEL.BILLS.REC<5>'L#45'
      END
      CRT @(0,0):@(-3)
      CALL FB.DRAW.BOX(8,3,67,16,' ','')
      CALL FB.DRAW.BOX(9,4,65,10,' ','+=+|+=+|')
      CALL FB.DRAW.BOX(9,4,65,3,' ','+=+|+=+|')
      CALL FB.PRINT.CENT(9,74,5,"DELETED BILL INFORMATION")
      ROW.POS=7
      FOR ROW=1 TO 4
         ROW.POS+=1
         CRT @(10,ROW.POS):DISP.DEL.BILL<ROW>
      NEXT ROW
      GOOD.ANS = 0
      LOOP UNTIL GOOD.ANS = 1 DO
         HELP = "Do You Want To Use This Deleted Pro#? Y/N"
         CALL GEN.IN(51,14,'#','',Q,1,1,'','',2,51,14,0,QI,HELP,9,14)  ; * DRF028
         BEGIN CASE
            CASE UPCASE(QI) = 'Y'
               USE.DEL.BILL = 1
               GOOD.ANS = 1
            CASE UPCASE(QI) = 'N'
               GOOD.ANS = 1
            CASE 1 ; GOOD.ANS = 0
         END CASE
      REPEAT
      CHK.DEL.BILL=1
      RETURN
      * End TAG02

      * Begin NKH10
*****************************************************************
OCR.LOCK:
*****************************************************************
      * Begin NKH32
      OCR.LOCKED = 0
      READ OCR.REC FROM OCR.LOCK, CURRENT.LOCK THEN
         IF OCR.REC<1> = USER AND OCR.REC<2> = CH.NUM THEN
            DELETE OCR.LOCK,CURRENT.LOCK
         END
      END
      IF QI[1,4] = 'ASHV' OR QI[1,8] = "SHV_BPTS" THEN       ; * NKH72
         OCR.LOCK.KEY = CLIENT.ID
         GOSUB CHECK.OCR.LOCK
         OCR.LOCK.KEY = QI
         GOSUB CHECK.OCR.LOCK
         IF NOT(OCR.LOCKED) THEN
            GOSUB WRITE.OCR.LOCK
         END
      END ELSE
         OCR.LOCK.KEY = CLIENT.ID
         GOSUB CHECK.OCR.LOCK
         IF NOT(OCR.LOCKED) THEN
            GOSUB WRITE.OCR.LOCK
         END
      END

      RETURN

*****************************************************************
CHECK.OCR.LOCK:
*****************************************************************
      READ OCR.REC FROM OCR.LOCK, OCR.LOCK.KEY THEN
         CALL ELINE(OCR.LOCK.KEY:' is being keyed by ':OCR.REC<1>:' ')
         OCR.LOCKED = 1
      END

      RETURN

*****************************************************************
WRITE.OCR.LOCK:
*****************************************************************
      OCR.REC= ''
      OCR.REC<1> = USER
      OCR.REC<2> = CH.NUM
      OCR.REC<3> = DATE()
      WRITE OCR.REC ON OCR.LOCK, OCR.LOCK.KEY      ; * NKH29
      CURRENT.LOCK = OCR.LOCK.KEY        ; * NKH32

      RETURN

      * End NKH32
*****************************************************************
PRO.COMPARE:
*****************************************************************
      * Begin NKH11
      PRO.MATCH = 1
      IF OCR.ENTRY THEN
         CHECK.ENTER.PRO = PRO[1,2]
         CHECK.IMAGE.PRO = IMAGE.PRO[1,2]
         * Begin NKH19
         READ PRO.OVERRIDE.REC FROM PRO.OVERRIDE, CARRIER.ID THEN
            PRO.ORIDE = 1
         END ELSE
            PRO.ORIDE = 0
         END
         * End NKH19
         BEGIN CASE
            CASE NOT(NUM(CHECK.ENTER.PRO))
            CASE NOT(NUM(CHECK.IMAGE.PRO))
            CASE USER = 'MARY'
            CASE PRO = "303882579810"    ; * NKH15
            CASE PRO.ORIDE               ; * NKH19
            CASE CHECK.ENTER.PRO[1,1] = 0          ; * NKH20
            CASE 1
               IF OLD.PRO.REC = '' THEN  ; * NKH12
                  IF CHECK.ENTER.PRO # CHECK.IMAGE.PRO THEN
                     CALL ELINE('Entered Pro does not match Image Pro')
                     PRO.MATCH = 0
                     GOTO 300
                  END
               END                       ; * NKH12
         END CASE
      END

      RETURN
      * End NKH11

*****************************************************************
BILL.UPDATE.LOCK:
*****************************************************************
      * Begin NKH56
      BILL.IS.LOCKED = 0
      READV CARRIER.INCLUDE FROM F.CARRIERS, CARRIER.ID, 131 ELSE CARRIER.INCLUDE = ''
      IF CARRIER.INCLUDE<1,1> = 'Y' THEN
         CARRIER.INCLUDE = 1
      END ELSE
         CARRIER.INCLUDE = 0
      END
      READV CLIENT.EXCLUDE FROM F.CLIENTS, CLIENT.ID, 324 ELSE CLIENT.EXCLUDE = ''
      IF CLIENT.EXCLUDE = 'Y' THEN CLIENT.EXCLUDE = 1
      CLIENT.EXCLUDE = ''

      PRO.BILL.LOCK = 0
      READV PRO.BILL.LOCK FROM F.HIST, PRO.ID, 292 THEN
         IF PRO.BILL.LOCK = 'Y' THEN PRO.BILL.LOCK = 1
      END
      BEGIN CASE
         CASE VERSION # '0'
         CASE CLIENT.EXCLUDE
         CASE PRO.BILL.LOCK
            BILL.IS.LOCKED = 1
            GOSUB CHECK.FOR.SENT.BILL    ; * NKH60
         CASE PRO.REC<39> = 'R'
         CASE ACCESS.REASON = 'ADD.BD'
         CASE ACCESS.REASON = 'ADD.AD'
         CASE OLD.PRO.REC<39> # 'O' AND PRO.REC<39> = 'O'    ; * When setting to "O" for the first time
            IF OLD.PRO.ID = PRO.ID THEN
               IF CARRIER.INCLUDE AND ACTUAL.CHG > 0 THEN
                  PRO.REC<292> = 'Y'
                  IF OLD.PRO.REC # "" THEN OLD.PRO.REC<292> = 'Y'      ; * NKH60
                  LOCK.ID = CLIENT.ID:'*':PRO.ID
                  WRITEV DATE() TO FB.BILLS.LOCKED, LOCK.ID, 1
               END
            END
      END CASE

      RETURN

      * Begin NKH60
*****************************************************************
LOCK.RECORD.UPDATE:* Track all changes after the bill has been sent
*****************************************************************
      IF OLD.PRO.REC > "" THEN
         IF OLD.PRO.REC<292> = 'Y' THEN
            PRO.REC<292> = 'Y'
            IF LOCK.LOG.DONE THEN RETURN
            LOCK.ID = CLIENT.ID:'*':PRO.ID
            LOG.ID = CLIENT.ID:'*':PRO.ID:'*':DATE():'*':TIME()
            LOCK.LOG.REC = ''
            READ LOCK.HIST FROM FB.BILLS.LOCKED.HIST, LOCK.ID THEN
               IF BILL.LOCK.OVERRIDE THEN
                  BEGIN CASE
                     CASE DELETING
                        INS USER BEFORE LOCK.LOG.REC<4,1>
                        INS DATE() BEFORE LOCK.LOG.REC<5,1>
                        INS TIME() BEFORE LOCK.LOG.REC<6,1>
                        INS 'DELETE' BEFORE LOCK.LOG.REC<7,1>
                     CASE 1
                        PRO.COUNT = DCOUNT(PRO.REC,@AM)
                        FOR XX = 1 TO PRO.COUNT
                           BEGIN CASE
                              CASE XX = 55
                              CASE XX = 84
                              CASE XX = 85
                              CASE XX = 86
                              CASE XX = 89
                              CASE XX = 288
                              CASE XX = 289
                              CASE XX = 290
                              CASE XX = 291
                              CASE 1
                                 IF PRO.REC<XX> # OLD.PRO.REC<XX> THEN
                                    NEW.TEMP.REC = PRO.REC
                                    OLD.TEMP.REC = OLD.PRO.REC
                                    OLD.MV.COUNT = DCOUNT(OLD.PRO.REC<XX>,@VM)
                                    NEW.MV.COUNT = DCOUNT(PRO.REC<XX>,@VM)
                                    IF NEW.MV.COUNT > 0 THEN
                                       CONVERT @VM TO @SM IN NEW.TEMP.REC
                                    END
                                    IF OLD.MV.COUNT > 0 THEN
                                       CONVERT @VM TO @SM IN OLD.TEMP.REC
                                    END
                                    INS XX BEFORE LOCK.LOG.REC<1,1>
                                    INS NEW.TEMP.REC<XX> BEFORE LOCK.LOG.REC<2,1>
                                    INS OLD.TEMP.REC<XX> BEFORE LOCK.LOG.REC<3,1>
                                    READV LOG.COM FROM F.DICT.BILLS, XX, 3 THEN
                                       CONVERT @VM TO " " IN LOG.COM
                                    END ELSE
                                       LOG.COM = ' '
                                    END
                                    INS LOG.COM BEFORE LOCK.LOG.REC<7,1>
                                 END
                           END CASE
                        NEXT XX
                        INS USER BEFORE LOCK.LOG.REC<4,1>
                        INS DATE() BEFORE LOCK.LOG.REC<5,1>
                        INS TIME() BEFORE LOCK.LOG.REC<6,1>
                  END CASE
                  IF LOCK.LOG.REC<1> > "" OR DELETING THEN
                     WRITE LOCK.LOG.REC ON F.LOCK.LOG, LOG.ID
                     LOCK.LOG.DONE = 1
                  END
               END
            END
            IF DELETING THEN
               READ LOCK.REC FROM FB.BILLS.LOCKED, LOCK.ID THEN
                  DELETE FB.BILLS.LOCKED, LOCK.ID
               END
            END
         END
      END

      RETURN

*****************************************************************
CHECK.FOR.SENT.BILL:
*****************************************************************
      SENT.ID = CLIENT.ID:"*":CARRIER.ID:"*":PRO:"*":VERSION
      READ SENT.REC FROM FB.BILLS.LOCKED, SENT.ID THEN
         BILL.IS.LOCKED = 0
      END

      RETURN

      * End NKH60
*****************************************************************
PROGRAM.EXIT:
*****************************************************************
      IF OCR.ENTRY THEN
         READ OCR.REC FROM OCR.LOCK, OCR.LOCK.KEY THEN       ; * NKH29
            IF OCR.REC<1> = USER AND OCR.REC<2> = CH.NUM THEN
               DELETE OCR.LOCK,OCR.LOCK.KEY        ; * NKH29
            END
         END
      END

      STOP
      * End NKH10

   END                                   ; * SWB08
