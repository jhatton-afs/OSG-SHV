      SUBROUTINE FB.1.4.DIV(CLIENT.ID,CLIENT.REC,DISPLAY.MODE)
***********************************************************************
* Program name :  FB.1.4.DIV
* Author       :  VALERIE DOTY
* Date written :  MAY 23,1994
* Library      :  FBBP
$* COPYRIGHT (C) 2016 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED.
*
* SUBROUTINE TO CREATE OR MODIFY CLIENT DIVISIONS
*
* Last updated by afs (AFSLOGISTICS\nmeddaugh) at 07:51:50 on 03/25/2019.
*
* Mod nn  mm/dd/yy, init, req #, description
* Start modification history
* 121102 - JMK01 - ADD GENERIC EMAIL PROCESS FOR MULTIPLE SHIPPING EMAILS
* 122702 - JMK02 - CORRECT EMAIL CALL FOR UPDATING
* 040203 - JMK03 - CHANGE SHIPPING TO MISROUTING FOR EMAILS
* 010504 - JMK04 - ADD INQUIRE MODE VIA DISPLAY.MODE VARIABLE
* 010904 - DRF - CHANGE ACTIVE DIVISION TO BE NOT EQUAL TO "I"
* 040705 - JMK05 - CHANGE SCREEN LISTING
* 111607 - JMK06 - T070443 - Create process to update SQL data tables from Universe
* 122608 - JMK07 - C082741 - Add client defined region code to the Division Code
* 111609 - JMK08 - T091386 - Traffic Survey Canadian Zip issue
* 022211 - NPR01 - T110107 - Add option to delete divisions for traffic surveys.
* 033111 - NPR02 - Allow 6 digit divisions for Airgas South - 01267
* 061411 - JMK09 - R110675 - Need division 80 to auto-populate on EDI
* 061511 - JMK10 - CREATE ZIP.DIV.XREF FILE IF NOT ON FILE.
* 101211 - RLM01 - Read Account Manager ID from CLIENTS file instead of Salesman file.
* 072312 - RLM02 - Sysaid #3073 - Replace former employees' email addresses with those of current employees
* 041913 - JMK11 - Limit Division Status to either "A" or "I".
* 110813 - JMK12 - Expand the description field
* 050515 - DRF02 - SysAid 10652 - Update client list of changes for SAGE export
* 091616 - TAG01 - SysAid 26312 - Add Effective Date
* 071717 - NKH01 - SysAid 34128 Modified DIV to be 6 characters for client 05638.
* 071917 - GRB01 - SysAid 31038 Modified DIV to be 6 characters for client 01675.
* 020418 - GRB02 -  Modified DIV to be 6 characters for client 05548.
* 062518 - GRB03 -  Add upd pdf email.
* 032519 - NKH02 - ACCU-316 Modified CREATE-FILE file sizes
* End modification history
**********************************************************************
*
$INCLUDE PROG.ADMIN INC_OPTIONS
*
* INITIALIZE VARIABLES
*
      CALL GET.USER.NEW(USER,CH.NUM)     ; * JMK06
      PROMPT''
      ADD.FLAG=0
      PROG.NAME='FB.1.4.DIV'             ; * JMK01
      PROG.DESC='CLIENT DIVISION CODES'  ; * JMK01
      PACK.NAME='FREIGHT BILLING'
      IF DISPLAY.MODE THEN               ; * JMK01
         UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'FB.1.4.DIV' ; UPL.VOUT = ''  ; * NPR_UPL 04/23/2010
         UPL.VIN<3> = USER
         UPL.VIN<4> = CH.NUM
         CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)    ; * NPR_UPL 04/23/2010
         PROG.DESC=PROG.DESC:' - View'   ; * JMK01
      END ELSE                           ; * JMK01
         PROG.DESC=PROG.DESC:' - Change'           ; * JMK01
      END                                ; * JMK01
      ERRMSG=''
      DIV.REC = ''
      OLD.DIV.REC = ''
      NUM.ROWS = 10
      DIV.DESC = ''
      ADDR1=''
      ADDR2=''
      DIV.ZIP=''
      DIV.STATE=''
      DIV.CITY=''
      DIV.PHONE=''
      DIV.FAX=''
      CONTACT =''
      ACTIVE=''
      SUBST.DIV=''
      GROUP.CODE=''
      CROSS.REF=''
      CODE=''
      EMAIL.TO=''
      EMAIL.CC=''
      EMAIL.BCC=''
      MODE = ''
      EFF.DATE = ""                      ; * TAG01
      LN = 0
      FIRST.ROW = 11
      CLIENT.NAME = CLIENT.REC<2>
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,PERIOD,PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)

*********************************************************************
* OPEN FILES
*********************************************************************
      OPEN '','DIVISION.CODES,':CLIENT.ID TO F.DIV.CODES ELSE
         EXECUTE 'CREATE-FILE DATA DIVISION.CODES,':CLIENT.ID:' 23,1' PASSLIST CAPTURING OUTPUT    ; * NKH02
         OPEN '','DIVISION.CODES,':CLIENT.ID TO F.DIV.CODES ELSE
            CALL OPEN.ABORT("DIVISION.CODES",PROG.NAME)
         END
      END
      OPEN '','REGION.CODES,':CLIENT.ID TO F.REG.CODES ELSE
         EXECUTE 'CREATE-FILE DATA REGION.CODES,':CLIENT.ID:' 7,1' PASSLIST CAPTURING OUTPUT    ; * NKH02
         OPEN '','REGION.CODES,':CLIENT.ID TO F.REG.CODES ELSE
            CALL OPEN.ABORT("REGION.CODES",PROG.NAME)
         END
      END
      OPEN '','ZIPS.CODES' TO F.ZIPS ELSE
         CALL OPEN.ABORT("ZIPS",PROG.NAME)
      END

      READ ZIP3.REC FROM F.ZIPS,'3.DIGIT' ELSE ZIP3.REC=''
      OPEN '','ZIP.DIV.XREF,':CLIENT.ID TO F.ZIP.DIV.XREF ELSE         ; * JMK09
         EXECUTE 'CREATE-FILE DATA ZIP.DIV.XREF,':CLIENT.ID:' 23,1'       ; * JMK10 NKH02
         OPEN '','ZIP.DIV.XREF,':CLIENT.ID TO F.ZIP.DIV.XREF ELSE      ; * JMK10
            CALL OPEN.ABORT("ZIP.DIV.XREF",PROG.NAME)        ; * JMK09
         END                             ; * JMK10
      END                                ; * JMK09
      OPEN '','EDI.CAR.ACNT.XREF' TO F.CAR.ACNT.XREF ELSE
         CALL OPEN.ABORT("EDI.CAR.ACNT.XREF",PROG.NAME)
      END
      OPEN '','CARRIERS' TO F.CARRIERS ELSE
         CALL OPEN.ABORT("CARRIERS",PROG.NAME)
      END
      OPEN '','BCTRL' TO F.BCTRL ELSE
         CALL OPEN.ABORT("BCTRL",PROG.NAME)
      END
      OPEN '','FB.CAR.CTRL' TO F.CAR.CTRL ELSE
         CALL OPEN.ABORT("FB.CAR.CTRL",PROG.NAME)
      END
      OPEN '','&SAVEDLISTS&' TO F.SL ELSE          ; * DRF02
         CALL OPEN.ABORT("&SAVEDLISTS&",PROG.NAME)
      END                                ; * DRF02

*********************************************************************
GET.DIV:* EDIT DIVISION CODE
*********************************************************************
      CBVIN=''
      CBVIN<1>=CLIENT.ID
      CALL CLIENT.BLOCK(CBVIN,CBVOUT,F.CAR.CTRL)
      CRT @(0,3) :CBVOUT<1>: ' Client Number....': CLIENT.ID : ' ' : CLIENT.NAME :@(-6):
      CRT @(0,4) : ' Division Number..' : @(-3) :
      HELP="Enter division code. ''=Exit. 'X'=Exit. 'L'=List all divs. 'P'=Print all divs"           ; * JMK04
      ZIP.CNT = 0
      ZIP.DESC = ''
      IF CLIENT.ID='01638' OR CLIENT.ID = "01267" OR CLIENT.ID='01675' OR CLIENT.ID='05638'OR CLIENT.ID='01675' OR CLIENT.ID='01749' OR CLIENT.ID='05500' OR CLIENT.ID='05026' OR CLIENT.ID='01457' OR CLIENT.ID='05049' OR CLIENT.ID='05548' THEN         ; * NPR02 ; * NKH01; * GRB01
         CALL GEN.IN(18,4,'','',Q,0,6,'','',2,18,4,0,QI,HELP,0,23)
      END ELSE
         CALL GEN.IN(18,4,'','',Q,0,5,'','',2,18,4,0,QI,HELP,0,23)
      END
      QI=OCONV(QI,'MCU')
      Q=OCONV(Q,'MCU')
      BEGIN CASE
         CASE QI='X' OR QI = '' OR QI='EX'
            RELEASE F.DIV.CODES
            STOP
            RETURN
         CASE QI='L'
            HELP="'I'=Inactive, 'B'=Both, <ENTER>=Active."   ; * JMK04
            CALL GEN.IN(0,22,'Enter Division Status ##','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)       ; * JMK04
            QI=OCONV(QI,'MCU')
            Q=OCONV(Q,'MCU')
            BEGIN CASE                   ; * JMK04
               CASE QI='I'               ; * JMK04
                  EXECUTE 'SORT DIVISION.CODES,':CLIENT.ID:' WITH 7 = "I" SCR.ID SCR.ZIP SCR.DESC SCR.ADDR SCR.CITY SCR.STATE HEADING "List of inactive division codes for ':CLIENT.ID:' - ':CLIENT.NAME:"'CL'":'" (I'       ; * JMK05
               CASE QI='B'               ; * JMK04
                  EXECUTE 'SORT DIVISION.CODES,':CLIENT.ID:' SCR.ID SCR.ZIP SCR.DESC SCR.ADDR SCR.CITY SCR.STATE HEADING "List of all division codes for ':CLIENT.ID:' - ':CLIENT.NAME:"'CL'":'" (I'     ; * JMK05
               CASE 1                    ; * JMK04
                  EXECUTE 'SORT DIVISION.CODES,':CLIENT.ID:' WITH 7 # "I" SCR.ID SCR.ZIP SCR.DESC SCR.ADDR SCR.CITY SCR.STATE HEADING "List of active division codes for ':CLIENT.ID:' - ':CLIENT.NAME:"'CL'":'" (I'         ; * JMK05
            END CASE
            CALL ELINE('Press <ENTER> to continue.')
            CALL AFS.SCR.HEAD(CO.ID,FILE.ID,PERIOD,PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            GO GET.DIV
         CASE QI='P'                     ; * JMK04
            HELP="'I'=Inactive, 'B'=Both, <ENTER>=Active."   ; * JMK04
            CALL GEN.IN(0,22,'Enter Division Status ##','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)       ; * JMK04
            QI=OCONV(QI,'MCU')
            Q=OCONV(Q,'MCU')
            BEGIN CASE                   ; * JMK04
               CASE QI='I'               ; * JMK04
                  EXECUTE 'SORT DIVISION.CODES,':CLIENT.ID:' WITH 7 = "I" BY DIV 14 16 17 1 LPTR HEADING "List of inactive division codes for ':CLIENT.ID:' - ' : CLIENT.NAME[1,25] : "      Page 'PLL'":'"'       ; * JMK04 ; * NPR02
               CASE QI='B'               ; * JMK04
                  EXECUTE 'SORT DIVISION.CODES,':CLIENT.ID:' BY DIV 14 16 17 1 7 LPTR HEADING "List of all division codes for ':CLIENT.ID:' - ' : CLIENT.NAME[1,25] : "      Page 'PLL'":'"'   ; * JMK04 ; * NPR02
               CASE 1                    ; * JMK04
                  EXECUTE 'SORT DIVISION.CODES,':CLIENT.ID:' WITH 7 = "A" BY DIV 14 16 17 1 LPTR HEADING "List of active division codes for ' : CLIENT.NAME[1,25] : "      Page 'PLL'":'"'     ; * NPR02
            END CASE
            CALL ELINE('Press <ENTER> to continue.')
            CALL AFS.SCR.HEAD(CO.ID,FILE.ID,PERIOD,PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            GO GET.DIV
         CASE LEN(QI) <= 5 OR (LEN(QI)=6 AND CLIENT.ID='01638') OR (LEN(QI)=6 AND CLIENT.ID='01267') OR (LEN(QI)=6 AND CLIENT.ID='05638')OR (LEN(QI)=6 AND CLIENT.ID='01675') OR (LEN(QI)=6 AND CLIENT.ID='01749') OR (LEN(QI)=6 AND CLIENT.ID = '05548') OR (LEN(QI)=6 AND CLIENT.ID='05500') OR (LEN(QI)=6 AND CLIENT.ID='05026') OR (LEN(QI)=6 AND CLIENT.ID='01457') OR (LEN(QI)=6 AND CLIENT.ID='05049')    ; * NPR02  ; * NKH01;* GRB01 ; GRB02
            IF CLIENT.ID='01638' OR CLIENT.ID='01267' OR CLIENT.ID = '05638'OR CLIENT.ID = '01675' OR CLIENT.ID='01749' OR CLIENT.ID='05500' OR CLIENT.ID='05026' OR CLIENT.ID='01457' OR CLIENT.ID='05049' OR CLIENT.ID = '05548' THEN          ; * NPR02  ; * NKH01 ;* GRB01;GRB02
               DIV.ID=Q'R%6'
            END ELSE
               DIV.ID = Q'R%5'
            END
            CRT @(18,4) : DIV.ID : @(-4) :
            GOSUB DISPLAY.SCREEN


            READ DIV.REC FROM F.DIV.CODES, DIV.ID THEN
               OLD.DIV.REC = DIV.REC
               GOSUB ASSIGN.DATA
               GOSUB DISPLAY.DATA
               MODE = 'EDIT'
               GOSUB START.SEL
            END ELSE
               IF DISPLAY.MODE THEN      ; * JMK04
                  CALL ELINE('Division not on file. Press <ENTER> to continue.')           ; * JMK04
                  GO GET.DIV             ; * JMK04
               END                       ; * JMK04
               DIV.REC = ''
               GOSUB ASSIGN.DATA
               MODE = 'INPUT'
               GOSUB START.SEL
               IF QI = 'X' THEN
                  RELEASE F.DIV.CODES
                  GO GET.DIV
               END
            END
         CASE 1
            CALL ELINE('Invalid entry.')
      END CASE
      GO UPDATE.INFO

*********************************************************************
START.SEL:***
*********************************************************************
      DEL.FLAG = 0                       ; * NPR01
      IF MODE = 'INPUT' THEN
         LN=LN+1
         QI=LN
         IF LN = 18 THEN
            MODE = 'EDIT'
            GO START.SEL
         END
      END ELSE
         IF DISPLAY.MODE THEN            ; * JMK04
            HELP='Press 14, 15 to view or <ENTER> to continue.'
         END ELSE                        ; * JMK04
            IF DIV.ID = "00001" OR DIV.ID = "99999" THEN DEL.FLAG = 0 ELSE DEL.FLAG = 1    ; * NPR01 Don't delete default divisions
            IF CLIENT.ID[1,2] = "99" AND DEL.FLAG THEN
* Begin TAG01
               HELP="Enter number of information to change. (1 to 19), [D]=Delete"
            END ELSE
               HELP="Enter number of information to change. (1 to 19)"
* End TAG01
            END
         END                             ; * JMK04
         CALL GEN.IN(0,22,'Enter Selection Number ##','',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
      END
      QI=OCONV(QI,'MCU')
      IF DISPLAY.MODE THEN               ; * JMK04
         VALID=0                         ; * JMK04
         IF QI='' OR QI=14 OR QI=15 THEN VALID=1   ; * JMK04
         IF VALID=0 THEN                 ; * JMK04
            CALL ELINE('Invalid entry.')           ; * JMK04
            GO START.SEL                 ; * JMK04
         END                             ; * JMK04
      END                                ; * JMK04
      BEGIN CASE
         CASE QI=''
            IF DISPLAY.MODE THEN         ; * JMK04
               RETURN                    ; * JMK04
            END                          ; * JMK04
            GO UPDATE.INFO
         CASE QI='EX'
            STOP
         CASE QI='X'
            IF MODE = 'INPUT' THEN
               IF LN=1 THEN
                  RETURN
               END ELSE
                  LN = LN-1
                  GO START.SEL
               END
            END ELSE
               RETURN
            END
         CASE NUM(QI)
* Begin TAG01
            IF QI GE 1 AND QI LE 19 THEN   ;* GRB03
               ON QI GOSUB GET.DESC,GET.ADDR1,GET.ADDR2, GET.ZIP,GET.STATE,GET.CITY,GET.DIV.PHONE,GET.DIV.FAX,GET.CONTACT.INFO,GET.STATUS,GET.SUBST,GET.GROUP.CODE,GET.CROSS.REF,GET.EMAIL,GET.COMMENTS,GET.REGION,GET.AREA,GET.EFF.DATE,UPS.EMAIL.ADDRESSES ; * GRB03
* End TAG01
            END ELSE
               CALL ELINE('Invalid Entry, please try again')
            END
         CASE QI = "D" AND DEL.FLAG
            HELP="Are you sure you wish to delete this division Y or N."
            LNE='Delete this division ? -'
            CALL GEN.IN(0,22,LNE,'',Q,1,1,'','',2,-1,22,1,QI,HELP,0,23)
            QI=OCONV(QI,'MCU')
            IF QI = "Y" THEN
               DELETE F.DIV.CODES, DIV.ID
               CALL ELINE("Division ":DIV.ID:" deleted - Make sure no bills have this division")
               GOTO GET.DIV
            END
         CASE 1
      END CASE
      GO START.SEL

*********************************************************************
GET.DESC:*  GET THE A BRIEF DESCRIPTION OF THE DIVISION
*********************************************************************
      HELP="Enter a brief description of the division. ''=Accept. 'X'=Exit."
      CALL GEN.IN(17,6,DIV.DESC,'',Q,0,30,'','',2,17,6,0,QI,HELP,0,23)
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            CRT @(17,6): DIV.DESC
            RETURN
         CASE QI = ''
            NULL
         CASE QI = ' '
            DIV.DESC = ''
         CASE 1
            DIV.DESC = TRIM(QI)
      END CASE
      CRT @(17,6):DIV.DESC'L#25'
      DIV.REC<11>=DIV.DESC
      RETURN

************************************************************************
GET.ADDR1:
************************************************************************
      HELP="Enter addr 1. [space]=Clear."
      MASK=ADDR1:STR('-',25-LEN(ADDR1))
      CALL GEN.IN(17,7,MASK,'',Q,0,25,'','',2,-25,7,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            IF MODE = 'INPUT' THEN
               IF LN=1 THEN
                  GO GET.DIV
               END ELSE
                  LN = LN-1
               END
            END
            GO START.SEL
         CASE QI = ' '
            ADDR1 =''
         CASE QI=''
            NULL
         CASE 1
            ADDR1 = TRIM(Q)
      END CASE
      CRT @(17,7):ADDR1'L#25'
      DIV.REC<14>=ADDR1
      RETURN

************************************************************************
GET.ADDR2:
************************************************************************
      HELP="Enter addr 2. [space]=Clear."
      MASK=ADDR2:STR('-',25-LEN(ADDR2))
      CALL GEN.IN(17,8,MASK,'',Q,0,25,'','',2,-25,8,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'
            STOP
         CASE QI='X'
            IF MODE = 'INPUT' THEN
               IF LN=1 THEN
                  GO GET.DIV
               END ELSE
                  LN = LN-1
               END
            END
            GO START.SEL
         CASE QI=''
            NULL
         CASE QI = ' '
            ADDR2 =''
         CASE 1
            ADDR2 = TRIM(Q)
      END CASE
      CRT @(17,8):ADDR2'L#25'
      DIV.REC<15>=ADDR2
      RETURN

*********************************************************************
GET.ZIP:*  GET THE ZIP CODE THAT NAMES THIS DIVISION
*********************************************************************
      HELP="Enter new destination/origin code. ''=Accept. 'X'=Exit."
      GOOD.ANS = 0
      LOOP UNTIL GOOD.ANS DO
         CRT @(17,9):DIV.ZIP
         CALL GEN.IN(17,9,DIV.ZIP,'',Q,0,6,'','',2,17,9,0,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI='X'
               CRT @(17,9):DIV.ZIP
               GOOD.ANS = 1
            CASE QI='EX'
               STOP
            CASE QI='' AND DIV.ZIP # ''
               GOOD.ANS = 1
            CASE QI # '' AND LEN(Q) <= 6
               ZIP.ID = OCONV(Q,'MCU')   ; * JMK08
               IF ZIP.ID MATCHES '5N"-"' THEN
                  ZIP.ID=CHANGE(ZIP.ID,'-','M')
                  Q=ZIP.ID
               END
               GOSUB READ.ZIP
               IF ZIP.DESC # 'ERROR' THEN
                  GOOD.ANS = 1
                  DIV.ZIP = OCONV(Q,'MCU')         ; * JMK08
                  DIV.CITY = ZIP.REC<1>
                  DIV.STATE = ZIP.REC<2>
               END
            CASE 1
               CALL ELINE('Invalid entry.')
         END CASE
      REPEAT
      CRT @(17,9):DIV.ZIP'L#6'
      CRT @(34,9):DIV.STATE
      CRT @(17,10):DIV.CITY'L#25'
      DIV.REC<1> = DIV.ZIP
      DIV.REC<16> = DIV.CITY
      DIV.REC<17> = DIV.STATE
      IF MODE = 'INPUT' THEN LN = LN + 2
      RETURN

*********************************************************************
READ.ZIP:* SUBROUTINE TO RETRIEVE CITY AND STATE
*********************************************************************
      BEGIN CASE
         CASE LEN(ZIP.ID)=5 OR LEN(ZIP.ID)=6
            READ ZIP.REC FROM F.ZIPS, ZIP.ID ELSE
               ZIP.REC = "~~~ Unknown ~~~"
            END
            ZIP.DESC = ZIP.REC<1> : ' ' : ZIP.REC<2>
         CASE LEN(ZIP.ID)=3
            ZIP.DESC = '~~~ Unknown ~~~'
            X=DCOUNT(ZIP3.REC<1>,CHAR(253))
            FOR I=1 TO X
               IF ZIP.ID GE ZIP3.REC<2,I> & ZIP.ID LE ZIP3.REC<3,I> THEN
                  ZIP.DESC = ZIP3.REC<1,I>
                  EXIT
               END
            NEXT I
         CASE 1
            CALL ELINE('Invalid entry.')
            ZIP.DESC='ERROR'
      END CASE
      RETURN

************************************************************************
GET.STATE:
************************************************************************
      HELP="Enter state code. [space]=Clear."
      MASK=DIV.REC<17>'L#2'
      CALL GEN.IN(34,9,MASK,'',Q,0,2,'','',2,-2,9,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            IF MODE = 'INPUT' THEN
               IF LN=1 THEN
                  GO GET.DIV
               END ELSE
                  LN = LN-1
               END
            END
         CASE QI='EX'
            STOP
         CASE QI = ''
            DIV.STATE =DIV.REC<17>
         CASE QI = ' '
            DIV.STATE =''
         CASE 1
            DIV.STATE = TRIM(Q)
      END CASE
      CRT @(34,9):DIV.STATE'L#2'
      DIV.REC<17> = DIV.STATE
      RETURN

************************************************************************
GET.CITY:
************************************************************************
      HELP="Enter city. [space]=Clear."
      MASK=DIV.CITY
      CALL GEN.IN(17,10,MASK,'',Q,0,25,'','',2,17,10,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            IF MODE = 'INPUT' THEN
               IF LN=1 THEN
                  GO GET.DIV
               END ELSE
                  LN = LN-1
               END
            END
         CASE QI='EX'
            STOP
         CASE QI=''
            NULL
         CASE QI = ' '
            DIV.CITY=''
         CASE 1
            DIV.CITY= TRIM(Q)
      END CASE
      CRT @(17,10):DIV.CITY'L#25'
      DIV.REC<16> = DIV.CITY
      RETURN

************************************************************************
GET.DIV.PHONE:
************************************************************************
      HELP="Enter division's phone number. [space]=Clear."
      CALL GEN.IN(17,11,DIV.PHONE'L#13','PHONE',Q,0,13,'','',2,17,11,0,QI,HELP,0,23)
      BEGIN CASE
         CASE QI=' '
            DIV.PHONE = ''
         CASE QI NE ''
            DIV.PHONE =TRIM(Q)
         CASE QI=''
            NULL
         CASE 1
            GO GET.DIV.PHONE
      END CASE
      CRT @(17,11):'(':DIV.PHONE[1,3]:')':DIV.PHONE[4,3]:'-': DIV.PHONE[7,4]
      DIV.REC<18>=DIV.PHONE
      RETURN

************************************************************************
GET.DIV.FAX:
************************************************************************
      HELP="Enter division's fax number. [space]=Clear."
      CALL GEN.IN(17,12,DIV.FAX'L#13','PHONE',Q,0,13,'','',2,17,12,0,QI,HELP,0,23)
      BEGIN CASE
         CASE QI=' '
            DIV.FAX = ''
         CASE QI NE ''
            DIV.FAX =TRIM(Q)
         CASE QI=''
            NULL
         CASE 1
            GO GET.DIV.FAX
      END CASE
      CRT @(17,12):'(':DIV.FAX[1,3]:')':DIV.FAX[4,3]:'-': DIV.FAX[7,4]
      DIV.REC<19>=DIV.FAX
      RETURN

************************************************************************
GET.CONTACT.INFO:
************************************************************************
      HELP="Enter contact name. [space]=Clear."
      MASK=DIV.REC<23>:STR('-',30-LEN(DIV.REC<23>))
      CALL GEN.IN(17,13,MASK,'',Q,0,30,'','',2,-30,13,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=' '
            CONTACT=''
         CASE QI= ''
            CONTACT=DIV.REC<23>
         CASE 1
            CONTACT=TRIM(Q)
      END CASE

      CRT @(17,13):CONTACT'L#25'
      DIV.REC<23> = CONTACT

      RETURN

************************************************************************
GET.STATUS:***
************************************************************************
      HELP="Enter status. [A]=Active, [I]=Inactive, [cr]=Accept."
      CALL GEN.IN(69,6,STATUS.FLG,'',Q,0,1,'','',1,69,6,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='' & STATUS.FLG NE ''
            QI=STATUS.FLG
         CASE QI='I'
            NULL
         CASE QI='A'
            NULL
         CASE 1                          ; * JMK11
            CALL ELINE('Invalid choice. Try again.')         ; * JMK11
            GO GET.STATUS                ; * JMK11
      END CASE
      STATUS.FLG=QI
      STATUS='-Undefined'
      IF QI='I' THEN STATUS='-Inactive'
      IF QI='A' THEN STATUS='-Active'
      CRT @(69,6):STATUS.FLG:STATUS:@(-4):
      DIV.REC<7>=STATUS.FLG
* Begin TAG01
      CRT @(69,14): OCONV(DATE(),'D2/')
      DIV.REC<47>=DATE()
* End TAG01
      RETURN

************************************************************************
GET.SUBST:
************************************************************************
      HELP="Enter a substitute division number. ''=Accept. 'X'=Exit."
      MASK = SUBST.DIV
      CALL GEN.IN(69,7,MASK,'',Q,0,5,'','',2,69,7,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            CRT @(69,7): SUBST.DIV
            RETURN
         CASE QI = ''
            CRT @(69,7): SUBST.DIV
         CASE 1
            TEMP.SUBST.DIV = QI'R%5'
            READ TEMP FROM F.DIV.CODES,TEMP.SUBST.DIV THEN
               SUBST.DIV = TEMP.SUBST.DIV
            END ELSE
               CALL ELINE('NOT A VALID SUBSTITUTE DIVISIONS, PLEASE TRY AGAIN')
               GO GET.SUBST
            END
      END CASE
      CRT @(69,7): SUBST.DIV
      DIV.REC<20>= SUBST.DIV
      RETURN

************************************************************************
GET.GROUP.CODE:
************************************************************************
      HELP="Enter a grouping code (example 1,2,3 or A,B,C). ''=Accept. 'X'=Exit."
      CALL GEN.IN(69,8,GROUP.CODE,'',Q,0,10,'','',2,69,8,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            CRT @(69,8): GROUP.CODE
            RETURN
         CASE QI = ''
            CRT @(69,8): GROUP.CODE
         CASE 1
            GROUP.CODE = TRIM(QI)
      END CASE
      CRT @(69,8): GROUP.CODE
      DIV.REC<21>= GROUP.CODE
      RETURN

************************************************************************
GET.CROSS.REF:* GET THE CROSS REFERENCE CODE FOR THIS DIVISION
************************************************************************
      HELP="Enter new cross reference code for this location. ''=Accept. 'X'=Exit."
      MASK = CROSS.REF.CODE
      CALL GEN.IN(69,9,MASK,'',Q,0,10,'','',2,69,9,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            CRT @(69,9): CROSS.REF.CODE
            RETURN
         CASE QI = ''
            CRT @(69,9): CROSS.REF.CODE
         CASE 1
            CROSS.REF.CODE = TRIM(QI)
      END CASE
      CRT @(69,9): CROSS.REF.CODE
      DIV.REC<8>=CROSS.REF.CODE
      RETURN

*********************************************************************
GET.EMAIL:*  GET THE EMAIL ADDRESS FOR THIS DIVISION
*********************************************************************
      HELP='Options:[R]eporting [M]isrouting [X]=Exit'       ; * JMK01; * JMK03
      PRMPT='Enter Reporting or Misrouting Emails? -'        ; * JMK01; * JMK03
      CALL GEN.IN(0,22,PRMPT,'',Q,1,1,'','',2,-1,22,1,QI,HELP,0,23)    ; * JMK01
      ETYPE=OCONV(QI,'MCU')              ; * JMK01
      VIN='' ; VOUT=''                   ; * JMK01
      BEGIN CASE                         ; * JMK01
         CASE ETYPE='X'                  ; * JMK01
            RETURN                       ; * JMK01
         CASE ETYPE=''                   ; * JMK01
            RETURN                       ; * JMK01
         CASE ETYPE='R'
            HDG.TXT='Reporting Notification'       ; * JMK01
            VOUT<1>=DIV.REC<9>           ; * JMK01
            VOUT<2>=DIV.REC<12>          ; * JMK01
            VOUT<3>=DIV.REC<13>          ; * JMK01
         CASE ETYPE='M'                  ; * JMK01; * JMK03
            HDG.TXT='Misrouting Notification'      ; * JMK01; * JMK03
            FOR ATT=1 TO 18              ; * JMK03
               VOUT<ATT>=DIV.REC<26+ATT>           ; * JMK03
            NEXT ATT                     ; *JMK03
         CASE 1                          ; * JMK01
            GOTO GET.EMAIL               ; * JMK01
      END CASE                           ; * JMK01
      VIN<1>=PROG.DESC                   ; * JMK01
      VIN<2>=PACK.NAME                   ; * JMK01
      VIN<3>=HDG.TXT                     ; * JMK01
      VIN<4>=DISPLAY.MODE                ; * JMK04
      VIN<5>=2                           ; * JMK01 PROC LVL 1=TO 2=CC 3=BCC
      IF ETYPE='M' THEN                  ; * JMK03
         VIN<6>='Y'                      ; * JMK03
         VIN<7>='Y'                      ; * JMK03
         VIN<8>='Y'                      ; * JMK03
         VIN<9>='Y'                      ; * JMK03
      END                                ; * JMK03
      CALL FB.EMAIL(VIN,VOUT)            ; * JMK01
      IF VOUT='EXIT' THEN                ; * JMK03
         STOP                            ; * JMK03
      END                                ; * JMK03
      BEGIN CASE                         ; * JMK01
         CASE ETYPE='R' AND VIN<4>=0     ; * JMK01
            DIV.REC<9>=VOUT<1>           ; * JMK01
            DIV.REC<12>=VOUT<2>          ; * JMK01
            DIV.REC<13>=VOUT<3>          ; * JMK01
         CASE ETYPE='M' AND VIN<4>=0     ; * JMK01; * JMK03
            FOR ATT=1 TO 18              ; *JMK03
               DIV.REC<26+ATT>=VOUT<ATT>           ; * JMK03
            NEXT ATT                     ; * JMK03
      END CASE                           ; * JMK01
      EMAIL.TO = DIV.REC<9>
      CALL SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      GOSUB DISPLAY.SCREEN
      GOSUB DISPLAY.DATA
      RETURN

************************************************************************
GET.COMMENTS:
************************************************************************
      CALL FB.1.4.NOTES(COMMENTS,QI,DISPLAY.MODE)  ; * JMK04
      IF DISPLAY.MODE='0' THEN           ; * JMK04
         DIV.REC<22> = COMMENTS
      END                                ; * JMK04
      CALL SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      GOSUB DISPLAY.SCREEN
      GOSUB DISPLAY.DATA
      RETURN

************************************************************************ ; * JMK07
GET.REGION:                              ; * JMK07
************************************************************************ ; * JMK07
      HELP="Enter a Region code (example 1,2,3 or A,B,C). ''=Accept. 'X'=Exit."  ; * JMK07
      CALL GEN.IN(69,12,REGION,'',Q,0,10,'','',2,69,12,0,QI,HELP,0,23)           ; * JMK07
      QI=OCONV(QI,'MCU')                 ; * JMK07
      BEGIN CASE                         ; * JMK07
         CASE QI='X'                     ; * JMK07
            CRT @(69,12): REGION         ; * JMK07
            RETURN                       ; * JMK07
         CASE QI = ''                    ; * JMK07
            CRT @(69,12): REGION         ; * JMK07
         CASE 1                          ; * JMK07
            READ TEST FROM F.REG.CODES,QI ELSE
               CALL ELINE('NOT A VALID REGION, PLEASE TRY AGAIN')
               GO GET.REGION
            END
            REGION = TRIM(QI)            ; * JMK07
      END CASE                           ; * JMK07
      CRT @(69,12): REGION               ; * JMK07
      DIV.REC<45>= REGION                ; * JMK07
      RETURN

************************************************************************
GET.AREA:
************************************************************************
      HELP="Enter a Area code. ''=Accept. 'X'=Exit."
      CALL GEN.IN(69,13,AREA'L#10','',Q,0,10,'','',2,69,13,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X' OR QI='EX'
            CRT @(69,13): AREA'L#10'
            RETURN
         CASE QI = ''
            CRT @(69,13): AREA'L #10'
         CASE 1
            AREA = TRIM(QI)
      END CASE
      CRT @(69,13): AREA'L#10'
      DIV.REC<46>= AREA
      RETURN

* Begin TAG01
************************************************************************
GET.EFF.DATE:
************************************************************************
      HELP="Enter an Effective Date 'X'=Exit."
      MASK=EFF.DATE'D2/'
      IF MASK='' THEN MASK = DATE()'D2/'
      CALL GEN.IN(69,14,MASK,'DATE',Q,0,8,'','',2,-8,14,0,QI,HELP,0,23)
      BEGIN CASE
         CASE QI='X' OR QI='EX'
            CRT @(69,14): MASK
            RETURN
         CASE QI = ''
            CRT @(69,14): MASK
            EFF.DATE = Q
         CASE QI = ' '
            EFF.DATE=''
         CASE 1
            EFF.DATE = Q
      END CASE
      DISP.DATE=OCONV(EFF.DATE,'D2/')
      CRT @(69,14): DISP.DATE'L#8'
      DIV.REC<47>= EFF.DATE
      RETURN

* End TAG01
* Begin GRB03
*****************************************************************
UPS.EMAIL.ADDRESSES:
*****************************************************************
      WRITE DIV.REC ON F.DIV.CODES,DIV.ID
      RELEASE F.DIV.CODES,DIV.ID
      CALL DIV.UPS.EMAIL.MAINT(CLIENT.ID,DIV.ID)
      READ DIV.REC FROM F.DIV.CODES,DIV.ID ELSE NULL
      CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      GOSUB DISPLAY.SCREEN
      GOSUB DISPLAY.DATA
      RETURN
      * End GRB03
************************************************************************
UPDATE.INFO:***
************************************************************************
      IF OLD.DIV.REC # DIV.REC THEN
         GOSUB UPDATE.LOG                ; * JMK04
         IF DISPLAY.MODE='0' THEN        ; * JMK04
            HELP="Enter either Y or N."
            LNE='Divisional information changed. Update? -'
            CALL GEN.IN(0,22,LNE,'',Q,1,1,'','',2,-1,22,1,QI,HELP,0,23)
            QI=OCONV(QI,'MCU')
            BEGIN CASE
               CASE QI='Y'
                  LN=0
                  WRITE DIV.REC ON F.DIV.CODES,DIV.ID
                  IF CLIENT.ID[1,2]#'99' THEN      ; * DRF02
                     SAGE.VIN=''         ; * DRF02
                     SAGE.VIN<1>='NEW.SAGE.CLIENT'           ; * DRF02
                     SAGE.VIN<2>=CLIENT.ID         ; * DRF02
                     SAGE.VOUT=''        ; * DRF02
                     CALL UPD.SAGE.CHANGE.REC(SAGE.VIN,SAGE.VOUT,F.SL)           ; * DRF02
                  END                    ; * DRF02
                  OLD.ZIP.DIV.XREF.ID=OLD.DIV.REC<1>         ; * JMK09
                  READ OLD.ZIP.DIV.XREF.REC FROM F.ZIP.DIV.XREF,OLD.ZIP.DIV.XREF.ID THEN   ; *JMK09
                     LOCATE DIV.ID IN OLD.ZIP.DIV.XREF.REC<1> SETTING DPOS THEN  ; * JMK09
                        DEL OLD.ZIP.DIV.XREF.REC<1,DPOS>     ; * JMK09
                        DEL OLD.ZIP.DIV.XREF.REC<2,DPOS>     ; * JMK09
                        IF OLD.ZIP.DIV.XREF.REC<1>='' THEN   ; * JMK09
                           DELETE F.ZIP.DIV.XREF,OLD.ZIP.DIV.XREF.ID   ; * JMK09
                        END ELSE         ; * JMK09
                           WRITE OLD.ZIP.DIV.XREF.REC ON F.ZIP.DIV.XREF,OLD.ZIP.DIV.XREF.ID          ; * JMK09
                        END              ; * JMK09
                     END                 ; * JMK09
                  END                    ; * JMK09
                  ZIP.DIV.XREF.ID=DIV.REC<1>       ; * JMK09
                  READ ZIP.DIV.XREF.REC FROM F.ZIP.DIV.XREF,ZIP.DIV.XREF.ID ELSE ZIP.DIV.XREF.REC=''           ; *JMK09
                  IF DIV.REC<7>#'I' THEN           ; * JMK09
                     LOCATE DIV.ID IN ZIP.DIV.XREF.REC<1> BY 'AL' SETTING DPOS ELSE        ; * JMK09
                        INS DIV.ID BEFORE ZIP.DIV.XREF.REC<1,DPOS>     ; * JMK09
                        INS DIV.REC<11> BEFORE ZIP.DIV.XREF.REC<2,DPOS>          ; * JMK09
                        WRITE ZIP.DIV.XREF.REC ON F.ZIP.DIV.XREF,ZIP.DIV.XREF.ID           ; * JMK09
                     END                 ; * JMK09
                  END                    ; * JMK09
                  IF OLD.DIV.REC<7>#'I' AND DIV.REC<7>='I' THEN
                     IF ACCTS#'' THEN
                        SLSMAN.EMAIL=''
                        ACCT.MGR=''
                        ACCT.MGR.EMAIL=''
                        OPEN '','AR.SLSMAN.1000.1' TO F.SLSMAN THEN
                           SECOND.SALESMAN.ID=CLIENT.REC<115>
                           IF SECOND.SALESMAN.ID#'' THEN
                              READ SALESMAN.REC FROM F.SLSMAN,SECOND.SALESMAN.ID THEN
                                 SLSMAN.EMAIL=SALESMAN.REC<8>
                              END
                           END
                           ACCT.MGR = CLIENT.REC<264>        ; * RLM01
                           IF ACCT.MGR # '' THEN
                              READ ACCT.MGR.REC FROM F.SLSMAN,ACCT.MGR THEN
                                 ACCT.MGR.EMAIL = ACCT.MGR.REC<8>      ; * NPR16
                              END
                           END
                        END
                        MVIN=''
                        SUBJ='Division has been marked to inactive with EDI attached'
                        TEXT=USER:' marked division ':DIV.ID:' for client "':CLIENT.ID:' ':CLIENT.NAME:'" to inactive. The following EDI Parcel Account(s) will need to be either removed or re-directed to an active division (Menu path 15-2-1).'
                        NUM.OF.ITEMS=DCOUNT(ACCTS<1>,@VM)
                        TEXT<1,-1>=' '
                        TEXT<1,-1>="Carr# Carrier Name      Acct #   "
                        FOR XX = 1 TO NUM.OF.ITEMS
                           TEXT<1,-1>=ACCTS<1,XX>
                        NEXT XX
                        MVIN=''
                        MVIN<1,-1>='JDarwin@afs.net'
                        MVIN<1,-1>='MMcKay@afs.net'
                        IF ACCT.MGR.EMAIL#'' OR ACCT.MGR.EMAIL#'NONE' THEN
                           MVIN<1,-1>=ACCT.MGR.EMAIL
                        END
                        IF SLSMAN.EMAIL#'' OR SLSMAN.EMAIL#'NONE' THEN
                           MVIN<1,-1>=SLSMAN.EMAIL
                        END
                        MVIN<2>='DFriend@afs.net'
                        MVIN<4>='AFS@afs.net'
                        MVIN<5>=SUBJ
                        MVIN<6>=TEXT
                        CALL SENDMAIL(MVIN,MVOUT)
                     END
                  END
                  IF OLD.DIV.REC<1>#DIV.REC<1> THEN

                  END
                  SQLVIN=''              ; * JMK06
                  SQLVIN<1>=USER         ; * JMK06
                  SQLVIN<2>=CLIENT.ID    ; * JMK06
                  SQLVIN<3>=DIV.ID       ; * JMK06
                  SQLVOUT=''             ; * JMK06
                  CALL UPD.SQL.DIV.SUB(SQLVIN,SQLVOUT,CLIENT.REC,DIV.REC)        ; * JMK06
                  GO GET.DIV
               CASE QI='N'
                  LN=0
                  GO GET.DIV
               CASE 1
                  GO UPDATE.INFO
            END CASE
         END

      END
      CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      GO GET.DIV
      RETURN

************************************************************************
DISPLAY.SCREEN:***
************************************************************************
      CRT @(0,6) :' 1 Div Descr....'
      CRT @(0,7) :' 2 Address 1....'
      CRT @(0,8) :' 3 Address 2....'
      CRT @(0,9) :' 4 Zip..........          5 State'
      CRT @(0,10) :' 6 City.........'
      CRT @(0,11) :' 7 Div. Phone...'
      CRT @(0,12) :' 8 Div. Fax.....'
      CRT @(0,13) :' 9 Contact......'
      CRT @(42,6) :'10 Status.................'
      CRT @(42,7) :'11 Substitute Division....'
      CRT @(42,8) :'12 Group Code.............'
      CRT @(42,9) :'13 Cross Ref Code.........'
      CRT @(42,10):'14 Email addresses........'
      CRT @(42,11):'15 Comments'
      CRT @(42,12):'16 Region.................'    ; * JMK07
      CRT @(42,13):'17 Area...................'
      CRT @(42,14):'18 Status Effective Date..'    ; * TAG01
      CRT @(42,15):'19 UPS pdf email address..'    ; * GRB03
      RETURN

************************************************************************
DISPLAY.DATA:***
************************************************************************
      CRT @(17,6) :DIV.DESC'L#25'
      CRT @(17,7) :ADDR1'L#25'
      CRT @(17,8) :ADDR2'L#25'
      CRT @(17,9) :DIV.ZIP'L#5'
      CRT @(34,9) :DIV.STATE'L#2'
      CRT @(17,10):DIV.CITY'L#25'
      CRT @(17,11):'(':DIV.PHONE[1,3]:')':DIV.PHONE[4,3]:'-':DIV.PHONE[7,4]
      CRT @(17,12):'(':DIV.FAX[1,3]:')':DIV.FAX[4,3]:'-':DIV.FAX[7,4]
      CRT @(17,13):CONTACT'L#22'
      STATUS='-Undefined'
      IF STATUS.FLG='I' THEN STATUS='-Inactive'
      IF STATUS.FLG='A' THEN STATUS='-Active'
      CRT @(69,6):STATUS.FLG:STATUS:@(-4):
      CRT @(69,7) :SUBST.DIV'R%5'
      CRT @(69,8) :GROUP.CODE'L#10'
      CRT @(69,9) :CROSS.REF.CODE'L#10'
      EMAIL.TMP='No'                     ; * JMK01
      IF DIV.REC<9>#'' THEN EMAIL.TMP='Yes'        ; * JMK01
      IF DIV.REC<12>#'' THEN EMAIL.TMP='Yes'       ; * JMK01
      IF DIV.REC<13>#'' THEN EMAIL.TMP='Yes'       ; * JMK01
      IF DIV.REC<27>#'' THEN EMAIL.TMP='Yes'       ; * JMK01
      IF DIV.REC<28>#'' THEN EMAIL.TMP='Yes'       ; * JMK01
      IF DIV.REC<29>#'' THEN EMAIL.TMP='Yes'       ; * JMK01
      CRT @(69,10):EMAIL.TMP'L#4'
      CRT @(69,12):REGION'L#10'          ; * JMK07
      CRT @(69,13):AREA'L#10'
      CRT @(69,14):OCONV(EFF.DATE,'D2/')           ; * TAG01
      IF ACCTS#'' THEN
         NUM.OF.ITEMS=DCOUNT(ACCTS<1>,@VM)
         IF NUM.OF.ITEMS GT 5 THEN
            CRT @(0,16):"Carr# Carrier Name      Acct #   "
            CRT @(40,16):"Carr# Carrier Name      Acct #   "
         END ELSE
            CRT @(0,16):"Carr# Carrier Name      Acct #   "
         END
         FOR XX = 1 TO NUM.OF.ITEMS
            BEGIN CASE
               CASE XX = 10
                  CRT @(40,20):'More Data                              '
               CASE XX > 5 AND XX < 10
                  CRT @(40,11+XX):ACCTS<1,XX>
               CASE XX > 10
                  NULL
               CASE 1
                  CRT @(0,15+XX):ACCTS<1,XX>
            END CASE
         NEXT XX
      END
      RETURN

************************************************************************
ASSIGN.DATA:
************************************************************************
      DIV.DESC=DIV.REC<11>
      ADDR1 = DIV.REC<14>
      ADDR2 = DIV.REC<15>
      DIV.ZIP = DIV.REC<1>
      DIV.CITY = DIV.REC<16>
      DIV.STATE = DIV.REC<17>
      DIV.PHONE = DIV.REC<18>
      DIV.FAX = DIV.REC<19>
      SUBST.DIV = DIV.REC<20>
      STATUS.FLG=DIV.REC<7>
      GROUP.CODE = DIV.REC<21>
      CROSS.REF.CODE = DIV.REC<8>
      EMAIL.TO= DIV.REC<9>
      COMMENTS = DIV.REC<22>
      CONTACT= DIV.REC<23>
      REGION = DIV.REC<45>               ; * JMK07
      AREA = DIV.REC<46>
      EFF.DATE = DIV.REC<47>             ; * TAG01
      ACCTS=''
      STMT='SSELECT EDI.CAR.ACNT.XREF WITH 1 = "':CLIENT.ID:'" AND WITH 2 = "':DIV.ID:'" '
      EXECUTE STMT CAPTURING OUTPUT
      LOOP
         READNEXT ID ELSE ID=""
      UNTIL ID="" DO
         CARRIER.ID=FIELD(ID,'*',1)
         READV CARRIER.NAME FROM F.CARRIERS,CARRIER.ID,1 ELSE CARRIER.NAME='Not on File'
         ACCTS<1,-1>=CARRIER.ID:' ':CARRIER.NAME'L#17':' ':FIELD(ID,'*',2)'L#15'
      REPEAT
      RETURN
***************************************************
UPDATE.LOG:
****************************************************
      IF OLD.DIV.REC # DIV.REC THEN
         SYS.TME = TIME()
         PROC.DTE =DATE()
         VIN=""
         VOUT=""
         VIN<1> = PROC.DTE
         VIN<2> = SYS.TME
         VIN<6> = USER
         VIN<10> = CH.NUM
         VIN<8> = "FB.1.4.DIV"
         VIN<11> = "DVCD":"*":CLIENT.ID:"*":DIV.ID
         ATT.CNT = DCOUNT(DIV.REC,@AM)
         FOR I = 1 TO ATT.CNT
            IF DIV.REC<I> # OLD.DIV.REC<I> THEN
               VIN<3> = I
               VIN<4> = OLD.DIV.REC<I>
               VIN<5> = DIV.REC<I>
               CALL UPD.AUD.LOG(VIN,VOUT)
            END
         NEXT I
      END
      * SOURCE.FILE = VIN<9>
      RETURN
   END
