*******************************************************************************
*
*******************************************************************************
* 041014 - JMK01 - Project#408 - Import SLC Parcel Data Into Freight Payment application
* 050614 - JMK02 - Add Endress & Hauser to import list of clients
* 060314 - JMK03 - SysAid#9965 - Client issue with FedEx data in billing file pushed to SHV
* 060914 - JMK04 - Add Performance Radiator to import list of clients
* 061014 - JMK05 - Get division from Account number index file if needed
* 062014 - JMK06 - Add next batch of SLC clients to import
* 062014 - DRF01 - SysAid 10293 - 20% markup
* 070714 - JMK07 - Add expense codes for Performance Radiator
* 081514 - JMK08 - Add slash bills for additional billing efforts not marked
* 100614 - JMK09 - SysAid#12604 - Tennsco - Pay Parcel Carriers
* 100614 - JMK10 - SysAid#12630 - invoice amount incorrect
* 102414 - JMK11 - SysAid#13084 - URGENT Concentric Rockford - Turn on data transer and freight payment
* 120314 - JMK12 - SysAid#14047 - We need to pay parcel for Kemper Systems
* 010515 - DRF02 - SysAid 14246 - 3% markup above frt cost for client
*                  05294 - Atlas Bolt & Screw
* 010915 - JMK13 - SysAid#14599 - LaJuanyka Johnson
* 011415 - JMK14 - SysAid#14692 - Flame Technologies
* 021815 - JMK15 - SysAid#15186 - Legacy SHV Account ( Client #1194)
* 030415 - DRF03 - SysAid 15722 - Changed the 3% marked to be for LTL only
*                  for 05294 Atlas Bolt & Screw
*******************************************************************************
INITIALIZE.VARIABLES: *
      OTODAY=OCONV(DATE(),'D4/')
      PROG.NAME='LOAD.PCL.DATA'
      CEOL=@(-4)
      CALL GET.USER(USER)
      CALL CHANNEL(CH.NUM)
      BEGIN CASE
         CASE USER='LJJOHNSON'           ; * JMK13
         CASE USER='KLAGARS'
         CASE USER='MARY'
         CASE USER='MKERBOW'
         CASE USER='MYRA'
         CASE USER='DAVID'
         CASE 1
            CALL ELINE('UNAUTHORIZED ACCESS')
            STOP
      END CASE
*     IF USER='MKERBOW' THEN DEBUG
      RPT.SVC.PREFIX=CHAR(239):CHAR(187):CHAR(191)
      BAD.CARRIER.HDR='Carrier#''L#10 ':'Name''L#35 ':'Status''L#6'
      GOSUB OPEN.FILES
      PREV.TEST=''
START.PREPROCESS.LOOP: *
      IF USER#'MKERBOW' AND USER#'DAVID' THEN
         PCL.ID='SLC_PD_':FIELD(OTODAY,'/',3):FIELD(OTODAY,'/',1):FIELD(OTODAY,'/',2):'.TXT'
         READ TEST FROM F.PCL,PCL.ID THEN
            TEST.NVAL=DCOUNT(TEST,@AM)
            IF TEST.NVAL<5 THEN
               MVIN=''
               SUBJ='SLC Parcel Freight Payment Data File Corrupt'
               TEXT=USER:' attempted to import the SLC Parcel Freight Payment Data file '
               TEXT<1,-1>='which appears to be corrupt '
               TEXT<1,-1>='on ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
               TEXT<1,-1>=' '
               TEXT<1,-1>='Please review and advise when to continue.'
               TEXT<1,-1>=' '
               MVIN=''
               MVIN<1,-1>='MButts@afs.net'
               MVIN<2,-1>='AMoulding@afs.net'
               MVIN<3,-1>='DFriend@afs.net'
               MVIN<3,-1>='MKerbow@afs.net'
               MVIN<3,-1>='KCrowley@afs.net'
               MVIN<3,-1>='RJanagathan@afs.net'
               MVIN<4>='AFS'
               MVIN<5>=SUBJ
               MVIN<6>=TEXT
               CALL SENDMAIL(MVIN,MVOUT)
               CALL ELINE('Parcel Freight Payment Data File is not available to import!')
               ABORT
            END
            IF TEST#PREV.TEST THEN
               CRT @(0,22):PCL.ID:' File is being received...please wait...':CEOL:
               PREV.TEST=TEST
               SLEEP 60
               CRT @(0,22):CEOL:
               GO START.PREPROCESS.LOOP
            END
         END ELSE
            READ TEST FROM F.PCL.HIST,PCL.ID ELSE
               MVIN=''
               SUBJ='SLC Parcel Freight Payment Data File Not Available for Import'
               TEXT=USER:' attempted to import the SLC Parcel Freight Payment Data file '
               TEXT<1,-1>='which does not exist '
               TEXT<1,-1>='on ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
               TEXT<1,-1>=' '
               TEXT<1,-1>='Please review and advise when to continue.'
               TEXT<1,-1>=' '
               MVIN=''
               MVIN<1,-1>='MButts@afs.net'
               MVIN<2,-1>='AMoulding@afs.net'
               MVIN<3,-1>='DFriend@afs.net'
               MVIN<3,-1>='MKerbow@afs.net'
               MVIN<3,-1>='KCrowley@afs.net'
               MVIN<3,-1>='RJanagathan@afs.net'
               MVIN<4>='AFS'
               MVIN<5>=SUBJ
               MVIN<6>=TEXT
               CALL SENDMAIL(MVIN,MVOUT)
               CALL ELINE('Parcel Freight Payment Data File is not available to import!')
               ABORT
            END
         END
      END
      BAD.CARRIER.LIST=''
      PCL.STMT='SSELECT SLC.PCL.DATA.01194 WITH @ID = "SLC_PD_]" AND WITH @ID = "[.TXT"'
      EXECUTE PCL.STMT RTNLIST PCL.LIST CAPTURING PCL.RESULTS
      PCL.EOF=0
      PCL.CNT=0
      PCL.PER=''
      PCL.TCNT=@SELECTED
      LOOP
         READNEXT PCL.ID FROM PCL.LIST ELSE PCL.EOF=1
      UNTIL PCL.EOF DO
         PCL.CNT+=1
         CALL PROG.BAR(20,PCL.CNT,PCL.TCNT,PCL.PER)
READ.PREPROCESS.RECORD: *
         OTODAY=PCL.ID[12,2]:'/':PCL.ID[14,2]:'/':PCL.ID[8,4]
         READ PCL.REC FROM F.PCL,PCL.ID THEN
            PCL.ORG=PCL.REC
            PCL.REC=CHANGE(PCL.REC,CHAR(9),@VM)
            IF PCL.REC[1,3]=RPT.SVC.PREFIX THEN
               LREC=LEN(PCL.REC)
               PCL.REC=PCL.REC[4,LREC]
            END
            IMP.NATT=DCOUNT(PCL.REC,@AM)
            IMP.PER=''
            FOR IMP.ATT=1 TO IMP.NATT
               CALL PROG.BAR(22,IMP.ATT,IMP.NATT,IMP.PER)
               PCL.LINE=TRIM(PCL.REC<IMP.ATT>)
               IF PCL.LINE='' THEN GO NEXT.PRE.ATT
               IF PCL.LINE=' ' THEN GO NEXT.PRE.ATT
               IMP.REC=PCL.LINE
               GOSUB DEFINE.IMPORT.FIELDS
               GOSUB READ.CLIENT.RECORD
               BEGIN CASE
                  CASE CLIENT.ID='01194'           ; * Hatfield & Company, Inc ; * JMK15
                  CASE CLIENT.ID='01468'           ; * The Shepherd Color ; * JMK02
                  CASE CLIENT.ID='02705'           ; * Pacific Gas & Electric ; * JMK01
                  CASE CLIENT.ID='04172'           ; * Biotronik, Inc. ; * JMK01
                  CASE CLIENT.ID='04635'           ; * Micro Systems Engineering, Inc. ; * JMK01
                  CASE CLIENT.ID='04744'           ; * Sylvane ; * JMK06
                  CASE CLIENT.ID='04771'           ; * FFR - DSI, Inc. ; * JMK01
                  CASE CLIENT.ID='04774'           ; * Northern Power Systems, Inc. ; * JMK06
                  CASE CLIENT.ID='04791'           ; * CHR Hansen ; * JMK01
                  CASE CLIENT.ID='04806'           ; * Northern Power Utility ; * JMK06
                  CASE CLIENT.ID='04811'           ; * Aurora Parts ; * JMK01
                  CASE CLIENT.ID='04866'           ; * Endress & Hauser ; * JMK02
                  CASE CLIENT.ID='04923'           ; * Jetstream ; * JMK01
                  CASE CLIENT.ID='04924'           ; * Guzzler ; * JMK01
                  CASE CLIENT.ID='04925'           ; * Vactor Guzzler ; * JMK01
                  CASE CLIENT.ID='04926'           ; * FS Deport ; * JMK01
                  CASE CLIENT.ID='04927'           ; * Elgin Sweeper ; * JMK01
                  CASE CLIENT.ID='04928'           ; * FS Solutions ; * JMK01
                  CASE CLIENT.ID='04934'           ; * LMC Right Start ; * JMK06
                  CASE CLIENT.ID='04957'           ; * Performance Radiator ; * JMK04
                  CASE CLIENT.ID='05111'           ; * Concentric Rockford ; * JMK11
                  CASE CLIENT.ID='05116'           ; * Kemper Systems ; * JMK12
                  CASE CLIENT.ID='05118'           ; * Tennsco ; * JMK09
                  CASE CLIENT.ID='05233'           ; * Flame Technologies ; * JMK14
                  CASE 1 ; GO NEXT.PRE.ATT
               END CASE
               GOSUB READ.CARRIER.RECORD
               IF CARRIER.REC<89>#'A' THEN
                  IF BAD.CARRIER.LIST='' THEN
                     BAD.CARRIER.LIST=BAD.CARRIER.HDR
                  END
                  BAD.CARRIER.HDR='Carrier#''L#10 ':'Name''L#35 ':'Status''L#6'
                  BAD.CARRIER.DTL=CARRIER.ID'L#10 ':CARRIER.REC<1>'L#35 ':CARRIER.REC<89>'L#6'
                  BAD.CARRIER.LIST<-1>=BAD.CARRIER.DTL
               END
NEXT.PRE.ATT: *
            NEXT IMP.ATT
         END
NEXT.PREPROCESS: *
      REPEAT
      IF BAD.CARRIER.LIST#'' THEN
         DEBUG
         MVIN=''
         SUBJ='Inactive Carrier(s) for SLC Parcel Freight Payment Import File'
         TEXT=USER:' attempted to import the SLC Parcel Freight Payment file '
         TEXT<1,-1>='that contain carrier(s) with an inactive status '
         TEXT<1,-1>='on ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
         TEXT<1,-1>=' '
         TEXT<1,-1>='Please review and advise the mapped carrier number to use in order to correct.'
         TEXT<1,-1>=' '
         TEXT<1,-1>=CHANGE(BAD.CARRIER.LIST,@AM,@VM)
         MVIN=''
         MVIN<1,-1>='MButts@afs.net'
         MVIN<2,-1>='AMoulding@afs.net'
         MVIN<3,-1>='DFriend@afs.net'
         MVIN<3,-1>='MKerbow@afs.net'
         MVIN<4>='AFS'
         MVIN<5>=SUBJ
         MVIN<6>=TEXT
         CALL SENDMAIL(MVIN,MVOUT)
         ABORT
      END
START.PROCESSING.LOOP: *
      IF USER#'MKERBOW' THEN
         PCL.ID='SLC_PD_':FIELD(OTODAY,'/',3):FIELD(OTODAY,'/',1):FIELD(OTODAY,'/',2):'.TXT'
         READ TEST FROM F.PCL,PCL.ID ELSE
            CALL ELINE('Parcel Data File is not available to import!')
            ABORT
         END
      END
      DEBUG
      PCL.STMT='SSELECT SLC.PCL.DATA.01194 WITH @ID = "SLC_PD_]" AND WITH @ID = "[.TXT"'
      EXECUTE PCL.STMT RTNLIST PCL.LIST CAPTURING PCL.RESULTS
      PCL.EOF=0
      PCL.CNT=0
      PCL.PER=''
      PCL.TCNT=@SELECTED
      LOOP
         READNEXT PCL.ID FROM PCL.LIST ELSE PCL.EOF=1
      UNTIL PCL.EOF DO
         PCL.CNT+=1
         CALL PROG.BAR(20,PCL.CNT,PCL.TCNT,PCL.PER)
READ.IMPORT.RECORD: *
         OTODAY=PCL.ID[12,2]:'/':PCL.ID[14,2]:'/':PCL.ID[8,4]
         READ PCL.REC FROM F.PCL,PCL.ID THEN
            PCL.ORG=PCL.REC
            PCL.REC=CHANGE(PCL.REC,CHAR(9),@VM)
            IF PCL.REC[1,3]=RPT.SVC.PREFIX THEN
               LREC=LEN(PCL.REC)
               PCL.REC=PCL.REC[4,LREC]
            END
            IMP.NATT=DCOUNT(PCL.REC,@AM)
            IMP.PER=''
            FOR IMP.ATT=1 TO IMP.NATT
               CALL PROG.BAR(22,IMP.ATT,IMP.NATT,IMP.PER)
*              CRT @(0,19):IMP.ATT'R%6'
               PCL.LINE=TRIM(PCL.REC<IMP.ATT>)
               IF PCL.LINE='' THEN GO NEXT.IMP.ATT
               IF PCL.LINE=' ' THEN GO NEXT.IMP.ATT
               IMP.REC=PCL.LINE
               GOSUB DEFINE.IMPORT.FIELDS
               GOSUB READ.CLIENT.RECORD
               BEGIN CASE
                  CASE CLIENT.ID='01194'           ; * Hatfield & Company, Inc ; * JMK15
                  CASE CLIENT.ID='01468'           ; * The Shepherd Color ; * JMK02
                  CASE CLIENT.ID='02705'           ; * Pacific Gas & Electric ; * JMK01
                  CASE CLIENT.ID='04172'           ; * Biotronik, Inc. ; * JMK01
                  CASE CLIENT.ID='04635'           ; * Micro Systems Engineering, Inc. ; * JMK01
                  CASE CLIENT.ID='04744'           ; * Sylvane ; * JMK06
                  CASE CLIENT.ID='04771'           ; * FFR - DSI, Inc. ; * JMK01
                  CASE CLIENT.ID='04774'           ; * Northern Power Systems, Inc. ; * JMK06
                  CASE CLIENT.ID='04791'           ; * CHR Hansen ; * JMK01
                  CASE CLIENT.ID='04806'           ; * Northern Power Utility ; * JMK06
                  CASE CLIENT.ID='04811'           ; * Aurora Parts ; * JMK01
                  CASE CLIENT.ID='04866'           ; * Endress & Hauser ; * JMK02
                  CASE CLIENT.ID='04923'           ; * Jetstream ; * JMK01
                  CASE CLIENT.ID='04924'           ; * Guzzler ; * JMK01
                  CASE CLIENT.ID='04925'           ; * Vactor Guzzler ; * JMK01
                  CASE CLIENT.ID='04926'           ; * FS Deport ; * JMK01
                  CASE CLIENT.ID='04927'           ; * Elgin Sweeper ; * JMK01
                  CASE CLIENT.ID='04928'           ; * FS Solutions ; * JMK01
                  CASE CLIENT.ID='04934'           ; * LMC Right Start ; * JMK06
                  CASE CLIENT.ID='04957'           ; * Performance Radiator ; * JMK04
                  CASE CLIENT.ID='05111'           ; * Concentric Rockford ; * JMK11
                  CASE CLIENT.ID='05116'           ; * Kemper Systems ; * JMK12
                  CASE CLIENT.ID='05118'           ; * Tennsco ; * JMK09
                  CASE CLIENT.ID='05233'           ; * Flame Technologies ; * JMK14
                  CASE 1 ; GO NEXT.IMP.ATT
               END CASE
               GOSUB READ.CARRIER.RECORD
               GOSUB CREATE.ADDITIONAL.FIELDS
               GOSUB WRITE.FB.REC
NEXT.IMP.ATT: *
            NEXT IMP.ATT
            WRITE PCL.ORG ON F.PCL.HIST,PCL.ID
            DELETE F.PCL,PCL.ID
         END
NEXT.IMPORT: *
      REPEAT
      STOP
OPEN.FILES: *
      OPEN '','SLC.PCL.DATA.01194' TO F.PCL ELSE
         CALL OPEN.ABORT('SLC.PCL.DATA.01194',PROG.NAME)
      END
      OPEN '','SLC.PCL.DATA.HIST.01194' TO F.PCL.HIST ELSE
         CALL OPEN.ABORT('SLC.PCL.DATA.HIST.01194',PROG.NAME)
      END
      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         CALL OPEN.ABORT('CLIENTS',PROG.NAME)
      END
      OPEN '','CARRIERS' TO F.CARRIERS ELSE
         CALL OPEN.ABORT('CARRIERS',PROG.NAME)
      END
      OPEN '','FB.TABLES' TO F.TABLES ELSE
         CALL OPEN.ABORT('FB.TABLES',PROG.NAME)
      END
      OPEN '','FB.BILLS.CRX' TO F.CRX ELSE
         CALL OPEN.ABORT('FB.BILLS.CRX',PROG.NAME)
      END
      OPEN '','ZIPS.CODES' TO F.ZIPS ELSE
         CALL OPEN.ABORT('ZIPS.CODES',PROG.NAME)
      END
      OPEN '','FED.INV.XREF' TO F.INV.XREF ELSE
         CALL OPEN.ABORT("FED.INV.XREF",PROG.NAME)
      END
      OPEN '','EDI.CAR.ACNT.XREF' TO F.ECAX ELSE
         CALL OPEN.ABORT("EDI.CAR.ACNT.XREF",PROG.NAME)
      END
      RETURN

DEFINE.IMPORT.FIELDS: *
      ImpAFSCarrierID=TRIM(IMP.REC<1,1>)
      ImpAFSClientNumber=TRIM(IMP.REC<1,2>)
      ImpInvoiceNumber=TRIM(IMP.REC<1,3>)
      ImpInvoiceDate=ICONV(FIELD(TRIM(IMP.REC<1,4>),' ',1),'D')
      ImpAccountNumber=TRIM(IMP.REC<1,5>)
      ImpLeadTrackingNumber=TRIM(IMP.REC<1,6>)
      ImpTrackingNumber=TRIM(IMP.REC<1,7>)
      ImpShipdate=ICONV(FIELD(TRIM(IMP.REC<1,8>),' ',1),'D')
      ImpServiceName=TRIM(IMP.REC<1,9>)
      ImpIncentive=TRIM(IMP.REC<1,10>)
      TEST.NUM=TRIM(IMP.REC<1,11>)
      GOSUB CONVERT.NUMBER
      ImpNetDue=ICONV(TEST.NUM,'MR2,')
      TEST.NUM=TRIM(IMP.REC<1,12>)
      GOSUB CONVERT.NUMBER
      ImpRefundAmount=ICONV(TEST.NUM,'MR2,')
      TEST.NUM=TRIM(IMP.REC<1,13>)
      GOSUB CONVERT.NUMBER
      ImpTotalInvoiceAmount=ICONV(TEST.NUM,'MR2,')
      ImpOriginalWeight=TRIM(IMP.REC<1,14>)
      ImpBilledWeight=TRIM(IMP.REC<1,15>)
      ImpCreditReason=TRIM(IMP.REC<1,16>)
      ImpControlNumber=TRIM(IMP.REC<1,17>)
      ImpGLCode=TRIM(IMP.REC<1,18>)
      ImpPieces=TRIM(IMP.REC<1,19>)
      ImpCarrierZone=TRIM(IMP.REC<1,20>)
      ImpBillingOption=TRIM(IMP.REC<1,21>)
      ImpIsPackage=TRIM(IMP.REC<1,22>)
      ImpFreightMode=TRIM(IMP.REC<1,23>)
      ImpEntryType=TRIM(IMP.REC<1,24>)
      ImpTransactionCode=TRIM(IMP.REC<1,25>)
      ImpChargeClassificationCode=TRIM(IMP.REC<1,26>)
      ImpChargeCategoryCode=TRIM(IMP.REC<1,27>)
      ImpChargeDescriptionCode=TRIM(IMP.REC<1,28>)
      ImpSenderCompany=TRIM(IMP.REC<1,29>)
      ImpSenderName=TRIM(IMP.REC<1,30>)
      ImpSenderAddress1=TRIM(IMP.REC<1,31>)
      ImpSenderAddress2=TRIM(IMP.REC<1,32>)
      ImpSenderCity=TRIM(IMP.REC<1,33>)
      ImpSenderState=TRIM(IMP.REC<1,34>)
      ImpSenderZip=TRIM(IMP.REC<1,35>)
      ImpSenderCountry=TRIM(IMP.REC<1,36>)
      ImpReceiverCompany=TRIM(IMP.REC<1,37>)
      ImpReceiverName=TRIM(IMP.REC<1,38>)
      ImpReceiverAddress1=TRIM(IMP.REC<1,39>)
      ImpReceiverAddress2=TRIM(IMP.REC<1,40>)
      ImpReceiverCity=TRIM(IMP.REC<1,41>)
      ImpReceiverState=TRIM(IMP.REC<1,42>)
      ImpReceiverZip=TRIM(IMP.REC<1,43>)
      ImpReceiverCountry=TRIM(IMP.REC<1,44>)
      ImpDeclaredValue=TRIM(IMP.REC<1,45>)
      ImpDimLength=TRIM(IMP.REC<1,46>)
      ImpDimwidth=TRIM(IMP.REC<1,47>)
      ImpDimHeight=TRIM(IMP.REC<1,48>)
      ImpTransitDays=TRIM(IMP.REC<1,49>)
      ImpGroundTransitDays=TRIM(IMP.REC<1,50>)
      ImpNotes=TRIM(IMP.REC<1,51>)
      ImpDepartment=TRIM(IMP.REC<1,52>)
      ImpReceivedBy=TRIM(IMP.REC<1,53>)
      ImpCorrectedAddress1=TRIM(IMP.REC<1,54>)
      ImpCorrectedAddress2=TRIM(IMP.REC<1,55>)
      ImpCorrectedCity=TRIM(IMP.REC<1,56>)
      ImpCorrectedState=TRIM(IMP.REC<1,57>)
      ImpCorrectedZip=TRIM(IMP.REC<1,58>)
      ImpDimDivisor=TRIM(IMP.REC<1,59>)
      ImpThirdPartyName=TRIM(IMP.REC<1,60>)
      ImpThirdPartyCompanyName=TRIM(IMP.REC<1,61>)
      ImpThirdPartyAddress1=TRIM(IMP.REC<1,62>)
      ImpThirdPartyAddress2=TRIM(IMP.REC<1,63>)
      ImpThirdPartyCity=TRIM(IMP.REC<1,64>)
      ImpThirdPartyState=TRIM(IMP.REC<1,65>)
      ImpThirdPartyZip=TRIM(IMP.REC<1,66>)
      ImpIsInterNational=TRIM(IMP.REC<1,67>)
      ImpGSDepartmentNumber=TRIM(IMP.REC<1,68>)
      ImpReceiverAccount=TRIM(IMP.REC<1,69>)
      ImpPURecordNumber=TRIM(IMP.REC<1,70>)
      ImpCustomerDeptNumber=TRIM(IMP.REC<1,71>)
      ImpCustomerPoNumber=TRIM(IMP.REC<1,72>)
      ImpCustomerInvoiceNumber=TRIM(IMP.REC<1,73>)
      ImpShipDevice=TRIM(IMP.REC<1,74>)
      ImpMisc=TRIM(IMP.REC<1,75>)
      ImpBillingSource=TRIM(IMP.REC<1,76>)
      ImpInvoiceTypeCode=TRIM(IMP.REC<1,77>)
      ImpPackageType=TRIM(IMP.REC<1,78>)
      ImpNewRate=TRIM(IMP.REC<1,79>)
      ImpOldRate=TRIM(IMP.REC<1,80>)
      ImpPackageReference1=TRIM(IMP.REC<1,81>)
      ImpPackageReference2=TRIM(IMP.REC<1,82>)
      ImpPackageReference3=TRIM(IMP.REC<1,83>)
      ImpPackageReference4=TRIM(IMP.REC<1,84>)
      ImpPackageReference5=TRIM(IMP.REC<1,85>)
      ImpCurrencyType=TRIM(IMP.REC<1,86>)
      ImpDenyReason=TRIM(IMP.REC<1,87>)
      ImpOriginalWeightUnit=TRIM(IMP.REC<1,88>)
      ImpBilledWeightUnit=TRIM(IMP.REC<1,89>)
      ImpRMANumber=TRIM(IMP.REC<1,90>)
      RETURN

READ.CLIENT.RECORD: *
      CLIENT.ID=ImpAFSClientNumber'R%5'
      READ CLIENT.REC FROM F.CLIENTS,CLIENT.ID ELSE CLIENT.REC=''

OPEN.CLIENT.FILES: *
      OPEN '','FB.BILLS,':CLIENT.ID TO F.BILLS ELSE
         CALL OPEN.ABORT('FB.BILLS,':CLIENT.ID,PROG.NAME)
      END
      OPEN '','FB.BILLS.HIST,':CLIENT.ID TO F.HIST ELSE
         CALL OPEN.ABORT('FB.BILLS.HIST,':CLIENT.ID,PROG.NAME)
      END
      OPEN '','FB.PROC.DATE.XREF,':CLIENT.ID TO F.FPX ELSE
         CALL OPEN.ABORT('FB.PROC.DATE.XREF,':CLIENT.ID,PROG.NAME)
      END
      OPEN '','ZIP.DIV.XREF,':CLIENT.ID TO F.ZDX ELSE
         CALL OPEN.ABORT('ZIP.DIV.XREF,':CLIENT.ID,PROG.NAME)
      END
      RETURN

READ.CARRIER.RECORD: *
      BEGIN CASE
         CASE ImpAFSCarrierID='1075' AND ImpServiceName='FedEx Ground'
            CARRIER.ID='01075'
         CASE ImpAFSCarrierID='1075' AND ImpServiceName='FedEx Home Delivery (FedEx Ground Service)'
            CARRIER.ID='01075'
         CASE ImpAFSCarrierID='01075'
            CARRIER.ID='00015'
         CASE 1
            CARRIER.ID=ImpAFSCarrierID'R%5'
      END CASE
      BEGIN CASE
         CASE CARRIER.ID='06346' ; CARRIER.ID='17465'
         CASE CARRIER.ID='25985' ; CARRIER.ID='00547'
         CASE CARRIER.ID='26016' ; CARRIER.ID='20114'
         CASE CARRIER.ID='26042' ; CARRIER.ID='00044'
         CASE CARRIER.ID='26093' ; CARRIER.ID='00201'
         CASE CARRIER.ID='26118' ; CARRIER.ID='23074'
         CASE CARRIER.ID='26125' ; CARRIER.ID='15795'
         CASE CARRIER.ID='26133' ; CARRIER.ID='06875'        ; * JMK@@@ 07/18/14
         CASE CARRIER.ID='26134' ; CARRIER.ID='04854'
         CASE CARRIER.ID='26201' ; CARRIER.ID='10182'
         CASE CARRIER.ID='26203' ; CARRIER.ID='13547'
         CASE CARRIER.ID='26204' ; CARRIER.ID='17465'
         CASE CARRIER.ID='26205' ; CARRIER.ID='08735'
         CASE CARRIER.ID='26206' ; CARRIER.ID='19982'
         CASE CARRIER.ID='26208' ; CARRIER.ID='08441'
         CASE CARRIER.ID='26211' ; CARRIER.ID='00387'
         CASE CARRIER.ID='26212' ; CARRIER.ID='10093'
         CASE CARRIER.ID='26214' ; CARRIER.ID='21126'
         CASE CARRIER.ID='26215' ; CARRIER.ID='15147'
         CASE CARRIER.ID='26217' ; CARRIER.ID='03783'
         CASE CARRIER.ID='26218' ; CARRIER.ID='09120'
         CASE CARRIER.ID='26231' ; CARRIER.ID='15242'
         CASE CARRIER.ID='26240' ; CARRIER.ID='12053'

      END CASE
      READ CARRIER.REC FROM F.CARRIERS,CARRIER.ID ELSE CARRIER.REC=''
      UPS.CAR=0
      FEDEX.CAR=0
      IF CARRIER.ID='00015' THEN FEDEX.CAR=1
      IF CARRIER.ID='00041' THEN UPS.CAR=1
      IF CARRIER.ID='01075' THEN FEDEX.CAR=1
      IF CARRIER.ID='01312' THEN UPS.CAR=1
      IF CARRIER.ID='03042' THEN UPS.CAR=1
      IF CARRIER.ID='12810' THEN UPS.CAR=1
      RETURN

CREATE.ADDITIONAL.FIELDS: *
      LCC.ARRAY=''
      BILL.DATE=ImpShipdate
      IN.OUT=ImpBillingOption[1,1]
      IF IN.OUT='U' THEN IN.OUT='O'
      ORIG.ZIP=ImpSenderZip
      IF NUM(ORIG.ZIP) AND LEN(ORIG.ZIP)>5 THEN
         ORIG.ZIP=ORIG.ZIP[1,5]
      END
      READV ORIG.COUNTRY.CD FROM F.ZIPS,ORIG.ZIP,3 ELSE ORIG.COUNTRY.CD=''
      DEST.ZIP=ImpReceiverZip
      IF NUM(DEST.ZIP) AND LEN(DEST.ZIP)>5 THEN
         DEST.ZIP=DEST.ZIP[1,5]
      END
      READV DEST.COUNTRY.CD FROM F.ZIPS,DEST.ZIP,3 ELSE DEST.COUNTRY.CD=''
      DIVISION=''
      IF CLIENT.ID='04866' THEN
         DIVISION='02330'
      END
      IF CLIENT.ID='02957' THEN          ; * JMK16
         DIVISION='00002'                ; * JMK16
      END                                ; * JMK16
      IF DIVISION='' THEN
         ECAX.ID=CARRIER.ID:'*':ImpAccountNumber
         READ ECAX.REC FROM F.ECAX,ECAX.ID THEN
            DIVISION=ECAX.REC<2>
         END
      END
      IF DIVISION='' THEN
         BEGIN CASE
            CASE IN.OUT='I'
               READ ZDX.REC FROM F.ZDX,DEST.ZIP THEN
                  DIVISION=ZDX.REC<1>
               END
               IF DIVISION='' THEN
                  READ ZDX.REC FROM F.ZDX,ORIG.ZIP THEN
                     DIVISION=ZDX.REC<1>
                  END
               END
            CASE IN.OUT='O'
               READ ZDX.REC FROM F.ZDX,ORIG.ZIP THEN
                  DIVISION=ZDX.REC<1>
               END
               IF DIVISION='' THEN
                  READ ZDX.REC FROM F.ZDX,DEST.ZIP THEN
                     DIVISION=ZDX.REC<1>
                  END
               END
            CASE IN.OUT='T'
               READ ZDX.REC FROM F.ZDX,ORIG.ZIP THEN
                  DIVISION=ZDX.REC<1>
               END
               IF DIVISION='' THEN
                  READ ZDX.REC FROM F.ZDX,DEST.ZIP THEN
                     DIVISION=ZDX.REC<1>
                  END
               END
         END CASE
         IF DIVISION='' THEN DIVISION='99999'
      END
      EXP.CODE=ImpGLCode
      IF EXP.CODE='' THEN
         IF CLIENT.ID='01468' THEN
            EXP.CODE='99999'
         END
         IF CLIENT.ID='04866' THEN
            EXP.CODE='99999'
         END
         IF CLIENT.ID='04957' THEN
            EXP.CODE='65003-':OCONV(DIVISION,'MCA')
         END
         IF CLIENT.ID='05111' THEN
            EXP.CODE='460477'
            IF IN.OUT='I' THEN EXP.CODE='290290'
         END
         IF CLIENT.ID='05116' THEN       ; * JMK12
            EXP.CODE='99999'             ; * JMK12
         END                             ; * JMK12
         IF CLIENT.ID='05118' THEN
            IF IN.OUT='I' THEN EXP.CODE='79'
            IF IN.OUT='O' THEN EXP.CODE='89'
            IF IN.OUT='T' THEN EXP.CODE='99'
         END
         IF CLIENT.ID='05233' THEN       ; * JMK14
            IF IN.OUT='I' THEN EXP.CODE='50200'    ; * JMK14
            IF IN.OUT='O' THEN EXP.CODE='40500'    ; * JMK14
            IF IN.OUT='T' THEN EXP.CODE='40500'    ; * JMK14
         END                             ; * JMK14
      END
      WEIGHT=ImpBilledWeight
      BEGIN CASE
         CASE CARRIER.ID='00041'
            CARRIER.CHG=ImpTotalInvoiceAmount
            ACTUAL.CHG=ImpTotalInvoiceAmount
         CASE CARRIER.ID='01312'
            CARRIER.CHG=ImpTotalInvoiceAmount
            ACTUAL.CHG=ImpTotalInvoiceAmount-ImpRefundAmount
         CASE 1
            CARRIER.CHG=ImpNetDue
            ACTUAL.CHG=ImpNetDue-ImpRefundAmount
      END CASE
      VAR.ARR=''
      VAR.ARR<2>=ImpRefundAmount
      VARIANCE=SUM(VAR.ARR<2>)+SUM(VAR.ARR<3>)
      CHECK.AMT=''
      CHECK.NUM=''
      CHECK.DATE=''
      BOL=''
      BEGIN CASE
         CASE IN.OUT='I'
            VC.ID=ImpSenderName
         CASE IN.OUT='O'
            VC.ID=ImpReceiverName
         CASE IN.OUT='T'
            VC.ID=ImpReceiverName
      END CASE
      ZIP.ARR=''
      MILEAGE=0
      BEGIN CASE
         CASE CARRIER.ID='00015' ; T.MODE.BY.WGT=2
         CASE CARRIER.ID='00041' ; T.MODE.BY.WGT=15
         CASE CARRIER.ID='00365' ; T.MODE.BY.WGT=2
         CASE CARRIER.ID='01075' ; T.MODE.BY.WGT=15
         CASE CARRIER.ID='01312' ; T.MODE.BY.WGT=8
         CASE 1 ; T.MODE.BY.WGT=CARRIER.REC<44>
      END CASE
      MISROUTE.ARRAY=''
      DISC.PERC=''
      ORIG.STATE=ImpSenderState
      DEST.STATE=ImpReceiverState
      ORIG.CITY=ImpSenderCity
      DEST.CITY=ImpReceiverCity
      ZIP.ARR<1,1>=ORIG.ZIP
      ZIP.ARR<2,1>=ORIG.CITY
      ZIP.ARR<3,1>=ORIG.STATE
      ZIP.ARR<1,2>=DEST.ZIP
      ZIP.ARR<2,2>=DEST.CITY
      ZIP.ARR<3,2>=DEST.STATE
      DUE.DATE=''
      E.DATE=ImpShipdate
      DTAB=''
      DTAB<1>=EXP.CODE
      DTAB<3>=ACTUAL.CHG
      BANK.ID=CLIENT.REC<81>
      VERIFIED=''
      BILL.STATUS='O'
      INV.NUM=ImpInvoiceNumber
      OVERRIDE.FIELD=''
      OVERRIDE.OPERATOR=''
      OVERRIDE.INFO=''
      OVERRIDE.STATUS=''
      FLAT.RATE=''
      MIN.CHG=''
      AIR.PIECES=''
      DTL.CHRG.CODES=''
      DTL.CHRG.AMTS=''
      VERSION='0'
      DUP.FLAG='0'                       ; * JMK@@@
*     IF ImpCreditReason="DUPLICATE CHARGE - BILLED PREV." THEN ; * JMK@@@
      IF INDEX(ImpCreditReason,'DUPLICATE',1) THEN           ; * JMK@@@
         DUP.FLAG='1'
         VERSION='1'
      END
      IF ImpCreditReason="DUPLICATE CHARGE - CROSS CARRIER" THEN       ; * JMK@@@
         VERSION='1'                     ; * JMK@@@
      END                                ; * JMK@@@
      BD.FLAG=0
      IF ImpCreditReason="BALANCE DUE APPROVED" THEN
         BD.FLAG='1'
      END
      IF ImpCreditReason="APPROVED" THEN           ; * JMK04
         BD.FLAG='1'                     ; * JMK04
      END                                ; * JMK04
      SLASH.FLAG='0'                     ; * JMK@@@
      SLASH.CNT='0'                      ; * JMK@@@
      REJECT.REASONS=''
      REJECT.REASONS<1>=ImpCreditReason
      REJECT.REASONS=''
      REJECT.REASONS<1>=ImpCreditReason
      BEGIN CASE
         CASE CARRIER.ID='00041'
            SHIP.ACCT=ImpAccountNumber
            INV.DATE=OCONV(ImpInvoiceDate,'D2/')
            PRO=SHIP.ACCT[1,3]:'-':SHIP.ACCT[4,3]:INV.DATE[1,2]:INV.DATE[4,2]:INV.DATE[7,2]:'-O'
         CASE CARRIER.ID='01312'
            PRO=ImpInvoiceNumber
         CASE CARRIER.ID='20686'
            PRO=ImpTrackingNumber
            IF PRO='' THEN
               PRO=ImpInvoiceNumber
            END
         CASE 1 ; PRO=ImpTrackingNumber
      END CASE
      SERVICE.LEVEL=ImpServiceName
      CLASSES=''
      WEIGHTS=''
      HANDLING.UNITS=''
      FB.NOTE=''
      IF ImpNotes#'' THEN
         FB.NOTE=ImpNotes
      END
      EDI.PPR=ImpEntryType
      RETURN

WRITE.FB.REC: *
      PRO.ID=CARRIER.ID:'*':PRO:'*':VERSION
      IF BD.FLAG THEN                    ; * JMK07
         PRO.ID=CARRIER.ID:'*':PRO:'BD*':VERSION   ; * JMK07
      END                                ; * JMK07
      IF SLASH.FLAG AND SLASH.CNT#"0" THEN         ; * JMK07
         PRO.ID=CARRIER.ID:'*':PRO:'/':SLASH.CNT:'*':VERSION           ; * JMK07
      END                                ; * JMK07
      T.DATE=DATE()
      T.TIME=TIME()
      USER='LOGICA'
      READ PRO.REC FROM F.HIST,PRO.ID THEN
         IF CARRIER.ID='20686' AND ImpTrackingNumber='' THEN          ; * JMK@@@
            SLASH.FLAG=1                 ; * JMK@@@
            SLASH.CNT+=1                 ; * JMK@@@
            GO WRITE.FB.REC              ; * JMK@@@
         END                             ; * JMK@@@
         IF CARRIER.ID='00015' OR CARRIER.ID='01075' THEN
            SLASH.FLAG=1                 ; * JMK07
            SLASH.CNT+=1                 ; * JMK07
*           PRO.SEQ=0                    ; * JMK07
*           LOOP                         ; * JMK07
*              PRO.SEQ+=1                ; * JMK07
*              TEST.ID=CARRIER.ID:'*':PRO:'/':PRO.SEQ:'*':VERSION      ; * JMK07
*              READ TEST.REC FROM F.HIST,TEST.ID ELSE TEST.REC=''      ; * JMK07
*           UNTIL TEST.REC='' DO         ; * JMK07
*           REPEAT                       ; * JMK07
*           PRO=PRO:'/':PRO.SEQ          ; * JMK07
            GO WRITE.FB.REC
         END
         IF CARRIER.ID='00365' THEN
            IF PRO.REC<7>#ACTUAL.CHG THEN
*DF            PRO.ID:='AD'
*              PRO:='AD'                 ; * JMK07
               BD.FLAG=1                 ; * JMK07
               GO WRITE.FB.REC
            END
         END
         RETURN
      END ELSE
         PRO.REC = ''
         PRO.REC<1> = BILL.DATE
         PRO.REC<2> = IN.OUT
*        IF CARRIER.ID='00041' CARRIER.ID='12810' OR CARRIER.ID='03042' THEN     ; * United Parcel Service ; * JMK@@
         IF UPS.CAR THEN                 ; * JMK@@
            PRO.REC<3>='99999'
            PRO.REC<4>='99999'
         END ELSE
            PRO.REC<3>=ORIG.ZIP
            PRO.REC<4>=DEST.ZIP
         END
         PRO.REC<5> = EXP.CODE
         PRO.REC<6> = WEIGHT
         PRO.REC<7> = CARRIER.CHG
         PRO.REC<8> = ACTUAL.CHG
         PRO.REC<9> = DIVISION
         PRO.REC<10> = 0-VAR.ARR<1>
         PRO.REC<11> = 0-VAR.ARR<2>
         PRO.REC<12> = 0-VAR.ARR<3>
         PRO.REC<13> = CHECK.AMT
         PRO.REC<14> = CHECK.NUM
         PRO.REC<15> = CHECK.DATE
         PRO.REC<16> = BOL
         PRO.REC<17> = VC.ID
         PRO.REC<18> = ZIP.ARR<1>
         NUM.ZIPS = DCOUNT(PRO.REC<18>, @VM)
         IF NUM.ZIPS > 1 THEN
            DEL PRO.REC<18,NUM.ZIPS>
            DEL PRO.REC<18,1>
         END
         PRO.REC<19> = MILEAGE
         PRO.REC<20> = CARRIER.ID
         PRO.REC<21> = T.MODE.BY.WGT
         IF PRO.REC<21>#'1' AND PRO.REC<21>#'6' THEN PRO.REC<19>=''
         IF PRO[LEN(PRO)-1,2]='AD' THEN PRO.REC<19>=''
         IF PRO[LEN(PRO)-1,2]='BD' THEN PRO.REC<19>=''
         PRO.REC<22> = MISROUTE.ARRAY<1>
         PRO.REC<23> = MISROUTE.ARRAY<2>
         PRO.REC<24> = DISC.PERC
*        IF CARRIER.ID='00041' OR CARRIER.ID='12810' OR CARRIER.ID='03042' THEN  ; * JMK@@
         IF UPS.CAR THEN                 ; * JMK@@
            PRO.REC<25>='ZZ'
            PRO.REC<26>='ZZ'
            PRO.REC<27>='UPS'
            PRO.REC<28>='UPS'
         END ELSE
            IF CARRIER.ID='01075' THEN
               IF ORIG.ZIP='99999' THEN
                  PRO.REC<25>='ZZ'
                  PRO.REC<27>='FedEx Ground'
               END ELSE
                  PRO.REC<25>=ORIG.STATE
                  PRO.REC<27>=ORIG.CITY
               END
               IF DEST.ZIP='99999' THEN
                  PRO.REC<26>='ZZ'
                  PRO.REC<28>='FedEx Ground'
               END ELSE
                  PRO.REC<26>=DEST.STATE
                  PRO.REC<28>=DEST.CITY
               END
            END ELSE
               PRO.REC<25>=ORIG.STATE
               PRO.REC<26>=DEST.STATE
               PRO.REC<27>=ORIG.CITY
               PRO.REC<28>=DEST.CITY
            END
         END
         VAR.CODE = ''
         IF VARIANCE = 0 THEN VAR.ARR = ''
         IF VAR.ARR<1>'R0' # 0 ! VAR.ARR<4>'R0' NE 0 THEN
            VAR.CODE = VAR.CODE:'D'
         END
         IF VAR.ARR<2>'R0' # 0 ! VAR.ARR<5>'R0' NE 0 THEN
            VAR.CODE = VAR.CODE:'O'
         END
         IF VAR.ARR<3>'R0' # 0 ! VAR.ARR<6>'R0' NE 0 THEN
            VAR.CODE = VAR.CODE:'C'
         END
         PRO.REC<29> = VAR.CODE
         PRO.REC<30> = E.DATE
         PRO.REC<31> = DTAB<1>
         PRO.REC<33> = DTAB<3>
         PRO.REC<34> = 0-VAR.ARR<4>
         PRO.REC<35> = 0-VAR.ARR<5>
         PRO.REC<36> = 0-VAR.ARR<6>
         PRO.REC<38> = DUE.DATE
         PRO.REC<39> = "O"
         PRO.REC<40> = BANK.ID
         PRO.REC<45> = VERIFIED
         PRO.REC<53> = USER
         IF EDI.PPR='EDI' THEN
            IF UPS.CAR THEN
               PRO.REC<53>='EBILL.IMPORT.NEW':USER
            END ELSE
               PRO.REC<88>=CLIENT.ID:'*':PRO.ID
            END
         END
         PRO.REC<54> = USER
         PRO.REC<68> = BILL.STATUS
         FRT.ARRAY=''                    ; * JMK14
         MIS.ARRAY=''                    ; * JMK14
         PRO.REC<94>=OCONV(INV.NUM,'MCU')
         PRO.REC<96>=OVERRIDE.STATUS
         PRO.REC<116>=OVERRIDE.FIELD
         PRO.REC<117>=OVERRIDE.OPERATOR
         PRO.REC<118>=OVERRIDE.INFO
         PRO.REC<119>=FLAT.RATE
         IF VERSION > 0 THEN PRO.REC<37>=''
         PRO.REC<41,1> = VAR.ARR<7>
         PRO.REC<41,2> = VAR.ARR<8>
         PRO.REC<41,3> = VAR.ARR<9>
         PRO.REC<46> = MIN.CHG
         CALC = 0
         PRO.REC<84,-1>=USER             ; * Update Each Time bill is Filed
         PRO.REC<85,-1>=T.TIME           ; * Update Each Time bill is Filed   ;*NPR06
         PRO.REC<86,-1>=DATE()           ; * Update Each Time bill is Filed
         IF PRO.REC<53> = '' THEN PRO.REC<53> = USER
         PRO.REC<55> = LEN(PRO.REC)-LEN(USER)
         PRO.REC<59> = REJECT.REASONS<1>
         PRO.REC<60> = REJECT.REASONS<2>
         PRO.REC<61> = REJECT.REASONS<3>
         PRO.REC<62> = REJECT.REASONS<4>
         PRO.REC<65> = SERVICE.LEVEL
         IF VERSION GT 0 THEN PRO.REC<39> = 'O'
         PRO.REC<100>= VC.ID             ; * Item ID for Cust.Vend
         PRO.REC<74> = CLASSES
         PRO.REC<75> = WEIGHTS
         MISC.CHG.POS=DCOUNT(CLASSES<1>,@VM)       ; * Find out how many
         PRO.REC<120>=ZIP.ARR<1>         ; * MV Zips
         PRO.REC<121>=ZIP.ARR<2>         ; * MV Cities
         PRO.REC<122>=ZIP.ARR<3>         ; * MV States
         PRO.REC<149>=ZIP.ARR<7>         ; * MV Miles JMK12
         BEGIN CASE                      ; * NPR057
            CASE CLIENT.ID='01510' OR CLIENT.ID='01909'      ; * NPR057
               PRO.REC<239,1>= '800'     ; * NPR057
            CASE CLIENT.ID='02171'
               PRO.REC<239,1>= '1500'
            CASE CLIENT.ID='02215'
               PRO.REC<239,1>= '1200'
            CASE CLIENT.ID='02465'
               PRO.REC<239,1>= '2000'
            CASE CLIENT.ID='02957'       ; * JMK16
               PRO.REC<239,1>= '5000'    ; * JMK16
            CASE CLIENT.ID='05022'
               PRO.REC<239,1>= '1500'
            CASE CLIENT.ID='05124'       ; * DRF01
               PRO.REC<239,1>= '2000'    ; * DRF01
            CASE CLIENT.ID='05294'       ; * DRF02
               IF T.MODE.BY.WGT=1 THEN      ; * DRF03
                  PRO.REC<239,1>= '300'     ; * DRF02
               END ELSE      ; * DRF03
                  PRO.REC<239,1>='0'     ; * DRF03
               END     ; * DRF03
            CASE 1                       ; * NPR057
               PRO.REC<239,1>=LCC.ARRAY<5,1>*100   ; * NPR057   logistics comm % for LCC
         END CASE                        ; * NPR057
         PRO.REC<202>=MISROUTE.ARRAY<3>  ; * JMK62
         PRO.REC<213>=FB.NOTE            ; * JMK111
         PRO.REC<217>=VAR.ARR<10>        ; * JMK154 - DISCOUNT CLASS
         PRO.REC<217>=VAR.ARR<11>        ; * JMK154 - OVERCHARGE CLASS WILL REPLACE ANY DISCOUNT CLASS
         PRO.REC<221>=''                 ; * JMK227
         PRO.REC<224>=LCC.ARRAY<7>       ; * JMK159
         PRO.REC<222>=ORIG.COUNTRY.CD
         PRO.REC<223>=DEST.COUNTRY.CD
         PRO.REC<235>=HANDLING.UNITS     ; * NPR35
         WRITE PRO.REC ON F.BILLS,PRO.ID
         WRITE PRO.REC ON F.HIST,PRO.ID
      END
*
* Update Fedex invoice file
*
      IF VERSION=0 THEN
         IF PRO.REC<94>#'' THEN
            READ DINV.XREF FROM F.INV.XREF,PRO.REC<94> ELSE DINV.XREF=''
            LOCATE PRO.ID IN DINV.XREF BY 'AR' SETTING INV.POS ELSE
               INS PRO.ID BEFORE DINV.XREF<INV.POS>
               WRITE DINV.XREF ON F.INV.XREF,PRO.REC<94>
            END
         END
      END
*
* Update freight bill cross reference (skeletal) record
*
*     IF VERSION=0 THEN                  ; * JMK10
      REC = ''
      REC<1> = CLIENT.ID
      REC<2> = BILL.DATE
      REC<7> = PRO.REC<7>
      REC<8> = PRO.REC<8>
      REC<10> = PRO.REC<10>
      REC<11> = PRO.REC<11>
      REC<12> = PRO.REC<12>
      REC<30> = PRO.REC<30>
      REC<37> = PRO.REC<37>
      REC<39> = PRO.REC<39>
      REC<41> = PRO.REC<41>
      REC<53> = PRO.REC<53>
      REC<54> = PRO.REC<54>
      REC<55> = PRO.REC<55>
      REC<63> = PRO.REC<63>
*     IF CLIENT.ID[1,2]='99' ELSE        ; * JMK10
      WRITE REC ON F.CRX,PRO.ID
*     END                                ; * JMK10
*     END                                ; * JMK10
      RETURN

CONVERT.NUMBER: *
      TEST.NUM=CHANGE(TEST.NUM,'($','-')
      TEST.NUM=CHANGE(TEST.NUM,')','')
      TEST.NUM=CHANGE(TEST.NUM,'$','')
      RETURN
      END
