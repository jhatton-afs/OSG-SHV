* PROGRAM: FB.3.5
* PROGRAM TO PRINT TRAFFIC REPORT
*
* FREIGHT PAYMENT PACKAGE
*
**********************************************************************
*
* Last updated by AFS.SOURCE (valerie) at 15:29:43 on 05/10/1994.
*   UPDATED FOR NEW DIVISION.CODES INSERT.
*
      $INCLUDE PROG.ADMIN INC_OPTIONS
      $INCLUDE FILE.DEFS INC_DIVISION.CODES
*
* 06/22/09 NPR01 Replace option to create Hold file with Option to build EXCEL Spreadsheet.
*
* Initialize variables.
*
      INPUT PROCESS.TYPE
      PROMPT''
      PROG.NAME='FB.3.5'
      PROG.DESC="Freight Traffic Report"
      PACK.NAME="Freight Payment"
      CALL CHANNEL(CH.NUM)
      UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.3.5' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
      CALL GET.USER(USER)
      COPIES=1
      STATUS=''
      FIRST=1
      ERRMSG=''
      DIVS=' '
      MAT DIV.REC = ''
*
      DIM MONTHS(12)
*
* Open general files
*
      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         CALL OPEN.ABORT("CLIENTS",PROG.NAME)
      END
      OPEN '','FB.CONTROL' TO F.CONTROL ELSE
         CALL OPEN.ABORT('FB.CONTROL',PROG.NAME)
      END
      OPEN '','FB.REPORT' TO F.REPORT ELSE
         CALL OPEN.ABORT("FB.REPORT",PROG.NAME)
      END
      OPEN '','FBWORK':CH.NUM TO F.WORK ELSE
         EXECUTE 'CREATE-FILE FBWORK':CH.NUM:' 1 1001' PASSLIST CAPTURING OUTPUT
         OPEN '','FBWORK':CH.NUM TO F.WORK ELSE
            CALL OPEN.ABORT('FBWORK':CH.NUM,PROG.NAME)
         END
      END
      OPEN '','DICT FBWORK':CH.NUM TO F.DICT.WORK ELSE
         CALL OPEN.ABORT('DICT FBWORK':CH.NUM,PROG.NAME)
      END
      OPEN '','ZIPS.CODES' TO F.ZIPS ELSE
         CALL OPEN.ABORT("ZIPS",PROG.NAME)
      END

      OPEN '','BILLDATA.':USER TO F.BILLDATA ELSE CALL OPEN.ABORT('BILLDATA.':USER,PROG.NAME)
*
      MATREAD MONTHS FROM F.CONTROL,'MONTHS' ELSE
         CALL READ.ABORT('FB.CONTROL','MONTHS',PROG.NAME)
      END
*
* Create work file dictionary items
*
      TEMP=''
      TEMP<1>='A'
      TEMP<2>='5'
      TEMP<9>='R'
      TEMP<10>=15
      WRITE TEMP ON F.DICT.WORK,'SORTER'
      TEMP<2>='1'
      TEMP<10>='1'
      WRITE TEMP ON F.DICT.WORK,'IO.STATUS'
      TEMP<1>='S'
      TEMP<2>=0
      TEMP<8>='G2*3'
      TEMP<10>=5
      WRITE TEMP ON F.DICT.WORK,'DIVISION'
*
* Work file consists of items with the following detail
*
*  ATTR   DESCRIPTION
*    ID    2 Digit state * I/O Status * Divison (EX: TX*I OR TX*O)
*    1     I/O Status
*    2     Number of shipments (current)
*    3     Number of shipments (year to date)
*    4     Total freight dollars (current)
*    5     Total freight dollars (year to date)
*    6     Total weight (current)
*    7     Total weight (year to date)
*    8     Total cost per mile (current)
*    9     Total cost per mile (year to date)
*   10     Number of shipments with cost/mile (current)
*   11     Number of shipments with cost/mile (year to date)
*   12     Average dollars (current)
*   13     Average dollars (year to date)
*   14     Average weight (current)
*   15     Average weight (year to date)
*   16     Average cost per mile (current)
*   17     Average cost per mile (year to date)
*
* NPR01 Start Changes
*
*** Set Up EXCEL Column Headers
*
      XHEAD = "State"
      XHEAD<1,2>  = "I/O"
      XHEAD<1,3>  = "Division"
      XHEAD<1,4>  = "CURR. Shipments Count"
      XHEAD<1,5>  = "CURR. Shipments Amt"
      XHEAD<1,6>  = "CURR. Shipments Wht"
      XHEAD<1,7>  = "CURR. Total CPM"
      XHEAD<1,8>  = "CURR. Number of shipments with cost/mile"
      XHEAD<1,9>  = "CURR. Average dollars"
      XHEAD<1,10> = "CURR. Average weight"
      XHEAD<1,11> = "CURR. Average CPM"


      XHEAD<1,12> = "YTD Shipments Count"
      XHEAD<1,13> = "YTD Shipments Amt"
      XHEAD<1,14> = "YTD Shipments Wht"
      XHEAD<1,15> = "YTD Total CPM"
      XHEAD<1,16> = "YTD Number of shipments with cost/mile"
      XHEAD<1,17> = "YTD Average dollars"
      XHEAD<1,18> = "YTD Average weight"
      XHEAD<1,19> = "YTD Average CPM"

      XLS.REC = XHEAD
*
***
*
* NPR01 End Changes
*
* Enter client number.
*
100   CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      HELP="Enter client number. Word of name for search. X=Exit. EX=Exit."
      CALL GEN.IN(0,3,'Enter client number #####','',Q,0,20,'','',2,-5,3,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='' ! QI='EX' ! QI='X'
            STOP
         CASE NOT(QI MATCHES "0N")
            CALL SOUNDEX.DISPLAY(QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            BEGIN CASE
               CASE ITEM.LIST=''
                  GOTO 100
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                  GOTO 100
               CASE ITEM.LIST NE ''
                  IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
                  GOTO 100
            END CASE
         CASE NUM(QI)
            Q=QI'R%5'
         CASE 1
            GOTO 100
      END CASE
*
      CLIENT.ID=Q
      REPORT.ID=Q:'*T'
      READ CLIENT.REC FROM F.CLIENTS,CLIENT.ID ELSE
         IF PROCESS.TYPE='STD' THEN CALL ELINE('ERROR - Client ':CLIENT.ID:' not on file.')
         GOTO 100
      END
*
      FYBD=CLIENT.REC<29>
      CLIENT.NAME=CLIENT.REC<2>
      DIVISION=CLIENT.REC<12>
      CRT @(0,3):'Enter Client Number ':CLIENT.ID'R%5':' ':CLIENT.NAME:@(-4):
*
* Open client's files.
*
      OPEN '','FB.BILLS.HIST,':CLIENT.ID TO F.HIST ELSE
         CALL OPEN.ABORT("FB.BILLS.HIST,":CLIENT.ID,PROG.NAME)
      END
      IF DIVISION='Y' THEN
         OPEN '','DIVISION.CODES,':CLIENT.ID TO F.DIVISION ELSE
            CALL OPEN.ABORT("DIVISION.CODES,":CLIENT.ID,PROG.NAME)
         END
      END
*
* Initialize files
*
      READ FORMAT.REC FROM F.REPORT,REPORT.ID ELSE
         READ FORMAT.REC FROM F.REPORT,'STD*T' ELSE
            IF PROCESS.TYPE='STD' THEN CALL ELINE('Can not read report format for ':CLIENT.NAME)
            GOTO 100
         END
      END
*
* Enter beginning date.
*
150:  HELP="Enter beginning date. nn=Day. nn/nn=Month & Day. [X]=Back. [EX]=Exit."
      LN='Enter the beginning date of the report. ':DATE()'D2/'
      CALL GEN.IN(0,5,LN,'DATE',Q,0,8,'','',0,-8,5,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            CRT @(0,5):@(-3):
            GOTO 100
         CASE QI='EX'
            STOP
      END CASE
      BEG.DATE=Q
      CRT @(40,5):BEG.DATE'D2/'
*
* Enter ending date.
*
170:  HELP="Enter ending date. nn=Day. nn/nn=Month & Day. X=Back to Beg Date. EX=Exit."
      LN='Enter the ending date of the report.    ':DATE()'D2/'
      CALL GEN.IN(0,7,LN,'DATE',Q,0,9,'','',0,-8,7,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            CRT @(0,7):@(-3):
            GOTO 150
         CASE QI='EX'
            STOP
      END CASE
      END.DATE=Q
      IF BEG.DATE GT END.DATE THEN
         IF PROCESS.TYPE='STD' THEN CALL ELINE('Beginning date cannot exceed ending date.')
         GOTO 170
      END
      DAYS=END.DATE-BEG.DATE+1
      CRT @(40,7):END.DATE'D2/'
*
* Ask for hold file
*
      XLS.FLAG = "N"   ;* NPR01
      HOLD.STAT=0      ;* NPR01
      HELP="Enter Y to send report to EXCEL Spreadsheet."
      MASK = 'Send report to EXCEL Spreadsheet? N'
      CALL GEN.IN(0,9,MASK,'',Q,0,1,'','',1,-1,9,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='Y'
*NPR01          HOLD.STAT=1
            XLS.FLAG = "Y"
*NPR01          EXECUTE 'SP-ASSIGN HSF15'
         CASE 1
            HOLD.STAT=0
            QI='N'
*NPR         CALL FB.FORM(F.NUM)
      END CASE
      CRT @(LEN(MASK)-1,9):QI'L#2' : '  '
*
* Verify selection criteria is correct.
*
300:  HELP="[X]=Change. [EX]=Exit. [cr]=Continue."
      CALL GEN.IN(0,22,'Enter selection please. --','',Q,0,2,'','',0,-2,22,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            CRT @(0,22):@(-3):
            GOTO 170
         CASE QI='EX'
            STOP
         CASE QI=''
            NULL
         CASE 1
            IF PROCESS.TYPE='STD' THEN CALL ELINE('Invalid entry. Must be X, EX, or RETURN.')
            GOTO 300
      END CASE
*
* Build division array
*
      IF DIVISION='Y' THEN
         DONE = 0
         SELECT F.DIVISION
         LOOP
            READNEXT DIV.ID ELSE DONE = 1
         UNTIL DONE = 1 DO
*OH       DIVS<-1> = DIV.ID 'R%5'
            LOCATE DIV.ID IN DIVS BY 'AR' SETTING POS ELSE
               INS DIV.ID BEFORE DIVS<POS>
            END
         REPEAT
*OH     CALL SORT.ARRAY(DIVS)
*OPEN 'TEMP' TO TEMP ELSE ABORT
*WRITE DIVS ON TEMP,'OWEN'
*STOP
      END
*
* Create beginning of year and monthly descriptions
*
400:  BEG.MO=OCONV(BEG.DATE,'DM')
      BEG.YR=OCONV(BEG.DATE,'DY')
      FISCAL.MO=FIELD(FYBD,'.',1)'R0'
      IF BEG.MO < FISCAL.MO THEN FISCAL.YR=BEG.YR-1 ELSE FISCAL.YR=BEG.YR
      F.DATE=FISCAL.MO'R%2':'.01.':FISCAL.YR
      F.DATE=ICONV(F.DATE,'D2.')
*
      END.MO=OCONV(END.DATE,'DM')
      BEG.MO=MONTHS(BEG.MO)
      END.MO=MONTHS(END.MO)
      IF BEG.MO=END.MO THEN
         MONTH.DESC=BEG.MO
      END ELSE
         MONTH.DESC=BEG.MO:' to ':END.MO
      END
*
      CRT @(0,2):@(-3)
      LINE='Processing Client ':CLIENT.ID:' ':CLIENT.NAME
      CALL CENTER(LINE,80)
      CRT @(0,10):LINE

*
* Clear work file
*
      CLEARFILE F.WORK
*
* Select data for current customer
*
      FILE.ID='FB.BILLS.HIST,':CLIENT.ID
      OPEN '',FILE.ID TO F.HIST ELSE CALL OPEN.ABORT(FILE.ID,PROG.NAME)
      PREC='SELECT ':FILE.ID:' WITH 37 GE "':OCONV(F.DATE,'D2/'):'"'
      PREC=PREC:' AND WITH 37 LE "':OCONV(END.DATE,'D2/'):'"'
      EXECUTE PREC PASSLIST CAPTURING OUTPUT
      NUM.ITEMS = @SELECTED
      IF SYSTEM(11) ELSE STOP

*NPR01 Start Changes
*
      L.IN = PROG.NAME:" - ":PROG.DESC
      L.IN<2,1> = BEG.DATE
      L.IN<2,-1> = END.DATE
      L.IN<2,-1> = NUM.ITEMS
      L.IN<2,-1> = PROCESS.TYPE

******      IF USER NE "xNPRATT" THEN L.IN<3> = "npratt@afs.net"
      L.OUT = ""
      CALL UPD.PROCESS.LOG(L.IN,L.OUT)
*
*NPR01 Start Changes
*
* Get next record
*
      COUNTER=0
      LOOP
         READNEXT HIST.ID ELSE HIST.ID='*'
      UNTIL HIST.ID='*' DO
         COUNTER=COUNTER+1
         CALL PROG.BAR(22,COUNTER,NUM.ITEMS,PER)
         IF FIELD(HIST.ID,'*',3) = 0 THEN
            READ HIST.REC FROM F.HIST,HIST.ID THEN
               BALDUE=0
               PRO=FIELD(HIST.ID,'*',2)
               START=LEN(PRO)-1
               IF PRO[START,2]='BD' ! PRO[START,2]='AD' THEN BALDUE=1
*
* Update state total record in work file
*
               IO.STAT=HIST.REC<2>
               BEGIN CASE
                  CASE IO.STAT='I'
                     STATE=HIST.REC<25>
                  CASE IO.STAT='O'
                     STATE=HIST.REC<26>
                  CASE 1
                     STATE=HIST.REC<25>:'-':HIST.REC<26>
               END CASE
*IF IO.STAT='T' THEN CALL ELINE('TAMI CHECK THIS')
               DIV.CODE=''
               GOSUB 8200; * Update work file consolidated totals
               IF DIVISION='Y' THEN
                  DIV.CODE=HIST.REC<9>
                  GOSUB 8200; * Update work file for division totals
               END
            END
         END
      REPEAT
*
      IF XLS.FLAG = "Y" THEN
         GOSUB BUILD.XLS.FILE
         GOTO 100
      END
*
* Print report section
*
      PRINTER ON

500:  CALL FB.RPT.STAT(CLIENT.ID,STATUS)
      IF STATUS='B' THEN STATUS=''
      IF STATUS='' THEN
         IF HOLD.STAT ELSE CALL FB.LASER.SET('R',132,60,6)
         PRINTER CLOSE
         EXECUTE 'TERM ,,,,,,132'
         STOP
      END

      CRT @(0,19):
      ODATE="Entered From ":BEG.DATE'D2/':" to ":END.DATE'D2/'
      IF COPIES NE 0 THEN
*NPR        IF HOLD.STAT ELSE EXECUTE 'SP-ASSIGN C1F':F.NUM
         TITLE.1='Freight Costs by State Report'
         TITLE.2='For Client: ':CLIENT.ID:' ':CLIENT.NAME
         WIDTH=FORMAT.REC<1,1>
         DEPTH=FORMAT.REC<1,2>
         LPI=FORMAT.REC<1,3>
*
* Set up printer
*
         CALL PAGE.HEAD('FB.3.5','AFS Logistics, LLC',TITLE.1,TITLE.2,ODATE,WIDTH,HED)
         IF HOLD.STAT ELSE
*          IF FIRST THEN
            IF WIDTH GT 132 THEN
               GOSUB 9100        ;* Sideways format
            END ELSE
               GOSUB 9110        ;* Report format
            END
*          END
         END
*
* Build column headings and break lines
*
         COL.HEAD=''
         SINGLE.BREAK=''
         DOUBLE.BREAK=''
         X=DCOUNT(FORMAT.REC,CHAR(254))
         FOR I=2 TO X
*PRINT '355 I ':I
            WIDTH=FORMAT.REC<I,3>
            TOT.FLG=FORMAT.REC<I,4>
            DESC=FORMAT.REC<I,5>
            IF DESC='' THEN DESC=' '
            COL.HEAD=COL.HEAD:OCONV(DESC,'ML#':WIDTH+1)
            IF TOT.FLG='Y' THEN
               SINGLE.BREAK=SINGLE.BREAK:STR('-',WIDTH):' '
               DOUBLE.BREAK=DOUBLE.BREAK:STR('=',WIDTH):' '
            END ELSE
               SINGLE.BREAK=SINGLE.BREAK:STR(' ',WIDTH):' '
               DOUBLE.BREAK=DOUBLE.BREAK:STR(' ',WIDTH):' '
            END
         NEXT I
*
         MO=OCONV(END.DATE,'DM')
         MONTH=MONTHS(MO)
         BEGIN CASE
            CASE STATUS='I'
               HED=HED:"'C'Inbound Report - ":MONTH:" 'L'"
            CASE STATUS='O'
               HED=HED:"'C'Outbound Report - ":MONTH:" 'L'"
            CASE 1
               HED=HED:"'C'Third Party Report - ":MONTH:" 'L'"
         END CASE
         BASE.HED=HED
         NUM.DIVS=DCOUNT(DIVS,CHAR(254))
         FOR DIV.POS=1 TO NUM.DIVS

*PRINT '376 DIV.POS ':DIV.POS

            DIV.CODE=DIVS<DIV.POS>
            IF DIV.CODE NE ' ' THEN
               MATREAD DIV.REC FROM F.DIVISION, DIV.CODE ELSE
                  MAT DIV.REC = ''
               END
               READV CITY FROM F.ZIPS, DIV.ZIP, 1 ELSE CITY='~ Unknown ~'
               READV STATE FROM F.ZIPS, DIV.ZIP, 2 ELSE STATE='~ Unknown ~'
               CSZ='For division ':DIV.CODE:' - ':CITY:', ':STATE:"'L'"
               HED=BASE.HED:"'L' For division ":DIV.CODE:" - ":CITY:", ":STATE
            END ELSE
               DIV.CODE=''
            END
            HEAD.STRING=HED:" 'L'":COL.HEAD
7000:       POS=INDEX(HEAD.STRING,"' '",1)
            IF POS THEN
               HEAD.STRING=HEAD.STRING[1,POS-1]:HEAD.STRING[POS+3,9999]
               GOTO 7000
            END
7003:       POS=INDEX(HEAD.STRING,"''",1)
            IF POS THEN
               HEAD.STRING=HEAD.STRING[1,POS-1]:HEAD.STRING[POS+2,9999]
               GOTO 7003
            END
7020: * CONTINUE
*         HEADING HED:" 'L'":COL.HEAD
            HEADING HEAD.STRING
*          PAGE 1

*
* Print report
*
            READ TOTAL.REC FROM F.WORK,'TOTAL*':STATUS:'*':DIV.CODE ELSE TOTAL.REC=''
            TOT.CUR.AMT=TOTAL.REC<4>'R0'
            TOT.YTD.AMT=TOTAL.REC<5>'R0'
*
            PREC='SSELECT FBWORK':CH.NUM:' BY-DSND SORTER WITH IO.STATUS = '
            PREC=PREC:'"':STATUS:'" AND WITH DIVISION = "':DIV.CODE:'"'
            EXECUTE PREC PASSLIST CAPTURING OUTPUT
*
*
            NUM.ITMS = @SELECTED
*PRINT '403 NUM.ITMS ':NUM.ITMS
            COUNTER=0
            LOOP
               READNEXT ID ELSE ID='**'
            UNTIL ID='**' DO
               TOTAL=''
               GOSUB 8000; * Print line
            REPEAT
*
* Print totals
*
            PRINT SINGLE.BREAK
            ID='TOTAL*':STATUS:'*':DIV.CODE
            GOSUB 8000                            ;* Print line
            PRINT DOUBLE.BREAK
*          PRINTER CLOSE
         NEXT DIV.POS
      END
*      PRINTER OFF
      GOTO 500
*------------------------------------------------------------------------
*
* INTERNAL SUBROUTINES
*
*------------------------------------------------------------------------
*
* Print line
*
8000: READ REC FROM F.WORK,ID ELSE REC=''
      FORMAT.ATTR=1
      LN=''
      LN.POS=0
      NUM.LINES=0
8050: FORMAT.ATTR=FORMAT.ATTR+1
      IF FORMAT.REC<FORMAT.ATTR>='' THEN GOTO 8070
      TOT.FLG=FORMAT.REC<FORMAT.ATTR,4>
*
      BEGIN CASE
         CASE FORMAT.REC<FORMAT.ATTR,1>='STATE'
            STATE=FIELD(ID,'*',1)
            LN.POS=LN.POS+1
            LN<LN.POS>=STATE
            IF NUM.LINES=0 THEN NUM.LINES=1
*
         CASE FORMAT.REC<FORMAT.ATTR,1>='SPACE'
            LN.POS=LN.POS+1
            LN<LN.POS>=' '
            IF NUM.LINES=0 THEN NUM.LINES=1
*
         CASE FORMAT.REC<FORMAT.ATTR,1>='CUR.%REV'
            IF TOT.CUR.AMT'R0' NE 0 THEN
               AMT=(REC<4>/TOT.CUR.AMT)*10000
            END ELSE
               AMT=0
            END
            LN.POS=LN.POS+1
            LN<LN.POS>=AMT
            IF NUM.LINES=0 THEN NUM.LINES=1
*
         CASE FORMAT.REC<FORMAT.ATTR,1>='YTD.%REV'
            IF TOT.YTD.AMT'R0' NE 0 THEN
               AMT=(REC<5>/TOT.YTD.AMT)*10000
            END ELSE
               AMT=0
            END
            LN.POS=LN.POS+1
            LN<LN.POS>=AMT
            IF NUM.LINES=0 THEN NUM.LINES=1
*
         CASE NUM(FORMAT.REC<FORMAT.ATTR,1>)
            LN.POS=LN.POS+1
            ATTR=FORMAT.REC<FORMAT.ATTR,1>
            X=DCOUNT(REC<ATTR>,CHAR(253))
            FOR I=1 TO X STEP 1
               LN<LN.POS,I>=REC<ATTR,I>
               IF TOT.FLG='Y' THEN
                  TOTAL<FORMAT.ATTR>=TOTAL<FORMAT.ATTR>+REC<ATTR,I>
               END
            NEXT I
            IF X GT NUM.LINES THEN NUM.LINES=X
      END CASE
      GOTO 8050
*
* Print line
*
8070: LN.COUNT=DCOUNT(LN,CHAR(254))
      FOR I=1 TO NUM.LINES
         PRT.LINE=''
         FOR J=1 TO LN.COUNT
            WIDTH=FORMAT.REC<J+1,3>
*DF          IF LN<J,I>='' THEN
*DF            PRT.LINE=PRT.LINE:SPACE(WIDTH):' '
*DF          END ELSE
            FORMAT=FORMAT.REC<J+1,2>
            FORMAT=FORMAT:'#':WIDTH
            PRT.LINE=PRT.LINE:OCONV(LN<J,I>,FORMAT):' '
*DF          END
         NEXT J
         PRINT PRT.LINE
      NEXT I
      RETURN
*
* Subroutine to accumulate totals in workfile
*
8200: WORK.ID=STATE:'*':IO.STAT:'*':DIV.CODE
      READ WORK.REC FROM F.WORK,WORK.ID ELSE WORK.REC=''
      WORK.REC<1>=IO.STAT
*
* Update current totals
*
      IF HIST.REC<37> GE BEG.DATE & HIST.REC<37> LE END.DATE THEN
         WORK.REC<4>=WORK.REC<4>+HIST.REC<8>'R0'
         IF NOT(BALDUE) THEN
            WORK.REC<2>=WORK.REC<2>+1
            WORK.REC<6>=WORK.REC<6>+HIST.REC<6>'R0'
            IF HIST.REC<49>'R0' NE 0 THEN
               WORK.REC<8>=WORK.REC<8>+HIST.REC<49>
               WORK.REC<10>=WORK.REC<10>+1
            END
         END
      END
*
* Update year to date totals
*
      WORK.REC<5>=WORK.REC<5>+HIST.REC<8>'R0'
      IF NOT(BALDUE) THEN
         WORK.REC<3>=WORK.REC<3>+1
         WORK.REC<7>=WORK.REC<7>+HIST.REC<6>'R0'
         IF HIST.REC<49>'R0' NE 0 THEN
            WORK.REC<9>=WORK.REC<9>+HIST.REC<49>
            WORK.REC<11>=WORK.REC<11>+1
         END
      END
      IF WORK.REC<2>'R0' NE 0 THEN
         WORK.REC<12>=WORK.REC<4>/WORK.REC<2>
         WORK.REC<14>=WORK.REC<6>/WORK.REC<2>
      END ELSE
         WORK.REC<12>=0
         WORK.REC<14>=0
      END
      IF WORK.REC<3>'R0' NE 0 THEN
         WORK.REC<13>=WORK.REC<5>/WORK.REC<3>
         WORK.REC<15>=WORK.REC<7>/WORK.REC<3>
      END ELSE
         WORK.REC<13>=0
         WORK.REC<15>=0
      END
      IF WORK.REC<10>'R0' NE 0 THEN
         WORK.REC<16>=WORK.REC<8>/WORK.REC<10>
      END ELSE
         WORK.REC<16>=0
      END
      IF WORK.REC<11>'R0' NE 0 THEN
         WORK.REC<17>=WORK.REC<9>/WORK.REC<11>
      END ELSE
         WORK.REC<17>=0
      END
      WRITE WORK.REC ON F.WORK,WORK.ID
*
* Update total work record
*
      TOT.WORK.ID='TOTAL*':IO.STAT:'*':DIV.CODE
      READ TOT.WORK.REC FROM F.WORK,TOT.WORK.ID ELSE TOT.WORK.REC=''
*
* Update current totals
*
      IF HIST.REC<37> GE BEG.DATE & HIST.REC<37> LE END.DATE THEN
         TOT.WORK.REC<4>=TOT.WORK.REC<4>+HIST.REC<8>'R0'
         IF NOT(BALDUE) THEN
            TOT.WORK.REC<2>=TOT.WORK.REC<2>+1
            TOT.WORK.REC<6>=TOT.WORK.REC<6>+HIST.REC<6>'R0'
            IF HIST.REC<49>'R0' NE 0 THEN
               TOT.WORK.REC<8>=TOT.WORK.REC<8>+HIST.REC<49>
               TOT.WORK.REC<10>=TOT.WORK.REC<10>+1
            END
         END
      END
*
* Update year to date totals
*
      TOT.WORK.REC<5>=TOT.WORK.REC<5>+HIST.REC<8>'R0'
      IF NOT(BALDUE) THEN
         TOT.WORK.REC<3>=TOT.WORK.REC<3>+1
         TOT.WORK.REC<7>=TOT.WORK.REC<7>+HIST.REC<6>'R0'
         IF HIST.REC<49>'R0' NE 0 THEN
            TOT.WORK.REC<9>=TOT.WORK.REC<9>+HIST.REC<49>
            TOT.WORK.REC<11>=TOT.WORK.REC<11>+1
         END
      END
      IF TOT.WORK.REC<2>'R0' NE 0 THEN
         TOT.WORK.REC<12>=TOT.WORK.REC<4>/TOT.WORK.REC<2>
         TOT.WORK.REC<14>=TOT.WORK.REC<6>/TOT.WORK.REC<2>
      END ELSE
         TOT.WORK.REC<12>=0
         TOT.WORK.REC<14>=0
      END
      IF TOT.WORK.REC<3>'R0' NE 0 THEN
         TOT.WORK.REC<13>=TOT.WORK.REC<5>/TOT.WORK.REC<3>
         TOT.WORK.REC<15>=TOT.WORK.REC<7>/TOT.WORK.REC<3>
      END ELSE
         TOT.WORK.REC<13>=0
         TOT.WORK.REC<15>=0
      END
      IF TOT.WORK.REC<10>'R0' NE 0 THEN
         TOT.WORK.REC<16>=TOT.WORK.REC<8>/TOT.WORK.REC<10>
      END ELSE
         TOT.WORK.REC<16>=0
      END
      IF TOT.WORK.REC<11>'R0' NE 0 THEN
         TOT.WORK.REC<17>=TOT.WORK.REC<9>/TOT.WORK.REC<11>
      END ELSE
         TOT.WORK.REC<17>=0
      END
      WRITE TOT.WORK.REC ON F.WORK,TOT.WORK.ID
      RETURN
*
* Laser sideways format
*
9100: LASER=''
      LASER<1>=1                        ;* Landscape
      LASER<2>=LPI                      ;* Lines per inch
      LASER<3>=DEPTH                    ;* Page length
      LASER<4>=16.7                     ;* Characters per inch
      LASER<5>=0
      LASER<6>=0
      LASER<7>=1
      LASER<8>=0
      GOTO 9120
*
* Laser report format
*
9110: LASER=''
      LASER<1>=0                        ;* Portrait
      LASER<2>=6                        ;* Lines per inch
      LASER<3>=DEPTH                    ;* Page length
      LASER<4>=16.7                     ;* Characters per inch
      LASER<5>=0
      LASER<6>=0
      LASER<7>=1
      LASER<8>=0
*
9120: IF WIDTH GT 154 THEN TEMP=154 ELSE TEMP=WIDTH
      LENGTH=LASER<3>-1
      EXECUTE 'TERM ,,,,,,':TEMP:',':LENGTH
*
      MARGIN=0
      ESC=CHAR(27)
      PRINT ESC:"E"
      PRINT ESC:"&l":LASER<1>:"O":      ;* Set portrait
      PRINT ESC:"&l":LASER<2>:"D":      ;* Lines per inch
      PRINT ESC:"&l":LASER<3>:"F":      ;* Page length
      PRINT ESC:"(s":LASER<4>:"h":      ;* Set pitch
      PRINT LASER<5>:"p":               ;* Proportional printing
      PRINT LASER<6>:"s":               ;* Italics off
*     PRINT "7v":                       ;* Points
      PRINT "6T":                       ;* Font
      PRINT ESC:"&l":LASER<7>:"H":      ;* Bin selection
      PRINT ESC:"&a":MARGIN:"L":
      PRINT ESC:'"g':LASER<8>:'F':      ;* Paper output
      RETURN
*
* NPR01 Start Changes
*
BUILD.XLS.FILE:

      PREC = 'SSELECT FBWORK':CH.NUM:' WITH @ID NE "[TOTAL]" BY DIVISION BY IO.STATUS BY @ID'

      EXECUTE PREC PASSLIST CAPTURING OUTPUT
*
*
      NUM.ITMS = @SELECTED
* PRINT '403 NUM.ITMS ':NUM.ITMS  ; DEBUG


      COUNTER=0
      LOOP
         READNEXT ID ELSE ID='**'
      UNTIL ID='**' DO
         XLINE=''
         READ WORK.REC FROM F.WORK, ID THEN
            XLINE = FIELD(ID,"*",1)       ;* State
            XLINE<1,2> = WORK.REC<1>      ;* I/O/TP
            XLINE<1,3> = FIELD(ID,"*",3)  ;* Division

            XLINE<1,4> = WORK.REC<2>                  ;* CURR. Shipments Count
            XLINE<1,5> = OCONV(WORK.REC<4>,"MR2")     ;* CURR. Shipments Amt
            XLINE<1,6> = WORK.REC<6>                  ;* CURR. Shipments Wht
            XLINE<1,7> = OCONV(WORK.REC<8>,"MR2")     ;* CURR. Total CPM
            XLINE<1,8> = WORK.REC<10>                 ;* CURR. Number of shipments with cost/mile
            XLINE<1,9> = OCONV(WORK.REC<12>,"MR2")    ;* CURR. Average dollars
            XLINE<1,10> = WORK.REC<14>                ;* CURR. Average weight
            XLINE<1,11> = OCONV(WORK.REC<16>,"MR2")   ;* CURR. Average CPM

            XLINE<1,12> = WORK.REC<3>                 ;* YTD Shipments Count
            XLINE<1,13> = OCONV(WORK.REC<5>,"MR2")    ;* YTD Shipments Amt
            XLINE<1,14> = WORK.REC<7>                 ;* YTD Shipments Wht
            XLINE<1,15> = OCONV(WORK.REC<9>,"MR2")    ;* YTD Total CPM
            XLINE<1,16> = WORK.REC<11>                ;* YTD Number of shipments with cost/mile
            XLINE<1,17> = OCONV(WORK.REC<13>,"MR2")   ;* YTD Average dollars
            XLINE<1,18> = WORK.REC<15>                ;* YTD Average weight
            XLINE<1,19> = OCONV(WORK.REC<17>,"MR2")   ;* YTD Average CPM

            XLS.REC<-1> = XLINE
         END
      REPEAT
*
      CONVERT @VM TO CHAR(9) IN XLS.REC

      W.BEG.DATE = OCONV(BEG.DATE,"D2/")
      CONVERT "/" TO "" IN W.BEG.DATE

      W.END.DATE = OCONV(END.DATE,"D2/")
      CONVERT "/" TO "" IN W.END.DATE

      ID.XLS = "TRAFF_REP_": CLIENT.ID :"_": W.BEG.DATE :"_": W.END.DATE :".XLS"
*
      TRY.CNT = 1

      WRITE.XLS.REPORT :

      WRITE XLS.REC ON F.BILLDATA, ID.XLS ELSE
         TRY.CNT += 1
         IF TRY.CNT GT 3 THEN
            CALL ELINE("Cant write item ":ID.XLS:" to your U: drive - Aborting!!!")
            RETURN
         END ELSE
            CALL ELINE("Cant write item ":ID.XLS:" to your U: drive - RETURN to retry")
         END
      END

      CALL ELINE("Item ":ID.XLS:" written to your U: drive ")

      RETURN
* NPR01 End Changes
