*****************************************************************************
*
* FB.20.1
* PROGRAM TO MODIFY AIR SERVICE X-REF TABLES
* WRITTEN 4/27/99 BY KD
*
*****************************************************************************
$INCLUDE FILE.DEFS INC_CLIENTS

PROG.NAME='FB.20.1'
PROG.DESC='Modify Air Service X-Ref tables'
CO.NAME='AFS Logistics, LLC'
PACK.NAME='Freight Billing'

 UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.20.1' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
 CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
OPEN '','FB.TABLES' TO F.TABLES ELSE
  CALL OPEN.ABORT(PROG.NAME,"COULD NOT OPEN FB.TABLES")
END
OPEN 'CARRIERS' TO F.CARRIERS ELSE
  CALL OPEN.ABORT(PROG.NAME,"COUD NOT OPEN CARRIERS FILE")
END

CARRIER.ID=''
CARRIER.NAME=''
EDITING=0
INDEX=1

READ BASE.CODES FROM F.TABLES,'AIR.SERVLEV' ELSE
  CALL ELINE("Could not read air codes from FB.TABLES - call programmer")
  ABORT
END

GOSUB INIT.SCREEN
GOSUB GET.CARRIER

*****************************************************************************
*****************************************************************************
*
MAIN.LOOP:
*

GOSUB DISPLAY.DATA
MASK='##'
HELP="Enter Selection - [P]age forward - [B]ack - Line Num [X]-back - [EX]it - [D]el"
CRT @(0,23):"Enter Selection ##":
CALL GEN.IN(16,23,MASK,'',Q,0,2,'L','',0,16,23,0,QI,HELP,0,22)
QI=OCONV(QI,'MCU')
BEGIN CASE
  CASE QI=''
    GOSUB CHECK.RECORD
    CARRIER.ID=''
    CARRIER.NAME=''
    CARRIER.CODES=''
    GOSUB INIT.SCREEN
    GOSUB GET.CARRIER
    GO MAIN.LOOP
  CASE QI='D'
    GOSUB DELETE.LINE
    GO MAIN.LOOP
  CASE QI='P'
    IF INDEX+12<72 THEN
      IF CARRIER.CODES<1,INDEX+11>#'' THEN
        INDEX=INDEX+12
      END ELSE
        CALL ELINE("There are no more entries after this page")
        GO MAIN.LOOP
      END
    END ELSE
      INDEX=1
    END
    GOSUB DISPLAY.DATA
    GO MAIN.LOOP
  CASE QI='X'
    GOSUB CHECK.RECORD
    CARRIER.ID=''
    CARRIER.NAME=''
    CARRIER.CODES=''
    GOSUB INIT.SCREEN
    GOSUB GET.CARRIER
    GO MAIN.LOOP
  CASE QI='B'
    IF INDEX >12 THEN
      INDEX=INDEX-12
    END ELSE
      TC=DCOUNT(CARRIER.CODES<1>,@VM)
      IF TC<=72 AND TC>60 THEN
        INDEX=61
      END
      IF TC<=60 AND TC>48 THEN
        INDEX=49
      END
      IF TC<=48 AND TC>36 THEN
        INDEX=37
      END
      IF TC<=36 AND TC>24 THEN
        INDEX=25
      END
      IF TC<=24 AND TC>12 THEN
        INDEX=13
      END
      IF TC<=12 THEN
        CALL ELINE("No more pages to view")
      END
    END
    GO MAIN.LOOP
  CASE QI='EX'
    STOP
  CASE NUM(QI)
    IF Q<INDEX OR Q>INDEX+12 THEN
      CALL ELINE("Number to edit must be on the screen")
      GO MAIN.LOOP
    END
    IF Q>1 THEN
      IF CARRIER.CODES<1,Q-1>='' OR CARRIER.CODES<2,Q-1>='' THEN
        CALL ELINE("Line(s) before this one are empty - Fill them first")
        GO MAIN.LOOP
      END
    END
  CASE 1
    CALL ELINE("Invalid Entry")
    GO MAIN.LOOP
END CASE
POS=Q
GOSUB SET.SCN.POS

*
GET.CODE:
*
EXIT=0
CRT @(0,22):@(-4):
IF CARRIER.CODES<1,POS>='' THEN
  MASK='----'
END ELSE
  MASK=CARRIER.CODES<1,POS>'L#4'
END
HELP='Please enter code - [X]-Back [EX]it'
CALL GEN.IN(4,SCN.POS+8,MASK,'',Q,0,4,'L','',0,4,SCN.POS+8,0,QI,HELP,0,23)
QI=OCONV(QI,'MCU')
BEGIN CASE
  CASE QI=''
    IF CARRIER.CODES<1,POS>='' THEN
      IF CARRIER.CODES<2,POS>#'' OR CARRIER.CODES<3,POS>#'' THEN
        CALL ELINE("Must Enter a Code")
        GO GET.CODE
      END
      GO MAIN.LOOP
    END ELSE
      IF CARRIER.CODES<2,POS>='' THEN
        CALL ELINE("Must have a description")
      END
      Q=CARRIER.CODES<1,POS>
    END
  CASE QI='X'
    IF CARRIER.CODES<1,POS>#'' THEN
      IF CARRIER.CODES<2,POS>#'' THEN
        IF CARRIER.ID#'BASE' THEN
          IF CARRIER.CODES<3,POS>#'' ELSE
            CALL ELINE("Must enter a Base X-Ref code")
            CRT @(4,SCN.POS+8):CARRIER.CODES<1,POS>'L#4'
            GO GET.AFS.CODE
          END
        END
      END ELSE
        CALL ELINE("Must have a description")
        GO GET.DESC
      END
    END
    GO MAIN.LOOP
  CASE QI='EX'
    STOP
END CASE
CARRIER.CODES<1,POS>=Q
CRT @(4,SCN.POS+8):CARRIER.CODES<1,POS>'L#4':

*
GET.DESC:
*
CRT @(0,22):@(-4):
IF CARRIER.CODES<2,POS>='' THEN
  MASK="-----------------------------------------------------------"
END ELSE
  MASK=CARRIER.CODES<2,POS>'L#59'
END
HELP='Please enter Description - [X]-Back [EX]it'
CALL GEN.IN(10,SCN.POS+8,MASK,'',Q,0,59,'L','',0,10,SCN.POS+8,0,QI,HELP,0,23)
QI=OCONV(QI,'MCU')
BEGIN CASE
  CASE QI=''
    IF CARRIER.CODES<2,POS>='' THEN
      CALL ELINE("Must enter data")
      GO GET.DESC
    END ELSE
      Q=CARRIER.CODES<2,POS>
    END
  CASE QI='X'
    GOSUB DISPLAY.DATA
    GO GET.CODE
  CASE QI='EX'
    STOP
END CASE
CARRIER.CODES<2,POS>=Q
CRT @(10,SCN.POS+8):CARRIER.CODES<2,POS>'L#59':

*
GET.AFS.CODE:
*
IF CARRIER.ID#'BASE' THEN
  CRT @(0,22):@(-4):
  IF CARRIER.CODES<3,POS>='' THEN
    MASK="--------"
  END ELSE
    MASK=CARRIER.CODES<3,POS>'L#8'
  END
  HELP='Please enter AFS Code - [X]-Back [EX]it [L]ist'
  CALL GEN.IN(71,SCN.POS+8,MASK,'',Q,0,8,'L','',0,71,SCN.POS+8,0,QI,HELP,0,23)
  QI=OCONV(QI,'MCU')
  BEGIN CASE
    CASE QI=''
      IF CARRIER.CODES<3,POS>='' THEN
        CALL ELINE("Must enter data")
        GO GET.AFS.CODE
      END
    CASE QI='X'
      GOSUB DISPLAY.DATA
      GO GET.DESC
    CASE QI='EX'
      STOP
    CASE QI='L'
      CHOICE=''
      CRT @(0,0):@(-3):
      T.AFS.INDEX=INDEX
      T.CARRIER.ID=CARRIER.ID
      T.CARRIER.CODES=CARRIER.CODES
      T.CARRIER.NAME=CARRIER.NAME
      INDEX=1
      GOSUB LIST.AFS.CODES
      GOSUB INIT.SCREEN
      GOSUB DISPLAY.DATA
      IF CHOICE#'' THEN
        CARRIER.CODES<3,POS>=CHOICE
      END ELSE
        GO GET.AFS.CODE
      END
    CASE 1
*      CRT @(0,23):"STOP NOW": ; INPUT NUL
      LOCATE Q IN BASE.CODES<1> SETTING CODE.POS ELSE
        CALL ELINE("Could not find code ":Q:" in Base X-Ref codes")
        GO GET.AFS.CODE
      END
      CARRIER.CODES<3,POS>=Q
  END CASE
  CRT @(71,SCN.POS+8):CARRIER.CODES<3,POS>'L#8':
END

IF POS>=72 THEN
  CALL ELINE("Entry of more dthan 72 codes not allowed")
  GO MAIN.LOOP
END
POS=POS+1
IF POS=13 OR POS=25 OR POS=37 OR POS=49 OR POS=61 THEN
  INDEX=INDEX+12
  GOSUB DISPLAY.DATA
END
GOSUB SET.SCN.POS
GO GET.CODE

*****************************************************************************
*****************************************************************************

STOP

*****************************************************************************
*****************************************************************************
*INTERNALL SUBROUTINES
*****************************************************************************

*****************************************************************************
*
*
*****************************************************************************
*
INIT.SCREEN:
*

CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
CRT @(0,3):"-------------------------------------------------------------------------------"
IF CARRIER.ID#'' THEN
  CRT @(0,4):"Carrier : ":CARRIER.ID:" - ":CARRIER.NAME
END ELSE
  CRT @(0,4):"Carrier : ":
END
CRT @(0,5):"-------------------------------------------------------------------------------"

RETURN

*****************************************************************************
*****************************************************************************
*
GET.CARRIER:
*

EDITING=0
IF CARRIER.ID#'' THEN
  MASK=CARRIER.ID
END ELSE
  MASK='#####'
END
INDEX=1
HELP='Enter Carrier Number, or ENTER for BASE - [X]-Back - [EX]it'
CALL GEN.IN(10,4,MASK,'',Q,0,5,'L','',0,10,4,0,QI,HELP,0,23)
QI=OCONV(QI,'MCU')
BEGIN CASE
  CASE QI=''
    CARRIER.ID='BASE'
  CASE QI='X'
    STOP
  CASE QI='EX'
    STOP
  CASE NUM(QI)
    READ CARRIER.REC FROM F.CARRIERS,Q'R%5' ELSE
      CALL ELINE("Carrier number ":Q:" not on file")
      CARRIER.ID=''
      CARRIER.NAME=''
      GO GET.CARRIER
    END
    CARRIER.ID=Q'R%5'
    CARRIER.NAME=CARRIER.REC<1>
    GOSUB INIT.SCREEN
  CASE 1
    CALL SOUNDEX.DISPLAY(QI,'CARRIERS','SDX.CARRIER,NAME','1,3,4',ITEM.LIST)
    CARRIER.ID=ITEM.LIST'R%5'
    READ CARRIER.REC FROM F.CARRIERS,CARRIER.ID ELSE
      CALL ELINE("ERROR - carrier number ":CARRIER.ID:" not on file")
      CARRIER.ID=''; CARRIER.NAME=''
      GOSUB INIT.SCREEN
      GO GET.CARRIER
    END
    CARRIER.NAME=CARRIER.REC<1>
    GOSUB INIT.SCREEN
END CASE
IF CARRIER.ID='BASE' THEN
  CARRIER.ID='BASE'
  CARRIER.NAME='Air Code Xref Base Table'
*  READ BASE.CODES FROM F.TABLES,'AIR.SERVLEV' ELSE
*    CALL ELINE("Could not read base codes from FB.TABLES")
*    ABORT
*  END
  GOSUB INIT.SCREEN
END
GOSUB READ.REC

RETURN

*****************************************************************************
*****************************************************************************
*
READ.REC:
*

IF CARRIER.ID#'BASE' THEN
  IF NOT(EDITING) THEN
*    READ CARRIER.CODES FROM F.TABLES,'AIR.SERVLEV.XREF*':CARRIER.ID ELSE
    READ CARRIER.CODES FROM F.TABLES,'AIR.SERVLEV*':CARRIER.ID ELSE
      MASK='Y'
      HELP="No table for client ":CARRIER.ID:" - Do you wish to create one?"
      CRT @(0,23):"Create X-Ref Table for Client? [Y]":
      CALL GEN.IN(32,23,MASK,'',Q,0,1,'L','',0,32,23,0,QI,HELP,0,22)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
        CASE QI='N' OR QI='X'
          EDITING=0
          CARRIER.ID=''
          CARRIER.NAME=''
          GOSUB INIT.SCREEN
          GO GET.CARRIER
        CASE QI='EX'
          STOP
        CASE QI='' OR QI='Y'
          CARRIER.CODES=''
          EDITING=1
        CASE 1
          CALL ELINE("Invalid Command")
          GOSUB INIT.SCREEN
          GO DISPLAY.DATA
      END CASE
    END
  END
END ELSE
  CARRIER.CODES=BASE.CODES
  EDITING=1
END
OLD.CARRIER.CODES=CARRIER.CODES

RETURN

*****************************************************************************
*****************************************************************************
*
DISPLAY.DATA:
*

CRT @(4,6):'CODE  DESCRIPTION':
CRT @(4,7):'____  ___________________________________________________________':
IF CARRIER.ID='BASE' ELSE
  CRT @(70,6):"BASE CODE":
  CRT @(71,7):"________":
END
T.INDEX=INDEX-1
FOR COUNT=1 TO 12
  CRT@(0,COUNT+8):T.INDEX+COUNT'L#2':
NEXT
X=0
FOR COUNT=INDEX TO INDEX+11
  X=X+1
  IF CARRIER.CODES<1,COUNT>#'' THEN
    CRT @(4,X+8):CARRIER.CODES<1,COUNT>'L#4':
  END ELSE
    CRT @(4,X+8):"----":
  END
*CRT @(0,23):"STOP NOW": ; INPUT NUL
  IF CARRIER.CODES<2,COUNT>#'' THEN
    CRT @(10,X+8):CARRIER.CODES<2,COUNT>'L#68':
  END ELSE
    CRT @(10,X+8):"-----------------------------------------------------------":
  END
  IF CARRIER.ID#'BASE' THEN
    IF CARRIER.CODES<3,COUNT>#'' THEN
      CRT @(71,X+8):CARRIER.CODES<3,COUNT>'L#8':
    END ELSE
      CRT @(71,X+8):"--------":
    END
  END
NEXT
CRT @(0,22):@(-4): ; CRT @(0,23):@(-4):

RETURN

*****************************************************************************
*****************************************************************************
*
SET.SCN.POS:
*

IF POS <= 12 THEN SCN.POS=POS
IF POS > 12 AND POS <= 24 THEN SCN.POS=POS-12
IF POS > 24 AND POS <= 36 THEN SCN.POS=POS-24
IF POS > 36 AND POS <= 48 THEN SCN.POS=POS-36
IF POS > 48 AND POS <= 60 THEN SCN.POS=POS-48
IF POS > 60 AND POS <= 72 THEN SCN.POS=POS-60

RETURN

*****************************************************************************
*****************************************************************************
*
DELETE.LINE:
*

MASK='##'
HELP='Choose Line to delete'
CRT @(0,23):"Delete which line? ##":
CALL GEN.IN(19,23,MASK,'',Q,0,2,'L','',0,19,23,0,QI,HELP,0,22)
QI=OCONV(QI,'MCU')
BEGIN CASE
  CASE QI='X'
    GO MAIN.LOOP
  CASE QI='EX'
    STOP
  CASE NUM(QI)
    IF Q<INDEX OR Q >INDEX+12 THEN
      CALL ELINE("Can not delete line that is not displayed")
      GO DELETE.LINE
    END
    IF CARRIER.CODES<1,Q>='' THEN
      CALL ELINE("This line is already empty")
      GO DELETE.LINE
    END
  CASE 1
    CALL ELINE("Invalid Entry")
    GO DELETE.LINE
END CASE
*CRT @(0,23):"STOP NOW": ; INPUT NUL
CARRIER.CODES=DELETE(CARRIER.CODES,1,Q,0)
CARRIER.CODES=DELETE(CARRIER.CODES,2,Q,0)
CARRIER.CODES=DELETE(CARRIER.CODES,3,Q,0)

RETURN

*****************************************************************************
*****************************************************************************
*
CHECK.RECORD:
*
T.COUNT.1=DCOUNT(OLD.CARRIER.CODES<1>,@VM)
T.COUNT.2=DCOUNT(CARRIER.CODES<1>,@VM)
IF T.COUNT.1>T.COUNT.2 THEN
  MAX.COUNT=T.COUNT.1
END ELSE
  MAX.COUNT=T.COUNT.2
END
FOR LOOP.1=1 TO MAX.COUNT
  IF CARRIER.ID='BASE' THEN
    LOOP.2.COUNT=2
  END ELSE
    LOOP.2.COUNT=3
  END
  FOR LOOP.2=1 TO LOOP.2.COUNT
    IF OLD.CARRIER.CODES<LOOP.2,LOOP.1> NE CARRIER.CODES<LOOP.2,LOOP.1> THEN GO BREAK.LOOP
  NEXT
NEXT

RETURN

*
BREAK.LOOP:
*

MASK='Y'
HELP='Record has changed'
CRT @(0,23):'Do you want to update this record? [Y]':
CALL GEN.IN(36,23,MASK,'',Q,0,1,'L','',0,36,23,0,QI,HELP,0,22)
BEGIN CASE
  CASE QI='Y' OR QI=''
    IF CARRIER.ID#'BASE' THEN
      POS=''
      SORTED.TABLE=''
      TIMES=DCOUNT(CARRIER.CODES<1>,@VM)
      FOR X=1 TO TIMES
        CODE=CARRIER.CODES<1,X>
        LOCATE CODE IN SORTED.TABLE<1> BY 'AL' SETTING POS ELSE NULL
        INS CODE BEFORE SORTED.TABLE<1,POS>
        INS CARRIER.CODES<2,X> BEFORE SORTED.TABLE<2,POS>
        INS CARRIER.CODES<3,X> BEFORE SORTED.TABLE<3,POS>
      NEXT
      CARRIER.CODES=SORTED.TABLE
      WRITE CARRIER.CODES ON F.TABLES,'AIR.SERVLEV*':CARRIER.ID
    END ELSE
      POS=''
      SORTED.TABLE=''
      TIMES=DCOUNT(CARRIER.CODES<1>,@VM)
*      CRT @(0,23):"STOP NOW": ; INPUT NUL
      FOR X=1 TO TIMES
        CODE=CARRIER.CODES<1,X>
        LOCATE CODE IN SORTED.TABLE<1> BY 'AL' SETTING POS ELSE NULL
        INS CODE BEFORE SORTED.TABLE<1,POS>
        INS CARRIER.CODES<2,X> BEFORE SORTED.TABLE<2,POS>
      NEXT
      CARRIER.CODES=SORTED.TABLE
      WRITE CARRIER.CODES ON F.TABLES,'AIR.SERVLEV'
      BASE.CODES=CARRIER.CODES
    END
    RETURN
  CASE QI='N'
    RETURN
  CASE 1
    CALL ELINE("Invalid Entry")
    GO BREAK.LOOP
END CASE


STOP

*****************************************************************************
*
LIST.AFS.CODES:
*

CARRIER.ID='BASE'
CARRIER.CODES=BASE.CODES
CARRIER.NAME='Base Codes - View Only'
GOSUB INIT.SCREEN
GOSUB DISPLAY.DATA
MASK='####'
HELP="Enter Selection - [P]age forward - [B]ack - Line Num - Code"
CRT @(0,22):"                - [X]-Back - [EX]it"
CRT @(0,23):"Enter Selection ####":
CALL GEN.IN(16,23,MASK,'',Q,0,4,'L','',0,16,23,0,QI,HELP,0,21)
QI=OCONV(QI,'MCU')
BEGIN CASE
  CASE QI='' OR QI='X'
    NULL
  CASE QI='P'
    IF INDEX+12<72 THEN
      IF CARRIER.CODES<1,INDEX+11>#'' THEN
        INDEX=INDEX+12
      END ELSE
        CALL ELINE("There are no more codes after this page")
        GO LIST.AFS.CODES
      END
    END ELSE
      INDEX=1
    END
    GOSUB DISPLAY.DATA
    GO LIST.AFS.CODES
  CASE QI='B'
    IF INDEX >12 THEN
      INDEX=INDEX-12
    END ELSE
      TC=DCOUNT(CARRIER.CODES<1>,@VM)
      IF TC<=72 AND TC>60 THEN
        INDEX=61
      END
      IF TC<=60 AND TC>48 THEN
        INDEX=49
      END
      IF TC<=48 AND TC>36 THEN
        INDEX=37
      END
      IF TC<=36 AND TC>24 THEN
        INDEX=25
      END
      IF TC<=24 AND TC>12 THEN
        INDEX=13
      END
      IF TC<=12 THEN
        CALL ELINE("No other pages to view")
      END
    END
    GO LIST.AFS.CODES
  CASE QI='EX'
    STOP
  CASE NUM(QI)
    IF Q<INDEX OR Q>INDEX+12 THEN
      CALL ELINE("Number to use must be one viewed on screen")
      GO LIST.AFS.CODES
    END
    CHOICE=BASE.CODES<1,Q>
  CASE 1
    LOCATE Q IN BASE.CODES<1> SETTING AFS.CODE.POS ELSE
      CALL ELINE("Sorry - ":Q:" is not a valid code")
      GO LIST.AFS.CODES
    END
    CHOICE=Q
END CASE

CARRIER.ID=T.CARRIER.ID
CARRIER.CODES=T.CARRIER.CODES
CARRIER.NAME=T.CARRIER.NAME
INDEX=T.AFS.INDEX

RETURN

*****************************************************************************
