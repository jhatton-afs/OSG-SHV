********************************************************************************
*  Program : FB.3.20.11 (Freight Payment Time Analysis)
*  Author  : James Barberousse
*
*  Copyright (C) 2002 by AFS Logistics, LLC. - All Rights Reserved
********************************************************************************

$INCLUDE FILE.DEFS INC_ADDS60.CODES

* 081809 - NPR01 - T091057 - Replace Sandra Long with Stacy Rittenbach wherever the former occurs

*
**    General variables
*
      CO.NAME='AFS Logistics, LLC'
      PROG.NAME='FB.3.20.11'
      PROG.DESC='Freight Payment Time Analysis'
      PACK.NAME='Time Accounting'
      CALL GET.USER(USER.NAME)
       UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.3.20.11' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
       CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
      USER.NAME=OCONV(USER.NAME,'MCU')
      MASK.CHAR='-'
      ESC=CHAR(27)
      REV.NORMAL=TERM.ESC.SEQ:CHAR(TERM.REV+TERM.DIM)
      REV.HILITE=TERM.ESC.SEQ:CHAR(TERM.REV)
      REV.OFF=TERM.ESC.SEQ:CHAR(TERM.NORMAL)

*
**    Set SuperUser mode to managers and everyone else to RegularUser mode
**    SuperUsers can run any employee while RegularUsers can run only themselves
*
      CALL GET.USER(USER.NAME)
      USER.NAME=OCONV(USER.NAME,'MCU')
      SUPER.USER=1
      BEGIN CASE
         CASE USER.NAME='BRIAN'; * Set these users to SuperUser mode
         CASE USER.NAME='KAREN'
         CASE USER.NAME='OWEN'
         CASE USER.NAME='CHRIS'
         CASE USER.NAME='MYRA'
         CASE USER.NAME='DEBBIE'
* NPR01         CASE USER.NAME='SANDRA'
         CASE USER.NAME='SRITTENBACH'     ;* NPR01
         CASE USER.NAME='CBEASLEY'
         CASE USER.NAME='CGOSS'
         CASE USER.NAME='JAMES'
         CASE USER.NAME='DAVID'
         CASE USER.NAME='WPARDUE'
         CASE 1
            SUPER.USER=0; * Set everyone else to RegularUser mode
      END CASE

*
**    Open files
*
      OPEN '','EMP.DY.PERF' TO F.TIME ELSE
         CALL OPEN.ABORT('EMP.DY.PERF',PROG.NAME)
      END
      OPEN '','BCTRL' TO F.BCTRL ELSE
         CALL OPEN.ABORT('BCTRL',PROG.NAME)
      END

*
**    Input variables
*
      KB.TIME.USER=USER.NAME;        * User name
      KB.TIME.DATE=DATE();           * Date to report on

*
**    Other variables
*
      KB.TIME.FULLNAME='';           * Full name read from BCTRL

      DATA.SCR.DA=''
      DATA.PRT.DA=''
      HEADING.LINE='CLIENT          STARTING            ENDING      TIME SPENT               TOTALS'
*                    XXXXX        01:41:42PM        01:42:32PM        00:21:21             00:00:00
      GOSUB ASSIGN.DISPLAY.SCREEN

*
**    Display heading and prompts
*
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      CRT @(0,2):STR('=',79)
      CRT DISPLAY.SCREEN

75:   IF NOT(SUPER.USER) THEN
         READ DBCTRL FROM F.BCTRL,KB.TIME.USER ELSE DBCTRL=''
         KB.TIME.FULLNAME=DBCTRL<13>
         CRT @(17,4):KB.TIME.USER:' ':KB.TIME.FULLNAME:@(-4)
         GOTO 200; * Get beginning date and rest of data
      END

*
**    Get user name
*
100:  MASK=KB.TIME.USER:STR(MASK.CHAR,15-LEN(KB.TIME.USER)):@(-4)
      HELP='Enter UserName. [U]=User List [EX]=Exit'
      CALL GEN.IN(11,4,MASK,'',Q,0,15,'','',2,11,4,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='U'
            HEAD1=STR(' ',15):CO.NAME:' Employees':STR(' ',15):"'L'"
            HEAD1:=STR(MASK.CHAR,59)
            EXECUTE 'SORT BCTRL 13 15 16 17 HEADING "':HEAD1:'" (H'
            CALL ELINE('')
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            CRT @(0,2):STR('=',79)
            CRT DISPLAY.SCREEN
            GOTO 100
         CASE QI=''
            QI=KB.TIME.USER
      END CASE
      CRT @(11,4):QI:@(-4)
      READ DBCTRL FROM F.BCTRL,QI ELSE
         CALL ELINE('"':QI:'" is not a valid user.')
         GOTO 100
      END
      KB.TIME.USER=QI
      KB.TIME.FULLNAME=DBCTRL<13>
      CRT @(11,4):KB.TIME.USER:' ':KB.TIME.FULLNAME:@(-4)

*
**    Get date
*
200:  IF KB.TIME.DATE='' THEN MASK='MM.DD.YYYY':@(-4) ELSE MASK=KB.TIME.DATE'D4-':@(-4)
      HELP='Enter the date to view. [T]=Today [X]=Back [EX]=Exit'
      CALL GEN.IN(11,6,MASK,'',Q,0,10,'','',2,11,6,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            IF SUPER.USER THEN GOTO 100
         CASE QI='T'
            QI=DATE()'D4-'
         CASE QI=''
            IF KB.TIME.DATE='' THEN
               GOTO 200
            END ELSE
               QI=KB.TIME.DATE'D4-'
            END
         CASE QI MATCHES '0N'
            BEGIN CASE
               CASE LEN(QI)=4
                  QI=QI[1,2]:'.':QI[3,2]:'.':(DATE()'D4-')[7,4]
               CASE LEN(QI)=6
                  IF QI[5,2]<50 THEN
                     QI=QI[1,2]:'.':QI[3,2]:'.':(DATE()'D4-')[7,2]:QI[5,2]
                  END ELSE
                     QI=QI[1,2]:'.':QI[3,2]:'.':'19':QI[5,2]; * ((DATE()-365)'D4-')[7,2]:QI[5,2]
                  END
               CASE LEN(QI)=8
                  QI=QI[1,2]:'.':QI[3,2]:'.':QI[5,4]
               CASE 1
                  CALL ELINE('Use one of the following formats: MMDD or MMDDYY or MMDDYYYY.')
                  GOTO 200
            END CASE
      END CASE
      KB.TIME.DATE=ICONV(QI,'D')
      IF KB.TIME.DATE='' THEN
         CALL ELINE('Invalid date.')
         GOTO 200
      END
      CRT @(11,6):KB.TIME.DATE'D4-':@(-4)
      
*
**    Verify input data is correct
*
*600:  MASK='Verify Above Input. Select:':STR(MASK.CHAR,2)
*      HELP='[ENTER]=Continue [X]=Backup [EX]=Exit'
*      CALL GEN.IN(0,21,MASK,'',Q,0,2,'','',2,-2,21,0,QI,HELP,0,23)
*      QI=OCONV(QI,'MCU')
*      BEGIN CASE
*         CASE QI='EX'
*            GOTO THE.END
*         CASE QI='X'
*            CRT @(0,21):@(-4)
*            GOTO 200
*         CASE QI=''
*            NULL
*         CASE 1
*            CALL ELINE('Invalid entry.')
*            GOTO 600
*      END CASE
*      CRT @(0,21):@(-4)
*****************************************************************************************
*
**    All input has now been entered and verified
*
*****************************************************************************************

      INPUT.SPECS=KB.TIME.USER:' ':KB.TIME.FULLNAME:' ':KB.TIME.DATE'D4-'
      CRT @(0,3):INPUT.SPECS

      DATA.SCR.DA=''
      DATA.PRT.DA=''

      DAY.ID=KB.TIME.USER:'*':KB.TIME.DATE
      READ DTIME FROM F.TIME,DAY.ID ELSE DTIME=''
      NUM.CLIENTS=DCOUNT(DTIME<3>,@VM)
      LAST.CLIENT=DTIME<3,1>
      CLIENT.BREAK=0
      TOTAL=0
      GRAND.TOTAL=0

      FOR X=1 TO NUM.CLIENTS
         CLIENT=DTIME<3,X>
         IF CLIENT#LAST.CLIENT THEN
            CLIENT.BREAK=1
            GOSUB BUILD.SCR.LINE
            DATA.SCR.DA<-1>=LINE
            CLIENT.BREAK=0
            LAST.CLIENT=CLIENT
            GRAND.TOTAL+=TOTAL
            TOTAL=0
         END
         NUM.SEGMENTS=DCOUNT(DTIME<12,X>,@SVM)
         FOR Y=1 TO NUM.SEGMENTS
            START.TIME=DTIME<12,X,Y>'R0'
            END.TIME=DTIME<13,X,Y>'R0'
            DIFFERENCE=END.TIME-START.TIME
            TOTAL+=DIFFERENCE
            GOSUB BUILD.SCR.LINE
            DATA.SCR.DA<-1>=LINE
         NEXT Y
      NEXT X
      * Do totals for the last client
      IF DTIME#'' THEN
         CLIENT.BREAK=1
         GOSUB BUILD.SCR.LINE
         DATA.SCR.DA<-1>=LINE
         GRAND.TOTAL+=TOTAL
      END
      * Do grand totals across all clients
      IF DTIME#'' THEN
         CLIENT.BREAK=2
         GOSUB BUILD.SCR.LINE
         DATA.SCR.DA<-1>=LINE
      END

      * Setup and call viewer
      START.DISPLAY.DA=5
      END.DISPLAY.DA=20
      GOSUB SETUP.DISPLAY.DA

      * Clear input specs and prompt for next user
      CRT @(0,3):@(-4)
      IF SUPER.USER THEN
         GOTO 100
      END ELSE
         GOTO 75
      END


*
**    Start internal subroutines
*
ASSIGN.DISPLAY.SCREEN:***
*     Assign screen to a variable
      DISPLAY.SCREEN =@(0, 4):@(-3):@(0,4):'UserName :'
      DISPLAY.SCREEN:=@(0, 6):             'Date     :'
      RETURN


BUILD.SCR.LINE:***
*     Build a detail line for screen display
      LINE=''
      BEGIN CASE
         CASE CLIENT.BREAK=0
            LINE<1> =' ':CLIENT'R%5':SPACE(8)
            LINE<1>:=(OCONV(START.TIME,'MTHS'))'R#10':SPACE(8)
            LINE<1>:=(OCONV(END.TIME,'MTHS'))'R#10':SPACE(8)
            LINE<1>:=(OCONV(DIFFERENCE,'MTS'))'R#8':SPACE(8)
         CASE CLIENT.BREAK=1
            LINE<1>='****** Total for Client ':LAST.CLIENT'R%5':SPACE(42):OCONV(TOTAL,'MTS')'R#8'
         CASE CLIENT.BREAK=2
            LINE<1>='************ Total for All Clients':SPACE(37):OCONV(GRAND.TOTAL,'MTS')'R#8'
      END CASE
      RETURN


BUILD.PRT.LINE:***
*     Build a detail line for printer display
      LINE=''
      RETURN      


SETUP.DISPLAY.DA:***
*     Data viewer
*     Input: DATA.SCR.DA, HEADING.LINE, START.DISPLAY.DA, END.DISPLAY.DA
      CRT @(0,START.DISPLAY.DA-1):REV.NORMAL:HEADING.LINE:REV.OFF
      CRT @(0,END.DISPLAY.DA+1):REV.NORMAL:' ':REV.HILITE:'U':REV.NORMAL:'p ':REV.HILITE:'D':REV.NORMAL:'own ':REV.HILITE:'T':REV.NORMAL:'op ':REV.HILITE:'B':REV.NORMAL:'ottom ':REV.HILITE:'P':REV.NORMAL:'rint ':REV.HILITE:'E':REV.NORMAL:'xit                                        Select:  ':REV.OFF
      NUM.ITEMS.DA=DCOUNT(DATA.SCR.DA,@AM)
      NUM.DISPLAY.ITEMS.DA=END.DISPLAY.DA-START.DISPLAY.DA+1
      START.ITEM.DA=1
      END.ITEM.DA=NUM.DISPLAY.ITEMS.DA
      IF END.ITEM.DA>NUM.ITEMS.DA THEN END.ITEM.DA=NUM.ITEMS.DA

DISPLAY.DA:
      FOR X=START.ITEM.DA TO END.ITEM.DA
         CRT @(0,START.DISPLAY.DA+X-START.ITEM.DA):DATA.SCR.DA<X>:@(-4)
      NEXT X
      FOR X=START.DISPLAY.DA+END.ITEM.DA-START.ITEM.DA+1 TO END.DISPLAY.DA
         CRT @(0,X):@(-4)
      NEXT X

GET.KEY:
      CALL GEN.IN(77,END.DISPLAY.DA+1,'','',Q,0,1,'','',1,77,END.DISPLAY.DA+1,1,QI,'',0,23)
      CRT @(77,END.DISPLAY.DA+1):REV.NORMAL:'  ':REV.OFF
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='E'
            FOR X=START.DISPLAY.DA-1 TO END.DISPLAY.DA+1
               CRT @(0,X):@(-4)
            NEXT X
            CRT DISPLAY.SCREEN
            RETURN
         CASE QI='P'
             CRT @(0,END.DISPLAY.DA+2):'Printing...':@(-4):
             GOSUB PRINT.DATA.DA
*DF             GOTO THE.END
            CRT DISPLAY.SCREEN
            RETURN
         CASE QI='B'
            IF END.ITEM.DA=NUM.ITEMS.DA THEN GOTO GET.KEY
            END.ITEM.DA=NUM.ITEMS.DA
            START.ITEM.DA=END.ITEM.DA-NUM.DISPLAY.ITEMS.DA+1
            IF START.ITEM.DA<1 THEN START.ITEM.DA=1
            GOTO DISPLAY.DA
         CASE QI='T'
            IF START.ITEM.DA=1 THEN GOTO GET.KEY
            START.ITEM.DA=1
            END.ITEM.DA=NUM.DISPLAY.ITEMS.DA
            IF END.ITEM.DA>NUM.ITEMS.DA THEN END.ITEM.DA=NUM.ITEMS.DA
            GOTO DISPLAY.DA
         CASE QI='D'
            IF END.ITEM.DA=NUM.ITEMS.DA THEN GOTO GET.KEY
            * Line at a time
            START.ITEM.DA=START.ITEM.DA+1
            END.ITEM.DA=END.ITEM.DA+1
            GOTO DISPLAY.DA

            * Page at a time
            * START.ITEM.DA=END.ITEM.DA+1
            * END.ITEM.DA=START.ITEM.DA+NUM.DISPLAY.ITEMS.DA-1
            * IF END.ITEM.DA>NUM.ITEMS.DA THEN END.ITEM.DA=NUM.ITEMS.DA
            * GOTO DISPLAY.DA
         CASE QI='U'
            IF START.ITEM.DA=1 THEN GOTO GET.KEY
            * Line at a time
            START.ITEM.DA=START.ITEM.DA-1
            END.ITEM.DA=END.ITEM.DA-1
            GOTO DISPLAY.DA

            * Page at a time
            * END.ITEM.DA=START.ITEM.DA-1
            * START.ITEM.DA=END.ITEM.DA-NUM.DISPLAY.ITEMS.DA+1
            * IF START.ITEM.DA<1 THEN START.ITEM.DA=1
            * GOTO DISPLAY.DA
         CASE 1
            GOTO GET.KEY
      END CASE

PRINT.DATA.DA:
*     Print report

*     Setup printer
      WIDTH=132
      LENGTH=60
      EXECUTE 'TERM ,,,,,,':WIDTH:',':LENGTH
      CTR=INT(WIDTH/2)
*DFLASER.STR=''
*DFLASER.STR:= ESC:'E'
*DFLASER.STR:= ESC:'&l0O' ; * Portrait
*DFLASER.STR:= ESC:'&l8D'
*DFLASER.STR:= ESC:'&l88F' ; ** 88 Lines on a Page
*DFLASER.STR:= ESC:'(8U'
*DFLASER.STR:= ESC:'(s0p'
*DFLASER.STR:= '19h'
*DFLASER.STR:= '0s'
*DFLASER.STR:= '0b'
*DFLASER.STR:= '4102T'
      PRINTER ON
*DF      PRINT LASER.STR ; * Configure Laser Printer
      LASER=''
      LASER<1>=0                           ;* Portrait
      LASER<2>=6                           ;* Lines per inch
      LASER<3>=87                          ;* Page length
      LASER<4>=16.7                        ;* Characters per inch
      LASER<5>=0
      LASER<6>=0
      LASER<7>=1
      LASER<8>=0
      MARGIN=0
      PRINT ESC:"E"
      PRINT ESC:"&l":LASER<1>:"O":         ;* Set portrait
      PRINT ESC:"&l":LASER<2>:"D":         ;* Lines per inch
      PRINT ESC:"&l":LASER<3>:"F":         ;* Page length
      PRINT ESC:"(s":LASER<4>:"h":         ;* Set pitch
      PRINT LASER<5>:"p":                  ;* Proportional printing
      PRINT LASER<6>:"s":                  ;* Italics off
      PRINT "0T":                          ;* Line Printer Font
      PRINT ESC:"&l":LASER<7>:"H"          ;* Bin selection
      PRINT ESC:"&a":MARGIN:"L"
      PRINT ESC:'"g':LASER<8>:'F'          ;* Paper output

      L.TAB=CTR-(LEN(PROG.DESC)/2)
      L.TAB=L.TAB-LEN(CO.NAME)
      TEMP=CO.NAME:SPACE(L.TAB):PROG.DESC
      R.TAB=WIDTH-LEN(TEMP)
      R.TAB=R.TAB-LEN(TIMEDATE())
      HEAD1=CO.NAME:SPACE(L.TAB):PROG.DESC:SPACE(R.TAB):TIMEDATE():"'L'"
      
      TITLE1='for ':KB.TIME.USER:' ':KB.TIME.FULLNAME:' for ':KB.TIME.DATE'D4-'
      TITLE2=USER.NAME'L#10':' ':"PAGE 'PL'"

      L.TAB=CTR-(LEN(TITLE1)/2)
      L.TAB=L.TAB-LEN(PROG.NAME)
      TEMP=PROG.NAME:SPACE(L.TAB):TITLE1
      R.TAB=WIDTH-LEN(TEMP)
      R.TAB=R.TAB-LEN(TITLE2)
      HEAD2=PROG.NAME:SPACE(L.TAB):TITLE1:SPACE(R.TAB):TITLE2


*DF      HEAD5='  Week     Seq     Time      Time       Time   Next Auto   Change':"'L'"
      HEAD5='Client          Starting            Ending      Time Spent               Totals':"'L'"
*DF      HEAD6=' Ending     #     Before    Change     After   Increment   Reason':"'L'"
      *      08.30.01    1    1125:00   -100:00   1215:00    05.01.02   This is a day off

*DF      HEAD7=STR('-',132):"'L'"
      HEAD6=STR('-',132):"'L'"
*DF      HEADING HEAD1:HEAD2:HEAD7:HEAD5:HEAD6:HEAD7
      HEADING HEAD1:HEAD2:HEAD6:HEAD5:HEAD6

      NUM.PRT.ITEMS.DA=DCOUNT(DATA.SCR.DA,@AM)
      FOR X=1 TO NUM.PRT.ITEMS.DA
         PRINT DATA.SCR.DA<X>
      NEXT X
      PRINTER OFF
      PRINTER CLOSE
      RETURN


THE.END:***
*     End of program
      CRT @(0,21)
      END
