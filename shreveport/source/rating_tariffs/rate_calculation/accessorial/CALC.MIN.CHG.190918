      SUBROUTINE CALC.MIN.CHG(CLIENT.ID,CARRIER.ID,MAT PRO.REC,MAT CLIENT.REC,MIN.CHG,FLAT.CHG)
*****************************************************************************
* Program name : CALC.MIN.CHG
* Author       : Greg Bino
* Date written : 02-25-2016
* Library      : FBBP
* COPYRIGHT (C) 1998 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED.
*
* Calc the contract minimum shipping charge or if FLATE rate
*
* Last updated by afs (gbino) at 08:16:10 on 03/14/2016.
*
* Start modification history
* Mod 00 02-25-16, grb, 10037.0000  New program
* 03/07/19 : NKH01 : ACCU-316 Modified CREATE-FILE file sizes
* End modification history
*
******************************************************************************
*
* Initialize variables.
*
$INCLUDE FILE.DEFS INC_FB.AUDIT
*****      BILL.DATE = DATE()

      LOOKUP.ZIP = PRO.REC(3)
      IOT = PRO.REC(2)
      SHIP.ZIP = PRO.REC(4)
      BILL.DATE = PRO.REC(1)
      TOT.WEIGHT = PRO.REC(6)
      LOGISTICS = CLIENT.REC(93)
      ORIG.STATE = PRO.REC(25)
      DEST.STATE = PRO.REC(26)
      FLAT.CHG = 0
      CONTR.CHRG = 0
      CONTR.FLAT = ''
      CONTR.MIN = 0
      MIN.CHG = 0
      CLIENT.MODE = 0
      PROCESS.MODE = 0
      OPEN '','FB.AUDIT,':CLIENT.ID TO F.AUDIT THEN
         READV SUB.CLIENT FROM F.AUDIT,'SUBSTITUTE',1 THEN
            AUDIT.CLIENT.ID = SUB.CLIENT
            OPEN '','FB.AUDIT,':AUDIT.CLIENT.ID TO F.AUDIT ELSE CLIENT.AUDIT=0
         END ELSE
            AUDIT.CLIENT.ID = CLIENT.ID
         END
      END ELSE CLIENT.AUDIT=0
      OPEN '','FB.AUDIT.TABLES,':AUDIT.CLIENT.ID TO F.AUDIT.TABLES ELSE
         CALL ELINE('Error! Cannot open file FB.AUDIT.TABLES,':AUDIT.CLIENT.ID)
         CLIENT.ID = ''
         IF CLIENT.MODE THEN STOP ELSE RETURN
      END
      OPEN '','FB.AUDIT.ZIPS,':AUDIT.CLIENT.ID TO F.AUDIT.ZIPS ELSE
         EXECUTE 'CREATE-FILE DATA FB.AUDIT.ZIPS,':AUDIT.CLIENT.ID:' 101,1' CAPTURING OUTPUT      ; * NKH01
         OPEN '','FB.AUDIT.ZIPS,':AUDIT.CLIENT.ID TO F.AUDIT.ZIPS ELSE
            IF PROCESS.MODE = 'Quote' THEN
            END ELSE
            END
            CLIENT.AUDIT=0
         END
      END
      GOSUB MIN.CHARGE
      IF MIN.CHG GT 0 THEN
         RETURN
      END
      GOSUB FLAT
      RETURN
******************************************************************************
MIN.CHARGE:
******************************************************************************
      * checking for minimum charge
      ROUTE.ZIP=LOOKUP.ZIP
      DAUDIT.ZIPS = ""
      READ DAUDIT FROM F.AUDIT,CARRIER.ID THEN
         GB2 = FBA.ROUTE.ZIP
         GB3 = FBA.BEG.EFF.DATE
         GB4 = DAUDIT<FBA.ROUTE.ZIP>
         EOJ = 0
         LOOKUP.ZIP = "ALL"
         LOOP
         UNTIL EOJ DO
            LOCATE LOOKUP.ZIP IN DAUDIT<FBA.ROUTE.ZIP> SETTING GUIDE.POS THEN
               EOJ = 1
            END ELSE
               LOOKUP.ZIP=ROUTE.ZIP
               LOCATE LOOKUP.ZIP IN DAUDIT<FBA.ROUTE.ZIP> SETTING GUIDE.POS ELSE
**
*****    See if 1st three digits are there (Must Be Unique)
                  CK.TIMES=DCOUNT(DAUDIT<FBA.ROUTE.ZIP>,@VM)
                  CK.RZIP=''             ; * Put the Routing Zips Found Here
                  FOR CK = 1 TO CK.TIMES
                     FIND.RT.ZIP=DAUDIT<FBA.ROUTE.ZIP,CK>
                     IF FIND.RT.ZIP[1,3]=ROUTE.ZIP[1,3] THEN
                        GUIDE.POS=CK
                        SUB.ZIP=DAUDIT<FBA.BASE.ROUTE.ZIP,CK>
                        IF SUB.ZIP#'' THEN
                           LOCATE SUB.ZIP IN DAUDIT<FBA.ROUTE.ZIP> SETTING GUIDE.POS ELSE
                              EXIT
                           END
                           FIND.RT.ZIP=SUB.ZIP
                        END
                        LOCATE FIND.RT.ZIP IN CK.RZIP SETTING POS ELSE
                           CK.RZIP<-1>=FIND.RT.ZIP
                           LOOKUP.ZIP=FIND.RT.ZIP
                        END
                     END
                  NEXT CK
               END
               IF DAUDIT<FBA.BASE.ROUTE.ZIP,GUIDE.POS> # '' THEN       ; ** Get BASE Routing Zip POS
                  LOOKUP.ZIP=DAUDIT<FBA.BASE.ROUTE.ZIP,GUIDE.POS>
                  LOCATE LOOKUP.ZIP IN DAUDIT<FBA.ROUTE.ZIP> SETTING GUIDE.POS THEN
                     EOJ = 1
                  END ELSE
                  END
               END ELSE
                  EOJ = 1
               END
            END
         REPEAT
*******************************************************************

         LOCATE LOOKUP.ZIP IN DAUDIT<FBA.ROUTE.ZIP> SETTING GUIDE.POS THEN

         END ELSE
            RETURN
         END
         IF BILL.DATE = "" THEN BILL.DATE = DATE()
         GB5 = DAUDIT<FBA.BEG.EFF.DATE,GUIDE.POS>
         LOCATE BILL.DATE IN DAUDIT<FBA.BEG.EFF.DATE,GUIDE.POS> BY 'AR' SETTING DT.POS ELSE
            DT.POS = DT.POS-1
         END
         IF ORIG.STATE=DEST.STATE THEN
            OFFSET=0
         END ELSE
            OFFSET=3
         END
         EFF.DATE=DAUDIT<FBA.BEG.EFF.DATE,GUIDE.POS,DT.POS>
         AUDIT.ZIPS.ID=CARRIER.ID:"*":LOOKUP.ZIP:"*":EFF.DATE:"*LTLALL*":IOT
         READ DAUDIT.ZIPS FROM F.AUDIT.ZIPS,AUDIT.ZIPS.ID THEN
            TEMP.STRING=DAUDIT.ZIPS<2>
            LOCATE SHIP.ZIP[1,3] IN TEMP.STRING<1> BY 'AR' SETTING SHIP.POS ELSE
               SHIP.POS=SHIP.POS-1
            END
            TABLE=DAUDIT.ZIPS<5,SHIP.POS>
            AUDIT.TABLE.ID=CARRIER.ID:"*":TABLE
            READ DAUDIT.TABLES FROM F.AUDIT.TABLES,AUDIT.TABLE.ID THEN
               *** OFFSET = 0 ;
               WGT.POS = 1
               CONTR.MIN=DAUDIT.TABLES<38+OFFSET,WGT.POS>
               MIN.CHG=DAUDIT.TABLES<38+OFFSET,WGT.POS>
            END
         END ELSE
            DAUDIT.ZIPS = ""
         END
      END
      RETURN

********************************************************************************
FLAT:* checking for flate rate charge
*******************************************************************************
      FLAT.RATE=0
      FLAT.ROUTE='INTER'
      IF ORIG.STATE=DEST.STATE THEN
         FLAT.ROUTE='INTRA'
      END
      IF DAUDIT.ZIPS = "" THEN RETURN
      TABLE=DAUDIT.ZIPS<5,SHIP.POS>
      AUDIT.TABLE.ID=CARRIER.ID:"*":TABLE
      READ DAUDIT.TABLES FROM F.AUDIT.TABLES,AUDIT.TABLE.ID ELSE
         DAUDIT.TABLES = ""
      END
      IF DAUDIT.TABLES<55>#'' THEN
         FT.NVAL=DCOUNT(DAUDIT.TABLES<55>,@VM)
         FOR FT.VAL=1 TO FT.NVAL
            BEG.WT=DAUDIT.TABLES<55,FT.VAL>
            END.WT=DAUDIT.TABLES<56,FT.VAL>
            INTRA.CONTR.CHRG=DAUDIT.TABLES<57,FT.VAL>
            INTRA.BENCH.CHRG=DAUDIT.TABLES<58,FT.VAL>

            INTER.CONTR.CHRG=DAUDIT.TABLES<59,FT.VAL>
            INTER.BENCH.CHRG=DAUDIT.TABLES<60,FT.VAL>
            IF TOT.WEIGHT >= BEG.WT AND TOT.WEIGHT <= END.WT THEN
               FLAT.VALID=0
               BEGIN CASE
                  CASE FLAT.ROUTE='INTER'
                     IF INTER.CONTR.CHRG+0#0 THEN FLAT.VALID=1
                     IF INTER.BENCH.CHRG+0#0 THEN FLAT.VALID=1
                  CASE FLAT.ROUTE='INTRA'
                     IF INTRA.CONTR.CHRG+0#0 THEN FLAT.VALID=1
                     IF INTRA.BENCH.CHRG+0#0 THEN FLAT.VALID=1
                  CASE 1
               END CASE
               IF FLAT.VALID THEN
                  FLAT.CONTR=0
                  FLAT.BENCH=0
                  IF FLAT.ROUTE='INTER' THEN
                     IF INTER.CONTR.CHRG+0#0 THEN
                        CONTR.CHRG=INTER.CONTR.CHRG
                        FLAT.CONTR=1
                     END
                     IF INTER.BENCH.CHRG+0#0 THEN
                        BENCH.CHRG=INTER.BENCH.CHRG
                        FLAT.BENCH=1
                     END
                  END
                  IF FLAT.ROUTE='INTRA' THEN
                     IF INTRA.CONTR.CHRG+0#0 THEN
                        CONTR.CHRG=INTRA.CONTR.CHRG
                        FLAT.CONTR=1
                     END
                     IF INTRA.BENCH.CHRG+0#0 THEN
                        BENCH.CHRG=INTRA.BENCH.CHRG
                        FLAT.BENCH=1
                     END
                  END
                  IF FLAT.CONTR THEN
                     CONTR.FLAT=''
                     CONTR.FLAT<1,1>=CONTR.CHRG
                     CONTR.FLAT<1,2>=CONTR.CHRG
                     CONTR.FLAT<1,3>='FLATRATE'
                     CONTR.FLAT<1,4>=TOT.WEIGHT
                     CONTR.FLAT<1,5>=CONTR.CHRG
                     CONTR.FLAT<1,6>=END.WT:' LB Flat rate'
                  END
                  FLAT.RATE=1
               END
            END
         NEXT FT.VAL
      END
      IF CONTR.FLAT<1,3>='FLATRATE' AND CONTR.CHRG GT 0 THEN
         FLAT.CHG = CONTR.CHRG
      END

      RETURN
