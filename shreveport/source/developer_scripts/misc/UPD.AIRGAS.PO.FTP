*************************************************************************
* Program : UPD.AIRGAS.PO
*           Import Carrier Service data from Non-SMC Carriers
* Author  : JMK
* Date    : October 2007
*
* Copyright (c) 2002 by AFS Logistics, LLC. - All Rights Reserved
*************************************************************************
* Format of CARRIER.SVC Text file            Format of CARRIER.SVC
* Tab delimited with 6 possible fields       ITEM ID = CARRIER*CLIENT*ORIGIN ZIP (OR ALL)
* ----------------------------------------------------------------------
* (1) AFS Carrier #                          REC< 1> Dest ZipCode (3 or 5/6) multivalued
* (2) Origin ZipCode (3 or 5/6)              REC< 2> Direct/Indirect (D/I) multivalued
* (3) Dest ZipCode   (3 or 5/6)              REC< 3> Service Days multivalued
* (4) Direct/Indirect (D/I)
* (5) Service Days
*************************************************************************
*
* 060618 - DRF04 - Project Add WBS Element and Unloading Point
* 092515 - DRF03 - SysAid 20113 Added the INCO to the PO record
* 081115 - DRF02 - SysAid 19293 - Gave Cynthia access
* 010715 - DRF01 - SysAid 14549 - Gave LaJuanyka access to the program
* 111214 - PKB01 - SYS#990 - Per Kristy, and approved by Owen, add list of Customer Service users to access this program.
* 052112 - JMK01 - SysAid#2665 - Airgas PO Dump

$INCLUDE PROG.ADMIN INC_OPTIONS

* Initialize general variables
      PROMPT''
      CALL GET.USER(USER.NAME)
      CALL CHANNEL(CH.NUM)
      PROG.NAME='UPD.AIRGAS.PO'
      PROG.DESC='Update Airgas PO Data'
      PACK.NAME='Freight Payment'
      BILLDATA.ID='AG_PO_LIST.TXT'
      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'UPD.AIRGAS.PO' ; UPL.VOUT = ''  ; * NPR_UPL 04/23/2010
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)       ; * NPR_UPL 04/23/2010
      MASK.CHAR='-'
      TB=CHAR(9)
      ESC=CHAR(27)
      EOF=''
      OPEN '','OPERATOR' TO F.OP ELSE CALL OPEN.ABORT("OPERATOR",PROG.NAME)      ; * GRB01	
      OPEN '','BCTRL' TO F.BCTRL ELSE
         CALL OPEN.ABORT('BCTRL',PROG.NAME)
      END
      READ DBCTRL FROM F.BCTRL,USER.NAME ELSE DBCTRL=''
* Write screen header
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      CRT @(0,2):STR('=',79)
      READV OP.FLG FROM F.OP,USER.NAME,21 ELSE
         OP.FLG = "N"
      END
      IF OP.FLG = "Y" THEN
** Restrict program usage
         *** VALID.USER=1
         ****  BEGIN CASE
         **** CASE USER.NAME='SCHUTAI'     ; * PKB01
         **** CASE USER.NAME='BRIAN'
         **** CASE USER.NAME='DAVID'
         **** CASE USER.NAME='GBINO'
         **** CASE USER.NAME='MARY'
         **** CASE USER.NAME='LCOOK'     ; * DRF01
         **** CASE USER.NAME='CYNTHIA'     ; * DRF02
         **** CASE USER.NAME='EWILHELM'    ; * PKB01
         **** CASE USER.NAME='JSHIVERS'    ; * PKB01
         **** CASE USER.NAME='KRISTY'      ; * PKB01
         **** CASE USER.NAME='RWANG'       ; * PKB01
         **** CASE USER.NAME='SKAMINSKI'   ; * PKB01  ALBRIET
         **    CASE 1
         **       VALID.USER=0
         ****   END CASE
         *****   IF NOT(VALID.USER) THEN
      END ELSE
         TEMP='**  This is a restricted access application  **'
         CALL CENTER(TEMP,80)
         CRT @(0,12):TEMP
         GOTO THE.END
      END
      CRT @(0,03):@(-3):
      CRT @(0,05):'Instructions for use BEFORE Continuing:'
      CRT @(0,06):'Step  1 Open email with the new PO Dump file attached from Airgas.'
      CRT @(0,07):"Step  2 CLICK File, CLICK Save As, 'Change Save as type:' to:"
      CRT @(0,08):'        Text (Tab Delimited)(*.txt). Save the file in your "U:\" drive.'
      CRT @(0,09):'Step  3 Name the file AG_PO_LIST.TXT'
   ***   CRT @(0,10):"        Ignore the 'Not Compatible' messages you receive and click OK, then YES"

100:  ***
      LN='Are you ready to process your Airgas PO file? '
      MASK='N-'
      HELP='[Y]=Yes [N]=No [EX]=Exit'
      CALL GEN.IN(0,22,LN:MASK,'',Q,0,2,'','',2,-2,22,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX' OR QI='N' OR QI=''
            GOTO THE.END
         CASE QI='Y'
            NULL
         CASE 1
            GOTO 100
      END CASE

*DF      OPEN '','BILLDATA.':USER.NAME TO F.BILLDATA ELSE
*DF         OPEN '','VOC' TO F.VOC ELSE
*DF            CALL ELINE('Unable to open VOC file - Call IS Department.')
*DF            GOTO THE.END
*DF         END
*DF         READ BILLDATA.REC FROM F.VOC,'BILLDATA' ELSE
*DF            CALL ELINE('Unable to open VOC BILLDATA.')
*DF            GOTO THE.END
*DF         END
*DF         BILLDATA.REC<2>:='\':USER.NAME
*DF         WRITE BILLDATA.REC ON F.VOC,'BILLDATA.':USER.NAME ELSE
*DF            CALL ELINE('Your user name ':USER.NAME:' is not in the BILLDATA folder - Call IS Department.')
*DF            GOTO THE.END
*DF         END
*DF         OPEN '','BILLDATA.':USER.NAME TO F.BILLDATA ELSE
*DF            CALL ELINE('Unable to open BILLDATA.':USER.NAME:'.')
*DF            GOTO THE.END
*DF         END
*DF      END
      OPEN '','AIRGAS.PO' TO F.AIRGAS.PO ELSE
         CALL OPEN.ABORT('AIRGAS.PO',PROG.NAME)
      END
      OPEN '','FTP.AIRGAS.PO_DUMP' TO F.FTP.AIRGAS.PO ELSE
         CALL OPEN.ABORT('FTP.AIRGAS.PO_DUMP',PROG.NAME)
      END
      OPEN '','FTP.AIRGAS.PO_DUMP.HISTORY' TO F.FTP.AIRGAS.PO.HIST ELSE
         CALL OPEN.ABORT('FTP.AIRGAS.PO_DUMP.HISTORY',PROG.NAME)
      END
      STMT='SELECT FTP.AIRGAS.PO_DUMP WITH @ID = "[.TXT" "[.txt" '
      EXECUTE STMT CAPTURING RESULTS
      IF @SELECTED > 0 THEN
         NUM.ITMS=@SELECTED
         LOOP
            READNEXT BILLDATA.ID ELSE EOF=1
         UNTIL EOF DO
*DF            CNT+=1
            GOSUB PROCESS.ITEM
         REPEAT
         GOTO SND.MAIL
      END ELSE
         CALL ELINE('There are no items to process')
         GOTO THE.END
      END
      ***   DEBUG
PROCESS.ITEM:***
*DF      OPENSEQ 'BILLDATA.':USER.NAME, BILLDATA.ID TO INSEQ.FILE ELSE
      OPENSEQ 'FTP.AIRGAS.PO_DUMP', BILLDATA.ID TO INSEQ.FILE ELSE
         CALL ELINE('Unable to open F.FTP.AIRGAS.PO')
      END
      OPENSEQ 'FTP.AIRGAS.PO_DUMP.HISTORY', BILLDATA.ID TO OUTSEQ.FILE ELSE
         CREATE OUTSEQ.FILE ELSE
         END
      END
      DUP.CNT = 0
      REC.CNT = 0
      NEW.CNT = 0
      PATCH.CNT = 0
      LOC.CHG.CNT = 0
      INCO.CHG.CNT = 0
      EOJ = 0
       ATT= 0
       NATT = 12000     ;* no way to no this with readseq. just gives them something to look at
       DATE.ARR=''
      LOOP

         READSEQ BILLDATA.REC FROM INSEQ.FILE ELSE EOJ = 1
         WRITESEQ BILLDATA.REC ON OUTSEQ.FILE ELSE NULL
      UNTIL EOJ DO
      	ATT = ATT + 1
         *****    READ BILLDATA.REC FROM F.BILLDATA,BILLDATA.ID THEN
         IF INDEX(BILLDATA.REC,TB,1)=0 THEN        ; * JMK01
            CALL ELINE('Invalid file format. Needs to be tab delimited.')        ; * JMK01
            EXIT
         END                             ; * JMK01
         BILLDATA.REC=CHANGE(BILLDATA.REC,TB,@VM)
         BILLDATA.REC=CHANGE(BILLDATA.REC,'"',"")
         HDR.ROW=0                       ; * JMK01
         IF TRIM(BILLDATA.REC<1,1>)='CoCd' THEN HDR.ROW=1    ; * JMK01
         IF TRIM(BILLDATA.REC<1,2>)='PurchDoc' THEN HDR.ROW=1          ; * JMK01
         IF TRIM(BILLDATA.REC<1,3>)='Created on' THEN HDR.ROW=1        ; * JMK01
         IF TRIM(BILLDATA.REC<1,5>)='Name 1' THEN HDR.ROW=1  ; * JMK01
         IF TRIM(BILLDATA.REC<1,8>)='Plnt' THEN HDR.ROW=1    ; * JMK01
         IF TRIM(BILLDATA.REC<1,4>)='Inco 2' THEN HDR.ROW=1  ; * JMK01
        *** NATT=DCOUNT(BILLDATA.REC,@AM)
        
         ****    FOR ATT=1 TO NATT
              CALL PROG.BAR(22,ATT,NATT,'')   ; * JMK01
         IF HDR.ROW AND ATT=1 THEN CONTINUE        ; * JMK01
         REC.CNT = REC.CNT + 1

         REG.CODE=TRIM(BILLDATA.REC<1,1>)
         PO.NO=TRIM(BILLDATA.REC<1,2>)
         ADD.DT=ICONV(TRIM(BILLDATA.REC<1,3>),'D')
         LOCATE ADD.DT IN DATE.ARR<1> BY 'AR' SETTING DATE.POS THEN
            DATE.ARR<2,DATE.POS>=DATE.ARR<2,DATE.POS>+1
         END ELSE
            INS ADD.DT BEFORE DATE.ARR<1,DATE.POS>
            INS '1' BEFORE DATE.ARR<2,DATE.POS>
         END
         VENDOR.NAME=TRIM(BILLDATA.REC<1,5>)
         LOC.CODE=TRIM(BILLDATA.REC<1,8>)
         INCO=TRIM(BILLDATA.REC<1,4>)  ; * DRF03
         WBS.ELEMENT=TRIM(BILLDATA.REC<1,18>) ; * DRF04
         UNLOADING.POINT=TRIM(BILLDATA.REC<1,19>) ; * DRF04
         READ PO.REC FROM F.AIRGAS.PO,PO.NO ELSE PO.REC=''
         NEW.REC = ""
         NEW.REC<1> = VENDOR.NAME
         NEW.REC<2> = REG.CODE
         NEW.REC<3> = LOC.CODE
         NEW.REC<4> = ADD.DT
         BEGIN CASE                      ; * DRF03
            CASE OCONV(INCO,'MCU')='FREIGHT PAID BY AIRGAS'  ; * DRF03
               NEW.REC<5>='FPA'          ; * DRF03
            CASE OCONV(INCO,'MCU')='FREIGHT PAID BY CUSTOMER'          ; * DRF03
               NEW.REC<5>='FPC'          ; * DRF03
            CASE OCONV(INCO,'MCU')='FREIGHT PAID BY VENDOR'  ; * DRF03
               NEW.REC<5>='FPV'          ; * DRF03
            CASE 1                       ; * DRF03
               NEW.REC<5>=INCO           ; * DRF03
         END CASE
         NEW.REC<6> = WBS.ELEMENT     ; * DRF04
         NEW.REC<7> = UNLOADING.POINT     ; * DRF04

         IF NEW.REC = PO.REC THEN
            DUP.CNT = DUP.CNT + 1
            CONTINUE
         END

         IF PO.REC = '' THEN
            NEW.CNT = NEW.CNT + 1
         END
         IF PO.REC<1> = NEW.REC<1> AND PO.REC<2> = NEW.REC<2> AND PO.REC<3> = NEW.REC<3> AND PO.REC<4> = NEW.REC<4> THEN
            IF PO.REC<5> = '' AND NEW.REC<5> # '' THEN
               PO.REC<5> = NEW.REC<5>
*DF               WRITE PO.REC ON F.AIRGAS.PO,PO.NO
               PATCH.CNT = PATCH.CNT + 1
               CONTINUE
            END
         END
         IF PO.REC<1> = NEW.REC<1> AND PO.REC<2> = NEW.REC<2> AND PO.REC<3> = NEW.REC<3> AND PO.REC<4> = NEW.REC<4> THEN
            IF PO.REC<6> = '' AND NEW.REC<6> # '' THEN
               PO.REC<6> = NEW.REC<6>
*DF               WRITE PO.REC ON F.AIRGAS.PO,PO.NO
               PATCH.CNT = PATCH.CNT + 1
               CONTINUE
            END
         END
         IF PO.REC<1> = NEW.REC<1> AND PO.REC<2> = NEW.REC<2> AND PO.REC<3> = NEW.REC<3> AND PO.REC<4> = NEW.REC<4> THEN
            IF PO.REC<7> = '' AND NEW.REC<7> # '' THEN
               PO.REC<7> = NEW.REC<7>
*DF               WRITE PO.REC ON F.AIRGAS.PO,PO.NO
               PATCH.CNT = PATCH.CNT + 1
               CONTINUE
            END
         END

         VAL=DCOUNT(PO.REC<2>,@VM)+1

         IF PO.REC # '' THEN
           IF PO.REC<3> # NEW.REC<3> THEN
               PO.REC<3> = NEW.REC<3>
*DF               WRITE PO.REC ON F.AIRGAS.PO,PO.NO
               LOC.CHG.CNT = LOC.CHG.CNT + 1
               CONTINUE
            END
            IF PO.REC<5> # NEW.REC<5> THEN
               PO.REC<5> = NEW.REC<5>
*DF               WRITE PO.REC ON F.AIRGAS.PO,PO.NO
               INCO.CHG.CNT = INCO.CHG.CNT + 1
               CONTINUE
            END
            IF PO.REC<6> # NEW.REC<6> THEN
               PO.REC<6> = NEW.REC<6>
*DF               WRITE PO.REC ON F.AIRGAS.PO,PO.NO
*DF               INCO.CHG.CNT = INCO.CHG.CNT + 1
               CONTINUE
            END
            IF PO.REC<7> # NEW.REC<7> THEN
               PO.REC<7> = NEW.REC<7>
*DF               WRITE PO.REC ON F.AIRGAS.PO,PO.NO
*DF               INCO.CHG.CNT = INCO.CHG.CNT + 1
               CONTINUE
            END

         END
         PO.REC<1,VAL>=VENDOR.NAME
         PO.REC<2,VAL>=REG.CODE
         PO.REC<3,VAL>=LOC.CODE
         PO.REC<4,VAL>=ADD.DT
         BEGIN CASE                      ; * DRF03
            CASE OCONV(INCO,'MCU')='FREIGHT PAID BY AIRGAS'  ; * DRF03
               PO.REC<5,VAL>='FPA'       ; * DRF03
            CASE OCONV(INCO,'MCU')='FREIGHT PAID BY CUSTOMER'          ; * DRF03
               PO.REC<5,VAL>='FPC'       ; * DRF03
            CASE OCONV(INCO,'MCU')='FREIGHT PAID BY VENDOR'  ; * DRF03
               PO.REC<5,VAL>='FPV'       ; * DRF03
            CASE 1                       ; * DRF03
               PO.REC<5,VAL>=INCO        ; * DRF03
         END CASE                        ; * DRF03
         PO.REC<6,VAL> = WBS.ELEMENT     ; * DRF04
         PO.REC<7,VAL> = UNLOADING.POINT     ; * DRF04
*DF           WRITE PO.REC ON F.AIRGAS.PO,PO.NO

      REPEAT
      CLOSESEQ INSEQ.FILE
      CLOSESEQ OUTSEQ.FILE
      DELETE F.FTP.AIRGAS.PO,BILLDATA.ID
RETURN
SND.MAIL:***
        MVIN=''
        SUBJ='UPD.AIRGAS.PO has been run and is complete'
        TEXT=USER.NAME:' ran the UPD.AIRGAS.PO and it is complete '
        TEXT<1,-1>='on ':DATE()'D2/':' ':OCONV(TIME(),'MTHS')
        MVIN=''
        MVIN<1>='KJBarnes@afs.net'
        MVIN<1,-1>=DBCTRL<20>
        MVIN<2>='DFriend@afs.net'
        MVIN<4>='AFS'
        MVIN<5>=SUBJ
        MVIN<6>=TEXT
        MVIN<6,-1>=' '
        MVIN<6,-1>='PO Dates'
        NUM.OF.DATES = DCOUNT(DATE.ARR<1>,@VM)
        FOR XX = 1 TO NUM.OF.DATES
          MVIN<6,-1>=DATE.ARR<1,XX>'D2/':'     ' :DATE.ARR<2,XX>
        NEXT XX
        CALL SENDMAIL(MVIN,MVOUT)
THE.END:***
* End of program
  *****    CRT @(10,12):"total recs       ":REC.CNT"R#5"
    *****    CRT @(10,13):"duplicates       ":DUP.CNT"R#5"
   *****     CRT @(10,14):"INCO patch       ":PATCH.CNT"R#5"
   *****     CRT @(10,15):"new records      ":NEW.CNT"R#5"
  *****      CRT @(10,16):"LOC CHG          ":LOC.CHG.CNT"R#5"
   *****     CRT @(10,17):"INCO CHG         ":INCO.CHG.CNT"R#5"
   *****     DIFF.CNT = REC.CNT - (DUP.CNT + NEW.CNT + PATCH.CNT + LOC.CHG.CNT + INCO.CHG.CNT)
   *****     CRT @(10,18):"Difference       ":DIFF.CNT"R#5"

   END
