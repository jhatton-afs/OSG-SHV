      SUBROUTINE FB.YTD.CLEAR(CLIENT,ERROR)
****************************************
* Program name : FB.YTD.CLEAR
* Author       : BRIAN M. QUEEN
* Date written : DECEMBER 31, 1991
* Library      : FBBP
* COPYRIGHT (C) 2019 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED.
*
*
* This program * SUBROUTINE TO CLEAR YTD FIGURES
*
* Last updated by afs (AFSLOGISTICS\gbino) at 08:52:19 on 02/24/2020.
*
* Start modification history
* Mod nn  mm/dd/yy, init, req #, description
* 091409 - NPR01  - Added FB.BILLS.YTD,HISTORY file for checking Commission Caps across years.
* 021920 - GRB01 - ACCU-480 Automated processing
* End modification history
*
****************************************
$INCLUDE PROG.ADMIN INC_OPTIONS
$INCLUDE FILE.DEFS INC_DIVISION.CODES
$INCLUDE FILE.DEFS INC_REGION.CODES
*
* Initialize variables
*
      ERROR=0
      ERRMSG=''
      PROG.NAME='FB.YTD.CLEAR'
      PACK.NAME='FREIGHT BILLING'
      PROG.DESC='CLEAR CLIENTS YEAR TO DATE FIGURES'
      CO.NAME='AFS Logistics, LLC'
      MAT DIV.REC = ''
      CALL GET.USER.NEW(USER,CH.NUM)
      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'FB.YTD.CLEAR' ; UPL.VOUT = ''
      UPL.VIN<3> = USER
      UPL.VIN<4> = CH.NUM
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)

      OPEN '','CLIENTS' TO F.CLIENT ELSE
         CALL OPEN.ABORT('CLIENTS','FB.YTD.CLEAR')
      END

      READ CLIENT.REC FROM F.CLIENT,CLIENT ELSE
         CALL ELINE('Client ':CLIENT:' not on file!')
         ERROR=1
      END
      DIVISION=CLIENT.REC<12>
      EXPENSE=CLIENT.REC<13>
      VARIANCE=CLIENT.REC<7>

      OPEN '','FB.BILLS.YTD' TO F.BILLS.YTD ELSE
         CALL ELINE('Can not open FB.BILLS.YTD file!')
         ERROR=1
      END

      OPEN '','FB.BILLS.YTD,HISTORY' TO F.BILLS.YTD.HIST ELSE          ; * NPR1
         CALL ELINE("Cannot open FB.BILLS.YTD,HISTORY file!")          ; * NPR1
         ERROR=1                         ; * NPR1
      END                                ; * NPR1
*
* Display screen
*
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
*
* Start process

*
      W.YEAR = OCONV(DATE(),"DY4") - 1   ; * Last year
      ID.HIST = CLIENT:".":W.YEAR
      READ HIST.REC FROM F.BILLS.YTD.HIST, ID.HIST THEN ID.HIST = CLIENT:".":W.YEAR:".2"

      READ YTD.REC FROM F.BILLS.YTD,CLIENT THEN
         WRITE YTD.REC ON F.BILLS.YTD.HIST, ID.HIST
      END

** Clear client totals from FB.BILLS.YTD file.
*
      DELETE F.BILLS.YTD,CLIENT
*
      CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      IF VARIANCE='A' THEN
         IF @TTY # "phantom" THEN        ; * GRB01
            CRT @(0,22):'Now deleting all items out of VARIANCE.CODES file.':@(-4):
         END
         OPEN 'VARIANCE.CODES,':CLIENT TO F.VAR THEN
            EXECUTE 'CLEAR-FILE DATA VARIANCE.CODES,':CLIENT CAPTURING OUTPUT
         END ELSE
            CALL ELINE('Can not open VARIANCE.CODES,':CLIENT:' file!')
            ERROR=1
         END
      END
      IF VARIANCE='Y' THEN
         IF @TTY # "phantom" THEN        ; * GRB01
            CRT @(0,22):'Now selecting and clearing VARIANCE.CODES file.':@(-4):
         END
         OPEN 'VARIANCE.CODES,':CLIENT TO F.VAR THEN
            EXECUTE 'SELECT VARIANCE.CODES,':CLIENT CAPTURING OUTPUT
            IF SYSTEM(11) THEN
               DONE = 0
               LOOP
                  READNEXT VAR.ID ELSE DONE = 1
               UNTIL DONE DO
                  READU VAR.REC FROM F.VAR,VAR.ID ELSE VAR.REC=''
                  VAR.REC<2>=0
                  VAR.REC<3>=0
                  WRITE VAR.REC ON F.VAR,VAR.ID
               REPEAT
            END
         END ELSE
            CALL ELINE('Can not open VARIANCE.CODES,':CLIENT:' file!')
            ERROR=1
         END
      END
*
      CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      IF DIVISION='Y' THEN
         IF @TTY # "phantom" THEN        ; * GRB01
            CRT @(0,22):'Now clearing DIVISION.CODES file.':@(-4):
         END
         OPEN 'DIVISION.CODES,':CLIENT TO F.DIV THEN
            DONE = 0
            SELECT F.DIV
            LOOP
               READNEXT DIV.ID ELSE DONE = 1
            UNTIL DONE DO
               MATREADU DIV.REC FROM F.DIV,DIV.ID ELSE MAT DIV.REC=''
               DIV.O.YTD = 0
               DIV.I.YTD = 0
               DIV.T.YTD = 0
               MATWRITE DIV.REC ON F.DIV,DIV.ID
            REPEAT
         END ELSE
            CALL ELINE('Can not open DIVISION.CODES,':CLIENT:' file!')
            ERROR=1
         END
         IF @TTY # "phantom" THEN        ; * GRB01
            CRT @(0,22):'Now clearing REGION.CODES file.':@(-4):
         END
         OPEN 'REGION.CODES,':CLIENT TO F.REG THEN
            DONE = 0
            SELECT F.REG
            LOOP
               READNEXT REG.ID ELSE DONE = 1
            UNTIL DONE DO
               MATREADU REG.CODE.REC FROM F.REG,REG.ID ELSE MAT REG.CODE.REC=''
               REG.O.YTD = 0
               REG.I.YTD = 0
               REG.T.YTD = 0
               MATWRITE REG.CODE.REC ON F.REG,REG.ID
            REPEAT
         END
      END
*
      CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      IF EXPENSE='Y' THEN
         OPEN 'EXPENSE.CODES,':CLIENT TO F.EXP THEN
            IF @TTY # "phantom" THEN     ; * GRB01
               CRT @(0,22):'Now selecting and clearing EXPENSE.CODES file.':@(-4):
            END
            EXECUTE 'SELECT EXPENSE.CODES,':CLIENT CAPTURING OUTPUT
            IF SYSTEM(11) THEN
               DONE = 0
               LOOP
                  READNEXT EXP.ID ELSE DONE = 1
               UNTIL DONE DO
                  READU EXP.REC FROM F.EXP,EXP.ID ELSE EXP.REC=''
                  EXP.REC<2>=0
                  EXP.REC<3>=0
                  EXP.REC<4>=0
                  WRITE EXP.REC ON F.EXP,EXP.ID
               REPEAT
            END
         END ELSE
            CALL ELINE('Can not open EXPENSE.CODES,':CLIENT:' file!')
            ERROR=1
         END
      END
      RETURN
