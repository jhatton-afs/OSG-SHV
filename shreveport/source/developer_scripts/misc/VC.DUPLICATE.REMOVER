********************************************************************************
* Program: VC.DUPLICATE.REMOVER
*    Remove duplicate entires from VEND.CUST file for a specific client and
*    update the files that use these vendor customer numbers.
*
* Author:  James Barberousse
* Date:    October 1, 2002
********************************************************************************
* 012507 - JCW01 - USE VEND.CUST.NAMES FILE
********************************************************************************
* Initialize variables

      PROMPT''
   ****   CALL CHANNEL(CH.NUM)
      CALL GET.USER.NEW(USER.NAME,CH.NUM)
      USER.NAME=OCONV(USER.NAME,'MCU')

      PROG.NAME='VC.DUPLICATE.REMOVER'
      PROG.DESC='Remove VEND.CUST Duplicate Entries'
      PACK.NAME='Freight Billing'

       UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'VC.DUPLICATE.REMOVER' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
       CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
      MASK.CHAR='-'
      TAB=CHAR(9)
      ESC=CHAR(27)

      CLIENT.ID=''
      CLIENT.NAME=''

* Open client file

      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         CALL OPEN.ABORT('CLIENTS',PROG.NAME)
      END

* Display screen heading

      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      CRT @(0,2):STR('=',79)

      GOSUB SET.DISPLAY.VARIABLE

* Restrict program usage

      BEGIN CASE
         CASE USER.NAME='DAVID'
         CASE USER.NAME='GBINO'
         CASE 1
            TEMP='**  This is a restricted access application - Access Denied  **'
            CALL CENTER(TEMP,80)
            CRT @(0,12):TEMP
            CALL ELINE('')
            GOTO THE.END
      END CASE

* Get client number

10:***
      PAGE.NUM=1
      PROMPT.NUM=1
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=CLIENT.ID:STR(MASK.CHAR,5-LEN(CLIENT.ID))
      HELP='Enter client number or letters of name for search. [X]=Exit [EX]it'
      CALL GEN.IN(18,3,MASK,'',Q,0,20,'','',1,18,3,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' AND CLIENT.ID#'' THEN QI=CLIENT.ID
      IF QI='' AND CLIENT.ID='' THEN GOTO 10
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOSUB DISPLAY.SCREEN
            GOTO THE.END
         CASE NOT(QI MATCHES '0N')
            CALL SOUNDEX.DISPLAY(QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            BEGIN CASE
               CASE ITEM.LIST=''
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
               CASE ITEM.LIST NE ''
                  IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
            END CASE
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            CRT @(0,2):STR('=',79)
            GOTO 10
         CASE NUM(QI)
            QI=QI'R%5'
         CASE 1
            GOTO 10
      END CASE
      CLIENT.ID=QI
      READ CLIENT.REC FROM F.CLIENTS,CLIENT.ID ELSE
         CALL ELINE('ERROR - Client ':CLIENT.ID:' not on file.')
         CLIENT.ID=''
         GOTO 10
      END
      CLIENT.NAME=CLIENT.REC<2>
      GOSUB DISPLAY.SCREEN

      CRT @(0,10):'This program will remove duplicates from the file VEND.CUST,':CLIENT.ID

20:***
      HELP='[ENTER]=Continue [X]=Back [EX]it'
      CALL GEN.IN(0,22,'Enter selection: ----','',Q,0,4,'','',0,17,22,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOSUB DISPLAY.SCREEN
            GOTO 10
         CASE QI=''
            NULL
         CASE 1
            GOTO 20
      END CASE

* Open files for client: CLIENT.ID

      OPEN '','VEND.CUST,':CLIENT.ID TO F.VEND.CUST ELSE
         CALL OPEN.ABORT('VEND.CUST,':CLIENT.ID,PROG.NAME)
      END
    
      OPEN '','VEND.CUST.NAMES,':CLIENT.ID TO F.VCN ELSE          ; * JCW01
         CALL OPEN.ABORT('VEND.CUST.NAMES,':CLIENT.ID,PROG.NAME)  ; * JCW01
      END                                                         ; * JCW01

      OPEN '','FB.BILLS,':CLIENT.ID TO F.FB.BILLS ELSE
         CALL OPEN.ABORT('FB.BILLS,':CLIENT.ID,PROG.NAME)
      END

      OPEN '','FB.BILLS.HIST,':CLIENT.ID TO F.FB.BILLS.HIST ELSE
         CALL OPEN.ABORT('FB.BILLS.HIST,':CLIENT.ID,PROG.NAME)
      END

      OPEN '','VEND.CUST.ZIPS,':CLIENT.ID TO F.VEND.CUST.ZIPS ELSE
         CALL OPEN.ABORT('VEND.CUST.ZIPS,':CLIENT.ID,PROG.NAME)
      END

      OPEN '','VEND.CUST.XREF,':CLIENT.ID TO F.VEND.CUST.XREF ELSE
         CALL OPEN.ABORT('VEND.CUST.XREF,':CLIENT.ID,PROG.NAME)
      END

      OPEN '','VEND.CUST.EDI.XREF,':CLIENT.ID TO F.VEND.CUST.EDI.XREF ELSE
         CALL OPEN.ABORT('VEND.CUST.EDI.XREF,':CLIENT.ID,PROG.NAME)
      END

* Open work file and clear

      WORK.FILE='FBWORK':CH.NUM
      OPEN '',WORK.FILE TO F.WORK ELSE
         EXECUTE 'CREATE-FILE ':WORK.FILE:' 1 1001' PASSLIST CAPTURING OUTPUT
         OPEN '',WORK.FILE TO F.WORK ELSE
            CALL OPEN.ABORT(WORK.FILE,PROG.NAME)
         END
      END
      CLEARFILE F.WORK

* Select all items in VEND.CUST file and loop through building a workfile

      EXECUTE 'SSELECT VEND.CUST,':CLIENT.ID PASSLIST CAPTURING OUTPUT
      NUM.SELECTED=@SELECTED
      CRT 'Total records in VEND.CUST,':CLIENT.ID:' = ':NUM.SELECTED:" RETURN ":
      INPUT DUMMY
      IF NUM.SELECTED=0 THEN
         CRT 'There are no items in VEND.CUST,':CLIENT.ID:' - Aborting.':
         GOTO THE.END
      END

      CNTR=0

30:***
      READNEXT VC.ID ELSE
         CRT CNTR:' items processed from VEND.CUST,':CLIENT.ID
         GOTO 50
      END
      CNTR=CNTR+1
****      CRT CNTR'R#5':' ':VC.ID

      READ VC.REC FROM F.VEND.CUST,VC.ID ELSE
         CRT 'Could not read ID ':VC.ID:" RETURN ":
         INPUT DUMMY
         GOTO 30
      END

      SORTKEY=(DCOUNT(VC.REC<15,1>,@SVM)'R%2'):((VC.REC<13>+0)'R%5')

      WORK.ID=TRIM(VC.REC<7>):'*':TRIM(OCONV(VC.REC<1>,'MCU'))

      READ WORK.REC FROM F.WORK,WORK.ID THEN
         LOCATE SORTKEY IN WORK.REC<3> BY 'DR' SETTING POS THEN
            CRT 'Identical sort keys found for ':WORK.ID:'. Inserting before original.'
         END
         INS VC.ID BEFORE WORK.REC<1,POS>
         INS VC.REC<2> BEFORE WORK.REC<2,POS>
         INS SORTKEY BEFORE WORK.REC<3,POS>
      END ELSE
         WORK.REC=''
         WORK.REC<1>=VC.ID
         WORK.REC<2>=VC.REC<2>
         WORK.REC<3>=SORTKEY
      END

      WRITE WORK.REC ON F.WORK,WORK.ID

      GOTO 30


* Go through work file removing non duplicates, normalizing codes, and displaying

50:***
      EXECUTE 'SSELECT ':WORK.FILE PASSLIST CAPTURING OUTPUT
      NUM.SELECTED=@SELECTED
      CRT 'Total records in work file ':WORK.FILE:' = ':NUM.SELECTED:" RETURN ":
      INPUT DUMMY
      IF NUM.SELECTED=0 THEN
         CRT 'There are no items in work file ':WORK.FILE:' - Aborting.':
         INPUT DUMMY
         GOTO THE.END
      END
      
      CNTR=0
      DUP.COUNTER=0
      DIFFERENT.VALUES=''

60:***
      READNEXT WORK.ID ELSE
         CRT CNTR:' items processed from work file ':WORK.FILE
         GOTO 100
      END
      CNTR=CNTR+1

      READ WORK.REC FROM F.WORK,WORK.ID ELSE
         CRT 'Could not read ID ':WORK.ID:" RETURN ":
         INPUT DUMMY
         GOTO 60
      END

      NUM.DUPS=DCOUNT(WORK.REC<1>,@VM)

      IF NUM.DUPS=1 THEN
         DELETE F.WORK,WORK.ID
      END ELSE
         NUM.CODES=DCOUNT(WORK.REC<2>,@VM)
         UPDATE=1
         CODE.VALUE=''
         FOR X=1 TO NUM.CODES
            IF CODE.VALUE='' THEN
               CODE.VALUE=WORK.REC<2,X>
            END ELSE
               IF (WORK.REC<2,X>='') OR (WORK.REC<2,X>=CODE.VALUE) THEN
               END ELSE
                  UPDATE=0
                  DIFFERENT.VALUES<-1>=WORK.ID
               END
            END
         NEXT X
         IF UPDATE THEN
            FOR X=1 TO NUM.CODES
               WORK.REC<2,X>=CODE.VALUE
            NEXT X
            WRITE WORK.REC ON F.WORK,WORK.ID
         END
         DUP.COUNTER+=1
         CRT DUP.COUNTER'R#3':SPACE(2):WORK.ID:SPACE(40-LEN(WORK.ID)):WORK.REC<1>:SPACE(20-LEN(WORK.REC<1>)):WORK.REC<2>
         CRT WORK.REC<3>
      END

      GOTO 60


* Go through work file removing duplicate items that have different codes and display

100:***
      IF DIFFERENT.VALUES#'' THEN
         CRT 'The item IDs for the workfile containing different codes in VEND.CUST : ':DIFFERENT.VALUES
         CRT 'These will be left alone in VEND.CUST.'
         NUM.ID=DCOUNT(DIFFERENT.VALUES,@AM)
         FOR X=1 TO NUM.ID
            WORK.ID=DIFFERENT.VALUES<X>
            READ WORK.REC FROM F.WORK,WORK.ID ELSE
               CRT 'Read failure in work file ':WORK.FILE:' - Aborting.':
               GOTO THE.END
            END
            CRT WORK.ID:SPACE(40-LEN(WORK.ID)):WORK.REC<1>:SPACE(20-LEN(WORK.REC<1>)):WORK.REC<2>
            DELETE F.WORK,WORK.ID
         NEXT X
      END

* Write codes to VEND.CUST file, delete duplicates, and make a search list in preparation
* for updating files that point to the deleted item

      EXECUTE 'SSELECT ':WORK.FILE PASSLIST CAPTURING OUTPUT
      NUM.SELECTED=@SELECTED
      CRT 'Total records in ':WORK.FILE:' = ':NUM.SELECTED:" RETURN ":
      INPUT DUMMY
      IF NUM.SELECTED=0 THEN
         CRT 'There are no items in work file ':WORK.FILE:' - Aborting.':
         GOTO THE.END
      END
      
      CNTR=0
      SEARCH.LIST=''

110:***
      READNEXT WORK.ID ELSE
        CRT CNTR:' items processed from work file ':WORK.FILE
        GOTO 120
      END
      CNTR=CNTR+1

      READ WORK.REC FROM F.WORK,WORK.ID ELSE
         CRT 'Could not read ID ':WORK.ID:" RETURN ":
         INPUT DUMMY
         GOTO 110
      END

      SEARCH.LIST<-1>=WORK.REC<1>

      NUM.ID=DCOUNT(WORK.REC<1>,@VM)
      FOR X=1 TO NUM.ID
         VC.ID=WORK.REC<1,X>
         IF X>1 THEN
            * READ VC.REC FROM F.VEND.CUST,VC.ID ELSE NULL
            DELETE F.VEND.CUST,VC.ID
            * UPDATE VEND.CUST.NAMES FILE                 ; * JCW01
            VCN.ID = VC.REC<42>                           ; * JCW01
            READ VCN.REC FROM F.VCN, VCN.ID THEN          ; * JCW01
              LOCATE VC.ID IN VCN.REC<2> SETTING POS THEN ; * JCW01
                VCN.REC = DELETE(VCN.REC,2,POS)           ; * JCW01
                IF VCN.REC<2> = '' THEN                   ; * JCW01
                  DELETE F.VCN, VCN.ID                    ; * JCW01
                  CALL SOUNDEX.EDIT(VCN.REC<1>,'',VCN.ID,'SDX.VCN,':CLIENT.ID)  ; * JCW01
                END ELSE                                  ; * JCW01
                  WRITE VCN.REC TO F.VCN, VCN.ID          ; * JCW01
                END                                       ; * JCW01
              END                                         ; * JCW01
            END                                           ; * JCW01
         END ELSE
            READ VC.REC FROM F.VEND.CUST,VC.ID THEN
               VC.REC<2>=WORK.REC<2,1>
               WRITE VC.REC ON F.VEND.CUST,VC.ID
            END ELSE
            END
         END
      NEXT X

      GOTO 110


* Update VC numbers in FB.BILLS file

120:***
      CRT 'Update VC numbers in FB.BILLS file...'

      NUM.SEARCH=DCOUNT(SEARCH.LIST,@AM)

      EXECUTE 'SSELECT FB.BILLS,':CLIENT.ID PASSLIST CAPTURING OUTPUT
      NUM.SELECTED=@SELECTED
      CRT 'Total records in FB.BILLS,':CLIENT.ID:' = ':NUM.SELECTED:" RETURN ":
      INPUT DUMMY
      IF NUM.SELECTED=0 THEN GOTO 150

      CNTR=0

130:***
      READNEXT BILL.ID ELSE
         CRT CNTR:' items processed from FB.BILLS,':CLIENT.ID
         GOTO 150
      END
      CNTR=CNTR+1
      READ BILL.REC FROM F.FB.BILLS,BILL.ID ELSE
         CRT 'Could not read ID ':BILL.ID:" RETURN ":
         INPUT DUMMY
         GOTO 130
      END
      FOR X=1 TO NUM.SEARCH
         LOCATE BILL.REC<17> IN SEARCH.LIST<X> SETTING POS THEN
            BILL.REC<17>=SEARCH.LIST<X,1>
            WRITE BILL.REC ON F.FB.BILLS,BILL.ID
         END
      NEXT X

      GOTO 130


* Update VC numbers in FB.BILLS.HIST file

150:***
      CRT 'Update VC numbers in FB.BILLS.HIST file...'

      EXECUTE 'SSELECT FB.BILLS.HIST,':CLIENT.ID PASSLIST CAPTURING OUTPUT
      NUM.SELECTED=@SELECTED
      CRT 'Total records in FB.BILLS.HIST,':CLIENT.ID:' = ':NUM.SELECTED:" RETURN ":
      INPUT DUMMY
      IF NUM.SELECTED=0 THEN GOTO 200

      CNTR=0

160:***
      READNEXT BILL.ID ELSE
         CRT CNTR:' items processed from FB.BILLS.HIST,':CLIENT.ID
         GOTO 200
      END
      CNTR=CNTR+1
      READ BILL.REC FROM F.FB.BILLS.HIST,BILL.ID ELSE
         CRT 'Could not read ID ':BILL.ID:" RETURN ":
         INPUT DUMMY
         GOTO 160
      END
      FOR X=1 TO NUM.SEARCH
         LOCATE BILL.REC<17> IN SEARCH.LIST<X> SETTING POS THEN
            BILL.REC<17>=SEARCH.LIST<X,1>
            WRITE BILL.REC ON F.FB.BILLS.HIST,BILL.ID
         END
      NEXT X

      GOTO 160


* Update VC numbers in VEND.CUST.ZIPS file

200:***
      CRT 'Update VC numbers in VEND.CUST.ZIPS file...'

      EXECUTE 'SSELECT VEND.CUST.ZIPS,':CLIENT.ID PASSLIST CAPTURING OUTPUT
      NUM.SELECTED=@SELECTED
      CRT 'Total records in VEND.CUST.ZIPS,':CLIENT.ID:' = ':NUM.SELECTED:" RETURN ":
      INPUT DUMMY
      IF NUM.SELECTED=0 THEN GOTO 300

      CNTR=0

210:***
      READNEXT VCZ.ID ELSE
         CRT CNTR:' items processed from VEND.CUST.ZIPS,':CLIENT.ID
         GOTO 300
      END
      CNTR=CNTR+1
      READ VCZ.REC FROM F.VEND.CUST.ZIPS,VCZ.ID ELSE
         CRT 'Could not read ID ':VCZ.ID:" RETURN ":
         INPUT DUMMY
         GOTO 210
      END
      NUM.VCZ=DCOUNT(VCZ.REC<1>,@VM)
      FOR X=1 TO NUM.VCZ
         VC.ID=VCZ.REC<1,X>
         FOR Y=1 TO NUM.SEARCH
            LOCATE VC.ID IN SEARCH.LIST<Y> SETTING POS THEN
               VCZ.REC<1,X>=SEARCH.LIST<Y,1>
            END
         NEXT Y
      NEXT X
         
      WRITE VCZ.REC ON F.VEND.CUST.ZIPS,VCZ.ID

      GOTO 210


* Update VC numbers in VEND.CUST.XREF file

300:***
      CRT 'Update VC numbers in VEND.CUST.XREF file...'

      EXECUTE 'SSELECT VEND.CUST.XREF,':CLIENT.ID PASSLIST CAPTURING OUTPUT
      NUM.SELECTED=@SELECTED
      CRT 'Total records in VEND.CUST.XREF,':CLIENT.ID:' = ':NUM.SELECTED:" RETURN ":
      INPUT DUMMY
      IF NUM.SELECTED=0 THEN GOTO 400

      CNTR=0

310:***
      READNEXT VCX.ID ELSE
         CRT CNTR:' items processed from VEND.CUST.XREF,':CLIENT.ID
         GOTO 400
      END
      CNTR=CNTR+1
      READ VCX.REC FROM F.VEND.CUST.XREF,VCX.ID ELSE
         CRT 'Could not read ID ':VCX.ID:" RETURN ":
         INPUT DUMMY
         GOTO 310
      END

      FOR X=1 TO NUM.SEARCH
         LOCATE VCX.REC<1> IN SEARCH.LIST<X> SETTING POS THEN
            VCX.REC<1>=SEARCH.LIST<X,1>
            WRITE VCX.REC ON F.VEND.CUST.XREF,VCX.ID
         END
      NEXT X

      GOTO 310


* Update VC numbers in VEND.CUST.EDI.XREF file

400:***
      CRT 'Update VC numbers in VEND.CUST.EDI.XREF file...'

      EXECUTE 'SSELECT VEND.CUST.EDI.XREF,':CLIENT.ID PASSLIST CAPTURING OUTPUT
      NUM.SELECTED=@SELECTED
      CRT 'Total records in VEND.CUST.EDI.XREF,':CLIENT.ID:' = ':NUM.SELECTED:" RETURN ":
      INPUT DUMMY
      IF NUM.SELECTED=0 THEN GOTO 500

      CNTR=0

410:***
      READNEXT VCEX.ID ELSE
         CRT CNTR:' items processed from VEND.CUST.EDI.XREF,':CLIENT.ID
         GOTO 500
      END
      CNTR=CNTR+1
      READ VCEX.REC FROM F.VEND.CUST.EDI.XREF,VCEX.ID ELSE
         CRT 'Could not read ID ':VCEX.ID:" RETURN ":
         INPUT DUMMY
         GOTO 410
      END

      FOR X=1 TO NUM.SEARCH
         LOCATE VCEX.REC<1> IN SEARCH.LIST<X> SETTING POS THEN
            VCEX.REC<1>=SEARCH.LIST<X,1>
            WRITE VCEX.REC ON F.VEND.CUST.EDI.XREF,VCEX.ID
         END
      NEXT X

      GOTO 410


500:***
      GOTO THE.END
********************************************************************************
DISPLAY.SCREEN:***
      CRT @(0,3):@(-3)
      BEGIN CASE
         CASE PAGE.NUM=1
            IF DISPLAY<1> THEN
               CRT @( 0, 3):'Client Number   : ':CLIENT.ID:STR(' ',6-LEN(CLIENT.ID)):CLIENT.NAME
            END
      END CASE
      RETURN

********************************************************************************
SET.DISPLAY.VARIABLE:***
      NUM.PROMPTS=1
      DISPLAY=''
      FOR X=1 TO NUM.PROMPTS
         DISPLAY<X>=0
      NEXT X
      RETURN

********************************************************************************
THE.END:***
      CRT @(0,23):@(-4):
      STOP
