      SUBROUTINE FB.2.1.GET.DIV(CHECK.ZIP,CLIENT.ID,DIVISION,OPT,QI)
*
 UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.2.1.GET.DIV' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
***** CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
* SUBROUTINE TO ENTER BILL OF LADINGS
*
* FREIGHT BILLING PACKAGE
*
* AUTHOR: TAMI SEAGO
*DATE: JUNE 1, 1999
*
* THIS PROGRAM IS A PROPRIETARY PRODUCT OF AUTOMATED FREIGHT SYSTEMS
* AND MAY NOT BE USED, COPIED OR MODIFIED WITHOUT THE EXPRESS
* WRITTEN CONSENT OF SAME.
*
********************************************************************
*
* 041205 - JMK01 - CHANGE SCREEN LISTING FOR DIVISIONS
* Last updated by AFS (valerie) at 16:14:43 on 08/24/1994.
*   CHANGED BILL OF LADING NUMBERS TO BE 25 CHARACTERS.
* Last updated by AFS.SOURCE (valerie) at 14:05:23 on 08/04/1994.
*   ADDED CLIENT INSERT TO GO WITH FB.2.1.
*
$INCLUDE PROG.ADMIN INC_OPTIONS
$INCLUDE FILE.DEFS INC_CLIENTS
*
* Initialize variables
*
      PROMPT''
      PROG.NAME='FB.2.1.BOL'
*
* Open files
*
      OPEN '','ZIPS.CODES' TO F.ZIPS ELSE
         CALL OPEN.ABORT("ZIPS",PROG.NAME)
      END
      READ ZIP3.REC FROM F.ZIPS,'3.DIGIT' ELSE ZIP3.REC=''

      OPEN '','DIVISION.CODES,':CLIENT.ID TO F.DIV.CODES ELSE
         CALL OPEN.ABORT("DIVISION.CODES",PROG.NAME)
      END
      CALL FB.CLEAR.WINDOW

*
* Display window headings
*

      CRT @(37,6):'More than one division for Zip ':CHECK.ZIP 'L#6'     ; * NPR01
      CRT @(37,7):'#  Div   Address         City            St'         ; * JMK01
      CRT @(37,8):'- ------ --------------- --------------- --'         ; * JMK01
*
* Display Data
*

      DIV.COUNT = DCOUNT(DIVISION<1>,@VM)
      FOR X.2 = 1 TO DIV.COUNT
         LINE.2 = 8 + X.2
         DIV.ID = DIVISION<1,X.2>
         GOSUB GET.DESC
*        CRT @(38,LINE.2):X.2:' ':DIV.ID'L#6':ZIP.DESC'L#21':DIV.DESC'L#13' ; * JMK01
*NPR01         CRT @(38,LINE.2):X.2:' ':DIV.ID'R#5 ':SCR.ADDR'L#15 ':SCR.CITY'L#15 ':SCR.STATE'L#2':       ; * JMK01
         CRT @(37,LINE.2):X.2:' ':DIV.ID'R#6 ':SCR.ADDR'L#15 ':SCR.CITY'L#15 ':SCR.STATE'L#2':       ; * JMK01  ; * NPR01
      NEXT X.2
      IF DIV.COUNT < 5 THEN
         FOR X.2 = DIV.COUNT+1 TO 5
            LINE.2 = 8 + X.2
* NPR01            CRT @(38,LINE.2):@(-4)
            CRT @(37,LINE.2):@(-4)  ;* NPR01
         NEXT X.2
      END

100:  ***
      HELP="Enter Line Num of the division to use. ''=End. 'X'=Back. 'EX'=Exit."
      CALL GEN.IN(37,16,'Enter line number. ###','',Q,0,3,'','',0,-3,16,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI = 'EX'
            STOP
         CASE QI = 'X'
            DIVISION = ''
            RETURN
         CASE QI = ''
            CALL ELINE('Please enter a line # for a division')
            GO 100
         CASE NUM(QI)
            IF QI LE 0 OR QI GT DIV.COUNT THEN
               CALL ELINE('Incorrect line number, please try again')
               GO 100
            END ELSE
               Q = QI
            END
         CASE 1
            GO 100                       ; * START OVER
      END CASE

      IF CLIENT.ID = "01267" OR CLIENT.ID="01457" THEN          ; * NPR01
         DIVISION = DIVISION<1,Q>'R%6'     ; * NPR01
      END ELSE                             ; * NPR01
         DIVISION = DIVISION<1,Q>'R%5'
      END                                  ; * NPR01

      RETURN



*
*
*********************************************************************
GET.DESC:* SUBROUTINE TO RETRIEVE DIVISION CITY, STATE AND XREF CODE
*********************************************************************
*
      READ DIV.REC FROM F.DIV.CODES,DIV.ID ELSE
         INVALID.DIV = 1
         ZIP.DESC=''
         DIV.DESC=''
         SCR.ZIP=''                 ; * JMK01
         SCR.DESC=''               ; * JMK01
         SCR.ADDR=''               ; * JMK01
         SCR.CITY=''               ; * JMK01
         SCR.STATE=''              ; * JMK01
         RETURN
      END

      ZIP.DESC=''
      ZIP.ID = DIV.REC<1>
      SCR.ZIP=DIV.REC<1>                 ; * JMK01
      SCR.DESC=DIV.REC<11>               ; * JMK01
      SCR.ADDR=DIV.REC<14>               ; * JMK01
      SCR.CITY=DIV.REC<16>               ; * JMK01
      SCR.STATE=DIV.REC<17>              ; * JMK01
      DIV.DESC = DIV.REC<11>

GET.ZIP:*
      BEGIN CASE
         CASE LEN(ZIP.ID)=5
            READ ZIP.REC FROM F.ZIPS,ZIP.ID ELSE
               ZIP.REC = "~~~ Unknown ~~~"
            END
            ZIP.DESC = ZIP.REC<1> : ' ' : ZIP.REC<2>
         CASE LEN(ZIP.ID)=3
            ZIP.DESC = '~~~ Unknown ~~~'
            X=DCOUNT(ZIP3.REC<1>,CHAR(253))
            FOR I=1 TO X
               IF ZIP.ID GE ZIP3.REC<2,I> & ZIP.ID LE ZIP3.REC<3,I> THEN
                  ZIP.DESC = ZIP3.REC<1,I>
                  EXIT
               END
            NEXT I
         CASE 1
            CALL ELINE('Invalid entry.')
            ZIP.DESC='ERROR'
      END CASE

*
      RETURN
*
*
