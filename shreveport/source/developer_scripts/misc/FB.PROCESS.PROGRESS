* *************************************************************************
* PROGRAM: FB.PROCESS.PROGRESS
* PROGRAM TO DISPLAY Clients Processing Status in FB.2.3.NW and FB.3.1.NEW
*
* FREIGHT BILLING PACKAGE
* AUTHOR: N.C.G. Pratt
* DATE: February 02, 2010
*
* *************************************************************************
      $OPTIONS HEADER.EJECT
      $OPTIONS EXEC.EQ.PERF
      $OPTIONS INFO.ABORT
*
* Initialize variables.
*
      ERRMSG=''
*
      PROMPT''
      PROG.NAME='FB.PROCESS.PROGRESS'
      PROG.DESC="Clients Processing Status"
      PACK.NAME="Freight Billing"
      CALL CHANNEL(CH.NUM)
      UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.PROCESS.PROGRESS' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010

      OPEN '','FB.TABLES' TO F.TABLES ELSE CALL OPEN.ABORT("FB.TABLES",PROG.NAME)
      OPEN '','CLIENTS' TO F.CLIENTS ELSE CALL OPEN.ABORT("CLIENTS",PROG.NAME)
      OPEN '','AR-BRIDGE' TO F.BRIDGE ELSE CALL OPEN.ABORT("AR-BRIDGE",PROG.NAME)
      OPEN '','AFS.PROCESS.LOGFILE' TO F.PROC.LOGF ELSE CALL OPEN.ABORT("AFS.PROCESS.LOGFILE",PROG.NAME)

      PROMPT ""
*
      CALL GET.USER(USER)

START: *

      CALL AFS.SCR.HEAD('','','',PROG.NAME,PROG.DESC,PACK.NAME,'AFS Logistics, LLC',TIME.DATE,1)

      TIMEX = TIME()
      TODAY = DATE()

      CRT @(35,1):\(\:OCONV(TODAY,"D2/"):" ":OCONV(TIMEX,"MTS"):\)\
*
*CRT @(-1)
*CRT @(0,0):"Client Processing Status": @(61,0):OCONV(TODAY,"D2/"):" ":OCONV(TIMEX,"MTS")
*CRT @(0,1):"========================": @(61,1):STR("=",8):" ":STR("=",8)
*

      CRT @(0,3):"Client ":SPACE(25)  :"  Start PR   Elapsed | Start RPT   Elapsed | AR"
      CRT @(0,4):"------ ":STR("-",25):"  --------  -------- | ---------  -------- | --"


      FP.PROC.REC = ""
      N.CLIENTS = 0
      IN.PROCESS = ''
      DAYS.LIST = 7

      IF USER NE "XNPRATT" THEN
         READ FP.PROC.REC FROM F.TABLES, "FP_PROCESS" ELSE FP.PROC.REC = ''
      END ELSE
         READ FP.PROC.REC FROM F.TABLES, "FP_PROCESS_OLD" ELSE FP.PROC.REC = ''   ;* ZZ Remove
      END

      N.CLIENTS = DCOUNT(FP.PROC.REC<1>,@VM)

      IF FP.PROC.REC = "" OR N.CLIENTS = "0" THEN
         CRT @(0,6):"No Clients are being Processed at this time "
      END ELSE
         FOR IC = 1 TO N.CLIENTS
            W.CLIENT = FP.PROC.REC<1,IC>

            READ CL.REC FROM F.CLIENTS, W.CLIENT ELSE CL.REC = ""
            READ AR.REC FROM F.BRIDGE , W.CLIENT ELSE
               READ AR.REC FROM F.BRIDGE , W.CLIENT:'-TEST' ELSE AR.REC = ""
            END

            IF AR.REC<1> NE "" THEN AR.POSTED = "Y" ELSE AR.POSTED = "N"

            CL.NAME = CL.REC<2>[1,25]

            ID.PROC.LOG   = "FB.2.3.NW*":W.CLIENT:"*":TODAY
            READ LOG.PROC.REC FROM F.PROC.LOGF, ID.PROC.LOG ELSE
               LOG.PROC.REC = ''
            END

            PROC.ST.DATE  = LOG.PROC.REC<1>
            PROC.ST.TIME  = LOG.PROC.REC<2>
            PROC.END.DATE = LOG.PROC.REC<3>
            PROC.END.TIME = LOG.PROC.REC<4>
            PROC.USER     = LOG.PROC.REC<5>
            PROC.CH.NUM   = LOG.PROC.REC<6>

            ID.RPT.LOG   = "FB.3.1.NEW*":W.CLIENT:"*":TODAY
            READ LOG.RPT.REC FROM F.PROC.LOGF, ID.RPT.LOG ELSE
               LOG.RPT.REC = ''
            END

            RPT.ST.DATE  = LOG.RPT.REC<1>
            RPT.ST.TIME  = LOG.RPT.REC<2>
            RPT.END.DATE = LOG.RPT.REC<3>
            RPT.END.TIME = LOG.RPT.REC<4>
            RPT.USER     = LOG.RPT.REC<5>
            RPT.CH.NUM   = LOG.RPT.REC<6>

            IF PROC.ST.TIME  GT "0" AND PROC.END.TIME  GT "0" THEN
               PROC.ELAPSED = PROC.END.TIME - PROC.ST.TIME
            END ELSE
               PROC.ELAPSED = TIMEX - PROC.ST.TIME
            END

            IF RPT.ST.TIME  GT "0" AND RPT.END.TIME  GT "0" THEN
               RPT.ELAPSED = RPT.END.TIME - RPT.ST.TIME
            END ELSE
               RPT.ELAPSED = TIMEX - RPT.ST.TIME
            END


            CRT @(0,5+IC):W.CLIENT:"  ":CL.NAME "L#25" : "  " :
            CRT OCONV(PROC.ST.TIME,"MTS")  "R#8" :"  ":
            CRT OCONV(PROC.ELAPSED,"MTS")  "R#8" :" |  ":

            IF RPT.ST.TIME NE "" THEN
               CRT OCONV(RPT.ST.TIME,"MTS")  "R#8" :"  ":
               CRT OCONV(RPT.ELAPSED,"MTS")  "R#8" :" | ":
            END ELSE
               CRT SPACE(8) :"  ":
               CRT SPACE(8) :" | ":
            END
            CRT AR.POSTED

*      CRT OCONV(FP.PROC.REC<2,IC>,'D2/'):'  ' :
*      CRT OCONV(FP.PROC.REC<3,IC>,'MTS'):'  ' :
*      CRT FP.PROC.REC<4,IC>:'  ' :
*      DURATION = TIMEX - FP.PROC.REC<3,IC>
*      CRT OCONV(DURATION,"MTS")
         NEXT IC
      END

      OC.TODAY = OCONV(TODAY,"D2/")
      DAY.NO = OCONV(TODAY,"DW")
      MONTH.BACK = TODAY - 31
      WEEK.BACK  = TODAY - (DAYS.LIST-1)
      OC.MONTH.BACK = OCONV(MONTH.BACK,"D2/")
      OC.WEEK.BACK = OCONV(WEEK.BACK,"D2/")

      DAY.DATA = ""

      W.DATE = WEEK.BACK
      FOR II = 1 TO DAYS.LIST
         DAY.DATA<1,II> = 0
         DAY.DATA<2,II> = 0
         DAY.DATA<3,II> = W.DATE
         DAY.DATA<4,II> = 0
***    CRT II "R#2":" ": OCONV(W.DATE,"D2/"):"  ":OCONV(W.DATE,"DW")
         W.DATE += 1
      NEXT II

      W.STMT = \SELECT CLIENTS WITH LAST.PROC EQ "\:WEEK.BACK - 1 :\"\
      EXECUTE W.STMT CAPTURING OUTPUT
      PROC.WEEK.AGO = @SELECTED
      EXECUTE "TIME" CAPTURING OUTPUT
*
      W.STMT = \SELECT CLIENTS WITH LAST.PROC2 GE "\:OC.WEEK.BACK :\"\
**** W.STMT = \SELECT CLIENTS WITH @ID LE "2000" AND WITH STATUS NE "I"\


      EXECUTE W.STMT CAPTURING OUTPUT
      PROC.THIS.PER = @SELECTED
      EXECUTE "SAVE-LIST IP.CLIENTS" CAPTURING OUTPUT1
      EXECUTE "GET-LIST IP.CLIENTS" CAPTURING OUTPUT2

      CRT STR("-",79)
      CRT
      CRT "Count of Clients processed since : " : OCONV(WEEK.BACK-1,"D2/") : " is " : PROC.THIS.PER + PROC.WEEK.AGO
      CRT
      CRT "Proc. DT " : " " :
      CRT "Day" : " " :
      CRT "Processed" : "   " :
      CRT "Usually" : " " :
      CRT "+/- Other" : " " :
      CRT " ...... Notes"
      CRT STR("-",79)

      EOF = 'N'
      CL.DATA  = ""

      LOOP
         READNEXT ID.CLIENT ELSE EOF = "Y"
      UNTIL EOF = "Y" DO
         READ CL.REC FROM F.CLIENTS, ID.CLIENT ELSE CL.REC = ""
         LAST.PROC.DT  = CL.REC<82>
         LAST.PROC.DAY = OCONV(LAST.PROC.DT,"DW")
         PROC.DAY      = CL.REC<151>
         CONVERT " " TO "" IN PROC.DAY

         FOR II = 1 TO DAYS.LIST
            T.DATE = DAY.DATA<3,II>
            IF LAST.PROC.DT = T.DATE THEN
               DAY.DATA<4,II> += 1
            END
         NEXT II

         FOR II = 1 TO DAYS.LIST
            T.DATE = DAY.DATA<3,II>
            T.DAY = OCONV(T.DATE,"DW")
            IF PROC.DAY  = T.DAY THEN
               DAY.DATA<1,II> += 1
            END
         NEXT II

      REPEAT

      FOR II = 1 TO DAYS.LIST
         DAY.NO = OCONV(DAY.DATA<3,II>,"DW")
         IF DAY.NO = 6 OR DAY.NO = 7 THEN
            CONTINUE
         END
         CRT  OCONV(DAY.DATA<3,II>,"D2/") "R#8" : "  (":DAY.NO :")  ":
         CRT SPACE(4) : DAY.DATA<4,II> "R#4" : "    =  ":
         DIFF = DAY.DATA<4,II> - DAY.DATA<1,II>
         IF DIFF GT "0" THEN
            CRT DAY.DATA<1,II> "R#3" : "  + ":
            CRT DIFF "R#3" : "    (Normally processed on other days.)"
         END ELSE
            CRT DAY.DATA<1,II> "R#3" : "  - ":
            CRT ABS(DIFF) "R#3" : "    (Normally processed on this day.)"
         END
      NEXT II

      CRT
      CRT SPACE(14):"Total": SUM(DAY.DATA<4>) "R#4" : SPACE(10): "Plus ":PROC.WEEK.AGO: " to go from last week" :
      CRT SPACE(1):"(":OCONV(WEEK.BACK - 1,"D2/"):")"

1000: *

      CRT
      IF FP.PROC.REC NE "" THEN
         CRT @(0,22):"List Clients processed [T]oday, for the [W]eek, [L]og, [R]efresh OR [EX]it: " :; INPUT QQ
      END ELSE
         CRT @(0,22):"List Clients processed [T]oday, for the [W]eek, [R]efresh OR [EX]it: " :; INPUT QQ
      END

      QQ = OCONV(QQ,"MCU")

      BEGIN CASE
         CASE QQ = "T"
            CRT @(0,22): @(-4):@(0,22):"Print report [Y]es or [CR] for display : ": ; INPUT RPT.FLAG
**      W.STMT = \SORT CLIENTS WITH LAST.PROC2 EQ "\:OC.TODAY :\" BY LAST.PROC2 BREAK-ON LAST.PROC2 TOTAL CNT\
            W.STMT = \SORT CLIENTS BY LAST.PROC2 BY 2 BREAK-ON LAST.PROC2 WITH LAST.PROC2 GE "\:OC.TODAY :\" CNAME.30 STATUS 151\
            IF RPT.FLAG = "Y" THEN
               W.STMT := \ LPTR\
            END
            EXECUTE W.STMT
            CALL ELINE("")
         CASE QQ = "W"
            CRT @(0,22): @(-4):@(0,22):"Print report [Y]es or [CR] for display : ": ; INPUT RPT.FLAG
            W.STMT = \SORT CLIENTS BY LAST.PROC2 BY 2 BREAK-ON LAST.PROC2 WITH LAST.PROC2 GE "\:OC.WEEK.BACK :\" CNAME.30 STATUS 151\
            IF RPT.FLAG = "Y" THEN
               W.STMT := \ LPTR\
            END
            EXECUTE W.STMT
            CALL ELINE("")
         CASE QQ = "R"
            GOTO START
         CASE QQ = "L"
            GOSUB DISPLAY.PROGRESS.LOG
         CASE QQ = "N" OR QQ = "" OR QQ = "EX"
            BEGIN CASE
               CASE USER = 'DAVID'
               CASE USER = 'OWEN'
               CASE USER = 'MKERBOW'
               CASE USER = 'NPRATT'
               CASE 1
                  CHAIN "G"
            END CASE
            STOP
         CASE 1
            NULL
      END CASE

      GOTO START

      STOP

DISPLAY.PROGRESS.LOG: *

      N.CLIENTS = DCOUNT(FP.PROC.REC<1>,@VM)

      FOR IC = 1 TO N.CLIENTS

         W.CLIENT = FP.PROC.REC<1,IC>
         ID.PROG   = "FB.2.3.NW*":W.CLIENT:"*":TODAY
         VIN = ID.PROG  ; VOUT = ''
**   CALL FB.DISPLAY.PROC.LOG(VIN,VOUT,F.PROC.LOGF)

         CONT.RESP = 'Y'
         GOSUB DISPLAY.PROGRESS.DETAIL
         IF CONT.RESP = "X" THEN RETURN

         IF VOUT NE "" THEN
**      CALL ELINE(VOUT<1,1>)
         END

         ID.REPORT = "FB.3.1.NEW*":W.CLIENT:"*":TODAY
         VIN = ID.REPORT  ; VOUT = ''
**   CALL FB.DISPLAY.PROC.LOG(VIN,VOUT,F.PROC.LOGF)

         CONT.RESP = 'Y'
         GOSUB DISPLAY.PROGRESS.DETAIL
         IF VOUT NE "" THEN
**      CALL ELINE(VOUT<1,1>)
         END
         IF CONT.RESP = "X" THEN RETURN

      NEXT IC

      RETURN

DISPLAY.PROGRESS.DETAIL: *

      LOG.HDR.ID  = VIN<1>
      LOG.PROGRAM = FIELD(LOG.HDR.ID,"*",1)
      LOG.CLIENT  = FIELD(LOG.HDR.ID,"*",2)
      LOG.ST.DATE = FIELD(LOG.HDR.ID,"*",3)

      READ CL.REC FROM F.CLIENTS, LOG.CLIENT ELSE
         VOUT = "Cant read CLIENTS record " : LOG.CLIENT
         RETURN
      END

      CLIENT.NAME = CL.REC<2>

      LOG.HDR.REC = ''
      LOG.DET.REC = ''

      READ LOG.HDR.REC FROM F.PROC.LOGF, LOG.HDR.ID ELSE
         ERROR = "Cant read log file record ":LOG.HDR.ID
         VOUT = ERROR
         RETURN
      END

      HDR.ST.DATE  = LOG.HDR.REC<1>
      HDR.ST.TIME  = LOG.HDR.REC<2>
      HDR.END.DATE = LOG.HDR.REC<3>
      HDR.END.TIME = LOG.HDR.REC<4>
      HDR.USER     = LOG.HDR.REC<5>
      HDR.CH.NUM   = LOG.HDR.REC<6>

      IF LEN(CLIENT.NAME) GT 40 THEN CLIENT.NAME = CLIENT.NAME[1,40]

      HDR = @(-1):@(0,0):"Processing progress... Program : ":LOG.PROGRAM "L#14":" Client : ":LOG.CLIENT:" ": CLIENT.NAME
      HDR := @(0,2) : SPACE(3):\Started (\:OCONV(HDR.ST.DATE,"D2/"):\ at \:OCONV(HDR.ST.TIME,"MTS"):\)\

      IF HDR.END.DATE = "" THEN
         PROG.ELAPSED = TIME() - HDR.ST.TIME
         HDR := SPACE(3):"Running for ":  PROG.ELAPSED :"  Seconds (":OCONV(PROG.ELAPSED,'MTS') : ")"
      END ELSE
         PROG.ELAPSED = HDR.END.TIME - HDR.ST.TIME
         HDR := SPACE(3):\Ended (\:OCONV(HDR.END.DATE,"D2/"):\ at \:OCONV(HDR.END.TIME,"MTS"):\ [\:PROG.ELAPSED "R#6":\ Secs.])\
      END

      HDR := @(0,4) :"SEQ" "R#3":" ":"Process Description" "L#48" : " " :"Div." "R#5"
      HDR := "     Started":" ":" Elapsed "
      HDR := @(0,5) :"===" "R#3":" ":STR("=",48) "L#48" : " " :"=====" "R#5"
      HDR := "     =======":" ":" ======= "
*      HDR := "     Started":" ":" Elapsed "


      CRT HDR

      LN.CNT = 1
      N.DET = DCOUNT(LOG.HDR.REC<10>,@VM)
      FOR IDX = N.DET TO 1 STEP -1
         LOG.SEQ.NO = LOG.HDR.REC<10,IDX>
         LOG.DET.ID = LOG.HDR.ID:"*":LOG.SEQ.NO
         LOG.NO     = FIELD(LOG.SEQ.NO,"_",1)
         DIVISION   = FIELD(LOG.SEQ.NO,"_",2)

         LOG.DET.REC = ''
         READ LOG.DET.REC FROM F.PROC.LOGF, LOG.DET.ID ELSE
***            ERROR<1,-1> = "Cant read log file record ":LOG.DET.ID
            CONTINUE
         END

         DET.ST.DATE  = LOG.DET.REC<1>
         DET.ST.TIME  = LOG.DET.REC<2>
         DET.END.DATE = LOG.DET.REC<3>
         DET.END.TIME = LOG.DET.REC<4>
         DET.PROCESS  = LOG.DET.REC<5>
         ELAPSED      = LOG.DET.REC<13>
         IF ELAPSED = "" THEN ELAPSED = DET.END.TIME - DET.ST.TIME

         DET = @(0,LN.CNT+5) : LOG.NO "R#3":" ":DET.PROCESS[1,48] "L#48" : " " : DIVISION "R#5"
*        DET := "  ": OCONV(DET.ST.TIME*1000,"MR3") "R#10" ; * JMK999
         DET := "  ": OCONV(DET.ST.TIME,"MTHS") "R#10" ; * JMK999

         IF DET.END.DATE = "" THEN
            PROCESS.ELAPSED = (TIME() - DET.ST.TIME) + 0
         END ELSE
            PROCESS.ELAPSED = (DET.END.TIME - DET.ST.TIME) + 0
         END

**         DET := "  ":OCONV(PROCESS.ELAPSED,"MR3") "R#7"

         IF PROCESS.ELAPSED GT "0" THEN
            DET := "  ":OCONV(PROCESS.ELAPSED*1000,"MR3") "R#7"
            CRT DET     ;* Only display info if it time elapsed is greater than ZERO
            LN.CNT += 1
         END

*         FOR RF = 1 TO 5
*            W.DET.REF = LOG.DET.REC<5+RF>
*            IF W.DET.REF NE "" THEN
*               CRT SPACE(8):W.DET.REF
*               LN.CNT += 1
*              IF LN.CNT GT 16 THEN
*                  LN.CNT = 1
*                 CALL ELINE("")
*                   CRT HDR
*               END
*            END
*         NEXT RF

*         LN.CNT += 1

         IF LN.CNT GT 16 THEN
            LN.CNT = 1

            GOSUB CONTINUEX
            BEGIN CASE
               CASE CONT.RESP = 'EX'
                  STOP
               CASE CONT.RESP = 'X' OR CONT.RESP = 'N'
                  RETURN
               CASE 1
            END CASE

            CRT HDR
         END
      NEXT IDX

      GOSUB CONTINUEX
      BEGIN CASE
         CASE CONT.RESP = 'EX'
            STOP
         CASE CONT.RESP = 'X' OR CONT.RESP = 'N'
            RETURN
         CASE 1
            RETURN
      END CASE

      RETURN

CONTINUEX: *
*
      CONT.RESP = 'Y'

      HELP="[N]=No, [CR]=Continue,  'X'=Back 'EX'it "
      CALL GEN.IN(0,22,'Continue ? Y','',Q,0,1,'','',0,-1,22,1,QI,HELP,0,23)

      QI=OCONV(QI,'MCU')
      IF QI = '' THEN QI = 'Y'
      CONT.RESP = QI

      RETURN
