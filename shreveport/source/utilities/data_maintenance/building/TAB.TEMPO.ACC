SUBROUTINE TAB.TEMPO.ACC(VIN,VOUT)
****************************************
* Program name : TAB.TEMPO.ACC
* Author       : Greg Bino
* Date written : August 12 2021
* Library      : FBBP
* COPYRIGHT (c) : AFS, LLC 2021, All Rights Reserved.
*
* Build ACC file for export to tempo
* Last updated by afs (AFSLOGISTICS\gbino) at 09:16:00 on 09/07/2021.
*
* Start modification history
* Mod nn  mm/dd/yy, init, req #, description

* End modification history
*
*******************************************
  ****    CALL GET.USER.NEW(USER,CH.NUM)
      
    
      TAB = ","
      LF = CHAR(10)
      AM = CHAR(254)
      ACC.DATA.REC = ""
      CRT@(-1)
      OPEN '','ZIP.LINE.ITEM' TO F.ZIP.LINE.ITEM ELSE
         CALL OPEN.ABORT2('ZIP.LINE.ITEM',PROG.NAME)
      END
      OPEN '','GRB' TO F.GRB ELSE
         CALL OPEN.ABORT2('GRB',PROG.NAME)
      END
      OPEN '','CARRIERS' TO F.CAR ELSE
         CALL OPEN.ABORT2('CARRIERS',PROG.NAME)
      END
      
      
      OPEN '','FB.AUDIT.ACC' TO F.ACC ELSE
         CALL OPEN.ABORT2('FB.AUDIT.ACC',PROG.NAME)
      END
      OPEN "CLEAN.ROUTE" TO F.ROUTE ELSE STOP
  ****    CLIENT.ID = "01282"
 ****     CARRIER.ID ="00979"

      CLIENT.ID = VIN<1>
      CH.NUM = VIN<2>
      USER = VIN<3>
        FILE = VIN<4>
      
      
      CMD = 'SSELECT FB.AUDIT,': CLIENT.ID : ''

      EXECUTE CMD RTNLIST CLIENT.LIST CAPTURING STUFF RETURNING JUNK
      EOJ = 0
      LOOP
         READNEXT CARRIER.ID FROM CLIENT.LIST ELSE EOJ = 1
         	CRT CARRIER.ID
         	READV SCAC FROM F.CAR,CARRIER.ID,12 ELSE SCAC = "NOF"
      UNTIL EOJ DO
         VIN1=""
         VIN1<1> = CLIENT.ID
         VIN1<2> = CARRIER.ID
         ACC.DATA.REC=''
         CALL ACC.TEST(VIN1,VOUT)
         GOSUB BUILD.OLA                 ; * accessorial from fb.audit.tables
         
         GOSUB BUILD.ACC.AUDIT.DATA      ; * accessorial from fb.audit.acc
       
         GOSUB BUILD.ZIP.LINE.DATA       ; * accessorials from zip line item files

         WRITE ACC.DATA.REC TO F.GRB,"GB.ACC"
         READ DATA1 FROM F.GRB,"GB.ACC" ELSE NULL
         CONVERT AM TO LF IN DATA1
         FILE =SCAC:"_CONTRACTS"
          OPEN FILE TO FILE.EXP ELSE
          	CRT 
         CALL OPEN.ABORT(FILE,PROG.NAME)
         END 
         DATE.STAMP = OCONV(DATE(),"D4-")
         DATE.STAMP = DATE.STAMP[7,4]:DATE.STAMP[1,2]:DATE.STAMP[4,2]
         TIME.STAMP = TIME()[1,5]
       **  WRITE DATA1 ON FILE.EXP,CLIENT.ID:"_":CARRIER.ID:"_ACC.csv"  
           WRITE DATA1 ON FILE.EXP,CLIENT.ID:"_":CARRIER.ID:"_ACC.csv"   
      REPEAT
**  DEBUG    
RETURN
      STOP

***********************************************************
BUILD.ZIP.LINE.DATA:
**************************************************************
*
*   ZIP LINE ITEM

      ZIP.TEST.I = CARRIER.ID:"*":CLIENT.ID:"*1*I"
      ZIP.TEST.O = CARRIER.ID:"*":CLIENT.ID:"*1*O"
      READ TEST FROM F.ZIP.LINE.ITEM,ZIP.TEST.I THEN
         TEST.I = 1
      END ELSE
         TEST.I = 0
      END
      READ TEST FROM F.ZIP.LINE.ITEM,ZIP.TEST.O THEN
         TEST.O = 1
      END ELSE
         TEST.O = 0
      END

      IF TEST.O GT 0 OR TEST.I GT 0 THEN
         STMT='SSELECT ZIP.LINE.ITEM = ' : CARRIER.ID : "*" : CLIENT.ID : '*]'
      END ELSE
         STMT='SSELECT ZIP.LINE.ITEM = ' : CARRIER.ID : '*ALL]'
         RETURN
      END
      EXECUTE STMT PASSLIST CAPTURING OUTPUT
      IF SYSTEM(11) ELSE
         CALL ELINE('No transactions on file.')
         DEBUG
       ***  GOTO 100
      END
      EXECUTE 'SAVE-LIST ':CH.NUM PASSLIST CAPTURING OUTPUT
      EXECUTE 'GET-LIST ':CH.NUM PASSLIST CAPTURING OUTPUT
   ****   DEBUG
      EOJ1 = 0
      LOOP
         READNEXT ZIP.LINE.ITEM.ID ELSE EOJ1 = 1
      UNTIL EOJ1 DO

         CARRIER = FIELD(ZIP.LINE.ITEM.ID,"*",1)
         CLIENT = FIELD(ZIP.LINE.ITEM.ID,"*",2)    ; * WHAT IF ALL
         DIRECTION = FIELD(ZIP.LINE.ITEM.ID,"*",4)

         ZIP.PAGE = ""
         ZIP.PAGE<1,1> = DIRECTION
         READ ZIPLINE.REC FROM F.ZIP.LINE.ITEM,ZIP.LINE.ITEM.ID THEN
            NUM.SD=DCOUNT(ZIPLINE.REC<1>,@VM)
            FOR X=1 TO NUM.SD
               START.ZIP=ZIPLINE.REC<1,X>
               END.ZIP=ZIPLINE.REC<2,X>
               FOR Y = START.ZIP TO END.ZIP
                  ZIP.PAGE<2,-1>=Y'R%5'
                  LINE.ITEM.COUNT=DCOUNT(ZIPLINE.REC<3,X>,@SVM)
                  TEXT=''
                  **  DEBUG
                  FOR Z = 1 TO LINE.ITEM.COUNT
                     TEXT=TEXT:ZIPLINE.REC<3,X,Z>'L#4'

                     ZIP.PAGE<4,-1>=ZIPLINE.REC<4,X,Z>'L#1'
                  NEXT Z
                  ZIP.PAGE<3,-1>=TEXT

               NEXT Y
            NEXT X
         END ELSE
            ZIP.PAGE=''
         END
         WRITE ZIP.PAGE ON F.GRB,"ZIP.TEST"
         READ ZIP.DATA FROM F.GRB,"ZIP.TEST" ELSE ZIP.DATA = ""
         DIRECTION = ZIP.DATA<1>
         REC.CNT = DCOUNT(ZIP.DATA<2>,@VM)
         FOR I = 1 TO REC.CNT
            GOSUB INIT.VAR
            ZIP = ZIP.DATA<2,I>
            CHARGE.CODE = ZIP.DATA<3,I>
            DIRECT.FLAG = ZIP.DATA<4,I>
            AUTO.APPLY = "Y"
            ACC.ID = CARRIER:"*":CHARGE.CODE:"*":CLIENT:"*ALL"
            READ ACC.DAT FROM F.ACC,ACC.ID THEN
            	VAL.CNT = DCOUNT(ACC.DAT<1>,@VM)
            	IF ACC.DAT<1,VAL.CNT> GT DATE() THEN
            		VAL.CNT = VAL.CNT - 1
            	END
               CHARGE.VALUE = ACC.DAT<4,VAL.CNT>/100

            END
            KEY = CHARGE.CODE
            BEGIN CASE
               CASE DIRECTION = "I"
                  IF DIRECT.FLAG = "B" THEN        ; * SEND BOTH
                     ORIG.ZIP = ZIP
                     GOSUB UPDATE.ACC.RECORD
                     ORIG.ZIP = ""
                     DEST.ZIP = ZIP
                     GOSUB UPDATE.ACC.RECORD

                  END
                  IF DIRECT.FLAG = "D" THEN        ; * DEST ONLY
                     DEST.ZIP = ZIP
                     GOSUB UPDATE.ACC.RECORD

                  END
               CASE DIRECTION = "O"
                  IF DIRECT.FLAG = "B" THEN        ; * SEND BOTH
                     ORIG.ZIP = ZIP
                     GOSUB UPDATE.ACC.RECORD
                     ORIG.ZIP = ""
                     DEST.ZIP = ZIP
                     GOSUB UPDATE.ACC.RECORD

                  END
                  IF DIRECT.FLAG = "D" THEN        ; * DEST ONLY
                     ORIG.ZIP = ZIP
                     GOSUB UPDATE.ACC.RECORD

                  END

               CASE 1
            END CASE

         NEXT I
      REPEAT
      RETURN


************************************************
BUILD.ACC.AUDIT.DATA:
***********************************************
     *** DEBUG

      CMD = 'SELECT FB.AUDIT.ACC WITH CLIENT = "' : CLIENT.ID : '" AND WITH CARRIER = "' :CARRIER.ID :'"'
      EXECUTE CMD CAPTURING STUFF RETURNING JUNK
      IF @SELECTED GT 0 THEN
         EOJ2 = 0
         LOOP
            READNEXT ACC.ID ELSE EOJ2=1
         UNTIL EOJ2 DO
            READ FB.ACC FROM F.ACC,ACC.ID THEN
               BDATE.CNT = DCOUNT(FB.ACC<1>,@VM)
               IF FB.ACC<2><1,BDATE.CNT> = "" THEN
                  CHARGE.VALUE = FB.ACC<4,BDATE.CNT>/100
                  AUTO.APPLY = "Y"
                  KEY = FIELD(ACC.ID,"*",2)
                  IF FB.ACC<5,BDATE.CNT> # "" THEN
                     CHARGE.MIN = FB.ACC<5>/100
                  END
                  IF FB.ACC<6,BDATE.CNT> # "" THEN
                     CHARGE.MAX = FB.ACC<6>/100
                  END
                  GOSUB UPDATE.ACC.RECORD
               END
            END

         REPEAT
      END
      RETURN

*********************************************
BUILD.OLA:
***********************************************
      CMD = 'SSELECT CLEAN.ROUTE'
      EXECUTE CMD CAPTURING STUFF RETURNING JUNK
      IF @SELECTED GT 0 THEN
         EOJ3= 0
         LOOP
            READNEXT CR.ID ELSE EOJ3 =1
         UNTIL EOJ3 DO
            READ CR.DATA FROM F.ROUTE,CR.ID THEN
               GOSUB INIT.VAR
               ROUTE.ZIP = FIELD(CR.ID,"*",1)
               STATE = FIELD(CR.ID,"*",2)
               DIRECTION = FIELD(CR.ID,"*",3)
               IF DIRECTION = "O" THEN
                  ***        ORIG.ZIP = ROUTE.ZIP
                  ***         DEST.ST = STATE
                  ACC.CNT = DCOUNT(CR.DATA<1>,@VM)
                  FOR I = 1 TO ACC.CNT

                     KEY = CR.DATA<1,I>
                     IF NUM(CR.DATA<2,I>) THEN
                     CHARGE.VALUE = CR.DATA<2,I>/100
                     END
                     IF CHARGE.VALUE = "ASK" THEN
                        CHARGE.TYPE = "PASS"
                        CHARGE.VALUE = ""
                     END
                     IF CHARGE.VALUE = "CWT" THEN
                        CHARGE.TYPE = "PER_CWT"
                        CHARGE.VALUE = ""
                        CHARGE.MAX = CR.DATA<4,I>/10
                        CHARGE.MIN = CR.DATA<3,I>/10
                     END

                     AUTO.APPLY = "N"
                     GOSUB UPDATE.ACC.RECORD
                     CHARGE.VALUE = ""
                     CHARGE.TYPE = ""
                     CHARGE.MAX = ""
                     CHARGE.MIN = ""

                  NEXT I
               END
               IF DIRECTION = "I" THEN
                  ***         DEST.ZIP = ROUTE.ZIP
                  ***         ORIG.ST = STATE
                  ACC.CNT = DCOUNT(CR.DATA<1>,@VM)
                  FOR I = 1 TO ACC.CNT

                     KEY = CR.DATA<1,I>
                  **   DEBUG
                     IF NUM(CR.DATA<2,I>) THEN
                     CHARGE.VALUE = CR.DATA<2,I>/100
                   END
                     IF CHARGE.VALUE = "ASK" THEN
                        CHARGE.TYPE = "PASS"
                        CHARGE.VALUE = ""
                     END
                     IF CHARGE.VALUE = "CWT" THEN
                        CHARGE.TYPE = "PER_CWT"
                        CHARGE.VALUE = ""
                        CHARGE.MAX = CR.DATA<4,I>/10
                        CHARGE.MIN = CR.DATA<3,I>/10
                     END
                     AUTO.APPLY = "N"
                     GOSUB UPDATE.ACC.RECORD
                     CHARGE.VALUE = ""
                     CHARGE.TYPE = ""
                     CHARGE.MAX = ""
                     CHARGE.MIN = ""
                  NEXT I
               END

            END
            EOJ3=1
          ***  CLEARSELECT
         REPEAT
      END
      RETURN
*************************************
UPDATE.ACC.RECORD:
*************************************
      IF ACC.DATA.REC = "" THEN
         GOSUB BUILD.ACC.HEADER
      END
      LINE.REC = "GROSS":TAB:AUTO.APPLY:TAB:CHARGE.MAX:TAB:CHARGE.MIN:TAB:CHARGE.TYPE:TAB:CHARGE.VALUE:TAB:KEY:TAB:LF.MIN:TAB:LF.MAX:TAB:ORIG.COUNTRY:TAB:DEST.COUNTRY
      LINE.REC := TAB:ORIG.ST:TAB:DEST.ST:TAB:ORIG.ZIP:TAB:DEST.ZIP
      ACC.DATA.REC<-1> =LINE.REC
      RETURN

*************************************
BUILD.ACC.HEADER:
*************************************

      ACC.HDR.REC = ""
      ACC.HDR.REC ="APPLIES TO":TAB:"AUTO APPLY":TAB:"CHARGE MAX":TAB:"CHARGE MIN":TAB:"CHARGE TYPE":TAB:"CHARGE VALUE":TAB:"KEY":TAB:"LINEAR FEET MIN"
      ACC.HDR.REC :=TAB:"LINEAR FEET MAX":TAB:"ORIG COUNTRY":TAB:"DEST COUNTRY":TAB:"ORIG STATE/PROV":TAB:"DEST STATE/PROV":TAB:"ORIG POSTAL VALUE":TAB:"DEST POSTAL VALUE"

      ACC.DATA.REC<-1> =ACC.HDR.REC
      RETURN
*************************************
INIT.VAR:
*************************************
      AUTO.APPLY =""
      CHARGE.MAX =""
      CHARGE.MIN =""
      CHARGE.TYPE =""
      CHARGE.VALUE =""
      KEY =""
      LF.MIN =""
      LF.MAX =""
      ORIG.COUNTRY =""
      DEST.COUNTRY =""
      ORIG.ST =""
      DEST.ST =""
      ORIG.ZIP =""
      DEST.ZIP =""

      RETURN
   END
