      SUBROUTINE FB.DISPLAY.PROC.LOG(VIN,VOUT,F.LOG)
***
 UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.DISPLAY.PROC.LOG' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
 CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
* PROGRAM NAME : UPD.LOG
* PROGRAM DESC : Subroutine to Display logging detail from a Log file
*
* PROGRAM AUTH : N.C.G. Pratt.
* PROGRAM DATE : 01/27/2010.
*
* F.LOG REPRESENTS THE FILE WHERE THE LOG INFORMATION IS STORED.  THIS SHOULD
* HAVE BEEN OPENED IN THE CALLING PROGRAM TO INCREASE EFFICIENCY.
*
*************************************************************************************************************************
*** ID.LOGFILE   = VIN<1>   - ID of logfile
*
*** ERRORS       = VOUT<1>
*
** MAINTENANCE **********************************************************************************************************
*
*************************************************************************************************************************

      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         VOUT = "Cant open CLIENTS file"
         RETURN
      END

      CALL GET.USER(TEST.USER)

**      IF TEST.USER NE "NPRATT" THEN RETURN         ; * TEMPORARY WHILST CALLING ROUTINES UNDER CONSTRUCTION 011910

      LOG.HDR.ID  = VIN<1>
      LOG.PROGRAM = FIELD(LOG.HDR.ID,"*",1)
      LOG.CLIENT  = FIELD(LOG.HDR.ID,"*",2)
      LOG.ST.DATE = FIELD(LOG.HDR.ID,"*",3)

      READ CL.REC FROM F.CLIENTS, LOG.CLIENT ELSE
         VOUT = "Cant read CLIENTS record " : LOG.CLIENT
         RETURN         
      END

      CLIENT.NAME = CL.REC<2>

      LOG.HDR.REC = ''
      LOG.DET.REC = ''

      READ LOG.HDR.REC FROM F.LOG, LOG.HDR.ID ELSE
         ERROR = "Cant read log file record ":LOG.HDR.ID
         VOUT = ERROR
         RETURN
      END

      HDR.ST.DATE  = LOG.HDR.REC<1>
      HDR.ST.TIME  = LOG.HDR.REC<2>
      HDR.END.DATE = LOG.HDR.REC<3>
      HDR.END.TIME = LOG.HDR.REC<4>
      HDR.USER     = LOG.HDR.REC<5>
      HDR.CH.NUM   = LOG.HDR.REC<6>

      CRT @(-1)
      CRT @(0,0):"Processing progress "
      CRT

      IF LEN(CLIENT.NAME) GT 40 THEN CLIENT.NAME = CLIENT.NAME[1,40]
      CRT "Progress within program ":LOG.PROGRAM "L#15":"  (":LOG.CLIENT:" ": CLIENT.NAME :")"
      CRT
      CRT "Started on  ":OCONV(HDR.ST.DATE,"D2/"):"  at ":OCONV(HDR.ST.TIME,"MTS")
      CRT
      IF HDR.END.DATE = "" THEN
         PROG.ELAPSED = TIME() - HDR.ST.TIME
         CRT "Running for ":  PROG.ELAPSED :"  Seconds (":OCONV(PROG.ELAPSED,'MTS') : ")"      
      END ELSE
         PROG.ELAPSED = HDR.END.TIME - HDR.ST.TIME
         CRT "Ended   on  ":OCONV(HDR.END.DATE,"D2/"):"  at ":OCONV(HDR.END.TIME,"MTS"):"  (":PROG.ELAPSED "R#6":" Secs.)"
         RESP = \Done in \ : LOG.PROGRAM : \ for (\ : LOG.CLIENT: \ \ : CLIENT.NAME : \)\
***         CALL ELINE(RESP)
***       RETURN
         CRT
      END

      CRT

      N.DET = DCOUNT(LOG.HDR.REC<10>,@VM)
**      FOR IDX = 1 TO N.DET
      FOR IDX = N.DET TO 1 STEP -1
         LOG.SEQ.NO = LOG.HDR.REC<10,IDX>
         LOG.DET.ID = LOG.HDR.ID:"*":LOG.SEQ.NO
         LOG.DET.REC = ''
         READ LOG.DET.REC FROM F.LOG, LOG.DET.ID ELSE
            ERROR<1,-1> = "Cant read log file record ":LOG.DET.ID
            CONTINUE
         END

         DET.ST.DATE  = LOG.DET.REC<1>
         DET.ST.TIME  = LOG.DET.REC<2>
         DET.END.DATE = LOG.DET.REC<3>
         DET.END.TIME = LOG.DET.REC<4>
         DET.PROCESS  = LOG.DET.REC<5>

         DIV.FLAG = TRIM(FIELD(LOG.DET.REC<10>,"=",2))

**IF DET.END.DATE = "" THEN
         CRT " ":LOG.SEQ.NO "R#3":" ":DET.PROCESS[1,40] "L#40" :" (Div. Flag ":DIV.FLAG:")"
         CRT SPACE(8):"Started ":OCONV(HDR.ST.DATE,"D2/"):"  ":OCONV(DET.ST.TIME,"MTS"):"  ":
         IF DET.END.DATE = "" THEN
            PROCESS.ELAPSED = TIME() - DET.ST.TIME
            CRT "Running for ":  PROCESS.ELAPSED :"  Seconds (":OCONV(PROCESS.ELAPSED,'MTS') : ")"      
         END ELSE
            PROCESS.ELAPSED = DET.END.TIME - DET.ST.TIME
            CRT "Ended ":OCONV(DET.END.DATE,"D2/"):"  at ":OCONV(DET.END.TIME,"MTS"):"  (":PROCESS.ELAPSED "R#6":" Secs.)"
         END

         FOR RF = 1 TO 5
            W.DET.REF = LOG.DET.REC<5+RF>
            IF W.DET.REF NE "" THEN
***               CRT SPACE(8):W.DET.REF
            END
         NEXT RF

         CALL ELINE("")

**END
      NEXT IDX

      RETURN
