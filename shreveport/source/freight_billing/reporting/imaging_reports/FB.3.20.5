***********************************************************************
*
*
* PROGRAM TO PROCESS THE PRECENTAGES OF REVENUE EACH AUDITOR REPRESENTS
*
*
* AUTHOR: Jim T. Row & Owen Holman
*
*                           EDIT HISTORY
*                           ------------
*    DATE  : NAME : DESCRIPTION
*  ---------------------------------------------------
* 05/11/95 : JIMR : Project started ...
* 05/12/95 : JimR : Working on formatted output
* 05/15/95 : JimR : Ironing out a few minor bugs.. Adj formatting..etc.
* 05/16/95 : JimR : Adding logistics column, expanding worksheet width
*                 : and some more coool stuf.
* 05/16/95 : JimR : Finished up the program with major help from Owen.
*                 : An cummulitive percentage was also added by Owen
*                 : Still needs a final file name & description.
* 05/16/95 : JimR : Adjusting the total line...
* 05/18/95 : JimR : Started the conversion to Clients instead of
*                 : Carriers...
* CODY HENDERSON -- 22 JANUARY, 1997 - CHANGED LAYOUT OF REPORT
*                 : TO SHOW % OF EDI, OLA, AND REGULAR BILLS.
* 08/16/97 : DRF  : Modified FB.3.20.2 to FB.3.20.5 for Auditor break
*                 : down.
* 08/06/98 : JTR  : Fixed a TERM setting for the New version of Universe
* 04/20/06 : JCW01: Add FB.PROC.DATE.XREF for performance. 
* 05/08/06 : JCW02: CHANGES TO '@SELECTED', 'CLEARSELECT', AND 'STMT<X>'
* 031208 - JMK01 - T080799 - Remove duplicates in FB History Reporting
*                 
***********************************************************************
*
*
$INCLUDE PROG.ADMIN INC_OPTIONS
*
* Initialize variables
*
      COPIES=1
       CARRIERS=0
*
      PROMPT''
      CALL GET.USER(USER.NAME)
      CALL CHANNEL(CH.NUM)
      STATUS=''
      PROG.NAME='FB.3.20.5'
      PROG.DESC='Auditor And Revenue Analysis'
      PACK.NAME='Freight Billing'
      NO.DIV.FLAG=0
       UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.3.20.5' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
       CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
      ERRMSG=''
      REC.COUNT=''
*
* Open files
*
      OPEN '','FBWORK':CH.NUM TO F.WORK ELSE
        EXECUTE 'CREATE-FILE FBWORK':CH.NUM:' 1 1001' PASSLIST CAPTURING OUTPUT
        OPEN '','FBWORK':CH.NUM TO F.WORK ELSE
          CALL OPEN.ABORT('FBWORK':CH.NUM,PROG.NAME)
        END
      END
      OPEN 'DICT','FBWORK':CH.NUM TO F.DICT.WORK ELSE
        CALL OPEN.ABORT('DICT FBWORK':CH.NUM,PROG.NAME)
      END
      OPEN 'FB.BILLS.CRX' TO F.CRX ELSE
        CALL OPEN.ABORT('FB.BILLS.CRX',PROG.NAME)
      END
      OPEN '','CLIENTS' TO F.CLIENTS ELSE
        CALL OPEN.ABORT('CLIENTS',PROG.NAME)
      END
*
* Create work file dictionary items
*
      TEMP=''
      TEMP<1>='S'
      TEMP<2>=3
      TEMP<3>='Carr $'
      TEMP<7>='MR2'
      TEMP<8>=''
      TEMP<9>='R'
      TEMP<10>=10
      WRITE TEMP ON F.DICT.WORK,'CAR.DOL'
      TEMP<3>=''
      TEMP<2>=1 ; WRITE TEMP ON F.DICT.WORK,1
      TEMP<2>=2 ; WRITE TEMP ON F.DICT.WORK,2
      TEMP<2>=5 ; WRITE TEMP ON F.DICT.WORK,5
      TEMP<2>=7 ; WRITE TEMP ON F.DICT.WORK,7
      TEMP<2>=4
      TEMP<3>='Bills'
      TEMP<7>=''
      TEMP<9>='R'
      TEMP<10>=6
      WRITE TEMP ON F.DICT.WORK,'BILLS'
      TEMP='S'
      TEMP<2>=0
      TEMP<3>='Client Name'
      TEMP<8>='TCLIENTS;X;;2'
      TEMP<9>='L'
      TEMP<10>='30'
      WRITE TEMP ON F.DICT.WORK,'CLIENT.NAME'
      TEMP='A'
      TEMP<2>=0
      TEMP<3>='Client'
      TEMP<9>='R'
      TEMP<10>='5'
      WRITE TEMP ON F.DICT.WORK,'CLIENT#'
      TEMP='A'
      TEMP<2>=0
      TEMP<3>='Type'
      TEMP<8>='G1*1'
      TEMP<9>='L'
      TEMP<10>='1'
      WRITE TEMP ON F.DICT.WORK,'TYPE'
*
*  WORK FILE CONSISTS OF ITEMS WITH THE FOLLOWING DETAIL
*  Variable Attribute Description.....................................
*               ID
*                1    Overcharge amount (Discount Var + Overchg Var)
*                2    Logistics Markup - Consulting Variance
*                3    Amout Paid    - Adjusted bill amout
*                4    Bill Count    - Number of bills for client
*                5    BalDueAmt     - Balance Due Amount (PAID)
*                6    BalDueCnt     - Number of Balance dues
*                7    AddDueAmt     - Additional Due Amount (PAID)
*                8    AddDueCnt     - Number of Additional dues
*
*
* Display screen heading
*
30    CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)

*
* Get current period beginning and ending dates
*
100   HELP='Enter the data processed beginning date.'
      CALL GEN.IN(0,5,'Data processed beginning date.  ':DATE()'D2/','DATE',BEG.DATE,0,8,'','',1,-8,5,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='X' THEN STOP
      IF QI='EX' THEN STOP
      IF QI='' THEN BEG.DATE=DATE()
      CRT @(32,5):BEG.DATE'D2/'
*
* Get current period ending date
*
200   HELP='Enter the data processed ending date.'
      CALL GEN.IN(0,7,'Data processed ending date.     ':DATE()'D2/','DATE',END.DATE,0,8,'','',1,-8,7,0,QI,HELP,0,23)
      IF QI='X' THEN GOTO 100
      IF QI='EX' THEN STOP
      IF QI='' THEN END.DATE=DATE()
      IF END.DATE LT BEG.DATE THEN
        CALL ELINE('Invalid ending date.')
        GOTO 200
      END
*
*  Verify date entry range
*
      CRT @(32,7):END.DATE'D2/'
300:  HELP="X=Change. EX=Exit. RETURN=Continue."
      CALL GEN.IN(0,22,'Enter selection please. --','',Q,0,2,'','',0,-2,22,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            CRT @(0,22):@(-3):
            GO 200
         CASE QI='EX'
            STOP
         CASE QI=''
            NULL
         CASE 1
            CALL ELINE('Invalid entry. Must be X, EX, or RETURN.')
            GOTO 300
      END CASE
*
* Start processing
*
400:  TEXT="Processing Date Range - Please Wait ... May Take Several Hours."
      CALL CENTER(TEXT,80)
      CRT @(0,13):@(-3):TEXT
*
* Clear work file
*
*    GOTO JIM

      CLEARFILE F.WORK
*
* Select data for current client
*

*************************************************************************
*
* SELECT CLIENT FILE
*
      TEXT='Selecting Clients.'
      CALL CENTER(TEXT,80)
      CRT @(0,10):TEXT
*
      EXECUTE "SELECT VOC 'FB.BILLS.HIST' *A7" RTNLIST CLIENT.LIST CAPTURING OUTPUT
      ITEMS = @SELECTED
      IF @SELECTED < 1 THEN ; * JCW02
        CALL ELINE('ERROR - No clients on file.')
        STOP
      END
      COUNTER.1=0
      PER=0
      LOOP
        READNEXT CLIENT.ID FROM CLIENT.LIST ELSE CLIENT.ID='DONE'
      UNTIL CLIENT.ID='DONE' DO
        COUNTER.1=COUNTER.1+1
        IF CLIENT.ID='FB.BILLS.HIST' OR CLIENT.ID[1,2]='99' THEN GO SKIP.CLIENT
        READV CLIENT.NAME FROM F.CLIENTS,CLIENT.ID,2 ELSE
          CLIENT.NAME='*** Not On File ***'
        END
          CRT @(0,17):CLIENT.ID:" ":CLIENT.NAME:" - Now selecting freight bills":@(-4):
        CALL PROG.BAR(20,COUNTER.1,ITEMS,PER.1)
        STMT='SSELECT FB.PROC.DATE.XREF,':CLIENT.ID:' WITH DATE >= "':OCONV(BEG.DATE,'D2/'):'" AND WITH DATE <= "':OCONV(END.DATE,'D2/'):'"'          ; * JCW 01
        EXECUTE STMT RTNLIST CAPTURING RESULTS  ; * JCW 01
        IF @SELECTED > 0 THEN  ; * JCW01
          STMT = 'QSELECT FB.PROC.DATE.XREF,':CLIENT.ID  ; * JCW01
          EXECUTE STMT PASSLIST RTNLIST CAPTURING RESULTS  ; * JCW01
        END ELSE  ; * JCW01
          GOTO SKIP.CLIENT  ; * JCW01
        END  ; * JCW01
        OPEN '','FB.BILLS.HIST,':CLIENT.ID TO F.BILLS THEN
          STMT='SELECT FB.BILLS.HIST,':CLIENT.ID
          STMT:=' WITH VERSION = "0"'
          STMT:=' AND WITH 37 GE "':OCONV(BEG.DATE,'D2/'):'"'
          STMT:=' AND WITH 37 LE "':OCONV(END.DATE,'D2/'):'"'
*         STMT:=' SAVING UNIQUE @ID'     ; * JMK01
          EXECUTE STMT PASSLIST RTNLIST BILLS.LIST CAPTURING OUTPUT
          NUM.BILLS = @SELECTED
          CRT @(0,17):CLIENT.ID:" ":CLIENT.NAME:" - Now processing ":NUM.BILLS:" Freight Bills":@(-4):
          COUNTER.2=0
          LOOP
            DONE=0
            READNEXT PRO.ID FROM BILLS.LIST ELSE DONE=1
          UNTIL DONE=1 DO
            COUNTER.2=COUNTER.2+1
            IF NUM.BILLS>0 THEN CALL PROG.BAR(22,COUNTER.2,NUM.BILLS,PER.2)
            CARRIER.ID=FIELD(PRO.ID,'*',1)
            IF CARRIER.ID = "00015" THEN GO SKIP.BILL ; * FedEX
            IF CARRIER.ID = "00365" THEN GO SKIP.BILL ; * DHL
            IF CARRIER.ID = "00041" THEN GO SKIP.BILL ; * UPS
            IF CARRIER.ID = "00143" THEN GO SKIP.BILL ; * Airborne
            READ DBILL FROM F.BILLS,PRO.ID THEN
              BEGIN CASE
                CASE DBILL<88>#''
                  TYPE='E'
                CASE DBILL<70>#'' OR DBILL<57>#''
                  TYPE='O'
                CASE 1
                  TYPE='N'
              END CASE
              AUDITOR.NAME=DBILL<89>
              IF AUDITOR.NAME='' THEN
                 IF TYPE='E' THEN
                    BEGIN CASE
                       CASE CARRIER.ID='00015'
                          AUDITOR.NAME='EDI - FedEx'
                       CASE CARRIER.ID='00365'
                          AUDITOR.NAME='EDI - DHL'
                    END CASE
                 END
              END
*OH              IF AUDITOR.NAME='' THEN AUDITOR.NAME=CLIENT.ID
              IF AUDITOR.NAME='' THEN GO SKIP.BILL ; * Not a vaild bill to include
*
              WORK.ID=AUDITOR.NAME:'*ALL'
              READ WORK.REC FROM F.WORK,WORK.ID ELSE WORK.REC=''
*
              WORK.ID.DET=AUDITOR.NAME:'*':TYPE
              READ WORK.REC.DET FROM F.WORK,WORK.ID.DET ELSE WORK.REC.DET=''
*
              TOT.WORK.ID='TOTAL*ALL'
              READ TOT.WORK.REC FROM F.WORK,TOT.WORK.ID ELSE
                TOT.WORK.REC=''
              END
*
              TOT.WORK.ID.DET='TOTAL*':TYPE
              READ TOT.WORK.REC.DET FROM F.WORK,TOT.WORK.ID.DET ELSE
                TOT.WORK.REC.DET=''
              END
*
* Update carrier total record in work file
*
              PRO=FIELD(PRO.ID,'*',2)
              START=LEN(PRO)-1
              BEGIN CASE
                *
                * Balance Due
                *
                CASE PRO[START,2]='BD'
                  ATT=5 ; VALUE=DBILL<8> ; GOSUB 8000 ; * Amount pd/due
                  ATT=6 ; VALUE=1 ; GOSUB 8000 ; * Inc bill count
                *
                * Amount Due (paid)
                *
                CASE PRO[START,2]='AD'
                  ATT=7 ; VALUE=DBILL<8> ; GOSUB 8000 ; * Amount pd/due
                  ATT=8 ; VALUE=1 ; GOSUB 8000 ; * Inc bill count
                *
                * Amount Billed & Paid
                *
                CASE 1
                  ATT=1 ; VALUE=DBILL<10>+DBILL<11> ; GOSUB 8000 ; * Discount+Overcharge
                  ATT=2 ; VALUE=DBILL<12> ; GOSUB 8000 ; * Logistics
                  ATT=3 ; VALUE=DBILL<8> ; GOSUB 8000 ; * Amount paid
                  ATT=4 ; VALUE=1 ; GOSUB 8000 ; * Inc Bill Count
              END CASE

*
* Update totals
*
              WRITE WORK.REC ON F.WORK,WORK.ID
              WRITE WORK.REC.DET ON F.WORK,WORK.ID.DET
              WRITE TOT.WORK.REC ON F.WORK,TOT.WORK.ID
              WRITE TOT.WORK.REC.DET ON F.WORK,TOT.WORK.ID.DET
            END
SKIP.BILL:***
          REPEAT
        END
SKIP.CLIENT:***
      REPEAT
*************************************************************************
JIM:

*
* Print report
*
* Set-up printer
*
      WIDTH=150
      EXECUTE "TERM ,,,,,,":WIDTH:",84"
      CTR=INT(WIDTH/2)
**************************************************************
ESC=CHAR(27)
*WIDTH=175
*CTR=77
*CALL FB.LASER.SET('S',WIDTH,64,8)
LASER.STR=''
LASER.STR:= ESC:'E'
LASER.STR:= ESC:'&l0O' ; * Portrait
LASER.STR:= ESC:'&l8D'
LASER.STR:= ESC:'&l88F' ; ** 88 Lines on a Page
LASER.STR:= ESC:'(8U'
LASER.STR:= ESC:'(s0p'
LASER.STR:= '19h'
LASER.STR:= '0s'
LASER.STR:= '0b'
LASER.STR:= '4102T'
**************************************************************
*     EXECUTE 'SP-ASSIGN F15,':COPIES ; * Default to IBM 4039-16L+ Laser
      PRINTER ON
*OH       LASER = ''
*OH       LASER<1 >= 0                           ;* Portrait
*OH       LASER<2 >= 6                           ;* Lines per inch
*OH       LASER<3 >= 61                          ;* Page length
*OH       LASER<4 >= 16.7                        ;* Characters per inch
*OH       LASER<5 >= 0
*OH       LASER<6 >= 0
*OH       LASER<7 >= 1
*OH       LASER<8 >= 0
*OH       MARGIN = 0
*OH       PRINT ESC:"E"
*OH       PRINT ESC:"&l":LASER<1>:"O":           ;* Set portrait
*OH       PRINT ESC:"&l":LASER<2>:"D":           ;* Lines per inch
*OH       PRINT ESC:"&l":LASER<3>:"F":           ;* Page length
*OH       PRINT ESC:"(s":LASER<4>:"h":           ;* Set pitch
*OH       PRINT LASER<5>:"p":                    ;* Proportional printing
*OH       PRINT LASER<6>:"s":                    ;* Italics off
*OH       PRINT "0T":                            ;* Line Printer Font
*OH       PRINT ESC:"&l":LASER<7>:"H"            ;* Bin selection
*OH       PRINT ESC:"&a":MARGIN:"L"
*OH       PRINT ESC:'"g':LASER<8>:'F'                      ;* Paper output
      PRINT LASER.STR ; * Configure Laser Printer
*
** Get next division code
*
*
*
      L.TAB=CTR-(LEN(PROG.DESC)/2)
      L.TAB=L.TAB-LEN(PROG.NAME)
      TEMP=PROG.NAME:SPACE(L.TAB):PROG.DESC
      R.TAB=WIDTH-LEN(TEMP)
      R.TAB=R.TAB-LEN(TIMEDATE())
      HEAD1=PROG.NAME:SPACE(L.TAB):PROG.DESC:SPACE(R.TAB):TIMEDATE():"'L'"
*
      TITLE='Bills processed from ':BEG.DATE'D2/':' to ':END.DATE'D2/'
      L.TAB=CTR-(LEN(TITLE)/2)
      L.TAB=L.TAB-LEN(CO.NAME)
      TEMP=CO.NAME:SPACE(L.TAB):TITLE
*     R.TAB=(WIDTH-LEN(TEMP))-9
*     HEAD2=TEMP:SPACE(R.TAB):"PAGE 'PL'"
      R.TAB=(WIDTH-LEN(TEMP))-20
      HEAD2=TEMP:SPACE(R.TAB):USER.NAME'L(#10 )':"PAGE 'PL'"
      HEAD3="Excluding all bills for: Airborne, FedEx, DHL, & UPS'CLL'"
*
      HEAD4=""
      HEAD5=STR('-',WIDTH):"'L'"
*
      HEAD6=SPACE(1):'  % of''L#8'
      HEAD7=SPACE(1):' Revenue''L#8'
*
      HEAD6:=SPACE(1):'Auditor Name''L#30'
      HEAD7:=SPACE(1):' ''L#30'
*
      HEAD6:='Type''L#4'
      HEAD7:=' ''L#4'
*
      HEAD6:=SPACE(1):'    Num ''L#9'
      HEAD7:=SPACE(1):'   Bills ''L#9'
*
      HEAD6:=SPACE(1):' % Of''L#6'
      HEAD7:=SPACE(1):' Bills''L#6'
*
      HEAD6:=SPACE(1):'Cumml''L#6'
      HEAD7:=SPACE(1):'  %''L#6'
*
      HEAD6:=SPACE(2):'  Amount''R#10'
      HEAD7:=SPACE(2):'   Paid ''R#10'
*
      HEAD6:=SPACE(2):'  OvrChg''R#9'
      HEAD7:=SPACE(2):'  Amount''R#9'
*
      HEAD6:=SPACE(2):'  %''L#6'
      HEAD7:=SPACE(2):'OvrChg''L#6'
*
      HEAD6:=SPACE(2):'  Logist''R#9'
      HEAD7:=SPACE(2):'  Amount''R#9'
*
      HEAD6:=SPACE(2):'  %''L#6'
      HEAD7:=SPACE(2):'Logist''L#6'
*
      HEAD6:=SPACE(2):'  BD  ''R#7'
      HEAD7:=SPACE(2):'Amount''R#7'
*
      HEAD6:=SPACE(2):' BD''L#5'
      HEAD7:=SPACE(2):'Bills''L#5'
*
      HEAD6:=SPACE(2):'  AD  ''R#7'
      HEAD7:=SPACE(2):'Amount''R#7'
*
      HEAD6:=SPACE(2):' AD  ''L#5'
      HEAD7:=SPACE(2):'Bills''L#5'
*
*     HEAD6:=SPACE(2):'Bill'
*     HEAD7:=SPACE(2):'Type'
*

      HEAD6:="'L'"
      HEAD7:="'L'"
*
      HEAD8=STR('-',WIDTH):"'L'"
*
      HED=HEAD1:HEAD2:HEAD3:HEAD4:HEAD5:HEAD6:HEAD7:HEAD8
      HEADING HED
*     PAGE 0
*
** Select data
*
      COUNTER=0
      SUB4=0
      PREC='SSELECT FBWORK':CH.NUM
      PREC:=' BY-DSND BILLS'
      PREC:=' BY-DSND CAR.DOL'
      PREC:=' BY-DSND 1'
      PREC:=' BY-DSND 2'
      PREC:=' BY-DSND 5'
      PREC:=' BY-DSND 7'
      PREC:=' WITH TYPE = "ALL"'
      EXECUTE PREC PASSLIST CAPTURING OUTPUT
      READ TOTAL.REC FROM F.WORK,'TOTAL*ALL' ELSE
        TOTAL.REC=''
      END
      ORIG.TOT.REC=TOTAL.REC
*
      DONE = 0
      LOOP
        READNEXT TEMP ELSE DONE = 1
        ID=FIELD(TEMP,'*',1)
      UNTIL DONE = 1 DO
        IF ID='TOTAL' ELSE
          IF NUM(ID) THEN
            READV CLIENT.NAME FROM F.CLIENTS, ID,2 ELSE
             CLIENT.NAME=" ** Not On File **"
            END
            AUDITOR.NAME="'":ID:"' ":CLIENT.NAME
          END ELSE
            AUDITOR.NAME=ID
          END
          IF AUDITOR.NAME='NOF' THEN AUDITOR.NAME='Not On File'
          ORIG.ID=ID
          REC.COUNT=0
          READ CL.TOT.REC FROM F.WORK,ID:'*ALL' ELSE CL.TOT.REC=''
          READ EDI.REC FROM F.WORK,ID:'*E' THEN
            REC.COUNT+=1
          END ELSE
            EDI.REC=''
          END
          READ OLA.REC FROM F.WORK,ID:'*O' THEN
            REC.COUNT+=1
          END ELSE
            OLA.REC=''
          END
          READ REG.REC FROM F.WORK,ID:'*N' THEN
            REC.COUNT+=1
          END ELSE
            REG.REC=''
          END
          IF REC.COUNT > 1 THEN
            IF EDI.REC#'' THEN
              REC=EDI.REC
              TOTAL.REC=CL.TOT.REC
              TYPE='E'
              GOSUB BUILD.DET.LINE
              PRINT LINE
            END
            IF OLA.REC#'' THEN
              REC=OLA.REC
              TOTAL.REC=CL.TOT.REC
              TYPE='O'
              GOSUB BUILD.DET.LINE
              PRINT LINE
            END
            IF REG.REC#'' THEN
              REC=REG.REC
              TOTAL.REC=CL.TOT.REC
              TYPE='N'
              GOSUB BUILD.DET.LINE
              PRINT LINE
            END
            PRINT STR('-',WIDTH)
            READ REC FROM F.WORK,ID:'*ALL' THEN
              COUNTER=COUNTER+1
              TYPE='ALL'
              GOSUB BUILD.DET.LINE
              PRINT LINE
              PRINT
            END
          END ELSE
            BEGIN CASE
              CASE EDI.REC#''
                REC=EDI.REC
                TOTAL.REC=ORIG.TOT.REC
                TYPE='E'
              CASE OLA.REC#''
                REC=OLA.REC
                TOTAL.REC=ORIG.TOT.REC
                TYPE='O'
              CASE REG.REC#''
                REC=REG.REC
                TOTAL.REC=ORIG.TOT.REC
                TYPE='N'
            END CASE
            GOSUB BUILD.DET.LINE
            PRINT LINE
            PRINT
          END
        END
      REPEAT
*
** Print total line
*
      IF SYSTEM(4) < 4 THEN PAGE
      PRINT STR('-',WIDTH)
      PRINT
      REC=TOTAL.REC
      AUDITOR.NAME='TOTAL EDI'
      READ TOT.EDI FROM F.WORK,'TOTAL*E' ELSE TOT.EDI=''
      REC=TOT.EDI
      COUNTER=''
      SUB4=0
      TYPE='ALL'
      GOSUB BUILD.DET.LINE
      PRINT LINE
      AUDITOR.NAME='TOTAL ON-LINE AUDIT'
      READ TOT.OLA FROM F.WORK,'TOTAL*O' ELSE TOT.OLA=''
      REC=TOT.OLA
      COUNTER=''
      SUB4=0
      TYPE='ALL'
      GOSUB BUILD.DET.LINE
      PRINT LINE
      AUDITOR.NAME='TOTAL REGULAR'
      READ TOT.REG FROM F.WORK,'TOTAL*N' ELSE TOT.REG=''
      REC=TOT.REG
      COUNTER=''
      SUB4=0
      TYPE='ALL'
      GOSUB BUILD.DET.LINE
      PRINT LINE
      PRINT STR('=',WIDTH)
      AUDITOR.NAME='TOTAL'
      REC=TOTAL.REC
      COUNTER=''
      SUB4=0
      GOSUB BUILD.DET.LINE
      PRINT LINE

*
** END OF APPLICATION'
*
      EXECUTE "TERM ,,,,,,,60"
      STOP


8000 * Update Arrays
      WORK.REC<ATT>        +=VALUE
      WORK.REC.DET<ATT>    +=VALUE
      TOT.WORK.REC<ATT>    +=VALUE
      TOT.WORK.REC.DET<ATT>+=VALUE
      RETURN

BUILD.DET.LINE:***
*     TOTAL.REC=ORIG.TOT.REC
      LINE=''
      *
      * PRECENTAGE OF REVENUE
      *
      IF REC<3>+0=0 THEN VAR=0 ELSE
        VAR=(REC<3>*100/TOTAL.REC<3>)
      END
      LINE:=VAR'R44,#8':' '
      *
      * CARRIER NAME
      *
      LINE:=AUDITOR.NAME'L#30':' '
      *
      * TYPE OF BILL
      *
      BEGIN CASE
        CASE TYPE='E'
          LINE:='EDI '
        CASE TYPE='N'
          LINE:='REG '
        CASE TYPE='O'
          LINE:='OLA '
        CASE TYPE='ALL'
          LINE:='TOT '
        CASE 1
          LINE:='    '
      END CASE
      *
      * BILL COUNT
      *
      LINE:=REC<4>'R04,#9':' '
      *
      * PRECENTAGE OF GROSS BILLS
      *
      IF TOTAL.REC<4>+0=0 THEN VAR=0 ELSE
        VAR=(REC<4>*100/TOTAL.REC<4>)
      END
      LINE:=VAR'R24,#6':' '
      *
      * Accuml %
      *
      TOTAL.REC=ORIG.TOT.REC
      IF TYPE#'ALL' THEN
        SUB4+=REC<4>
      END
      IF TOTAL.REC<4>+0=0 THEN VAR=0 ELSE
        VAR=SUB4*100/TOTAL.REC<4>
      END
      LINE:=VAR'R24,#6':'  '
      *
      * AMMOUNT BILLED
      *
      LINE:=REC<3>'R06,#10':'  '
       *
       * AMOUNT OVER CHARGED
       *
       LINE:=-REC<1>'R06,#9':'  '
       *
       * PERCENTAGE OF OVERCHARGE
       *
       IF REC<3>+0=0 THEN VAR=0 ELSE
        VAR=(-REC<1>)*100/REC<3>
       END
       LINE:=VAR'R24,#6':'  '
       *
       * LOGISTICS MARKUP AMOUNT
       *
       LINE:=-REC<2>'R06,#9':'  '
       *
       * PERCENTAGE OF LOGISTICS
       *
       IF REC<3>+0=0 THEN VAR=0 ELSE
        VAR=(-REC<2>)*100/REC<3>
       END
       LINE:=VAR'R24,#6':'  '
       *
       * BALANCE DUE AMOUNT
       *
       LINE:=REC<5>'R06,#7':'  '
       *
       * BALANCE DUE COUNT
       *
       LINE:=REC<6>'R04,#5':'  '
       *
       * ADDITIONAL DUE
       *
       LINE:=REC<7>'R06,#7':'  '
       *
       * ADDITIONAL DUE COUNT
       *
       LINE:=REC<8>'R04,#5':'  '
       *
       * BILL TYPE
       *
*      LINE:=REC<71>'C':'  '
      RETURN
