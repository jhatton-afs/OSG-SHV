SUBROUTINE REBUILD.BOL.REFNO.XREF.SUB(VIN,VOUT)
*******************************************************
* Program name : REBUILD.BOL.REFNO.XREF.SUB
* Author       : N.C.G Pratt
* Date written : May 2010
* Library      : FBBP
* COPYRIGHT (C) 2016 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED.
*
* Routine to update the BOL Reference number cross reference file
*
* Last updated by afs (AFSLOGISTICS\nmeddaugh) at 09:22:51 on 04/03/2019.
*
* Start modification history
* 04/03/19 : NKH01 : ACCU-316 Modified CREATE-FILE file sizes
* End modification history
*
*******************************************************
$OPTIONS EXEC.EQ.PERF
$OPTIONS INFO.ABORT
$OPTIONS HEADER.EJECT
*
* Initialize variables
*
PROMPT''

PROG.NAME='REBUILD.BOL.REFNO.XREF.SUB'
PROG.DESC='BOL Ref# XREF rebuild'
PACK.NAME='FREIGHT BILLING'

UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'REBUILD.BOL.REFNO.XREF.SUB' ; UPL.VOUT = ''       ;* NPR_UPL 06/07/2010
CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                              ;* NPR_UPL 06/07/2010

CALL GET.USER(USER)

OPEN '','CLIENTS' TO F.CLIENT ELSE CALL OPEN.ABORT("CLIENTS",PROG.NAME)

CALL AFS.SCR.HEAD(CO.ID,FILE.ID,PERIOD,PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)

*
REBUILD.REFNO = VIN<1>
ID.CLIENT     = VIN<2>
ST.DATE       = VIN<3>   ;* May contain start date for records to include in the XREF file.


      READ CLIENT.REC FROM F.CLIENT, ID.CLIENT ELSE
         ERROR  = "Client not on file"
         VOUT = ERROR ; RETURN
      END

      CRT @(0,3):"Client    : " : ID.CLIENT:"  ":CLIENT.REC<2>
      CRT @(0,5):"From Date : " : OCONV(ST.DATE,"D2/")

DATE.FROM :

   IF ST.DATE = "" THEN
      HELP="Enter date from which to start Cross reference. [cr]=ALL available"
      ST.DATE = ICONV("12/31/67","D2/")  
      MASK = "MM/DD/YY"
      CALL GEN.IN(11,5,MASK,'DATE',Q,0,8,'','',0,-8,5,0,QI,HELP,0,23)
      BEGIN CASE
         CASE QI='' OR ST.DATE = 0
            ST.DATE = 0                   ;* The PICK year dot - In the beginning
         CASE 1
            CALL ELINE("Invalid Response")
            GOTO DATE.FROM
      END CASE
      ST.DATE = Q
      CRT @(11,5):OCONV(ST.DATE,"D2/")
   END

   O.ST.DATE     = OCONV(ST.DATE,"D2/") 

OPEN '','FB.BOL.CRX,':ID.CLIENT TO F.BOL.CRX ELSE
   EXECUTE 'CREATE-FILE DATA FB.BOL.CRX,': ID.CLIENT :' 503,1'    ; * NKH01
   OPEN '','FB.BOL.CRX,':ID.CLIENT TO F.BOL.CRX ELSE
      ERROR = 'Cant Open FB.BOL.CRX,':ID.CLIENT
      VOUT = ERROR ; RETURN
   END
END

OPEN '','FB.BOL.REFNO.XREF,':ID.CLIENT TO F.BOL.REFNO.XREF ELSE
   EXECUTE 'CREATE-FILE DATA FB.BOL.REFNO.XREF,': ID.CLIENT :' 503,1'      ; * NKH01
   OPEN '','FB.BOL.REFNO.XREF,':ID.CLIENT TO F.BOL.REFNO.XREF ELSE
      ERROR = 'Cant Open FB.BOL.REFNO.XREF,':ID.CLIENT
      VOUT = ERROR ; RETURN
   END
END

*******************************************************************************************************************************************

HELP = "Clear the BOL Cross Reference file before rebuilding '[Y]es' or '[N]o'"
FLD.DESC = 'Clear the BOL Cross Reference file before rebuilding'
COLX = LEN(FLD.DESC) + 1

CALL GEN.IN(0,22,FLD.DESC,'',Q,0,0,'','',1,COLX,22,0,QI,HELP,0,23)
Q=OCONV(Q,'MCU') 

IF Q = 'Y' THEN
   CLEARFILE F.BOL.REFNO.XREF
   CALL ELINE("BOL Reference number Cross reference file cleared")
END

EOF = "N"
CNT = "0"

IF ST.DATE NE "" THEN
   STMT =  \SELECT FB.BOL.CRX,\ : ID.CLIENT : \ WITH SHIP.DATE GE "\ : O.ST.DATE : \"\
END ELSE
   STMT =  \SELECT FB.BOL.CRX,\ : ID.CLIENT
END
*
EXECUTE STMT CAPTURING OUTPUT
*
LOOP
   READNEXT ID.BOL ELSE EOF = "Y"
   CNT += 1
   CRT @(10,10):CNT "R#6":"  of  ":@SELECTED
UNTIL EOF = "Y" DO
   READ BOL.REC FROM F.BOL.CRX, ID.BOL THEN
      REF.NO1 = BOL.REC<25>
      CALL GET.ROOT.NUMBER(REF.NO1,ID.XREF1)
      REF.NO2 = BOL.REC<42>
      CALL GET.ROOT.NUMBER(REF.NO2,ID.XREF2)
      REF.NO3 = BOL.REC<43>
      CALL GET.ROOT.NUMBER(REF.NO3,ID.XREF3)

      REBUILD.REFNO1 = REBUILD.REFNO<1,1>
      REBUILD.REFNO2 = REBUILD.REFNO<1,2>
      REBUILD.REFNO3 = REBUILD.REFNO<1,3>

      IF ID.XREF1 NE "" AND LEN(ID.XREF1) GT 1 AND REBUILD.REFNO1 = "Y" THEN
         ID.XREF1 = OCONV(ID.XREF1,"MCU")
         CONVERT " " TO "" IN ID.XREF1

         READ XREF.REC1 FROM F.BOL.REFNO.XREF, ID.XREF1 ELSE XREF.REC1 = ""

         LOCATE ID.BOL IN XREF.REC1<1> SETTING XPOS1 ELSE
            XREF.REC1<1,-1> = ID.BOL
            WRITE XREF.REC1 ON F.BOL.REFNO.XREF, ID.XREF1
         END
      END

      IF ID.XREF2 NE "" AND LEN(ID.XREF2) GT 1 AND REBUILD.REFNO2 = "Y" THEN
         ID.XREF2 = OCONV(ID.XREF2,"MCU")
         CONVERT " " TO "" IN ID.XREF2

         READ XREF.REC2 FROM F.BOL.REFNO.XREF, ID.XREF2 ELSE XREF.REC2 = ""

         LOCATE ID.BOL IN XREF.REC2<1> SETTING XPOS2 ELSE
            XREF.REC2<1,-1> = ID.BOL
            WRITE XREF.REC2 ON F.BOL.REFNO.XREF, ID.XREF2
         END
      END

      IF ID.XREF3 NE "" AND LEN(ID.XREF3) GT 1 AND REBUILD.REFNO3 = "Y" THEN
         ID.XREF3 = OCONV(ID.XREF3,"MCU")
         CONVERT " " TO "" IN ID.XREF3

         READ XREF.REC3 FROM F.BOL.REFNO.XREF, ID.XREF3 ELSE XREF.REC3 = ""

         LOCATE ID.BOL IN XREF.REC3<1> SETTING XPOS3 ELSE
            XREF.REC3<1,-1> = ID.BOL
            WRITE XREF.REC3 ON F.BOL.REFNO.XREF, ID.XREF3
         END
      END

***      CRT ID.BOL "L#20":"  ":REF.NO1 "L#20" : " " : REF.NO2 "L#20" : " " : REF.NO3 "L#20"
***      CRT ID.BOL "L#20":"  ":ID.XREF1 "L#20" : " " : ID.XREF2 "L#20" : " " : ID.XREF3 "L#20" : ; INPUT QQ
   END
REPEAT

RETURN
