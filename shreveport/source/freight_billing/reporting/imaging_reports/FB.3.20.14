************************************************************************
* PROGRAM FB.3.20.14
* MISROUTE REVENUE ANALYSIS
*
* FREIGHT BILLING PACKAGE
*
* AUTHOR : Mike Kerbow
* DATE   : DEC 11, 2002
*
* FORMATTING MODS:
* James Barberousse : October 3, 2002
*
* 04/21/06 : JCW01 : Add FB.PROC.DATE.XREF for performance
* 05/08/06 : JCW02 : CHANGES TO '@SELECTED', 'CLEARSELECT', AND 'STMT<X>'
* 031208 - JMK01 - T080799 - Remove duplicates in FB History Reporting
* 081809 - NPR00 - T091057 - Replace Sandra Long with Stacy Rittenbach wherever the former occurs
************************************************************************
*
$INCLUDE PROG.ADMIN INC_OPTIONS
$INCLUDE FILE.DEFS INC_DIVISION.CODES

* Initialize variables

      PROMPT''
      CALL CHANNEL(CH.NUM)
      CALL GET.USER(USER.NAME)
      USER.NAME=OCONV(USER.NAME,'MCU')
      MASK.CHAR='-'
      TAB=CHAR(9)
      ESC=CHAR(27)
      PROG.NAME='FB.3.20.14'
      PROG.DESC='Previous to Current Misroute Analysis'
      PACK.NAME='Freight Billing'

       UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.3.20.14' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
       CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
      CLIENT.ID='' ; CLIENT.NAME=''
      PRV.BEG.DATE=DATE()
      PRV.END.DATE=DATE()
      CUR.BEG.DATE=DATE()
      CUR.END.DATE=DATE()

* Open files

      OPEN '','BCUST' TO F.CLIENT ELSE
         CALL OPEN.ABORT('BCUST',PROG.NAME)
      END

      OPEN '','FB.TABLES' TO F.TABLES ELSE
         CALL OPEN.ABORT('FB.TABLES',PROG.NAME)
      END

      OPEN '','BCTRL' TO F.BCTRL ELSE
         CALL READ.ABORT('BCTRL',PROG.NAME)
      END

      OPEN '','FBWORK':CH.NUM TO F.WORK ELSE
         EXECUTE 'CREATE-FILE FBWORK':CH.NUM:' 1 1001' PASSLIST CAPTURING OUTPUT
         OPEN '','FBWORK':CH.NUM TO F.WORK ELSE
            CALL OPEN.ABORT('FBWORK':CH.NUM,PROG.NAME)
         END
      END
      OPEN '','DICT FBWORK':CH.NUM TO F.DICT.WORK ELSE
         CALL OPEN.ABORT('DICT FBWORK':CH.NUM,PROG.NAME)
      END
      CLEARFILE F.WORK

* Create work file dictionary items

      TEMP=''
      TEMP<1>='S'
      TEMP<2>='1'
      TEMP<7>='MD2'
      TEMP<9>='R'
      TEMP<10>='10'
      WRITE TEMP ON F.DICT.WORK,'PRV.ACT.CHG'
      TEMP<2>='2'
      WRITE TEMP ON F.DICT.WORK,'PRV.MIS.CHG'
      TEMP<2>='3'
      WRITE TEMP ON F.DICT.WORK,'PRV.LCC.CHG'
      TEMP<2>='4'
      WRITE TEMP ON F.DICT.WORK,'CUR.ACT.CHG'
      TEMP<2>='5'
      WRITE TEMP ON F.DICT.WORK,'CUR.MIS.CHG'
      TEMP<2>='6'
      WRITE TEMP ON F.DICT.WORK,'CUR.LCC.CHG'
      TEMP<2>='0'
      TEMP<7>=''
      TEMP<8>='G1*1'
      TEMP<9>='R'
      TEMP<10>='15'
      WRITE TEMP ON F.DICT.WORK,'PRO'
      TEMP<8>='G0*1'
      TEMP<10>=5
      WRITE TEMP ON F.DICT.WORK,'CARRIER#'
      TEMP<8,-1>='TCARRIERS;X;;1'
      TEMP<9>='L'
      TEMP<10>=30
      WRITE TEMP ON F.DICT.WORK,'CARRIER.NAME'

*  WORK FILE CONSISTS OF ITEMS WITH THE FOLLOWING DETAIL
*    ATTRIBUTE   DESCRIPTION
*  Variable Attribute Description.....................................
*               ID    Carrier.Number*Pro*Version
*
*               1     1-Minimum shipment, 2-Normal Shipment
*               2     I-Inbound, O-Outbound, T-Third Party

* Read files and initialize variables

      READ PRINTER.REC FROM F.TABLES,'PRINTERS' ELSE
         CALL READ.ABORT('FB.TABLES','PRINTERS',PROG.NAME)
      END
      NUM.PRINTERS=DCOUNT(PRINTER.REC,@AM)

      * If user is a manager, give access to all managers' printers
*NPR01      IF INDEX('BRIAN*KAREN*OWEN*CHRIS*DEBBIE*AMY*SANDRA*CGOSS',USER.NAME,1) THEN
      IF INDEX('BRIAN*KAREN*OWEN*CHRIS*DEBBIE*AMY*SRITTENBACH*CBEASLEY*CGOSS',USER.NAME,1) THEN   ;*NPR01
         FOR X=1 TO NUM.PRINTERS
            PRINTER.REC<X,5>=1           ; * access value is 5
         NEXT X
      END

      * Setup printer list for POP.UP.LIST call if user does not want default
      PRINTER.LIST=''
      PRINTER.INDEX=''
      COUNTER=0
      FOR X=1 TO NUM.PRINTERS
         IF PRINTER.REC<X,5> THEN
            COUNTER+=1
            PRINTER.LIST<COUNTER>=SPACE(1):PRINTER.REC<X,1>'L#30':SPACE(3):PRINTER.REC<X,2>'L#45'
            PRINTER.INDEX<COUNTER>=X
         END
      NEXT X

      * Setup default printer
      READ BCTRL.REC FROM F.BCTRL,USER.NAME ELSE
         CALL READ.ABORT('BCTRL',USER.NAME,PROG.NAME)
      END
      USER.DEPARTMENT=BCTRL.REC<15>
      BEGIN CASE
         CASE USER.DEPARTMENT='AC'
            SELECTED.PRINTER.NAME=PRINTER.REC<9,1>:'-':TRIM(FIELD(PRINTER.REC<9,2>,'-',2))
            SELECTED.PRINTER.PATH=PRINTER.REC<9,3>
         CASE USER.DEPARTMENT='AU'
            SELECTED.PRINTER.NAME=PRINTER.REC<8,1>:'-':TRIM(FIELD(PRINTER.REC<8,2>,'-',2))
            SELECTED.PRINTER.PATH=PRINTER.REC<8,3>
         CASE USER.DEPARTMENT='FP'
            SELECTED.PRINTER.NAME=PRINTER.REC<6,1>:'-':TRIM(FIELD(PRINTER.REC<6,2>,'-',2))
            SELECTED.PRINTER.PATH=PRINTER.REC<6,3>
         CASE USER.DEPARTMENT='IS'
            SELECTED.PRINTER.NAME=PRINTER.REC<9,1>:'-':TRIM(FIELD(PRINTER.REC<9,2>,'-',2))
            SELECTED.PRINTER.PATH=PRINTER.REC<9,3>
         CASE USER.DEPARTMENT='LG'
            SELECTED.PRINTER.NAME=PRINTER.REC<7,1>:'-':TRIM(FIELD(PRINTER.REC<7,2>,'-',2))
            SELECTED.PRINTER.PATH=PRINTER.REC<7,3>
         CASE USER.DEPARTMENT='SA'
            SELECTED.PRINTER.NAME=PRINTER.REC<9,1>:'-':TRIM(FIELD(PRINTER.REC<9,2>,'-',2))
            SELECTED.PRINTER.PATH=PRINTER.REC<9,3>
         CASE USER.DEPARTMENT='TP'
            SELECTED.PRINTER.NAME=PRINTER.REC<9,1>:'-':TRIM(FIELD(PRINTER.REC<9,2>,'-',2))
            SELECTED.PRINTER.PATH=PRINTER.REC<9,3>
         CASE 1
            SELECTED.PRINTER.NAME=PRINTER.REC<9,1>:'-':TRIM(FIELD(PRINTER.REC<9,2>,'-',2))
            SELECTED.PRINTER.PATH=PRINTER.REC<9,3>
      END CASE

*  Display heading

50:***
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      CRT @(0,2):STR('=',79)

* Prompt 1 : Get client number

100:***
      PAGE.NUM=1
      PROMPT.NUM=1
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=CLIENT.ID:STR(MASK.CHAR,5-LEN(CLIENT.ID))
      HELP='Enter client number or letters of name for search. [X]=Exit [EX]it'
      CALL GEN.IN(18,3,MASK,'',Q,0,20,'','',1,18,3,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' AND CLIENT.ID#'' THEN QI=CLIENT.ID
      BEGIN CASE
         CASE QI='EX'
            GOTO EXIT.PROGRAM
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOSUB DISPLAY.SCREEN
            GOTO EXIT.PROGRAM
         CASE NOT(QI MATCHES '0N')
            CALL SOUNDEX.DISPLAY(QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            BEGIN CASE
               CASE ITEM.LIST=''
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
               CASE ITEM.LIST NE ''
                  IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
            END CASE
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            CRT @(0,2):STR('=',79)
            GOTO 100
         CASE NUM(QI)
            QI=QI'R%5'
         CASE 1
            GOTO 100
      END CASE
      CLIENT.ID=QI
      IF CLIENT.ID[1,2]='99' THEN
         CALL ELINE('Client Number must NOT begin with 99.')
         CLIENT.ID=''
         GOTO 100
      END
      READ CLIENT.REC FROM F.CLIENT,CLIENT.ID ELSE
         CALL ELINE('ERROR - Client ':CLIENT.ID:' not on file.')
         CLIENT.ID=''
         GOTO 100
      END
      IF CLIENT.REC<93>#"Y" THEN
         CALL ELINE('ERROR - Client ':CLIENT.ID:' is not a Logistics client.')
         CLIENT.ID=''
         GOTO 100
      END
      IF CLIENT.REC<94>#"Y" THEN
         CALL ELINE('ERROR - Client ':CLIENT.ID:' does not track misroutes.')
         CLIENT.ID=''
         GOTO 100
      END
      CLIENT.NAME=CLIENT.REC<2>

* Prompt 2 : Get previous analysis period beginning date

200:***
      PAGE.NUM=1
      PROMPT.NUM=2
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=PRV.BEG.DATE'D2-':STR(MASK.CHAR,8-LEN(PRV.BEG.DATE'D2-'))
      HELP='Enter the beginning date for the previous analysis period. [X]=Back [EX]it'
      CALL GEN.IN(18,7,MASK,'DATE',Q,0,8,'','',1,18,7,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' AND PRV.BEG.DATE#'' THEN Q=PRV.BEG.DATE
      BEGIN CASE
         CASE QI='EX'
            GOTO EXIT.PROGRAM
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOTO 100
      END CASE
      PRV.BEG.DATE=Q

* Prompt 3 : * Get previous analysis period ending date

300:***
      PAGE.NUM=1
      PROMPT.NUM=3
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=PRV.END.DATE'D2-':STR(MASK.CHAR,8-LEN(PRV.END.DATE'D2-'))
      HELP='Enter the ending date for the previous analysis period. [X]=Back [EX]it'
      CALL GEN.IN(18,8,MASK,'DATE',Q,0,8,'','',1,18,8,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' AND PRV.END.DATE#'' THEN Q=PRV.END.DATE
      BEGIN CASE
         CASE QI='EX'
            GOTO EXIT.PROGRAM
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOTO 200
      END CASE
      PRV.END.DATE=Q

      IF PRV.END.DATE LT PRV.BEG.DATE THEN
         CALL ELINE('Ending date is before beginning date.')
         GOTO 300
      END

      PREVIOUS.DAYS=PRV.END.DATE-PRV.BEG.DATE

* Prompt 4 : Get current analysis period beginning date

400:***
      PAGE.NUM=1
      PROMPT.NUM=4
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=CUR.BEG.DATE'D2-':STR(MASK.CHAR,8-LEN(CUR.BEG.DATE'D2-'))
      HELP='Enter the beginning date for the current analysis period. [X]=Back [EX]it'
      CALL GEN.IN(18,12,MASK,'DATE',Q,0,8,'','',1,18,12,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' AND CUR.BEG.DATE#'' THEN Q=CUR.BEG.DATE
      BEGIN CASE
         CASE QI='EX'
            GOTO EXIT.PROGRAM
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOTO 300
      END CASE
      CUR.BEG.DATE=Q

      IF CUR.BEG.DATE LE PRV.END.DATE THEN
         CALL ELINE('Warning! This date overlaps the previous period ending date.')
      END

* Prompt 5 : * Get current analysis period ending date

500:***
      PAGE.NUM=1
      PROMPT.NUM=5
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=CUR.END.DATE'D2-':STR(MASK.CHAR,8-LEN(CUR.END.DATE'D2-'))
      HELP='Enter the ending date for the current analysis period. [X]=Back [EX]it'
      CALL GEN.IN(18,13,MASK,'DATE',Q,0,8,'','',1,18,13,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' AND CUR.END.DATE#'' THEN Q=CUR.END.DATE
      BEGIN CASE
         CASE QI='EX'
            GOTO EXIT.PROGRAM
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOTO 400
      END CASE
      CUR.END.DATE=Q

      IF CUR.END.DATE LT CUR.BEG.DATE THEN
         CALL ELINE('Ending date is before beginning date.')
         GOTO 500
      END

      CURRENT.DAYS=CUR.END.DATE-CUR.BEG.DATE

      GOTO 700

* Prompt 6 : Get printer

600:***
      PAGE.NUM=1
      PROMPT.NUM=6
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=SELECTED.PRINTER.NAME
      HELP='Select a printer. [L]ist printers [X]=Back [EX]it'
      CALL GEN.IN(18,15,MASK,'',Q,0,2,'','',2,18,15,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'
            GOTO EXIT.PROGRAM
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOTO 500
         CASE QI='L'
            HEADING='List of Available Network Printers'
            CALL CENTER(HEADING,80)
            HEADING:=SPACE(79-LEN(HEADING))
            SELECTION=''
            CRT @(0,23):'Select a printer. [X]=Back [E]xit List':@(-4):
            CALL POP.UP.LIST(PRINTER.LIST,HEADING,17,20,SELECTION)
            BEGIN CASE
               CASE SELECTION='E'
                  GOTO 600
               CASE SELECTION='X'
                  BACK.FLAG=1
                  DISPLAY<PROMPT.NUM>=0
                  GOSUB DISPLAY.SCREEN
                  GOTO 500
               CASE 1
                  SELECTED.PRINTER.NAME=PRINTER.REC<PRINTER.INDEX<SELECTION>,1>
                  SELECTED.PRINTER.PATH=PRINTER.REC<PRINTER.INDEX<SELECTION>,3>
            END CASE
         CASE QI=''
         CASE 1
            GOTO 600
      END CASE

* Ready to Continue?

700:***
      GOSUB DISPLAY.SCREEN
      HELP='[ENTER]=Continue [X]=Back [EX]it'
      CALL GEN.IN(0,22,'Enter selection : --','',Q,0,2,'','',0,-2,22,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'
            GOTO EXIT.PROGRAM
         CASE QI='X'
            BACK.FLAG=1
            GOTO 500
         CASE QI=''
         CASE 1
            GOTO 700
      END CASE

* Start processing

      TEXT='Selecting bills for client ':CLIENT.ID:' ':CLIENT.NAME:'...'
      CALL CENTER(TEXT,80)
      CRT @(0,18):TEXT:
      CRT@(0,19):

* Select data file

      OPEN '','FB.BILLS.HIST,':CLIENT.ID TO F.BILLS ELSE
         CALL OPEN.ABORT('FB.BILLS.HIST,':CLIENT.ID,PROG.NAME)
      END

      STMT = 'SELECT FB.PROC.DATE.XREF,':CLIENT.ID  ; * JCW01
      STMT = STMT:' WITH DATE >= "':PRV.BEG.DATE'D2/':'" AND WITH DATE <= "':PRV.END.DATE'D2/':'"'  ; * JCW01
      STMT = STMT:' OR'  ; * JCW01
      STMT = STMT:' WITH DATE >= "':CUR.BEG.DATE'D2/':'" AND WITH DATE <= "':CUR.END.DATE'D2/':'"'  ; * JCW01
      EXECUTE STMT RTNLIST CAPTURING MSG ; * JCW01
      IF @SELECTED > 0 THEN  ; * JCW01
        STMT = 'QSELECT FB.PROC.DATE.XREF,':CLIENT.ID  ; * JCW01
        EXECUTE STMT PASSLIST RTNLIST CAPTURING RESULTS  ; * JCW01
      END ELSE  ; * JCW01
*       CLEARSELECT  ; * JCW01 ; * JCW02
        CALL ELINE('** No data present with the selected criteria **') ; * JCW02
        GOTO EXIT.PROGRAM                                              ; * JCW02
      END  ; * JCW01

      PREC='SELECT FB.BILLS.HIST,':CLIENT.ID
      PREC:=' WITH VERSION EQ "0" AND WITH 21 = "1" AND WITH 2 # "T"'
*     PREC:=' SAVING UNIQUE @ID'         ; * JMK01

      EXECUTE PREC PASSLIST RTNLIST CAPTURING OUTPUT
      NUM.ITEMS=@SELECTED
*     IF NUM.ITEMS=0 THEN   ; * JCW02
      IF NUM.ITEMS < 1 THEN ; * JCW02
         CALL ELINE('** No data present with the selected criteria **')
         GOTO EXIT.PROGRAM
      END

      PRV.ACT.CHG.TOT=0
      PRV.MIS.CHG.TOT=0
      PRV.LCC.CHG.TOT=0

      CUR.ACT.CHG.TOT=0
      CUR.MIS.CHG.TOT=0
      CUR.LCC.CHG.TOT=0

* Sum up amounts

800:***
      READNEXT HIST.ID ELSE GOTO 900
      READ HIST.REC FROM F.BILLS,HIST.ID THEN
         IOT=HIST.REC<2>
         IF IOT="T" THEN GO 899
         TRANS.MODE=HIST.REC<21>
         IF TRANS.MODE#"1" THEN GO 899
         ACT.CHG=HIST.REC<8>          ; * Total invoice amount
         MIS.CHG=0
         LCC.CHG=0
         IF HIST.REC<63>+0#0 THEN
            OVRCHG=HIST.REC<8>-HIST.REC<63>
            IF HIST.REC<143>+0=0 THEN
               IF OVRCHG<"0" THEN GO 899
               MIS.CHG=HIST.REC<8>-HIST.REC<63>           ; * Misroute amount
            END ELSE
               LCC.CHG=HIST.REC<8>-HIST.REC<143>  ; * LCC amount
            END
         END
         POST.DT=HIST.REC<37>         ; * Process date
         DA=''
         IF (POST.DT GE PRV.BEG.DATE) AND (POST.DT LE PRV.END.DATE) THEN
            * DA<1>=ACT.CHG
            * DA<2>=LCC.CHG
            PRV.ACT.CHG.TOT=PRV.ACT.CHG.TOT+ACT.CHG
            PRV.MIS.CHG.TOT=PRV.MIS.CHG.TOT+MIS.CHG
            PRV.LCC.CHG.TOT=PRV.LCC.CHG.TOT+LCC.CHG
         END
         IF (POST.DT GE CUR.BEG.DATE) AND (POST.DT LE CUR.END.DATE) THEN
            * DA<3>=ACT.CHG
            * DA<4>=LCC.CHG
            CUR.ACT.CHG.TOT=CUR.ACT.CHG.TOT+ACT.CHG
            CUR.MIS.CHG.TOT=CUR.MIS.CHG.TOT+MIS.CHG
            CUR.LCC.CHG.TOT=CUR.LCC.CHG.TOT+LCC.CHG
         END
         * IF DA NE "" THEN
         *  WRITE DA ON F.WORK,HIST.ID
         * END
      END
899:* GET NEXT RECORD
      GOTO 800

* Calculate percents

900:***
      IF PRV.MIS.CHG.TOT=0 THEN
         PRV.MIS.CHG.PCT=0
      END ELSE
         IF PRV.ACT.CHG.TOT=0 THEN
            PRV.MIS.CHG.PCT='UNDEFINED'
         END ELSE
            PRV.MIS.CHG.PCT=PRV.MIS.CHG.TOT/PRV.ACT.CHG.TOT*10000
         END
      END

      IF PRV.LCC.CHG.TOT=0 THEN
         PRV.LCC.CHG.PCT=0
      END ELSE
         IF PRV.MIS.CHG.TOT=0 THEN
            PRV.LCC.CHG.PCT='UNDEFINED'
         END ELSE
            PRV.LCC.CHG.PCT=PRV.LCC.CHG.TOT/PRV.ACT.CHG.TOT*10000
         END
      END

      IF CUR.MIS.CHG.TOT=0 THEN
         CUR.MIS.CHG.PCT=0
      END ELSE
         IF CUR.ACT.CHG.TOT=0 THEN
            CUR.MIS.CHG.PCT='UNDEFINED'
         END ELSE
            CUR.MIS.CHG.PCT=CUR.MIS.CHG.TOT/CUR.ACT.CHG.TOT*10000
         END
      END

      IF CUR.LCC.CHG.TOT=0 THEN
         CUR.LCC.CHG.PCT=0
      END ELSE
         IF CUR.MIS.CHG.TOT=0 THEN
            CUR.LCC.CHG.PCT='UNDEFINED'
         END ELSE
            CUR.LCC.CHG.PCT=CUR.LCC.CHG.TOT/CUR.ACT.CHG.TOT*10000
         END
      END

      ACT.CHG.VAR=CUR.ACT.CHG.TOT-PRV.ACT.CHG.TOT
      MIS.CHG.VAR=CUR.MIS.CHG.TOT-PRV.MIS.CHG.TOT
      LCC.CHG.VAR=CUR.LCC.CHG.TOT-PRV.LCC.CHG.TOT

      IF CUR.MIS.CHG.PCT#'UNDEFINED' AND PRV.MIS.CHG.PCT#'UNDEFINED' THEN
         MIS.CHG.PCT=(CUR.MIS.CHG.PCT-PRV.MIS.CHG.PCT)/PRV.MIS.CHG.PCT*10000
      END ELSE
         MIS.CHG.PCT='UNDEFINED'
      END

      IF CUR.LCC.CHG.PCT#'UNDEFINED' AND PRV.LCC.CHG.PCT#'UNDEFINED' THEN
         LCC.CHG.PCT=(CUR.LCC.CHG.PCT-PRV.LCC.CHG.PCT)/PRV.LCC.CHG.PCT*10000
      END ELSE
         LCC.CHG.PCT='UNDEFINED'
      END

* Display all data

      OUT1='Previous Period''R#15':SPACE(5):'Current Period''R#15':SPACE(5):'Variance''R#15'
      OUT1=SPACE(79-LEN(OUT1)):OUT1

      OUT2=('From : ':PRV.BEG.DATE'D2/')'R#15':SPACE(5):('From : ':CUR.BEG.DATE'D2/')'R#15'
      OUT2=SPACE(59-LEN(OUT2)):OUT2

      OUT3=('To   : ':PRV.END.DATE'D2/')'R#15':SPACE(5):('To   : ':CUR.END.DATE'D2/')'R#15'
      OUT3=SPACE(59-LEN(OUT3)):OUT3

      OUT4=PRV.ACT.CHG.TOT'R26,#15':SPACE(5):CUR.ACT.CHG.TOT'R26,#15':SPACE(5):ACT.CHG.VAR'R26,#15'
      OUT4='Total Billing     $ :*':OUT4
      OUT4=CHANGE(OUT4,'*',SPACE(80-LEN(OUT4)))

      OUT5=PRV.MIS.CHG.TOT'R26,#15':SPACE(5):CUR.MIS.CHG.TOT'R26,#15':SPACE(5):MIS.CHG.VAR'R26,#15'
      OUT5='Misroute Overpaid $ :*':OUT5
      OUT5=CHANGE(OUT5,'*',SPACE(80-LEN(OUT5)))

      OUT6=PRV.LCC.CHG.TOT'R26,#15':SPACE(5):CUR.LCC.CHG.TOT'R26,#15':SPACE(5):LCC.CHG.VAR'R26,#15'
      OUT6='LCC Overpaid      $ :*':OUT6
      OUT6=CHANGE(OUT6,'*',SPACE(80-LEN(OUT6)))

      OUT7=PRV.MIS.CHG.PCT'R26,#15':'%':SPACE(4):CUR.MIS.CHG.PCT'R26,#15':'%':SPACE(4):MIS.CHG.PCT'R26,#15':'%'
      OUT7='Misroute Overpaid % :*':OUT7
      OUT7=CHANGE(OUT7,'*',SPACE(80-LEN(OUT7)))

      OUT8=PRV.LCC.CHG.PCT'R26,#15':'%':SPACE(4):CUR.LCC.CHG.PCT'R26,#15':'%':SPACE(4):LCC.CHG.PCT'R26,#15':'%'
      OUT8='LCC Overpaid      % :*':OUT8
      OUT8=CHANGE(OUT8,'*',SPACE(80-LEN(OUT8)))

      CRT @(0,4):@(-3)
      CRT @(0, 5):OUT1:
      CRT @(0, 6):OUT2:
      CRT @(0, 7):OUT3:
      CRT @(0, 9):OUT4:
      CRT @(0,10):OUT5:
      CRT @(0,11):OUT6:
      CRT @(0,13):OUT7:
      CRT @(0,14):OUT8:

*  Wait for input

1000:***
      HELP='[ENTER]=Continue [EX]it'
      CALL GEN.IN(0,22,'Enter selection : --','',Q,0,2,'','',0,-2,22,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'
            GOTO EXIT.PROGRAM
         CASE QI=''
            GOTO 50
         CASE 1
            GOTO 1000
      END CASE

********************************************************************************

DISPLAY.SCREEN:***
      CRT @(0,3):@(-3)
      BEGIN CASE
         CASE PAGE.NUM=1
            IF DISPLAY<1> THEN
               CRT @( 0, 3):'Client Number   : ':CLIENT.ID:STR(' ',6-LEN(CLIENT.ID)):CLIENT.NAME
            END
            IF DISPLAY<2> THEN
               CRT @( 0, 5):'Previous Analysis Period'
               CRT @( 0, 6):'--------------------------'
               CRT @( 0, 7):'Beginning Date  : ':PRV.BEG.DATE'D2-'
            END
            IF DISPLAY<3> THEN
               CRT @( 0, 8):'Ending Date     : ':PRV.END.DATE'D2-'
            END
            IF DISPLAY<4> THEN
               CRT @( 0,10):'Current Analysis Period'
               CRT @( 0,11):'--------------------------'
               CRT @( 0,12):'Beginning Date  : ':CUR.BEG.DATE'D2-'
            END
            IF DISPLAY<5> THEN
               CRT @( 0,13):'Ending Date     : ':CUR.END.DATE'D2-'
            END
            IF DISPLAY<6> THEN
               CRT @( 0,15):'Printer         : ':SELECTED.PRINTER.NAME
            END
      END CASE
      RETURN

********************************************************************************

SET.DISPLAY.VARIABLE:***
      NUM.PROMPTS=6
      DISPLAY=''
      FOR X=1 TO NUM.PROMPTS
         DISPLAY<X>=0
      NEXT X
      RETURN

********************************************************************************

EXIT.PROGRAM:***
      CRT @(0,23):@(-4):
      STOP
