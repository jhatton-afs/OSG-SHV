*******************************************************
* Program name : FB.1.12
* Author       : BRIAN M. QUEEN
* Date written : August 5, 1993
* Library      : FBBP
* COPYRIGHT (C) 2016 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED.
*
* PROGRAM TO ENTER OR MODIFY CARRIER TARIFF'S
*
* Last updated by afs (AFSLOGISTICS\nmeddaugh) at 09:22:51 on 03/22/2019.
*
* Start modification history
* 03/22/19 : NKH01 : ACCU-316 Modified CREATE-FILE file sizes
* End modification history
*
*******************************************************
$OPTIONS HEADER.EJECT
      ERRMSG=''
*
$OPTIONS EXEC.EQ.PERF
$OPTIONS INFO.ABORT
*
* Initialize variables
*
      PROMPT''
      PROG.NAME='FB.1.12'
      PROG.DESC="CARRIER TARIFF'S EDITOR"
      PACK.NAME='FREIGHT BILLING'
      CALL CHANNEL(CH.NUM)
       UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.1.12' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
       CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
      CO.NAME='AFS Logistics, LLC'
      CLIENT.ID='' ; CARRIER.ID='' ; CLASS.ID=''
      CLIENT.NAME='' ; CARRIER.NAME=''
      CALC.TYPE='' ; RATE.LINK='' ; MARGIN=0
*
* Open files
*
      OPEN '','CARRIERS' TO F.CARRIERS ELSE CALL OPEN.ABORT("CARRIERS",PROG.NAME)
      OPEN 'DICT','CARRIERS' TO F.DICT ELSE CALL OPEN.ABORT("DICT CARRIERS",PROG.NAME)
      OPEN '','CLIENTS' TO F.CLIENTS ELSE CALL OPEN.ABORT("CLIENTS",PROG.NAME)
      OPEN '','FB.RATES' TO F.RATES ELSE CALL OPEN.ABORT("FB.RATES",PROG.NAME)
      OPEN '','FB.RATES,TYPES' TO F.TYPES ELSE
         EXECUTE 'CREATE-FILE DATA FB.RATES,TYPES 113,1' PASSLIST CAPTURING OUTPUT     ; * NKH01
         OPEN '','FB.RATES,TYPES' TO F.TYPES ELSE CALL OPEN.ABORT("FB.RATES,TYPES",PROG.NAME)
      END
*
* Enter client number
*
100:  GOSUB 8100
      HELP="Enter the client number to setup rates for [X]=Exit [EX]=Exit"
      IF CLIENT.ID='' THEN MASK='#####' ELSE MASK=CLIENT.ID
      CALL GEN.IN(15,2,MASK,'',Q,0,20,'','',2,-5,2,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX' ! QI='X'
            CALL ELINE('ARE YOU SURE YOU WANT TO EXIT')
            INPUT ANSWER
            IF ANSWER = 'Y' THEN STOP
            GO 100
*         STOP
         CASE QI='' & CLIENT.ID=''
            STOP
         CASE QI='' & CLIENT.ID NE ''
            Q=CLIENT.ID
         CASE NOT(QI MATCHES "0N")
            CALL SOUNDEX.DISPLAY(QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            BEGIN CASE
               CASE ITEM.LIST=''
                  GOTO 100
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                  GOTO 100
               CASE ITEM.LIST NE ''
                  IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
                  GOTO 100
            END CASE
         CASE NUM(QI)
            Q=QI'R%5'
         CASE 1
            GOTO 100
      END CASE
*
* Get client name
*
      IF CLIENT.ID NE Q THEN CLIENT.ID=Q'R%5'
      READ CLIENT.REC FROM F.CLIENTS,CLIENT.ID ELSE
         CALL ELINE("ERROR - Client ":CLIENT.ID:" not on file.")
         GOTO 100
      END
      CLIENT.NAME=CLIENT.REC<2>
      CRT @(15,2):CLIENT.ID:' ':CLIENT.NAME:@(-4)
*
* Enter carrier
*
200:  IF CARRIER.ID#'' THEN MASK=CARRIER.ID'R%5' ELSE MASK='#####'
      HELP="Enter the carrier number. [N]=New. [X]=Back. [EX]=Exit."
      CALL GEN.IN(15,3,MASK,'',Q,0,20,'','',2,-5,3,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='N'
            DONE=0
            LOOP
            UNTIL DONE DO
               READVU X FROM F.DICT,'NEXT',1 ELSE X=0
               X=X+1
               WRITEV X ON F.DICT,'NEXT',1
               READ DUMMY FROM F.CARRIERS,X'R%5' ELSE DONE=1
            REPEAT
            Q=X'R%5'
            DATA 'EDIT',Q
            EXECUTE 'FB.1.2'
            GOSUB 8100                   ; * Display screen
         CASE QI='X'
            CRT @(15,3):@(-4):
            GOTO 100
         CASE QI='EX'
            STOP
         CASE NOT(QI MATCHES "0N")
            CALL SOUNDEX.DISPLAY(QI,'CARRIERS','SDX.CARRIER,NAME','1,3,4',ITEM.LIST)
            GOSUB 8100                   ; * Display screen
            BEGIN CASE
               CASE ITEM.LIST=''
                  GOTO 200
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
                  GOTO 200
               CASE ITEM.LIST NE ''
                  IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
                  GOTO 200
            END CASE
         CASE QI=''
            Q=CARRIER.ID
         CASE NUM(QI)
            Q=QI'R%5'
         CASE 1
            GOTO 200
      END CASE
      CARRIER.ID=Q
      CALL CLR.CONTROL(CARRIER.ID)
*
* Get carrier data
*
      READ CARRIER.REC FROM F.CARRIERS,CARRIER.ID ELSE
         CALL ELINE("ERROR - Carrier ":CARRIER.ID:" not on file.")
         GOTO 200
      END
      CARRIER.NAME=CARRIER.REC<1>
      CARRIER.CITY=CARRIER.REC<3>
      CARRIER.STATE=CARRIER.REC<4>
      CRT @(15,3):CARRIER.ID:' ':CARRIER.NAME:' ':CARRIER.CITY:', ':CARRIER.STATE:@(-4):
*
* Get classification
*
300:  IF CLASS.ID#'' THEN MASK=CLASS.ID'L#5' ELSE MASK='#####'
      HELP="Enter freight class. [Enter]=No Class, [space]=Clear. [X]=Back. [EX]=Exit."
      CALL GEN.IN(15,4,MASK,'',Q,0,5,'','',2,-5,4,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=' '
            Q=''
         CASE QI='X'
            CRT @(15,4):SPACE(5):
            GOTO 200
         CASE QI='EX'
            STOP
         CASE QI=''
            Q=CLASS.ID
      END CASE
      CLASS.ID=Q
      CRT @(15,4):CLASS.ID'L#5'
*
* Get tarriff chart
*
      RATE.ID=CLIENT.ID:'*':CARRIER.ID:'*':CLASS.ID
      READ TYPE.REC FROM F.TYPES,RATE.ID ELSE TYPE.REC=''
*
      RATE.LINK=TYPE.REC<1>
      CALC.TYPE=TYPE.REC<2>
      MARGIN=TYPE.REC<3>
      GOSUB 8110                         ; * Display screen
*
* Change calculation type
*
400:  HELP="Enter calculation type. [cr]=Accept. [F]=Flat. [R]=Regular. [X]=Back to class."
      CRT @(0,21):"Flat = Flat Charge for the Shipment":
      CRT @(0,22):"Regular = Charge is calculated, weight (x) rate":
      IF CALC.TYPE='' THEN
         DVAR='-'
         REQ=1
      END ELSE
         DVAR=CALC.TYPE
         REQ=0
      END
      CALL GEN.IN(31,4,DVAR,'',Q,REQ,1,'','',1,31,4,0,QI,HELP,0,23)
      CRT @(0,21):@(-3):
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            Q=CALC.TYPE
         CASE QI='F'
            Q='Flat'
         CASE QI='R'
            Q='Reg'
         CASE QI='X'
            CRT @(31,4):' '
            GOTO 300
         CASE 1
            CALL ELINE('Invalid entry.')
            GOTO 400
      END CASE
      CALC.TYPE=Q
      CRT @(31,4):CALC.TYPE'L#4'
*
* Change link
*
500:  HELP="Enter link to client. [cr]=Accept. [space]=Clear. [X]=Back to class."
      CRT @(0,21):"Enter the 'Master' Client# where the rates are already setup for this carrier"
      CRT @(0,22):"The tables setup under the 'Master' Client will be used for this client":
      CALL GEN.IN(41,4,RATE.LINK'R#5','',Q,0,5,'','',1,-5,4,0,QI,HELP,0,23)
      CRT @(0,21):@(-3):
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            Q=RATE.LINK
         CASE QI=' '
            Q=''
         CASE QI='X'
            CRT @(41,4):'     '
            GOTO 400
         CASE NUM(QI)
            Q=Q'R%5'
         CASE 1
            CALL ELINE('Invalid entry.')
            GOTO 500
      END CASE
      RATE.LINK=Q
      CRT @(41,4):RATE.LINK'R#5'
*
* Change margin of error
*
600:  HELP="Enter allowed charge margin or variance. [cr]=Accept. [X]=Back to calc type."
      CRT @(0,21):"This amount is the maximum charge difference to kick bills out"
      DVAR=MARGIN'R26#5'
      CALL GEN.IN(54,4,DVAR,'AMT2',Q,0,5,'','',1,-5,4,0,QI,HELP,0,23)
      CRT @(0,21):@(-3):
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            Q=MARGIN
         CASE QI='X'
            CRT @(54,4):'      '
            GOTO 500
         CASE NUM(QI)
            NULL
         CASE 1
            CALL ELINE('Invalid entry.')
            GOTO 600
      END CASE
      MARGIN=Q
      CRT @(54,4):MARGIN'R26#5'
*
      IF RATE.LINK NE '' THEN RATE.ID=RATE.LINK:'*':CARRIER.ID:'*':CLASS.ID
      READ RATE.REC FROM F.RATES,RATE.ID ELSE RATE.REC=''
*
      VERT.PAGE=1
      HORT.PAGE=1
      GOSUB 8000                         ; * Display page
*
* Get entry options
*
1000: HELP="Enter line #. [U]=Up [D]=Down [L]=Left [R]=Right [F]=File [X][EX]=Abort"
      CALL GEN.IN(0,22,'Enter option ###','',Q,1,3,'','',0,-3,22,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X' ! QI='EX'
            STOP
         CASE QI='F'
            WRITE RATE.REC ON F.RATES,RATE.ID
            TYPE.REC=''
            TYPE.REC<1>=RATE.LINK
            TYPE.REC<2>=CALC.TYPE
            TYPE.REC<3>=MARGIN
            WRITE TYPE.REC ON F.TYPES,RATE.ID
            GOTO 100
         CASE QI='U'
            VERT.PAGE=VERT.PAGE-1
            IF VERT.PAGE=0 THEN VERT.PAGE=1
            GOSUB 8000
         CASE QI='D'
            VERT.PAGE=VERT.PAGE+1
            GOSUB 8000
         CASE QI='L'
            HORT.PAGE=HORT.PAGE-1
            IF HORT.PAGE=0 THEN HORT.PAGE=1
            GOSUB 8000
         CASE QI='R'
            HORT.PAGE=HORT.PAGE+1
            GOSUB 8000
         CASE QI GE VERT.START & QI LE VERT.STOP
            VERT.POS=QI
            HORT.POS=HORT.START
            ROW=QI
            LOOP
            UNTIL ROW LE 15 DO
               ROW=ROW-15
            REPEAT
            ROW=ROW+6
*
            DONE=0
            LOOP
               COL=HORT.POS
               LOOP
               UNTIL COL LE 12 DO
                  COL=COL-1
               REPEAT
               COL=(COL*6)-5
               COL=COL+2
            UNTIL DONE DO
               VAL=RATE.REC<VERT.POS,HORT.POS>
               IF VAL='' THEN VAL='------' ELSE VAL=VAL'R#6'
               HELP="Enter value. [cr]=Accept. [space]=Clear. [X]=Back Column"
               CALL GEN.IN(COL,ROW,VAL,'',Q,0,6,'','',1,-6,ROW,0,QI,HELP,0,23)
               QI=OCONV(QI,'MCU')
               BEGIN CASE
                  CASE QI=' '
                     Q=''
                  CASE QI='X'
                     Q=RATE.REC<VERT.POS,HORT.POS>
                     IF HORT.POS LT HORT.START THEN HORT.POS=HORT.START
                  CASE QI=''
                     Q=RATE.REC<VERT.POS,HORT.POS>
               END CASE
               RATE.REC<VERT.POS,HORT.POS>=Q
               CRT @(COL,ROW):RATE.REC<VERT.POS,HORT.POS>'R#6'
               IF QI NE 'X' THEN
                  HORT.POS=HORT.POS+1
               END ELSE
                  HORT.POS=HORT.POS-1
               END
               IF HORT.POS LT HORT.START THEN HORT.POS=HORT.START
               IF HORT.POS GT HORT.STOP THEN DONE=1
               IF RATE.REC<1,HORT.POS> EQ '' THEN
                  IF VERT.POS NE 1 THEN DONE=1
               END
            REPEAT
      END CASE
      GOTO 1000
*------------------------------------------------------------------------
*
* INTERNAL SUBROUTINES
*
*------------------------------------------------------------------------
*
* Display page
*
8000: VERT.START=(VERT.PAGE*15)-14
      VERT.STOP=VERT.START+14
      HORT.START=(HORT.PAGE*12)-11
      HORT.STOP=HORT.START+11
      PAGE.ID=HORT.PAGE:'.':VERT.PAGE
      CRT @(0,6):@(-3)
      LN='   '
      FOR HORT.POS=HORT.START TO HORT.STOP
         LN=LN:HORT.POS'R#6'
      NEXT HORT.POS
      CRT @(0,6):LN
*
      ROW=6
      FOR VERT.POS=VERT.START TO VERT.STOP
         ROW=ROW+1
         LN=VERT.POS'R#3'
         FOR HORT.POS=HORT.START TO HORT.STOP
            LN=LN:RATE.REC<VERT.POS,HORT.POS>'R#6'
         NEXT HORT.POS
         CRT @(0,ROW):LN
      NEXT VERT.POS
      X=71-LEN(PAGE.ID)
      CRT @(X,4):'Page ID ':PAGE.ID
      RETURN
*
* Display screen heading
*
8100: CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      CRT @(0,2):'Client number  ':CLIENT.ID:' ':CLIENT.NAME:@(-4)
      CRT @(0,3):'Carrier number ':CARRIER.ID:' ':CARRIER.NAME:@(-4):
8110: CRT @(0,4):'Classification ':CLASS.ID'L#5':' Calculate ':CALC.TYPE'L#4':' Link ':RATE.LINK'R#5':' Margin ':MARGIN'R26#5'
      CRT @(0,5):STR('-',79)
      RETURN
