*********************************************************************
*  AUTHOR: Owen Holman
*    DATE: April 03, 2002 - Allow user to Rerate External SS
*  REVISIONS:
* Instructions to create file
*  Get an Excel file save as U:\-USER-\00000-DELETE.txt
*    where 00000 is the client number
*    '-DELETE' is a literal
*    and .txt is the Formatted Text TAB Delmited option
*
* 011911 - NPR01 - Copied from RERATE.SS for new spreadshet from Scott Matthews.
********************************************************************
*
$INCLUDE PROG.ADMIN INC_OPTIONS
* INITIALIZE VARIABLES
*
      SEQ=0
      PROMPT''
      CALL GET.USER(USER)
*
********************************************************************
*
*  TABLE TO CHANGE FIELD NUMBERS (VALUES) OF DATA
*
********************************************************************
*
* ASK FOR CLIENT
*
      PROG.NAME='UPDATE.TS.RERATE'
      PROG.DESC="Submit Freight Information for Charges"
      PACK.NAME="Logistics"

      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'UPDATE.TS.RERATE' ; UPL.VOUT = ''         ; * NPR_UPL 04/23/2010
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)       ; * NPR_UPL 04/23/2010
      CALL AFS.SCR.HEAD(CO.ID, FILE.ID, '', PROG.NAME, PROG.DESC, PACK.NAME, CO.NAME, TIME.DATE, 1)
      DEFICIT.ARRAY='500ý1000ý2000ý5000ý10000'
      BEGIN CASE
         CASE USER='BRIAN'
         CASE USER='KAREN'
         CASE USER='OWEN'
         CASE USER='SMATTHEWS'
         CASE USER='MKERBOW'
         CASE USER='DAVID'
         CASE USER='NPRATT'
         CASE USER='PBASS'
         CASE USER='TWOODRUFF'
         CASE USER='GSHAFER'

         CASE USER='BJEPPSON'
**         CASE USER='SSAEFER'
         CASE USER='SSHAFER'

         CASE USER='SWINSTEAD'
         CASE USER='SSELMAN'
         CASE USER='DOURSLER'
         CASE USER='GCASSADA'
         CASE USER='DONNA'
         CASE USER='AMY'
         CASE USER='KRISTY'
         CASE USER='AHICKS'  ; * TICKET 3092 - DRF 07/06/12
         CASE USER='RBOEHNLEIN' ; * Ticket 5457 - DRF 03/18/13

         CASE 1
            CALL ELINE('Authorized Access is Required.')
            GO EXIT.PROGRAM
      END CASE

      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         CALL OPEN.ABORT("CLIENTS",PROG.NAME)
      END
      OPEN '','VOC' TO F.VOC ELSE
         CALL OPEN.ABORT("VOC",PROG.NAME)
      END
      CLIENT='79999'
      READV CLIENT.NAME FROM F.CLIENTS,CLIENT,2 ELSE
         CALL ELINE('Client#: ':CLIENT:' is not on file!')
         GO EXIT.PROGRAM
      END
      CRT @(26,3):"- ":CLIENT.NAME:@(-4):
      OPEN '','FB.BILLS.HIST,':CLIENT TO F.HIST ELSE
         CALL OPEN.ABORT("FB.BILLS.HIST,":CLIENT,PROG.NAME)
         GO EXIT.PROGRAM
      END
      OPEN '','FB.BILLS,':CLIENT TO F.BILLS ELSE
         CALL OPEN.ABORT("FB.BILLS,":CLIENT,PROG.NAME)
         GO EXIT.PROGRAM
      END


10:   *
      CRT @(0,03):@(-3):
      CRT @(0,05):'Instructions for use BEFORE Continuing:'
      CRT @(0,06):' 1 Using Excel, Open your Spreadsheet;'
      CRT @(0,07):' 2 Adjust the columns and headings so that you :'
      CRT @(0,08):'    Include a column labeled "Error",'
      CRT @(0,09):'    Include a column labeled "Client #" and "Carrier #" Carrier may be "ALL",'
      CRT @(0,10):'    Include a column labeled "IOT" for "I"n/"O"utbound or TP,'
      CRT @(0,11):'    Include a Origin Zip column and label it "Origin Zip",'
      CRT @(0,12):'    Include a Destination Zip column and label it "Dest Zip",'
      CRT @(0,13):'    Include a date column labeled "Bill Date",'
      CRT @(0,14):'    Include Freight Class column/s labeled "Class n" .. Class 1, Class 2 etc.,'
      CRT @(0,15):'    Include Weight column/s labeled "Weight n" .. Weight 1, Weight 2 etc.,'
      CRT @(0,16):'    Repeat the two columns above for all needed classes and weights.'
      CRT @(0,17):'    Include accesorial code columns if required, labeled Code 1, Code 2 etc. ,'
      CRT @(0,18):" 3  Select your U:\" : USER : " drive and save your file as follows : "
      CRT @(0,19):"    In the Excel Menu Bar, CLICK File, CLICK Save As, 'Change Save as type:' to:"
      CRT @(0,20):'    Text (Tab Delimited)(*.txt).'
      CRT @(0,21):"    Ignore the 'Not Compatible' messages you receive and click OK, then YES."

100:  HELP='Enter the File Name to process or [EX]it'
      CALL GEN.IN(0,3,'Enter File Name #########################','',Q,0,25,'','',1,-25,3,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')

      BEGIN CASE
         CASE QI='' ! QI='EX' ! QI='X'
            GOTO EXIT.PROGRAM
         CASE 1
            RAW.ID=QI
      END CASE

*
* OPEN FILE
*
      READ BILLDATA.REC FROM F.VOC,"BILLDATA" ELSE
         GOSUB CALL.NET.ADMIN
         CALL ELINE('UNABLE TO OPEN "VOC BILLDATA"')
         STOP
      END

      BILLDATA.REC<2>:='\':USER
      WRITE BILLDATA.REC ON F.VOC,"BILLDATA.":USER ELSE
         CALL ELINE('UNABLE TO WRITE VOC "BILLDATA.":USER')
         GOSUB CALL.NET.ADMIN
         STOP
      END
      OPEN '','BILLDATA.':USER TO F.BILLDATA ELSE
         CALL ELINE(USER:" is not a folder in U:\Billdata. Add the folder and try again")
         GOSUB CALL.NET.ADMIN
         STOP
      END

*
* READ RAW.DATA
*
      READ RAW.DATA FROM F.BILLDATA,RAW.ID ELSE
         CALL ELINE('U:\':USER:'\':RAW.ID:' is not on file.  Please re-enter.')
         GOTO 100
      END
      RAW.DATA=CHANGE(RAW.DATA,CHAR(9),@VM)        ; * Replace Tabs with Values
*
* GET INFO AND WRITE TO FILE
*
* Verify selection criteria is correct.
*
VERIFY.SELECTION:***
      HELP="X=Change. EX=Exit. ''=Continue."
      CALL GEN.IN(0,22,'Enter selection please. ------------','',Q,0,12,'','',0,-12,22,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            CRT @(0,19):@(-3):
            GOTO 100
         CASE QI='EX'
            STOP
         CASE QI=''
            NULL
         CASE 1
            CALL ELINE('Invalid entry. Must be [X], [EX], or <RTN>.')
            GOTO VERIFY.SELECTION
      END CASE
      CRT @(0,22)

      NATT=DCOUNT(RAW.DATA,@AM)
      FOR ATT=1 TO NATT
         CALL PROG.BAR(22,ATT,NATT,APER)
         IF ATT>1 THEN
            TS.CLIENT.ID=RAW.DATA<ATT,11>
            OPEN '','FB.BILLS,':TS.CLIENT.ID TO F.TS.BILLS ELSE
               CALL OPEN.ABORT('FB.BILLS.HIST,':TS.CLIENT.ID,PROG.NAME)
            END
            OPEN '','FB.BILLS.HIST,':TS.CLIENT.ID TO F.TS.BILLS.HIST ELSE
               CALL OPEN.ABORT('FB.BILLS.HIST,':TS.CLIENT.ID,PROG.NAME)
            END
            CARRIER.ID=RAW.DATA<ATT,3>'R%5'
            WGT=RAW.DATA<ATT,9>
            PRO=RAW.DATA<ATT,10>
            FRT.AMT=ICONV(RAW.DATA<ATT,14>,'MR2')
            FSC.AMT=ICONV(RAW.DATA<ATT,15>,'MR2')
            ACC.AMT=ICONV(RAW.DATA<ATT,16>,'MR2')
            LOG.AMT=ICONV(RAW.DATA<ATT,17>,'MR2')
            TOT.AMT=ICONV(RAW.DATA<ATT,18>,'MR2')
            BILL.TYPE=RAW.DATA<ATT,19>
            BILL.ID=CARRIER.ID:'*':PRO:'*0'
            READ BILL.REC FROM F.TS.BILLS,BILL.ID THEN
               BILL.ORG=BILL.REC
               BILL.REC<7>=TOT.AMT
               BILL.REC<8>=TOT.AMT
               CWT=ICONV(FRT.AMT/WGT,'MR2')
               IF BILL.TYPE='DEFICIT' THEN
                  LOCATE WGT IN DEFICIT.ARRAY BY 'AR' SETTING DEFPOS ELSE DEFPOS+=1
                  DEF.WGT=DEFICIT.ARRAY<1,DEFPOS>-WGT
                  CWT=ICONV(FRT.AMT/(WGT+DEF.WGT),'MR2')
                  ORG.AMT=FRT.AMT
                  FRT.AMT=ICONV((WGT*CWT/100),'MR0')
                  DEF.AMT=ORG.AMT-FRT.AMT
               END
               LOCATE 'FRT' IN BILL.REC<70> SETTING FPOS THEN
                  BILL.REC<76,FPOS>=CWT
                  BILL.REC<77,FPOS>=FRT.AMT
               END
               LOCATE 'FSC' IN BILL.REC<70> SETTING FPOS THEN
                  BILL.REC<77,FPOS>=FSC.AMT
               END
               IF BILL.TYPE='DEFICIT' THEN
                  LOCATE 'DEF' IN BILL.REC<70> SETTING FPOS THEN
                     BILL.REC<76,FPOS>=CWT
                     BILL.REC<77,FPOS>=DEF.AMT
                  END
               END
               IF BILL.REC#BILL.ORG THEN
                  BILL.REC<83>='0'
                  WRITE BILL.REC ON F.TS.BILLS,BILL.ID
                  WRITE BILL.REC ON F.TS.BILLS.HIST,BILL.ID
               END
            END
         END
      NEXT ATT

      CALL ELINE('Press [ENTER] to Continue')
      GO EXIT.PROGRAM
CALL.NET.ADMIN:***
      CALL ELINE("CALL NETWORK ADMINISTRATOR!")
      CALL ELINE("CALL NETWORK ADMINISTRATOR!!!!!")
      RETURN
*
EXIT.PROGRAM:*
*
      STOP
