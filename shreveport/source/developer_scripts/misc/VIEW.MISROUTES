      SUBROUTINE VIEW.MISROUTES(F.VC,F.CARRIERS,F.ZIPS,CLIENT,CLIENT.REC,VC.ID,VC.REC,LOC.POS,USER,F.BILLS.HIST,F.LOGS)
*
 UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'VIEW.MISROUTES' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
 CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
* FREIGHT BILLING PACKAGE
*
* AUTHOR: TAMI SEAGO
* DATE: AUGUST 25, 1999
*
* THIS PROGRAM IS A PROPRIETARY PRODUCT OF AUTOMATED FREIGHT SYSTEMS
* AND MAY NOT BE USED, COPIED OR MODIFIED WITHOUT THE EXPRESS
* WRITTEN CONSENT OF SAME.
*
* 072303 - JMK01 - ADD HISTORICAL INFORMATION FOR PRINTING
* 021904 - JMK02 - ADJUST HISTORICAL PRINTING
* 021904 - JMK03 - PROVIDE FOR DELETING OF MISROUTE ITEMS
* 120110 - NPR01 - T101147 - Amount on detail lines not lining up with the correct Pro No.
****************************************************************
* Initialize variables
****************************************************************
$OPTIONS HEADER.EJECT
$OPTIONS EXEC.EQ.PERF
$OPTIONS INFO.ABORT
      ERRMSG=''
      BEGIN CASE                         ; * JMK03
         CASE USER='BRIAN'   ; DEL.ACCESS=1          ; * JMK03
         CASE USER='KAREN'   ; DEL.ACCESS=1          ; * JMK03
         CASE USER='DAVID'   ; DEL.ACCESS=1          ; * JMK03
         CASE USER='MKERBOW' ; DEL.ACCESS=1          ; * JMK03
         CASE USER='OWEN'    ; DEL.ACCESS=1          ; * JMK03
         CASE USER='KRISTY'  ; DEL.ACCESS=1          ; * JMK03
         CASE 1 ; DEL.ACCESS=0           ; * JMK03
      END CASE                           ; * JMK03
      DM.DAYS=13                         ; * JMK03
      LTR2.DAYS=6                        ; * JMK03

      PROMPT''
*NPR01      PROG.NAME=''
      PROG.NAME='VIEW.MISROUTES'                           ;* NPR01
      PROG.DESC='VENDOR CUSTOMER LOCATION MAINTANANCE'
      PACK.NAME='FREIGHT BILLING'
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      GOSUB INITIALIZE.VARIABLES

ENTER.LINE:***
*
* First page of codes
*
      PAGE=1
      GOSUB DISPLAY.DATA

*
* Enter selection code
*
100:  HELP="Line # [B]ack [T]op [N]ext Re[P]rint [C]onf [X]Back [EX]it"
      IF DEL.ACCESS THEN                 ; * JMK03
         HELP:=" [D]el"                  ; * JMK03
      END                                ; * JMK03
      CALL GEN.IN(0,22,"Enter line # of pro to view. ###",'',Q,0,3,'','',1,-3,22,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            PAGE=PAGE+1
            GOSUB DISPLAY.DATA
            GO 100
         CASE QI='B'
            PAGE=PAGE-1
            IF PAGE=0 THEN PAGE=1
            GOSUB DISPLAY.DATA
         CASE QI='T'
            PAGE=1
            GOSUB DISPLAY.DATA
         CASE QI='EX'
            STOP
         CASE QI = 'X'
            RETURN
         CASE QI = 'C'
200:        HELP="Please enter the date of the letter to confirm. [X]Back [EX]it."
            MASK = "Please enter the date. ##/##/##"
            CALL GEN.IN(0,22,MASK,'DATE',Q,0,8,'','',1,-8,22,0,QI,HELP,0,23)
            QI=OCONV(QI,'MCU')
            BEGIN CASE
               CASE QI='EX'
                  STOP
               CASE QI = 'X'
                  RETURN
               CASE NOT(NUM(Q)) OR Q GT DATE() ! Q = ''
                  CALL ELINE('ERROR - Invalid Date.')
                  GO 200
            END CASE
            CONF.DATE = DATE()
            LTR.DATE = Q
            CRT @(23,22):LTR.DATE'D2/'
            NUM.MRTS = DCOUNT(VC.REC<17,LOC.POS>,@SVM)
            POS = 0
            LOCATE LTR.DATE IN VC.REC<17,LOC.POS> SETTING POS ELSE
               CALL ELINE('ERROR - Invalid Date.')
               GO 200
            END
            FOR X = 1 TO NUM.MRTS
               IF VC.REC<17,LOC.POS,X> = LTR.DATE THEN
                  VC.REC<20,LOC.POS,X> = CONF.DATE
               END
            NEXT X
            WRITE VC.REC ON F.VC,VC.ID
            GOSUB DISPLAY.DATA
         CASE QI = 'P'
300:        HELP="Please enter the date of the letter to reprint. [X]Back [EX]it."
            MASK = "Please enter the date. ##/##/##"
            CALL GEN.IN(0,22,MASK,'DATE',Q,0,8,'','',1,-8,22,0,QI,HELP,0,23)
            QI=OCONV(QI,'MCU')
            BEGIN CASE
               CASE QI='EX'
                  STOP
               CASE QI = 'X'
                  RETURN
               CASE NOT(NUM(Q)) OR Q GT DATE() ! Q = ''
                  CALL ELINE('ERROR - Invalid Date.')
                  GO 300
            END CASE
            RPT.DATE = Q
            CRT @(23,22):RPT.DATE'D2/'
            LOCATE RPT.DATE IN VC.REC<17,LOC.POS> SETTING POS ELSE
               CALL ELINE('ERROR - Invalid Date.')
               GO 300
            END
            CLIENT.NAME = CLIENT.REC<2>
            DIVISION=CLIENT.REC<12>
            THROW.AWAY.AMT = CLIENT.REC<143>
            IF DIVISION = 'Y' THEN
               OPEN '','DIVISION.CODES,':CLIENT TO F.DIV ELSE
                  CALL ELINE("Cannot open DIVISION.CODES for client ":CLIENT'R%5')
                  GO 100
               END                       ; * START OVER
            END
            NUM.SHIPMENTS = DCOUNT(VC.REC<16,LOC.POS>,@SVM)
            TOTAL.MR.FRT = 0
            TOTAL.CORRECT.FRT = 0
            TOTAL.OVERCHARGE = 0
            DM.AMT = 0
            PREV.APPR.CARR = ''
            CARR.CHG.FLAG = 0
            SHIPMENT.ARRAY=''
            MISROUTE.ARRAY=''            ; * JMK01
            DM.TOTAL = 0                 ; * JMK02
            FOR X = 1 TO NUM.SHIPMENTS
               IF VC.REC<17,LOC.POS,X> = RPT.DATE AND VC.REC<15,LOC.POS,X> #'WV' AND VC.REC<15,LOC.POS,X> # 'TA' THEN
                  PRO.ID = VC.REC<16,LOC.POS,X>
                  PRO.NUM=FIELD(PRO.ID,'*',2)
                  UNAPPR.CARRIER=FIELD(PRO.ID,'*',1)
                  READ PRO.REC FROM F.BILLS.HIST,PRO.ID ELSE
                     PRO.REC = ''
                     GO SKIP.PRO
                  END
                  APPR.CARRIER = PRO.REC<69>
                  IF PREV.APPR.CARR # APPR.CARRIER AND PREV.APPR.CARR # '' THEN
                     CARR.CHG.FLAG = 1
                  END
                  PREV.APPR.CARR = APPR.CARRIER
                  READV UNAPPR.CARRIER.NAME FROM F.CARRIERS,UNAPPR.CARRIER,1 ELSE UNAPPR.CARRIER.NAME = ''
                  READV APPR.CARRIER.NAME FROM F.CARRIERS,APPR.CARRIER,1 ELSE APPR.CARRIER.NAME = ''
                  SHIP.DATE = PRO.REC<1>
*NPR01                  TOTAL.FREIGHT = PRO.REC<8>
                  TOTAL.FREIGHT = PRO.REC<8>+PRO.REC<44>    ; * NPR01
                  CORRECT.FREIGHT = PRO.REC<63>
                  PO.BOL = PRO.REC<16>
                  OVERCHARGE = TOTAL.FREIGHT-CORRECT.FREIGHT
                  IF OVERCHARGE LE THROW.AWAY.AMT THEN
                     CALL ELINE('Pro ':PRO.NUM:' not on letter - under $':THROW.AWAY.AMT'R26#8')
                     GO SKIP.PRO
                  END
                  LTR.TYPE = VC.REC<15,LOC.POS,X>
                  IF LTR.TYPE = 'WV' OR LTR.TYPE = 'TA' THEN
                     GO SKIP.PRO
                  END
                  APPR.CARRIER.ARRAY = PRO.REC<23>
                  APPR.CARR.AMT.ARRAY = PRO.REC<22>
                  NUM.APPR.CARRIERS = DCOUNT(APPR.CARRIER.ARRAY,@VM)
                  IF NUM.APPR.CARRIERS GT 1 THEN
                     FOR X2 = 2 TO NUM.APPR.CARRIERS
                        APPR.CARRIER.ID = APPR.CARRIER.ARRAY<1,X2>
                        READV CARRIER.NAME FROM F.CARRIERS,APPR.CARRIER.ID,1 ELSE CARRIER.NAME = ''
                        APPR.CARRIER.NAME<1,1,-1> = CARRIER.NAME
                        CORRECT.FREIGHT<1,1,-1> = APPR.CARR.AMT.ARRAY<1,X2>
                        OVERCHARGE<1,1,-1> = TOTAL.FREIGHT-APPR.CARR.AMT.ARRAY<1,X2>
                     NEXT X2
                  END

                  DIV.ID = PRO.REC<9>
                  DIV.ZIP = ''
                  IF DIVISION = 'Y' THEN
                     READ DIV.REC FROM F.DIV,DIV.ID THEN
                        DIV.ZIP = DIV.REC<1>
                     END
                  END ELSE
                     DIV.ZIP = PRO.REC<4>
                  END
                  READ ZIP.REC FROM F.ZIPS,DIV.ZIP THEN
                     DIV.DESC = ZIP.REC<1> :', ':ZIP.REC<2>:' ': DIV.ZIP
                  END ELSE
                     DIV.DESC = ''
                  END
                  LOC.ZIP = VC.REC<11,LOC.POS>
                  READ ZIP.REC FROM F.ZIPS,LOC.ZIP THEN
                     LOC.DESC = ZIP.REC<1> :', ':ZIP.REC<2>:' ':LOC.ZIP
                  END ELSE
                     LOC.DESC = ''
                  END
                  CONF.NUM = RPT.DATE:'*':CLIENT:'*':VC.ID:'*':LOC.ZIP
                  CONF.LINE = SPACES(10):CONF.NUM
*NPR01                  SHIPMENT.ARRAY<1,-1> = UNAPPR.CARRIER.NAME
*NPR01                  SHIPMENT.ARRAY<2,-1> = PRO.NUM
*NPR01                  SHIPMENT.ARRAY<3,-1> = SHIP.DATE
*NPR01                  SHIPMENT.ARRAY<4,-1> = TOTAL.FREIGHT
*NPR01                  SHIPMENT.ARRAY<5,-1> = APPR.CARRIER.NAME
*NPR01                  SHIPMENT.ARRAY<6,-1> = CORRECT.FREIGHT
*NPR01                  SHIPMENT.ARRAY<7,-1> = OVERCHARGE
*NPR01                  SHIPMENT.ARRAY<8,-1> = PRO.ID
*NPR01                  SHIPMENT.ARRAY<9,-1> = APPR.CARRIER
*NPR01                  SHIPMENT.ARRAY<10,-1> = PO.BOL

                  SA.CNT = DCOUNT(SHIPMENT.ARRAY<1>,@VM) + 1      ;* NPR01
                  SHIPMENT.ARRAY<1,SA.CNT> = UNAPPR.CARRIER.NAME  ;* NPR01
                  SHIPMENT.ARRAY<2,SA.CNT> = PRO.NUM              ;* NPR01
                  SHIPMENT.ARRAY<3,SA.CNT> = SHIP.DATE            ;* NPR01
                  SHIPMENT.ARRAY<4,SA.CNT> = TOTAL.FREIGHT        ;* NPR01
                  SHIPMENT.ARRAY<5,SA.CNT> = APPR.CARRIER.NAME    ;* NPR01
                  SHIPMENT.ARRAY<6,SA.CNT> = CORRECT.FREIGHT      ;* NPR01
                  SHIPMENT.ARRAY<7,SA.CNT> = OVERCHARGE           ;* NPR01
                  SHIPMENT.ARRAY<8,SA.CNT> = PRO.ID               ;* NPR01
                  SHIPMENT.ARRAY<9,SA.CNT> = APPR.CARRIER         ;* NPR01
                  W.PO.BOL = PO.BOL                               ;* NPR01
                  CONVERT @VM TO " " IN W.PO.BOL                  ;* NPR01
                  SHIPMENT.ARRAY<10,SA.CNT> = W.PO.BOL            ;* NPR01

                  TOTAL.MR.FRT = TOTAL.MR.FRT + TOTAL.FREIGHT
                  TOTAL.CORRECT.FRT = TOTAL.CORRECT.FRT + CORRECT.FREIGHT<1,1,1>
                  TOTAL.OVERCHARGE = TOTAL.OVERCHARGE + OVERCHARGE<1,1,1>
*                 DM.TOTAL = VC.REC<19,LOC.POS,X>                      ; * JMK02
                  DM.TOTAL = DM.TOTAL + VC.REC<19,LOC.POS,X>           ; * JMK02
               END ELSE                  ; * JMK02
                  IF VC.REC<17,LOC.POS,X> < RPT.DATE THEN    ; * JMK01
                     PRV.PRO.ID=VC.REC<16,LOC.POS,X>         ; * JMK01
                     READ PRV.FBH.REC FROM F.BILLS.HIST,PRV.PRO.ID THEN          ; * JMK01
                        PRV.UNAPPR.CARRIER.ID=FIELD(PRV.PRO.ID,'*',1)  ; * JMK01
                        READ PRV.UNAPPR.CARRIER.REC FROM F.CARRIERS,PRV.UNAPPR.CARRIER.ID ELSE PRV.UNAPPR.CARRIER.REC=''           ; * JMK01
                        PRV.UNAPPR.CARRIER.NAME=PRV.UNAPPR.CARRIER.REC<1>        ; * JMK01
                        PRV.APPR.CARRIER.ID=PRV.FBH.REC<69>  ; * JMK01
                        READ PRV.APPR.CARRIER.REC FROM F.CARRIERS,PRV.APPR.CARRIER.ID ELSE PRV.APPR.CARRIER.REC=''       ; * JMK01
                        PRV.APPR.CARRIER.NAME=PRV.APPR.CARRIER.REC<1>  ; * JMK01
                        PRV.PRO.NUM=FIELD(PRV.PRO.ID,'*',2)  ; * JMK01
                        PRV.SHIP.DATE=PRV.FBH.REC<1>         ; * JMK01
*NPR01                        PRV.TOTAL.FREIGHT=PRV.FBH.REC<8>     ; * JMK01
                        PRV.TOTAL.FREIGHT=PRV.FBH.REC<8>+PRV.FBH.REC<44>     ; * NPR01
                        PRV.CORRECT.FREIGHT=PRV.FBH.REC<63>  ; * JMK01
                        PRV.OVERCHARGE=PRV.TOTAL.FREIGHT-PRV.CORRECT.FREIGHT     ; * JMK01
                        PRV.PO.BOL=PRV.FBH.REC<16>           ; * JMK01
*NPR01                        MISROUTE.ARRAY<1,-1> = PRV.UNAPPR.CARRIER.NAME           ; * JMK01
*NPR01                        MISROUTE.ARRAY<2,-1> = PRV.PRO.NUM   ; * JMK01
*NPR01                        MISROUTE.ARRAY<3,-1> = PRV.SHIP.DATE           ; * JMK01
*NPR01                        MISROUTE.ARRAY<4,-1> = PRV.TOTAL.FREIGHT       ; * JMK01
*NPR01                        MISROUTE.ARRAY<5,-1> = PRV.APPR.CARRIER.NAME   ; * JMK01
*NPR01                        MISROUTE.ARRAY<6,-1> = PRV.CORRECT.FREIGHT     ; * JMK01
*NPR01                        MISROUTE.ARRAY<7,-1> = PRV.OVERCHARGE          ; * JMK01
*NPR01                        MISROUTE.ARRAY<8,-1> = PRV.PRO.ID    ; * JMK01
*NPR01                        MISROUTE.ARRAY<9,-1> = PRV.APPR.CARRIER.ID     ; * JMK01
*NPR01                        MISROUTE.ARRAY<10,-1> = PRV.PO.BOL   ; * JMK01

                        MR.CNT = DCOUNT(MISROUTE.ARRAY<1>,@VM) + 1                      ;* NPR01
                        MISROUTE.ARRAY<1,MR.CNT> = PRV.UNAPPR.CARRIER.NAME   ; * JMK01  ;* NPR01
                        MISROUTE.ARRAY<2,MR.CNT> = PRV.PRO.NUM               ; * JMK01  ;* NPR01
                        MISROUTE.ARRAY<3,MR.CNT> = PRV.SHIP.DATE             ; * JMK01  ;* NPR01
                        MISROUTE.ARRAY<4,MR.CNT> = PRV.TOTAL.FREIGHT         ; * JMK01  ;* NPR01
                        MISROUTE.ARRAY<5,MR.CNT> = PRV.APPR.CARRIER.NAME     ; * JMK01  ;* NPR01
                        MISROUTE.ARRAY<6,MR.CNT> = PRV.CORRECT.FREIGHT       ; * JMK01  ;* NPR01
                        MISROUTE.ARRAY<7,MR.CNT> = PRV.OVERCHARGE            ; * JMK01  ;* NPR01
                        MISROUTE.ARRAY<8,MR.CNT> = PRV.PRO.ID                ; * JMK01  ;* NPR01
                        MISROUTE.ARRAY<9,MR.CNT> = PRV.APPR.CARRIER.ID       ; * JMK01  ;* NPR01
                        W.PRV.PO.BOL = PRV.PO.BOL                                       ;* NPR01
                        CONVERT @VM TO " " IN W.PRV.PO.BOL                              ;* NPR01
                        MISROUTE.ARRAY<10,MR.CNT> = W.PRV.PO.BOL             ; * JMK01  ;* NPR01

                     END                 ; * JMK01
                  END                    ; * JMK01
               END
SKIP.PRO:***
            NEXT X
            IF SHIPMENT.ARRAY # '' THEN
               VIN=''
               VIN<1> = VC.NAME
               VIN<2> = VC.ADDR1
               VIN<3> = VC.ADDR2
               VIN<4> = VC.CITY
               VIN<5> = VC.ST
               VIN<6> = VC.ZIP
               VIN<7> = CLIENT.NAME
               VIN<8> = DIV.ID
               VIN<9> = DIV.DESC
               VIN<10> = CARR.CHG.FLAG
               VIN<11> = DM.TOTAL
               VIN<12> = LOC.DESC
               VIN<13> = TOTAL.OVERCHARGE
               VIN<14> = CONF.LINE
               VIN<15> = RPT.DATE
               VIN<16> = LTR.TYPE
               VIN<17> = VCI
               VIN<18> = CLIENT
               MIN.DM.AMT = CLIENT.REC<141>
               VIN<19> = MIN.DM.AMT
*              CALL FB.PRINT.LTRS(VIN,SHIPMENT.ARRAY)        ; * JMK01
*IF USER = "NPRATT" THEN
*   OPEN '','NP.TEST' TO F.NP.TEST THEN
*      WRITE VIN ON F.NP.TEST, "VIN"
*      WRITE SHIPMENT.ARRAY ON F.NP.TEST, "SHIPMENT.ARRAY"
*      WRITE MISROUTE.ARRAY ON F.NP.TEST, "MISROUTE.ARRAY"
*   END
*END
               CALL FB.PRINT.LTRS(VIN,SHIPMENT.ARRAY,MISROUTE.ARRAY)   ; * JMK01
*DF               IF USER='DAVID' THEN
*DF                  CALL FB.PRINT.LTRS.DAV(VIN,SHIPMENT.ARRAY,MISROUTE.ARRAY)   ; * JMK01
*DF               END
               PRINTER OFF          ;* NPR01
               PRINTER CLOSE        ;* NPR01
               CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
               CALL ELINE("Document Reprinted ...")
               GOSUB DISPLAY.DATA   ;* NPR01
            END
         CASE QI='D' AND DEL.ACCESS      ; * JMK03
            DVAL=DCOUNT(VC.REC<15,LOC.POS>,@SVM)   ; * JMK03
            NEW.PAGE=INT(DVAL/16)+(MOD(DVAL,16)#0)           ; * JMK03
            IF NEW.PAGE#PAGE THEN        ; * JMK03
               PAGE=NEW.PAGE             ; * JMK03
               GOSUB DISPLAY.DATA        ; * JMK03
            END                          ; * JMK03
400:        HELP='Enter "DELETE" [X]Back [EX]it.'  ; * JMK03
            MASK="Please enter 'DELETE' to delete line ":DVAL:".  "       ; * JMK03
            CALL GEN.IN(0,22,MASK,'',Q,0,8,'','',1,-1,22,0,QI,HELP,0,23)  ; * JMK03
            QI=OCONV(QI,'MCU')           ; * JMK03
            BEGIN CASE                   ; * JMK03
               CASE QI='EX'              ; * JMK03
                  STOP                   ; * JMK03
               CASE QI = 'X'             ; * JMK03
                  RETURN                 ; * JMK03
               CASE QI = 'DELETE'        ; * JMK03
                  IF USER='MKERBOW' THEN CALL ELINE('AT DELETE')
               CASE 1                    ; * JMK03
                  CALL ELINE('ERROR - Invalid Entry.')       ; * JMK03
                  GO 400                 ; * JMK03
            END CASE                     ; * JMK03
            LOC.ZIP = VC.REC<11,LOC.POS>           ; * JMK03
            PRV.LTR.TYPE=''              ; * JMK03
            PRV.LTR.DATE=''              ; * JMK03
            IF DVAL>1 THEN               ; * JMK03
               PRV.LTR.TYPE=VC.REC<15,LOC.POS,DVAL-1>        ; * JMK03
               PRV.LTR.DATE=VC.REC<17,LOC.POS,DVAL-1>        ; * JMK03
            END                          ; * JMK03
            LTR.TYPE=VC.REC<15,LOC.POS,DVAL>       ; * JMK03
            PRO.ID=VC.REC<16,LOC.POS,DVAL>         ; * JMK03
            LTR.DATE=VC.REC<17,LOC.POS,DVAL>       ; * JMK03
* DELETE HISTORICAL FREIGHT BILL
            READU PRO.REC FROM F.BILLS.HIST,PRO.ID THEN      ; * JMK03
               PRO.REC<22>=''            ; * JMK03
               PRO.REC<23>=''            ; * JMK03
               PRO.REC<63>=''            ; * JMK03
               WRITE PRO.REC ON F.BILLS.HIST,PRO.ID          ; * JMK03
            END                          ; * JMK03
            RELEASE F.BILLS.HIST,PRO.ID  ; * JMK03
* DELETE ANY LOGISITICS ITEM
            CONF.NUM=LTR.DATE:'*':CLIENT:'*':VC.ID:'*':LOC.ZIP         ; * JMK03
            DELETE F.LOGS,CONF.NUM       ; * JMK03
* CHECK IF RESET OF NEXT EVENT IS NEEDED
            IF PRV.LTR.TYPE#'' THEN      ; * JMK03
               IF LTR.TYPE#PRV.LTR.TYPE THEN       ; * JMK03
                  IF LTR.TYPE='DM' THEN  ; * JMK03
                     VC.REC<12,LOC.POS>=PRV.LTR.TYPE         ; * JMK03
                  END ELSE               ; * JMK03
                     FOR VAL=DVAL-2 TO 1 STEP -1   ; * JMK03
                        TST.LTR.TYPE=VC.REC<15,LOC.POS,VAL>  ; * JMK03
                        IF TST.LTR.TYPE=PRV.LTR.TYPE THEN    ; * JMK03
                           PRV.LTR.DATE=VC.REC<17,LOC.POS,VAL>         ; * JMK03
                        END              ; * JMK03
                     NEXT VAL            ; * JMK03
                     IF LTR.TYPE='DM' THEN         ; * JMK03
                        PRV.EVENT.DATE=PRV.LTR.DATE+DM.DAYS  ; * JMK03
                     END ELSE            ; * JMK03
                        PRV.EVENT.DATE=PRV.LTR.DATE+LTR2.DAYS          ; * JMK03
                     END                 ; * JMK03
                     VC.REC<12,LOC.POS>=PRV.LTR.TYPE         ; * JMK03
                     VC.REC<13,LOC.POS>=PRV.EVENT.DATE       ; * JMK03
                  END                    ; * JMK03
               END                       ; * JMK03
            END                          ; * JMK03
* NOW REMOVE FROM VC.REC
            IF DVAL=1 THEN               ; * JMK03
               FOR ATT=11 TO 21          ; * JMK03
                  DEL VC.REC<ATT,LOC.POS>          ; * JMK03
               NEXT ATT                  ; * JMK03
            END ELSE                     ; * JMK03
               FOR ATT=15 TO 19          ; * JMK03
                  DEL VC.REC<ATT,LOC.POS,DVAL>     ; * JMK03
               NEXT ATT                  ; * JMK03
            END                          ; * JMK03
            WRITE VC.REC ON F.VC,VC.ID   ; * JMK03
            GOSUB DISPLAY.DATA           ; * JMK03
         CASE NUM(QI)
            ID = VC.REC<16,LOC.POS,QI>
            CARRIER=FIELD(ID,'*',1)
            PRO.NUM=FIELD(ID,'*',2)
            NO.ZIP.REQ=OCONV(USER,'TBCTRL;X;;9')   ; * JMK03
*           IF USER = 'TAMI' OR USER = 'OWEN' THEN ; * JMK03
            IF NO.ZIP.REQ THEN           ; * JMK03
               DATA CLIENT,CARRIER,PRO.NUM,'I'
            END ELSE
               READV CARRIER.ZIP FROM F.CARRIERS,CARRIER,5 ELSE CARRIER.ZIP = ''
               CARRIER.ZIP=CARRIER.ZIP[1,5]
               DATA CLIENT,CARRIER,CARRIER.ZIP,PRO.NUM,'I'
            END
            EXECUTE 'FB.2.1.MR'
            CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            GOSUB DISPLAY.DATA
         CASE 1
            CALL ELINE('MISROUTES CAN BE VIEWED ONLY')
            GO 100
      END CASE
      GO 100

****************************************************************
* Display array
****************************************************************
DISPLAY.DATA:***
      CRT @(0,3):"  #   Ltr   Unappr Carr        Pro#      Ltr Date  DM Amt   Appr Carr  ConfDate"
      CRT @(0,4):" --- ----- ------------- --------------- -------- -------- ----------- --------"
      START=(PAGE*16)-15
      PRO.COUNT = DCOUNT(VC.REC<16,LOC.POS>,@SVM)
      IF START GT PRO.COUNT +1 THEN
         START=1
         PAGE=1
      END
      STOP=START+15
      FOR I=START TO STOP STEP 1
         ROW=4+REM(I,16)
         IF ROW=4 THEN ROW=20
         LTR.TYPE = VC.REC<15,LOC.POS,I>
         IF LTR.TYPE # '' THEN
            PRO.ID = VC.REC<16,LOC.POS,I>
            PRO.NUM=FIELD(PRO.ID,'*',2)
            CARRIER.ID=FIELD(PRO.ID,'*',1)
            READV UNAPPR.CARRIER.NAME FROM F.CARRIERS,CARRIER.ID,1 ELSE UNAPPR.CARRIER.NAME = ''
            READV APPR.CARRIER.ID FROM F.BILLS.HIST,PRO.ID,69 ELSE APPR.CARRIER.ID = ''
*          APPR.CARRIER.ID = VC.REC<18,LOC.POS,I>
            READV APPR.CARRIER.NAME FROM F.CARRIERS,APPR.CARRIER.ID,1 ELSE APPR.CARRIER.NAME = ''
            LTR.DATE = VC.REC<17,LOC.POS,I>
            DM.AMT = VC.REC<19,LOC.POS,I>
            CONF.DATE = VC.REC<20,LOC.POS,I>
            IF DM.AMT = 0 THEN DM.AMT = ''
            PRINT @(0,ROW):I"R#3":'  ':LTR.TYPE"L#5":' ':UNAPPR.CARRIER.NAME"L#13":' ':PRO.NUM"L#15":' ':LTR.DATE"D2/":' ':DM.AMT"R26#8":' ':APPR.CARRIER.NAME"L#11":' ':CONF.DATE'D2/':@(-4)
         END ELSE
            PRINT @(0,ROW):I"R#3":@(-4)
         END
      NEXT I
      RETURN

****************************************************************
* Initialize Variables
****************************************************************
INITIALIZE.VARIABLES:**

      BACK.FLAG = 0
      NEXT.EVENT = ''
      NEXT.EVENT.DATE = ''
      APPR.CARRIERS = ''
      LAST.APRR.CARRIER = ''
      LOC.ZIP=''
      LOC.CITY=''
      LOC.STATE=''
      LOC.COUNT = 0
      SEL=''
      VC.NAME = VC.REC<1>
      VC.ADDR1 = VC.REC<3,1>
      VC.ADDR2 = VC.REC<3,2>
      VC.CITY = VC.REC<5>
      VC.ST = VC.REC<6>
      VC.ZIP = VC.REC<7>
      VCI = VC.REC<4>
      RETURN
