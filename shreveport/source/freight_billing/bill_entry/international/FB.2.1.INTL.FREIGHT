      SUBROUTINE FB.2.1.INTL.FREIGHT(VIN,VOUT,INTL.CODES,QI)
*
 UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.2.1.INTL.FREIGHT' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
 CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
* SUBROUTINE TO ENTER TRUCKLOAD INFORMATION
*
* FREIGHT BILLING PACKAGE
*
* AUTHOR: TAMI SEAGO
* DATE: APRIL 15, 1999
*
* THIS PROGRAM IS A PROPRIETARY PRODUCT OF AUTOMATED FREIGHT SYSTEMS
* AND MAY NOT BE USED, COPIED OR MODIFIED WITHOUT THE EXPRESS
* WRITTEN CONSENT OF SAME.
*
********************************************************************
* 092903 - CREATE FOR TRUCK LOAD SURVEY
* 012604 - JMK01 - VERIFY TL CHRGS RETURNED TO CALLING PROGRAM
* 021204 - JMK02 - ESTIMATE FSC WHEN FRT CHARGES CHANGE
* 070805 - JMK03 - RECALCULATE FRT WHEN ADDITIONAL LINES ARE ENTERED
* 100308 - JMK04 - C082257 - Add description to the FB Details for the MISC code
* 031710 - NPR01 - Copied from FB.2.1.TL.FREIGHT and modified for International shipments
*
*
$INCLUDE PROG.ADMIN INC_OPTIONS
$INCLUDE FILE.DEFS INC_CLIENTS
*
* Initialize variables
*
      PROMPT''
      DTL.CHRG.CODES = VIN<3>
      DTL.CHRG.AMTS = VIN<4>
      DIM.WEIGHT = VIN<5>
      ACTUAL.WGT = VIN<6>
      CARRIER.ID = VIN<7>
      CARRIER.NAME = VIN<8>
      ORIG = VIN<9>
      DEST = VIN<10>
      ACTUAL.CHG = VIN<11>

      IF DTL.CHRG.CODES = '' THEN     ;* NPR01
         DTL.CHRG.CODES = '1'         ;* NPR01
         DTL.CHRG.AMTS = ACTUAL.CHG   ;* NPR01
      END                             ;* NPR01

      CC=VIN<12>
      OPT = VIN<13>
      USER=VIN<14>
      MISC.REASON = VIN<15>              ; * JMK04
      PROG.NAME='FB.2.1.INTL.FREIGHT'

*
* Open files
*

      BEGIN CASE
         CASE OPT='I'
            MODE='INPUT'
            INQUIRE=0
         CASE OPT='E'
            MODE='EDIT'
            INQUIRE=0
         CASE OPT='V'
            INQUIRE=1
            MODE='VIEW'
*DF            RETURN
      END CASE


*
* Start input
*

      GOSUB DISPLAY.SCREEN
      GOSUB DISPLAY.DATA
      ORIG.CHARGES=TOTAL.CHARGES         ; * JMK02
      IF MODE='VIEW' THEN
         CALL ELINE("")
         RETURN
      END


      LN = 0
ENTER.CHRG.DETAIL:***
      IF MODE='INPUT' THEN
         LN = LN+1
         QI=LN
         IF LN GT 10 THEN
            MODE='EDIT'
            GO ENTER.CHRG.DETAIL
         END
      END ELSE
         GOSUB CALCULATE.TOTAL
         HELP="Enter Line Num. ''=End. 'X'=Back. 'EX'=Exit.":@(-4)
         LINE = "Enter line number. ## ":@(-4)
         CALL GEN.IN(0,22,LINE,'',Q,0,3,'','',0,-5,22,0,QI,HELP,0,23)
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      END

BEGIN.INPUT:***
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
*           IF MODE = 'EDIT' THEN                ; * JMK01
            GO EXIT.SUBROUTINE
*           END ELSE                             ; * JMK01
*              GO ENTER.CHRG.DETAIL              ; * JMK01
*           END                                  ; * JMK01
         CASE QI='X'
            RETURN
         CASE QI='EX'
            STOP
         CASE NUM(QI)
            IF INQUIRE THEN
               CALL ELINE('Can not access detail in inquiry!')
               CC+=1 ; GOSUB PRINT.CC
            END ELSE
               IF QI > 1 THEN
                  IF DTL.CHRG.CODES<1,QI-1>='' THEN
                     CALL ELINE("Cannot Skip a line.  You must select the next blank line")
                     GO ENTER.CHRG.DETAIL
                  END
               END
            END
            SEL = QI
            GOSUB ENTER.INTL.CODE
      END CASE
      GO ENTER.CHRG.DETAIL

*
* End of program
*

*-----------------------------------------------------------------------
*
* INTERNAL SUBROUTINES
*
*-----------------------------------------------------------------------
*

*
* Enter truckload freight code
*
ENTER.INTL.CODE:***
      IF SEL LT 1 OR SEL GT 10 THEN
         CALL ELINE('Invalid entry.')
         RETURN
      END
      LINE = SEL+6

*
8010: HELP="[ ]=Done [L]ist Codes [D]el [E]dit [X]=Back [EX]it"
      IF SEL = 1 THEN
*NPR01         QI = 'FRT'
         QI = '1'
      END ELSE
         IF DTL.CHRG.CODES<1,SEL>='' THEN
            MASK = ''
         END ELSE
            MASK = DTL.CHRG.CODES<1,SEL>'L#4'
         END
         CALL GEN.IN(3,LINE,MASK,'',Q,0,4,'','',2,3,LINE,0,QI,HELP,0,23)
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      END
      CRT @(0,22):@(-4):
      QI=OCONV(QI,'MCU')
*NPR01      IF QI='+' THEN QI='FRT'
      IF QI='+' THEN QI='1'          ;* NPR01
      BEGIN CASE
         CASE SEL = 1 AND QI = 'X'
            CRT @(3,LINE):DTL.CHRG.CODES<1,SEL>'L#4':
            RETURN
         CASE QI=''
            Q = DTL.CHRG.CODES<1,SEL>
            IF Q = '' THEN
               IF MODE='INPUT' THEN MODE='EDIT'
               RETURN
            END
         CASE QI='EX'
            STOP
         CASE QI='L'
            CALL LIST.INTL.CODES('',CODE.RETURNED)
            GOSUB DISPLAY.SCREEN
            GOSUB DISPLAY.DATA
            Q=CODE.RETURNED<1>
         CASE QI='X' OR QI = ' '
            CRT @(3,LINE):DTL.CHRG.CODES<1,SEL>'L#4':
            MODE='EDIT'
            RETURN
         CASE QI='D'
            DEL DTL.CHRG.CODES<1,SEL>
            DEL DTL.CHRG.AMTS<1,SEL>
            DEL MISC.REASON<1,SEL>       ; * JMK04
            IF MODE='INPUT' THEN MODE='EDIT'
            GOSUB DISPLAY.SCREEN
            GOSUB DISPLAY.DATA
            RETURN
         CASE QI='E'
            CRT @(3,LINE):DTL.CHRG.CODES<1,SEL>:@(-4)
            MODE='EDIT'
            RETURN
         CASE 1
*NPR01            IF NUM(QI) THEN
*NPR01               NUMB=QI
*NPR01               QI=LI.CODES<1,QI>
*NPR01               IF QI='' THEN
*NPR01                  CALL ELINE("NO CODE ASSOCIATED WITH NUMBER ":NUMB)
*NPR01                  GO 8010
*NPR01               END
*NPR01            END
            Q=QI
      END CASE

      LOCATE Q IN INTL.CODES<1> SETTING POS THEN
         DESC=INTL.CODES<2,POS>
         DTL.CHRG.CODES<1,SEL>=Q
         CRT @(3,LINE):Q'L#4'
         CRT @(8,LINE):DESC'L#25'
      END ELSE
         CALL ELINE('Code not on file!  You must enter a valid line item code!')
         GO 8010
      END

ENTER.CHARGE:***
*
* Enter Charge
*
      HELP="Enter the Charge ''=ACCEPT 'X'=Back 'EX'=Exit"
      IF SEL = 1 AND DTL.CHRG.AMTS<1,1> = 0 THEN MASK = '0.00''R#8' ELSE MASK=DTL.CHRG.AMTS<1,SEL>'R26Z#8'
      CALL GEN.IN(35,LINE,MASK,'AMT2',Q,0,8,'','',2,-8,LINE,0,QI,HELP,0,23)
      CC+=LEN(QI)+1 ; GOSUB PRINT.CC
      QI=TRIM(OCONV(QI,'MCU'))
      BEGIN CASE
         CASE QI=''
            Q=DTL.CHRG.AMTS<1,SEL>
            IF Q='' THEN
               IF SEL # 1 THEN
                  CALL ELINE('Entry is required')
                  GO ENTER.CHARGE
               END ELSE
                  Q = 0
               END
            END
         CASE QI='X'
            PRINT @(35,LINE):DTL.CHRG.AMTS<1,SEL>'R26#8'
            IF SEL = 1 THEN RETURN
            GO 8010
         CASE QI='EX'
            STOP
         CASE NUM(QI)
            IF QI LT 0 THEN
               IF SEL # 1 THEN
                  CALL ELINE('Must be a number greater than 0')
                  GO ENTER.CHARGE
               END ELSE
*NPR01                  IF QI LT 0 THEN
*NPR01                      LOCATE 'FSC' IN DTL.CHRG.CODES<1> SETTING CHRG.POS THEN
*NPR01                         CALL ELINE('Must be 0 or greater')
*NPR01                         GO ENTER.CHARGE
*NPR01                      END ELSE
*NPR01                         DTL.CHRG.CODES<1,-1>='FSC'
*NPR01                         DTL.CHRG.AMTS<1,-1>=-Q
*NPR01                         DTL.CHRG.AMTS<1,1>=DTL.CHRG.AMTS<1,1>+Q
*NPR01                         GOSUB DISPLAY.DATA
*NPR01                         GO ENTER.CHARGE
*NPR01                      END
*NPR01                  END
               END
            END
         CASE 1
            CALL ELINE('You must enter a valid number!')
            GO ENTER.CHARGE
      END CASE
      DTL.CHRG.AMTS<1,SEL>=Q
      PRINT @(35,LINE):Q'R26#8'

*
8020:*
*
      IF DTL.CHRG.CODES<1,SEL>='MISC' THEN         ; * JMK04
         HELP="Enter reason for MISC code. 'X'=Back. 'EX'=Exit.":@(-4)           ; * JMK04
         MASK=MISC.REASON<1,SEL>         ; * JMK04
         CALL GEN.IN(48,LINE,MASK,'',Q,0,30,'','',0,48,LINE,0,QI,HELP,0,23)      ; * JMK04
         CC+=LEN(QI)+1 ; GOSUB PRINT.CC  ; * JMK04
         BEGIN CASE                      ; * JMK04
            CASE QI='EX'                 ; * JMK04
               STOP                      ; * JMK04
            CASE QI = 'X'                ; * JMK04
               CRT @(48,LINE):MISC.REASON<1,SEL>'L#30':      ; * JMK04
               GO ENTER.CHARGE           ; * JMK04
            CASE QI='' OR QI=' '         ; * JMK04
               CALL ELINE('You must enter a reason for the MISC code.')          ; * JMK04
               GO 8020                   ; * JMK04
            CASE 1                       ; * JMK04
               MISC.REASON<1,SEL>=Q      ; * JMK04
               CRT @(48,LINE):MISC.REASON<1,SEL>'L#30'       ; * JMK04
         END CASE                        ; * JMK04
      END                                ; * JMK04

      GOSUB CALCULATE.TOTAL
      GOSUB DISPLAY.DATA                 ; * JMK03
      IF TOTAL.CHARGES#ORIG.CHARGES THEN           ; * JMK02
         TOT.FRT.AMT=0                   ; * JMK02
         NDVAL=DCOUNT(DTL.CHRG.CODES<1>,@VM)       ; * JMK02
         FOR DVAL=1 TO NDVAL             ; * JMK02
*NPR01            IF DTL.CHRG.CODES<1,DVAL>='FRT' OR DTL.CHRG.CODES<1,DVAL>='MIN' THEN   ; * JMK02
            IF DTL.CHRG.CODES<1,DVAL>='1' THEN                                           ; * JMK02  ; * NPR01
               TOT.FRT.AMT+=DTL.CHRG.AMTS<1,DVAL>  ; * JMK02
            END                          ; * JMK02
         NEXT DVAL                       ; * JMK02
         FVIN=''                         ; * JMK02
         FVOUT=''                        ; * JMK02
*DF         FVIN<1>=BILL.DATE ; *JMK02
*DF         FVIN<2>=BILL.WT  ; * JMK02
*DF         FVIN<3>=BILL.MILES ; * JMK02
*DF         FVIN<6>=TOT.FRT.AMT ; * JMK02
*DF         FVIN<7>=ORIG.ST ; * JMK02
*DF         FVIN<8>=DEST.ST ; * JMK02
*DF         CALL CALC.FSC(FVIN,FVOUT,DFSC,F.TABLES) ; * JMK02
*DF         NEW.FSC=FVOUT<XX> ; * JMK02
*DF         LOCATE('FSC',DTL.CHRG.CODES,1;FPOS) THEN ; * JMK02
*DF            DTL.CHRG.AMTS<1,FPOS>=NEW.FSC ; * JMK02
*DF         END ELSE ; * JMK02
*DF            DTL.CHRG.CODES<1,-1>='FSC' ; * JMK02
*DF            DTL.CHRG.AMTS<1,-1>=NEW.FSC ; * JMK02
*DF         END ; * JMK02
         GOSUB CALCULATE.TOTAL           ; * JMK02
      END                                ; * JMK02
      RETURN

DISPLAY.SCREEN:***
*
* Display screen headings
*
      CRT @(0,0):@(-3)
*NPR01      CRT @(0,0):"FB DETAIL INFORMATION"
      CRT @(0,0):"INTERNATIONAL FREIGHT INFORMATION"    ; * NPR01
      CRT @(0,2):"Orig     :  ":ORIG'R24'
      CRT @(0,3):"Dest     :  ":DEST'R24'
      CRT @(0,5):"LN Code Description                 Charges"
      CRT @(0,6):"-- ---- -------------------------- ---------"
      FOR X = 1 TO 10
         CRT @(0,X+6):X'R%2'
      NEXT X
      CRT @(51,0):"Additional Information"
      CRT @(47,1):"-------------------------------"
      CRT @(47,4):"Actu Chg : $":ACTUAL.CHG'R26#8'
      CRT @(35,17):"========="
      CRT @(0,18):"TOTAL"
      RETURN

DISPLAY.DATA:***
*
* Display Data
*
      GOSUB CALCULATE.TOTAL
      FOR X=1 TO 10 UNTIL DTL.CHRG.CODES<1,X>=''
         D.LINE=X+6
         IF DTL.CHRG.CODES<1,X>='' THEN
            PRINT @(0,D.LINE):X'R%2'
         END ELSE
            PRINT @(0,D.LINE):X'R%2':    ; * Selection
            PRINT @(3,D.LINE):DTL.CHRG.CODES<1,X>'L#4':      ; * Code
            LOCATE DTL.CHRG.CODES<1,X> IN INTL.CODES<1> SETTING POS THEN
               DESC=INTL.CODES<2,POS>
            END ELSE
               DESC='** Not On File **'
            END
            PRINT @(8,D.LINE):DESC'L#20':          ; * Code Description
            PRINT @(35,D.LINE):DTL.CHRG.AMTS<1,X>'R26#8':    ; * Charges
            PRINT @(48,D.LINE):MISC.REASON<1,X>'L#30':       ; * JMK04
         END
      NEXT X


CALCULATE.TOTAL:***
      FRT.CHG=0                          ; * JMK03
      MIS.CHG=0                          ; * JMK03
      NVAL=DCOUNT(DTL.CHRG.CODES<1>,@VM)           ; * JMK03
      FOR VAL=1 TO NVAL                  ; * JMK03
         CHRG = DTL.CHRG.AMTS<1,VAL>     ; * JMK03
         IF NOT(NUM(CHRG)) THEN CHRG=0   ; * JMK03
         BEGIN CASE                      ; * JMK03
*NPR01            CASE DTL.CHRG.CODES<1,VAL>='FRT'       ; * JMK03
            CASE DTL.CHRG.CODES<1,VAL>='1'               ; * JMK03  ; * NPR01
               FRT.CHG+=CHRG             ; * JMK03
            CASE 1                       ; * JMK03
               MIS.CHG+=CHRG             ; * JMK03
         END CASE                        ; * JMK03
      NEXT VAL                           ; * JMK03
      ADJ.FRT.CHG=ACTUAL.CHG-MIS.CHG     ; * JMK03
*NPR01      LOCATE('FRT',DTL.CHRG.CODES,1;FPOS) THEN     ; * JMK03
      LOCATE('1',DTL.CHRG.CODES,1;FPOS) THEN     ; * JMK03  ;* NPR01
         DTL.CHRG.AMTS<1,FPOS>=ADJ.FRT.CHG
      END                                ; * JMK03
      TOTAL.CHARGES=0                    ; * JMK03
      FOR X=1 TO 10 UNTIL DTL.CHRG.CODES<1,X>=''   ; * JMK03
         CHARGES = DTL.CHRG.AMTS<1,X>    ; * JMK03
         IF NOT(NUM(CHARGES)) THEN CHARGES=''      ; * JMK03
         TOTAL.CHARGES+= CHARGES         ; * JMK03
      NEXT X                             ; * JMK03
      CRT @(35,18):TOTAL.CHARGES'R26#8':           ; * Total Charges
      RETURN

PRINT.CC:***
      IF USER#'OWEN' THEN RETURN
      PRINT @(0,0):@(-4):'Characters: ':CC'R#4':
      RETURN

EXIT.SUBROUTINE:* Exit & Return to Calling Program
      IF TOTAL.CHARGES # ACTUAL.CHG AND QI #'EX' THEN
         CALL ELINE('The total on this page must match the Actual Charges!')
         MODE = 'EDIT'
         GOSUB DISPLAY.SCREEN
         GOSUB DISPLAY.DATA
         GO ENTER.CHRG.DETAIL
      END
      VOUT=''
      VOUT<3> = DTL.CHRG.CODES
      VOUT<4> = DTL.CHRG.AMTS
      VOUT<5> = CC
      VOUT<6> = MISC.REASON              ; * JMK04
      RETURN
