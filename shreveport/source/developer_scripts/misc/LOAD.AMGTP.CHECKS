***********************************************************************
* Program : LOAD.AMGTP.CHECKS
* Package : FREIGHT BILLING
*
*         : To update the payment transaction information from the
*               client
*
* Author  : Mike Kerbow
* Date    : April 2012
***********************************************************************
* Maintenance:
* 070214 - DRF01 - SysAid 10481 - Gave CPEOPLES the same access as DRABORN
* 081314 - JMK01 - SysAid#11359 - Mary Ann Rose access
* 081514 - DRF02 - SysAid 11416 - Gave KMCQUISTON the same access as DRABORN
* 090814 - DRF03 - SysAid 11961 - Gave TGREEN the same access as DRABORN
* 110314 - DRF04 - S   ysAid 13310 - Gave MAWILLIAMS access to this program
* 120314 - DRF05 - SysAid 14019 - Gave NTAYLOR the same access as DRABORN
* 012615 - JMK02 - SysAid#14916 - Add Universe access for Kealey Barnes
***********************************************************************
      CALL GET.USER(USER)
      TB=CHAR(9)
      PROMPT ''
      PROG.NAME='LOAD.AMGTP.CHECKS'
      PROG.DESC='IMPORT CLIENT PAYMENT FILE'
      PACK.NAME='FREIGHT BILLING'
      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'FB.2.3.NW' ; UPL.VOUT = ''      ; * NPR_UPL 04/23/2010
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)       ; * NPR_UPL 04/23/2010
      CALL GET.USER(USER)
      CALL CHANNEL(CH.NUM)
      BEGIN CASE
         CASE USER='BRIAN'
         CASE USER='BRIANP'
         CASE USER='BROSE'
****         CASE USER='RHOLLIFIELD'

         CASE USER='DAVID'
         CASE USER='MKERBOW'
         CASE USER='PBASS'

         CASE USER='JERVIN'
         CASE USER='DRABORN'
         CASE USER='RWHITT'
         CASE USER='CPEOPLES'            ; * DRF01
         CASE USER='KMCQUISTON'          ; * DRF02
         CASE USER='MAWILLIAMS'          ; * DRF04
         CASE USER='MROSE'               ; * JMK01
         CASE USER='NTAYLOR'             ; * DRF05
         CASE USER='TGREEN'              ; * DRF03
         CASE USER='KBARNES'             ; * JMK02

         CASE 1
            CALL ELINE('Unauthorized access!')
            STOP
      END CASE
*
* Display screen heading
*
10:   CALL AFS.SCR.HEAD('','','',PROG.NAME,PROG.DESC,PACK.NAME,"AFS, LLC",TIME.DATE,1)
      CLIENT.ID='30004'
      OPEN '','BILLDATA.':USER TO F.BILLDATA ELSE
         CALL OPEN.ABORT('BILLDATA.':USER,PROG.NAME)
      END
      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         CALL OPEN.ABORT('CLIENTS',PROG.NAME)
      END
      OPEN '','FB.CARRIER.PAYEE' TO F.PAYEE ELSE
         CALL OPEN.ABORT('FB.CARRIER.PAYEE',PROG.NAME)
      END
      READ CLIENT.REC FROM F.CLIENTS,CLIENT.ID ELSE
         CALL ELINE(CLIENT.ID:' not on file!')
         STOP
      END
      OPEN '','FB.BILLS.HIST,':CLIENT.ID TO F.HIST ELSE
         CALL OPEN.ABORT('FB.BILLS.HIST,':CLIENT.ID,PROG.NAME)
         STOP
      END
      OPEN '','FB.PROC.DATE.XREF,':CLIENT.ID TO F.FPX ELSE
         CALL OPEN.ABORT('FB.PROC.DATE.XREF,':CLIENT.ID,PROG.NAME)
         STOP
      END
100:  *
      LN='Enter Filename: '
      MASK='C############.CSV'
      HELP='[N]=No [EX]=Exit'
      CALL GEN.IN(0,22,LN:MASK,'',Q,0,20,'','',20,-17,22,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX' OR QI='N' OR QI='X'
            STOP
         CASE LEN(QI)=17 AND QI[1,1]='C' AND QI[14,4]='.CSV'
            FNAME=QI
            READ BILLDATA.REC FROM F.BILLDATA,FNAME ELSE
               CALL ELINE(FNAME:' not on file!')
               GO 100
            END
         CASE 1
            GOTO 100
      END CASE
      TYPE='CSV'
      NATT=DCOUNT(BILLDATA.REC,@AM)
      UPD.REC=''
      FOR ATT=1 TO NATT
         IN=''
         OUT=BILLDATA.REC<ATT>
         CALL CONVERT.STRING(IN,OUT,TYPE)
         UPD.REC<ATT>=CHANGE(IN,',','')
      NEXT ATT
      IF USER='MKERBOW' THEN DEBUG
      BILLDATA.ORG=BILLDATA.REC
      BILLDATA.REC=UPD.REC
200:  *
      PYMT.ARRAY=''
      NATT=DCOUNT(BILLDATA.REC,@AM)
      FOR ATT=1 TO NATT
         CALL PROG.BAR(22,ATT,NATT,PER)
         IF ATT>1 THEN
            FOR VAL=1 TO 5
               BEGIN CASE
                  CASE VAL=4
                     PYMT.ARRAY<VAL+2,ATT-1>=ICONV(CHANGE(BILLDATA.REC<ATT,VAL>,'"',''),'D')
                  CASE VAL=5
                     PYMT.ARRAY<VAL+2,ATT-1>=ABS(ICONV(CHANGE(BILLDATA.REC<ATT,VAL>,',',''),'MR2'))
                  CASE 1
                     PYMT.ARRAY<VAL+2,ATT-1>=CHANGE(BILLDATA.REC<ATT,VAL>,'"','')
               END CASE
            NEXT VAL
         END
      NEXT ATT
      PROCESS.DATE=ICONV(FNAME[2,2]:'-':FNAME[4,2]:'-':FNAME[6,4],'D')
      READ FPX.REC FROM F.FPX,PROCESS.DATE ELSE
         CALL ELINE(FNAME:' has an invalid process date!')
         GO 100
      END
      NATT=DCOUNT(FPX.REC,@AM)
      FOR ATT=1 TO NATT
         BILL.ID=FPX.REC<ATT>
         CARRIER.ID=FIELD(BILL.ID,'*',1)
         PAYEE.ID=CLIENT.ID:'*':CARRIER.ID:'*'
         READ PAYEE.REC FROM F.PAYEE,PAYEE.ID THEN
            PAYEE.CODE=PAYEE.REC<1>
            IF PAYEE.CODE#'' THEN
               READ BILL.REC FROM F.HIST,BILL.ID THEN
                  BILL.ORG=BILL.REC
                  IF BILL.REC<14>#'' THEN
                     VOUCHER=FIELD(BILL.REC<14>,'*',1)
                     VOUCHER.AMT=BILL.REC<13>
                     LOCATE PAYEE.CODE IN PYMT.ARRAY<4> SETTING PPOS THEN
                        IF VOUCHER.AMT=PYMT.ARRAY<7,PPOS> THEN
                           PYMT.ARRAY<1,PPOS>=VOUCHER
                           PYMT.ARRAY<2,PPOS>+=1
                           PYMT.ARRAY<8,PPOS>+=BILL.ORG<8>
                           BILL.REC<14>=PYMT.ARRAY<3,PPOS>'R%6':'*V'
                        END
                     END
                  END
                  IF BILL.REC#BILL.ORG THEN
                     WRITE BILL.REC ON F.HIST,BILL.ID
                  END
               END
            END
         END
      NEXT ATT
      UPD.ARRAY=''
      UPD.LINE='Voucher':TB:'Count':TB:CHANGE(UPD.REC<1>,@VM,TB)
      UPD.ARRAY<-1>=UPD.LINE
      NVAL=DCOUNT(PYMT.ARRAY<1>,@VM)
      FOR VAL=1 TO NVAL
         UPD.LINE=PYMT.ARRAY<1,VAL>:TB:PYMT.ARRAY<2,VAL>:TB:CHANGE(UPD.REC<VAL+1>,@VM,TB)
         UPD.ARRAY<-1>=UPD.LINE
      NEXT VAL
      WRITE UPD.ARRAY ON F.BILLDATA,FIELD(FNAME,'.',1):'-UPD.':FIELD(FNAME,'.',2)
      GO 100
   END
