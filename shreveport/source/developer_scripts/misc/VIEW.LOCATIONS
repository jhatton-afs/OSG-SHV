      SUBROUTINE VIEW.LOCATIONS(F.VC,F.CARRIERS,F.ZIPS,CLIENT,CLIENT.REC,VC.ID,VC.REC,USER,F.BILLS.HIST,F.LOGS)
*
 UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'VIEW.LOCATIONS' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
 CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
* FREIGHT BILLING PACKAGE
*
* AUTHOR: TAMI SEAGO
* DATE: AUGUST 25, 1999
*
* THIS PROGRAM IS A PROPRIETARY PRODUCT OF AUTOMATED FREIGHT SYSTEMS
* AND MAY NOT BE USED, COPIED OR MODIFIED WITHOUT THE EXPRESS
* WRITTEN CONSENT OF SAME.
*
* 021904 - JMK01 - ADD FILES TO DELETE MISROUTE BILLS FROM VC
****************************************************************
* Initialize variables
****************************************************************
$OPTIONS HEADER.EJECT
$OPTIONS EXEC.EQ.PERF
$OPTIONS INFO.ABORT
      ERRMSG=''

      PROMPT''
      PROG.NAME=''
      PROG.DESC='VENDOR CUSTOMER LOCATION MAINTANANCE'
      PACK.NAME='FREIGHT BILLING'
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      GOSUB INITIALIZE.VARIABLES


ENTER.LINE:***
*
* First page of codes
*
      PAGE=1
      GOSUB DISPLAY.DATA
*
* Enter selection code
*
100:  HELP="Enter line # [B]ack [T]op [ ]Nxt page [V]iew Msrts [X]Back Main Scrn [EX]it"
      CALL GEN.IN(0,22,"Enter line number please. ###",'',Q,0,3,'','',1,-3,22,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI=''
            PAGE=PAGE+1
            GOSUB DISPLAY.DATA
            GO 100
         CASE QI='X'
            RETURN
         CASE QI='B'
            PAGE=PAGE-1
            IF PAGE=0 THEN PAGE=1
            GOSUB DISPLAY.DATA
         CASE QI='T'
            PAGE=1
            GOSUB DISPLAY.DATA
         CASE QI='EX'
            STOP
         CASE QI='V'
            ****************************************************************
            * Call View Misroutes Subroutine
            ****************************************************************
            HELP="[X]-Back [EX]it."
            CALL GEN.IN(0,22,"Enter line number of the location to view please. ###",'',Q,0,3,'','',1,-3,22,0,QI,HELP,0,23)
            QI=OCONV(QI,'MCU')
            BEGIN CASE
               CASE QI='X'
                  CRT @(0,22):@(-4)
                  RETURN
               CASE QI='EX'
                  STOP
               CASE NUM(QI)
                  LOC.POS=QI
*                 CALL VIEW.MISROUTES(F.VC,F.CARRIERS,F.ZIPS,CLIENT,CLIENT.REC,VC.ID,VC.REC,LOC.POS,USER,F.BILLS.HIST)   ; * JMK01
                  CALL VIEW.MISROUTES(F.VC,F.CARRIERS,F.ZIPS,CLIENT,CLIENT.REC,VC.ID,VC.REC,LOC.POS,USER,F.BILLS.HIST,F.LOGS)      ; * JMK01
               CASE 1
                  CRT @(0,22):@(-4)
                  GO ENTER.LINE
            END CASE
            GOSUB DISPLAY.DATA
            CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            GO ENTER.LINE
         CASE NUM(QI)
            SEL=QI
            IF SEL LT START ! SEL GT STOP THEN
               CALL ELINE('Invalid selection.')
               GOTO 100
            END
            IF VC.REC<11,SEL> = '' THEN
               CALL ELINE('Invalid selection.')
               GOTO 100
            END
            GO START.ENTRY
         CASE 1
            CALL ELINE('INVALID, PLEASE TRY AGAIN')
            GO 100
      END CASE
*
*------------------------------------------------------------------------
* INTERNAL SUBROUTINES
*------------------------------------------------------------------------
*
* Edit code
*
START.ENTRY:***
      ROW=4+REM(SEL,16)
      IF ROW=4 THEN ROW=20
      LOC.ZIP = VC.REC<11,SEL>
      READ ZIP.REC FROM F.ZIPS,LOC.ZIP THEN
         LOC.CITY = ZIP.REC<1>
         LOC.STATE = ZIP.REC<2>
      END
      LOC.WAVIED = VC.REC<21,SEL>
      NEXT.EVENT.OVERIDE = VC.REC<14,SEL>
      NEXT.EVENT = VC.REC<12,SEL>
      NEXT.EVENT.DATE = VC.REC<13,SEL>
      IF LOC.ZIP = '' THEN
         NEW.LOC = 1
         GO ENTER.ZIP
      END ELSE
         NEW.LOC = 0
         GO ENTER.WAIVED
      END

ENTER.ZIP:***
      IF BACK.FLAG AND NOT(NEW.LOC) THEN
         GO START.ENTRY
      END ELSE
         BACK.FLAG = 0
      END
      HELP="Enter zip code. [X]-Back [EX]it."
      MASK=LOC.ZIP'R%5'
      CALL GEN.IN(6,ROW,MASK,'',Q,0,5,'','',2,-5,ROW,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      IF QI='' THEN QI = VC.ZIP ; Q = VC.ZIP
      BEGIN CASE
         CASE QI='X'
            CRT @(4,ROW):VC.ZIP
            BACK.FLAG = 1
            GO START.ENTRY
         CASE QI='EX'
            STOP
         CASE QI MATCHES "5N"
            VC.ZIP=Q'R%5'
            READ ZIP.REC FROM F.ZIPS,VC.ZIP THEN
               VC.CITY=ZIP.REC<1>
               VC.STATE=ZIP.REC<2>
            END
         CASE 1
            CALL ELINE('INVALID ZIP, PLEASE TRY AGAIN')
            GO ENTER.ZIP
      END CASE
      LOC.ZIP = QI
      CRT @(6,ROW):LOC.ZIP'R%5'
      READ ZIP.REC FROM F.ZIPS,LOC.ZIP THEN
         LOC.CITY = ZIP.REC<1>
         LOC.STATE = ZIP.REC<2>
      END
      CRT @(12,ROW):LOC.CITY"L#15":' ':LOC.STATE"L#2"

*
ENTER.WAIVED:***
      HELP="Div/Loc Waived. [Y]es or [N]o [X]=Back or [EX]it."
      MASK=LOC.WAIVED'R#2'
      CALL GEN.IN(31,ROW,MASK,'',Q,0,2,'','',2,-1,ROW,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      IF QI='' THEN QI = LOC.WAIVED ; Q = LOC.WAIVED
      BEGIN CASE
         CASE QI='X'
            CRT @(31,ROW):LOC.WAIVED
            BACK.FLAG = 1
            GO ENTER.ZIP
         CASE QI='EX'
            STOP
         CASE QI='Y' OR QI=1
            LOC.WAIVED = 'Y'
         CASE QI='N' OR QI = 0
            LOC.WAIVED = 'N'
         CASE 1
            CALL ELINE('MUST BE YES OR NO, PLEASE TRY AGAIN')
            GO ENTER.WAIVED
      END CASE
      CRT @(32,ROW):LOC.WAIVED'L#1'

ENTER.OVERIDE:***
      HELP="Next Event Override. LTR[1] LTR[2] [D]M or [3]-Debit Memo [X]=Back or [EX]it."
      IF NEXT.EVENT.OVERIDE = '' THEN MASK = ' ' ELSE MASK=NEXT.EVENT.OVERIDE'L%4'
      CALL GEN.IN(36,ROW,MASK,'',Q,0,4,'L','',2,-4,ROW,0,QI,HELP,0,23)
      QI = OCONV(QI,'MCU')
      IF QI='' THEN QI = NEXT.EVENT.OVERIDE ; Q = NEXT.EVENT.OVERIDE
      BEGIN CASE
         CASE QI='X'
            CRT @(36,ROW):NEXT.EVENT.OVERIDE
            GO ENTER.WAIVED
         CASE QI='EX'
            STOP
         CASE QI=' ' OR QI = ''
            NEXT.EVENT.OVERIDE = ''
         CASE QI=1 OR QI='LTR1'
            NEXT.EVENT.OVERIDE = 'LTR1'
         CASE QI=2 OR QI='LTR2'
            NEXT.EVENT.OVERIDE = 'LTR2'
         CASE QI='D' OR QI='DM' OR QI = 3
            NEXT.EVENT.OVERIDE = 'DM'
         CASE 1
            CALL ELINE('MUST BE 1, 2, or D, PLEASE TRY AGAIN')
            GO ENTER.OVERIDE
      END CASE
      CRT @(36,ROW):NEXT.EVENT.OVERIDE'L#4'

      IF NEW.LOC THEN
         LOCATE LOC.ZIP IN VC.REC<11> BY 'AL' SETTING LOC.POS ELSE
            INS LOC.ZIP BEFORE VC.REC<11,LOC.POS>
            INS '' BEFORE VC.REC<12,LOC.POS>
            INS '' BEFORE VC.REC<13,LOC.POS>
            INS NEXT.EVENT.OVERIDE BEFORE VC.REC<14,LOC.POS>
            INS '' BEFORE VC.REC<15,LOC.POS>
            INS '' BEFORE VC.REC<16,LOC.POS>
            INS '' BEFORE VC.REC<17,LOC.POS>
            INS '' BEFORE VC.REC<18,LOC.POS>
            INS '' BEFORE VC.REC<19,LOC.POS>
            INS LOC.WAIVED BEFORE VC.REC<21,LOC.POS>
            WRITE VC.REC ON F.VC,VC.ID
         END
      END ELSE
         VC.REC<14,SEL> = NEXT.EVENT.OVERIDE
         VC.REC<21,SEL> = LOC.WAIVED
      END
      GOSUB DISPLAY.DATA
      GO ENTER.LINE



****************************************************************
* Display array
****************************************************************
DISPLAY.DATA:***
      CRT @(0,3):"  #  LocZip      City       ST Wvd Ovride NextLtr  ShpDate"
      CRT @(0,4):" --- ------ --------------- -- --- ------ ------- ---------"
      START=(PAGE*16)-15
      LOC.COUNT = DCOUNT(VC.REC<11>,@VM)
      IF START GT LOC.COUNT +1 THEN
         START=1
         PAGE=1
      END
      STOP=START+15
      FOR I=START TO STOP STEP 1
         ROW=4+REM(I,16)
         IF ROW=4 THEN ROW=20
         LOC.ZIP = VC.REC<11,I>
         IF LOC.ZIP # '' THEN
            READ ZIP.REC FROM F.ZIPS,LOC.ZIP THEN
               LOC.CITY = ZIP.REC<1>
               LOC.STATE = ZIP.REC<2>
            END
            LOC.WAIVED = VC.REC<21,I>
            NEXT.EVENT.OVERIDE = VC.REC<14,I>
            NEXT.EVENT = VC.REC<12,I>
            NEXT.EVENT.DATE = VC.REC<13,I>
            PRO.IDS = VC.REC<16,I>
            NUM.PROS = DCOUNT(PRO.IDS<1>,@SVM)
            LAST.PRO.ID = PRO.IDS<1,I,NUM.PROS>
            PRINT @(0,ROW):@(-4):I"R#3":@(5,ROW):LOC.ZIP"R%5":@(12,ROW):LOC.CITY"L#15":@(28,ROW):LOC.STATE"L#2":@(32,ROW):LOC.WAIVED"L#2":@(36,ROW):NEXT.EVENT.OVERIDE"L#6":@(44,ROW):NEXT.EVENT"L#5":@(50,ROW):NEXT.EVENT.DATE"D2/"
         END ELSE
            PRINT @(0,ROW):I"R#3":@(-4)
         END
      NEXT I
      RETURN



****************************************************************
* Initialize Variables
****************************************************************
INITIALIZE.VARIABLES:**

      BACK.FLAG = 0
      NEXT.EVENT = ''
      NEXT.EVENT.DATE = ''
      APPR.CARRIERS = ''
      LAST.APRR.CARRIER = ''
      LOC.ZIP=''
      LOC.CITY=''
      LOC.STATE=''
      LOC.COUNT = 0
      SEL=''
      RETURN
