*******************************************************************
* Program name : CREATE.SAGE.FP.EXPORT
* Author       : MIKE KERBOW
* Date written : 08-26-2014
* Library      : FBBP
* COPYRIGHT (c) : AFS, LLC 2016, All Rights Reserved.
*
* to create the import file into sage ERP system
*
* Last updated by afs (AFSLOGISTICS\gbino) at 08:11:50 on 03/30/2021.

* Start modification history
* 050515 - DRF02 - SysAid 10652 - Update client list of changes for SAGE export
* 112315 - DRF01 - SysAid 21289 Do not include client 00344 in the
*                  transaction that go to Sage
* 032219 - NKH01 - ACCU-316 Modified CREATE-FILE file sizes
* 020420 - DRF03 - ACCU-764 Performance Radiator - Per bill fee coding to FAP instead of LTL CM
* 072320 - GRB01 - ACCU-938 Add account number
* 101520 - DRF04 - Weekly processing fee is coded to SAGE code 0402.
* 033021 - GRBXX - Add due date
* End modification history
*******************************************************************
* PROGRAM NOTES : WORK RECORD FORMAT
* 001 - CLIENT NUMBER
* 002 - INVOICE DATE
* 003 - SALES CODE
* 004 - CARRIER NUMBER
* 005 - PRO NUMBER
* 006 - CARRIER INVOICE NUMBER
* 007 - DIVISION CODE
* 008 - REGION CODE
* 009 - INIT SALES REPRESENTATIVE (BD)
* 010 - BANK CODE
* 011 - CARRIER AMOUNT BILLED
* 012 - CARRIER AMOUNT REDUCED
* 013 - CARRIER AMOUNT PAID
* 014 - CUTBACK REASON
* 015 - AUDITOR NAME
* 016 - AUDITOR EMAIL
* 017 - DISTRIBUTION AMOUNT
* 018 - FLEX SALES CODE
* 019 - ACCOUNT NUMBER
* 020 - DUE DT


*********************************************************************

      GET (ARG.,1) CMD.DATE ELSE CMD.DATE=OCONV(DATE(),'D2/')
      DATE=ICONV(CMD.DATE,'D')
      ODATE=OCONV(DATE,'D4/')
*
* INITIALIZE VARIABLES
*
      V.CNT = 0
      SKIP.IT = 0
      PRO.NUM = ''

      GOSUB INIT.VARIABLES
      CALL GET.USER.NEW(USER,CH.NUM)

      * Begin GRB01
      VIN1=""
      VIN1<1> = 'CREATE.SAGE.FP.EXPORT.T'
      VIN1<2> = USER
      VIN1<3> = SYSTEM(18)
      VIN1<4> = "S"
      CALL PROGTRACK(VIN1,VOUT1)
      * End GRB01
*
* OPEN FILES
*
      GOSUB OPEN.FILES
      EXECUTE "CLEAR-FILE DATA SAGE.TEST"
*
* PREPARE THE WORK FILE
*
      DEBUG
      CRT @(0,0):@(-1):
      IF USER='DAVID' THEN CALL ELINE('PRESS BREAK')
      READ FP.PROC.REC FROM F.TABLES,'FP_PROCESS' THEN
**        CALL ELINE('FP processing is currently active. Please try again later.')
**         STOP
      END
      READU AR.POST.REC FROM F.TABLES,'AR_POSTING' ELSE AR.POST.REC=''
      IF AR.POST.REC#'' THEN
         CALL ELINE('AR is currently being posted by ':AR.POST.REC<1>:'. Please try again later.')
         STOP
      END ELSE
         AR.POST.REC<1>=USER
         AR.POST.REC<2>=DATE()
         AR.POST.REC<3>=TIME()
         WRITE AR.POST.REC ON F.TABLES,'AR_POSTING'
      END
      RELEASE F.TABLES,'AR_POSTING'

      CLEARFILE F.WORK

*
* START MAIN PROCESSING LOOP
*
      BRDG.STMT='SSELECT AR-BRIDGE '

      EXECUTE BRDG.STMT RTNLIST BRDG.LIST CAPTURING BRDG.RESULTS
      BRDG.TCNT=@SELECTED
      BRDG.EOF=0
      BRDG.CNT=0
      BRDG.PER=''
      PROC.LIST=''
*
* CREATE SELECTION DEFINITIONS
*
      DICT.REC=''
      DICT.REC<1>='A'
      DICT.REC<2>='1'
      DICT.REC<3>='Client#'
      DICT.REC<9>='R'
      DICT.REC<10>='5'
      WRITE DICT.REC ON D.WORK,'CLIENT#'
      DICT.REC<2>='3'
      DICT.REC<3>='SLS#'
      WRITE DICT.REC ON D.WORK,'SLS#'
      DICT.REC<2>='4'
      DICT.REC<3>='Carrier#'
      WRITE DICT.REC ON D.WORK,'CARRIER#'
      DICT.REC<3>='Carrier'
      DICT.REC<8>='TCARRIERS;X;;1'
      DICT.REC<9>='L'
      DICT.REC<10>='35'
      WRITE DICT.REC ON D.WORK,'CARRIER'
      DICT.REC<2>='5'
      DICT.REC<3>='Pro#'
      DICT.REC<8>=''
      DICT.REC<9>='L'
      DICT.REC<10>='25'
      WRITE DICT.REC ON D.WORK,'PRO#'

      WORK.ID=0
      TEST.ID = 0
      LOOP
         READNEXT BRDG.ID FROM BRDG.LIST ELSE BRDG.EOF=1
      UNTIL BRDG.EOF DO
         BRDG.CNT+=1
         CALL PROG.BAR(18,BRDG.CNT,BRDG.TCNT,BRDG.PER)
         READ BRDG.REC FROM F.AR.BRIDGE,BRDG.ID THEN

            *****  WRITE BRDG.REC ON F.AR.BRIDGE.LAST,BRDG.ID:'*':BRDG.REC<4>
            CLIENT.ID=BRDG.ID
            PROC.LIST<-1>=CLIENT.ID:@VM:BRDG.REC<4>

            PROC.DATE=BRDG.REC<4>
            BPROC.DATE=PROC.DATE-6
            READ CLIENT.REC FROM F.CLIENTS,CLIENT.ID ELSE
               CLIENT.REC=''
            END
            IF FIELD(BRDG.ID,'-',2)='TEST' THEN
               READ TEST.REC FROM F.AR.BRIDGE,BRDG.ID THEN
                  IF DCOUNT(TEST.REC,@AM)=17 AND TEST.REC<1>='' THEN
                     ******  DELETE F.AR.BRIDGE,BRDG.ID
                     **** GO SKIP.AR.BRIDGE
                     CONTINUE
                  END
               END
* - THIS RECORD CREATE DURING TESTING PHASE OF PROCESSING
               EMAIL.OUT=''
               EMAIL.OUT<1,1>='Accounting@afs.net'

               EMAIL.OUT<1,-1>='MMckay@afs.net'
               EMAIL.OUT<2,1>='DFriend@afs.net'

               EMAIL.OUT<3>=''
               EMAIL.OUT<4>='FBBP_CREATE.SAGE.FP.EXPORT@afs.net'
               EMAIL.OUT<5,1>='Cannot post AR for cust ':BRDG.ID:' due to testing configuration.'
               EMAIL.OUT<6,-1>=' '
               EMAIL.OUT<6,-1>=USER:' attempted to post AR for client ':BRDG.ID:' - ' :CLIENT.REC<2>
               EMAIL.OUT<6,-1>=' at ':OCONV(TIME(),'MTHS'):' on ':DATE()'D4/':'.'
               EMAIL.OUT<6,-1>=' '
               EMAIL.OUT<6,-1>='Cannot post AR for cust ':BRDG.ID:' due to testing configuration.'
               EMAIL.OUT<6,-1>='This record may need to be removed to avoid future messages. '
               EMAIL.OUT<7>=1
               VOUT=''
               CALL SENDMAIL(EMAIL.OUT,VOUT)
               CONTINUE
               ***GO SKIP.AR.BRIDGE
            END
            CLIENT.AUDITOR=CLIENT.REC<71>
            CLIENT.BANK=CLIENT.REC<81>
            READ BILLS.YTD.REC FROM F.BILLS.YTD,CLIENT.ID ELSE BILLS.YTD.REC=''
            LOCATE PROC.DATE IN BILLS.YTD.REC<40> BY 'AR' SETTING DPOS ELSE DPOS-=1
            IF DPOS>=2 THEN
               BPROC.DATE=BILLS.YTD.REC<40,DPOS-1>+1
            END
            SCT.FLG=0
            UNI.FLG=0
            UFM.FLG=0
            LGI.FLG=0
            TBS.FLG=0
            IF CLIENT.REC<92>='00002' THEN SCT.FLG=1
            IF CLIENT.REC<92>='00003' THEN UNI.FLG=1
            IF CLIENT.REC<92>='00004' THEN UFM.FLG=1
            IF CLIENT.REC<92>='00005' THEN LGI.FLG=1
            IF CLIENT.REC<92>='00009' THEN TBS.FLG=1
            PCLB.ARRAY=''
            PCLB.XREF.STMT='SELECT PCL.BILLING.XREF WITH BILL.CLIENT# = "':CLIENT.ID:'" AND WITH INV.DATE >= "':(BPROC.DATE)'D2/':'" AND WITH INV.DATE <= "':PROC.DATE'D2/':'"'
            EXECUTE PCLB.XREF.STMT RTNLIST PCLB.XREF.LIST CAPTURING PCLB.XREF.RESULTS
            PCLB.XREF.TCNT=@SELECTED
            IF PCLB.XREF.TCNT>0 THEN
               PCLB.XREF.EOF=0
               PCLB.XREF.CNT=0
               PCLB.XREF.REF=''
               LOOP
                  READNEXT PCLB.XREF.ID FROM PCLB.XREF.LIST ELSE PCLB.XREF.EOF=1
               UNTIL PCLB.XREF.EOF DO
                  PCLB.XREF.CNT+=1
                  READ PCLB.XREF.REC FROM F.PCLB.XREF,PCLB.XREF.ID THEN
                     PCLB.XREF.NVAL=DCOUNT(PCLB.XREF.REC,@VM)
                     FOR PCLB.XREF.VAL=1 TO PCLB.XREF.NVAL
                        PCLB.ID=PCLB.XREF.ID:'*':PCLB.XREF.REC<1,PCLB.XREF.VAL>
                        READ PCLB.REC FROM F.PCLB,PCLB.ID THEN
                           PCLB.SLS.CODE=PCLB.REC<24>
                           CODE=PCLB.SLS.CODE
                           GOSUB ADJ.SLS.CODE
                           PCLB.SLS.CODE=CODE
                           PCLB.SLS.AMT=PCLB.REC<17>
                           LOCATE PCLB.SLS.CODE IN PCLB.ARRAY<1> BY 'AR' SETTING PCLB.POS ELSE
                              INS PCLB.SLS.CODE BEFORE PCLB.ARRAY<1,PCLB.POS>
                              INS '0' BEFORE PCLB.ARRAY<2,PCLB.POS>
                           END
                           PCLB.ARRAY<2,PCLB.POS>+=PCLB.SLS.AMT
                        END
                     NEXT PCLB.XREF.VAL
                  END
               REPEAT
            END
            READ BANK.CTRL.REC FROM F.BANK.CTRL,CLIENT.ID ELSE BANK.CTRL.REC=''
            GOSUB OPEN.CLIENT.FILES
            READ PPP.FLG FROM F.PPP,CLIENT.ID THEN
               PPP.FLG = "Y"
            END ELSE
               PPP.FLG = "N"
            END
            **** filter here
            GOSUB FILTER.VALS

            FOR JJ = 1 TO 2
               IF JJ = 2 THEN
                  BRDG.REC = ITEM

               END

               NVAL=DCOUNT(BRDG.REC<1>,@VM)
               FOR VAL=1 TO NVAL
                  BRDG.SLS.CODE=BRDG.REC<1,VAL>
                  BRDG.SLS.QTY=BRDG.REC<2,VAL>
                  BRDG.SLS.AMT=BRDG.REC<3,VAL>
                  READ BRDG.SLS.REC FROM F.SLS.CODE,BRDG.SLS.CODE ELSE BRDG.SLS.REC=''
                  SAGE.SLS.CODE=BRDG.SLS.REC<19>
                  SLS.GRP=BRDG.SLS.REC<8>
                  DTL=1

                  IF SLS.GRP='CC' THEN
                     DTL=0
                  END
                  IF SLS.GRP='LG' THEN
                     DTL=0
                     IF INDEX(BRDG.SLS.CODE,'-',1) THEN
                        DTL=1
                     END
                     SCODE.TYPE='L'
                     IF BRDG.SLS.CODE='58' THEN SCODE.TYPE='P'
                     IF BRDG.SLS.CODE='62' THEN SCODE.TYPE='P'
                     IF BRDG.SLS.CODE='1058' THEN SCODE.TYPE='P'
                     IF BRDG.SLS.CODE='1062' THEN SCODE.TYPE='P'
                     IF BRDG.SLS.CODE='3058' THEN SCODE.TYPE='P'
                     IF BRDG.SLS.CODE='3062' THEN SCODE.TYPE='P'
                     IF BRDG.SLS.CODE='4058' THEN SCODE.TYPE='P'
                     IF BRDG.SLS.CODE='4062' THEN SCODE.TYPE='P'
                     IF BRDG.SLS.CODE='5058' THEN SCODE.TYPE='P'
                     IF BRDG.SLS.CODE='5062' THEN SCODE.TYPE='P'
                     IF BRDG.SLS.CODE='6058' THEN SCODE.TYPE='P'
                     IF BRDG.SLS.CODE='6062' THEN SCODE.TYPE='P'

                     LOCATE BRDG.SLS.CODE IN PCLB.ARRAY<1> SETTING TPOS THEN
                        IF BRDG.SLS.AMT=PCLB.ARRAY<2,TPOS> THEN DTL=1
                     END
                     IF BRDG.SLS.CODE='12' THEN DTL=1
                     IF BRDG.SLS.CODE='1012' THEN DTL=1
                     IF BRDG.SLS.CODE='3012' THEN DTL=1
                     IF BRDG.SLS.CODE='6012' THEN DTL=1
                     IF BRDG.SLS.CODE='7012' THEN DTL=1

                     IF BRDG.SLS.CODE='13' THEN DTL=1
                     IF BRDG.SLS.CODE='1013' THEN DTL=1
                     IF BRDG.SLS.CODE='3013' THEN DTL=1
                     IF BRDG.SLS.CODE='6013' THEN DTL=1
                     IF BRDG.SLS.CODE='7013' THEN DTL=1

                     IF BRDG.SLS.CODE='96' THEN DTL=1
                     IF BRDG.SLS.CODE='1096' THEN DTL=1
                     IF BRDG.SLS.CODE='3096' THEN DTL=1
                     IF BRDG.SLS.CODE='6096' THEN DTL=1
                     IF BRDG.SLS.CODE='7096' THEN DTL=1

                  END
                  IF SLS.GRP='OC' THEN
                     DTL=0
                     LOCATE BRDG.SLS.CODE IN PCLB.ARRAY<1> SETTING TPOS THEN
*                    IF BRDG.SLS.AMT=PCLB.ARRAY<2,TPOS> THEN DTL=1
                        BRDG.SLS.AMT=PCLB.ARRAY<2,TPOS>
                        DTL=1
                     END
                  END
                  IF DTL THEN
                     WORK.REC=''
                     WORK.REC<1>=CLIENT.ID
                     WORK.REC<2>=PROC.DATE 'D4/'
                     WORK.REC<3>=SAGE.SLS.CODE
                     IF CLIENT.ID='05171' AND BRDG.SLS.CODE='2' THEN
                        WORK.REC<3>='0101'
                     END
                     IF CLIENT.ID='04957' AND BRDG.SLS.CODE='7002' THEN          ; * DRF03
                        WORK.REC<3>='0120'         ; * DRF03
                     END                 ; * DRF03
                     IF CLIENT.ID='05118' AND BRDG.SLS.CODE='102' THEN           ; * DRF04
                        WORK.REC<3>='0402'         ; * DRF04
                     END                 ; * DRF04
                     IF CLIENT.ID='05755' AND BRDG.SLS.CODE='3' THEN
                        WORK.REC<3>='0620'
                     END
                     IF CLIENT.REC<316>='1' AND BRDG.SLS.CODE='2' THEN           ; * DRF03
                        WORK.REC<3>='0120'         ; * DRF03
                     END                 ; * DRF03
                     WORK.REC<9>=CLIENT.REC<114>
                     WORK.REC<17>=BRDG.SLS.AMT 'R26'
                     WORK.REC<18>=BRDG.SLS.CODE
                     IF JJ = 1 THEN
                        IF CLIENT.ID # '00344' THEN GOSUB WRITE.WORK.REC         ; * DRF01
                     END ELSE
                        TEST.ID+=1
                        WRITE WORK.REC ON F.TEST,TEST.ID
                     END
                  END
               NEXT VAL
            NEXT JJ
*
* START SECONDARY PROCESSING LOOP
*
            READ FPX.REC FROM F.FPX,PROC.DATE ELSE FPX.REC=''
            NATT=DCOUNT(FPX.REC,@AM)
            PER=''
            FOR ATT=1 TO NATT
               ****        CALL PROG.BAR(20,ATT,NATT,PER)
               HIST.ID=FPX.REC<ATT>

               CARRIER.ID=FIELD(HIST.ID,'*',1)
               PRO.NUM=FIELD(HIST.ID,'*',2)

               DUP=FIELD(HIST.ID,'*',3)
               IF DUP=0 THEN
                  READ HIST.REC FROM F.HIST,HIST.ID THEN

                     IF HIST.REC<8>='0' THEN
                        ADJ.STMT='SELECT FB.ADJUST.HIST WITH CLIENT# = "':CLIENT.ID:'" AND WITH PRO.ID = "':HIST.ID:'" AND WITH DATE > "':PROC.DATE'D2/':'" AND WITH @ID = "[*OLD"'
                        EXECUTE ADJ.STMT RTNLIST ADJ.LIST CAPTURING ADJ.RESULTS
                        IF @SELECTED = 1 THEN
                           READNEXT ADJ.ID FROM ADJ.LIST THEN
                              READ ADJ.REC FROM F.ADJ.HIST,ADJ.ID THEN
                                 HIST.REC=ADJ.REC
                              END
                           END
                        END
                     END
*
* DEFINE DATA ELEMENTS
*
                     SLS.CODE=''
                     COS.CODE=''
                     OVR.CODE=''
                     CM.CODE=''
                     DIV.ID=HIST.REC<9>
                     READ DIV.REC FROM F.DIV,DIV.ID ELSE DIV.REC=''
                     DISC.VAR=HIST.REC<10>
                     OVR.VAR=HIST.REC<11>
                     CM.VAR=HIST.REC<12>
                     TMODE.ID=HIST.REC<21>
                     READ TMODE.REC FROM F.TMODE,TMODE.ID ELSE TMODE.REC=''
                     AUDITOR=HIST.REC<89>
                     IF AUDITOR='' THEN AUDITOR=CLIENT.AUDITOR
                     READ AUDITOR.REC FROM F.BCTRL,AUDITOR ELSE AUDITOR.REC=''
                     BANK=HIST.REC<40>
                     BANK.ID='BANK*':BANK
                     READ BANK.REC FROM F.FB.BANKS,BANK.ID ELSE BANK.REC=''
                     BANK.FB.TYPE=BANK.REC<6>
                     IF BANK.FB.TYPE='V' THEN ANY.VOUCHER=1
                     EDI.PPR='PPR'
                     IF HIST.REC<88>#'' OR HIST.REC<53>[1,12]='EBILL.IMPORT' THEN
                        EDI.PPR='EDI'
                     END
                     IF EDI.PPR='EDI' THEN
                        BEGIN CASE

                           CASE 1
                              IF CARRIER.ID='01075' OR CARRIER.ID='00041' THEN
                                 SLS.CODE='22'
                                 IF BANK.FB.TYPE#'F' THEN
                                    COS.CODE='222'
                                 END
                              END ELSE
                                 SLS.CODE='21'
                                 IF BANK.FB.TYPE#'F' THEN
                                    COS.CODE='221'
                                 END
                              END
                        END CASE
                     END ELSE
                        SLS.CODE='1'
                        IF BANK.FB.TYPE#'F' THEN
                           COS.CODE='201'
                        END
                     END
                     BEGIN CASE
                        CASE CARRIER.ID='00015'
                           OVR.CODE='36'
                        CASE CARRIER.ID='00041'
                           OVR.CODE='32'
                        CASE CARRIER.ID='01075'
                           OVR.CODE='34'
                        CASE 1
                           OVR.CODE=TMODE.REC<3>
                     END CASE
                     CM.CODE=TMODE.REC<2>
*
* BUILD WORK RECORD
*
                     SKIP.IT = 0
                     BEGIN CASE

                        CASE SLS.CODE = 21 AND COS.CODE = 221
                           SKIP.IT=1

                        CASE SLS.CODE = 22 AND COS.CODE = 222
                           SKIP.IT=1

                        CASE SLS.CODE = 1 AND COS.CODE = 201
                           SKIP.IT=1

                        CASE 1
                     END CASE
                     IF COS.CODE # '' THEN

                     END
                     IF NOT(SKIP.IT) THEN
                        IF SLS.CODE#'' THEN
                           CODE=SLS.CODE
                           GOSUB ADJ.SLS.CODE
                           SLS.CODE=CODE
                           READ SLS.CODE.REC FROM F.SLS.CODE,SLS.CODE ELSE SLS.CODE.REC=''
                           WORK.REC=''
                           WORK.REC<1>=CLIENT.ID
                           WORK.REC<2>=PROC.DATE 'D4/'
                           WORK.REC<3>=SLS.CODE.REC<19>
                           WORK.REC<4>=CARRIER.ID
                           WORK.REC<5>=PRO.NUM
                           WORK.REC<6>=HIST.REC<94>
                           WORK.REC<7>=DIV.ID
                           WORK.REC<8>=DIV.REC<45>
                           WORK.REC<9>=CLIENT.REC<114>
                           WORK.REC<10>=HIST.REC<40>
                           WORK.REC<11>=HIST.REC<7> 'R26'
                           WORK.REC<12>=-(HIST.REC<10>+HIST.REC<11>+HIST.REC<12>) 'R26'
                           WORK.REC<13>=HIST.REC<8> 'R26'
                           WORK.REC<14>=HIST.REC<41,2>
                           WORK.REC<15>=AUDITOR
                           WORK.REC<16>=AUDITOR.REC<20>
                           WORK.REC<17>=HIST.REC<8> 'R26'
                           WORK.REC<18>=SLS.CODE
                           WORK.REC<19>=HIST.REC<291>        ; * GRB01
                           IF PPP.FLG = "Y" THEN
                              IF CARRIER.ID = "00015" OR CARRIER.ID = "01075" OR CARRIER.ID = "00041" THEN
                                 WORK.REC<20> = OCONV(HIST.REC<238>,"D4/")        ; * GRB02
                              END ELSE
                                 WORK.REC<20> = ""
                              END
                           END ELSE
                              WORK.REC<20> = ""
                           END
                           TEST.ID+=1    ; * GRB
                           WRITE WORK.REC ON F.TEST,TEST.ID  ; * GRB

                           IF CLIENT.ID # '00344' THEN GOSUB WRITE.WORK.REC      ; * DRF01
                        END

                        IF COS.CODE#'' THEN
                           CODE=COS.CODE
                           GOSUB ADJ.SLS.CODE
                           COS.CODE=CODE
                           READ COS.CODE.REC FROM F.SLS.CODE,COS.CODE ELSE COS.CODE.REC=''
                           WORK.REC=''
                           WORK.REC<1>=CLIENT.ID
                           WORK.REC<2>=PROC.DATE 'D4/'
                           WORK.REC<3>=COS.CODE.REC<19>
                           WORK.REC<4>=CARRIER.ID
                           WORK.REC<5>=PRO.NUM
                           WORK.REC<6>=HIST.REC<94>
                           WORK.REC<7>=DIV.ID
                           WORK.REC<8>=DIV.REC<45>
                           WORK.REC<9>=CLIENT.REC<114>
                           WORK.REC<10>=HIST.REC<40>
                           WORK.REC<11>=-HIST.REC<7> 'R26'
                           WORK.REC<12>=(HIST.REC<10>+HIST.REC<11>+HIST.REC<12>) 'R26'
                           WORK.REC<13>=-HIST.REC<8> 'R26'
                           WORK.REC<14>=HIST.REC<41,2>
                           WORK.REC<15>=AUDITOR
                           WORK.REC<16>=AUDITOR.REC<20>
                           WORK.REC<17>=-HIST.REC<8> 'R26'
                           WORK.REC<18>=COS.CODE
                           WORK.REC<19>=HIST.REC<291>        ; * GRB01
                           IF PPP.FLG = "Y" THEN
                              IF CARRIER.ID = "00015" OR CARRIER.ID = "01075" OR CARRIER.ID = "00041" THEN
                                 WORK.REC<20> = OCONV(HIST.REC<238>,"D4/")        ; * GRB02
                              END ELSE
                                 WORK.REC<20> = ""
                              END
                           END ELSE
                              WORK.REC<20> = ""
                           END
                           TEST.ID+=1    ; * GRB
                           WRITE WORK.REC ON F.TEST,TEST.ID  ; * GRB
                           IF CLIENT.ID # '00344' THEN GOSUB WRITE.WORK.REC      ; * DRF01
                        END

                     END
                     IF HIST.REC<43>+0#0 THEN
                        CODE=OVR.CODE
                        GOSUB ADJ.SLS.CODE
                        OVR.CODE=CODE
                        READ OVR.CODE.REC FROM F.SLS.CODE,OVR.CODE ELSE OVR.CODE.REC=''
                        WORK.REC=''
                        WORK.REC<1>=CLIENT.ID
                        WORK.REC<2>=PROC.DATE 'D4/'
                        WORK.REC<3>=OVR.CODE.REC<19>
                        WORK.REC<4>=CARRIER.ID
                        WORK.REC<5>=PRO.NUM
                        WORK.REC<6>=HIST.REC<94>
                        WORK.REC<7>=DIV.ID
                        WORK.REC<8>=DIV.REC<45>
                        WORK.REC<9>=CLIENT.REC<114>
                        WORK.REC<10>=HIST.REC<40>
                        WORK.REC<11>=HIST.REC<7> 'R26'
                        WORK.REC<12>=-(HIST.REC<10>+HIST.REC<11>+HIST.REC<12>) 'R26'
                        WORK.REC<13>=HIST.REC<8> 'R26'
                        WORK.REC<14>=HIST.REC<41,2>
                        WORK.REC<15>=AUDITOR
                        WORK.REC<16>=AUDITOR.REC<20>
                        WORK.REC<17>=HIST.REC<43> 'R26'
                        WORK.REC<18>=OVR.CODE
                        WORK.REC<19>=HIST.REC<291>           ; * GRB01
                        IF PPP.FLG = "Y" THEN
                           IF CARRIER.ID = "00015" OR CARRIER.ID = "01075" OR CARRIER.ID = "00041" THEN
                              WORK.REC<20> = OCONV(HIST.REC<238>,"D4/")           ; * GRB02
                           END ELSE
                              WORK.REC<20> = ""
                           END
                        END ELSE
                           WORK.REC<20> = ""
                        END
                        TEST.ID+=1       ; * GRB
                        WRITE WORK.REC ON F.TEST,TEST.ID     ; * GRB
                        IF CLIENT.ID # '00344' THEN GOSUB WRITE.WORK.REC         ; * DRF01
                     END

                     IF HIST.REC<44>+0#0 THEN
                        IF INDEX(CM.CODE,'-',1) THEN
                           CODE=FIELD(CM.CODE,'-',1)
                           SFX=FIELD(CM.CODE,'-',2)
                           GOSUB ADJ.SLS.CODE
                           CM.CODE=CODE:'-':SFX
                        END ELSE
                           CODE=CM.CODE
                           GOSUB ADJ.SLS.CODE
                           CM.CODE=CODE
                        END
                        READ CM.CODE.REC FROM F.SLS.CODE,CM.CODE ELSE CM.CODE.REC=''
                        WORK.REC=''
                        WORK.REC<1>=CLIENT.ID
                        WORK.REC<2>=PROC.DATE 'D4/'
                        WORK.REC<3>=CM.CODE.REC<19>
                        WORK.REC<4>=CARRIER.ID
                        WORK.REC<5>=PRO.NUM
                        WORK.REC<6>=HIST.REC<94>
                        WORK.REC<7>=DIV.ID
                        WORK.REC<8>=DIV.REC<45>
                        WORK.REC<9>=CLIENT.REC<114>
                        WORK.REC<10>=HIST.REC<40>
                        WORK.REC<11>=HIST.REC<7> 'R26'
                        WORK.REC<12>=-(HIST.REC<10>+HIST.REC<11>+HIST.REC<12>) 'R26'
                        WORK.REC<13>=HIST.REC<8> 'R26'
                        WORK.REC<14>=HIST.REC<41,2>
                        WORK.REC<15>=AUDITOR
                        WORK.REC<16>=AUDITOR.REC<20>
                        WORK.REC<17>=HIST.REC<44> 'R26'
                        WORK.REC<18>=CM.CODE
                        WORK.REC<19>=HIST.REC<291>           ; * GRB01
                        IF PPP.FLG = "Y" THEN
                           IF CARRIER.ID = "00015" OR CARRIER.ID = "01075" OR CARRIER.ID = "00041" THEN
                              WORK.REC<20> = OCONV(HIST.REC<238>,"D4/")           ; * GRB02
                           END ELSE
                              WORK.REC<20> = ""
                           END
                        END ELSE
                           WORK.REC<20> = ""
                        END
                        TEST.ID+=1       ; * GRB
                        WRITE WORK.REC ON F.TEST,TEST.ID     ; * GRB
                        IF CLIENT.ID # '00344' THEN GOSUB WRITE.WORK.REC         ; * DRF01
                     END
                  END
               END
            NEXT ATT
            *****          DELETE F.AR.BRIDGE,BRDG.ID
         END
SKIP.AR.BRIDGE:***
         RELEASE F.AR.BRIDGE,BRDG.ID
      REPEAT
*
* START EXPORT LOOP
*
      SEQ.CODE=1
TRY.NEXT.SEQ:***

      EXPORT.ID='SAGE-FPT-':ODATE[7,4]:ODATE[1,2]:ODATE[4,2]:'-':SEQ.CODE'R%3':'.TXT'
      ****    EXPORT.ID.TEST ='SAGE-TEST-':ODATE[7,4]:ODATE[1,2]:ODATE[4,2]:'-':SEQ.CODE'R%3':'.TXT'
      READ DUMMY FROM F.EXPORT,EXPORT.ID THEN
         SEQ.CODE=SEQ.CODE+1
         RELEASE F.EXPORT,EXPORT.ID
         GOTO TRY.NEXT.SEQ
      END
      EXPORT.REC=''
      HDR.REC=''
      HDR.REC<1>='Client#'
      HDR.REC<2>='Invoice Date'
      HDR.REC<3>='Sage Sales Code'
      HDR.REC<4>='Carrier#'
      HDR.REC<5>='Pro#'
      HDR.REC<6>='Carrier Inv#'
      HDR.REC<7>='Division Code'
      HDR.REC<8>='Region Code'
      HDR.REC<9>='Initial Sales Rep Code'
      HDR.REC<10>='Bank Code'
      HDR.REC<11>='Carrier Billed Amt'
      HDR.REC<12>='Carrier Reduced Amt'
      HDR.REC<13>='Carrier Paid Amt'
      HDR.REC<14>='Cutback Reason'
      HDR.REC<15>='Auditor'
      HDR.REC<16>='Auditor Email'
      HDR.REC<17>='Distribution Amt'
      HDR.REC<18>='FLEX Sales Code'
      HDR.REC<19>='Account Number'       ; * GRB01
      HDR.REC<20> = 'Due Date'           ; * GRB02
      HDR.LINE=CHANGE(LOWER(HDR.REC),@VM,'|')
      EXPORT.REC<-1>=HDR.LINE

      WORK.STMT='SSELECT FBWORK':CH.NUM:' BY CLIENT# BY SLS# BY CARRIER BY CARRIER# BY PRO#'

      EXECUTE WORK.STMT RTNLIST WORK.LIST CAPTURING WORK.RESULTS
      WORK.TCNT=@SELECTED
      WORK.EOF=0
      WORK.CNT=0
      WORK.PER=''

      LOOP
         READNEXT WORK.ID FROM WORK.LIST ELSE WORK.EOF=1
      UNTIL WORK.EOF DO
         WORK.CNT+=1
         CALL PROG.BAR(22,WORK.CNT,WORK.TCNT,WORK.PER)
         READ WORK.REC FROM F.WORK,WORK.ID THEN

            EXPORT.LINE=CHANGE(LOWER(WORK.REC),@VM,'|')
            EXPORT.REC<-1>=EXPORT.LINE
         END
      REPEAT

      WRITE EXPORT.REC ON F.EXPORT,EXPORT.ID
      DELETE F.TABLES,'AR_POSTING'
      VIN1=""
      VIN1<1> = 'CREATE.SAGE.FP.EXPORT.T'
      VIN1<2> = USER
      VIN1<3> = SYSTEM(18)
      VIN1<4> = "E"
      CALL PROGTRACK(VIN1,VOUT1)

      STOP

      ****************************************************************

      SEQ.CODE=1
      EXPORT.ID.TEST ='SAGE-TEST-':ODATE[7,4]:ODATE[1,2]:ODATE[4,2]:'-':SEQ.CODE'R%3':'.TXT'
      READ DUMMY FROM F.EXPORT,EXPORT.ID.TEST THEN
         SEQ.CODE=SEQ.CODE+1
         RELEASE F.EXPORT,EXPORT.ID
         GOTO TRY.NEXT.SEQ
      END
      EXPORT.REC=''
      HDR.REC=''
      HDR.REC<1>='Client#'
      HDR.REC<2>='Invoice Date'
      HDR.REC<3>='Sage Sales Code'
      HDR.REC<4>='Carrier#'
      HDR.REC<5>='Pro#'
      HDR.REC<6>='Carrier Inv#'
      HDR.REC<7>='Division Code'
      HDR.REC<8>='Region Code'
      HDR.REC<9>='Initial Sales Rep Code'
      HDR.REC<10>='Bank Code'
      HDR.REC<11>='Carrier Billed Amt'
      HDR.REC<12>='Carrier Reduced Amt'
      HDR.REC<13>='Carrier Paid Amt'
      HDR.REC<14>='Cutback Reason'
      HDR.REC<15>='Auditor'
      HDR.REC<16>='Auditor Email'
      HDR.REC<17>='Distribution Amt'
      HDR.REC<18>='FLEX Sales Code'
      HDR.REC<19>='Account Number'       ; * GRB01
      HDR.REC<20> = 'Due Date'           ; * GRB02
      HDR.LINE=CHANGE(LOWER(HDR.REC),@VM,'|')
      EXPORT.REC<-1>=HDR.LINE

      WORK.STMT='SSELECT SAGE.TEST BY CLIENT# BY SLS# BY CARRIER BY CARRIER# BY PRO#'
      EXECUTE WORK.STMT RTNLIST WORK.LIST CAPTURING WORK.RESULTS
      WORK.TCNT=@SELECTED
      WORK.EOF=0
      WORK.CNT=0
      WORK.PER=''

      LOOP
         READNEXT WORK.ID FROM WORK.LIST ELSE WORK.EOF=1
      UNTIL WORK.EOF DO
         WORK.CNT+=1
         CALL PROG.BAR(22,WORK.CNT,WORK.TCNT,WORK.PER)
         READ WORK.REC FROM F.TEST,WORK.ID THEN
            EXPORT.LINE=CHANGE(LOWER(WORK.REC),@VM,'|')
            EXPORT.REC<-1>=EXPORT.LINE
         END
      REPEAT

      WRITE EXPORT.REC ON F.EXPORT,EXPORT.ID.TEST


      VIN1=""
      VIN1<1> = 'CREATE.SAGE.FP.EXPORT.T'
      VIN1<2> = USER
      VIN1<3> = SYSTEM(18)
      VIN1<4> = "E"
      CALL PROGTRACK(VIN1,VOUT1)
      STOP
      *************************************************************

*
* Here is where the cleanup needs to happen to AR-BRIDGE and FB.PRE.OPEN.BILLS
*
      N.ATTRS = DCOUNT(PROC.LIST,CHAR(254))
      FOR II = 1 TO N.ATTRS
*
         ID = PROC.LIST<II,1>
         W.PROC.DATE = PROC.LIST<II,2>
*
         OPEN '','FB.OPEN.DATE.XREF,':ID TO F.OPEN.DATE.XREF ELSE
            EXECUTE 'CREATE-FILE DATA FB.OPEN.DATE.XREF,':ID:' 23,2' CAPTURING OUTPUT      ; * NKH01
            OPEN '','FB.OPEN.DATE.XREF,':ID TO F.OPEN.DATE.XREF ELSE
               CALL ELINE("Cannot Create FB.OPEN.DATE.XREF,":ID)
               GOTO UPDATE.FB.OPEN.END
            END
         END
*
*
         READ XREF.REC FROM F.OPEN.DATE.XREF, W.PROC.DATE ELSE XREF.REC = ""
*
         EOF = "N"
         CNT = 0
         W.SEN = \SSELECT FB.PRE.OPEN.BILLS WITH CLIENT# = "\:ID:\"\
         EXECUTE W.SEN PASSLIST CAPTURING RESULT2
         N.ITMS = @SELECTED
*
         LOOP
            READNEXT ID.OPEN ELSE EOF = "Y"
            IF MOD(CNT,10) = 0 THEN CRT @(10,10):ID:"  Processed ":CNT:" of ": N.ITMS:"    "
            CNT += 1
         UNTIL EOF = "Y" DO
            READ PRE.OPEN.REC FROM F.PRE.OPEN, ID.OPEN THEN

               XREF.REC<-1> = ID.OPEN
            END

         REPEAT
*
         IF XREF.REC NE "" THEN
            *****   WRITE XREF.REC ON F.OPEN.DATE.XREF, W.PROC.DATE
         END
      NEXT II
UPDATE.FB.OPEN.END:***
*

      DELETE F.TABLES,'AR_POSTING'
      * Begin GRB01
      VIN1=""
      VIN1<1> = 'CREATE.SAGE.FP.EXPORT.T1'
      VIN1<2> = USER
      VIN1<3> = SYSTEM(18)
      VIN1<4> = "E"
      CALL PROGTRACK(VIN1,VOUT1)
      * End GRB01
*
* FINISH PROGRAM
*
      STOP

********************************************
INIT.VARIABLES:*
********************************************
*
      PIPE="|"
      TB=CHAR(9)
      PROG.NAME='CREATE.SAGE.FP.EXPORT.T'
      CLIENT.ID=''
      RETURN
*********************************************
OPEN.FILES:*
*********************************************
******      OPEN '','ARBU' TO F.AR.BRIDGE ELSE
      OPEN '','AR-BRIDGE' TO F.AR.BRIDGE ELSE
         CALL OPEN.ABORT('AR.BRIDGE',PROG.NAME)
      END
      OPEN '','AR.BRIDGE.LAST' TO F.AR.BRIDGE.LAST ELSE
         CALL OPEN.ABORT('AR.BRIDGE.LAST',PROG.NAME)
      END
      OPEN '','AR.SALES.CODE.1000.1' TO F.SLS.CODE ELSE
         CALL OPEN.ABORT('AR.SALES.CODE.1000.1',PROG.NAME)
      END
      OPEN '','BCTRL' TO F.BCTRL ELSE
         CALL OPEN.ABORT('BCTRL',PROG.NAME)
      END
      OPEN '','BILLDATA.':USER TO F.BILLDATA ELSE
         CALL OPEN.ABORT('BILLDATA.':USER,PROG.NAME)
      END
      OPEN '','CARRIERS' TO F.CARRIERS ELSE
         CALL OPEN.ABORT('CARRIERS',PROG.NAME)
      END
      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         CALL OPEN.ABORT('CLIENTS',PROG.NAME)
      END
      OPEN 'DICT','FBWORK':CH.NUM TO D.WORK ELSE
         CALL OPEN.ABORT('DICT FBWORK':CH.NUM,PROG.NAME)
      END
      OPEN '','FB.ADJUST.HIST' TO F.ADJ.HIST ELSE
         CALL OPEN.ABORT('FB.ADJUST.HIST',PROG.NAME)
      END
      OPEN '','FB.BANK.CTRL' TO F.BANK.CTRL ELSE
         CALL OPEN.ABORT('FB.BANK.CTRL',PROG.NAME)
      END
      OPEN '','FB.BANKS' TO F.FB.BANKS ELSE
         CALL OPEN.ABORT('FB.BANKS',PROG.NAME)
      END
      OPEN '','FB.BILLS.YTD' TO F.BILLS.YTD ELSE
         CALL OPEN.ABORT('FB.BILLS.YTD',PROG.NAME)
      END
      OPEN '','FB.TABLES' TO F.TABLES ELSE
         CALL OPEN.ABORT('FB.TABLES',PROG.NAME)
      END
      OPEN '','FB.TRANSPORT' TO F.TMODE ELSE
         CALL OPEN.ABORT('FB.TRANSPORT',PROG.NAME)
      END
      EXECUTE 'RESIZE FBWORK':CH.NUM:' 18 100007 1' CAPTURING RESULTS
      OPEN '','FBWORK':CH.NUM TO F.WORK ELSE
         CALL OPEN.ABORT('FBWORK':CH.NUM,PROG.NAME)
      END
      OPEN '','PCL.BILLING' TO F.PCLB ELSE
         CALL OPEN.ABORT('PCL.BILLING',PROG.NAME)
      END
      OPEN '','PCL.BILLING.XREF' TO F.PCLB.XREF ELSE
         CALL OPEN.ABORT('PCL.BILLING.XREF',PROG.NAME)
      END
      OPEN '','SAGE.EXPORT.TRANS' TO F.EXPORT ELSE
         CALL OPEN.ABORT('SAGE.EXPORT.TRANS',PROG.NAME)
      END
      OPEN '','FB.OPEN.BILLS' TO F.OPEN ELSE
         CALL OPEN.ABORT('FB.OPEN.BILLS',PROG.NAME)
      END
      OPEN '','FB.PRE.OPEN.BILLS' TO F.PRE.OPEN ELSE
         CALL OPEN.ABORT('FB.PRE.OPEN.BILLS',PROG.NAME)
      END
      OPEN '','SAGE.TEST' TO F.TEST ELSE
         CALL OPEN.ABORT('SAGE.TEST',PROG.NAME)
      END
      OPEN '','PPP.CLIENT' TO F.PPP ELSE
         CALL OPEN.ABORT('PPP.CLIENT',PROG.NAME)
      END
*
OPEN.CLIENT.FILES:*
*
      IF CLIENT.ID#'' THEN
         OPEN '','DIVISION.CODES,':CLIENT.ID TO F.DIV ELSE
*
            ***  CALL OPEN.ABORT('DIVISION.CODES,':CLIENT.ID,PROG.NAME)
         END
         OPEN '','FB.BILLS.HIST,':CLIENT.ID TO F.HIST ELSE
            CALL OPEN.ABORT('FB.BILLS.HIST,':CLIENT.ID,PROG.NAME)
         END
         OPEN '','FB.PROC.DATE.XREF,':CLIENT.ID TO F.FPX ELSE
            CALL OPEN.ABORT('FB.PROC.DATE.XREF,':CLIENT.ID,PROG.NAME)
         END
      END
      RETURN
*********************************************
WRITE.WORK.REC:*
*********************************************
      WORK.ID+=1
      WRITE WORK.REC ON F.WORK,WORK.ID

      RETURN
*********************************************
ADJ.SLS.CODE:*
*********************************************
      IF CODE<1000 THEN
         IF SCT.FLG THEN
            CODE+=1000
         END
         IF UNI.FLG THEN
            CODE+=3000
         END
         IF UFM.FLG THEN
            CODE+=6000
         END
         IF LGI.FLG THEN
            CODE+=7000
         END
      END
      RETURN
*****************************************************
FILTER.VALS:
****************************************************

      ITEM = BRDG.REC
      ITEM.CNT = DCOUNT(BRDG.REC<1>,@VM)
      FOR X = 1 TO ITEM.CNT
         ITEM.AMT = ITEM<3,X>
         IF ITEM.AMT GT 0 THEN
            ITEM.AMT = ITEM.AMT * (-1)

            LOCATE ITEM.AMT IN ITEM<3> SETTING TPOS THEN     ; * check for offsetting amounts
               IF LEN(ITEM<1,X>) = 4 THEN
                  ***  ITEM<1,X> = ITEM<1,X>[2,3] * 1
                  CODE1 = ITEM<1,X>[2,3] * 1
               END ELSE
                  CODE1 = ITEM<1,X>
               END

               IF LEN(ITEM<1,TPOS>) = 4 THEN
                  *** ITEM<1,TPOS> = ITEM<1,TPOS>[2,3] *1
                  CODE2 = ITEM<1,TPOS>[2,3] *1
               END ELSE
                  CODE2 = ITEM<1,TPOS>
               END

*********** now check for offsetting codes
               BEGIN CASE
                     **   CASE ITEM<1,X> = 1 AND ITEM<1,TPOS> = 201
                  CASE CODE1 = 1 AND CODE2 = 201
                     REMOVE.VAL = 1
                     ***   CASE ITEM<1,X> = 21 AND ITEM<1,TPOS> = 221
                  CASE CODE1 = 21 AND CODE2 = 221
                     REMOVE.VAL = 1
                     **   CASE ITEM<1,X> = 22 AND ITEM<1,TPOS> = 222
                  CASE CODE1 = 22 AND CODE2 = 222
                     REMOVE.VAL = 1
                  CASE 1
                     REMOVE.VAL = 0
               END CASE

               IF REMOVE.VAL THEN
                  FOR J = 1 TO 3
                     ITEM = DELETE(ITEM,J,TPOS,0)
                  NEXT J
                  FOR J = 1 TO 3
                     ITEM = DELETE(ITEM,J,X,0)
                  NEXT J
               END
               EOJ = 1
               X = X -1
               ITEM.CNT = ITEM.CNT - 2
               CONTINUE
            END
         END
      NEXT X
      RETURN

***** 1:    )1^2532^2537^253201
***** 2:    )26^2531^2531^253-1
***** 3:    )156723^2531482^253294^253-156723
*****
*****
***** 1:    )1^25322^253222
***** 2:    )0^25319^253-19
***** 3:    )0^25372302^253-72302
*****
***** 1:    )1^25322^253222
***** 2:    )0^25319^253-19
***** 3:    )0^25372302^253-72302
      RETURN
   END
