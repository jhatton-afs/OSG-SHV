***********************************************************************
* Program : FB.IMPORT.CLORE.BOL 
* Author  : James Barberousse
* Date    : February 2002
*
* Import text data from Clore Automotive (saved as CLORE.TXT in Myra's
* U drive) and wrtie BOL number in FB.BOL.CRX,01157.
*
* Copyright (c) 2002 by AFS Logistics, LLC. -- All Rights Reserved
*
* Copied over from FB.IMPORT.IDEAL.BOL on 6/10/03. - DRF
***********************************************************************

$INCLUDE PROG.ADMIN INC_OPTIONS

*
***   Initialize general variables
*
      CALL GET.USER(USER.NAME)
      CALL CHANNEL(CH.NUM)
      PROG.NAME='FB.IMPORT.CLORE.BOL'
      PROG.DESC='Import Clore BOL Codes'
      PACK.NAME='Freight Payment'
      PROMPT''
       UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'FB.IMPORT.CLORE.BOL' ; UPL.VOUT = ''                    ;* NPR_UPL 04/23/2010
       CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/23/2010
      MASK.CHAR='-'
      TAB=CHAR(9)
      ESC=CHAR(27)

*
***   Write screen header
*
      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      CRT @(0,2):STR('=',79)

*
***   Restrict program usage
*
      VALID.USER=1
      BEGIN CASE
         CASE USER.NAME='OWEN'
            NULL
         CASE USER.NAME='MYRA'
            NULL
         CASE USER.NAME='DAVID'
            NULL
         CASE USER.NAME='J-AMES'
            NULL
         CASE 1
            VALID.USER=0
      END CASE

      IF NOT(VALID.USER) THEN
         CRT 'This is a restricted access application.'
         GOTO THE.END
      END


100:  LN='Are you ready to process BOL codes for Clore Automotive 01157? '
      MASK='N-'
      HELP='[Y]=Yes [N]=No [EX]=Exit'
      CALL GEN.IN(0,5,LN:MASK,'',Q,0,2,'','',2,-2,5,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX' OR QI='N' OR QI=''
            GOTO THE.END
         CASE QI='Y'
            NULL
         CASE 1
            GOTO 100
      END CASE

*
***   Initialize input variables with their defaults
*
      CLORE.IMPORT=''
      CLORE.LAST.IMPORT=''
      CLORE.EXPORT=''
      COUNTER=0

*
***   Open files
*
      OPEN '','BILLDATA.MYRA' TO F.BILLDATA ELSE
         CALL OPEN.ABORT('BILLDATA.MYRA',PROG.NAME)
      END
      OPEN '','FB.BOL.CRX,01157' TO F.BOL ELSE
         CALL OPEN.ABORT('FB.BOL.CRX,01157',PROG.NAME)
      END

*
***   Read in the existing Clore text file
*
*     Format of Clore Text file     Format of FB.BOL.CRX,01157
*     Tab-delimited with possible spaces     ITEM ID = O*BOL#
*     -----------------------------------------------------------------
*     ( 1) FType                             < 5>                    
*     ( 2) Invoice No                        < 6>
*     ( 3) Bill of Lading                    <11> checked
*     ( 4) Invoice Date                      < 7>
*     ( 5) Divsion Group                     < 8>                     
*     ( 6) PO #                              < 9> 
*     ( 7) Ship Date                         <10>
*     ( 8) Carrier                           <12>
*     ( 9) Pro#                              <13> 
*     (10) # of Units                        <14>
*     (11) Weight                            <15>
*     (12) Ship To Name                      <16>
*     (13) City                              <17>
*     (14) State                             <18>
*     (15) Postal Code                       <19>

      READ CLORE.IMPORT FROM F.BILLDATA,'CLORE.TXT' ELSE
         CALL ELINE('CLORE.TXT does not exist.')
         GOTO THE.END
      END
      CLORE.LAST.IMPORT=CLORE.IMPORT; * Save file for writing as "last"

*
***   Process the file
*
      CLORE.IMPORT=CHANGE(CLORE.IMPORT,TAB,@VM)
      NUM.ATTRIBUTES=DCOUNT(CLORE.IMPORT,@AM)

*     Trim possible spaces off
      FOR X=1 TO NUM.ATTRIBUTES
         NUM.VALUES=DCOUNT(CLORE.IMPORT<X>,@VM)
         FOR Y=1 TO NUM.VALUES
            CLORE.IMPORT<X,Y>=TRIM(CLORE.IMPORT<X,Y>)
         NEXT Y
      NEXT X


      ALREADY.THERE=0
      NOT.THERE=0
      ALREADY.FOUND=0
IF USER.NAME='DAVID' THEN CALL ELINE('PRESS BREAK')

      LOOP WHILE CLORE.IMPORT#''
         COUNTER+=1
         ITEM.ID=CLORE.IMPORT<1,3>
         IF ITEM.ID='' OR NOT(NUM(ITEM.ID)) THEN
           IF ALREADY.FOUND THEN
             CALL ELINE('Error a Invalid BOL found in the middle of the file')
           END ELSE
             IF COUNTER > 13 THEN
               CALL ELINE('More than 13 lines have been skipped')
             END
             GOTO SKIP.BOL
           END
         END
         ALREADY.FOUND=1
         GOSUB BUILD.EXPORT
         READ BOL.ITEM FROM F.BOL,ITEM.ID THEN
            ALREADY.THERE+=1
*DF            IF BOL.ITEM<13>#CLORE.IMPORT<1,9> THEN
*DF               GOSUB SEND.EMAIL.WARNING
*DF            END
         END ELSE
            NOT.THERE+=1
            WRITE CLORE.EXPORT ON F.BOL,ITEM.ID ELSE
               CALL ELINE("Couldn't write item: ":ITEM.ID)
            END
         END
SKIP.BOL:***
         DEL CLORE.IMPORT<1>
      REPEAT
      
      WRITE CLORE.LAST.IMPORT ON F.BILLDATA,'CLORE-LAST.TXT' THEN
         WRITE CLORE.LAST.IMPORT ON F.BILLDATA,'CLORE-':TIMEDATE():'.TXT'
         DELETE F.BILLDATA,'CLORE.TXT'; * Delete the original Ideal text file
      END ELSE
         CALL ELINE("Couldn't write CLORE-LAST.TXT. Not deleting CLORE.TXT. Call David.")
      END

      CRT @(0,15):'Items already in the file and not rewritten = ':ALREADY.THERE
      CRT @(0,17):'Items not in the file and written           = ':NOT.THERE
      CALL ELINE('')

      GOTO THE.END


BUILD.EXPORT:***
*     Build export line
      CLORE.EXPORT=''
      CLORE.EXPORT< 5>=CLORE.IMPORT<1, 1>
      CLORE.EXPORT< 6>=CLORE.IMPORT<1, 2>
      INV.DATE=CLORE.IMPORT<1, 4>
      INV.DATE=INV.DATE[3,2]:'-':INV.DATE[5,2]:'-':INV.DATE[1,2]
      INV.DATE=ICONV(INV.DATE,'D')
      CLORE.EXPORT< 7>=INV.DATE
      CLORE.EXPORT< 8>=CLORE.IMPORT<1, 5>
      CLORE.EXPORT< 9>=CLORE.IMPORT<1, 6>
      SHIP.DATE=CLORE.IMPORT<1, 7>
      SHIP.DATE=SHIP.DATE[3,2]:'-':SHIP.DATE[5,2]:'-':SHIP.DATE[1,2]
      SHIP.DATE=ICONV(SHIP.DATE,'D')
      CLORE.EXPORT<10>=SHIP.DATE
      CLORE.EXPORT<11>=CLORE.IMPORT<1, 3>
      CLORE.EXPORT<12>=CLORE.IMPORT<1, 8>
      CLORE.EXPORT<13>=CLORE.IMPORT<1, 9>
      CLORE.EXPORT<14>=CLORE.IMPORT<1,10>
      CLORE.EXPORT<15>=CLORE.IMPORT<1,11>
      CLORE.EXPORT<16>=CLORE.IMPORT<1,12>
      CLORE.EXPORT<17>=CLORE.IMPORT<1,13>
      CLORE.EXPORT<18>=CLORE.IMPORT<1,14>
      CLORE.EXPORT<19>=CLORE.IMPORT<1,15>
      RETURN


SEND.EMAIL.WARNING:***
*     Send a email to Owen, David and Myra warning that there is a
*     duplicate BOL with a different PRO #
      VIN=''
      VOUT=''

      VIN<1,1>='oweninfo@afs.net';                      * TO: Email addresses
      VIN<1,2>='David@afs.net'
****      VIN<1,3>='Myra@afs.net'

      VIN<2>='';                                             * CC: Email addresses      
      VIN<3>='';                                             * BCC: Email addresses
      VIN<4>='Reports@afs.net';                     * From Email address
      VIN<5,1>='Clore Automotive 01157 ':DATE()'D4-';          * Subject of Email

      * Email body
      VIN<6,-1>='                           W A R N I N G'
      VIN<6,-1>=' '
      VIN<6,-1>='During processing of the Clore Automotive (01157) weekly CLORE.TXT file on ':DATE()'D4-':','
      VIN<6,-1>='A different PRO # was found for the same BOL'
      VIN<6,-1>=' '
      VIN<6,-1>='Item-ID : ':ITEM.ID
      VIN<6,-1>='Pro # already in the file :       ':BOL.ITEM<13>
      VIN<6,-1>='New Pro # (not written to file) : ':CLORE.IMPORT<1,9>

      VIN<7>=1; * Auto format (add carriage returns to end of text)

      CALL SENDMAIL(VIN,VOUT)
      IF VOUT<1>='ERROR' THEN
         CALL ELINE('Email warning of differing Pro # could not be sent.')
      END
      RETURN     


THE.END:***
*     End of program
      CRT @(0,23):
      END
