*******************************************************
* Program name : COPY.CLIENT.FILES
* Author       : David Friend
* Date written : UNKNOWN
* Library      : FBBP
* COPYRIGHT (C) 2016 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED.
*
* Copy all associated client file from one client to other client
*
* Last updated by afs (AFSLOGISTICS\nmeddaugh) at 09:22:51 on 04/03/2019.
*
* Start modification history
* 04/03/19 : NKH01 : ACCU-316 Modified CREATE-FILE file sizes
* End modification history
*
*******************************************************
*
*     Company and Program variables
*
      CO.NAME='AFS Logistics, LLC'
      PROG.NAME='Copy Client Files'
      PROG.DESC='Copy Client Files'
      PACK.NAME='Freight Payment'
      CALL GET.USER(USER.NAME)
       UPL.VIN = 'FBBP' ;  UPL.VIN<2> = 'CHANGE.EDI.CLIENT' ; UPL.VOUT = ''                    ;* NPR_UPL 04/22/2010
       CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)                                                           ;* NPR_UPL 04/22/2010
      USER.NAME=OCONV(USER.NAME,'MCU')
      BEGIN CASE
*
* Authorized Users
*
         CASE USER.NAME = 'DAVID'
         CASE USER.NAME = 'GBINO'
         CASE USER.NAME = 'MYRA'
         CASE USER.NAME = 'NMEDDAUGH'
         CASE USER.NAME = 'NPRATT'
         CASE USER.NAME = 'BRIAN'
         CASE USER.NAME = 'KAREN'
*
* Restrict the other MoFo's
*
         CASE 1
            CALL FB.PRINT.CENT(1,80,12,'Restricted Access Application')
            CALL FB.PRINT.CENT(1,80,14,'Access Denied! See Owen for Access')
            CALL ELINE(' ')
            GOTO 9999
      END CASE
      MASK.CHAR='-'

*
*     Open files to start
*
      OPEN '','CLIENTS' TO F.CLIENTS ELSE
         CALL OPEN.ABORT('CLIENTS',PROG.NAME)
      END

*
*     List of input variables.  Defaults are assigned.
*     
90:****
      FROM.CLIENT.ID=''
      FROM.CLIENT.REC=''
      FROM.CLIENT.NAME=''
      FROM.CLIENT.ADDR=''
      FROM.CLIENT.CITY=''
      FROM.CLIENT.STATE=''
      FROM.CLIENT.ZIP=''

      TO.CLIENT.ID=''
      TO.CLIENT.REC=''
      TO.CLIENT.NAME=''
      TO.CLIENT.ADDR=''
      TO.CLIENT.CITY=''
      TO.CLIENT.STATE=''
      TO.CLIENT.ZIP=''
      NAME.ARR=''
      NAME.ARR<1,-1>='DIVISION.CODES,'
      NAME.ARR<2,-1>=23                   ; * NKH01
      NAME.ARR<1,-1>='EDI.BILLS.HIST,'
      NAME.ARR<2,-1>=1009                 ; * NKH01
      NAME.ARR<1,-1>='EXPENSE.CODES,'
      NAME.ARR<2,-1>=53                   ; * NKH01
      NAME.ARR<1,-1>='EXPENSE.CODE.XREF,'
      NAME.ARR<2,-1>=7
      NAME.ARR<1,-1>='FB.AUDIT,'
      NAME.ARR<2,-1>=101                  ; * NKH01
      NAME.ARR<1,-1>='FB.AUDIT.PP,'
      NAME.ARR<2,-1>=7
      NAME.ARR<1,-1>='FB.AUDIT.TABLES,'
      NAME.ARR<2,-1>=503                  ; * NKH01
      NAME.ARR<1,-1>='FB.AUDIT.ZIPS,'
      NAME.ARR<2,-1>=101                  ; * NKH01
      NAME.ARR<1,-1>='FB.BILLS,'
      NAME.ARR<2,-1>=1009                 ; * NKH01
      NAME.ARR<1,-1>='FB.BILLS.ACCESS,'
      NAME.ARR<2,-1>=1009                 ; * NKH01
      NAME.ARR<1,-1>='FB.BILLS.HIST,'
      NAME.ARR<2,-1>=1009                 ; * NKH01
      NAME.ARR<1,-1>='FB.BILLS.SUMMARY,'
      NAME.ARR<2,-1>=31                   ; * NKH01
      NAME.ARR<1,-1>='FB.BOL.CRX,'
      NAME.ARR<2,-1>=1009                 ; * NKH01
      NAME.ARR<1,-1>='FB.CLIENTS.CUSTS,'
      NAME.ARR<2,-1>=7
      NAME.ARR<1,-1>='FB.MISROUTES,'
      NAME.ARR<2,-1>=1
      NAME.ARR<1,-1>='FB.PROC.DATE.XREF,'
      NAME.ARR<2,-1>=503
      NAME.ARR<1,-1>='FB.REPORT,'
      NAME.ARR<2,-1>=101
      NAME.ARR<1,-1>='FB.REVIEW,'
      NAME.ARR<2,-1>=101
      NAME.ARR<1,-1>='FB.REVIEW.HIST,'
      NAME.ARR<2,-1>=5003
      NAME.ARR<1,-1>='FB.TEM,'
      NAME.ARR<2,-1>=101
      NAME.ARR<1,-1>='FB.TEM.HIST,'
      NAME.ARR<2,-1>=101
      NAME.ARR<1,-1>='FB.TL.BIDS,'
      NAME.ARR<2,-1>=7
      NAME.ARR<1,-1>='FB.UNPROCESS,'
      NAME.ARR<2,-1>=1009                 ; * NKH01
      NAME.ARR<1,-1>='REGION.CODES,'
      NAME.ARR<2,-1>=7
      NAME.ARR<1,-1>='SDX.VEND.CUST,'
      NAME.ARR<2,-1>=139                  ; * NKH01
      NAME.ARR<1,-1>='VARIANCE.CODES,'
      NAME.ARR<2,-1>=7                    ; * NKH01
      NAME.ARR<1,-1>='VEND.CUST,'
      NAME.ARR<2,-1>=1009                 ; * NKH01
      NAME.ARR<1,-1>='VEND.CUST.EDI.XREF,'
      NAME.ARR<2,-1>=131                  ; * NKH01
      NAME.ARR<1,-1>='VEND.CUST,NAMES,'
      NAME.ARR<2,-1>=601                  ; * NKH01
      NAME.ARR<1,-1>='VEND.CUST.XREF,'
      NAME.ARR<2,-1>=401                  ; * NKH01
      NAME.ARR<1,-1>='VEND.CUST.ZIPS,'
      NAME.ARR<2,-1>=131                  ; * NKH01
      NAME.ARR<1,-1>='ZIP.DIV.XREF,'
      NAME.ARR<2,-1>=23                   ; * NKH01

      GOSUB GET.SCREEN.DISPLAY

*
*     Display heading and prompts
*
      CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      CRT @(0,2):STR('=',79)
      CRT SCREEN.DISPLAY

*
*     Get Client ID
*
100:***
      CRT @(23,4):@(-4):@(17,5):@(-4):@(17,6):@(-4):
      MASK=FROM.CLIENT.ID:STR(MASK.CHAR,5-LEN(FROM.CLIENT.ID))
      HELP='Enter from Client ID Number or Name for Search. [X]=Exit [EX]=Exit'
      CALL GEN.IN(23,4,MASK,'',Q,0,20,'','',2,23,4,0,QI,HELP,0,23)
      QI=TRIM(OCONV(QI,'MCU'))
      BEGIN CASE
         CASE QI='EX' OR QI='X'
            GOTO 9999
         CASE NOT(QI MATCHES '0N') AND QI#''
            CALL SOUNDEX.DISPLAY(QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            CRT @(0,2):STR('=',79)
            CRT SCREEN.DISPLAY
            BEGIN CASE
               CASE ITEM.LIST=''
                  CALL ELINE('No matches found.')
                  GOTO 100
               CASE DCOUNT(ITEM.LIST,@AM) GT 1
                  GOTO 100
               CASE 1
                  DATA ITEM.LIST
                  GOTO 100
            END CASE
         CASE QI=''
            IF  FROM.CLIENT.ID='' THEN
               GOTO 100
            END ELSE
               QI= FROM.CLIENT.ID
            END
         CASE NOT(NUM(QI))
            CALL ELINE('Invalid Client ID.')
            GOTO 100
      END CASE
      FROM.CLIENT.ID=QI'R%5'   

*
*     Read client record
*
      READ  FROM.CLIENT.REC FROM F.CLIENTS,FROM.CLIENT.ID ELSE
         CALL ELINE('Client ':FROM.CLIENT.ID:' was not found.')
         FROM.CLIENT.ID=''
         GOTO 100
      END

*
*     Make assignments from client rec and display data
*
      FROM.CLIENT.NAME= FROM.CLIENT.REC<2>
      FROM.CLIENT.ADDR= FROM.CLIENT.REC<3>
      FROM.CLIENT.CITY= FROM.CLIENT.REC<4>
      FROM.CLIENT.STATE= FROM.CLIENT.REC<5>
      FROM.CLIENT.ZIP= FROM.CLIENT.REC<6>
      GOSUB DATA.DISPLAY
*
*     Get Client ID
*
150:***
      CRT @(23,8):@(-4):@(23,9):@(-4):@(23,10):@(-4):
      MASK=TO.CLIENT.ID:STR(MASK.CHAR,5-LEN(TO.CLIENT.ID))
      HELP='Enter to Client ID Number or Name for Search. [X]=Exit [EX]=Exit'
      CALL GEN.IN(23,8,MASK,'',Q,0,20,'','',2,23,8,0,QI,HELP,0,23)
      QI=TRIM(OCONV(QI,'MCU'))
      BEGIN CASE
         CASE QI='EX'
            GOTO 9999
         CASE QI='X'
            GOTO 100
         CASE NOT(QI MATCHES '0N') AND QI#''
            CALL SOUNDEX.DISPLAY(QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            CRT @(0,2):STR('=',79)
            CRT SCREEN.DISPLAY
            BEGIN CASE
               CASE ITEM.LIST=''
                  CALL ELINE('No matches found.')
                  GOTO 150
               CASE DCOUNT(ITEM.LIST,@AM) GT 1
                  GOTO 150
               CASE 1
                  DATA ITEM.LIST
                  GOTO 150
            END CASE
         CASE QI=''
            IF TO.CLIENT.ID='' THEN
               GOTO 100
            END ELSE
               QI=TO.CLIENT.ID
            END
         CASE NOT(NUM(QI))
            CALL ELINE('Invalid Client ID.')
            GOTO 100
      END CASE
      TO.CLIENT.ID=QI'R%5'   
      IF TO.CLIENT.ID=FROM.CLIENT.ID THEN
        CALL ELINE('From client:':FROM.CLIENT.ID:' cannot be the same as the To client: ':TO.CLIENT.ID)
        GOTO 100
      END

*
*     Read client record
*
125:***
      READ  TO.CLIENT.REC FROM F.CLIENTS,TO.CLIENT.ID ELSE
         CALL ELINE('Client ': TO.CLIENT.ID:' was not found.')
          CLIENT.ID=''
         GOTO 100
      END

*
*     Make assignments from client rec and display data
*
      TO.CLIENT.NAME= TO.CLIENT.REC<2>
      TO.CLIENT.ADDR= TO.CLIENT.REC<3>
      TO.CLIENT.CITY= TO.CLIENT.REC<4>
      TO.CLIENT.STATE= TO.CLIENT.REC<5>
      TO.CLIENT.ZIP= TO.CLIENT.REC<6>
      GOSUB DATA.DISPLAY
*
*     Confirm file update
*
400:***
      CRT @(0,12):'This will clear the files for ':TRIM(TO.CLIENT.NAME'L#25'):@(-4)
      CRT @(0,14):'And reload the files with data from ':TRIM(FROM.CLIENT.NAME'L#25'):@(-4)
      MASK='Update Files   : N':MASK.CHAR:@(-4)
      HELP='[Y]=Yes [N]=No [X]=Back [EX]=Exit'
      CALL GEN.IN(0,21,MASK,'',Q,0,2,'','',2,17,21,2,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' THEN QI='N'
      BEGIN CASE
         CASE QI='EX'
            GOTO 9999
         CASE QI='X'
            GOTO 150
         CASE QI='N' OR QI='0'
            GOTO 9999
         CASE QI='Y' OR QI='1'
            GOSUB UPDATE.FILES
         CASE 1
            GOTO 400
      END CASE

      GOTO 9999; * End program
*
*
*
********************************************************************************
*
*     Internal Subroutines
*
GET.SCREEN.DISPLAY:
* Build display screen

      SCREEN.DISPLAY =@(0, 4):'FROM Client Number  :'
      SCREEN.DISPLAY:=@(0, 8):'TO Client Number  :'
      SCREEN.DISPLAY:=@(-3)
      RETURN


DATA.DISPLAY:
*     Display data

      CRT @(23,4):FROM.CLIENT.ID:SPACE(3):FROM.CLIENT.NAME:@(-4)
      CRT @(25,5):FROM.CLIENT.ADDR:@(-4)
      CRT @(25,6):FROM.CLIENT.CITY:' ':FROM.CLIENT.STATE:' ':FROM.CLIENT.ZIP:@(-4)
      CRT @(23,8):TO.CLIENT.ID:SPACE(3): TO.CLIENT.NAME:@(-4)
      CRT @(25,9):TO.CLIENT.ADDR:@(-4)
      CRT @(25,10):TO.CLIENT.CITY:' ':TO.CLIENT.STATE:' ':TO.CLIENT.ZIP:@(-4)
      RETURN


UPDATE.FILES:***
      FROM.CLIENT.REC<2>=TO.CLIENT.REC<2>
      FROM.CLIENT.REC<179>=TO.CLIENT.REC<179>
      WRITE FROM.CLIENT.REC ON F.CLIENTS,TO.CLIENT.ID
      NUM.OF.ITEMS = DCOUNT(NAME.ARR<1>,@VM)
      FOR X = 1 TO NUM.OF.ITEMS
         EOF='N'
         FROM.FILE.NAME=NAME.ARR<1,X>:FROM.CLIENT.ID
         TO.FILE.NAME=NAME.ARR<1,X>:TO.CLIENT.ID
         OPEN FROM.FILE.NAME TO F.FROM.TEMP THEN
            CRT @(0,14):'Coping file :':TRIM(FROM.FILE.NAME'L#35'):' to ':TRIM(TO.FILE.NAME'L#35'):@(-4)
            OPEN TO.FILE.NAME TO F.TO.TEMP THEN
               CLEARFILE F.TO.TEMP
            END ELSE
               EXECUTE 'CREATE-FILE DATA ':TO.FILE.NAME:' ':NAME.ARR<2,X>
               OPEN TO.FILE.NAME F.TO.TEMP ELSE 
                  CALL ELINE('Unable to open/create ':TO.FILE.NAME:' Skipping')
                  GOTO NEXT.ITEM
               END
            END
            STMT='SELECT ':FROM.FILE.NAME
            EXECUTE STMT CAPTURING OUTPUT
            IF @SELECTED LE 0 THEN
               GOTO NEXT.ITEM
            END
            LOOP
               READNEXT ID ELSE EOF='Y'
            UNTIL EOF='Y' DO
               READ TEMP.REC FROM F.FROM.TEMP,ID THEN
                  WRITE TEMP.REC ON F.TO.TEMP,ID
               END ELSE
                  CALL ELINE(ID:' is missing from the file ':FROM.FILE.NAME:' Skipping')
               END
            REPEAT
         END
NEXT.ITEM:***
      NEXT X
      RETURN

*
* End of program
*
9999:**
      CRT @(0,0):@(-3):@(0,21):PROG.NAME:@(0,22):CO.NAME
      END
