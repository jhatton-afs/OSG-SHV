****************************************
* Program name : FB.7.3.5
* Author       : Owen Holman
* Date written : June 9, 1995
* Library      : FBBP
* COPYRIGHT (C) 2017 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED.
*
** Program to print FREIGHT CLASS STATISTICS Traffic Analysis
* 
* Last updated by afs (AFSLOGISTICS\gbino) at 09:25:03 on 10/29/2018.
*
* Start modification history
* Mod nn  mm/dd/yy, init, req #, description
* Cody Henderson    - Oct. 15, 1996
* James Barberousse - Oct. 25, 2001
* James Barberousse - Sep. 28, 2002
* 102805 - JMK01 - CHANGE IS PRINTER POS
* 081809 - NPR01 - T091057 - Replace Sandra Long with Stacy Rittenbach wherever the former occurs
* 060410 - NPR02 - BYPASS OLD PRINTER SELECTION CODE. DEFAULT TO QUE CURRENTLY ASSIGNED TO THE PORT (ALLOW USER TO SELECT PRINTER VIA SET-LASER)
* 092711 - PKB01 - ADDED ABILITY TO GENERATE PASSWORD PROTECTED PDF FILE
* 021212 - DFP01 - ADD ABILITY TO WRITE TO EXCEL
* 122815 - GRB01 - SysAid 19509 do not close print job between detail and summary rpt when emailed

* End modification history
*
****************************************
*
$INCLUDE PROG.ADMIN INC_OPTIONS
$INCLUDE FILE.DEFS INC_DIVISION.CODES

* Initialize variables

      PROMPT''
      
      CALL GET.USER.NEW(USER.NAME,CH.NUM)
      USER.NAME=OCONV(USER.NAME,'MCU')
      PROG.NAME='FB.7.3.5'
      PROG.DESC='Freight Class Statistics'
      PACK.NAME='Freight Billing'
      MASK.CHAR='-'
      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'FB.7.3.5' ; UPL.VOUT = ''       ; * NPR_UPL 04/23/2010
       UPL.VIN<3> = USER.NAME ; UPL.VIN<4> =CH.NUM
      CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)       ; * NPR_UPL 04/23/2010
      ESC=CHAR(27)

      CLIENT.ID='' ; CLIENT.NAME=''
      BEG.DATE=ICONV('01-01-02','D')
      END.DATE=DATE()
      DATE.TYPE='E'
      BILL.SELECTION='U'
      DETAIL.SUMMARY='S'
      PRINTER.NAME='' ; PRINTER.PATH='' ; PRINTER.FORM=''
      DARRAY=''                          ; * DFP01
      ARRAYCT=9                          ; * DFP01
      MAKE.FILE = 0                      ; * DFP01
      NUM.COPIES='1'

      STATUS=''
      NO.DIV.FLAG=0
      MAT DIV.REC=''
      CLASSES=50:@VM:55:@VM:60:@VM:65:@VM:70:@VM:77.5:@VM:85:@VM:92.5:@VM:100:@VM:110:@VM:125:@VM:150:@VM:175:@VM:200:@VM:250:@VM:300:@VM:400:@VM:500

      DIM MONTHS(12)

* Open files

      OPEN '','BCUST' TO F.CLIENT ELSE
         CALL OPEN.ABORT('BCUST',PROG.NAME)
      END

      OPEN '','FB.TABLES' TO F.TABLES ELSE
         CALL OPEN.ABORT('FB.TABLES',PROG.NAME)
      END

      OPEN '','FB.CONTROL' TO F.CONTROL ELSE
         CALL OPEN.ABORT('FB.CONTROL',PROG.NAME)
      END

      OPEN '','FBWORK':CH.NUM TO F.WORK ELSE
         EXECUTE 'CREATE-FILE FBWORK':CH.NUM:' 1 1001' PASSLIST CAPTURING OUTPUT
         OPEN '','FBWORK':CH.NUM TO F.WORK ELSE
            CALL OPEN.ABORT('FBWORK':CH.NUM,PROG.NAME)
         END
      END

      OPEN 'DICT','FBWORK':CH.NUM TO F.DICT.WORK ELSE
         CALL OPEN.ABORT('DICT FBWORK':CH.NUM,PROG.NAME)
      END

      OPEN '','ZIPS.CODES' TO F.ZIPS ELSE
         CALL OPEN.ABORT('ZIPS',PROG.NAME)
      END

      OPEN '','FLEX.DEVICES' TO F.DEVICES ELSE
         CALL OPEN.ABORT('FLEX.DEVICES',PROG.NAME)
      END
      OPEN '','BCTRL' TO F.BCTRL ELSE
         CALL OPEN.ABORT('BCTRL',PROG.NAME)
      END

      F.NUM = ''

      READ BCTRL.REC FROM F.BCTRL,USER.NAME ELSE BCTRL.REC=''
      IF BCTRL.REC#'' THEN
         F.NUM=BCTRL.REC<8>
      END ELSE
         F.NUM = ''
      END
      ORIG.F.NUM = F.NUM


*****************************************
* START DFP01
*****************************************
      OPEN '','VOC' TO F.VOC ELSE
         GOSUB CALL.NET.ADMIN
         CALL ELINE('UNABLE TO OPEN VOC FILE')
         STOP
      END

      READ BILLDATA.REC FROM F.VOC,"BILLDATA" ELSE
         GOSUB CALL.NET.ADMIN
         CALL ELINE('UNABLE TO OPEN "VOC BILLDATA"')
         STOP
      END

      BILLDATA.REC<2>:='\':USER.NAME
      WRITE BILLDATA.REC ON F.VOC,"BILLDATA.":USER.NAME ELSE
         GOSUB CALL.NET.ADMIN
         CALL ELINE("YOUR USER NAME '":USER.NAME:"' IS NOT IN THE BILLDATA FOLDER - PLEASE SEE OWEN/KEITH/DAVID")
         STOP
      END
      OPEN '','BILLDATA.':USER.NAME TO BILLDATA ELSE
         GOSUB CALL.NET.ADMIN
         CALL ELINE('UNABLE TO OPEN "BILLDATA.":USER.NAME')
         STOP
      END
*****************************************
      USER.PW=BCTRL.REC<1>
      USER.EMAIL=BCTRL.REC<20>

* Read files and initialize variables

      MATREAD MONTHS FROM F.CONTROL,'MONTHS' ELSE
         CALL READ.ABORT('FB.CONTROL','MONTHS',PROG.NAME)
      END

      READ LI.CODES FROM F.TABLES,'LI.CODES' ELSE
         CALL ELINE('Unable to read Line Item Code table.')
         LI.CODES=''
      END

      * Setup list of printers                  ;* NPR02 Printer assignment totally revamped - Printer related variables below not used
      READ PRINTER.REC FROM F.TABLES,'PRINTERS' ELSE
         CALL READ.ABORT('FB.TABLES','PRINTERS',PROG.NAME)
      END
      NUM.PRINTERS=DCOUNT(PRINTER.REC,@AM)

      * If user is a manager, give access to all managers' printers
      IF INDEX('BRIAN*KAREN*OWEN*CHRIS*DEBBIE*AMY*SRITTENBACH*CBEASLEY*CGOSS',USER.NAME,1) THEN
         FOR X=1 TO NUM.PRINTERS
            PRINTER.REC<X,5>=1           ; * access attribute is 5
         NEXT X
      END

      * Create array for POP.UP.LIST call if user selects L to list printers
      PRINTER.LIST=''
      PRINTER.INDEX=''
      COUNTER=0
      FOR X=1 TO NUM.PRINTERS
         IF PRINTER.REC<X,5> THEN
            COUNTER+=1
            PRINTER.LIST<COUNTER>=SPACE(1):PRINTER.REC<X,1>'L#30':SPACE(3):PRINTER.REC<X,2>'L#45'
            PRINTER.INDEX<COUNTER>=X
         END
      NEXT X

      * Build a list of printer names to locate default in
      PRINTER.SEARCH.LIST=''
      FOR X=1 TO NUM.PRINTERS
         PRINTR=PRINTER.REC<X,3>
         IF PRINTR[1,2]='\\' THEN
            PRINTR=FIELD(PRINTR,'\',COUNT(PRINTR,'\')+1)
         END

         LOCATE PRINTR IN PRINTER.SEARCH.LIST BY 'AR' SETTING PRINTER.POS ELSE   ; * JMK01
            INS PRINTR BEFORE PRINTER.SEARCH.LIST<PRINTER.POS>         ; * JMK01
         END                             ; * JMK01
      NEXT X

      * Get default printer
      EXECUTE 'SETPTR' PASSLIST CAPTURING OUTPUT
      PRT.LOC=INDEX(OUTPUT,'Destination printer',1)
      PRT.ATT=COUNT(OUTPUT[1,PRT.LOC],@AM)+1
      DEST.PRINTER=TRIM(OUTPUT<PRT.ATT>)
      F.NAME=FIELD(DEST.PRINTER,' ',DCOUNT(DEST.PRINTER,' '))
      IF F.NAME[1,2]='\\' THEN
         F.NAME=FIELD(F.NAME,'\',COUNT(F.NAME,'\')+1)
      END

      * Set default printer
      LOCATE F.NAME IN PRINTER.SEARCH.LIST BY 'AR' SETTING PRINTER.POS ELSE

         PRINTER.POS=5                   ; * Using IS printer ; * JMK01
      END

      PRINTER.NAME=PRINTER.REC<PRINTER.POS,1>:'-':TRIM(FIELD(PRINTER.REC<PRINTER.POS,2>,'-',2))
      PRINTER.PATH=PRINTER.REC<PRINTER.POS,3>
      PRINTER.FORM=PRINTER.REC<PRINTER.POS,4>

* Create work file dictionary items

      TEMP=''
      TEMP<1>='A'
      TEMP<2>='1'
      TEMP<9>='R'
      TEMP<10>='1'
      WRITE TEMP ON F.DICT.WORK,'IO.STATUS'
      TEMP<1>='S'
      TEMP<2>=0
      TEMP<8>='G1*1'
      TEMP<9>='R'
      TEMP<10>=5
      WRITE TEMP ON F.DICT.WORK,'DIVISION'


*  WORK FILE CONSISTS OF ITEMS WITH THE FOLLOWING DETAIL
*  Variable Attribute Description.....................................
*               ID    I/O/B*Division - Carrier Totals
*                     I/O/B*"ALL"    - Grand Totals All Divisions
*               1     Shipment Type I-nbound O-utbound B-oth
*               2     Number of Shipments (Bills) Including Minimums
*   CAR.FRT     3     Total Carrier Freight Amount (FRT,TMIN,DEF)
*   CAR.NOT     4     Total Carrier Negotiable Charges (NOA,SS,HAZ,NOG)
*   MIN.FLG     5     Number of Minimum Shipments (MIN)
*   MIN.FRT     6     Total Carrier Minimum Charges (MIN)
*   NON.FRT     7     Total Carrier OTHER Charges (All Others)
*   AFS.FRT     8     Total AFS Freight Amount (FRT,TMIN,DEF)
*               9     Total Carrier Discount Amount
*   TOT.PIC    10     Total Pieces (FRT,TMIN,MIN)
*   TOT.WGT    11     Total Weight (FRT,TMIN,MIN)
*              12     Number of Shipments with mileage > 0
*              13     Total Miles
*   HAZ.FLG    14     Total Hazmat Shipments
*   HAZ.PIC    15     Number of Hazmat Pieces
*   CLS.WGT    16     Total of (Class*Weight) for Calc of Weighted Class
*   CLASSES    17     Multivalued Classes (All)


* Display screen heading

      CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
      CRT @(0,2):STR('=',79)

      GOSUB SET.DISPLAY.VARIABLE

* Prompt 1 : Get client number

50:***
      PAGE.NUM=1
      PROMPT.NUM=1
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=CLIENT.ID:STR(MASK.CHAR,5-LEN(CLIENT.ID))
      HELP='Enter client number or letters of name for search. [X]=Exit [EX]it'
      CALL GEN.IN(18,3,MASK,'',Q,0,20,'','',1,18,3,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' AND CLIENT.ID#'' THEN QI=CLIENT.ID
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOSUB DISPLAY.SCREEN
            GOTO THE.END
         CASE NOT(QI MATCHES '0N')
            CALL SOUNDEX.DISPLAY(QI,'BCUST','SDX.CLIENTS,NAME',2,ITEM.LIST)
            BEGIN CASE
               CASE ITEM.LIST=''
               CASE DCOUNT(ITEM.LIST<1>,@VM) GT 1
               CASE ITEM.LIST NE ''
                  IF NUM(ITEM.LIST<1,1>) THEN DATA ITEM.LIST<1,1>
            END CASE
            CALL AFS.SCR.REFRESH(PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
            CRT @(0,2):STR('=',79)
            GOTO 50
         CASE NUM(QI)
            QI=QI'R%5'
         CASE 1
            GOTO 50
      END CASE
      CLIENT.ID=QI
      IF CLIENT.ID[1,2]#'99' THEN
         CALL ELINE('Client Number must begin with 99.')
         CLIENT.ID=''
         GOTO 50
      END
      READ CLIENT.REC FROM F.CLIENT,CLIENT.ID ELSE
         CALL ELINE('ERROR - Client ':CLIENT.ID:' not on file.')
         CLIENT.ID=''
         GOTO 50
      END
      CLIENT.NAME=CLIENT.REC<2>
       TARIFF.NAME=CLIENT.REC<72>
      IF TARIFF.NAME='' THEN TARIFF.TEXT='' ELSE
         TARIFF.TEXT=' Using Tariff ':TARIFF.NAME
      END
      GOSUB DISPLAY.SCREEN

      FYBD=CLIENT.REC<29>
      OPEN '','DIVISION.CODES,':CLIENT.ID TO F.DIVS ELSE
         CALL OPEN.ABORT('DIVISION.CODES,':CLIENT.ID,PROG.NAME)
      END

* Prompt 2 : Get beginning date

100:***
      PAGE.NUM=1
      PROMPT.NUM=2
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=BEG.DATE'D2-':STR(MASK.CHAR,8-LEN(BEG.DATE'D2-'))
      HELP='Enter the beginning date. [X]=Back [EX]it'
      CALL GEN.IN(18,5,MASK,'DATE',Q,0,8,'','',1,18,5,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' AND BEG.DATE#'' THEN Q=BEG.DATE
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOSUB DISPLAY.SCREEN
            GOTO 50
      END CASE
      BEG.DATE=Q
      GOSUB DISPLAY.SCREEN

* Prompt 3 : Get ending date

200:***
      PAGE.NUM=1
      PROMPT.NUM=3
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=END.DATE'D2-':STR(MASK.CHAR,8-LEN(END.DATE'D2-'))
      HELP='Enter the ending date. [X]=Back [EX]it'
      CALL GEN.IN(18,7,MASK,'DATE',Q,0,8,'','',1,18,7,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' AND END.DATE#'' THEN Q=END.DATE
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOSUB DISPLAY.SCREEN
            GOTO 100
      END CASE
      END.DATE=Q
      IF END.DATE LT BEG.DATE THEN
         CALL ELINE('Ending date is before beginning date.')
         GOTO 200
      END
      GOSUB DISPLAY.SCREEN

* Prompt 4 : Get date type

225:***
      PAGE.NUM=1
      PROMPT.NUM=4
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=DATE.TYPE:STR(MASK.CHAR,2-LEN(DATE.TYPE))
      HELP='Enter the date type. [E]ntry Date [S]hip Date [X]=Back [EX]it'
      CALL GEN.IN(18,9,MASK,'',Q,0,8,'','',1,18,9,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' AND DATE.TYPE#'' THEN QI=DATE.TYPE
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOSUB DISPLAY.SCREEN
            GOTO 200
         CASE QI='S'
         CASE QI='E'
         CASE 1
            GOTO 225
      END CASE
      DATE.TYPE=QI
      GOSUB DISPLAY.SCREEN

* Prompt 5 : Get US bills or Canadian bills or both

275:***
      PAGE.NUM=1
      PROMPT.NUM=5
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=BILL.SELECTION:STR(MASK.CHAR,2-LEN(BILL.SELECTION))
      HELP='Enter bill type. [U]S Bills ONLY [C]anadian Bills ONLY [B]oth [X]=Back [EX]it'
      CALL GEN.IN(18,11,MASK,'',Q,0,2,'','',2,18,11,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' AND BILL.SELECTION#'' THEN QI=BILL.SELECTION
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOSUB DISPLAY.SCREEN
            GOTO 225
         CASE QI='B'
         CASE QI='C'
         CASE QI='U'
         CASE 1
            GOTO 275
      END CASE
      BILL.SELECTION=QI
      GOSUB DISPLAY.SCREEN

* Prompt 6 : Get Detail or Summary report

300:***
      PAGE.NUM=1
      PROMPT.NUM=6
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=DETAIL.SUMMARY:STR(MASK.CHAR,2-LEN(DETAIL.SUMMARY))
      HELP='Enter report type. [D]etail and Summary [S]ummary Only [X]=Back [EX]it'
      CALL GEN.IN(18,13,MASK,'',Q,0,2,'','',2,18,13,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      IF QI='' AND DETAIL.SUMMARY#'' THEN QI=DETAIL.SUMMARY
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOSUB DISPLAY.SCREEN
            GOTO 275
         CASE QI='S'
         CASE QI='D'
         CASE 1
            GOTO 300
      END CASE
      DETAIL.SUMMARY=QI
      GOSUB DISPLAY.SCREEN

*NPR02 START CHANGES

320:

      PROMPT.NUM=7
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1

      READ PRT.TAB FROM F.DEVICES, "PRINTERS.SL" ELSE PRT.TAB = ""     ; *NPR02

      LOCATE F.NUM IN PRT.TAB<1> SETTING POS THEN  ; *NPR02
         PRT.DESC = PRT.TAB<3,POS>       ; *NPR02
         LAS.PRT= "F":F.NUM              ; *NPR02
         PRT.DESC = PRT.DESC[1,30] : " [":LAS.PRT:"]"
      END ELSE
         CALL ELINE("Could not find print que ":F.NUM:" - Aborting!")
         GOTO THE.END
      END                                ; *NPR02

      CRT @( 0,15):'Printer         : ' : PRT.DESC : @(-3)

      HELP="Print to - {":PRT.DESC :"}. [Y]es, [S]elect, [F]ile, [X] or EX."
      CALL GEN.IN(0,22,'Enter selection please. ---','',Q,0,3,'','',0,-3,22,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOSUB DISPLAY.SCREEN
            GOTO 300
         CASE QI='EX'
            GOTO THE.END
         CASE QI='Y' OR QI = ""
            NULL
         CASE QI='N' OR QI = 'S'
            EXECUTE \SET-LASER\
            GOSUB GET.QUEUE
            IF NOT(NUM(F.NUM)) THEN
               CALL ELINE("Problem encountered with printer selection. Call IT!")
               GOTO THE.END
            END ELSE
               CALL AFS.SCR.HEAD(CO.ID,FILE.ID,'',PROG.NAME,PROG.DESC,PACK.NAME,CO.NAME,TIME.DATE,1)
               CRT @(0,2):STR('=',79)
               GOSUB DISPLAY.SCREEN
               DATA "Y"
               GOTO 320
            END
         CASE QI="F"
            MAKE.FILE=1
         CASE 1
            CALL ELINE('Invalid entry. Must be [Y]es, [S]elect Printer [X] or EX=Exit."')
            GOTO 320
      END CASE

      CRT @( 0,15):'Printer         : ' : PRT.DESC : @(-3)

      GOSUB DISPLAY.SCREEN
      GOTO 350

*NPR02 END CHANGES

* Prompt 7 : Get printer

325:***
      PAGE.NUM=1
      PROMPT.NUM=7
      BACK.FLAG=0
      DISPLAY<PROMPT.NUM>=1
      GOSUB DISPLAY.SCREEN
      MASK=PRINTER.NAME
      HELP='Select a printer. [L]ist printers [X]=Back [EX]it'
      CALL GEN.IN(18,15,MASK,'',Q,0,2,'','',2,18,15,0,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOSUB DISPLAY.SCREEN
            GOTO 300
         CASE QI='L'
            HEADING='List of Available Network Printers'
            CALL CENTER(HEADING,80)
            HEADING:=SPACE(79-LEN(HEADING))
            SELECTION=''
            CRT @(0,23):'Select a printer. [X]=Back [E]xit List':@(-4):
            CALL POP.UP.LIST(PRINTER.LIST,HEADING,17,20,SELECTION)
            BEGIN CASE
               CASE SELECTION='E'
                  GOTO 325
               CASE SELECTION='X'
                  BACK.FLAG=1
                  DISPLAY<PROMPT.NUM>=0
                  GOSUB DISPLAY.SCREEN
                  GOTO 300
               CASE 1
                  PRINTER.NAME=PRINTER.REC<PRINTER.INDEX<SELECTION>,1>
                  PRINTER.PATH=PRINTER.REC<PRINTER.INDEX<SELECTION>,3>
                  PRINTER.FORM=PRINTER.REC<PRINTER.INDEX<SELECTION>,4>
            END CASE
         CASE QI=''
         CASE 1
            GOTO 325
      END CASE
      GOSUB DISPLAY.SCREEN
      GOTO 375                           ; * Skip number of copies for now James

* Prompt 8 : Get number of copies

350:***

      IF PRT.DESC[1,3]='PDF' THEN
         COPIES=1
         HELP="To Password Protect the PDF File: Enter a Password"
         CALL GEN.IN(0,13,'PDF Password or [ENTER]:','',Q,0,15,'','',2,25,13,0,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         BEGIN CASE
            CASE QI='X'
               GOTO 325
            CASE QI='EX'
               STOP
            CASE INDEX(QI,' ',1)
               CALL ELINE("Spaces aren't allowed in the password")
               GOTO 350
            CASE 1
               Q=QI
         END CASE
         PDF.PW=Q
         CRT @(25,13):PDF.PW:
         IF PDF.PW='' THEN CRT "(No PW Specified - PDF File will NOT be protected)"
      END ELSE

         PAGE.NUM=1
         PROMPT.NUM=8
         BACK.FLAG=0
         DISPLAY<PROMPT.NUM>=1
         GOSUB DISPLAY.SCREEN
         MASK=NUM.COPIES:STR(MASK.CHAR,2-LEN(NUM.COPIES))
         HELP='Enter number of copies. [X]=Back [EX]it'
         CALL GEN.IN(18,17,MASK,'',Q,0,2,'','',2,18,17,0,QI,HELP,0,23)
         QI=OCONV(QI,'MCU')
         IF QI='' AND NUM.COPIES#'' THEN QI=NUM.COPIES
         BEGIN CASE
            CASE QI='EX'
               GOTO THE.END
            CASE QI='X'
               BACK.FLAG=1
               DISPLAY<PROMPT.NUM>=0
               GOSUB DISPLAY.SCREEN
               GOTO 320
            CASE NUM(QI)
               IF INT(QI)#QI THEN
                  CALL ELINE('Use whole numbers only.')
                  GOTO 350
               END
            CASE 1
               GOTO 350
         END CASE
         NUM.COPIES=QI
      END
      GOSUB DISPLAY.SCREEN

375:***
      HELP='[ENTER]=Continue [X]=Back [EX]it'
      CALL GEN.IN(0,22,'Enter selection: ----','',Q,0,4,'','',0,17,22,1,QI,HELP,0,23)
      QI=OCONV(QI,'MCU')
      BEGIN CASE
         CASE QI='EX'
            GOTO THE.END
         CASE QI='X'
            BACK.FLAG=1
            DISPLAY<PROMPT.NUM>=0
            GOSUB DISPLAY.SCREEN
            GOTO 320
         CASE QI=''
            NULL
         CASE 1
            GOTO 375
      END CASE

* Start processing

      TEXT='Selecting and processing bills for client ':CLIENT.ID:' ':CLIENT.NAME:'...'
      CALL CENTER(TEXT,80)
      CRT @(0,19):@(-3):TEXT

* Create beginning of year and monthly descriptions

      BEG.MO=OCONV(BEG.DATE,'DM')
      BEG.YR=OCONV(BEG.DATE,'DY')
      FISCAL.MO=FIELD(FYBD,'.',1)'R0'
      IF BEG.MO<FISCAL.MO THEN
         FISCAL.YR=BEG.YR-1
      END ELSE
         FISCAL.YR=BEG.YR
      END

      END.MO=OCONV(END.DATE,'DM')
      BEG.MO=MONTHS(BEG.MO)
      END.MO=MONTHS(END.MO)
      IF BEG.MO=END.MO THEN
         MONTH.DESC=BEG.MO
      END ELSE
         MONTH.DESC=BEG.MO:' to ':END.MO
      END

* Build divisions array

      DIV.ARR=''
      DONE=0
      SELECT F.DIVS
      LOOP
         READNEXT DIV.ID ELSE DONE=1
      UNTIL DONE=1 DO
         LOCATE(DIV.ID,DIV.ARR;POS;'AL') ELSE NULL
         INS DIV.ID BEFORE DIV.ARR<POS>
      REPEAT

* Select data for current client

      OPEN '','FB.BILLS.HIST,':CLIENT.ID TO F.BILLS ELSE
         CALL OPEN.ABORT('FB.BILLS.HIST,':CLIENT.ID,PROG.NAME)
      END
      STMT='SSELECT FB.BILLS.HIST,':CLIENT.ID

      IF DATE.TYPE='E' THEN              ; * Entry Date
         STMT:=' WITH 86 GE "':OCONV(BEG.DATE,'D2/'):'"'
         STMT:=' AND WITH 86 LE "':OCONV(END.DATE,'D2/'):'"'
      END ELSE                           ; * Ship Date
         STMT:=' WITH 1 GE "':OCONV(BEG.DATE,'D2/'):'"'
         STMT:=' AND WITH 1 LE "':OCONV(END.DATE,'D2/'):'"'
      END

      IF USER.NAME='OWEN' AND CLIENT.ID='99205' THEN
         STMT:=' AND WITH CARRIER# "00124"'
         CRT @(0,23):STMT:
      END

      STMT:=' BY CARRIER.NAME BY CARRIER# BY 2 BY 1 BY PRO'

      EXECUTE STMT PASSLIST CAPTURING OUTPUT
      NUM.ITEMS=@SELECTED
      IF NUM.ITEMS=0 THEN
         CALL ELINE('** No data present with the selected criteria **')
         GOTO THE.END
      END

      CLEARFILE F.WORK
      COUNTER=0
      DONE=0
      LOOP
         READNEXT HIST.ID ELSE DONE=1
      UNTIL DONE=1 DO
         COUNTER=COUNTER+1
         CALL PROG.BAR(21,COUNTER,NUM.ITEMS,PER)
         IF FIELD(HIST.ID,'*',3) GT 0 ELSE
            READ HIST.REC FROM F.BILLS,HIST.ID THEN

* Look at bill selection for US only or Canada only and skip if needed

               IF BILL.SELECTION#'B' THEN          ; * BILL.SELECTION is U or C, so skip the other
                  * Find out if the bill is Canadian (1) or not (0)
                  CANADIAN=0
                  IF (LEN(HIST.REC<3>)=6) THEN CANADIAN=1    ; * Origin zip
                  IF (LEN(HIST.REC<4>)=6) THEN CANADIAN=1    ; * Destination zip
                  IF (BILL.SELECTION='U') AND CANADIAN THEN
                      GOTO SKIP.BILL
                  END
                  IF (BILL.SELECTION='C') AND NOT(CANADIAN) THEN
                    
                     GOTO SKIP.BILL
                  END
               END

               IF CLIENT.ID='99915' THEN
                  LOCATE 'MIN' IN HIST.REC<70> SETTING POS THEN GOTO SKIP.BILL
               END

               BALDUE=0
               PRO=FIELD(HIST.ID,'*',2)
               START=LEN(PRO)-1
               IF PRO[START,2]='BD' ! PRO[START,2]='AD' THEN BALDUE=1

* Update carrier total record in work file

               IO.STAT=HIST.REC<2>
               DIVISION=HIST.REC<9>
               IF DIVISION='' THEN DIVISION='NONE' ; NO.DIV.FLAG=1
               BEGIN CASE
                  CASE IO.STAT='I' ; NULL
                  CASE IO.STAT='O' ; NULL
                  CASE IO.STAT='T' ; NULL
                  CASE 1
                     IO.STAT='O'
               END CASE

* Detail
               WORK.ID=IO.STAT:'*':DIVISION
               READ WORK.REC FROM F.WORK,WORK.ID ELSE
                  WORK.REC=IO.STAT
                  WORK.REC<17>=CLASSES
               END

               BOTH.ID='B*':DIVISION
               READ BOTH.REC FROM F.WORK,BOTH.ID ELSE
                  BOTH.REC='B'
                  BOTH.REC<17>=CLASSES
               END

               TOT.WORK.ALL.ID=IO.STAT:'*ALL'
               READ TOT.WORK.ALL.REC FROM F.WORK,TOT.WORK.ALL.ID ELSE
                  TOT.WORK.ALL.REC=IO.STAT
                  TOT.WORK.ALL.REC<17>=CLASSES
               END

               TOT.BOTH.ALL.ID='B*ALL'
               READ TOT.BOTH.ALL.REC FROM F.WORK,TOT.BOTH.ALL.ID ELSE
                  TOT.BOTH.ALL.REC='B'
                  TOT.BOTH.ALL.REC<17>=CLASSES
               END

* Totals
               TOTAL.WORK.ID=IO.STAT:'*':DIVISION:'*TOTALS'
               READ TOTAL.WORK.REC FROM F.WORK,TOTAL.WORK.ID ELSE
                  TOTAL.WORK.REC=IO.STAT
               END

               TOTAL.BOTH.ID='B*':DIVISION:'*TOTALS'
               READ TOTAL.BOTH.REC FROM F.WORK,TOTAL.BOTH.ID ELSE
                  TOTAL.BOTH.REC='B'
               END

               TOTAL.TOT.WORK.ALL.ID=IO.STAT:'*ALL*TOTALS'
               READ TOTAL.TOT.WORK.ALL.REC FROM F.WORK,TOTAL.TOT.WORK.ALL.ID ELSE
                  TOTAL.TOT.WORK.ALL.REC=IO.STAT
               END

               TOTAL.TOT.BOTH.ALL.ID='B*ALL*TOTALS'
               READ TOTAL.TOT.BOTH.ALL.REC FROM F.WORK,TOTAL.TOT.BOTH.ALL.ID ELSE
                  TOTAL.TOT.BOTH.ALL.REC='B'
               END

* Update Arrays with Data

               VIN=''
               VIN<1>=1                  ; * Multi Class
               VIN<2>=CLIENT.REC<79>
               CALL FB.TRAF.SURV(VIN,VOUT,LI,LI.CODES,HIST.REC)
               ATT=2 ; VALUE=VOUT<2> ; GOSUB 8000 ; GOSUB 9000         ; * Number of Shipments
               ATT=3 ; VALUE=VOUT<3> ; GOSUB 8000 ; GOSUB 9000         ; * Carrier Charges (Freight)
               ATT=4 ; VALUE=VOUT<4> ; GOSUB 8000 ; GOSUB 9000         ; * Carrier Charges (Negot.)
               ATT=5 ; VALUE=VOUT<5> ; GOSUB 8000 ; GOSUB 9000         ; * Number of (Abs Min) Shptms
               ATT=6 ; VALUE=VOUT<6> ; GOSUB 8000 ; GOSUB 9000         ; * (Abs MIN) Amount
               ATT=7 ; VALUE=VOUT<7> ; GOSUB 8000 ; GOSUB 9000         ; * (Miscellaneous) Amount
               ATT=8 ; VALUE=VOUT<8> ; GOSUB 8000 ; GOSUB 9000         ; * AFS Charges on (Freight)
               ATT=9 ; VALUE=VOUT<9> ; GOSUB 8000 ; GOSUB 9000         ; * Carrier Discount Amount
               ATT=10 ; VALUE=VOUT<10> ; GOSUB 8000 ; GOSUB 9000       ; * Total Pieces
               ATT=11 ; VALUE=VOUT<11> ; GOSUB 8000 ; GOSUB 9000       ; * Total Weight
               ATT=12 ; VALUE=VOUT<12> ; GOSUB 8000 ; GOSUB 9000       ; * Shipments With Mileage
               ATT=13 ; VALUE=VOUT<13> ; GOSUB 8000 ; GOSUB 9000       ; * Mileage on Bill
               ATT=14 ; VALUE=VOUT<14> ; GOSUB 8000 ; GOSUB 9000       ; * Numb of Shmpts W/Haz Mat
               ATT=15 ; VALUE=VOUT<15> ; GOSUB 8000 ; GOSUB 9000       ; * Number of Haz Mat Pieces
               ATT=16 ; VALUE=VOUT<16> ; GOSUB 8000 ; GOSUB 9000       ; * Class*Wgt (For Wght Avg.)

* Update totals

               WRITE WORK.REC ON F.WORK,WORK.ID
               WRITE BOTH.REC ON F.WORK,BOTH.ID
               WRITE TOT.WORK.ALL.REC ON F.WORK,TOT.WORK.ALL.ID
               WRITE TOT.BOTH.ALL.REC ON F.WORK,TOT.BOTH.ALL.ID

               WRITE TOTAL.WORK.REC ON F.WORK,TOTAL.WORK.ID
               WRITE TOTAL.BOTH.REC ON F.WORK,TOTAL.BOTH.ID
               WRITE TOTAL.TOT.WORK.ALL.REC ON F.WORK,TOTAL.TOT.WORK.ALL.ID
               WRITE TOTAL.TOT.BOTH.ALL.REC ON F.WORK,TOTAL.TOT.BOTH.ALL.ID

            END                          ; * READ HIST.REC FROM F.BILLS,HIST.ID THEN
         END                             ; * IF FIELD(HIST.ID,'*',3) GT 0 ELSE

SKIP.BILL:****
      REPEAT

      IF NO.DIV.FLAG=1 THEN DIV.ARR<-1>='NONE'
      NUMBER.DIVISIONS=DCOUNT(DIV.ARR,@AM)
      IF DETAIL.SUMMARY='S' THEN DIV.ARR='ALL'     ; * Print totals page

      GOSUB SETUP.PRINTER

* Get next division code

1000:***
      DIVISION=DIV.ARR<1>
      DIV.ARR=DELETE(DIV.ARR,1,0,0)

2000:***
      CALL FB.RPT.STAT(CLIENT.ID,STATUS)
      IF STATUS='' THEN
         IF DIV.ARR NE '' THEN           ; * Check for additional divisions
            STATUS=''
            GOTO 1000
         END
         IF DETAIL.SUMMARY='D' THEN
            * Begin GRB01
            IF PRT.DESC[1,20] # "PDF Report Generator" THEN
               PRINTER CLOSE
               GOSUB SETUP.PRINTER
            END
            * End GRB01
            DETAIL.SUMMARY='S'
            DIV.ARR='ALL'
            GOTO 1000
         END ELSE
            GOTO THE.END
         END
      END
      BEGIN CASE
         CASE DIVISION='ALL'
            BEGIN CASE
               CASE STATUS='I'
                  CSZ="Inbound shipments to all divisions combined"
               CASE STATUS='O'
                  CSZ="Outbound shipments to all divisions combined"
               CASE STATUS='T'
                  CSZ="Third Party shipments to all divisions combined"
               CASE STATUS='B'
                  CSZ="All shipments both inbound, outbound, and third party to all divisions combined"
            END CASE
         CASE DIVISION='NONE'            ; * No Divisions
            BEGIN CASE
               CASE STATUS='I'
                  CSZ="Inbound shipments"
               CASE STATUS='O'
                  CSZ="Outbound shipments"
               CASE STATUS='T'
                  CSZ="Third Party shipments"
               CASE STATUS='B'
                  CSZ="All shipments both inbound, outbound, and third party"
            END CASE
            CSZ=''
         CASE 1
            MATREAD DIV.REC FROM F.DIVS, DIVISION ELSE MAT DIV.REC=''
            READV CITY FROM F.ZIPS, DIV.ZIP, 1 ELSE CITY='~ Unknown ~'
            READV STATE FROM F.ZIPS, DIV.ZIP, 2 ELSE STATE='~ Unknown ~'
            CSZ='For division ':DIVISION:' - ':CITY:', ':STATE
            BEGIN CASE
               CASE STATUS='I'
                  CSZ="Inbound shipments to division ":DIVISION:' - ':CITY:', ':STATE
               CASE STATUS='O'
                  CSZ="Outbound shipments from division ":DIVISION:' - ':CITY:', ':STATE
               CASE STATUS='T'
                  CSZ="Third Party shipments for division ":DIVISION:' - ':CITY:', ':STATE
               CASE STATUS='B'
                  CSZ="All shipments both inbound, outbound, and third party division ":DIVISION:' - ':CITY:', ':STATE
            END CASE
      END CASE

      L.TAB=CTR-(LEN(PROG.DESC)/2)
      L.TAB=L.TAB-LEN(PROG.NAME)
      TEMP=PROG.NAME:SPACE(L.TAB):PROG.DESC
      R.TAB=WIDTH-LEN(TEMP)
      R.TAB=R.TAB-LEN(TIMEDATE())
      HEAD1=PROG.NAME:SPACE(L.TAB):PROG.DESC:SPACE(R.TAB):TIMEDATE():"'L'"

      TITLE=CLIENT.ID:' ':CLIENT.NAME
      TITLE=CHANGE(TITLE,"'","''")       ; * To Correct Single Quote Problem
      IF CLIENT.ID='99915' THEN TITLE:=' EXCLUDING ALL MIN BILLS'
      L.TAB=CTR-LEN(TITLE)/2
      L.TAB=L.TAB-LEN(CO.NAME)
      TEMP=CO.NAME:SPACE(L.TAB):TITLE
      R.TAB=(WIDTH-LEN(TEMP))-20
      HEAD2=TEMP:SPACE(R.TAB):USER.NAME'L(#10 )':"PAGE 'PL'"

      BEGIN CASE
         CASE STATUS='I'
            HEAD3='Inbound Freight Bills '
         CASE STATUS='O'
            HEAD3='Outbound Freight Bills '
         CASE STATUS='T'
            HEAD3='Third Party Freight Bills '
         CASE STATUS='B'
            HEAD3='Inbound, Outbound, and Third Party Freight Bills '
         CASE 1
            HEAD3=''
      END CASE

      IF DATE.TYPE='E' THEN
         HEAD3:='Entered from ':BEG.DATE'D2/':' to ':END.DATE'D2/':" ":TARIFF.TEXT:"'CL'"
         H3='Entered from ':BEG.DATE'D2/':' to ':END.DATE'D2/'
      END ELSE
         HEAD3:='Shipped from ':BEG.DATE'D2/':' to ':END.DATE'D2/':" ":TARIFF.TEXT:"'CL'"
         H3='Shipped from ':BEG.DATE'D2/':' to ':END.DATE'D2/'
      END

      BEGIN CASE
         CASE BILL.SELECTION='U'
            HEAD4='US Bills Only'
         CASE BILL.SELECTION='C'
            HEAD4='Canadian Bills Only'
         CASE BILL.SELECTION='B'
            HEAD4='US and Canadian Bills Combined'
      END CASE
      H4=HEAD4
      HEAD4:="'CL'"

      BEGIN CASE
         CASE DETAIL.SUMMARY='D'
            HEAD5='Detail Report'
         CASE DETAIL.SUMMARY='S'
            HEAD5='Summary Report'
      END CASE
      H5=HEAD5
      HEAD5:="'CL'"

      IF MAKE.FILE THEN
* title is 32 characters long, or even longer.
* co.name is 18 characters long.
* make pgnam 18 characters long.
* make pgdsc 32 characters long.
         PCTR=84
         BAR=STR(" ",PCTR)
         PGDSC=PROG.DESC:STR(' ',24)
         PGDSC=PGDSC[1,24]
         PGNAM=PROG.NAME:STR(' ',36)
         PGNAM=PGNAM[1,36]
         PGTTL=TITLE:STR(' ',32)
         PGTTL=PGTTL[1,32]
         PGCON=CO.NAME:STR(' ',18)
         PGCON=PGCON[1,18]
         H1=PGNAM:BAR[19,PCTR]:PGDSC:BAR[10,PCTR]:TIMEDATE()
         DARRAY<1,1>=H1
         H2=PGCON:BAR[19,PCTR]:TITLE:BAR[1,PCTR]:USER.NAME'L(#10 )'
         DARRAY<2,1>=H2
         PIP=BAR:BAR[1,13]:H3
         DARRAY<3,1>=PIP
         PIP=BAR:BAR[1,36]:H4
         DARRAY<4,1>=PIP

         VM=1
         DARRAY<6,VM>='Num' ; VM+=1

         DARRAY<6,VM>='Class''R#5' ; VM+=1

         DARRAY<6,VM>='    AFS''R#12'
         DARRAY<7,VM>='Freight''R#12'
         DARRAY<8,VM>='Charges''R#12' ; VM+=1

         DARRAY<6,VM>='  AFS''R#5'
         DARRAY<7,VM>='    %''R#5' ; VM+=1

         DARRAY<6,VM>='Minimum''R#12'
         DARRAY<7,VM>='Charges''R#12' ; VM+=1

         DARRAY<6,VM>='  Total''R#12'
         DARRAY<7,VM>='Freight''R#12'
         DARRAY<8,VM>='Charges''R#12' ; VM+=1

         DARRAY<6,VM>='Frght''R#5'
         DARRAY<7,VM>='    %''R#5' ; VM+=1

         DARRAY<6,VM>='Average''R#10'
         DARRAY<7,VM>=' Charge''R#10' ; VM+=1

         DARRAY<6,VM>='Shipms''R#6'
         DARRAY<7,VM>='  With''R#6'
         DARRAY<8,VM>=' Class''R#6' ; VM+=1

         DARRAY<6,VM>='Shipm''R#5'
         DARRAY<7,VM>='    %''R#5' ; VM+=1

         DARRAY<6,VM>='Number''R#6'
         DARRAY<7,VM>='Hazmat''R#6'
         DARRAY<8,VM>='Shpmts''R#6' ; VM+=1

         DARRAY<6,VM>='Hzmat''R#5'
         DARRAY<7,VM>='    %''R#5' ; VM+=1

         DARRAY<6,VM>='Number''R#6'
         DARRAY<7,VM>='    of''R#6'
         DARRAY<8,VM>='Pieces''R#6' ; VM+=1

         DARRAY<6,VM>='Averag''R#6'
         DARRAY<7,VM>='Pieces''R#6' ; VM+=1

         DARRAY<6,VM>=' Total''R#9'
         DARRAY<7,VM>='Weight''R#9' ; VM+=1

         DARRAY<6,VM>='Average''R#9'
         DARRAY<7,VM>=' Weight''R#9' ; VM+=1

         DARRAY<6,VM>='Total''R#9'
         DARRAY<7,VM>='Miles''R#9' ; VM+=1

         DARRAY<6,VM>='Average''R#9'
         DARRAY<7,VM>='  Miles''R#9' ; VM+=1

      END ELSE

         HEAD6='Num'
         HEAD7='   '
         HEAD8='   '

         HEAD6:=SPACE(2):'Class''R#5'
         HEAD7:=SPACE(2):'     ''R#5'
         HEAD8:=SPACE(2):'     ''R#5'

         HEAD6:=SPACE(2):'    AFS''R#12'
         HEAD7:=SPACE(2):'Freight''R#12'
         HEAD8:=SPACE(2):'Charges''R#12'

         HEAD6:=SPACE(2):'  AFS''R#5'
         HEAD7:=SPACE(2):'    %''R#5'
         HEAD8:=SPACE(2):'     ''R#5'

         HEAD6:=SPACE(2):'Minimum''R#12'
         HEAD7:=SPACE(2):'Charges''R#12'
         HEAD8:=SPACE(2):'       ''R#12'

         HEAD6:=SPACE(2):'  Total''R#12'
         HEAD7:=SPACE(2):'Freight''R#12'
         HEAD8:=SPACE(2):'Charges''R#12'

         HEAD6:=SPACE(2):'Frght''R#5'
         HEAD7:=SPACE(2):'    %''R#5'
         HEAD8:=SPACE(2):'     ''R#5'

         HEAD6:=SPACE(2):'Average''R#10'
         HEAD7:=SPACE(2):' Charge''R#10'
         HEAD8:=SPACE(2):'       ''R#10'

         HEAD6:=SPACE(2):'Shipms''R#6'
         HEAD7:=SPACE(2):'  With''R#6'
         HEAD8:=SPACE(2):' Class''R#6'

         HEAD6:=SPACE(2):'Shipm''R#5'
         HEAD7:=SPACE(2):'    %''R#5'
         HEAD8:=SPACE(2):'     ''R#5'

         HEAD6:=SPACE(2):'Number''R#6'
         HEAD7:=SPACE(2):'Hazmat''R#6'
         HEAD8:=SPACE(2):'Shpmts''R#6'

         HEAD6:=SPACE(2):'Hzmat''R#5'
         HEAD7:=SPACE(2):'    %''R#5'
         HEAD8:=SPACE(2):'     ''R#5'

         HEAD6:=SPACE(2):'Number''R#6'
         HEAD7:=SPACE(2):'    of''R#6'
         HEAD8:=SPACE(2):'Pieces''R#6'

         HEAD6:=SPACE(2):'Averag''R#6'
         HEAD7:=SPACE(2):'Pieces''R#6'
         HEAD8:=SPACE(2):'      ''R#6'

         HEAD6:=SPACE(2):' Total''R#9'
         HEAD7:=SPACE(2):'Weight''R#9'
         HEAD8:=SPACE(2):'      ''R#9'

         HEAD6:=SPACE(2):'Average''R#9'
         HEAD7:=SPACE(2):' Weight''R#9'
         HEAD8:=SPACE(2):'       ''R#9'

         HEAD6:=SPACE(2):'Total''R#9'
         HEAD7:=SPACE(2):'Miles''R#9'
         HEAD8:=SPACE(2):'     ''R#9'

         HEAD6:=SPACE(2):'Average''R#9'
         HEAD7:=SPACE(2):'  Miles''R#9'
         HEAD8:=SPACE(2):'       ''R#9'

         HEAD9=STR('-',WIDTH)

         HED=HEAD1:HEAD2:HEAD3:HEAD4:HEAD5
         HEADING HED
         FOOTING "'LC'NOTE: Freight Bills with 0 Miles have been EXCLUDED from Average Miles and Cost Per Mile."
      END

* Select data

      PREC='SSELECT FBWORK':CH.NUM:' WITH DIVISION = "':DIVISION
      PREC=PREC:'" AND WITH IO.STATUS = "':STATUS:'"'
      EXECUTE PREC PASSLIST CAPTURING OUTPUT
      IF SYSTEM(11) ELSE
         * If No Items Selected then Skip to next select
         GOTO 2000
      END

* Print rest of headings - Putting all headings together in the HEADING HED statement
* generates the error: Available printer memory exceeded

      IF MAKE.FILE ELSE
         PRINT CSZ
         PRINT HEAD9
         PRINT HEAD6
         PRINT HEAD7
         PRINT HEAD8
         PRINT HEAD9
      END

      AFS.PERCENT=0
      FRGHT.PERCENT=0
      SHIPM.PERCENT=0
      HZMAT.PERCENT=0
      PIECS.PERCENT=0

      DONE=0
      COUNTER=0
      LOOP
         READNEXT ID ELSE DONE=1
      UNTIL DONE=1 DO
         IF FIELD(ID,'*',3)='TOTALS' ELSE
            READ WORK.REC FROM F.WORK,ID THEN
               READ TOTALS.REC FROM F.WORK,ID:'*TOTALS' THEN
                  TIMES=DCOUNT(WORK.REC<17>,CHAR(253))
                  FOR X=1 TO TIMES
                     REC=''
                     FOR Y=1 TO 16
                        REC<Y>=WORK.REC<Y,X>
                     NEXT Y
                     CLASS=WORK.REC<17,X>
                     COUNTER=COUNTER+1
                     GOSUB BUILD.DET.LINE
                     IF MAKE.FILE ELSE
                        IF DETAIL.SUMMARY='D' OR (DETAIL.SUMMARY='S' AND DIVISION='ALL') THEN PRINT LINE
                     END
                  NEXT X
               END                       ; * READ TOTALS.REC FROM F.WORK,ID:'*TOTALS'
            END                          ; * READ WORK.REC FROM F.WORK,ID
         END                             ; * IF FIELD(ID,'*',3)='TOTALS'
      REPEAT

* Print column totals

      IF MAKE.FILE THEN
         ARRAYCT+=1 ; VM=1
         DARRAY<ARRAYCT,VM>= 'TOTALS:' ; VM=3
         DARRAY<ARRAYCT,VM>=SPACE(5):TOTALS.REC<8>'R26,#12' ; VM+=1
         DARRAY<ARRAYCT,VM>=SPACE(1):AFS.PERCENT'R26,#6' ; VM+=1
         DARRAY<ARRAYCT,VM>=SPACE(2):TOTALS.REC<6>'R26,#12' ; VM+=1
         DARRAY<ARRAYCT,VM>=SPACE(2):(TOTALS.REC<3>+TOTALS.REC<4>+TOTALS.REC<6>)'R26,#12' ; VM+=1
         DARRAY<ARRAYCT,VM>=SPACE(1):FRGHT.PERCENT'R26,#6' ; VM+=1
         IF TOTALS.REC<2>+0=0 THEN VAR=0 ELSE
            VAR=((TOTALS.REC<8>+TOTALS.REC<6>)/TOTALS.REC<2>)
         END
         DARRAY<ARRAYCT,VM>=SPACE(2):VAR'R26,#10' ; VM+=1
         DARRAY<ARRAYCT,VM>=SPACE(2):TOTALS.REC<2>'R0,#6' ; VM+=1
         DARRAY<ARRAYCT,VM>=SPACE(1):SHIPM.PERCENT'R26,#6' ; VM+=1
         DARRAY<ARRAYCT,VM>=SPACE(2):TOTALS.REC<14>'R0,#6' ; VM+=1
         DARRAY<ARRAYCT,VM>=SPACE(1):HZMAT.PERCENT'R26,#6' ; VM+=1
         DARRAY<ARRAYCT,VM>=SPACE(2):TOTALS.REC<10>'R0,#6' ; VM+=1
         IF TOTALS.REC<2>+0=0 THEN VAR=0 ELSE
            VAR=(TOTALS.REC<10>/TOTALS.REC<2>)
         END
         DARRAY<ARRAYCT,VM>=SPACE(2):VAR'R0,#6' ; VM+=1
         DARRAY<ARRAYCT,VM>=SPACE(2):TOTALS.REC<11>'R0,#9' ; VM+=1
         IF TOTALS.REC<2>+0=0 THEN VAR=0 ELSE
            VAR=(TOTALS.REC<11>/TOTALS.REC<2>)
         END
         DARRAY<ARRAYCT,VM>=SPACE(2):VAR'R0,#9' ; VM+=1
         DARRAY<ARRAYCT,VM>=SPACE(2):TOTALS.REC<13>'R0,#9' ; VM+=1
         IF TOTALS.REC<12>+0=0 THEN VAR=0 ELSE
            VAR=(TOTALS.REC<13>/TOTALS.REC<12>)
         END
         DARRAY<ARRAYCT,VM>=SPACE(2):VAR'R0,#9'
         ARRAYCT+=1
      END ELSE
         TOTALS.LINE= 'TOTALS:'
         TOTALS.LINE:=SPACE(5):TOTALS.REC<8>'R26,#12'
         TOTALS.LINE:=SPACE(1):AFS.PERCENT'R26,#6'
         TOTALS.LINE:=SPACE(2):TOTALS.REC<6>'R26,#12'
         TOTALS.LINE:=SPACE(2):(TOTALS.REC<3>+TOTALS.REC<4>+TOTALS.REC<6>)'R26,#12'
         TOTALS.LINE:=SPACE(1):FRGHT.PERCENT'R26,#6'
         IF TOTALS.REC<2>+0=0 THEN VAR=0 ELSE
            VAR=((TOTALS.REC<8>+TOTALS.REC<6>)/TOTALS.REC<2>)
         END
         TOTALS.LINE:=SPACE(2):VAR'R26,#10'
         TOTALS.LINE:=SPACE(2):TOTALS.REC<2>'R0,#6'
         TOTALS.LINE:=SPACE(1):SHIPM.PERCENT'R26,#6'
         TOTALS.LINE:=SPACE(2):TOTALS.REC<14>'R0,#6'
         TOTALS.LINE:=SPACE(1):HZMAT.PERCENT'R26,#6'
         TOTALS.LINE:=SPACE(2):TOTALS.REC<10>'R0,#6'
         IF TOTALS.REC<2>+0=0 THEN VAR=0 ELSE
            VAR=(TOTALS.REC<10>/TOTALS.REC<2>)
         END
         TOTALS.LINE:=SPACE(2):VAR'R0,#6'
         TOTALS.LINE:=SPACE(2):TOTALS.REC<11>'R0,#9'
         IF TOTALS.REC<2>+0=0 THEN VAR=0 ELSE
            VAR=(TOTALS.REC<11>/TOTALS.REC<2>)
         END
         TOTALS.LINE:=SPACE(2):VAR'R0,#9'
         TOTALS.LINE:=SPACE(2):TOTALS.REC<13>'R0,#9'
         IF TOTALS.REC<12>+0=0 THEN VAR=0 ELSE
            VAR=(TOTALS.REC<13>/TOTALS.REC<12>)
         END
         TOTALS.LINE:=SPACE(2):VAR'R0,#9'
         PRINT HEAD9
         PRINT TOTALS.LINE
      END
      GOTO 2000                          ; * get next division

********************************************************************************
8000:**** Update Arrays
********************************************************************************
      TIMES=DCOUNT(VALUE<1>,CHAR(253))
      IF ATT=14 THEN TIMES=1             ; ** Car Discount is a Single Value
      FOR X=1 TO TIMES
         WORK.REC<ATT,X> +=VALUE<1,X>
         BOTH.REC<ATT,X> +=VALUE<1,X>
         TOT.WORK.ALL.REC<ATT,X>+=VALUE<1,X>
         TOT.BOTH.ALL.REC<ATT,X>+=VALUE<1,X>
      NEXT X
      RETURN

********************************************************************************
9000:**** Update Total Arrays
********************************************************************************
      TIMES=DCOUNT(VALUE<1>,CHAR(253))
      IF ATT=14 THEN TIMES=1             ; ** Car Discount is a Single Value
      FOR X=1 TO TIMES
         TOTAL.WORK.REC<ATT> +=VALUE<1,X>
         TOTAL.BOTH.REC<ATT> +=VALUE<1,X>
         TOTAL.TOT.WORK.ALL.REC<ATT>+=VALUE<1,X>
         TOTAL.TOT.BOTH.ALL.REC<ATT>+=VALUE<1,X>
      NEXT X
      RETURN

********************************************************************************
BUILD.DET.LINE:***
********************************************************************************
      IF MAKE.FILE THEN

         IF COUNTER=1 THEN ARRAYCT+=1 ; DARRAY<ARRAYCT,1>=CSZ: "  {":H5:"}"

         ARRAYCT+=1 ; VM=1

         DARRAY<ARRAYCT,VM>=COUNTER'R#3'           ; * Num
         VM+=1

         DARRAY<ARRAYCT,VM>=CLASS'R#5'   ; * Class
         VM+=1

         DARRAY<ARRAYCT,VM>=REC<8>'R26,#12'        ; * AFS Freight Charges
         VM+=1

         IF TOTALS.REC<8>+0=0 THEN VAR=0 ELSE      ; * AFS %
            VAR=(REC<8>/TOTALS.REC<8>)*10000
            AFS.PERCENT+=VAR
         END
         DARRAY<ARRAYCT,VM>=VAR'R26,#5'
         VM+=1

         DARRAY<ARRAYCT,VM>=REC<6>'R26,#12'        ; * Minimum Charges
         VM+=1

         DARRAY<ARRAYCT,VM>=(REC<3>+REC<4>+REC<6>)'R26,#12'  ; * Total Freight Charges
         VM+=1

         IF TOTALS.REC<3>+TOTALS.REC<4>+TOTALS.REC<6>+0=0 THEN VAR=0 ELSE        ; * Freight %
            VAR=(REC<3>+REC<4>+REC<6>)/(TOTALS.REC<3>+TOTALS.REC<4>+TOTALS.REC<6>)*10000
            FRGHT.PERCENT+=VAR
         END
         DARRAY<ARRAYCT,VM>=VAR'R26,#5'
         VM+=1

         IF REC<2>+0=0 THEN VAR=0 ELSE   ; * Average Charge
            VAR=((REC<8>+REC<6>)/REC<2>)
         END
         DARRAY<ARRAYCT,VM>=VAR'R26,#10'
         VM+=1

         DARRAY<ARRAYCT,VM>=REC<2>'R0,#6'          ; * Shipments with Class
         VM+=1

         IF TOTALS.REC<2>+0=0 THEN VAR=0 ELSE      ; * Shipments %
            VAR=(REC<2>/TOTALS.REC<2>)*10000
            SHIPM.PERCENT+=VAR
         END
         DARRAY<ARRAYCT,VM>=VAR'R26,#5'
         VM+=1

         DARRAY<ARRAYCT,VM>=REC<14>'R0,#6'         ; * Number Hazmat Shipments
         VM+=1

         IF TOTALS.REC<14>+0=0 THEN VAR=0 ELSE     ; * Hazmat %
            VAR=(REC<14>/TOTALS.REC<14>)*10000
            HZMAT.PERCENT+=VAR
         END
         DARRAY<ARRAYCT,VM>=VAR'R26,#5'
         VM+=1

         DARRAY<ARRAYCT,VM>=REC<10>'R0,#6'         ; * Number of Pieces
         VM+=1

         IF REC<2>+0=0 THEN VAR=0 ELSE   ; * Average Pieces
            VAR=(REC<10>/REC<2>)
         END
         DARRAY<ARRAYCT,VM>=VAR'R0,#6'
         VM+=1

         DARRAY<ARRAYCT,VM>=REC<11>'R0,#9'         ; * Total Weight
         VM+=1

         IF REC<2>+0=0 THEN VAR=0 ELSE   ; * Average Weight
            VAR=(REC<11>/REC<2>)
         END
         DARRAY<ARRAYCT,VM>=VAR'R0,#9'
         VM+=1

         DARRAY<ARRAYCT,VM>=REC<13>'R0,#9'         ; * Total Miles
         VM+=1

         IF REC<12>+0=0 THEN VAR=0 ELSE  ; * Average Miles
            VAR=(REC<13>/REC<12>)
         END
         DARRAY<ARRAYCT,VM>=VAR'R0,#9'
      END ELSE
         LINE=''
         LINE:=COUNTER'R#3'              ; * Num

         LINE:=SPACE(2):CLASS'R#5'       ; * Class

         LINE:=SPACE(2):REC<8>'R26,#12'  ; * AFS Freight Charges

         IF TOTALS.REC<8>+0=0 THEN VAR=0 ELSE      ; * AFS %
            VAR=(REC<8>/TOTALS.REC<8>)*10000
            AFS.PERCENT+=VAR
         END
         LINE:=SPACE(2):VAR'R26,#5'

         LINE:=SPACE(2):REC<6>'R26,#12'  ; * Minimum Charges

         LINE:=SPACE(2):(REC<3>+REC<4>+REC<6>)'R26,#12'      ; * Total Freight Charges

         IF TOTALS.REC<3>+TOTALS.REC<4>+TOTALS.REC<6>+0=0 THEN VAR=0 ELSE        ; * Freight %
            VAR=(REC<3>+REC<4>+REC<6>)/(TOTALS.REC<3>+TOTALS.REC<4>+TOTALS.REC<6>)*10000
            FRGHT.PERCENT+=VAR
         END
         LINE:=SPACE(2):VAR'R26,#5'

         IF REC<2>+0=0 THEN VAR=0 ELSE   ; * Average Charge
            VAR=((REC<8>+REC<6>)/REC<2>)
         END
         LINE:=SPACE(2):VAR'R26,#10'

         LINE:=SPACE(2):REC<2>'R0,#6'    ; * Shipments with Class

         IF TOTALS.REC<2>+0=0 THEN VAR=0 ELSE      ; * Shipments %
            VAR=(REC<2>/TOTALS.REC<2>)*10000
            SHIPM.PERCENT+=VAR
         END
         LINE:=SPACE(2):VAR'R26,#5'

         LINE:=SPACE(2):REC<14>'R0,#6'   ; * Number Hazmat Shipments

         IF TOTALS.REC<14>+0=0 THEN VAR=0 ELSE     ; * Hazmat %
            VAR=(REC<14>/TOTALS.REC<14>)*10000
            HZMAT.PERCENT+=VAR
         END
         LINE:=SPACE(2):VAR'R26,#5'

         LINE:=SPACE(2):REC<10>'R0,#6'   ; * Number of Pieces

         IF REC<2>+0=0 THEN VAR=0 ELSE   ; * Average Pieces
            VAR=(REC<10>/REC<2>)
         END
         LINE:=SPACE(2):VAR'R0,#6'

         LINE:=SPACE(2):REC<11>'R0,#9'   ; * Total Weight

         IF REC<2>+0=0 THEN VAR=0 ELSE   ; * Average Weight
            VAR=(REC<11>/REC<2>)
         END
         LINE:=SPACE(2):VAR'R0,#9'

         LINE:=SPACE(2):REC<13>'R0,#9'   ; * Total Miles

         IF REC<12>+0=0 THEN VAR=0 ELSE  ; * Average Miles
            VAR=(REC<13>/REC<12>)
         END
         LINE:=SPACE(2):VAR'R0,#9'
      END

      RETURN

********************************************************************************
SETUP.PRINTER:***
********************************************************************************
      WIDTH=168
      MARGIN=0
      CTR=INT(WIDTH/2)
      IF MAKE.FILE ELSE
         STMT2='SP-ASSIGN ':LAS.PRT:',C':NUM.COPIES
         EXECUTE STMT2
         EXECUTE 'TERM ,,,,,,168,60' CAPTURING OUTPUT
         PRINTER ON
         IF PRT.DESC[1,3]='PDF' THEN
            PDF.STMT="!PDF"
            PDF.STMT:=" /f":CLIENT.ID:".PDF"
            IF PDF.PW#'' THEN PDF.STMT:="?OWNER=ownerpassword":USER.PW:"?USER=":PDF.PW:"?PERMISSIONS="
            PDF.STMT:=" /e":USER.EMAIL
            PDF.STMT:=" /jTS7.3.5-":CLIENT.ID
            PRINT PDF.STMT
         END ELSE
            LASER=''
            LASER<1>=1                   ; * Landscape
            LASER<2>=8                   ; * Lines per inch
            LASER<3>=63                  ; * Page length
            LASER<4>=16.7                ; * Characters per inch
            LASER<5>=0
            LASER<6>=0
            LASER<7>=1
            LASER<8>=0
            PRINT ESC:"E":               ; * Printer reset
            PRINT ESC:"&l2A":            ; * Select Letter page size
            PRINT ESC:"&l":LASER<1>:"O":           ; * Set landscape orientation
            PRINT ESC:"(s0T":            ; * Set font to line printer
            PRINT ESC:"(s0S":            ; * Italics off
            PRINT ESC:"&l":LASER<2>:"D":           ; * Set line spacing in lines per inch
            PRINT ESC:"&l":LASER<3>:"F":           ; * Set page length
            PRINT ESC:"(s":LASER<4>:"H":           ; * Set pitch
            PRINT ESC:"&l":LASER<7>:"H"  ; * Bin selection (paper source)
            PRINT ESC:"&a":MARGIN:"L"
            PRINT ESC:'"g':LASER<8>:'F'  ; * Paper output
         END
      END
      RETURN

********************************************************************************
DISPLAY.SCREEN:***
********************************************************************************
      CRT @(0,3):@(-3)
      BEGIN CASE
         CASE PAGE.NUM=1
            IF DISPLAY<1> THEN
               CRT @( 0, 3):'Client Number   : ':CLIENT.ID:STR(' ',6-LEN(CLIENT.ID)):CLIENT.NAME
            END
            IF DISPLAY<2> THEN
               CRT @( 0, 5):'Beginning Date  : ':BEG.DATE'D2-'
            END
            IF DISPLAY<3> THEN
               CRT @( 0, 7):'Ending Date     : ':END.DATE'D2-'
            END
            IF DISPLAY<4> THEN
               CRT @( 0, 9):'Date Selection  : ':DATE.TYPE
            END
            IF DISPLAY<5> THEN
               CRT @( 0,11):'Bill Type       : ':BILL.SELECTION
            END
            IF DISPLAY<6> THEN
               CRT @( 0,13):'Report Type     : ':DETAIL.SUMMARY
            END
            IF DISPLAY<7> THEN
               CRT @( 0,15):'Printer         : ':PRT.DESC
            END
            IF DISPLAY<8> THEN
               CRT @( 0,17):'Number of Copies: ':NUM.COPIES
            END
      END CASE
      RETURN

********************************************************************************
SET.DISPLAY.VARIABLE:***
********************************************************************************
      NUM.PROMPTS=7
      DISPLAY=''
      FOR X=1 TO NUM.PROMPTS
         DISPLAY<X>=0
      NEXT X
      RETURN
********************************************************************************
GET.QUEUE:
********************************************************************************
      EXECUTE "SP-ASSIGN ? " CAPTURING SP.OUTPUT

      FOR II = 1 TO 21
         W.LINE = SP.OUTPUT<II>
         IF INDEX(W.LINE,"Output form name",1) THEN F.NUM = TRIM(FIELD(W.LINE,":",2))
      NEXT II

      RETURN

********************************************************************************
THE.END:***
********************************************************************************
      PRINTER CLOSE                      ; * GRB01
      IF MAKE.FILE THEN
         DARRAY=CHANGE(DARRAY,@VM,CHAR(9))
         ID.XLS='FB.7.3.5-':TIME():'.XLS'
         WRITE DARRAY ON BILLDATA, ID.XLS
         CALL ELINE("#1 - Excel file ":ID.XLS:" written to your U: drive - RETURN to continue")
      END
      IF ORIG.F.NUM NE '' THEN EXECUTE 'SP-ASSIGN F':ORIG.F.NUM        ; * NPR02
      CRT @(0,23):@(-4):
      STOP
********************************************************************************      
CALL.NET.ADMIN:***
********************************************************************************
      CALL ELINE("CALL NETWORK ADMINISTRATOR!")
      CALL ELINE("CALL NETWORK ADMINISTRATOR!!!!!")
      RETURN
