****      SUBROUTINE SEND.IMG.DUPLICATE.REST(VIN,VOUT)
***********************************************************************
* Program name : SEND.IMG.DUPLICATE.REST
* Author       : Greg Bino
* Date written : 04-26-2019
* Library      : FBBP
* COPYRIGHT (C) 2019 - AFS LOGISTICS LLC - ALL RIGHTS RESERVED.
*
* SEND IMAGE mark as duplicate UPDATE TO OCR WEBSERVICE INTERFACE
*
* Last updated by afs (AFSLOGISTICS\gbino) at 09:08:52 on 04/29/2019.
*
* Start modification history
* Mod 00 04-26-19, grb, accu-118  New program
* End modification history
*
************************************************************************
*
* Initialize variables
*
$INCLUDE PROG.ADMIN INC_OPTIONS
$INCLUDE UNIVERSE.INCLUDE UDO.H

      STATUS = 0

      VIN=""
      IMAGE.NO = VIN<1>
IMAGE.NO = 35162063
      STATUS = VIN<2>
      RESP.CNT=1
      RESP = ''
      VOUT=''
      TIME.LINE=''
      ST.TIME = TIME()
      TIME.LINE<1,1,1>=TIME()            ; * start time
      PROMPT ''
      TIMEOUT = 3000
      PROG.NAME='SEND.IMG.DUPLICATE.REST'

      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'SEND.IMG.DUPLICATE.REST' ; UPL.VOUT = ''
      ***    CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)
      OPEN 'CONTROL' TO FILE.CNTL ELSE
         CALL ELINE('UNABLE TO OPEN CONTROL FILE')
         RETURN
      END
      OPEN 'OCR.LOG' TO F.OCR ELSE
         CALL ELINE('UNABLE TO OPEN OCR FILE')
         RETURN
      END

      READ XMLPARAMS FROM FILE.CNTL,"CLIENT.OCR.IMAGE.DUP" THEN
         URL = XMLPARAMS<1>
         SERVER = XMLPARAMS<2>
         SOAPACTION = XMLPARAMS<3>
         LOGGING = XMLPARAMS<4>          ; * Y/N
         LOGFILE = XMLPARAMS<5>
         EMAIL.RECIP = XMLPARAMS<6>
         TEST.FLG = XMLPARAMS<7>
      END ELSE

****         URL = 'https://imagingws.qa.afs.net/images/markAsDuplicate?imageKey=':IMAGE.NO
         URL = 'https://imagingws.afs.net/images/markAsDuplicate?imageKey=':IMAGE.NO

         LOGFILE="IMG.DUPLICATE.LOG"
         LOGGING = "Y"
         EMAIL.RECIP = 'gbino@afs.net'
         TEST.FLG = @FALSE
      END

      IF LOGGING = "Y" OR LOGGING = 1 THEN
         LOGGING = @TRUE
      END ELSE
         LOGGING = @FALSE
      END
      IF LOGGING THEN
         STAT = PROTOCOLLOGGING(LOGFILE, "ON", 10)
      END

      TESTING = 0

      EMAIL.OUT=''
      EMAIL.OUT<1,-1>='GBINO@afs.net'
      EMAIL.OUT<2,-1>= EMAIL.RECIP
      EMAIL.OUT<4>='FBBP_SEND.IMG.DUPLICATE.REST@afs.net'
      EMAIL.OUT<5>='Error while trying to update image with DUPLICATE date .'

      GOSUB SEND.REST.REQUEST
      GOSUB PARSE.RESULTS

      TIME.LINE<1,1,1>=TIME()            ; * finish time

9999: * THE END
      IF LOGGING THEN
         LOG.RET = PROTOCOLLOGGING(LOGFILE,"OFF",10)
      END
      IF FAILED THEN
         WRITE RESTDATA ON F.OCR,"IMG.DUP*":DATE():"*":TIME()
      END
      RETURN
**********************************************************************
SEND.REST.REQUEST:
**********************************************************************
      METHOD="GET"
*
      STAT = SETHTTPDEFAULT("VERSION", "1.1")
      STAT = CREATESECURITYCONTEXT(CTX, "TLSv1.2")
      STAT = CREATESECUREREQUEST(URL, METHOD, RESTGET,CTX)
      STAT = SETREQUESTHEADER(RESTGET, "Content-Type", "application/json;charset=utf-8")
      STAT = SUBMITREQUEST(RESTGET, 30000, "", HEADER, RESTDATA, HTTPSTATUS)

      RETURN

************************************************************************
PARSE.RESULTS:
************************************************************************

      BEGIN CASE
         CASE TRIM(RESTDATA) = 'Failed to Update'
            FAILED = 1
         CASE TRIM(RESTDATA) = 'Updated Successfully'
            FAILED = 0
         CASE TRIM(RESTDATA) ='Image status set to REJECTED'
            FAILED = 0
         CASE TRIM(RESTDATA) ='Image status set to PROCESSED'
            FAILED = 0
         CASE TRIM(RESTDATA)[1,24]= 'Error: This image (key #'
            FAILED = 0
         CASE TRIM(RESTDATA) ='Document Marked as Duplicate'
            FAILED = 0
         CASE 1
            FAILED = 1
      END CASE

      IF FAILED THEN
         VOUT = 'FAILED'
         GOSUB REPORT.INTERNAL.ERROR
      END ELSE
         VOUT = 'SUCESS'
      END
      RETURN

************************************************************************
REPORT.INTERNAL.ERROR:
************************************************************************
      EMAIL.START.TIME = TIME()

      EMAIL.OUT<6, -1> = 'URL = ':URL
      EMAIL.OUT<6, -1> = ' '
      EMAIL.OUT<6, -1> = 'IMAGE = ':IMAGE.NO
      EMAIL.OUT<6, -1> = ' '
      EMAIL.OUT<6, -1> = ' '
      EMAIL.OUT<6, -1> = 'ERROR = ':VOUT
      EMAIL.OUT<6, -1> = ' '
      EMAIL.OUT<6, -1> = ' '

      EVIN=EMAIL.OUT
      EVOUT=''
      CALL SENDMAIL(EVIN,EVOUT)

      RETURN
************************************************************************
REPORT.FATAL.ERROR:
************************************************************************
      EMAIL.START.TIME = TIME()
      EMAIL.OUT<1>=EMAIL.RECIP
      EMAIL.OUT<1,-1> = 'gbino@afs.net'
      EMAIL.OUT<1,-1> = 'dfriend@afs.net'
      EMAIL.OUT<1,-1> = 'nmeddaugh@afs.net'
      FATAL.ERROR.SUBJ = 'REST IMAGE DUPLICATE ERROR'
      EMAIL.OUT<5>=FATAL.ERROR.SUBJ
      EMAIL.OUT<6,-1> = 'URL = ':URL
      EVIN=EMAIL.OUT
      EVOUT=''
      CALL SENDMAIL(EVIN,EVOUT)
      IDATE=DATE()
      ITIME=TIME()
      TIME.BLOCK=INT(ITIME/600)
      *  VOUT<1> = "ERROR"
      RETURN
   END
