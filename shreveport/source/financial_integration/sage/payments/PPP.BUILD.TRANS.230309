SUBROUTINE PPP.BUILD.TRANS(VIN,VOUT)
****************************************
* Program name : PPP.BUILD.TRANS
* Author       : Greg Bino
* Date written : March 25 2021
* Library      : FBBP
* COPYRIGHT (c) : AFS, LLC 2021, All Rights Reserved.
*
* Build bill file for Pre Paid Parcel
* Last updated by afs (AFSLOGISTICS\gbino) at 08:47:41 on 03/26/2021.
*
* Start modification history
* Mod nn  mm/dd/yy, init, req #, description

* End modification history
*
*******************************************
$INCLUDE UNIVERSE.INCLUDE ODBC.H
      UPL.VIN = 'FBBP' ; UPL.VIN<2> = 'PPP.BUILD.TRANS' ; UPL.VOUT = ''
      CALL GET.USER.NEW(USER,CH.NUM)
*DFIF USER='DAVID' THEN CALL ELINE('PPP.BUILD.TRANS')
      CLIENT.ID = VIN<1>
      BEG.DATE = DATE()
      END.DATE = DATE()
      BEG.DATE = VIN<2>
      END.DATE = VIN<3>
       GOSUB OPEN.FILES
      GO 10
      
      UPL.VIN<3> = USER
      UPL.VIN<4> = CH.NUM
      ***     CALL UPD.PROGRAM.LOG(UPL.VIN,UPL.VOUT)

      BEGIN CASE
         CASE USER='DAVID'
         CASE USER = "GBINO"
         CASE USER = "NMEDDAUGH"
         CASE USER='SV.UVAUTO'
         CASE USER='UVTASKS'
         CASE 1
            CRT "YOU ARE NOT AUTHORIZED TO USE THIS PROGRAM"
            STOP
      END CASE

      VIN1=""
      VIN1<1> = "PPP.BUILD.TRANS"
      VIN1<2> = USER
      VIN1<3> = SYSTEM(18)
      VIN1<4> = "S"
      ***    CALL PROGTRACK(VIN1,VOUT1)

     

      GET (ARG.,1) OBEG.DATE THEN
         BEG.DATE=ICONV(OBEG.DATE,'D')
      END ELSE
         BEG.DATE=DATE()
      END
      GET (ARG.,2) OEND.DATE THEN
         END.DATE=ICONV(OEND.DATE,'D')
      END ELSE
         END.DATE=DATE()
      END
      GET (ARG.,3) CLIENT.LIST.NAME ELSE CLIENT.LIST.NAME=''
      GET (ARG.,4) OPT.LIST ELSE OPT.LIST=''
      GET (ARG.,5) START.TIME ELSE START.TIME=''
      IF @TTY = "phantom" THEN

      END ELSE
         CRT @(0,0):@(-1):@(0,3):'PPP.BUILD.TRANS - Processing Clients from ':BEG.DATE'D2/':' to ':END.DATE'D2/':'...'
      END

      IF CLIENT.LIST.NAME#'' AND CLIENT.LIST.NAME#'ALL' THEN
         STMT='GET-LIST ':CLIENT.LIST.NAME
      END ELSE
         STMT='SSELECT PPP.CLIENT '
      END
      EXECUTE STMT RTNLIST CLIENT.LIST CAPTURING RESULTS
      NUM.CLIENTS=@SELECTED
10:
      EXPECT = ""
      NULL=""
      TOT.NUM.BILLS=0
      TOT.AMT.01075 = 0
      TOT.AMT.00015 = 0
      TOT.AMT.00041 = 0
      ERROR.CNT=0
   ERRORS=''

      CLIENT.EOF=0
      CLIENT.CNT=0
*****DEBUG
    **  LOOP
   **      READNEXT CLIENT.ID FROM CLIENT.LIST ELSE CLIENT.EOF=1
    **  UNTIL CLIENT.EOF DO
         CLIENT.CNT+=1
      ***   CLIENT.PCT=ICONV(CLIENT.CNT/NUM.CLIENTS*100,'MR2')

         READV CLIENT.NAME FROM F.CLIENT,CLIENT.ID,2 ELSE
            CLIENT.NAME = "NOF"
         END
         READ PPP.CLIENT FROM F.CLIENT.PPP,CLIENT.ID THEN
            EFF.DT = PPP.CLIENT<1>
            IF EFF.DT GT DATE() THEN
              ** CONTINUE
            END

            UPS.BILLS = PPP.CLIENT<2>
            FEDEX.BILLS = PPP.CLIENT<5>
            
            IF @TTY = "phantom" THEN
               DISPLAY CLIENT.ID'R#5'
            END ELSE
              *** CRT @(0,5):@(-4):CLIENT.CNT'R#4':' - ':CLIENT.PCT'R26#6':'% ':CLIENT.ID:' - ':CLIENT.NAME
            END

            OPEN '','FB.BILLS.HIST,':CLIENT.ID TO F.BILL THEN

               * SAGE EXTRACT WITH DUE DATE
               * 1700 NOTIONS TEST CLIENT
               * EDI ONLY
*CARRIERS 00041 01312 00015 01075   SETUP RECORD AND DO LOCATE ON CARRIER
* STORE TRACKING NUMBER FOR UPS
* STORE TRACKING NUMBER FOR FEDEX
* BUILD TOTAL FOR WEEK FOR REMINDER FEE CHARGE
* PAID INDICATOR
* MAY HAVE MARK TRACKING NUMBERS AS PAID
* DUE DATE
* WAITING ON DUE DATE FOR UPS FROM SLC PROGRAMING CHANGE PCL.DATA
* NEED TO DETERMINE IF UPS/FEDEX OR BOTH

CALL ELINE('CREATE-FILE PRESS BREAK')
               OPEN 'PPP.CLIENT.XREF,':CLIENT.ID TO F.XREF ELSE
                  STMT = 'CREATE-FILE DATA PPP.CLIENT.XREF,':CLIENT.ID:' ':1001:",":1
                  EXECUTE STMT CAPTURING STUFF RETURNING JUNK
*DF                  OPEN 'PPP.CLIENT.XREF,':CLIENT.ID TO F.PPP ELSE
                  OPEN 'PPP.CLIENT.XREF,':CLIENT.ID TO F.XREF ELSE
                     CALL ELINE('UNABLE TO CREATE PPP.CLIENT.XREF FILE')
                     OPN.FLG = 0
                  END
               END
               OPEN 'PPP.CLIENT.BILLS,':CLIENT.ID TO F.PPP ELSE
                  STMT = 'CREATE-FILE DATA PPP.CLIENT.BILLS,':CLIENT.ID:' ':1001:",":1
                  EXECUTE STMT CAPTURING STUFF RETURNING JUNK
                  OPEN 'PPP.CLIENT.BILLS,':CLIENT.ID TO F.PPP ELSE
                     CALL ELINE('UNABLE TO CREATE FILE')
                     OPN.FLG = 0
                  END
               END

               STMT = 'SELECT FB.PROC.DATE.XREF,':CLIENT.ID
               STMT:=' WITH DATE GE "':OCONV(BEG.DATE,'D2/'):'"'
               STMT:=' AND WITH DATE LE "':OCONV(END.DATE,'D2/'):'"'
            **   EXECUTE STMT RTNLIST DT.LIST CAPTURING OUTPUT

           **    IF @SELECTED < 1 AND CLIENT.ID # "00000" THEN GOTO SKIP.CLIENT
          **     STMT = 'QSELECT FB.PROC.DATE.XREF,':CLIENT.ID
           **    EXECUTE STMT PASSLIST DT.LIST RTNLIST NDX.LIST CAPTURING OUTPUT
           **    IF @SELECTED < 1 AND CLIENT.ID # "00000" THEN GOTO SKIP.CLIENT

               STMT='SELECT FB.BILLS.HIST,':CLIENT.ID
               STMT:=' WITH VERSION = "0"'
               STMT:=' AND WITH 39 # "R"'
               STMT:=' AND WITH 39 # "P"'
               STMT:=' AND WITH 37 GE "':OCONV(BEG.DATE,'D2/'):'"'
               STMT:=' AND WITH 37 LE "':OCONV(END.DATE,'D2/'):'"'
               STMT:=' AND WITH CARRIER# EQ "01075" "00041" "00015" "01312" '
               STMT:=' AND WITH 53 = "EBILL]" "EDI]" '
*  53 UPS 88 FEDEX OR WITH DUE DT *238)
             ***  EXECUTE STMT PASSLIST NDX.LIST RTNLIST BILL.LIST CAPTURING OUTPUT
               EXECUTE STMT RTNLIST BILL.LIST CAPTURING OUTPUT
*****DEBUG
               NUM.BILLS=@SELECTED
               TOT.NUM.BILLS+=NUM.BILLS
*****               CRT @(0,10):@(-3):' #Bills - ':NUM.BILLS'R#12':' - ':TOT.NUM.BILLS'R#15'
               BILL.ARRAY.01075=''
               BILL.ARRAY.01075<1> = 0
               BILL.ARRAY.01075<2> = 0
               BILL.ARRAY.00015=''
               BILL.ARRAY.00015<1> = 0
               BILL.ARRAY.00015<2> = 0
               BILL.ARRAY.00041=''
               BILL.ARRAY.00041<1> = 0
               BILL.ARRAY.00041<2> = 0


               BILL.CNT=0
               BILL.PER=0
               BILL.EOF=0
               LOOP
                  READNEXT BILL.ID FROM BILL.LIST ELSE BILL.EOF=1
               UNTIL BILL.EOF DO
                  BILL.CNT+=1
                  BILL.PCT=ICONV(BILL.CNT/NUM.BILLS*100,'MR2')
                  IF NOT(REM(BILL.CNT,10)) AND @TTY # "phantom" THEN
                     CRT @(0,10):@(-3):' #Bills - ':NUM.BILLS'R#12':' - ':BILL.CNT'R#15'
                  END
                  READ BILL.REC FROM F.BILL,BILL.ID THEN

                     CARRIER.ID=FIELD(BILL.ID,'*',1)
                     PRO=FIELD(BILL.ID,'*',2)
                     SEQ=FIELD(BILL.ID,'*',3)
                     IF SEQ#0 THEN CONTINUE
                     IF EFF.DT GT BILL.REC<1> THEN CONTINUE
                     BEGIN CASE
                        CASE CARRIER.ID = "01075" AND FEDEX.BILLS # "Y" AND PPP.CLIENT<12>=''
                           CONTINUE
                        CASE CARRIER.ID = "00015" AND FEDEX.BILLS # "Y" AND PPP.CLIENT<12>=''
                           CONTINUE
                        CASE CARRIER.ID = "00041" AND UPS.BILLS # "Y" AND PPP.CLIENT<12>=''
                           CONTINUE
                        CASE CARRIER.ID = "01312" AND UPS.BILLS # "Y" AND PPP.CLIENT<12>=''
                           CONTINUE
                        CASE 1
                     END CASE

                     IF BILL.REC<37>='' THEN
                        ERRORS<-1>='Missing Process Date for ':BILL.ID
                        ****       RETURN TO THE.END
                        CONTINUE
                     END

                     GOSUB DO.IT
                     IF MOD(BILL.CNT,10)=0 THEN
                        ** CRT @(0,22):@(-4):
                     END
                  END
SKIP.BILL:        *
               REPEAT
VOUT=""
              
*DFCALL ELINE('WRITING TOTALS')
               BILL.ARRAY.01075<1> = TOT.AMT.01075
                  VOUT<1> = TOT.AMT.01075
               TOT.AMT.01075 = 0
                WRITE BILL.ARRAY.01075 ON F.XREF,END.DATE:"*01075"
             
               BILL.ARRAY.00015<1> = TOT.AMT.00015
                VOUT<2> = TOT.AMT.00015
               TOT.AMT.00015 = 0
                WRITE BILL.ARRAY.00015 ON F.XREF,END.DATE:"*00015"
               
                  BILL.ARRAY.00041<1> = TOT.AMT.00041
                   VOUT<3> = TOT.AMT.00041
               TOT.AMT.00041 = 0
               WRITE BILL.ARRAY.00041 ON F.XREF,END.DATE:"*00041"

               IF TOT.NUM.BILLS+0#0 THEN
                  ** CRT @(0,22):@(-3):
               END
            END
         END
SKIP.CLIENT:*
    **  REPEAT
      GO THE.END
*******************************************************************
DO.IT:
*******************************************************************
  ***   DEBUG
     
     
      BEGIN CASE
         CASE CARRIER.ID = "01075"
            TOT.AMT.01075 =TOT.AMT.01075 + BILL.REC<8>
            BILL.ARRAY.01075<-1> = BILL.ID
         CASE CARRIER.ID = "00015"
            TOT.AMT.00015 =TOT.AMT.00015 + BILL.REC<8>
            BILL.ARRAY.00015<-1> = BILL.ID
            
         CASE CARRIER.ID = "00041"
            TOT.AMT.00041 =TOT.AMT.00041 + BILL.REC<8>
            BILL.ARRAY.00041<-1> = BILL.ID
      END CASE

      ***   TOT.AMT = TOT.AMT + BILL.REC<8>
      DUE.DT = BILL.REC<238>
      IF DUE.DT = "" AND CARRIER.ID = "00041" THEN
      DUE.DT = BILL.REC<1> + 30
      END
      TRACKING = PRO
     **** BILL.ARRAY<-1> = BILL.ID
      REC = ""
      REC<1> = DUE.DT
      REC<2> = BILL.REC<37>
      REC<3> = BILL.REC<8>
      WRITE REC ON F.PPP,BILL.ID
      RETURN
*****************************************************************
THE.END:***
****************************************************************

      IF ERRORS#'' THEN
         ERROR.CNT+=1
         IF ERROR.CNT>3 THEN
            MVIN=''
            MVIN<1>='nmeddaugh@afs.net'
            MVIN<4>='AFS@AFS.NET'
            MVIN<5>='PPP  Update Errors'
            TEXT='On ':DATE()'D2/':' ':OCONV(TIME(),'MTHS'):', ':USER:' updated '
            TEXT<1,-1>=ERRORS
            TEXT<1,-1>=' '
            TEXT<1,-1>=ERRORS
            MVIN<6>=TEXT
            MVIN<7>=1
            CALL SENDMAIL(MVIN,MVOUT)
         END ELSE
            **         WRITE ERRORS ON F.ERR,"SQL.FBHIST":TIMEDATE()
****            GO 10
         END
      END

      VIN1=''
      VIN1<1> = "UPD.SQL.FBHIST.T"
      VIN1<2> = USER
      VIN1<3> = SYSTEM(18)
      VIN1<4> = "E"
      **   CALL PROGTRACK(VIN1,VOUT1)
RETURN
      STOP
******************************************************
OPEN.FILES:
********************************************************

      OPEN 'FB.TABLES' TO F.TABLES ELSE
         CALL OPEN.ABORT("FB.TABLES",PROG.NAME)
      END
      OPEN 'CLIENTS' TO F.CLIENT ELSE
         CALL OPEN.ABORT("CLIENTS",PROG.NAME)
      END
      OPEN 'PPP.CLIENT' TO F.CLIENT.PPP ELSE
         CALL OPEN.ABORT("PPP.CLIENT",PROG.NAME)
      END
      OPEN 'ERRORS.LOG' TO F.ERR ELSE
         CALL OPEN.ABORT("ERRORS.LOG",PROG.NAME)
      END

      READ LI.CODE.REC FROM F.TABLES,'LI.CODES' ELSE LI.CODE.REC=''

      RETURN
   END
